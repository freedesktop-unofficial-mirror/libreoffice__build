Index: vcl/aqua/inc/salinst.h
===================================================================
RCS file: /cvs/gsl/vcl/aqua/inc/salinst.h,v
retrieving revision 1.13
retrieving revision 1.12.56.2
diff -u -p -u -p -r1.13 -r1.12.56.2
--- vcl/aqua/inc/salinst.h	9 Oct 2007 15:09:54 -0000	1.13
+++ vcl/aqua/inc/salinst.h	16 Oct 2007 08:32:39 -0000	1.12.56.2
@@ -126,7 +126,6 @@ public:
     virtual void			GetPrinterQueueState( SalPrinterQueueInfo* pInfo );
     virtual void			DeletePrinterQueueInfo( SalPrinterQueueInfo* pInfo );
     virtual String             GetDefaultPrinter();
-    virtual SalSound*			CreateSalSound();
     virtual SalTimer*			CreateSalTimer();
     virtual SalOpenGL*			CreateSalOpenGL( SalGraphics* pGraphics );
     virtual SalI18NImeStatus*	CreateI18NImeStatus();
#Index: vcl/aqua/inc/salsound.h
#===================================================================
#RCS file: vcl/aqua/inc/salsound.h
#diff -N vcl/aqua/inc/salsound.h
#--- vcl/aqua/inc/salsound.h	5 Jul 2007 15:57:25 -0000	1.3
#+++ /dev/null	1 Jan 1970 00:00:00 -0000
#@@ -1,109 +0,0 @@
#-/*************************************************************************
#-*
#-*  OpenOffice.org - a multi-platform office productivity suite
#-*
#-*  $RCSfile: salsound.h,v $
#-*
#-*  $Revision: 1.4 $
#-*
#-*  last change: $Author: kz $ $Date: 2007/10/09 15:11:21 $
#-*
#-*  The Contents of this file are made available subject to
#-*  the terms of GNU Lesser General Public License Version 2.1.
#-*
#-*
#-*    GNU Lesser General Public License Version 2.1
#-*    =============================================
#-*    Copyright 2005 by Sun Microsystems, Inc.
#-*    901 San Antonio Road, Palo Alto, CA 94303, USA
#-*
#-*    This library is free software; you can redistribute it and/or
#-*    modify it under the terms of the GNU Lesser General Public
#-*    License version 2.1, as published by the Free Software Foundation.
#-*
#-*    This library is distributed in the hope that it will be useful,
#-*    but WITHOUT ANY WARRANTY; without even the implied warranty of
#-*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#-*    Lesser General Public License for more details.
#-*
#-*    You should have received a copy of the GNU Lesser General Public
#-*    License along with this library; if not, write to the Free Software
#-*    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
#-*    MA  02111-1307  USA
#-*
#-************************************************************************/
#-
#-#ifndef _SV_SALSOUND_H
#-#define _SV_SALSOUND_H
#-
#-//#ifndef _SV_WINCOMP_HXX
#-//#include <wincomp.hxx>
#-//#endif
#-
#-#ifndef _GEN_HXX
#-#include <tools/gen.hxx>
#-#endif
#-#ifndef _STRING_HXX
#-#include <tools/string.hxx>
#-#endif
#-
#-#ifndef _SV_SV_H
#-#include <vcl/sv.h>
#-#endif
#-
#-#include <osl/module.h>
#-
#-#ifndef _SV_SALFRAME_HXX
#-#include <vcl/salframe.hxx>
#-#endif
#-#ifndef _SV_SALSTYPE_HXX
#-#include <vcl/salstype.hxx>
#-#endif
#-#ifndef _SV_SALSOUND_HXX
#-#include <vcl/salsound.hxx>
#-#endif
#-
#-// ------------
#-// - SalSound -
#-// ------------
#-
#-class AquaSalSound : public SalSound
#-{
#-private:
#-//	static oslModule	mhMCILib;
#-	static ULONG		mnSoundState;
#-	SALSOUNDPROC		mpProc;
#-//	static void*		mpMCIFnc;
#-//	ULONG				mnStartTime;
#-//	ULONG				mnPlayLen;
#-//	HWND				mhSoundWnd;
#-//	UINT				mnDeviceId;
#-	bool				mbLoop;
#-	bool				mbPaused;
#-    
#-public:
#-    void				ImplSetError( int nMciErr );
#-	void				ImplNotify( SoundNotification eNotification, ULONG nError );
#-    
#-public:
#-        AquaSalSound();
#-    virtual ~AquaSalSound();
#-    
#-    virtual bool		IsValid();
#-    virtual bool		Init( const String&	rSoundName,
#-                              ULONG&		rSoundLen );
#-   	virtual void		Play( ULONG nStartTime, ULONG nPlayTime, bool bLoop );
#-	virtual void		Stop();
#-	virtual void		Pause();
#-	virtual void		Continue();
#-    virtual bool		IsLoopMode() const;
#-	virtual bool		IsPlaying() const;
#-    virtual bool		IsPaused() const;
#-    
#-    
#-	bool				ImplCreate();
#-	void				ImplDestroy();
#-	static void 		Release();
#-};
#-
#-#endif // _SV_SALSOUND_H
#Index: vcl/aqua/inc/salsound.hxx
#===================================================================
#RCS file: vcl/aqua/inc/salsound.hxx
#diff -N vcl/aqua/inc/salsound.hxx
#--- vcl/aqua/inc/salsound.hxx	27 Jun 2007 19:50:41 -0000	1.6
#+++ /dev/null	1 Jan 1970 00:00:00 -0000
#@@ -1,88 +0,0 @@
#-/*************************************************************************
#- *
#- *  OpenOffice.org - a multi-platform office productivity suite
#- *
#- *  $RCSfile: salsound.hxx,v $
#- *
#- *  $Revision: 1.7 $
#- *
#- *  last change: $Author: kz $ $Date: 2007/10/09 15:11:34 $
#- *
#- *  The Contents of this file are made available subject to
#- *  the terms of GNU Lesser General Public License Version 2.1.
#- *
#- *
#- *    GNU Lesser General Public License Version 2.1
#- *    =============================================
#- *    Copyright 2005 by Sun Microsystems, Inc.
#- *    901 San Antonio Road, Palo Alto, CA 94303, USA
#- *
#- *    This library is free software; you can redistribute it and/or
#- *    modify it under the terms of the GNU Lesser General Public
#- *    License version 2.1, as published by the Free Software Foundation.
#- *
#- *    This library is distributed in the hope that it will be useful,
#- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
#- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#- *    Lesser General Public License for more details.
#- *
#- *    You should have received a copy of the GNU Lesser General Public
#- *    License along with this library; if not, write to the Free Software
#- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
#- *    MA  02111-1307  USA
#- *
#- ************************************************************************/
#-
#-#ifndef _SV_SALSOUND_HXX
#-#define _SV_SALSOUND_HXX
#-
#-#ifndef _GEN_HXX
#-#include <tools/gen.hxx>
#-#endif
#-#ifndef _STRING_HXX
#-#include <tools/string.hxx>
#-#endif
#-
#-#ifndef _SV_SV_H
#-#include <vcl/sv.h>
#-#endif
#-
#-#ifndef _SV_SALFRAME_HXX
#-#include <vcl/salframe.hxx>
#-#endif
#-#ifndef _SV_SALSTYPE_HXX
#-#include <vcl/salstype.hxx>
#-#endif
#-
#-// ------------
#-// - SalSound -
#-// ------------
#-
#-class SalSound
#-{
#-private:
#-	static ULONG		mnSoundState;
#-	SALSOUNDPROC		mpProc;
#-	void*				mpInst;
#-	BOOL				mbLoop;
#-	BOOL				mbPaused;
#-
#-public:
#-						SalSound();
#-						~SalSound();
#-
#-	BOOL				Create();
#-	static void 		Release();
#-	static BOOL 		IsValid() { return( SOUND_STATE_VALID == SalSound::mnSoundState ); }
#-
#-	BOOL				Init( SalFrame* pFrame, const String& rSoundName, ULONG& rSoundLen );
#-	BOOL				Init( SalFrame* pFrame, const BYTE* pSound, ULONG nDataLen, ULONG& rSoundLen );
#-	void				Play( ULONG nStartTime, ULONG nPlayTime, BOOL bLoop );
#-	void				Stop();
#-	void				Pause();
#-
#-	void				SetNotifyProc( void* pInst, SALSOUNDPROC pProc )
#-							{ mpInst = pInst; mpProc = pProc; }
#-};
#-
#-#endif // _SV_SALSOUND_HXX
Index: vcl/aqua/source/app/makefile.mk
===================================================================
RCS file: /cvs/gsl/vcl/aqua/source/app/makefile.mk,v
retrieving revision 1.14
retrieving revision 1.14.56.1
diff -u -p -u -p -r1.14 -r1.14.56.1
--- vcl/aqua/source/app/makefile.mk	5 Jul 2007 08:18:05 -0000	1.14
+++ vcl/aqua/source/app/makefile.mk	31 Aug 2007 09:44:56 -0000	1.14.56.1
Index: vcl/aqua/source/app/salinst.cxx
===================================================================
RCS file: /cvs/gsl/vcl/aqua/source/app/salinst.cxx,v
retrieving revision 1.40
retrieving revision 1.38.10.3
@@ -58,7 +58,6 @@
 
 SLOFILES=   $(SLO)$/salinst.obj			\
 			$(SLO)$/saltimer.obj		\
-			$(SLO)$/salsound.obj		\
 			$(SLO)$/salsys.obj
 
 .ENDIF		# "$(GUIBASE)"!="aqua"
diff -u -p -u -p -r1.40 -r1.38.10.3
--- vcl/aqua/source/app/salinst.cxx	9 Oct 2007 15:12:57 -0000	1.40
+++ vcl/aqua/source/app/salinst.cxx	16 Oct 2007 08:32:33 -0000	1.38.10.3
@@ -938,13 +938,6 @@ void* AquaSalInstance::GetConnectionIden
 
 // -----------------------------------------------------------------------
 
-SalSound* AquaSalInstance::CreateSalSound()
-{
-    return new AquaSalSound();
-}
-
-// -----------------------------------------------------------------------
-
 SalTimer* AquaSalInstance::CreateSalTimer()
 {
     return new AquaSalTimer();
Index: vcl/inc/vcl/salinst.hxx
===================================================================
RCS file: /cvs/gsl/vcl/inc/vcl/salinst.hxx,v
retrieving revision 1.2
retrieving revision 1.2.136.1
diff -u -p -u -p -r1.2 -r1.2.136.1
--- vcl/inc/vcl/salinst.hxx	11 Apr 2007 18:07:19 -0000	1.2
+++ vcl/inc/vcl/salinst.hxx	31 Aug 2007 09:44:56 -0000	1.2.136.1
@@ -60,7 +60,6 @@ struct ImplJobSetup;
 class SalGraphics;
 class SalFrame;
 class SalObject;
-class SalSound;
 class SalOpenGL;
 class SalMenu;
 class SalMenuItem;
@@ -136,8 +135,6 @@ public:
     virtual void				DeletePrinterQueueInfo( SalPrinterQueueInfo* pInfo ) = 0;
     virtual String             GetDefaultPrinter() = 0;
 
-    // SalSound
-    virtual SalSound*			CreateSalSound() = 0;
     // SalTimer
     virtual SalTimer*			CreateSalTimer() = 0;
     // SalOpenGL
Index: vcl/inc/vcl/salsound.hxx
===================================================================
RCS file: vcl/inc/vcl/salsound.hxx
diff -N vcl/inc/vcl/salsound.hxx
--- vcl/inc/vcl/salsound.hxx	11 Apr 2007 18:08:49 -0000	1.2
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,97 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: salsound.hxx,v $
- *
- *  $Revision: 1.2 $
- *
- *  last change: $Author: vg $ $Date: 2007/04/11 18:08:49 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-#ifndef _SV_SALSOUND_HXX
-#define _SV_SALSOUND_HXX
-
-#ifndef _GEN_HXX
-#include <tools/gen.hxx>
-#endif
-#ifndef _SV_SV_H
-#include <vcl/sv.h>
-#endif
-#ifndef _VCL_DLLAPI_H
-#include <vcl/dllapi.h>
-#endif
-
-#ifndef _STRING_HXX
-#include <tools/string.hxx>
-#endif
-#ifndef _SV_SALSTYPE_HXX
-#include <vcl/salstype.hxx>
-#endif
-
-class VCL_DLLPUBLIC SalSound
-{
-	// for notification
-	void*					m_pInst;
-	SALSOUNDPROC			m_aPROC;
-public:
-    SalSound() : m_pInst( NULL ), m_aPROC( NULL ) {}
-    virtual ~SalSound();
-
-    // checks whether sound system is ready for input and hence
-    // SalSound can be initialized
-    virtual bool		IsValid() = 0;
-    // initialize with sound file name, returns success and // FIXME: rSoundLen ?
-    virtual bool		Init( const String&	rSoundName,
-                              ULONG&		rSoundLen ) = 0;
-    // play the sound, start at nStartTime (ms), play for nPlayTime (ms),
-	// loop = true/false
-   	virtual void		Play( ULONG nStartTime, ULONG nPlayTime, bool bLoop ) = 0;
-    // stop playing
-	virtual void		Stop() = 0;
-    // pause playing
-	virtual void		Pause() = 0;
-    // continue a paused play
-	virtual void		Continue() = 0;
-    // is looping ?
-    virtual bool		IsLoopMode() const = 0;
-    // is playing ?
-	virtual bool		IsPlaying() const = 0;
-    // is paused ?
-    virtual bool		IsPaused() const = 0;
-
-    // register a callback to be called when state changes
-	void		SetNotifyProc( void* pInst, SALSOUNDPROC pProc )
-    { m_pInst = pInst; m_aPROC = pProc; }
-    void		CallNotifyProc( SoundNotification eNotification, ULONG nError )
-    {
-        if( m_aPROC )
-            m_aPROC( m_pInst, eNotification, nError );
-    }
-};
-
-#endif
Index: vcl/inc/vcl/salstype.hxx
===================================================================
RCS file: vcl/inc/vcl/salstype.hxx
diff -N vcl/inc/vcl/salstype.hxx
--- vcl/inc/vcl/salstype.hxx	11 Apr 2007 18:08:58 -0000	1.2
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,92 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: salstype.hxx,v $
- *
- *  $Revision: 1.2 $
- *
- *  last change: $Author: vg $ $Date: 2007/04/11 18:08:58 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-#ifndef _SV_SALSTYPE_HXX
-#define _SV_SALSTYPE_HXX
-
-#ifndef _GEN_HXX
-#include <tools/gen.hxx>
-#endif
-
-// -----------------
-// - Sound defines -
-// -----------------
-
-#define SOUND_PLAYALL			(0xFFFFFFFFUL)
-
-// -----------------
-// - State defines -
-// -----------------
-
-#define SOUND_STATE_UNLOADED	(0x00000000UL)
-#define SOUND_STATE_INVALID		(0x00000001UL)
-#define	SOUND_STATE_VALID		(0x00000002UL)
-
-// ---------------------
-// - SoundNotification -
-// ---------------------
-
-enum SoundNotification 
-{
-	SOUND_NOTIFY_NOTHING, 
-	SOUND_NOTIFY_SUCCESS,
-	SOUND_NOTIFY_ABORTED,
-	SOUND_NOTIFY_ERROR 
-};
-
-// ---------------
-// - SoundErrors -
-// ---------------
-
-#define SOUNDERR_SUCCESS                (0x00000000UL)
-#define SOUNDERR_GENERAL_ERROR          (0x00000001UL)
-#define SOUNDERR_CANNOT_LOAD_DRIVER     (0x00000003UL)
-#define SOUNDERR_DEVICE_LOCKED          (0x00000004UL)
-#define SOUNDERR_SOUND_NOT_FOUND        (0x00000005UL)
-#define SOUNDERR_HARDWARE_ERROR         (0x00000006UL)
-#define SOUNDERR_OUT_OF_MEMORY          (0x00000007UL)
-#define SOUNDERR_UNSUPPORTED_FUNCTION   (0x00000008UL)
-#define SOUNDERR_DEVICE_NOT_FOUND       (0x00000009UL)
-#define SOUNDERR_DEVICE_NOT_READY       (0x0000000aUL)
-#define SOUNDERR_CANNOT_READ_SOUND      (0x0000000bUL)
-#define SOUNDERR_INVALID_FILE           (0x0000000cUL)
-
-// ------------------
-// - Sound-Callback	-
-// ------------------
-
-typedef void (*SALSOUNDPROC)( void* pInst, SoundNotification eNotification, ULONG nError );
-
-#endif // _SV_SALSTYPE_HXX
Index: vcl/inc/vcl/settings.hxx
===================================================================
RCS file: /cvs/gsl/vcl/inc/vcl/settings.hxx,v
retrieving revision 1.3
retrieving revision 1.3.86.1
diff -u -p -u -p -r1.3 -r1.3.86.1
--- vcl/inc/vcl/settings.hxx	4 Jun 2007 14:57:34 -0000	1.3
+++ vcl/inc/vcl/settings.hxx	31 Aug 2007 09:44:56 -0000	1.3.86.1
@@ -1019,55 +1019,6 @@ public:
                                         { return !(*this == rSet); }
 };
 
-// -----------------
-// - ImplSoundData -
-// -----------------
-
-class ImplSoundData
-{
-    friend class SoundSettings;
-
-                                    ImplSoundData();
-                                    ImplSoundData( const ImplSoundData& rData );
-
-private:
-    ULONG                           mnRefCount;
-    ULONG                           mnOptions;
-};
-
-// -----------------
-// - SoundSettings -
-// -----------------
-
-#define SOUND_OPTION_ON             ((ULONG)0x00000001)
-#define SOUND_OPTION_NOTIFYBEEP     ((ULONG)0x00000002)
-#define SOUND_OPTION_WARNINGBEEP    ((ULONG)0x00000004)
-#define SOUND_OPTION_ERRORBEEP      ((ULONG)0x00000008)
-
-class VCL_DLLPUBLIC SoundSettings
-{
-    void                            CopyData();
-
-private:
-    ImplSoundData*                  mpData;
-
-public:
-                                    SoundSettings();
-                                    SoundSettings( const SoundSettings& rSet );
-                                    ~SoundSettings();
-
-    void                            SetOptions( ULONG nOptions )
-                                        { CopyData(); mpData->mnOptions = nOptions; }
-    ULONG                           GetOptions() const
-                                        { return mpData->mnOptions; }
-
-    const SoundSettings&            operator =( const SoundSettings& rSet );
-
-    BOOL                            operator ==( const SoundSettings& rSet ) const;
-    BOOL                            operator !=( const SoundSettings& rSet ) const
-                                        { return !(*this == rSet); }
-};
-
 // ------------------------
 // - ImplNotificationData -
 // ------------------------
@@ -1193,7 +1144,6 @@ private:
     KeyboardSettings                        maKeyboardSettings;
     StyleSettings                           maStyleSettings;
     MiscSettings                            maMiscSettings;
-    SoundSettings                           maSoundSettings;
     NotificationSettings                    maNotificationSettings;
     HelpSettings                            maHelpSettings;
     ::com::sun::star::lang::Locale          maLocale;
@@ -1272,11 +1222,6 @@ public:
     const MiscSettings&                     GetMiscSettings() const
                                                 { return mpData->maMiscSettings; }
 
-    void                                    SetSoundSettings( const SoundSettings& rSet )
-                                                { CopyData(); mpData->maSoundSettings = rSet; }
-    const SoundSettings&                    GetSoundSettings() const
-                                                { return mpData->maSoundSettings; }
-
     void                                    SetNotificationSettings( const NotificationSettings& rSet )
                                                 { CopyData(); mpData->maNotificationSettings = rSet; }
     const NotificationSettings&             GetNotificationSettings() const
Index: vcl/inc/vcl/sound.hxx
===================================================================
RCS file: /cvs/gsl/vcl/inc/vcl/sound.hxx,v
retrieving revision 1.2
retrieving revision 1.2.136.1
diff -u -p -u -p -r1.2 -r1.2.136.1
--- vcl/inc/vcl/sound.hxx	11 Apr 2007 18:11:10 -0000	1.2
+++ vcl/inc/vcl/sound.hxx	31 Aug 2007 09:44:56 -0000	1.2.136.1
@@ -53,14 +53,9 @@
 #ifndef _TIME_HXX
 #include <tools/time.hxx>
 #endif
-#ifndef _SV_SALSTYPE_HXX
-#include <vcl/salstype.hxx>
-#endif
 
 class Window;
 class Timer;
-class SalSound;
-class RMSound;
 
 // ---------
 // - Sound -
@@ -68,70 +63,8 @@ class RMSound;
 
 class VCL_DLLPUBLIC Sound
 {
-private:
-
-	SalSound*			mpSound;
-	XubString			maSoundName;
-	Window* 			mpWindow;
-	BYTE*				mpSoundData_NOTUSED;
-	ULONG				mnDataLen;
-	ULONG				mnSoundLen;
-	ULONG				mnStartTime;
-	ULONG				mnPlayTime;
-	ULONG				mnErrorCode;
-	SoundNotification	meNotification;
-	BOOL				mbPlaying;
-	BOOL				mbLoopMode;
-    Link                maNotifyHdl;
-	void*				mpExtraData;
-
-private:
-
-                        Sound( const Sound& rSound );
-    Sound&              operator=( const Sound& rSound );
-
-//#if 0 // _SOLAR__PRIVATE
 public:
-	SAL_DLLPRIVATE void	ImplNotify( SoundNotification eNotification, ULONG nError );
-//#endif // __PRIVATE
-
-public:
-                        Sound( Window* pWindow = NULL );
-    virtual             ~Sound();
-
-    virtual void        Notify();
-
-	void				SetWindow( Window* pWindow ) { mpWindow = pWindow; }
-	Window* 			GetWindow() const { return mpWindow; }
-	BOOL				SetSoundName( const XubString& rSoundName );
-	const XubString& 	GetSoundName() const { return maSoundName; }
-	ULONG				GetSoundLen() const { return mnSoundLen; }
-
-    void				Play();
-	void				Stop();
-	void				Pause();
-    BOOL                IsPlaying() const { return mbPlaying; }
-
-	void				SetStartTime( ULONG nStartTime = 0 );
-	ULONG				GetStartTime() const { return mnStartTime; }
-	void				SetPlayTime( ULONG nPlayTime = SOUND_PLAYALL );
-	ULONG				GetPlayTime() const { return mnPlayTime; }
-	void				SetLoopMode( BOOL bLoop );
-	BOOL				IsLoopMode() const { return mbLoopMode; }
-
-    void                ClearError();
-    ULONG               GetLastError() const { return mnErrorCode; }
-    SoundNotification   GetNotification() const { return meNotification; }
-
-    void                SetNotifyHdl( const Link& rLink ) { maNotifyHdl = rLink; }
-    const Link&         GetNotifyHdl() const { return maNotifyHdl; }
-
     static void         Beep( SoundType eType = SOUND_DEFAULT, Window* pWindow = NULL );
-
-	static void			SetSoundPath( const XubString& rSoundPath );
-	static const XubString&	GetSoundPath();
-
-    static BOOL         IsSoundFile( const XubString& rSoundPath );
 };
 
 #endif // _SV_SOUND_HXX
Index: vcl/prj/build.lst
===================================================================
RCS file: /cvs/gsl/vcl/prj/build.lst,v
retrieving revision 1.55
retrieving revision 1.54.20.2
diff -u -p -u -p -r1.55 -r1.54.20.2
--- vcl/prj/build.lst	20 Sep 2007 16:24:09 -0000	1.55
+++ vcl/prj/build.lst	4 Oct 2007 22:03:55 -0000	1.54.20.2
@@ -1,4 +1,4 @@
-vc	vcl	:	BOOST:boost NAS:nas FREETYPE:freetype psprint rsc sot ucbhelper unotools ICU:icu i18npool unoil ridljar X11_EXTENSIONS:x11_extensions offuh basegfx basebmp SNDFILE:sndfile PORTAUDIO:portaudio tools transex3 NULL
+vc	vcl	:	BOOST:boost FREETYPE:freetype psprint rsc sot ucbhelper unotools ICU:icu i18npool unoil ridljar X11_EXTENSIONS:x11_extensions offuh basegfx basebmp tools transex3 NULL
 vc	vcl										usr1	-	all	vc_mkout NULL
 vc	vcl\inc									nmake	-	all	vc_inc NULL
 vc	vcl\source\glyphs						nmake	-	all	vc_glyphs vc_inc NULL
Index: vcl/source/app/makefile.mk
===================================================================
RCS file: /cvs/gsl/vcl/source/app/makefile.mk,v
retrieving revision 1.21
retrieving revision 1.21.158.1
diff -u -p -u -p -r1.21 -r1.21.158.1
--- vcl/source/app/makefile.mk	6 Feb 2007 14:18:13 -0000	1.21
+++ vcl/source/app/makefile.mk	31 Aug 2007 09:44:57 -0000	1.21.158.1
@@ -48,10 +48,6 @@ ENABLE_EXCEPTIONS=TRUE
 
 CDEFS+=-DDLLPOSTFIX=$(DLLPOSTFIX)
 
-.IF "$(SYSTEM_NAS)"=="YES"
-CFLAGS+=-I$(NAS_INCLUDES)
-.ENDIF
-
 # --- Files --------------------------------------------------------
 
 SLOFILES=	$(SLO)$/dbggui.obj		\
Index: vcl/source/app/salvtables.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/app/salvtables.cxx,v
retrieving revision 1.9
retrieving revision 1.8.22.2
diff -u -p -u -p -r1.9 -r1.8.22.2
--- vcl/source/app/salvtables.cxx	9 Oct 2007 15:19:13 -0000	1.9
+++ vcl/source/app/salvtables.cxx	16 Oct 2007 08:32:24 -0000	1.8.22.2
@@ -41,7 +41,6 @@
 #include <vcl/salvd.hxx>
 #include <vcl/salprn.hxx>
 #include <vcl/saltimer.hxx>
-#include <vcl/salsound.hxx>
 #include <vcl/salogl.hxx>
 #include <vcl/salimestatus.hxx>
 #include <vcl/salsys.hxx>
@@ -61,10 +60,6 @@ SalInstance::~SalInstance()
 {
 }
 
-SalSound::~SalSound()
-{
-}
-
 SalTimer::~SalTimer()
 {
 }
Index: vcl/source/app/settings.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/app/settings.cxx,v
retrieving revision 1.72
retrieving revision 1.72.20.1
diff -u -p -u -p -r1.72 -r1.72.20.1
--- vcl/source/app/settings.cxx	24 Jul 2007 10:04:42 -0000	1.72
+++ vcl/source/app/settings.cxx	31 Aug 2007 09:44:57 -0000	1.72.20.1
@@ -1311,98 +1311,6 @@ BOOL MiscSettings::GetEnableLocalizedDec
     return mpData->mbEnableLocalizedDecimalSep;
 }
 
-
-
-// =======================================================================
-
-ImplSoundData::ImplSoundData()
-{
-    mnRefCount                  = 1;
-    mnOptions                   = 0;
-}
-
-// -----------------------------------------------------------------------
-
-ImplSoundData::ImplSoundData( const ImplSoundData& rData )
-{
-    mnRefCount                  = 1;
-    mnOptions                   = rData.mnOptions;
-}
-
-// -----------------------------------------------------------------------
-
-SoundSettings::SoundSettings()
-{
-    mpData = new ImplSoundData();
-}
-
-// -----------------------------------------------------------------------
-
-SoundSettings::SoundSettings( const SoundSettings& rSet )
-{
-    DBG_ASSERT( rSet.mpData->mnRefCount < 0xFFFFFFFE, "SoundSettings: RefCount overflow" );
-
-    // shared Instance Daten uebernehmen und Referenzcounter erhoehen
-    mpData = rSet.mpData;
-    mpData->mnRefCount++;
-}
-
-// -----------------------------------------------------------------------
-
-SoundSettings::~SoundSettings()
-{
-    // Daten loeschen, wenn letzte Referenz
-    if ( mpData->mnRefCount == 1 )
-        delete mpData;
-    else
-        mpData->mnRefCount--;
-}
-
-// -----------------------------------------------------------------------
-
-const SoundSettings& SoundSettings::operator =( const SoundSettings& rSet )
-{
-    DBG_ASSERT( rSet.mpData->mnRefCount < 0xFFFFFFFE, "SoundSettings: RefCount overflow" );
-
-    // Zuerst Referenzcounter erhoehen, damit man sich selbst zuweisen kann
-    rSet.mpData->mnRefCount++;
-
-    // Daten loeschen, wenn letzte Referenz
-    if ( mpData->mnRefCount == 1 )
-        delete mpData;
-    else
-        mpData->mnRefCount--;
-
-    mpData = rSet.mpData;
-
-    return *this;
-}
-
-// -----------------------------------------------------------------------
-
-void SoundSettings::CopyData()
-{
-    // Falls noch andere Referenzen bestehen, dann kopieren
-    if ( mpData->mnRefCount != 1 )
-    {
-        mpData->mnRefCount--;
-        mpData = new ImplSoundData( *mpData );
-    }
-}
-
-// -----------------------------------------------------------------------
-
-BOOL SoundSettings::operator ==( const SoundSettings& rSet ) const
-{
-    if ( mpData == rSet.mpData )
-        return TRUE;
-
-    if ( (mpData->mnOptions             == rSet.mpData->mnOptions) )
-        return TRUE;
-    else
-        return FALSE;
-}
-
 // =======================================================================
 
 ImplNotificationData::ImplNotificationData()
@@ -1625,7 +1533,6 @@ ImplAllSettingsData::ImplAllSettingsData
     maKeyboardSettings( rData.maKeyboardSettings ),
     maStyleSettings( rData.maStyleSettings ),
     maMiscSettings( rData.maMiscSettings ),
-    maSoundSettings( rData.maSoundSettings ),
     maNotificationSettings( rData.maNotificationSettings ),
     maHelpSettings( rData.maHelpSettings ),
     maLocale( rData.maLocale ),
@@ -1795,16 +1702,6 @@ ULONG AllSettings::Update( ULONG nFlags,
         }
     }
 
-    if ( nFlags & SETTINGS_SOUND )
-    {
-        if ( mpData->maSoundSettings != rSet.mpData->maSoundSettings )
-        {
-            CopyData();
-            mpData->maSoundSettings = rSet.mpData->maSoundSettings;
-            nChangeFlags |= SETTINGS_SOUND;
-        }
-    }
-
     if ( nFlags & SETTINGS_NOTIFICATION )
     {
         if ( mpData->maNotificationSettings != rSet.mpData->maNotificationSettings )
@@ -1876,9 +1773,6 @@ ULONG AllSettings::GetChangeFlags( const
     if ( mpData->maMiscSettings != rSet.mpData->maMiscSettings )
         nChangeFlags |= SETTINGS_MISC;
 
-    if ( mpData->maSoundSettings != rSet.mpData->maSoundSettings )
-        nChangeFlags |= SETTINGS_SOUND;
-
     if ( mpData->maNotificationSettings != rSet.mpData->maNotificationSettings )
         nChangeFlags |= SETTINGS_NOTIFICATION;
 
@@ -1909,7 +1803,6 @@ BOOL AllSettings::operator ==( const All
          (mpData->maKeyboardSettings        == rSet.mpData->maKeyboardSettings)     &&
          (mpData->maStyleSettings           == rSet.mpData->maStyleSettings)        &&
          (mpData->maMiscSettings            == rSet.mpData->maMiscSettings)         &&
-         (mpData->maSoundSettings           == rSet.mpData->maSoundSettings)        &&
          (mpData->maNotificationSettings    == rSet.mpData->maNotificationSettings) &&
          (mpData->maHelpSettings            == rSet.mpData->maHelpSettings)         &&
          (mpData->mnSystemUpdate            == rSet.mpData->mnSystemUpdate)         &&
Index: vcl/source/app/sound.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/app/sound.cxx,v
retrieving revision 1.14
retrieving revision 1.14.60.1
diff -u -p -u -p -r1.14 -r1.14.60.1
--- vcl/source/app/sound.cxx	27 Jun 2007 20:02:09 -0000	1.14
+++ vcl/source/app/sound.cxx	31 Aug 2007 09:44:57 -0000	1.14.60.1
@@ -48,9 +48,6 @@
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
-#ifndef _SV_SALSOUND_HXX
-#include <vcl/salsound.hxx>
-#endif
 #ifndef _SV_SALFRAME_HXX
 #include <vcl/salframe.hxx>
 #endif
@@ -63,9 +60,6 @@
 #ifndef _SV_WINDOW_HXX
 #include <vcl/window.hxx>
 #endif
-#ifndef _SV_SALSOUND_HXX
-#include <vcl/salsound.hxx>
-#endif
 #ifndef _SV_SALBTYPE_HXX
 #include <vcl/salbtype.hxx>
 #endif
@@ -76,194 +70,6 @@
 #include <vcl/salinst.hxx>
 #endif
 
-
-
-// ----------------------
-// - SalSound-Callback	-
-// ----------------------
-
-void SalSoundProc( void* pInst, SoundNotification eNotification, ULONG nError )
-{
-	( (Sound*) pInst )->ImplNotify( eNotification, nError );
-}
-
-// ---------
-// - Sound -
-// ---------
-
-Sound::Sound( Window* pWindow ) :
-			mpWindow		( pWindow ),
-			mnDataLen		( 0UL ),
-			mnSoundLen		( 0UL ),
-			mnStartTime		( 0UL ),
-			mnPlayTime		( SOUND_PLAYALL ),
-			mnErrorCode		( 0UL ),
-			meNotification	( SOUND_NOTIFY_SUCCESS ),
-			mbPlaying		( FALSE ),
-			mbLoopMode		( FALSE )
-{
-	mpSound = ImplGetSVData()->mpDefInst->CreateSalSound();
-
-	if( mpSound->IsValid() )
-		mpSound->SetNotifyProc( this, SalSoundProc );
-}
-
-// -----------------------------------------------------------------------
-
-Sound::~Sound()
-{
-	delete mpSound;
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::ImplNotify( SoundNotification eNotification, ULONG nError )
-{
-	meNotification = eNotification;
-	mbPlaying = FALSE;
-
-	if( SOUND_NOTIFY_ERROR == meNotification )
-		mnErrorCode = nError;
-
-	Notify();
-
-	if( maNotifyHdl.IsSet() )
-		maNotifyHdl.Call( this );
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::Notify()
-{
-}
-
-// -----------------------------------------------------------------------
-
-BOOL Sound::SetSoundName( const XubString& rSoundName )
-{
-	BOOL bRet( FALSE );
-
-	if( !rSoundName.Len() )
-	{
-		mnDataLen = 0UL;
-		mnSoundLen = 0UL;
-		mnStartTime = 0UL;
-		mnPlayTime = SOUND_PLAYALL;
-		mnErrorCode = 0UL;
-		meNotification = SOUND_NOTIFY_SUCCESS;
-		mbPlaying = FALSE;
-		mbLoopMode = FALSE;
-		bRet = TRUE;
-
-		mpSound->Init( rSoundName, mnSoundLen );
-	}
-	else if( mpSound->IsValid() )
-	{
-		INetURLObject	aSoundURL( rSoundName );
-		String			aSoundName, aTmp;
-        BOOL            bValidName( FALSE );
-
-        // #106654# Accept only local sound files
-		if( aSoundURL.GetProtocol() == INET_PROT_FILE )
-		{
-			utl::LocalFileHelper::ConvertURLToPhysicalName( aSoundURL.GetMainURL( INetURLObject::NO_DECODE ), aSoundName );
-            bValidName = TRUE;
-		}
-		else if( aSoundURL.GetProtocol() == INET_PROT_NOT_VALID &&
-                 ::utl::LocalFileHelper::ConvertPhysicalNameToURL( rSoundName, aTmp ) )
-        {
-            aSoundName = rSoundName;
-            bValidName = TRUE;
-        }
-		else
-		{
-            // no valid sound file name
-			aSoundName = String();
-
-            // #106654# Don't set bRet to true for invalid sound file
-            // names, but init with empty string, anyway
-		    mpSound->Init( aSoundName, mnSoundLen );
-		}
-
-        if( bValidName )
-		    bRet = mpSound->Init( aSoundName, mnSoundLen );
-	}
-
-	maSoundName = rSoundName;
-
-	// if sound could not be initialized, but we've gotten _no_
-	// notification ==> create common error notification
-	if( !bRet && !mnErrorCode )
-		ImplNotify( SOUND_NOTIFY_ERROR, SOUNDERR_GENERAL_ERROR );
-
-	return bRet;
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::SetStartTime( ULONG nStartTime ) 
-{
-	mnStartTime = nStartTime;
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::SetPlayTime( ULONG nPlayTime )
-{
-	mnPlayTime = nPlayTime; 
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::SetLoopMode( BOOL bLoop ) 
-{
-	mbLoopMode = bLoop; 
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::ClearError() 
-{
-	mnErrorCode = 0; 
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::Play()
-{
-	BOOL bRet;
-
-	if( mpSound->IsValid() && !mnErrorCode )
-	{
-		mpSound->Play( mnStartTime, mnPlayTime, mbLoopMode );
-        mbPlaying = TRUE;
-	}
-	else
-		bRet = FALSE;
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::Stop()
-{
-	mbPlaying = FALSE;
-	
-	if( mpSound->IsValid() )
-		mpSound->Stop();
-}
-
-// -----------------------------------------------------------------------
-
-void Sound::Pause()
-{
-	mbPlaying = FALSE;
-	
-	if( mpSound->IsValid() )
-		mpSound->Pause();
-}
-
-// -----------------------------------------------------------------------
-
 void Sound::Beep( SoundType eType, Window* pWindow )
 {
     if( !pWindow )
@@ -274,62 +80,3 @@ void Sound::Beep( SoundType eType, Windo
     else
         pWindow->ImplGetFrame()->Beep( eType );
 }
-
-// -----------------------------------------------------------------------
-
-void Sound::SetSoundPath( const XubString& )
-{
-}
-
-// -----------------------------------------------------------------------
-
-const XubString& Sound::GetSoundPath()
-{
-	return ImplGetSVEmptyStr();
-}
-
-// -----------------------------------------------------------------------
-
-BOOL Sound::IsSoundFile( const XubString& rSoundPath )
-{
-    BOOL bRet = FALSE;
-
-    if( rSoundPath.Len() )
-    {
-		INetURLObject	aSoundURL( rSoundPath );
-		String			aSoundName;
-
-		if( aSoundURL.GetProtocol() != INET_PROT_NOT_VALID )
-			aSoundName = aSoundURL.GetMainURL( INetURLObject::NO_DECODE );
-		else if( !::utl::LocalFileHelper::ConvertPhysicalNameToURL( rSoundPath, aSoundName ) )
-			aSoundName.Erase();
-
-        if( aSoundName.Len() )
-        {
-            SvStream* pIStm = ::utl::UcbStreamHelper::CreateStream( aSoundName, STREAM_READ );
-
-            if( pIStm )
-            {
-                sal_Char aData[ 12 ];
-
-                if( ( pIStm->Read( aData, 12 ) == 12 ) && !pIStm->GetError() )
-                {
-                    // check for WAV
-                    bRet = ( aData[ 0 ] == 'R' && aData[ 1 ] == 'I' && aData[ 2 ] == 'F' && aData[ 3 ] == 'F' &&
-                             aData[ 8 ] == 'W' && aData[ 9 ] == 'A' && aData[ 10 ] == 'V' && aData[ 11 ] == 'E' );
-                }
-
-                delete pIStm;
-            }
-
-            if( !bRet )
-            {
-                // check it the hard way
-                Sound aTestSound;
-                bRet = aTestSound.SetSoundName( rSoundPath );
-            }
-        }
-    }
-
-    return bRet;
-}
Index: vcl/source/app/svmain.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/app/svmain.cxx,v
retrieving revision 1.70
retrieving revision 1.70.22.1
diff -u -p -u -p -r1.70 -r1.70.22.1
--- vcl/source/app/svmain.cxx	24 Jul 2007 10:05:33 -0000	1.70
+++ vcl/source/app/svmain.cxx	31 Aug 2007 09:44:57 -0000	1.70.22.1
@@ -57,9 +57,6 @@
 #ifndef _SV_SALINST_HXX
 #include <vcl/salinst.hxx>
 #endif
-#ifndef _SV_SALSOUND_HXX
-#include <vcl/salsound.hxx>
-#endif
 #ifndef _SV_SALOGL_HXX
 #include <vcl/salogl.hxx>
 #endif
Index: vcl/unx/gtk/window/gtkframe.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/gtk/window/gtkframe.cxx,v
retrieving revision 1.71
retrieving revision 1.67.12.3
diff -u -p -u -p -r1.71 -r1.67.12.3
--- vcl/unx/gtk/window/gtkframe.cxx	9 Oct 2007 15:21:04 -0000	1.71
+++ vcl/unx/gtk/window/gtkframe.cxx	16 Oct 2007 08:32:30 -0000	1.67.12.3
@@ -2154,9 +2154,17 @@ void GtkSalFrame::UpdateSettings( AllSet
         ReleaseGraphics( pGraphics );
 }
 
-void GtkSalFrame::Beep( SoundType /*eType*/ )
+void GtkSalFrame::Beep( SoundType eType )
 {
-    gdk_display_beep( getGdkDisplay() );
+    switch( eType )
+    {
+        case SOUND_DEFAULT:
+        case SOUND_ERROR:
+            gdk_display_beep( getGdkDisplay() );
+            break;
+        default:
+            break;
+    }
 }
 
 const SystemEnvData* GtkSalFrame::GetSystemData() const
Index: vcl/unx/headless/svpdummies.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/headless/svpdummies.cxx,v
retrieving revision 1.2
retrieving revision 1.2.22.1
diff -u -p -u -p -r1.2 -r1.2.22.1
--- vcl/unx/headless/svpdummies.cxx	24 Jul 2007 10:26:21 -0000	1.2
+++ vcl/unx/headless/svpdummies.cxx	31 Aug 2007 09:44:57 -0000	1.2.22.1
@@ -46,44 +46,6 @@ void SvpSalOpenGL::OGLExit( SalGraphics*
 void SvpSalOpenGL::StartScene( SalGraphics* ) {}
 void SvpSalOpenGL::StopScene() {}
 
-// SalSound
-SvpSalSound::~SvpSalSound() {}
-bool SvpSalSound::IsValid() { return true; }
-bool SvpSalSound::Init( const String&, ULONG& rSoundLen )
-{
-    rSoundLen = 0;
-    return true;
-}
-void SvpSalSound::Play( ULONG, ULONG, bool bLoop )
-{
-    m_bPlaying = true;
-    m_bLooping = bLoop;
-}
-void SvpSalSound::Stop()
-{
-    m_bPlaying = m_bLooping = false;
-}
-void SvpSalSound::Pause()
-{
-    m_bPaused = true;
-}
-void SvpSalSound::Continue()
-{
-    m_bPaused = false;
-}
-bool SvpSalSound::IsLoopMode() const
-{
-    return m_bLooping;
-}
-bool SvpSalSound::IsPlaying() const
-{
-    return m_bPlaying;
-}
-bool SvpSalSound::IsPaused() const
-{
-    return m_bPaused;
-}
-
 // SalObject
 SvpSalObject::SvpSalObject()
 {
Index: vcl/unx/headless/svpdummies.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/headless/svpdummies.hxx,v
retrieving revision 1.2
retrieving revision 1.2.22.1
diff -u -p -u -p -r1.2 -r1.2.22.1
--- vcl/unx/headless/svpdummies.hxx	24 Jul 2007 10:26:33 -0000	1.2
+++ vcl/unx/headless/svpdummies.hxx	31 Aug 2007 09:44:57 -0000	1.2.22.1
@@ -36,7 +36,6 @@
 #ifndef _SVP_SVPDUMMIES_HXX
 
 #include <vcl/salogl.hxx>
-#include <vcl/salsound.hxx>
 #include <vcl/salobj.hxx>
 #include <vcl/sysdata.hxx>
 #include <vcl/salimestatus.hxx>
@@ -59,28 +58,6 @@ public:					
 	virtual void		StopScene();
 };
 
-class SvpSalSound : public SalSound
-{
-    bool m_bPlaying;
-    bool m_bLooping;
-    bool m_bPaused;
-public:
-    SvpSalSound() : m_bPlaying( false ), m_bLooping( false ), m_bPaused( false ) {}
-	virtual ~SvpSalSound();
-	
-    // overload all pure virtual methods
-    virtual bool		IsValid();
-    virtual bool		Init( const String&	rSoundName,
-                              ULONG&		rSoundLen );
-   	virtual void		Play( ULONG nStartTime, ULONG nPlayTime, bool bLoop );
-	virtual void		Stop();
-	virtual void		Pause();
-	virtual void		Continue();
-    virtual bool		IsLoopMode() const;
-	virtual bool		IsPlaying() const;
-    virtual bool		IsPaused() const;
-};
-
 class SvpSalObject : public SalObject
 {
 public:
Index: vcl/unx/headless/svpinst.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/headless/svpinst.cxx,v
retrieving revision 1.2
retrieving revision 1.2.22.1
diff -u -p -u -p -r1.2 -r1.2.22.1
--- vcl/unx/headless/svpinst.cxx	24 Jul 2007 10:27:49 -0000	1.2
+++ vcl/unx/headless/svpinst.cxx	31 Aug 2007 09:44:57 -0000	1.2.22.1
@@ -269,11 +269,6 @@ void SvpSalInstance::DestroyVirtualDevic
     delete pDevice;
 }
 
-SalSound* SvpSalInstance::CreateSalSound()
-{
-    return new SvpSalSound();
-}
-
 SalTimer* SvpSalInstance::CreateSalTimer()
 {
     return new SvpSalTimer( this );
Index: vcl/unx/headless/svpinst.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/headless/svpinst.hxx,v
retrieving revision 1.2
retrieving revision 1.2.22.1
diff -u -p -u -p -r1.2 -r1.2.22.1
--- vcl/unx/headless/svpinst.hxx	24 Jul 2007 10:27:59 -0000	1.2
+++ vcl/unx/headless/svpinst.hxx	31 Aug 2007 09:44:57 -0000	1.2.22.1
@@ -166,8 +166,6 @@ public:
     virtual void			DeletePrinterQueueInfo( SalPrinterQueueInfo* pInfo );
     virtual String          GetDefaultPrinter();
 
-    // SalSound
-    virtual SalSound*		CreateSalSound();
     // SalTimer
     virtual SalTimer*		CreateSalTimer();
     // SalOpenGL
Index: vcl/unx/inc/postx.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/postx.h,v
retrieving revision 1.5
retrieving revision 1.5.408.1
diff -u -p -u -p -r1.5 -r1.5.408.1
--- vcl/unx/inc/postx.h	19 Jun 2006 19:46:31 -0000	1.5
+++ vcl/unx/inc/postx.h	31 Aug 2007 09:44:57 -0000	1.5.408.1
@@ -69,9 +69,6 @@
 #undef InitializeToken
 #undef NextRequest
 
-/* Network Audio System */
-#undef Sound
-
 #ifdef KeyPress
 #if KeyPress != 2
 Error KeyPress must be Equal 2
Index: vcl/unx/inc/prex.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/prex.h,v
retrieving revision 1.15
retrieving revision 1.15.116.1
diff -u -p -u -p -r1.15 -r1.15.116.1
--- vcl/unx/inc/prex.h	26 Apr 2007 10:40:23 -0000	1.15
+++ vcl/unx/inc/prex.h	31 Aug 2007 09:44:57 -0000	1.15.116.1
@@ -51,9 +51,6 @@
 #define Region		XLIB_Region
 #define Boolean		XLIB_Boolean
 
-/* fuer Network Audio System */
-#define Sound		XLIB_Sound
-
 #if defined __cplusplus
 extern "C" {
 #endif
Index: vcl/unx/inc/salinst.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salinst.h,v
retrieving revision 1.14
retrieving revision 1.14.60.1
diff -u -p -u -p -r1.14 -r1.14.60.1
--- vcl/unx/inc/salinst.h	27 Jun 2007 20:41:36 -0000	1.14
+++ vcl/unx/inc/salinst.h	31 Aug 2007 09:44:57 -0000	1.14.60.1
@@ -108,7 +108,6 @@ public:
     virtual void				DeletePrinterQueueInfo( SalPrinterQueueInfo* pInfo );
     virtual String             GetDefaultPrinter();
 
-    virtual SalSound*			CreateSalSound();
     virtual SalTimer*			CreateSalTimer();
     virtual SalOpenGL*			CreateSalOpenGL( SalGraphics* pGraphics );
     virtual SalI18NImeStatus*	CreateI18NImeStatus();
Index: vcl/unx/inc/salsound.h
===================================================================
RCS file: vcl/unx/inc/salsound.h
diff -N vcl/unx/inc/salsound.h
--- vcl/unx/inc/salsound.h	27 Jun 2007 20:42:40 -0000	1.5
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,93 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: salsound.h,v $
- *
- *  $Revision: 1.5 $
- *
- *  last change: $Author: hr $ $Date: 2007/06/27 20:42:40 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-#ifndef _SV_SALSOUND_H
-#define _SV_SALSOUND_H
-
-#ifndef _SV_SALSOUND_HXX
-#include <vcl/salsound.hxx>
-#endif
-
-// ------------
-// - SalSound -
-// ------------
-
-namespace vcl_sal { class VSound; }
-
-class X11SalSound : public SalSound
-{
-// public for VSound sub classes
-public:
-	// the real sound
-	vcl_sal::VSound*		m_pVSound;
-	
-	// the sound to play
-	ByteString				m_aSoundFile;
-	
-	// state data
-	bool					m_bLoop;
-	bool					m_bPlaying;
-	bool					m_bPaused;
-	
-	ULONG					m_nStartTime;
-	ULONG					m_nPlayTime;
-	
-	static ULONG			s_nSoundState;
-	
-	void changeStateStop();
-	void changeStatePause();
-	void changeStateCont();
-	void changeStatePlay();
-	void setError( ULONG );
-public:
-    X11SalSound();
-	virtual ~X11SalSound();
-	
-    // overload all pure virtual methods
-    virtual bool		IsValid();
-    virtual bool		Init( const String&	rSoundName,
-                              ULONG&		rSoundLen );
-   	virtual void		Play( ULONG nStartTime, ULONG nPlayTime, bool bLoop );
-	virtual void		Stop();
-	virtual void		Pause();
-	virtual void		Continue();
-    virtual bool		IsLoopMode() const;
-	virtual bool		IsPlaying() const;
-    virtual bool		IsPaused() const;
-	
-	static void Release();
-};
-
-#endif // _SV_SALSOUND_HXX
Index: vcl/unx/source/app/audioconvert.cxx
===================================================================
RCS file: vcl/unx/source/app/audioconvert.cxx
diff -N vcl/unx/source/app/audioconvert.cxx
--- vcl/unx/source/app/audioconvert.cxx	17 Sep 2006 12:31:15 -0000	1.3
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,166 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: audioconvert.cxx,v $
- *
- *  $Revision: 1.3 $
- *
- *  last change: $Author: obo $ $Date: 2006/09/17 12:31:15 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-
-#include <vsound.hxx>
-
-using namespace vcl_sal;
-
-#include <sunconvert.cxx>
-
-AudioConverter::~AudioConverter()
-{
-}
-
-class G721ToULawConverter : public AudioConverter
-{
-	g72x_state		m_aState;
-public:
-	G721ToULawConverter();
-	virtual ~G721ToULawConverter();
-
-	virtual void reset();
-	virtual char* convert( char* In, int nBytesIn, int& nBytesOut );
-};
-
-G721ToULawConverter::G721ToULawConverter()
-{
-	reset();
-}
-
-G721ToULawConverter::~G721ToULawConverter()
-{
-}
-
-void G721ToULawConverter::reset()
-{
-	g72x_init_state( &m_aState );
-}
-
-char* G721ToULawConverter::convert(
-	char* pBuffer,
-	int nBytesIn,
-	int& nBytesOut )
-{
-	char* pRet = new char[ nBytesOut = nBytesIn*2 ];
-	for( int m=0; m < nBytesOut; m++ )
-		pRet[ m ] = (g721_decoder(
-			m & 1 ? pBuffer[ m/2 ] >> 4 : pBuffer[ m/2 ] & 0x0f,
-			AUDIO_ENCODING_ULAW,
-			&m_aState ) & 0xff);
-
-	return pRet;
-}
-
-AudioConverter* AudioConverter::createG721ToULawConverter()
-{
-	return new G721ToULawConverter;
-}
-
-
-class INT8ToUINT16Converter : public AudioConverter
-{
-public:
-	INT8ToUINT16Converter() {}
-	virtual ~INT8ToUINT16Converter();
-
-	virtual void reset();
-	virtual char* convert( char* In, int nBytesIn, int& nBytesOut );
-};
-
-INT8ToUINT16Converter::~INT8ToUINT16Converter()
-{
-}
-
-void INT8ToUINT16Converter::reset()
-{
-}
-
-char* INT8ToUINT16Converter::convert( char* pBuffer, int nBytesIn, int& nBytesOut )
-{
-	unsigned short* pShorts = new unsigned short[ nBytesIn ];
-	nBytesOut = 2*nBytesIn;
-
-	for( int i=0; i < nBytesIn; i++ )
-	{
-		signed char cByte = pBuffer[ i ];
-		int nValue = cByte;
-		nValue += 128;
-		pShorts[ i ] = 257*nValue;
-	} 
-	return (char*)pShorts;
-}
-
-AudioConverter* AudioConverter::createINT8ToUINT16Converter()
-{
-	return new INT8ToUINT16Converter();
-}
-
-class SwapINT16Converter : public AudioConverter
-{
-public:
-	SwapINT16Converter() {}
-	virtual ~SwapINT16Converter();
-
-	virtual void reset();
-	virtual char* convert( char* In, int nBytesIn, int& nBytesOut );
-};
-
-SwapINT16Converter::~SwapINT16Converter()
-{
-}
-
-void SwapINT16Converter::reset()
-{
-}
-
-char* SwapINT16Converter::convert( char* In, int nBytesIn, int& nBytesOut )
-{
-	char* pRet = new char[ nBytesOut = nBytesIn ];
-
-	for( int i = 0; i < nBytesIn; i+=2 )
-	{
-		pRet[ i   ] = In[ i+1 ];
-		pRet[ i+1 ] = In[ i ];
-	}
-	return pRet;
-}
-
-AudioConverter* AudioConverter::createSwapINT16Converter()
-{
-	return new SwapINT16Converter();
-}
Index: vcl/unx/source/app/devaudiosound.cxx
===================================================================
RCS file: vcl/unx/source/app/devaudiosound.cxx
diff -N vcl/unx/source/app/devaudiosound.cxx
--- vcl/unx/source/app/devaudiosound.cxx	27 Jun 2007 20:45:27 -0000	1.15
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,547 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: devaudiosound.cxx,v $
- *
- *  $Revision: 1.15 $
- *
- *  last change: $Author: hr $ $Date: 2007/06/27 20:45:27 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-
-#include <salsound.h>
-#include <salimpsound.hxx>
-
-#include <vcl/svapp.hxx>
-
-#ifdef USE_DEVAUDIO
-
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <fcntl.h>
-#include <stdio.h>
-#include <unistd.h>
-#include <string.h>
-#include <sys/ioctl.h>
-#include <sys/audioio.h>
-#include <errno.h>
-
-#ifndef _SAL_TYPES_H_
-#include <sal/types.h>
-#endif
-
-using namespace vcl_sal;
-using namespace vos;
-using namespace osl;
-
-int									DevAudioSound::s_nDevice = -1;
-DevAudioDataList					DevAudioSound::s_aDataList;
-osl::Mutex							DevAudioSound::s_aProtector;
-DevAudioSoundList					DevAudioSound::s_aSounds;
-
-static const char* getAudioDevName()
-{
-    static const char* pDev = NULL;
-    if( ! pDev )
-    {
-        pDev = getenv( "AUDIODEV" );
-        if( ! pDev || ! *pDev )
-            pDev = "/dev/audio";
-    }
-    return pDev;
-}
-
-BOOL DevAudioSound::open()
-{
-	MutexGuard aGuard( s_aProtector );
-	if( s_nDevice == -1 )
-	{
-		s_nDevice = ::open( getAudioDevName(), O_WRONLY | O_NDELAY );
-		if( s_nDevice == -1 )
-		{
-			SalDbgAssert( "ERROR: could not open %s, errno=%d\n", getAudioDevName(), errno );
-			return FALSE;
-		}
-#if OSL_DEBUG_LEVEL > 1
-		audio_device_t aDevice;
-		if( ! ioctl( s_nDevice, AUDIO_GETDEV, &aDevice ) )
-		  SalDbgAssert( "\nopened %s of type:\nName: %s\nVersion: %s\nConfig: %s\n\n",
-			   getAudioDevName(), aDevice.name, aDevice.version, aDevice.config );
-#endif
-	}
-	else
-	{
-		// sadly there is no documented reset control for /dev/audio
-		// ioctl( s_nDevice, SNDCTL_DSP_RESET, 0 );
-	}
-	return TRUE;
-}
-
-void DevAudioSound::close()
-{
-	MutexGuard aGuard( s_aProtector );
-	if( s_nDevice != -1 )
-	{
-	  ioctl( s_nDevice, AUDIO_DRAIN, NULL );
-		::close( s_nDevice );
-	}
-	s_nDevice = -1;
-}
-
-BOOL DevAudioSound::startSound( DevAudioData* pData )
-{
-	if( pData && pData->m_pSound && pData->m_pSound->m_pBuffer &&
-		s_nDevice >= 0 )
-	{
-		if( ! strncmp( pData->m_pSound->m_pBuffer, ".snd", 4 ) )
-			return startAU( pData );
-		else if( ! strncmp( pData->m_pSound->m_pBuffer, "RIFF", 4 ) )
-			return startRIFF( pData );
-	}
-	return FALSE;
-}
-
-BOOL DevAudioSound::startAU( DevAudioData* pData )
-{
-	char* pBuffer = pData->m_pSound->m_pBuffer;
-	ULONG nDataOffset	= readBELong( pBuffer + 4 );
-	ULONG nDataLen		= readBELong( pBuffer + 8 );
-	ULONG nEncoding		= readBELong( pBuffer + 12 );
-	ULONG nSampleRate	= readBELong( pBuffer + 16 );
-	ULONG nChannels		= readBELong( pBuffer + 20 );
-
-	if( nDataLen == ~0 )
-		nDataLen = pData->m_pSound->m_aStat.st_size - nDataOffset;
-
-	pData->m_nDataLen	= nDataLen;
-	pData->m_nStartPos	= nDataOffset;
-	pData->m_nEndPos	= pData->m_nStartPos + pData->m_nDataLen;
-
-	if( nChannels != 1 && nChannels != 2 )
-	{
-		SalDbgAssert( "%d Channels are not supported\n" );
-		return FALSE;
-	}
-
-	audio_info_t aAudioInfo;
-	AUDIO_INITINFO( &aAudioInfo );
-
-	aAudioInfo.play.gain 			= 127;
-	aAudioInfo.play.channels		= nChannels;
-	aAudioInfo.play.sample_rate		= nSampleRate;
-	switch( nEncoding )
-	{
-		case 1:
-			aAudioInfo.play.encoding = AUDIO_ENCODING_ULAW;
-			break;
-		case 2:
-			aAudioInfo.play.precision	= 8;
-			aAudioInfo.play.encoding	= AUDIO_ENCODING_LINEAR;
-			break;
-		case 3:
-			aAudioInfo.play.precision	= 16;
-			aAudioInfo.play.encoding	= AUDIO_ENCODING_LINEAR;
-			break;
-		case 23:
-			aAudioInfo.play.encoding	= AUDIO_ENCODING_ULAW;
-			pData->m_pConverter = AudioConverter::createG721ToULawConverter();
-			break;
-		default:
-			SalDbgAssert( "au format %d unsupported\n", nEncoding );
-			return FALSE;
-	};
-
-	if( ioctl( s_nDevice, AUDIO_SETINFO, &aAudioInfo ) )
-	{
-		SalDbgAssert( "ERROR: ioctl AUDIO_SETINFO failed\n" );
-		return FALSE;
-	}
-
-	SalDbgAssert( "playing %d data bytes at %d bytes/s in format %d on %d channels \n", pData->m_nDataLen, nSampleRate, nEncoding, nChannels );
-	return TRUE;
-}
-
-BOOL DevAudioSound::startRIFF( DevAudioData* pData )
-{
-	int nPos = findChunk( pData, "fmt " );
-	if( nPos == -1 )
-		return FALSE;
-
-	int nFormat		= readLEShort( pData->m_pSound->m_pBuffer + nPos + 8 );
-	int nChannels	= readLEShort( pData->m_pSound->m_pBuffer + nPos + 10 );
-	int nSampleRate	= readLEInt( pData->m_pSound->m_pBuffer + nPos + 12 );
-	int nByteRate	= readLEInt( pData->m_pSound->m_pBuffer + nPos + 16 );
-	int nAlign		= readLEShort( pData->m_pSound->m_pBuffer + nPos + 20 );
-	SalDbgAssert( "format is tag = %x, channels = %d, samplesPerSec = %d, avgBytesPerSec = %d, blockAlign = %d\n", nFormat, nChannels, nSampleRate, nByteRate, nAlign );
-	if( nChannels != 1 && nChannels != 2 )
-	{
-		SalDbgAssert( "%d Channels are not supported\n" );
-		return FALSE;
-	}
-
-	int nBitsPerSample = 0;
-	switch( nFormat )
-	{
-		default:
-			SalDbgAssert( "unknown format\n" );
-			return FALSE;
-		case 1:
-			nBitsPerSample = readLEShort( pData->m_pSound->m_pBuffer + nPos + 22 );
-			break;
-	}
-
-	nPos = findChunk( pData, "data" );
-	if( nPos == -1 )
-	{
-		SalDbgAssert( "ERROR: no \"data\" chunk found\n" );
-		return FALSE;
-	}
-
-	pData->m_nDataLen = readLEInt( pData->m_pSound->m_pBuffer + nPos + 4 );
-	pData->m_nStartPos = nPos+8;
-	pData->m_nEndPos = pData->m_nStartPos + pData->m_nDataLen;
-
-	audio_info_t aAudioInfo;
-	AUDIO_INITINFO( &aAudioInfo );
-
-	aAudioInfo.play.gain 			= 127;
-	aAudioInfo.play.channels		= nChannels;
-	aAudioInfo.play.sample_rate		= nSampleRate;
-	switch( nBitsPerSample )
-	{
-		case 8:
-#if defined SOLARIS && defined SPARC
-			aAudioInfo.play.precision	= 16;
-			aAudioInfo.play.encoding	= AUDIO_ENCODING_LINEAR;
-			pData->m_pConverter = AudioConverter::createINT8ToUINT16Converter();
-#else
-			aAudioInfo.play.precision	= 8;
-			aAudioInfo.play.encoding	= AUDIO_ENCODING_LINEAR;
-#endif
-			break;
-		case 16:
-			aAudioInfo.play.precision	= 16;
-			aAudioInfo.play.encoding	= AUDIO_ENCODING_LINEAR;
-#ifdef SPARC
-			pData->m_pConverter = AudioConverter::createSwapINT16Converter();
-#endif
-			break;
-		default:
-			SalDbgAssert( "%d bits per sample is not usable\n", nBitsPerSample );
-			return FALSE;
-	};
-
-	if( ioctl( s_nDevice, AUDIO_SETINFO, &aAudioInfo ) )
-	{
-		SalDbgAssert( "ERROR: ioctl AUDIO_SETINFO failed\n" );
-		return FALSE;
-	}
-
-	SalDbgAssert( "playing %d data bytes at %d bytes/s in %d bits quality on %d channels \n", pData->m_nDataLen, nSampleRate, nBitsPerSample, nChannels );
-	return TRUE;
-}
-
-int DevAudioSound::findChunk( DevAudioData* pData, const char* pChunk )
-{
-	if( !pData || ! pData->m_pSound || ! pData->m_pSound->m_pBuffer )
-		return -1;
-
-	int nPos = 12;
-	while( nPos < pData->m_pSound->m_aStat.st_size )
-	{
-		if( ! strncmp( pData->m_pSound->m_pBuffer+nPos, pChunk, 4 ) )
-			return nPos;
-
-		// get LSB int length
-		nPos += readLEInt( pData->m_pSound->m_pBuffer+nPos+4 ) + 8;
-	}
-	return -1;
-}
-
-short int DevAudioSound::readLEShort( const char* pBuf )
-{
-	const unsigned char* pBuffer = (const unsigned char*)pBuf;
-	short int nRet = *pBuffer++;
-	nRet |= *pBuffer << 8;
-
-	return nRet;
-}
-
-ULONG DevAudioSound::readBELong( const char* pBuf )
-{
-	const unsigned char* pBuffer = (const unsigned char*)pBuf;
-	ULONG nRet	 = *pBuffer++ << 24;
-	nRet		|= *pBuffer++ << 16;
-	nRet		|= *pBuffer++ << 8;
-	nRet		|= *pBuffer;
-
-	return nRet;
-}
-
-int DevAudioSound::readLEInt( const char* pBuf )
-{
-	const unsigned char* pBuffer = (const unsigned char*)pBuf;
-	int nRet = *pBuffer++;
-	nRet |= (int)(*pBuffer++) << 8;
-	nRet |= (int)(*pBuffer++) << 16;
-	nRet |= (int)(*pBuffer++) << 24;
-
-	return nRet;
-}
-
-static oslThread aThreadWorker= NULL;
-extern "C" {
-    void SAL_CALL DevAudioThreadWorker(void*)
-    {
-        DevAudioSound::run();
-    }
-}
-
-void DevAudioSound::run()
-{
-	SalDbgAssert( "DevAudioWorker::run\n" );
-	DevAudioData* pData;
-    if( open() )
-    {
-        do
-        {
-            ResettableMutexGuard aGuard( s_aProtector );
-            pData = s_aDataList.Count() ? s_aDataList.GetObject( 0 ) : NULL;
-            if( ! pData )
-                break;
-
-            bool bDataValid = true;
-            if( startSound( pData ) )
-            {
-                pData->m_nCurPos = pData->m_nStartPos;
-                while( pData->m_nCurPos < pData->m_nEndPos )
-                {
-                    int nBytes = 4096;
-
-                    char* pBuffer = pData->m_pSound->m_pBuffer;
-
-                    if( pData->m_nCurPos + nBytes > pData->m_nEndPos )
-                        nBytes = pData->m_nEndPos - pData->m_nCurPos;
-
-                    if( pData->m_pConverter )
-                    {
-                        int nBytesOut;
-                        char* pConvBuffer = pData->m_pConverter->convert( pBuffer + pData->m_nCurPos, nBytes, nBytesOut );
-                        write( s_nDevice, pConvBuffer, nBytesOut );
-                        delete pConvBuffer;
-                    }
-                    else
-                    {
-                        nBytes = write( s_nDevice,
-                                        pBuffer + pData->m_nCurPos, nBytes );
-                    }
-                    pData->m_nCurPos += nBytes;
-
-                    aGuard.clear();
-                    TimeValue aVal;
-                    aVal.Seconds = 0;
-                    aVal.Nanosec = 50000000;
-                    osl_waitThread( &aVal );
-                    aGuard.reset();
-
-                    if( s_aDataList.GetObject( 0 ) != pData )
-                    {
-                        bDataValid = false;
-                        break;
-                    }
-                }
-                if( bDataValid )
-                {
-                    if( pData->m_pSound->m_pSalSound->m_bLoop )
-                        pData->m_pSound->play();
-                    else
-                    {
-                        // /dev/audio does not seem to have a mechanism to request
-                        // wether the device is actually playing. Therefore
-                        // we need to synchronzie before signaling sound stop
-                        ioctl( s_nDevice, AUDIO_DRAIN, NULL );
-                        Application::PostUserEvent( LINK( pData->m_pSound, DevAudioSound, notifyStopHdl ), NULL );
-                    }
-                }
-            }
-            else
-				Application::PostUserEvent( LINK( pData->m_pSound, DevAudioSound, notifyErrorHdl ), (void*)SOUNDERR_INVALID_FILE );
-
-            s_aDataList.Remove( pData );
-            delete pData;
-        } while( pData );
-        close();
-    }
-
-    MutexGuard aGuard( s_aProtector );
-    osl_destroyThread( aThreadWorker );
-    aThreadWorker = NULL;
-}
-
-void DevAudioSound::append( DevAudioSound* pSound )
-{
-	MutexGuard aGuard( s_aProtector );
-	s_aDataList.Insert( new DevAudioData( pSound ), LIST_APPEND );
-	if( ! aThreadWorker )
-        aThreadWorker = osl_createThread( DevAudioThreadWorker, NULL );
-}
-
-void DevAudioSound::remove( DevAudioSound* pSound )
-{
-	MutexGuard aGuard( s_aProtector );
-	DevAudioData* pData;
-	for( int i = s_aDataList.Count()-1; i >= 0; i-- )
-	{
-		pData = s_aDataList.GetObject( i );
-		if( pData->m_pSound == pSound )
-		{
-			s_aDataList.Remove( i );
-			if( i > 0 )
-				delete pData;
-		}
-	}
-}
-
-DevAudioSound::DevAudioSound( ::X11SalSound* pSound ) :
-		VSound( pSound )
-{
-	initBuffer();
-	s_aSounds.Insert( this );
-}
-
-DevAudioSound::~DevAudioSound()
-{
-	stop();
-	if( m_pBuffer )
-		releaseBuffer();
-	s_aSounds.Remove( this );
-}
-
-BOOL DevAudioSound::isValid()
-{
-	if( ! m_pBuffer )
-		return FALSE;
-
-    if( s_nDevice == -1 )
-    {
-        int nTryOpen = ::open( getAudioDevName(), O_WRONLY | O_NDELAY );
-        if( nTryOpen == -1 )
-            return FALSE;
-        ::close( nTryOpen );
-    }
-
-	// check for valid file format
-	if( ! strncmp( "RIFF", m_pBuffer, 4 ) )
-	{
-		DevAudioData aData( this );
-
-		// check for data chunk
-		if( findChunk( &aData, "data" ) == -1 )
-			goto failed;
-		int nPos = findChunk( &aData, "fmt " );
-		if( nPos == -1 )
-			goto failed;
-
-		int nFormat		= readLEShort( m_pBuffer + nPos + 8 );
-		int nChannels	= readLEShort( m_pBuffer + nPos + 10 );
-		// check channels
-		if( nChannels != 1 && nChannels != 2 )
-			goto failed;
-		// check formats
-		// playable is MS-PCM only at now
-		if( nFormat != 1 )
-			goto failed;
-		return TRUE;
-	}
-	else if( ! strncmp( ".snd", m_pBuffer, 4 ) )
-	{
-		ULONG nEncoding		= readBELong( m_pBuffer + 12 );
-		ULONG nChannels		= readBELong( m_pBuffer + 20 );
-
-		// check for playable encodings
-		if( nEncoding != 1 && nEncoding != 2 && nEncoding != 3 && nEncoding != 23 )
-			goto failed;
-		// check channels
-		if( nChannels != 1 && nChannels != 2 )
-			goto failed;
-		return TRUE;
-	}
-  failed:
-	releaseBuffer();
-	return FALSE;
-}
-
-void DevAudioSound::play()
-{
-	if( ! m_pBuffer )
-		return;
-
-	append( this );
-	m_pSalSound->m_bPlaying	= TRUE;
-	m_pSalSound->m_bPaused	= FALSE;
-}
-
-void DevAudioSound::stop()
-{
-	remove( this );
-	m_pSalSound->m_bPlaying	= FALSE;
-	m_pSalSound->m_bPaused	= FALSE;
-}
-
-void DevAudioSound::pause()
-{
-	remove( this );
-	m_pSalSound->m_bPaused = TRUE;
-}
-
-void DevAudioSound::cont()
-{
-	play();
-}
-
-IMPL_LINK( DevAudioSound, notifyStopHdl, void*, EMPTYARG )
-{
-	if( s_aSounds.GetPos( this ) != LIST_ENTRY_NOTFOUND )
-	{
-		m_pSalSound->changeStateStop();
-	}
-	return 0;
-}
-
-IMPL_LINK( DevAudioSound, notifyErrorHdl, void*, nError )
-{
-	if( s_aSounds.GetPos( this ) != LIST_ENTRY_NOTFOUND )
-	{
-		m_pSalSound->setError( (ULONG)nError );
-	}
-	return 0;
-}
-
-#endif
Index: vcl/unx/source/app/makefile.mk
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/makefile.mk,v
retrieving revision 1.28
retrieving revision 1.28.16.1
diff -u -p -u -p -r1.28 -r1.28.16.1
--- vcl/unx/source/app/makefile.mk	31 Jul 2007 13:01:37 -0000	1.28
+++ vcl/unx/source/app/makefile.mk	31 Aug 2007 09:44:58 -0000	1.28.16.1
@@ -69,13 +69,7 @@ SLOFILES=\
 			$(SLO)$/soicon.obj			\
 			$(SLO)$/sm.obj				\
 			$(SLO)$/keysymnames.obj		\
-			$(SLO)$/wmadaptor.obj		\
-			$(SLO)$/salsound2.obj		\
-			$(SLO)$/osssound.obj		\
-			$(SLO)$/devaudiosound.obj		\
-			$(SLO)$/audioconvert.obj		\
-			$(SLO)$/rptpsound.obj		\
-			$(SLO)$/nassound.obj		
+			$(SLO)$/wmadaptor.obj
 
 EXCEPTIONSFILES=\
 			$(SLO)$/wmadaptor.obj		\
@@ -87,22 +81,6 @@ EXCEPTIONSFILES=\
             $(SLO)$/salsys.obj
 
 
-.IF "$(ENABLE_NAS)" != ""
-CDEFS+=-DUSE_NAS
-.ENDIF
-
-.IF "$(ENABLE_PASF)" != ""
-CDEFS+=-DUSE_PASF -DPA_VER=$(PA_VER)
-SLOFILES+=$(SLO)$/pasfsound.obj
-.IF "$(SYSTEM_SNDFILE)" == "YES"
-CDEFS+=-DSYSTEM_SNDFILE
-CFLAGS+=$(SNDFILE_CFLAGS)
-.ENDIF
-.IF "$(SYSTEM_PORTAUDIO)" == "YES"
-CDEFS+=-DSYSTEM_PORTAUDIO
-.ENDIF
-.ENDIF
-
 .IF "$(WITH_LIBSN)"=="YES"
 CDEFS+=-DHAVE_LIBSN
 CFLAGS+=$(LIBSN_CFLAGS)
Index: vcl/unx/source/app/nassound.cxx
===================================================================
RCS file: vcl/unx/source/app/nassound.cxx
diff -N vcl/unx/source/app/nassound.cxx
--- vcl/unx/source/app/nassound.cxx	17 Sep 2006 12:33:50 -0000	1.10
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,278 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: nassound.cxx,v $
- *
- *  $Revision: 1.10 $
- *
- *  last change: $Author: obo $ $Date: 2006/09/17 12:33:50 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-#include <salimpsound.hxx>
-#include <salsound.h>
-
-#ifdef USE_NAS
-
-#define INT8 AU_INT8
-#include <audio/audiolib.h>
-#include <audio/soundlib.h>
-#undef INT8
-
-#include <salunx.h>
-#include <saldata.hxx>
-#include <saldisp.hxx>
-
-#include <unistd.h>
-
-using namespace vcl_sal;
-using namespace vos;
-
-BOOL						NASSound::s_bFailedOnce = FALSE;
-NASSound::NASSoundList		NASSound::s_aSounds;
-void*						NASSound::s_pServer = NULL;
-
-void NASSound::callback( void*, void*, void* event, void* pThis )
-{
-	SalDbgAssert( "NASSound::callback called\n" );
-
-	NASSound* pSound = (NASSound*)pThis;
-	if( s_aSounds.GetPos( pSound ) != LIST_ENTRY_NOTFOUND )
-	{
-		AuEvent* pEvent = (AuEvent*)event;
-		SalDbgAssert( "   on event type %d\n", pEvent->type );
-		if( pSound->m_pSalSound &&
-			pEvent->type == AuEventTypeElementNotify )
-		{
-			switch( pEvent->auelementnotify.cur_state )
-			{
-				case AuStateStop:
-				{
-					pSound->m_nFlowID = 0;
-					pSound->m_pSalSound->changeStateStop();
-					break;
-				}
-				case AuStatePause:
-					pSound->m_pSalSound->changeStatePause();
-					break;
-				case AuStateStart:
-					pSound->m_pSalSound->changeStateCont();
-					break;
-				default:
-					break;
-			}
-		}
-	}
-	else
-		SalDbgAssert( "NASSound %p is adressed in callback but unknown !\n", pSound );
-}
-
-BOOL NASSound::connect()
-{
-	if( ! s_pServer && ! s_bFailedOnce )
-	{
-		char* pServerMessage = NULL;
-		s_pServer = AuOpenServer( NULL, 0, NULL, 0, NULL, &pServerMessage );
-		if( ! s_pServer )
-		{
-			SalDbgAssert( "AuOpenServer failed: %s\n",
-						  pServerMessage ?
-						  pServerMessage : "<unknown reason>" );
-			AuFree( pServerMessage );
-			s_bFailedOnce = TRUE;
-		}
-		else
-		{
-			GetX11SalData()->GetLib()->Insert( AuServerConnectionNumber( (AuServer*)s_pServer ),
-											NULL,
-											(YieldFunc)pending,
-											(YieldFunc)queued,
-											(YieldFunc)handleEvents );
-			SalDbgAssert( "AudioConnectionNumber is %d, DisplayConnectionNumber is %d\n",
-						  AuServerConnectionNumber( (AuServer*)s_pServer ),
-						  ConnectionNumber( GetX11SalData()->GetDisplay()->GetDisplay() ) );
-		}
-	}
-	return s_pServer ? TRUE : FALSE;
-}
-
-void NASSound::disconnect()
-{
-	if( s_pServer )
-	{
-		GetX11SalData()->GetLib()->Remove( AuServerConnectionNumber( (AuServer*)s_pServer ) );
-		AuCloseServer( (AuServer*)s_pServer );
-		s_pServer = NULL;
-	}
-}
-
-int NASSound::pending( int, void* )
-{
-	return s_pServer ? AuEventsQueued( (AuServer*)s_pServer, AuEventsQueuedAlready ) : 0;
-}
-
-int NASSound::queued( int fd, void* pDummy )
-{
-	return pending( fd, pDummy );
-}
-
-int NASSound::handleEvents( int, void* )
-{
-	if( s_pServer )
-	{
-		for( int i = pending(0,0); i && s_pServer; i-- )
-		{
-			AuEvent aEvent;
-			AuNextEvent( (AuServer*)s_pServer, AuTrue, &aEvent );
-			AuDispatchEvent( (AuServer*)s_pServer, &aEvent );
-		}
-	}
-	return 1;
-}
-
-NASSound::NASSound( ::X11SalSound* pSalSound ) :
-		VSound( pSalSound ),
-		m_nFlowID( 0 )
-{
-	s_aSounds.Insert( this );
-}
-
-NASSound::~NASSound()
-{
-	s_aSounds.Remove( this );
-	if( s_aSounds.Count() < 1 )
-		disconnect();
-}
-
-void NASSound::play()
-{
-	BOOL bStarted = FALSE;
-
-	if( ! s_pServer )
-		connect();
-	
-	if( s_pServer && m_pSalSound )
-	{
-		AuFlowID aID;
-		AuStatus aStatus;
-		if( AuSoundPlayFromFile( (AuServer*)s_pServer,
-								 m_pSalSound->m_aSoundFile.GetBuffer(),
-								 AuNone,
-								 AuFixedPointFromSum( 1, 0 ),
-								 (void(*)(AuServer*,AuEventHandlerRec*,AuEvent*,void*))callback,
-								 (AuPointer)this,
-								 &aID,
-								 NULL,
-								 NULL,
-								 &aStatus )
-			)
-		{
-			SalDbgAssert( "AuSoundPlayFromFile yields flow id %d and status %d\n",
-						  aID, aStatus );
-
- 			AuElementState aState;
- 			aState.flow = aID;
- 			aState.element_num = 0;
- 			for( int n = 0; n < 20 && ! bStarted; n++ )
- 			{
-                TimeValue aVal;
-                aVal.Seconds = 0;
-                aVal.Nanosec = 20000000;
-                osl_waitThread( &aVal );
- 				AuHandleEvents( (AuServer*)s_pServer );
-
- 				int nStates = 1;
- 				AuElementState* pState =
- 					AuGetElementStates( (AuServer*)s_pServer,
- 										&nStates,
- 										&aState,
- 										&aStatus );
- 				if( pState )
- 				{
- 					if( pState->state == AuStateStart )
- 						bStarted = TRUE;
- 					AuFreeElementStates( (AuServer*)s_pServer,
- 										 1, pState );
- 				}
- 				else
- 				{
- 					SalDbgAssert( "AuGetElementStates failed\n" );
- 					break;
- 				}
- 			}
-
-            if ( bStarted )
-			    SalDbgAssert( "   sound started\n" );
-            else
-			    SalDbgAssert( "   sound failed to start\n" );
-
-			m_pSalSound->m_bPlaying = bStarted;
-			if( bStarted )
-				m_nFlowID = aID;
-		}
-	}
-
-	if( ! bStarted && m_pSalSound )
-		m_pSalSound->setError( SOUNDERR_INVALID_FILE );
-}
-
-void NASSound::stop()
-{
-  	if( s_pServer && m_nFlowID )
-	{
-  		AuStopFlow( (AuServer*)s_pServer, m_nFlowID, NULL );
-		m_nFlowID = 0;
-	}
-}
-
-void NASSound::pause()
-{
-  	if( s_pServer && m_nFlowID )
-  		AuPauseFlow( (AuServer*)s_pServer, m_nFlowID, NULL );
-}
-
-void NASSound::cont()
-{
-  	if( s_pServer && m_nFlowID )
-  		AuStartFlow( (AuServer*)s_pServer, m_nFlowID, NULL );
-}
-
-BOOL NASSound::isValid()
-{
-	if( ! m_pSalSound )
-		return FALSE;
-	if( ! s_pServer )
-		connect();
-	if( ! s_pServer )
-		return FALSE;
-
-	return access( m_pSalSound->m_aSoundFile.GetBuffer(), R_OK ) ? FALSE : TRUE;
-}
-
-#endif
Index: vcl/unx/source/app/osssound.cxx
===================================================================
RCS file: vcl/unx/source/app/osssound.cxx
diff -N vcl/unx/source/app/osssound.cxx
--- vcl/unx/source/app/osssound.cxx	27 Jun 2007 20:46:05 -0000	1.10
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,521 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: osssound.cxx,v $
- *
- *  $Revision: 1.10 $
- *
- *  last change: $Author: hr $ $Date: 2007/06/27 20:46:05 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-#include <salsound.h>
-#include <salimpsound.hxx>
-
-#include <vcl/svapp.hxx>
-
-#ifdef USE_OSS
-
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <fcntl.h>
-#include <stdio.h>
-#include <unistd.h>
-#include <string.h>
-#include <sys/ioctl.h>
-#ifdef LINUX
-#include <linux/soundcard.h>
-#else
-#include <sys/soundcard.h>
-#endif
-#include <errno.h>
-#include <osl/thread.h>
-
-using namespace vcl_sal;
-using namespace vos;
-using namespace osl;
-
-int						OSSSound::s_nDevice = -1;
-OSSSound::OSSDataList	OSSSound::s_aDataList;
-Mutex					OSSSound::s_aProtector;
-OSSSound::OSSSoundList	OSSSound::s_aSounds;
-
-BOOL OSSSound::open()
-{
-	MutexGuard aGuard( s_aProtector );
-	if( s_nDevice == -1 )
-	{
-		s_nDevice = ::open( "/dev/dsp", O_WRONLY );
-		if( s_nDevice == -1 )
-		{
-			SalDbgAssert( "ERROR: could not open /dev/dsp, errno=%d\n", errno );
-			return FALSE;
-		}
-	}
-	else
-	{
-		ioctl( s_nDevice, SNDCTL_DSP_RESET, 0 );
-	}
-	return TRUE;
-}
-
-void OSSSound::close()
-{
-	MutexGuard aGuard( s_aProtector );
-	if( s_nDevice != -1 )
-		::close( s_nDevice );
-	s_nDevice = -1;
-}
-
-BOOL OSSSound::startSound( OSSData* pData )
-{
-	if( pData && pData->m_pSound && pData->m_pSound->m_pBuffer &&
-		s_nDevice >= 0 )
-	{
-		if( ! strncmp( pData->m_pSound->m_pBuffer, ".snd", 4 ) )
-			return startAU( pData );
-		else if( ! strncmp( pData->m_pSound->m_pBuffer, "RIFF", 4 ) )
-			return startRIFF( pData );
-	}
-	return FALSE;
-}
-
-BOOL OSSSound::startAU( OSSData* pData )
-{
-	char* pBuffer = pData->m_pSound->m_pBuffer;
-	ULONG nDataOffset	= readBELong( pBuffer + 4 );
-	ULONG nDataLen		= readBELong( pBuffer + 8 );
-	ULONG nEncoding		= readBELong( pBuffer + 12 );
-	ULONG nSampleRate	= readBELong( pBuffer + 16 );
-	ULONG nChannels		= readBELong( pBuffer + 20 );
-
-	if( nDataLen == 0xffffffff )
-		nDataLen = pData->m_pSound->m_aStat.st_size - nDataOffset;
-
-	pData->m_nDataLen	= nDataLen;
-	pData->m_nStartPos	= nDataOffset;
-	pData->m_nEndPos	= pData->m_nStartPos + pData->m_nDataLen;
-
-	if( nChannels != 1 && nChannels != 2 )
-	{
-		SalDbgAssert( "%d Channels are not supported\n" );
-		return FALSE;
-	}
-
-	int nSystemFormat;
-	switch( nEncoding )
-	{
-		case 1: nSystemFormat = AFMT_MU_LAW;break;
-		case 2: nSystemFormat = AFMT_U8;break;
-		case 3: nSystemFormat = AFMT_S16_BE;break;
-		default:
-			SalDbgAssert( "au format %d unsupported\n", nEncoding );
-			return FALSE;
-	};
-
-	int nRealFormat = nSystemFormat;
-	if( ioctl( s_nDevice, SNDCTL_DSP_SETFMT, &nRealFormat )==-1 )
-	{
-		SalDbgAssert( "ERROR: ioctl SNDCTL_DSP_SETFMT failed\n" );
-		return FALSE;
-	}
-	int nRealChannels = nChannels-1;
-	if( ioctl( s_nDevice, SNDCTL_DSP_STEREO, &nRealChannels )==-1 )
-	{
-		SalDbgAssert( "ERROR: ioctl SNDCTL_DSP_STEREO failed\n" );
-		return FALSE;
-	}
-	if( nRealChannels != sal::static_int_cast<int>(nChannels-1) )
-	{
-		SalDbgAssert( "could not set %d channels\n", nChannels );
-		return FALSE;
-	}
-
-	if( ioctl( s_nDevice, SNDCTL_DSP_SPEED, &nSampleRate ) == -1 )
-	{
-		SalDbgAssert( "ERROR: ioctl SNDCTL_DSP_SPEED failed\n" );
-		return FALSE;
-	}
-	SalDbgAssert( "playing %d data bytes at %d bytes in format %d quality/s on %d channels \n", pData->m_nDataLen, nSampleRate, nEncoding, nChannels );
-	return TRUE;
-}
-
-BOOL OSSSound::startRIFF( OSSData* pData )
-{
-	int nPos = findChunk( pData, "fmt " );
-	if( nPos == -1 )
-		return FALSE;
-	
-	int nFormat		= readLEShort( pData->m_pSound->m_pBuffer + nPos + 8 );
-	int nChannels	= readLEShort( pData->m_pSound->m_pBuffer + nPos + 10 );
-	int nSampleRate	= readLEInt( pData->m_pSound->m_pBuffer + nPos + 12 );
-	int nByteRate	= readLEInt( pData->m_pSound->m_pBuffer + nPos + 16 );
-	int nAlign		= readLEShort( pData->m_pSound->m_pBuffer + nPos + 20 );
-	SalDbgAssert( "format is tag = %x, channels = %d, samplesPerSec = %d, avgBytesPerSec = %d, blockAlign = %d\n", nFormat, nChannels, nSampleRate, nByteRate, nAlign );
-	if( nChannels != 1 && nChannels != 2 )
-	{
-		SalDbgAssert( "%d Channels are not supported\n" );
-		return FALSE;
-	}
-	
-	int nBitsPerSample = 0;
-	switch( nFormat )
-	{
-		default:
-			SalDbgAssert( "unknown format\n" );
-			return FALSE;
-			break;
-		case 1:
-			nBitsPerSample = readLEShort( pData->m_pSound->m_pBuffer + nPos + 22 );
-			break;
-	}
-	
-	nPos = findChunk( pData, "data" );
-	if( nPos == -1 )
-	{
-		SalDbgAssert( "ERROR: no \"data\" chunk found\n" );
-		return FALSE;
-	}
-	
-	pData->m_nDataLen = readLEInt( pData->m_pSound->m_pBuffer + nPos + 4 );
-	pData->m_nStartPos = nPos+8;
-	pData->m_nEndPos = pData->m_nStartPos + pData->m_nDataLen;
-	
-	int nSystemFormat;
-	switch( nBitsPerSample )
-	{
-		case 8:  nSystemFormat = AFMT_U8; break;
-		case 16: nSystemFormat = AFMT_S16_LE; break;
-		default:
-			SalDbgAssert( "%d bits per sample is not usable\n", nBitsPerSample );
-			return FALSE;
-	}
-	
-	int nRealFormat = nSystemFormat;
-	if( ioctl( s_nDevice, SNDCTL_DSP_SETFMT, &nRealFormat )==-1 )
-	{
-		SalDbgAssert( "ERROR: ioctl SNDCTL_DSP_SETFMT failed\n" );
-		return FALSE;
-	}
-	
-	int nRealChannels = nChannels-1;
-	if( ioctl( s_nDevice, SNDCTL_DSP_STEREO, &nRealChannels )==-1 )
-	{
-		SalDbgAssert( "ERROR: ioctl SNDCTL_DSP_STEREO failed\n" );
-		return FALSE;
-	}
-	if( nRealChannels != nChannels-1 )
-	{
-		SalDbgAssert( "could not set %d channels\n", nChannels );
-		return FALSE;
-	}
-	
-	
-	if( ioctl( s_nDevice, SNDCTL_DSP_SPEED, &nSampleRate ) == -1 )
-	{
-		SalDbgAssert( "ERROR: ioctl SNDCTL_DSP_SPEED failed\n" );
-		return FALSE;
-	}
-	
-	SalDbgAssert( "playing %d data bytes at %d bytes in %d bits quality/s on %d channels \n", pData->m_nDataLen, nSampleRate, nBitsPerSample, nChannels );
-	return TRUE;
-}
-
-int OSSSound::findChunk( OSSData* pData, const char* pChunk )
-{
-	if( !pData || ! pData->m_pSound || ! pData->m_pSound->m_pBuffer )
-		return -1;
-
-	int nPos = 12;
-	while( nPos < pData->m_pSound->m_aStat.st_size )
-	{
-		if( ! strncmp( pData->m_pSound->m_pBuffer+nPos, pChunk, 4 ) )
-			return nPos;
-
-		// get LSB int length
-		nPos += readLEInt( pData->m_pSound->m_pBuffer+nPos+4 ) + 8;
-	}
-	return -1;
-}
-
-short int OSSSound::readLEShort( const char* pBuf )
-{
-	const unsigned char* pBuffer = (const unsigned char*)pBuf;
-	short int nRet = *pBuffer++;
-	nRet |= *pBuffer << 8;
-
-	return nRet;
-}
-
-ULONG OSSSound::readBELong( const char* pBuf )
-{
-	const unsigned char* pBuffer = (const unsigned char*)pBuf;
-	ULONG nRet	 = *pBuffer++ << 24;
-	nRet		|= *pBuffer++ << 16;
-	nRet		|= *pBuffer++ << 8;
-	nRet		|= *pBuffer;
-
-	return nRet;
-}
-
-int OSSSound::readLEInt( const char* pBuf )
-{
-	const unsigned char* pBuffer = (const unsigned char*)pBuf;
-	int nRet = *pBuffer++;
-	nRet |= (int)(*pBuffer++) << 8;
-	nRet |= (int)(*pBuffer++) << 16;
-	nRet |= (int)(*pBuffer++) << 24;
-
-	return nRet;
-}
-
-static oslThread aThreadWorker= NULL;
-extern "C" {
-    void SAL_CALL OSSThreadWorker(void*)
-    {
-        OSSSound::run();
-    }
-}
-
-void OSSSound::run()
-{
-	SalDbgAssert( "OSSWorker::run\n" );
-	OSSData* pData;
-    do
-    {
-        ResettableMutexGuard aGuard( s_aProtector );
-        pData = s_aDataList.Count() ? s_aDataList.GetObject( 0 ) : NULL;
-        if( ! pData )
-            break;
-        
-        if( open() )
-        {
-            
-            bool bDataValid = true;
-            if( startSound( pData ) )
-            {
-                pData->m_nCurPos = pData->m_nStartPos;
-                while( pData->m_nCurPos < pData->m_nEndPos )
-                {
-                    audio_buf_info info;
-                    ioctl( s_nDevice, SNDCTL_DSP_GETOSPACE, &info );
-                    if( info.bytes > 0 )
-                    {
-                        int nBytes = info.bytes;
-                        if( pData->m_nCurPos + nBytes > pData->m_nEndPos )
-                            nBytes = pData->m_nEndPos - pData->m_nCurPos;
-                        nBytes = write( s_nDevice,
-                                        pData->m_pSound->m_pBuffer + pData->m_nCurPos,
-                                        nBytes );
-                        if( nBytes > 0 )
-                            pData->m_nCurPos += nBytes;
-                    }
-                    aGuard.clear();
-                    TimeValue aVal;
-                    aVal.Seconds = 0;
-                    aVal.Nanosec = 20000000;
-                    osl_waitThread( &aVal );
-                    aGuard.reset();
-                    if( s_aDataList.GetObject( 0 ) != pData )
-                    {
-                        ioctl( s_nDevice, SNDCTL_DSP_RESET, 0);
-                        bDataValid = false;
-                        break;
-                    }
-                }
-                close();
-                if( bDataValid )
-                {
-                    if( pData->m_pSound->m_pSalSound->m_bLoop )
-                        pData->m_pSound->play();
-                    else
-                        Application::PostUserEvent( LINK( pData->m_pSound, OSSSound, notifyStopHdl ), NULL );
-                }
-            }
-            else
-				Application::PostUserEvent( LINK( pData->m_pSound, OSSSound, notifyErrorHdl ), (void*)SOUNDERR_INVALID_FILE );
-        }
-        s_aDataList.Remove( pData );
-        delete pData;
-    } while( pData );
-
-    MutexGuard aGuard( s_aProtector );
-    osl_destroyThread( aThreadWorker );
-    aThreadWorker = NULL;
-}
-
-void OSSSound::append( OSSSound* pSound )
-{
-	MutexGuard aGuard( s_aProtector );
-	OSSData* pNew = new OSSData;
-
-	pNew->m_pSound		= pSound;
-	pNew->m_nDataLen	= 0;
-	pNew->m_nStartPos	= 0;
-	pNew->m_nEndPos		= 0;
-	pNew->m_nType		= 0;
-
-	s_aDataList.Insert( pNew, LIST_APPEND );
-	if( ! aThreadWorker )
-        aThreadWorker = osl_createThread( OSSThreadWorker, NULL );
-}
-
-void OSSSound::remove( OSSSound* pSound )
-{
-	MutexGuard aGuard( s_aProtector );
-	OSSData* pData;
-	for( int i = s_aDataList.Count()-1; i >= 0; i-- )
-	{
-		pData = s_aDataList.GetObject( i );
-		if( pData->m_pSound == pSound )
-		{
-			s_aDataList.Remove( i );
-			if( i > 0 )
-				delete pData;
-		}
-	}
-}
-
-OSSSound::OSSSound( ::X11SalSound* pSound ) :
-		VSound( pSound )
-{
-	initBuffer();
-	s_aSounds.Insert( this );
-}
-
-OSSSound::~OSSSound()
-{
-	stop();
- 	if( m_pBuffer )
- 		releaseBuffer();
-	s_aSounds.Remove( this );
-}
-
-BOOL OSSSound::isValid()
-{
-    if( ! m_pBuffer )
-        return FALSE;
-
-    if( s_nDevice == -1 )
-    {
-        int nTryOpen = ::open( "/dev/dsp", O_WRONLY | O_NONBLOCK );
-        if( nTryOpen == -1 )
-            return FALSE;
-        ::close( nTryOpen );
-    }
-	
-	// check for valid file format
-	if( ! strncmp( "RIFF", m_pBuffer, 4 ) )
-	{
-		OSSData aData;
-		aData.m_pSound = this;
-
-		// check for data chunk
-		if( findChunk( &aData, "data" ) == -1 )
-			goto failed;
-		int nPos = findChunk( &aData, "fmt " );
-		if( nPos == -1 )
-			goto failed;
-		
-		int nFormat		= readLEShort( m_pBuffer + nPos + 8 );
-		int nChannels	= readLEShort( m_pBuffer + nPos + 10 );
-		// check channels
-		if( nChannels != 1 && nChannels != 2 )
-			goto failed;
-		// check formats
-		// playable is MS-PCM only at now
-		if( nFormat != 1 )
-			goto failed;
-		return TRUE;
-	}
-	else if( ! strncmp( ".snd", m_pBuffer, 4 ) )
-	{
-		ULONG nEncoding		= readBELong( m_pBuffer + 12 );
-		ULONG nChannels		= readBELong( m_pBuffer + 20 );
-
-		// check for playable encodings
-		if( nEncoding != 1 && nEncoding != 2 && nEncoding != 3 )
-			goto failed;
-		// check channels
-		if( nChannels != 1 && nChannels != 2 )
-			goto failed;
-		return TRUE;
-	}
-  failed:
-	releaseBuffer();
-	return FALSE;
-}
-
-void OSSSound::play()
-{
-	if( ! m_pBuffer )
-		return;
-
-	append( this );
-	m_pSalSound->m_bPlaying	= TRUE;
-	m_pSalSound->m_bPaused	= FALSE;
-}
-
-void OSSSound::stop()
-{
-	remove( this );
-	m_pSalSound->m_bPlaying	= FALSE;
-	m_pSalSound->m_bPaused	= FALSE;
-}
-
-void OSSSound::pause()
-{
-	remove( this );
-	m_pSalSound->m_bPaused = TRUE;
-}
-
-void OSSSound::cont()
-{
-	play();
-}
-
-IMPL_LINK( OSSSound, notifyStopHdl, void*, EMPTYARG )
-{
-	if( s_aSounds.GetPos( this ) != LIST_ENTRY_NOTFOUND )
-	{
-		m_pSalSound->changeStateStop();
-	}
-	return 0;
-}
-
-IMPL_LINK( OSSSound, notifyErrorHdl, void*, nError )
-{
-	if( s_aSounds.GetPos( this ) != LIST_ENTRY_NOTFOUND )
-	{
-		m_pSalSound->setError( (ULONG)nError );
-	}
-	return 0;
-}
-
-#endif
Index: vcl/unx/source/app/pasfsound.cxx
===================================================================
RCS file: vcl/unx/source/app/pasfsound.cxx
diff -N vcl/unx/source/app/pasfsound.cxx
--- vcl/unx/source/app/pasfsound.cxx	31 Jul 2007 13:01:50 -0000	1.7
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,345 +0,0 @@
-/*************************************************************************
-*
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: pasfsound.cxx,v $
- *
- *  $Revision: 1.7 $
- *
- *  last change: $Author: hr $ $Date: 2007/07/31 13:01:50 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
-************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-
-#include <salsound.h>
-#include <salimpsound.hxx>
-
-#ifdef USE_PASF
-
-#define _SV_PASFSOUND_CXX
-
-// Replacement SalSound Implementation that makes use of PortAudio to abstract away
-// hardware differences, and LibSndFile to convert and access sound formats
-// This implementation should work with little or no modification for Linux
-// SGI, Solaris, MacOSX, Linux (all arches), FreeBSD, and even WIN
-
-#include <saldata.hxx>
-#include <vcl/salinst.hxx>
-
-
-#include <stdio.h>
-
-using namespace vcl_sal;
-using namespace vos;
-using namespace osl;
-using namespace rtl;
-
-extern "C"
-{
-    
-    /* callback that takes data from sound file and converts it and loads it */
-#if PA_VER == 18
-    static int pasf_in_out_callback (void *inputBuffer, void * outputBuffer,
-    unsigned long framesPerBuffer, PaTimestamp outTime, void * userData )
-#else
-    static int pasf_in_out_callback (const void *inputBuffer, void *outputBuffer,
-    unsigned long framesPerBuffer, const PaStreamCallbackTimeInfo *outTime, PaStreamCallbackFlags cbFlags, void *userData )
-#endif
-    {	
-        PASFAudioData*	paudio_data;
-        unsigned int	read_count, bufoff, bytecnt; 
-        float*          buffer  = (float *) outputBuffer;
-        
-        /* prevent warnings for unused variables */
-#if PA_VER > 18
-        cbFlags = cbFlags;
-#endif
-        inputBuffer = inputBuffer;
-        outTime = outTime;
-        
-        /* get all other info needed from audio_data structure passed in as userData */
-        paudio_data = (PASFAudioData*) userData;
-        
-        read_count = sf_readf_float (paudio_data->sndfile, buffer, framesPerBuffer);
-        if (read_count < framesPerBuffer) 
-        {	
-	        /* fill in the remainder of the buffer with zeros */
-            /* convert read_count of frames to offset into float* buffer */
-	        bufoff = read_count * paudio_data->sfinfo.channels;
-            bytecnt = (framesPerBuffer - read_count) * paudio_data->sfinfo.channels * sizeof(float);
-            memset (&(buffer [read_count]), 0, bytecnt) ;
-        }
-        
-        /* now check if we reached end of file or preset stopping point */
-        if ((read_count == 0) || ((paudio_data->stop_frame > 0) 
-            && (paudio_data->frame_count > paudio_data->stop_frame))) 
-        {
-            if (paudio_data->loop_count > 0) paudio_data->loop_count--;
-            
-            /* if need to loop again, seek back to start frame and reset frame count */
-            if ((paudio_data->loop_count > 0) || (paudio_data->loop_count == -1)) 
-            {
-                sf_seek(paudio_data->sndfile, paudio_data->start_frame, SEEK_SET);
-                paudio_data->frame_count = paudio_data->start_frame;
-            } else {
-                paudio_data->done_playing = 1 ;
-            }
-        } 
-        
-        paudio_data->frame_count = paudio_data->frame_count + framesPerBuffer;
-        return paNoError;
-    } 
-}
-
-
-
-PASFSound::PASFSound( ::X11SalSound* pSound) : 
-VSound( pSound ), 
-m_pStream( NULL ), 
-m_pData( NULL )
-{
-    m_pData = new PASFAudioData();
-    if ( ! (m_pData) ) return;
-    
-    // open the sound file and get info on desired channels and sample rate
-    if (! (m_pData->sndfile = sf_open (m_pSalSound->m_aSoundFile.GetBuffer(), SFM_READ, &(m_pData->sfinfo)))) 
-    {	
-        // fprintf(stderr,"Error opening sound file %s\n", m_aSoundFile.GetBuffer()); fflush(stderr);
-        m_pData->sndfile = NULL;
-        return;
-    }
-    
-    // check for valid number of channels to prevent problems later
-    if (m_pData->sfinfo.channels < 1 || m_pData->sfinfo.channels > 2) 
-    {	
-        // fprintf(stderr, "Error incorrect number of channels %d.\n", m_pData->sfinfo.channels) ; fflush(stderr);
-        sf_close(m_pData->sndfile);
-        m_pData->sndfile = NULL;
-        return;
-    }
-    
-    
-    // store information on desired settings and input buffer format away
-    m_pData->format = paFloat32;
-    m_pData->bufsize = PASF_BUFFER_LEN;
-    
-    // Using the default output device for this
-#if PA_VER == 18
-    m_pData->device = Pa_GetDefaultOutputDeviceID();
-#else
-    m_pData->device = Pa_GetDefaultOutputDevice();
-#endif
-    
-    // the size of a frame in bytes is the number of channels of data * the size of the 
-    // underlying data type type being used to store data for each for each channel
-    // (we are using paFloat32 as input to PaOpenDefaultStream )
-    
-    unsigned int bytesPerFrame = m_pData->sfinfo.channels * sizeof(float);
-    unsigned int framesPerBuffer = (unsigned int) (m_pData->bufsize / bytesPerFrame); 
-    
-    // Open an audio I/O stream for output only on the default output device
-    PaError err = Pa_OpenDefaultStream(
-    &m_pStream,
-    0,                             // no input channels == no input device
-    m_pData->sfinfo.channels,      // get desired output channels from file
-    m_pData->format,               // 32 bit floating point format for each item
-    m_pData->sfinfo.samplerate,    // get desired sampling rate from file
-    framesPerBuffer,               // frames per buffer
-#if PA_VER == 18
-    0,                             // number of buffers, if zero then use optimal number as determined by Pa
-#endif
-    pasf_in_out_callback,          // call back to load data into the stream
-    m_pData );                     // pass along m_pData pointer so that callback can get access to info
-    
-    if( err != paNoError ) {
-        m_pStream = NULL;
-        sf_close(m_pData->sndfile);
-        m_pData->sndfile = NULL;
-    } 
-}
-
-
-PASFSound::~PASFSound()
-{
-    // if stream exists, stop and close it
-    if (m_pStream) 
-    { 
-	    Pa_StopStream( m_pStream );
-	    Pa_CloseStream( m_pStream );
-        m_pStream = NULL;
-    }
-    // clean up the PASFAudioData structure, close any open sound files
-    if ( m_pData ) 
-    {
-	    if (m_pData->sndfile) 
-        {
-            sf_close(m_pData->sndfile);
-            m_pData->sndfile = NULL;
-	    }
-        delete m_pData;
-	    m_pData = NULL;
-	}
-    m_pSalSound = NULL;
-}
-
-
-void PASFSound::play()
-{
-    int nErr = 1;
-    BOOL bLoop = m_pSalSound->m_bLoop;
-    ULONG nStartTime = m_pSalSound->m_nStartTime;
-    ULONG nPlayTime =  m_pSalSound->m_nPlayTime;
-    
-    // if ready to go
-    if ((m_pData) && (m_pStream)) 
-    { 
-        // set the player controls
-        
-        // if looping set the loop count (use -1 for infinity)
-        m_pData->loop_count = 1;
-        if ( bLoop ) m_pData->loop_count = -1;
-        
-        // convert StartTime to frame count and seek to starting frame in sound file
-        m_pData->start_frame = 0;
-        if (nStartTime > 0) 
-        {
-            m_pData->start_frame = (unsigned long)( (double)nStartTime * m_pData->sfinfo.samplerate / 1000.0 );
-            sf_seek(m_pData->sndfile, m_pData->start_frame, SEEK_SET);
-        }
-        
-        // set the frames number to play until (use 0 to indicate play until the end)
-        m_pData->stop_frame = 0;
-        if (nPlayTime != SOUND_PLAYALL) 
-        {
-            ULONG nEndTime = nStartTime + nPlayTime;
-            m_pData->stop_frame = (unsigned long)( (double)nEndTime * m_pData->sfinfo.samplerate / 1000.0 );
-        }
-        
-        // set set the total frame_count to the starting frame number
-        m_pData->frame_count = m_pData->start_frame;
-        m_pData->done_playing = 0;
-        
-        // FIXME?: In Play but already playing will be ignored (no error) is that right?
-        nErr = 0;
-        if (!(m_pSalSound->m_bPlaying)) 
-        {            
-            PaError err = Pa_StartStream( m_pStream );
-            if( err != paNoError)  nErr = 1;
-        }  
-    }
-    
-    if (!nErr) 
-    {
-        m_pSalSound->changeStatePlay();
-        return;
-	}
-    m_pSalSound->setError(SOUNDERR_GENERAL_ERROR);
-}
-
-
-
-void PASFSound::stop()
-{
-    int nErr = 1;
-	if ( m_pStream ) 
-    { 
-        // stop and close the stream
-        PaError err = Pa_StopStream( m_pStream );
-        PaError err1 = Pa_CloseStream( m_pStream );
-        if( (err == paNoError) && (err1 == paNoError) ) nErr = 0;
-        m_pStream = NULL;
-    }    
-    
-    // close the sound file sound since another file can be loaded after stop 
-    if ((m_pData) && (!(m_pStream))) {
-	    if (m_pData->sndfile) 
-        {
-            sf_close(m_pData->sndfile);
-            m_pData->sndfile = NULL;
-        }
-    }
-    
-    if (!nErr) 
-    {
-        m_pSalSound->changeStateStop();
-        return;
-	}
-    m_pSalSound->setError(SOUNDERR_GENERAL_ERROR);
-    
-}
-
-
-
-void PASFSound::pause()
-{
-    int nErr = 1;
-	if (m_pStream ) {
-        PaError err = Pa_StopStream( m_pStream );
-        if( err == paNoError ) nErr = 0;
-	}
-    
-    if (!nErr) 
-    {
-        m_pSalSound->changeStatePause();
-        return;
-	}
-    m_pSalSound->setError(SOUNDERR_GENERAL_ERROR);
-}
-
-
-
-void PASFSound::cont()
-{
-    int nErr = 1;
-    if (m_pSalSound->m_bPaused) { 
-        if (m_pStream) {
-            PaError err = Pa_StartStream( m_pStream );
-            if( err == paNoError ) nErr = 0;
-        }
-    }    
-    
-    if (!nErr) 
-    {
-        m_pSalSound->changeStateCont();
-        return;
-	}
-    m_pSalSound->setError(SOUNDERR_GENERAL_ERROR);
-}
-
-
-
-BOOL PASFSound::isValid()
-{
-    if ((m_pData) && (m_pStream)) return TRUE;
-    return FALSE;
-}
-
-
-
-#endif
-
Index: vcl/unx/source/app/rptpsound.cxx
===================================================================
RCS file: vcl/unx/source/app/rptpsound.cxx
diff -N vcl/unx/source/app/rptpsound.cxx
--- vcl/unx/source/app/rptpsound.cxx	17 Sep 2006 12:34:30 -0000	1.17
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,392 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: rptpsound.cxx,v $
- *
- *  $Revision: 1.17 $
- *
- *  last change: $Author: obo $ $Date: 2006/09/17 12:34:30 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-#if defined(SOLARIS) || defined(MACOSX)
-#include <poll.h>
-#else
-#include <sys/poll.h>
-#endif
-
-#include <salsound.h>
-#include <salimpsound.hxx>
-
-#include <salunx.h>
-#include <saldata.hxx>
-#include <saldisp.hxx>
-#include <psprint/strhelper.hxx>
-#include <string.h>
-#include <unistd.h>
-
-using namespace vcl_sal;
-using namespace vos;
-using namespace psp;
-
-BOOL						RPTPSound::s_bConnected			= FALSE;
-BOOL						RPTPSound::s_bFailedOnce		= FALSE;
-OConnectorSocket			RPTPSound::s_aConnector;
-RPTPSound::RPTPSoundList	RPTPSound::s_aSounds;
-
-int RPTPSound::getFileDescriptor()
-{
-	return *(int*)(oslSocket)s_aConnector;
-}
-
-BOOL RPTPSound::connect()
-{
-	if( s_bConnected && s_aConnector.isValid() )
-		return TRUE;
-
-	if( s_bFailedOnce )
-		return FALSE;
-
-	s_bConnected = FALSE;
-
-	static const char* env = getenv( "AUDIOSERVER" );
-	static const char* portenv = env ? strchr( env, ':' ) : NULL;
-	static char sBuf[1024];
-
-	if( ! env && GetX11SalData() && GetX11SalData()->GetDisplay() &&
-		DisplayString( GetX11SalData()->GetDisplay()->GetDisplay() ) )
-	{
-		env = strdup( DisplayString( GetX11SalData()->GetDisplay()->GetDisplay() ) );
-		portenv = strchr( env, ':' );
-	}
-
-	int nPort = portenv ? atoi( portenv+1 ) : 5556;
-	nPort = nPort ? nPort : 5556;
-
-	strncpy( sBuf, "uninitialized", 14 );
-	if( env && portenv )
-	{
-		if( portenv != env )
-		{
-			strncpy( sBuf, env, portenv - env );
-			sBuf[ portenv - env ] = 0;
-		}
-		else
-			strncpy( sBuf, "localhost", 10 );
-	}
-	else
-		strncpy( sBuf, "localhost", 10 );
-
-	SalDbgAssert( "resolving \"%s\", env = \"%s\", portenv = \"%s\"\n",
-				  sBuf,
-				  env ? env : "<unset>",
-				  portenv ? portenv : "<unset>"
-				  );
-
-	::rtl::OUString aHost( sBuf, strlen(sBuf), gsl_getSystemTextEncoding() );
-
-	OInetSocketAddr aAddr( OSocketAddr::resolveHostname( aHost ) );
-	aAddr.setPort( nPort );
-	s_aConnector = OConnectorSocket();
-	TimeValue aTimeout = { 0, 100000 };
-	if( s_aConnector.connect( aAddr, &aTimeout ) == ISocketTypes::TResult_Ok )
-	{
-		s_bConnected = TRUE;
-		readLine();
-		sendCommand( "set notify=done,pause,continue" );
-		GetX11SalData()->GetLib()->Insert( getFileDescriptor(),
-				               			   NULL,
-                                           (YieldFunc)pending,
-                                           (YieldFunc)queued,
-                                           (YieldFunc)handleEvents );
-	}
-	else
-	{
-		SalDbgAssert( "RPTPSound::connect to \"%s\" on port %d failed\n", sBuf, nPort );
-		s_bFailedOnce = TRUE;
-	}
-	return s_bConnected;
-}
-
-void RPTPSound::disconnect()
-{
-	if( s_bConnected )
-	{
-		s_bConnected = FALSE;
-		GetX11SalData()->GetLib()->Remove( getFileDescriptor() );
-		s_aConnector.write( "quit\r\n", 6 );
-		s_aConnector.close();
-		SalDbgAssert( "RPTPSound::disconnect\n" );
-	}
-}
-
-int RPTPSound::pending( int nFD, void* )
-{
-	struct pollfd aPollfd;
-	aPollfd.fd			= nFD;
-	aPollfd.events		= POLLIN;
-
-	poll( &aPollfd, 1, 0 );
-
-	return aPollfd.revents & POLLIN ? 1 : 0;
-}
-
-int RPTPSound::queued( int nFD, void* pObj )
-{
-	return pending( nFD, pObj );
-}
-
-int RPTPSound::handleEvents( int, void* )
-{
-	SalDbgAssert( "RPTPSound::handleEvents\n" );
-	ByteString aLine = readLine();
-	int nPos;
-	if( aLine.GetChar( 0 ) == '@' &&
-		( nPos = aLine.Search( "event=" ) ) != STRING_NOTFOUND )
-	{
-		ULONG nID = ~0;
-		RPTPSound* pSound = NULL;
-
-		ByteString aEvent = aLine.Copy( nPos+6 );
-		aEvent = GetCommandLineToken( 0, aEvent );
-		aEvent.ToLowerAscii();
-
-		if( ( nPos = aLine.Search( "id=#" ) ) != STRING_NOTFOUND )
-		{
-			nID = aLine.Copy( nPos+4 ).ToInt32();
-			pSound = getSoundById( nID );
-		}
-
-		if( pSound && pSound->m_pSalSound )
-		{
-			if( aEvent == "done" )
-			{
-				if( pSound->m_pSalSound->m_bLoop )
-					pSound->play();
-				else
-					pSound->m_pSalSound->changeStateStop();
-			}
-			else if( aEvent == "pause" )
-				pSound->m_pSalSound->changeStatePause();
-			else if( aEvent == "continue" )
-				pSound->m_pSalSound->changeStateCont();
-		}
-	}
-	return 0;
-}
-
-ByteString RPTPSound::readLine()
-{
-	static char pAnswerBuffer[ 1024 ];
-
-	if( ! s_bConnected && ! connect() )
-		return ByteString();
-
-	memset( pAnswerBuffer, 0, sizeof( pAnswerBuffer ) );
-	if( s_aConnector.read( pAnswerBuffer, 1 ) == 1 )
-	{
-		unsigned int nTimes = 0;
-		unsigned int nPos = 1;
-		while( nTimes < 1000 && nPos < sizeof( pAnswerBuffer )-1 )
-		{
-			while( s_aConnector.recv( pAnswerBuffer + nPos, 1 ) == 1 &&
-				   nPos < sizeof( pAnswerBuffer )-1 )
-			{
-				nPos++;
-				if( pAnswerBuffer[ nPos-2 ] == '\r' &&
-					pAnswerBuffer[ nPos-1 ] == '\n' )
-				{
-					pAnswerBuffer[ nPos-2 ] = 0;
-					goto doreturn;
-				}
-			}
-            TimeValue aVal;
-            aVal.Seconds = 0;
-            aVal.Nanosec = 1000000;
-            osl_waitThread( &aVal );
-		}
-	}
-  doreturn:
-	SalDbgAssert( "read line \"%s\"\n", pAnswerBuffer );
-	return ByteString( pAnswerBuffer );
-}
-
-ByteString RPTPSound::sendCommand( const ByteString& rCommand )
-{
-	if( ! s_bConnected && ! connect() )
-		return ByteString();
-
-	SalDbgAssert( "RPTPSound::sendCommand( \"%s\" )\n", rCommand.GetBuffer() );
-	
-	ByteString aCommand( rCommand );
-	aCommand += "\r\n";
-	s_aConnector.write( aCommand.GetBuffer(), aCommand.Len() );
-	return readLine();
-}
-
-RPTPSound* RPTPSound::getSoundById( ULONG nID )
-{
-	for( unsigned int i = 0; i < s_aSounds.Count(); i++ )
-	{
-		RPTPSound* pSound = s_aSounds.GetObject( i );
-		if( pSound->m_nID == nID )
-			return pSound;
-	}
-	return NULL;
-}
-
-ULONG RPTPSound::getMaxId()
-{
-	ULONG nID = 0;
-	for( unsigned int i = 0; i < s_aSounds.Count(); i++ )
-	{
-		RPTPSound* pSound = s_aSounds.GetObject( i );
-		if( pSound->m_nID > nID )
-			nID = pSound->m_nID;
-	}
-	return nID;
-}
-
-RPTPSound::RPTPSound( X11SalSound* pSalSound ) :
-		VSound( pSalSound ),
-		m_nID( 0 )
-{
-	s_aSounds.Insert( this );
-}
-
-RPTPSound::~RPTPSound()
-{
-	s_aSounds.Remove( this );
-	m_pSalSound = NULL;
-	stop();
-	if( s_aSounds.Count() == 0 )
-		disconnect();
-}
-
-void RPTPSound::play()
-{
-	if( ! m_pSalSound )
-		return;
-
-	ByteString aCommand( "find sound=" );
-
-	aCommand += m_pSalSound->m_aSoundFile;
-	ByteString aAnswer = sendCommand( aCommand );
-	if( ! aAnswer.Len() || ! s_bConnected )
-	{
-		m_pSalSound->setError( SOUNDERR_INVALID_FILE );
-		return;
-	}
-	if( aAnswer.GetChar( 0 ) != '+' )
-	{
-		// the sound is not on the server
-		// try to put it (does not really work with rplayd 3.3.0)
-		aCommand = "put";
-		
-		initBuffer();
-
-		if( ! m_pBuffer )
-		{
-			m_pSalSound->setError( SOUNDERR_INVALID_FILE );
-			return;
-		}
-
-		aCommand += " sound=";
-		aCommand += m_pSalSound->m_aSoundFile;
-		aCommand += " size=";
-		aCommand += ByteString::CreateFromInt64((ULONG)m_aStat.st_size);
-		
-		aAnswer = sendCommand( aCommand );
-		
-		if( aAnswer.GetChar( 0 ) == '+' )
-			s_aConnector.write( m_pBuffer, m_aStat.st_size );
-		// if this fails proceed anyway, because at least rplayd 3.3.0
-		// does not seem to grok the "put" command
-
-		releaseBuffer();
-	}
-
-	aCommand = "play ";
-	aCommand += m_pSalSound->m_aSoundFile;
-	aAnswer = sendCommand( aCommand );
-	if( aAnswer.GetChar( 0 ) == '+' )
-	{
-		int nPos = aAnswer.Search( "id=#" );
-		if( nPos != STRING_NOTFOUND )
-			m_nID = aAnswer.Copy( nPos+4 ).ToInt32();
-	}
-	else
-		m_pSalSound->setError( SOUNDERR_DEVICE_NOT_READY );
-
-	SalDbgAssert( "RPTPSound::play() yields id %d\n", m_nID );
-}
-
-void RPTPSound::stop()
-{
-	ByteString aAnswer;
-	if( m_nID )
-	{
-		ByteString aCommand( "stop id=#" );
-		aCommand += ByteString::CreateFromInt64(m_nID);
-		aAnswer = sendCommand( aCommand );
-	}
-	if( aAnswer.GetChar( 0 ) != '+' && m_pSalSound)
-		m_pSalSound->setError( SOUNDERR_INVALID_FILE );
-}
-
-void RPTPSound::pause()
-{
-	if( m_nID )
-	{
-		ByteString aCommand( "pause id=#" );
-		aCommand += ByteString::CreateFromInt64(m_nID);
-		sendCommand( aCommand );
-	}
-}
-
-void RPTPSound::cont()
-{
-	if( m_nID )
-	{
-		ByteString aCommand( "continue id=#" );
-		aCommand += ByteString::CreateFromInt64(m_nID);
-		sendCommand( aCommand );
-	}
-}
-
-BOOL RPTPSound::isValid()
-{
-	if( ! s_bConnected )
-		connect();
-	if( ! s_bConnected )
-		return FALSE;
-
-	return stat( m_pSalSound->m_aSoundFile.GetBuffer(), &m_aStat ) ? FALSE : TRUE;
-}
-
Index: vcl/unx/source/app/salimpsound.hxx
===================================================================
RCS file: vcl/unx/source/app/salimpsound.hxx
diff -N vcl/unx/source/app/salimpsound.hxx
--- vcl/unx/source/app/salimpsound.hxx	31 Jul 2007 13:02:03 -0000	1.10
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,305 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: salimpsound.hxx,v $
- *
- *  $Revision: 1.10 $
- *
- *  last change: $Author: hr $ $Date: 2007/07/31 13:02:03 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-#ifndef _VCL_SALIMPSOUND_HXX
-#define _VCL_SALIMPSOUND_HXX
-
-#include <vsound.hxx>
-
-#include <osl/mutex.hxx>
-#include <vos/socket.hxx>
-
-#include <tools/list.hxx>
-#include <tools/link.hxx>
-#include <tools/gen.hxx>
-#include <tools/string.hxx>
-
-#include <vcl/sv.h>
-#include <vcl/salstype.hxx>
-
-#include <unistd.h>
-#include <sys/stat.h>
-
-#ifdef USE_PASF
-#ifdef SYSTEM_PORTAUDIO
-#include <portaudio.h>
-#else
-#include <portaudio/portaudio.h>
-#endif
-#ifdef SYSTEM_SNDFILE
-#include <sndfile.h>
-#else
-#include <sndfile/sndfile.h>
-#endif
-#endif
-
-namespace vcl_sal {
-
-// OSS can only be used on local displays
-
-#ifdef USE_OSS
-	class OSSSound : public VSound
-	{
-		// thread implementation
-		struct OSSData
-		{
-			OSSSound*	m_pSound;
-			long		m_nDataLen;
-			long		m_nStartPos;
-			long		m_nEndPos;
-			long		m_nCurPos;
-			int			m_nType;
-		};
-		DECLARE_LIST( OSSDataList, OSSData* )
-		DECLARE_LIST( OSSSoundList, OSSSound* )
-
-		static int						s_nDevice;
-		static OSSDataList				s_aDataList;
-		static osl::Mutex				s_aProtector;
-		static OSSSoundList			s_aSounds;
-
-		// static methods
-		static BOOL 		open();
-		static void 		close();
-		static void 		append( OSSSound* );
-		static void 		remove( OSSSound* );
-		static BOOL		startSound( OSSData* pData );
-		static BOOL		startAU( OSSData* pData );
-		static BOOL		startRIFF( OSSData* pData );
-		static int			findChunk( OSSData* pData, const char* pChunk );
-		static short int	readLEShort( const char* );
-		static int			readLEInt( const char* );
-		static ULONG		readBELong( const char* );
-
-		DECL_LINK( notifyStopHdl, void* );
-		DECL_LINK( notifyErrorHdl, void* );
-	protected:
-		virtual BOOL isValid();
-	public:
-		OSSSound( ::X11SalSound* pSalSound );
-		virtual ~OSSSound();
-
-		virtual void play();
-		virtual void stop();
-		virtual void pause();
-		virtual void cont();
-
-		static void run(); // thread worker
-	};
-#endif
-
-// DEVAUDIO can only be used on local displays
-
-#ifdef USE_DEVAUDIO
-	class DevAudioSound;
-	struct DevAudioData
-	{
-		DevAudioSound*	m_pSound;
-		AudioConverter*	m_pConverter;
-		long			m_nDataLen;
-		long			m_nStartPos;
-		long			m_nEndPos;
-		long			m_nCurPos;
-		int				m_nType;
-
-		DevAudioData( DevAudioSound* pSound ) :
-				m_pSound( pSound ), m_pConverter( NULL ), m_nDataLen( 0 ),
-				m_nStartPos( 0 ), m_nEndPos( 0 ), m_nCurPos( 0 ), m_nType( 0 )
-			{}
-		~DevAudioData()
-			{ if( m_pConverter ) delete m_pConverter; }
-	};
-	DECLARE_LIST( DevAudioDataList, DevAudioData* )
-	DECLARE_LIST( DevAudioSoundList, DevAudioSound* )
-
-	class DevAudioSound : public VSound
-	{
-		// thread implementation
-
-		static int						s_nDevice;
-		static DevAudioDataList		s_aDataList;
-		static osl::Mutex				s_aProtector;
-		static DevAudioSoundList		s_aSounds;
-
-		// static methods
-		static BOOL 		open();
-		static void 		close();
-		static void 		append( DevAudioSound* );
-		static void 		remove( DevAudioSound* );
-		static BOOL			startSound( DevAudioData* pData );
-		static BOOL			startAU( DevAudioData* pData );
-		static BOOL			startRIFF( DevAudioData* pData );
-		static int			findChunk( DevAudioData* pData, const char* pChunk );
-		static short int	readLEShort( const char* );
-		static int			readLEInt( const char* );
-		static ULONG		readBELong( const char* );
-
-		DECL_LINK( notifyStopHdl, void* );
-		DECL_LINK( notifyErrorHdl, void* );
-	protected:
-		virtual BOOL isValid();
-	public:
-		DevAudioSound( ::X11SalSound* pSalSound );
-		virtual ~DevAudioSound();
-
-		virtual void play();
-		virtual void stop();
-		virtual void pause();
-		virtual void cont();
-
-		static void run();
-	};
-#endif
-
-
-// Portaudio / libsndfile can only be used on local displays
-
-#ifdef USE_PASF
-#define PASF_BUFFER_LEN  (8192)
-
-typedef struct
-{       
-#if PA_VER == 18
-    PaDeviceID       device;
-#else
-    PaDeviceIndex    device;
-#endif
-    PaSampleFormat   format;
-    unsigned int     bufsize;
-    SNDFILE          *sndfile;
-    SF_INFO          sfinfo;
-    int              loop_count;
-    unsigned long    start_frame;
-    unsigned long    stop_frame;
-    unsigned long    frame_count;
-    int              done_playing;
-} PASFAudioData ;
-
-
-class PASFSound : public VSound
-{
-	private:	
-    PaStream*                    m_pStream;
-    PASFAudioData*               m_pData;
-    
-	protected:
-    virtual BOOL isValid();
-    
-	public:
-    PASFSound( ::X11SalSound* pSalSound );
-    virtual ~PASFSound();
-    
-    virtual void play();
-    virtual void stop();
-    virtual void pause();
-    virtual void cont();
-    
-};
-#endif
-
-
-
-class RPTPSound : public VSound
-{
-        DECLARE_LIST( RPTPSoundList, RPTPSound* )
-
-	static BOOL								s_bConnected;
-	static NAMESPACE_VOS(OConnectorSocket)		s_aConnector;
-	static RPTPSoundList						s_aSounds;
-	static BOOL								s_bFailedOnce;
-
-	static BOOL			connect();
-	static void			disconnect();
-	static ByteString	readLine();
-	static ByteString	sendCommand( const ByteString& rCommand );
-
-	static int getFileDescriptor();
-	static RPTPSound* getSoundById( ULONG );
-	static ULONG      getMaxId();
-
-	// SalYieldEntry
-	static int pending( int, void* );
-	static int queued( int, void* );
-	static int handleEvents( int, void* );
-
-	ULONG			m_nID;
-  protected:
-	virtual BOOL isValid();
-  public:
-  RPTPSound( ::X11SalSound* pSalSound );
-
-	virtual	~RPTPSound();
-
-	virtual void play();
-	virtual void stop();
-	virtual void pause();
-	virtual void cont();
-};
-
-
-#ifdef USE_NAS
-	class NASSound : public VSound
-	{
-		DECLARE_LIST( NASSoundList, NASSound* )
-		
-		static NASSoundList				s_aSounds;
-		static void*					s_pServer;
-		static BOOL						s_bFailedOnce;
-
-		static BOOL	connect();
-		static void disconnect();
-
-		static void callback( void*, void*, void*, void* );
-		// SalYieldEntry
-		static int pending( int, void* );
-		static int queued( int, void* );
-		static int handleEvents( int, void* );
-
-		ULONG	m_nFlowID;
-	protected:
-		virtual BOOL isValid();
-	public:
-		NASSound( ::X11SalSound* pSalSound );
-
-		virtual	~NASSound();
-
-		virtual void play();
-		virtual void stop();
-		virtual void pause();
-		virtual void cont();
-	};
-#endif
-}
-
-#endif
Index: vcl/unx/source/app/salinst.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/salinst.cxx,v
retrieving revision 1.32
retrieving revision 1.32.60.1
diff -u -p -u -p -r1.32 -r1.32.60.1
--- vcl/unx/source/app/salinst.cxx	27 Jun 2007 20:47:09 -0000	1.32
+++ vcl/unx/source/app/salinst.cxx	31 Aug 2007 09:44:58 -0000	1.32.60.1
@@ -75,9 +75,6 @@
 #ifndef _SV_SALOGL_H
 #include <salogl.h>
 #endif
-#ifndef _SV_SALSOUND_H
-#include <salsound.h>
-#endif
 
 // -------------------------------------------------------------------------
 //
@@ -145,9 +142,6 @@ extern "C"
 
 X11SalInstance::~X11SalInstance()
 {
-    // deinitialize global sound resources
-    X11SalSound::Release();
-
     // release (possibly open) OpenGL context
     X11SalOpenGL::Release();
 
@@ -323,9 +317,3 @@ SalOpenGL* X11SalInstance::CreateSalOpen
 {
     return new X11SalOpenGL( pGraphics );
 }
-
-SalSound* X11SalInstance::CreateSalSound()
-{
-    return new X11SalSound();
-}
-
Index: vcl/unx/source/app/salsound2.cxx
===================================================================
RCS file: vcl/unx/source/app/salsound2.cxx
diff -N vcl/unx/source/app/salsound2.cxx
--- vcl/unx/source/app/salsound2.cxx	27 Jun 2007 20:47:22 -0000	1.11
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,334 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: salsound2.cxx,v $
- *
- *  $Revision: 1.11 $
- *
- *  last change: $Author: hr $ $Date: 2007/06/27 20:47:22 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-#include <sys/stat.h>
-#include <sys/mman.h>
-#include <fcntl.h>
-#include <unistd.h>
-
-#include <salunx.h>
-#include <saldata.hxx>
-#include <saldisp.hxx>
-
-#include <salsound.h>
-#include <vcl/salstype.hxx>
-#include <salimpsound.hxx>
-
-using namespace vcl_sal;
-
-ULONG X11SalSound::s_nSoundState = SOUND_STATE_UNLOADED;
-
-X11SalSound::X11SalSound() :
-		m_pVSound( NULL ),
-		m_bLoop( false ),
-		m_bPlaying( false ),
-		m_bPaused( false ),
-		m_nStartTime( 0 ),
-		m_nPlayTime( SOUND_PLAYALL )
-{
-	SalDbgAssert( "X11SalSound::X11SalSound()\n" );
-    #ifdef USE_PASF
-    // initialize the portaudio library (typically just once)
-    if (s_nSoundState == SOUND_STATE_UNLOADED) 
-    {
-        PaError err = Pa_Initialize();  
-        if( err == paNoError )
-            s_nSoundState = SOUND_STATE_VALID;
-    }
-    if (s_nSoundState != SOUND_STATE_VALID )
-        s_nSoundState = SOUND_STATE_INVALID;
-    #else
-    s_nSoundState = SOUND_STATE_VALID;
-    #endif
-}
-
-X11SalSound::~X11SalSound()
-{
-	SalDbgAssert( "X11SalSound::~X11SalSound()\n" );
-	if( m_pVSound )
-		delete m_pVSound;
-}
-
-void X11SalSound::Release()
-{
-#ifdef USE_PASF
-        // terminate the portaudio library
-        if ( s_nSoundState == SOUND_STATE_VALID ) Pa_Terminate();
-#endif
-        s_nSoundState = SOUND_STATE_UNLOADED;
-}
-
-bool X11SalSound::IsValid()
-{
-  return (X11SalSound::s_nSoundState == SOUND_STATE_VALID);
-}
-
-
-bool X11SalSound::Init( const String& rSoundName, ULONG& rSoundLen )
-{
-    
-    // FIXME: NULL file names are passed in
-    // This can happen before play of previous sound has completed and this disrupts things
-    // simpy ignore this for now
-    if (! (rSoundName.Len()))
-        return false;
-    
-	if( m_pVSound )
-		delete m_pVSound;
-
-    #ifdef MACOSX
-	m_aSoundFile = ByteString( rSoundName, RTL_TEXTENCODING_UTF8 );
-    #else
-	m_aSoundFile = ByteString( rSoundName, osl_getThreadTextEncoding() );
-    #endif
-	SalDbgAssert( "X11SalSound::Init( \"%s\", %d )\n", m_aSoundFile.GetBuffer(), rSoundLen );
-    
-	m_pVSound = ( !m_aSoundFile.Len() || access( m_aSoundFile.GetBuffer(), R_OK ) ) ? NULL : VSound::createVSound( this );
-    
-	return m_pVSound ? true : false;
-}
-
-void X11SalSound::Play( ULONG nStartTime, ULONG nPlayTime, bool bLoop )
-{
-	SalDbgAssert( "SalSound::Play( %d, %d, %s )\n", nStartTime, nPlayTime, bLoop ? "TRUE" : "FALSE" );
-	if( m_bPlaying && m_pVSound )
-		m_pVSound->stop();
-    
-	m_bLoop			= bLoop;
-	m_nStartTime	= nStartTime;
-	m_nPlayTime		= nPlayTime;
-    
-	if( m_pVSound )
-		m_pVSound->play();
-}
-
-void X11SalSound::Stop()
-{
-	SalDbgAssert( "X11SalSound::Stop()\n" );
-	if( m_bPlaying && m_pVSound )
-		m_pVSound->stop();
-}
-
-void X11SalSound::Pause()
-{
-	if( m_bPlaying && m_pVSound )
-		m_pVSound->pause();
-}
-
-void X11SalSound::Continue()
-{
-	if( m_bPaused && m_pVSound )
-		m_pVSound->cont();
-}
-
-bool X11SalSound::IsLoopMode() const
-{
-    return m_bLoop;
-}
-
-bool X11SalSound::IsPlaying() const
-{
-    return m_bPlaying;
-}
-
-bool X11SalSound::IsPaused() const
-{
-    return m_bPaused;
-}
-
-// --------------------------------------------------
-
-void VSound::initBuffer()
-{
-	if( stat( m_pSalSound->m_aSoundFile.GetBuffer(), &m_aStat ) )
-	{
-		SalDbgAssert( "could not stat \"%s\"\n", m_pSalSound->m_aSoundFile.GetBuffer() );
-		return;
-	}
-	int nFile;
-	if( ( nFile = ::open( m_pSalSound->m_aSoundFile.GetBuffer(), O_RDONLY ) ) == -1 )
-	{
-		SalDbgAssert( "could not open %s\n", m_pSalSound->m_aSoundFile.GetBuffer() );
-		return;
-	}
-
-	m_pBuffer = (char *)mmap( NULL, m_aStat.st_size, PROT_READ, MAP_SHARED, nFile, 0 );
-	::close( nFile );
-	if( m_pBuffer == MAP_FAILED )
-	{
-		SalDbgAssert( "could not mmap %s\n", m_pSalSound->m_aSoundFile.GetBuffer() );
-		m_pBuffer = NULL;
-		return;
-	}
-}
-
-void VSound::releaseBuffer()
-{
-	if( m_pBuffer )
-	{
-		munmap( m_pBuffer, m_aStat.st_size );
-		m_pBuffer = NULL;
-	}
-}
-
-
-VSound* VSound::createVSound( X11SalSound* pX11SalSound )
-{
-	struct stat aStat;
-	if( stat( pX11SalSound->m_aSoundFile.GetBuffer(), & aStat ) )
-		return NULL;
-
-	VSound* pRet = NULL;
-
-	if( GetX11SalData()->GetDisplay()->IsLocal() )
-    {
-        #ifdef USE_PASF
-        {
-            pRet = new PASFSound( pX11SalSound );
-            if( pRet && ! pRet->isValid() )
-            {
-                delete pRet;
-                pRet = NULL;
-            }
-            else
-                SalDbgAssert( "got an PASFSound\n" );
-        }
-        #endif
-
-        #ifdef USE_OSS
-        if( ! pRet )
-        {
-            pRet = new OSSSound( pX11SalSound );
-            if( pRet && ! pRet->isValid() )
-            {
-                delete pRet;
-                pRet = NULL;
-            }
-            else
-                SalDbgAssert( "got an OSSSound\n" );
-        }
-        #endif
-
-        #ifdef USE_DEVAUDIO
-        if( ! pRet )
-        {
-            pRet = new DevAudioSound( pX11SalSound );
-            if( pRet && ! pRet->isValid() )
-            {
-                delete pRet;
-                pRet = NULL;
-            }
-            else
-                SalDbgAssert( "got an DevAudioSound\n" );
-        }
-        #endif
-    }
-    
-#ifdef USE_NAS
-	if( ! pRet )
-	{
-		pRet = new NASSound( pX11SalSound );
-		if( pRet && ! pRet->isValid() )
-		{
-			delete pRet;
-			pRet = NULL;
-		}
-		else
-			SalDbgAssert( "got an AUSound\n" );
-	}
-#endif
-
-	if( ! pRet )
-	{
-		pRet = new RPTPSound( pX11SalSound );
-		if( pRet && ! pRet->isValid() )
-		{
-			delete pRet;
-			pRet = NULL;
-		}
-		else
-			SalDbgAssert( "got an RPTPSound\n" );
-	}
-	return pRet;
-}
-
-
-void X11SalSound::changeStatePlay()
-{
-	SalDbgAssert( "SalSound(%p)::changeStatePlay()\n", this );
-
-	m_bPlaying	= TRUE;
-	m_bPaused 	= FALSE;
-
-    CallNotifyProc( SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
-}
-
-void X11SalSound::changeStateStop()
-{
-	SalDbgAssert( "X11SalSound(%p)::changeStateStop()\n", this );
-
-	m_bPlaying	= FALSE;
-	m_bPaused 	= FALSE;
-
-    CallNotifyProc( SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
-}
-
-void X11SalSound::changeStatePause()
-{
-	SalDbgAssert( "X11SalSound(%p)::changeStatePause()\n", this );
-
-	m_bPlaying	= TRUE;
-	m_bPaused	= TRUE;
-
-    CallNotifyProc( SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
-}
-
-void X11SalSound::changeStateCont()
-{
-	SalDbgAssert( "X11SalSound(%p)::changeStateCont()\n", this );
-
-	m_bPlaying	= TRUE;
-	m_bPaused	= FALSE;
-
-    CallNotifyProc( SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
-}
-
-void X11SalSound::setError( ULONG nError )
-{
-    CallNotifyProc( SOUND_NOTIFY_ERROR, nError );
-}
-
Index: vcl/unx/source/app/sunconvert.cxx
===================================================================
RCS file: vcl/unx/source/app/sunconvert.cxx
diff -N vcl/unx/source/app/sunconvert.cxx
--- vcl/unx/source/app/sunconvert.cxx	17 Sep 2006 12:36:39 -0000	1.6
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,1330 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: sunconvert.cxx,v $
- *
- *  $Revision: 1.6 $
- *
- *  last change: $Author: obo $ $Date: 2006/09/17 12:36:39 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-#ifndef _G72X_H
-#define	_G72X_H
-
-#define	AUDIO_ENCODING_ULAW	(1)	/* ISDN u-law */
-#define	AUDIO_ENCODING_ALAW	(2)	/* ISDN A-law */
-#define	AUDIO_ENCODING_LINEAR	(3)	/* PCM 2's-complement (0-center) */
-
-/*
- * The following is the definition of the state structure
- * used by the G.721/G.723 encoder and decoder to preserve their internal
- * state between successive calls.  The meanings of the majority
- * of the state structure fields are explained in detail in the
- * CCITT Recommendation G.721.  The field names are essentially indentical
- * to variable names in the bit level description of the coding algorithm
- * included in this Recommendation.
- */
-struct g72x_state {
-	long yl;	/* Locked or steady state step size multiplier. */
-	short yu;	/* Unlocked or non-steady state step size multiplier. */
-	short dms;	/* Short term energy estimate. */
-	short dml;	/* Long term energy estimate. */
-	short ap;	/* Linear weighting coefficient of 'yl' and 'yu'. */
-
-	short a[2];	/* Coefficients of pole portion of prediction filter. */
-	short b[6];	/* Coefficients of zero portion of prediction filter. */
-	short pk[2];	/*
-			 * Signs of previous two samples of a partially
-			 * reconstructed signal.
-			 */
-	short dq[6];	/*
-			 * Previous 6 samples of the quantized difference
-			 * signal represented in an internal floating point
-			 * format.
-			 */
-	short sr[2];	/*
-			 * Previous 2 samples of the quantized difference
-			 * signal represented in an internal floating point
-			 * format.
-			 */
-	char td;	/* delayed tone detect, new in 1988 version */
-};
-
-/* External function definitions. */
-
-extern void g72x_init_state(struct g72x_state *);
-extern int g721_encoder(
-		int sample,
-		int in_coding,
-		struct g72x_state *state_ptr);
-extern int g721_decoder(
-		int code,
-		int out_coding,
-		struct g72x_state *state_ptr);
-extern int g723_24_encoder(
-		int sample,
-		int in_coding,
-		struct g72x_state *state_ptr);
-extern int g723_24_decoder(
-		int code,
-		int out_coding,
-		struct g72x_state *state_ptr);
-extern int g723_40_encoder(
-		int sample,
-		int in_coding,
-		struct g72x_state *state_ptr);
-extern int g723_40_decoder(
-		int code,
-		int out_coding,
-		struct g72x_state *state_ptr);
-
-#endif /* !_G72X_H */
-/*
- * g711.c
- *
- * u-law, A-law and linear PCM conversions.
- */
-#define	SIGN_BIT	(0x80)		/* Sign bit for a A-law byte. */
-#define	QUANT_MASK	(0xf)		/* Quantization field mask. */
-#define	NSEGS		(8)		/* Number of A-law segments. */
-#define	SEG_SHIFT	(4)		/* Left shift for segment number. */
-#define	SEG_MASK	(0x70)		/* Segment field mask. */
-
-static short seg_end[8] = {0xFF, 0x1FF, 0x3FF, 0x7FF,
-			    0xFFF, 0x1FFF, 0x3FFF, 0x7FFF};
-
-/* copy from CCITT G.711 specifications */
-unsigned char _u2a[128] = {			/* u- to A-law conversions */
-	1,	1,	2,	2,	3,	3,	4,	4,
-	5,	5,	6,	6,	7,	7,	8,	8,
-	9,	10,	11,	12,	13,	14,	15,	16,
-	17,	18,	19,	20,	21,	22,	23,	24,
-	25,	27,	29,	31,	33,	34,	35,	36,
-	37,	38,	39,	40,	41,	42,	43,	44,
-	46,	48,	49,	50,	51,	52,	53,	54,
-	55,	56,	57,	58,	59,	60,	61,	62,
-	64,	65,	66,	67,	68,	69,	70,	71,
-	72,	73,	74,	75,	76,	77,	78,	79,
-	81,	82,	83,	84,	85,	86,	87,	88,
-	89,	90,	91,	92,	93,	94,	95,	96,
-	97,	98,	99,	100,	101,	102,	103,	104,
-	105,	106,	107,	108,	109,	110,	111,	112,
-	113,	114,	115,	116,	117,	118,	119,	120,
-	121,	122,	123,	124,	125,	126,	127,	128};
-
-unsigned char _a2u[128] = {			/* A- to u-law conversions */
-	1,	3,	5,	7,	9,	11,	13,	15,
-	16,	17,	18,	19,	20,	21,	22,	23,
-	24,	25,	26,	27,	28,	29,	30,	31,
-	32,	32,	33,	33,	34,	34,	35,	35,
-	36,	37,	38,	39,	40,	41,	42,	43,
-	44,	45,	46,	47,	48,	48,	49,	49,
-	50,	51,	52,	53,	54,	55,	56,	57,
-	58,	59,	60,	61,	62,	63,	64,	64,
-	65,	66,	67,	68,	69,	70,	71,	72,
-	73,	74,	75,	76,	77,	78,	79,	79,
-	80,	81,	82,	83,	84,	85,	86,	87,
-	88,	89,	90,	91,	92,	93,	94,	95,
-	96,	97,	98,	99,	100,	101,	102,	103,
-	104,	105,	106,	107,	108,	109,	110,	111,
-	112,	113,	114,	115,	116,	117,	118,	119,
-	120,	121,	122,	123,	124,	125,	126,	127};
-
-static int
-search(
-	int		val,
-	short		*table,
-	int		size)
-{
-	int		i;
-
-	for (i = 0; i < size; i++) {
-		if (val <= *table++)
-			return (i);
-	}
-	return (size);
-}
-
-/*
- * linear2alaw() - Convert a 16-bit linear PCM value to 8-bit A-law
- *
- * linear2alaw() accepts an 16-bit integer and encodes it as A-law data.
- *
- *		Linear Input Code	Compressed Code
- *	------------------------	---------------
- *	0000000wxyza			000wxyz
- *	0000001wxyza			001wxyz
- *	000001wxyzab			010wxyz
- *	00001wxyzabc			011wxyz
- *	0001wxyzabcd			100wxyz
- *	001wxyzabcde			101wxyz
- *	01wxyzabcdef			110wxyz
- *	1wxyzabcdefg			111wxyz
- *
- * For further information see John C. Bellamy's Digital Telephony, 1982,
- * John Wiley & Sons, pps 98-111 and 472-476.
- */
-unsigned char
-linear2alaw(
-	int		pcm_val)	/* 2's complement (16-bit range) */
-{
-	int		mask;
-	int		seg;
-	unsigned char	aval;
-
-	if (pcm_val >= 0) {
-		mask = 0xD5;		/* sign (7th) bit = 1 */
-	} else {
-		mask = 0x55;		/* sign bit = 0 */
-		pcm_val = -pcm_val - 8;
-	}
-
-	/* Convert the scaled magnitude to segment number. */
-	seg = search(pcm_val, seg_end, 8);
-
-	/* Combine the sign, segment, and quantization bits. */
-
-	if (seg >= 8)		/* out of range, return maximum value. */
-		return (0x7F ^ mask);
-	else {
-		aval = seg << SEG_SHIFT;
-		if (seg < 2)
-			aval |= (pcm_val >> 4) & QUANT_MASK;
-		else
-			aval |= (pcm_val >> (seg + 3)) & QUANT_MASK;
-		return (aval ^ mask);
-	}
-}
-
-/*
- * alaw2linear() - Convert an A-law value to 16-bit linear PCM
- *
- */
-int
-alaw2linear(
-	unsigned char	a_val)
-{
-	int		t;
-	int		seg;
-
-	a_val ^= 0x55;
-
-	t = (a_val & QUANT_MASK) << 4;
-	seg = ((unsigned)a_val & SEG_MASK) >> SEG_SHIFT;
-	switch (seg) {
-	case 0:
-		t += 8;
-		break;
-	case 1:
-		t += 0x108;
-		break;
-	default:
-		t += 0x108;
-		t <<= seg - 1;
-	}
-	return ((a_val & SIGN_BIT) ? t : -t);
-}
-
-#define	BIAS		(0x84)		/* Bias for linear code. */
-
-/*
- * linear2ulaw() - Convert a linear PCM value to u-law
- *
- * In order to simplify the encoding process, the original linear magnitude
- * is biased by adding 33 which shifts the encoding range from (0 - 8158) to
- * (33 - 8191). The result can be seen in the following encoding table:
- *
- *	Biased Linear Input Code	Compressed Code
- *	------------------------	---------------
- *	00000001wxyza			000wxyz
- *	0000001wxyzab			001wxyz
- *	000001wxyzabc			010wxyz
- *	00001wxyzabcd			011wxyz
- *	0001wxyzabcde			100wxyz
- *	001wxyzabcdef			101wxyz
- *	01wxyzabcdefg			110wxyz
- *	1wxyzabcdefgh			111wxyz
- *
- * Each biased linear code has a leading 1 which identifies the segment
- * number. The value of the segment number is equal to 7 minus the number
- * of leading 0's. The quantization interval is directly available as the
- * four bits wxyz.  * The trailing bits (a - h) are ignored.
- *
- * Ordinarily the complement of the resulting code word is used for
- * transmission, and so the code word is complemented before it is returned.
- *
- * For further information see John C. Bellamy's Digital Telephony, 1982,
- * John Wiley & Sons, pps 98-111 and 472-476.
- */
-unsigned char
-linear2ulaw(
-	int		pcm_val)	/* 2's complement (16-bit range) */
-{
-	int		mask;
-	int		seg;
-	unsigned char	uval;
-
-	/* Get the sign and the magnitude of the value. */
-	if (pcm_val < 0) {
-		pcm_val = BIAS - pcm_val;
-		mask = 0x7F;
-	} else {
-		pcm_val += BIAS;
-		mask = 0xFF;
-	}
-
-	/* Convert the scaled magnitude to segment number. */
-	seg = search(pcm_val, seg_end, 8);
-
-	/*
-	 * Combine the sign, segment, quantization bits;
-	 * and complement the code word.
-	 */
-	if (seg >= 8)		/* out of range, return maximum value. */
-		return (0x7F ^ mask);
-	else {
-		uval = (seg << 4) | ((pcm_val >> (seg + 3)) & 0xF);
-		return (uval ^ mask);
-	}
-
-}
-
-/*
- * ulaw2linear() - Convert a u-law value to 16-bit linear PCM
- *
- * First, a biased linear code is derived from the code word. An unbiased
- * output can then be obtained by subtracting 33 from the biased code.
- *
- * Note that this function expects to be passed the complement of the
- * original code word. This is in keeping with ISDN conventions.
- */
-int
-ulaw2linear(
-	unsigned char	u_val)
-{
-	int		t;
-
-	/* Complement to obtain normal u-law value. */
-	u_val = ~u_val;
-
-	/*
-	 * Extract and bias the quantization bits. Then
-	 * shift up by the segment number and subtract out the bias.
-	 */
-	t = ((u_val & QUANT_MASK) << 3) + BIAS;
-	t <<= ((unsigned)u_val & SEG_MASK) >> SEG_SHIFT;
-
-	return ((u_val & SIGN_BIT) ? (BIAS - t) : (t - BIAS));
-}
-
-/* A-law to u-law conversion */
-unsigned char
-alaw2ulaw(
-	unsigned char	aval)
-{
-	aval &= 0xff;
-	return ((aval & 0x80) ? (0xFF ^ _a2u[aval ^ 0xD5]) :
-	    (0x7F ^ _a2u[aval ^ 0x55]));
-}
-
-/* u-law to A-law conversion */
-unsigned char
-ulaw2alaw(
-	unsigned char	uval)
-{
-	uval &= 0xff;
-	return ((uval & 0x80) ? (0xD5 ^ (_u2a[0xFF ^ uval] - 1)) :
-	    (0x55 ^ (_u2a[0x7F ^ uval] - 1)));
-}
-/*
- * g72x.c
- *
- * Common routines for G.721 and G.723 conversions.
- */
-
-static short power2[15] = {1, 2, 4, 8, 0x10, 0x20, 0x40, 0x80,
-			0x100, 0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000};
-
-/*
- * quan()
- *
- * quantizes the input val against the table of size short integers.
- * It returns i if table[i - 1] <= val < table[i].
- *
- * Using linear search for simple coding.
- */
-static int
-quan(
-	int		val,
-	short		*table,
-	int		size)
-{
-	int		i;
-
-	for (i = 0; i < size; i++)
-		if (val < *table++)
-			break;
-	return (i);
-}
-
-/*
- * fmult()
- *
- * returns the integer product of the 14-bit integer "an" and
- * "floating point" representation (4-bit exponent, 6-bit mantessa) "srn".
- */
-static int
-fmult(
-	int		an,
-	int		srn)
-{
-	short		anmag, anexp, anmant;
-	short		wanexp, wanmant;
-	short		retval;
-
-	anmag = (an > 0) ? an : ((-an) & 0x1FFF);
-	anexp = quan(anmag, power2, 15) - 6;
-	anmant = (anmag == 0) ? 32 :
-	    (anexp >= 0) ? anmag >> anexp : anmag << -anexp;
-	wanexp = anexp + ((srn >> 6) & 0xF) - 13;
-
-	wanmant = (anmant * (srn & 077) + 0x30) >> 4;
-	retval = (wanexp >= 0) ? ((wanmant << wanexp) & 0x7FFF) :
-	    (wanmant >> -wanexp);
-
-	return (((an ^ srn) < 0) ? -retval : retval);
-}
-
-/*
- * g72x_init_state()
- *
- * This routine initializes and/or resets the g72x_state structure
- * pointed to by 'state_ptr'.
- * All the initial state values are specified in the CCITT G.721 document.
- */
-void
-g72x_init_state(
-	struct g72x_state *state_ptr)
-{
-	int		cnta;
-
-	state_ptr->yl = 34816;
-	state_ptr->yu = 544;
-	state_ptr->dms = 0;
-	state_ptr->dml = 0;
-	state_ptr->ap = 0;
-	for (cnta = 0; cnta < 2; cnta++) {
-		state_ptr->a[cnta] = 0;
-		state_ptr->pk[cnta] = 0;
-		state_ptr->sr[cnta] = 32;
-	}
-	for (cnta = 0; cnta < 6; cnta++) {
-		state_ptr->b[cnta] = 0;
-		state_ptr->dq[cnta] = 32;
-	}
-	state_ptr->td = 0;
-}
-
-/*
- * predictor_zero()
- *
- * computes the estimated signal from 6-zero predictor.
- *
- */
-int
-predictor_zero(
-	struct g72x_state *state_ptr)
-{
-	int		i;
-	int		sezi;
-
-	sezi = fmult(state_ptr->b[0] >> 2, state_ptr->dq[0]);
-	for (i = 1; i < 6; i++)			/* ACCUM */
-		sezi += fmult(state_ptr->b[i] >> 2, state_ptr->dq[i]);
-	return (sezi);
-}
-/*
- * predictor_pole()
- *
- * computes the estimated signal from 2-pole predictor.
- *
- */
-int
-predictor_pole(
-	struct g72x_state *state_ptr)
-{
-	return (fmult(state_ptr->a[1] >> 2, state_ptr->sr[1]) +
-	    fmult(state_ptr->a[0] >> 2, state_ptr->sr[0]));
-}
-/*
- * step_size()
- *
- * computes the quantization step size of the adaptive quantizer.
- *
- */
-int
-step_size(
-	struct g72x_state *state_ptr)
-{
-	int		y;
-	int		dif;
-	int		al;
-
-	if (state_ptr->ap >= 256)
-		return (state_ptr->yu);
-	else {
-		y = state_ptr->yl >> 6;
-		dif = state_ptr->yu - y;
-		al = state_ptr->ap >> 2;
-		if (dif > 0)
-			y += (dif * al) >> 6;
-		else if (dif < 0)
-			y += (dif * al + 0x3F) >> 6;
-		return (y);
-	}
-}
-
-/*
- * quantize()
- *
- * Given a raw sample, 'd', of the difference signal and a
- * quantization step size scale factor, 'y', this routine returns the
- * ADPCM codeword to which that sample gets quantized.  The step
- * size scale factor division operation is done in the log base 2 domain
- * as a subtraction.
- */
-int
-quantize(
-	int		d,	/* Raw difference signal sample */
-	int		y,	/* Step size multiplier */
-	short		*table,	/* quantization table */
-	int		size)	/* table size of short integers */
-{
-	short		dqm;	/* Magnitude of 'd' */
-	short		exp;	/* Integer part of base 2 log of 'd' */
-	short		mant;	/* Fractional part of base 2 log */
-	short		dl;	/* Log of magnitude of 'd' */
-	short		dln;	/* Step size scale factor normalized log */
-	int		i;
-
-	/*
-	 * LOG
-	 *
-	 * Compute base 2 log of 'd', and store in 'dl'.
-	 */
-	dqm = abs(d);
-	exp = quan(dqm >> 1, power2, 15);
-	mant = ((dqm << 7) >> exp) & 0x7F;	/* Fractional portion. */
-	dl = (exp << 7) + mant;
-
-	/*
-	 * SUBTB
-	 *
-	 * "Divide" by step size multiplier.
-	 */
-	dln = dl - (y >> 2);
-
-	/*
-	 * QUAN
-	 *
-	 * Obtain codword i for 'd'.
-	 */
-	i = quan(dln, table, size);
-	if (d < 0)			/* take 1's complement of i */
-		return ((size << 1) + 1 - i);
-	else if (i == 0)		/* take 1's complement of 0 */
-		return ((size << 1) + 1); /* new in 1988 */
-	else
-		return (i);
-}
-/*
- * reconstruct()
- *
- * Returns reconstructed difference signal 'dq' obtained from
- * codeword 'i' and quantization step size scale factor 'y'.
- * Multiplication is performed in log base 2 domain as addition.
- */
-int
-reconstruct(
-	int		sign,	/* 0 for non-negative value */
-	int		dqln,	/* G.72x codeword */
-	int		y)	/* Step size multiplier */
-{
-	short		dql;	/* Log of 'dq' magnitude */
-	short		dex;	/* Integer part of log */
-	short		dqt;
-	short		dq;	/* Reconstructed difference signal sample */
-
-	dql = dqln + (y >> 2);	/* ADDA */
-
-	if (dql < 0) {
-		return ((sign) ? -0x8000 : 0);
-	} else {		/* ANTILOG */
-		dex = (dql >> 7) & 15;
-		dqt = 128 + (dql & 127);
-		dq = (dqt << 7) >> (14 - dex);
-		return ((sign) ? (dq - 0x8000) : dq);
-	}
-}
-
-
-/*
- * update()
- *
- * updates the state variables for each output code
- */
-void
-update(
-	int		code_size,	/* distinguish 723_40 with others */
-	int		y,		/* quantizer step size */
-	int		wi,		/* scale factor multiplier */
-	int		fi,		/* for long/short term energies */
-	int		dq,		/* quantized prediction difference */
-	int		sr,		/* reconstructed signal */
-	int		dqsez,		/* difference from 2-pole predictor */
-	struct g72x_state *state_ptr)	/* coder state pointer */
-{
-	int		cnt;
-	short		mag, exp;	/* Adaptive predictor, FLOAT A */
-	short		a2p = 0;		/* LIMC */
-	short		a1ul;		/* UPA1 */
-	short		pks1;	/* UPA2 */
-	short		fa1;
-	char		tr;		/* tone/transition detector */
-	short		ylint, thr2, dqthr;
-	short  		ylfrac, thr1;
-	short		pk0;
-
-	pk0 = (dqsez < 0) ? 1 : 0;	/* needed in updating predictor poles */
-
-	mag = dq & 0x7FFF;		/* prediction difference magnitude */
-	/* TRANS */
-	ylint = state_ptr->yl >> 15;	/* exponent part of yl */
-	ylfrac = (state_ptr->yl >> 10) & 0x1F;	/* fractional part of yl */
-	thr1 = (32 + ylfrac) << ylint;		/* threshold */
-	thr2 = (ylint > 9) ? 31 << 10 : thr1;	/* limit thr2 to 31 << 10 */
-	dqthr = (thr2 + (thr2 >> 1)) >> 1;	/* dqthr = 0.75 * thr2 */
-	if (state_ptr->td == 0)		/* signal supposed voice */
-		tr = 0;
-	else if (mag <= dqthr)		/* supposed data, but small mag */
-		tr = 0;			/* treated as voice */
-	else				/* signal is data (modem) */
-		tr = 1;
-
-	/*
-	 * Quantizer scale factor adaptation.
-	 */
-
-	/* FUNCTW & FILTD & DELAY */
-	/* update non-steady state step size multiplier */
-	state_ptr->yu = y + ((wi - y) >> 5);
-
-	/* LIMB */
-	if (state_ptr->yu < 544)	/* 544 <= yu <= 5120 */
-		state_ptr->yu = 544;
-	else if (state_ptr->yu > 5120)
-		state_ptr->yu = 5120;
-
-	/* FILTE & DELAY */
-	/* update steady state step size multiplier */
-	state_ptr->yl += state_ptr->yu + ((-state_ptr->yl) >> 6);
-
-	/*
-	 * Adaptive predictor coefficients.
-	 */
-	if (tr == 1) {			/* reset a's and b's for modem signal */
-		state_ptr->a[0] = 0;
-		state_ptr->a[1] = 0;
-		state_ptr->b[0] = 0;
-		state_ptr->b[1] = 0;
-		state_ptr->b[2] = 0;
-		state_ptr->b[3] = 0;
-		state_ptr->b[4] = 0;
-		state_ptr->b[5] = 0;
-		// TODO WHat is the correct value of a2p
-		a2p = 0;
-	} else {			/* update a's and b's */
-		pks1 = pk0 ^ state_ptr->pk[0];		/* UPA2 */
-
-		/* update predictor pole a[1] */
-		a2p = state_ptr->a[1] - (state_ptr->a[1] >> 7);
-		if (dqsez != 0) {
-			fa1 = (pks1) ? state_ptr->a[0] : -state_ptr->a[0];
-			if (fa1 < -8191)	/* a2p = function of fa1 */
-				a2p -= 0x100;
-			else if (fa1 > 8191)
-				a2p += 0xFF;
-			else
-				a2p += fa1 >> 5;
-
-			if (pk0 ^ state_ptr->pk[1])
-				/* LIMC */
-				if (a2p <= -12160)
-					a2p = -12288;
-				else if (a2p >= 12416)
-					a2p = 12288;
-				else
-					a2p -= 0x80;
-			else if (a2p <= -12416)
-				a2p = -12288;
-			else if (a2p >= 12160)
-				a2p = 12288;
-			else
-				a2p += 0x80;
-		}
-
-		/* TRIGB & DELAY */
-		state_ptr->a[1] = a2p;
-
-		/* UPA1 */
-		/* update predictor pole a[0] */
-		state_ptr->a[0] -= state_ptr->a[0] >> 8;
-		if (dqsez != 0)
-			if (pks1 == 0)
-				state_ptr->a[0] += 192;
-			else
-				state_ptr->a[0] -= 192;
-
-		/* LIMD */
-		a1ul = 15360 - a2p;
-		if (state_ptr->a[0] < -a1ul)
-			state_ptr->a[0] = -a1ul;
-		else if (state_ptr->a[0] > a1ul)
-			state_ptr->a[0] = a1ul;
-
-		/* UPB : update predictor zeros b[6] */
-		for (cnt = 0; cnt < 6; cnt++) {
-			if (code_size == 5)		/* for 40Kbps G.723 */
-				state_ptr->b[cnt] -= state_ptr->b[cnt] >> 9;
-			else			/* for G.721 and 24Kbps G.723 */
-				state_ptr->b[cnt] -= state_ptr->b[cnt] >> 8;
-			if (dq & 0x7FFF) {			/* XOR */
-				if ((dq ^ state_ptr->dq[cnt]) >= 0)
-					state_ptr->b[cnt] += 128;
-				else
-					state_ptr->b[cnt] -= 128;
-			}
-		}
-	}
-
-	for (cnt = 5; cnt > 0; cnt--)
-		state_ptr->dq[cnt] = state_ptr->dq[cnt-1];
-	/* FLOAT A : convert dq[0] to 4-bit exp, 6-bit mantissa f.p. */
-	if (mag == 0) {
-		state_ptr->dq[0] = (dq >= 0) ? 0x20 : 0xFC20;
-	} else {
-		exp = quan(mag, power2, 15);
-		state_ptr->dq[0] = (dq >= 0) ?
-		    (exp << 6) + ((mag << 6) >> exp) :
-		    (exp << 6) + ((mag << 6) >> exp) - 0x400;
-	}
-
-	state_ptr->sr[1] = state_ptr->sr[0];
-	/* FLOAT B : convert sr to 4-bit exp., 6-bit mantissa f.p. */
-	if (sr == 0) {
-		state_ptr->sr[0] = 0x20;
-	} else if (sr > 0) {
-		exp = quan(sr, power2, 15);
-		state_ptr->sr[0] = (exp << 6) + ((sr << 6) >> exp);
-	} else if (sr > -32768) {
-		mag = -sr;
-		exp = quan(mag, power2, 15);
-		state_ptr->sr[0] =  (exp << 6) + ((mag << 6) >> exp) - 0x400;
-	} else
-		state_ptr->sr[0] = 0xFC20;
-
-	/* DELAY A */
-	state_ptr->pk[1] = state_ptr->pk[0];
-	state_ptr->pk[0] = pk0;
-
-	/* TONE */
-	if (tr == 1)		/* this sample has been treated as data */
-		state_ptr->td = 0;	/* next one will be treated as voice */
-	else if (a2p < -11776)	/* small sample-to-sample correlation */
-		state_ptr->td = 1;	/* signal may be data */
-	else				/* signal is voice */
-		state_ptr->td = 0;
-
-	/*
-	 * Adaptation speed control.
-	 */
-	state_ptr->dms += (fi - state_ptr->dms) >> 5;		/* FILTA */
-	state_ptr->dml += (((fi << 2) - state_ptr->dml) >> 7);	/* FILTB */
-
-	if (tr == 1)
-		state_ptr->ap = 256;
-	else if (y < 1536)					/* SUBTC */
-		state_ptr->ap += (0x200 - state_ptr->ap) >> 4;
-	else if (state_ptr->td == 1)
-		state_ptr->ap += (0x200 - state_ptr->ap) >> 4;
-	else if (abs((state_ptr->dms << 2) - state_ptr->dml) >=
-	    (state_ptr->dml >> 3))
-		state_ptr->ap += (0x200 - state_ptr->ap) >> 4;
-	else
-		state_ptr->ap += (-state_ptr->ap) >> 4;
-}
-
-/*
- * tandem_adjust(sr, se, y, i, sign)
- *
- * At the end of ADPCM decoding, it simulates an encoder which may be receiving
- * the output of this decoder as a tandem process. If the output of the
- * simulated encoder differs from the input to this decoder, the decoder output
- * is adjusted by one level of A-law or u-law codes.
- *
- * Input:
- *	sr	decoder output linear PCM sample,
- *	se	predictor estimate sample,
- *	y	quantizer step size,
- *	i	decoder input code,
- *	sign	sign bit of code i
- *
- * Return:
- *	adjusted A-law or u-law compressed sample.
- */
-int
-tandem_adjust_alaw(
-	int		sr,	/* decoder output linear PCM sample */
-	int		se,	/* predictor estimate sample */
-	int		y,	/* quantizer step size */
-	int		i,	/* decoder input code */
-	int		sign,
-	short		*qtab)
-{
-	unsigned char	sp;	/* A-law compressed 8-bit code */
-	short		dx;	/* prediction error */
-	char		id;	/* quantized prediction error */
-	int		sd;	/* adjusted A-law decoded sample value */
-	int		im;	/* biased magnitude of i */
-	int		imx;	/* biased magnitude of id */
-
-	if (sr <= -32768)
-		sr = -1;
-	sp = linear2alaw((sr >> 1) << 3);	/* short to A-law compression */
-	dx = (alaw2linear(sp) >> 2) - se;	/* 16-bit prediction error */
-	id = quantize(dx, y, qtab, sign - 1);
-
-	if (id == i) {			/* no adjustment on sp */
-		return (sp);
-	} else {			/* sp adjustment needed */
-		/* ADPCM codes : 8, 9, ... F, 0, 1, ... , 6, 7 */
-		im = i ^ sign;		/* 2's complement to biased unsigned */
-		imx = id ^ sign;
-
-		if (imx > im) {		/* sp adjusted to next lower value */
-			if (sp & 0x80) {
-				sd = (sp == 0xD5) ? 0x55 :
-				    ((sp ^ 0x55) - 1) ^ 0x55;
-			} else {
-				sd = (sp == 0x2A) ? 0x2A :
-				    ((sp ^ 0x55) + 1) ^ 0x55;
-			}
-		} else {		/* sp adjusted to next higher value */
-			if (sp & 0x80)
-				sd = (sp == 0xAA) ? 0xAA :
-				    ((sp ^ 0x55) + 1) ^ 0x55;
-			else
-				sd = (sp == 0x55) ? 0xD5 :
-				    ((sp ^ 0x55) - 1) ^ 0x55;
-		}
-		return (sd);
-	}
-}
-
-int
-tandem_adjust_ulaw(
-	int		sr,	/* decoder output linear PCM sample */
-	int		se,	/* predictor estimate sample */
-	int		y,	/* quantizer step size */
-	int		i,	/* decoder input code */
-	int		sign,
-	short		*qtab)
-{
-	unsigned char	sp;	/* u-law compressed 8-bit code */
-	short		dx;	/* prediction error */
-	char		id;	/* quantized prediction error */
-	int		sd;	/* adjusted u-law decoded sample value */
-	int		im;	/* biased magnitude of i */
-	int		imx;	/* biased magnitude of id */
-
-	if (sr <= -32768)
-		sr = 0;
-	sp = linear2ulaw(sr << 2);	/* short to u-law compression */
-	dx = (ulaw2linear(sp) >> 2) - se;	/* 16-bit prediction error */
-	id = quantize(dx, y, qtab, sign - 1);
-	if (id == i) {
-		return (sp);
-	} else {
-		/* ADPCM codes : 8, 9, ... F, 0, 1, ... , 6, 7 */
-		im = i ^ sign;		/* 2's complement to biased unsigned */
-		imx = id ^ sign;
-		if (imx > im) {		/* sp adjusted to next lower value */
-			if (sp & 0x80)
-				sd = (sp == 0xFF) ? 0x7E : sp + 1;
-			else
-				sd = (sp == 0) ? 0 : sp - 1;
-
-		} else {		/* sp adjusted to next higher value */
-			if (sp & 0x80)
-				sd = (sp == 0x80) ? 0x80 : sp - 1;
-			else
-				sd = (sp == 0x7F) ? 0xFE : sp + 1;
-		}
-		return (sd);
-	}
-}
-/*
- * g721.c
- *
- * Description:
- *
- * g721_encoder(), g721_decoder()
- *
- * These routines comprise an implementation of the CCITT G.721 ADPCM
- * coding algorithm.  Essentially, this implementation is identical to
- * the bit level description except for a few deviations which
- * take advantage of work station attributes, such as hardware 2's
- * complement arithmetic and large memory.  Specifically, certain time
- * consuming operations such as multiplications are replaced
- * with lookup tables and software 2's complement operations are
- * replaced with hardware 2's complement.
- *
- * The deviation from the bit level specification (lookup tables)
- * preserves the bit level performance specifications.
- *
- * As outlined in the G.721 Recommendation, the algorithm is broken
- * down into modules.  Each section of code below is preceded by
- * the name of the module which it is implementing.
- *
- */
-
-static short qtab_721[7] = {-124, 80, 178, 246, 300, 349, 400};
-/*
- * Maps G.721 code word to reconstructed scale factor normalized log
- * magnitude values.
- */
-static short	_dqlntab_721[16] = {-2048, 4, 135, 213, 273, 323, 373, 425,
-				425, 373, 323, 273, 213, 135, 4, -2048};
-
-/* Maps G.721 code word to log of scale factor multiplier. */
-static short	_witab_721[16] = {-12, 18, 41, 64, 112, 198, 355, 1122,
-				1122, 355, 198, 112, 64, 41, 18, -12};
-/*
- * Maps G.721 code words to a set of values whose long and short
- * term averages are computed and then compared to give an indication
- * how stationary (steady state) the signal is.
- */
-static short	_fitab_721[16] = {0, 0, 0, 0x200, 0x200, 0x200, 0x600, 0xE00,
-				0xE00, 0x600, 0x200, 0x200, 0x200, 0, 0, 0};
-
-/*
- * g721_encoder()
- *
- * Encodes the input vale of linear PCM, A-law or u-law data sl and returns
- * the resulting code. -1 is returned for unknown input coding value.
- */
-int
-g721_encoder(
-	int		sl,
-	int		in_coding,
-	struct g72x_state *state_ptr)
-{
-	short		sezi, se, sez;		/* ACCUM */
-	short		d;			/* SUBTA */
-	short		sr;			/* ADDB */
-	short		y;			/* MIX */
-	short		dqsez;			/* ADDC */
-	short		dq, i;
-
-	switch (in_coding) {	/* linearize input sample to 14-bit PCM */
-	case AUDIO_ENCODING_ALAW:
-		sl = alaw2linear(sl) >> 2;
-		break;
-	case AUDIO_ENCODING_ULAW:
-		sl = ulaw2linear(sl) >> 2;
-		break;
-	case AUDIO_ENCODING_LINEAR:
-		sl >>= 2;			/* 14-bit dynamic range */
-		break;
-	default:
-		return (-1);
-	}
-
-	sezi = predictor_zero(state_ptr);
-	sez = sezi >> 1;
-	se = (sezi + predictor_pole(state_ptr)) >> 1;	/* estimated signal */
-
-	d = sl - se;				/* estimation difference */
-
-	/* quantize the prediction difference */
-	y = step_size(state_ptr);		/* quantizer step size */
-	i = quantize(d, y, qtab_721, 7);	/* i = ADPCM code */
-
-	dq = reconstruct(i & 8, _dqlntab_721[i], y);	/* quantized est diff */
-
-	sr = (dq < 0) ? se - (dq & 0x3FFF) : se + dq;	/* reconst. signal */
-
-	dqsez = sr + sez - se;			/* pole prediction diff. */
-
-	update(4, y, _witab_721[i] << 5, _fitab_721[i], dq, sr, dqsez, state_ptr);
-
-	return (i);
-}
-
-/*
- * g721_decoder()
- *
- * Description:
- *
- * Decodes a 4-bit code of G.721 encoded data of i and
- * returns the resulting linear PCM, A-law or u-law value.
- * return -1 for unknown out_coding value.
- */
-int
-g721_decoder(
-	int		i,
-	int		out_coding,
-	struct g72x_state *state_ptr)
-{
-	short		sezi, sei, sez, se;	/* ACCUM */
-	short		y;			/* MIX */
-	short		sr;			/* ADDB */
-	short		dq;
-	short		dqsez;
-
-	i &= 0x0f;			/* mask to get proper bits */
-	sezi = predictor_zero(state_ptr);
-	sez = sezi >> 1;
-	sei = sezi + predictor_pole(state_ptr);
-	se = sei >> 1;			/* se = estimated signal */
-
-	y = step_size(state_ptr);	/* dynamic quantizer step size */
-
-	dq = reconstruct(i & 0x08, _dqlntab_721[i], y); /* quantized diff. */
-
-	sr = (dq < 0) ? (se - (dq & 0x3FFF)) : se + dq;	/* reconst. signal */
-
-	dqsez = sr - se + sez;			/* pole prediction diff. */
-
-	update(4, y, _witab_721[i] << 5, _fitab_721[i], dq, sr, dqsez, state_ptr);
-
-	switch (out_coding) {
-	case AUDIO_ENCODING_ALAW:
-		return (tandem_adjust_alaw(sr, se, y, i, 8, qtab_721));
-	case AUDIO_ENCODING_ULAW:
-		return (tandem_adjust_ulaw(sr, se, y, i, 8, qtab_721));
-	case AUDIO_ENCODING_LINEAR:
-		return (sr << 2);	/* sr was 14-bit dynamic range */
-	default:
-		return (-1);
-	}
-}
-/*
- * g723_24.c
- *
- * Description:
- *
- * g723_24_encoder(), g723_24_decoder()
- *
- * These routines comprise an implementation of the CCITT G.723 24 Kbps
- * ADPCM coding algorithm.  Essentially, this implementation is identical to
- * the bit level description except for a few deviations which take advantage
- * of workstation attributes, such as hardware 2's complement arithmetic.
- *
- */
-
-/*
- * Maps G.723_24 code word to reconstructed scale factor normalized log
- * magnitude values.
- */
-static short	_dqlntab_723_24[8] = {-2048, 135, 273, 373, 373, 273, 135, -2048};
-
-/* Maps G.723_24 code word to log of scale factor multiplier. */
-static short	_witab_723_24[8] = {-128, 960, 4384, 18624, 18624, 4384, 960, -128};
-
-/*
- * Maps G.723_24 code words to a set of values whose long and short
- * term averages are computed and then compared to give an indication
- * how stationary (steady state) the signal is.
- */
-static short	_fitab_723_24[8] = {0, 0x200, 0x400, 0xE00, 0xE00, 0x400, 0x200, 0};
-
-static short qtab_723_24[3] = {8, 218, 331};
-
-/*
- * g723_24_encoder()
- *
- * Encodes a linear PCM, A-law or u-law input sample and returns its 3-bit code.
- * Returns -1 if invalid input coding value.
- */
-int
-g723_24_encoder(
-	int		sl,
-	int		in_coding,
-	struct g72x_state *state_ptr)
-{
-	short		sei, sezi, se, sez;	/* ACCUM */
-	short		d;			/* SUBTA */
-	short		y;			/* MIX */
-	short		sr;			/* ADDB */
-	short		dqsez;			/* ADDC */
-	short		dq, i;
-
-	switch (in_coding) {	/* linearize input sample to 14-bit PCM */
-	case AUDIO_ENCODING_ALAW:
-		sl = alaw2linear(sl) >> 2;
-		break;
-	case AUDIO_ENCODING_ULAW:
-		sl = ulaw2linear(sl) >> 2;
-		break;
-	case AUDIO_ENCODING_LINEAR:
-		sl >>= 2;		/* sl of 14-bit dynamic range */
-		break;
-	default:
-		return (-1);
-	}
-
-	sezi = predictor_zero(state_ptr);
-	sez = sezi >> 1;
-	sei = sezi + predictor_pole(state_ptr);
-	se = sei >> 1;			/* se = estimated signal */
-
-	d = sl - se;			/* d = estimation diff. */
-
-	/* quantize prediction difference d */
-	y = step_size(state_ptr);	/* quantizer step size */
-	i = quantize(d, y, qtab_723_24, 3);	/* i = ADPCM code */
-	dq = reconstruct(i & 4, _dqlntab_723_24[i], y); /* quantized diff. */
-
-	sr = (dq < 0) ? se - (dq & 0x3FFF) : se + dq; /* reconstructed signal */
-
-	dqsez = sr + sez - se;		/* pole prediction diff. */
-
-	update(3, y, _witab_723_24[i], _fitab_723_24[i], dq, sr, dqsez, state_ptr);
-
-	return (i);
-}
-
-/*
- * g723_24_decoder()
- *
- * Decodes a 3-bit CCITT G.723_24 ADPCM code and returns
- * the resulting 16-bit linear PCM, A-law or u-law sample value.
- * -1 is returned if the output coding is unknown.
- */
-int
-g723_24_decoder(
-	int		i,
-	int		out_coding,
-	struct g72x_state *state_ptr)
-{
-	short		sezi, sei, sez, se;	/* ACCUM */
-	short		y;			/* MIX */
-	short		sr;			/* ADDB */
-	short		dq;
-	short		dqsez;
-
-	i &= 0x07;			/* mask to get proper bits */
-	sezi = predictor_zero(state_ptr);
-	sez = sezi >> 1;
-	sei = sezi + predictor_pole(state_ptr);
-	se = sei >> 1;			/* se = estimated signal */
-
-	y = step_size(state_ptr);	/* adaptive quantizer step size */
-	dq = reconstruct(i & 0x04, _dqlntab_723_24[i], y); /* unquantize pred diff */
-
-	sr = (dq < 0) ? (se - (dq & 0x3FFF)) : (se + dq); /* reconst. signal */
-
-	dqsez = sr - se + sez;			/* pole prediction diff. */
-
-	update(3, y, _witab_723_24[i], _fitab_723_24[i], dq, sr, dqsez, state_ptr);
-
-	switch (out_coding) {
-	case AUDIO_ENCODING_ALAW:
-		return (tandem_adjust_alaw(sr, se, y, i, 4, qtab_723_24));
-	case AUDIO_ENCODING_ULAW:
-		return (tandem_adjust_ulaw(sr, se, y, i, 4, qtab_723_24));
-	case AUDIO_ENCODING_LINEAR:
-		return (sr << 2);	/* sr was of 14-bit dynamic range */
-	default:
-		return (-1);
-	}
-}
-/*
- * g723_40.c
- *
- * Description:
- *
- * g723_40_encoder(), g723_40_decoder()
- *
- * These routines comprise an implementation of the CCITT G.723 40Kbps
- * ADPCM coding algorithm.  Essentially, this implementation is identical to
- * the bit level description except for a few deviations which
- * take advantage of workstation attributes, such as hardware 2's
- * complement arithmetic.
- *
- * The deviation from the bit level specification (lookup tables),
- * preserves the bit level performance specifications.
- *
- * As outlined in the G.723 Recommendation, the algorithm is broken
- * down into modules.  Each section of code below is preceded by
- * the name of the module which it is implementing.
- *
- */
-
-/*
- * Maps G.723_40 code word to ructeconstructed scale factor normalized log
- * magnitude values.
- */
-static short	_dqlntab_723_40[32] = {-2048, -66, 28, 104, 169, 224, 274, 318,
-				358, 395, 429, 459, 488, 514, 539, 566,
-				566, 539, 514, 488, 459, 429, 395, 358,
-				318, 274, 224, 169, 104, 28, -66, -2048};
-
-/* Maps G.723_40 code word to log of scale factor multiplier. */
-static short	_witab_723_40[32] = {448, 448, 768, 1248, 1280, 1312, 1856, 3200,
-			4512, 5728, 7008, 8960, 11456, 14080, 16928, 22272,
-			22272, 16928, 14080, 11456, 8960, 7008, 5728, 4512,
-			3200, 1856, 1312, 1280, 1248, 768, 448, 448};
-
-/*
- * Maps G.723_40 code words to a set of values whose long and short
- * term averages are computed and then compared to give an indication
- * how stationary (steady state) the signal is.
- */
-static short	_fitab_723_40[32] = {0, 0, 0, 0, 0, 0x200, 0x200, 0x200,
-			0x200, 0x200, 0x400, 0x600, 0x800, 0xA00, 0xC00, 0xC00,
-			0xC00, 0xC00, 0xA00, 0x800, 0x600, 0x400, 0x200, 0x200,
-			0x200, 0x200, 0x200, 0, 0, 0, 0, 0};
-
-static short qtab_723_40[15] = {-122, -16, 68, 139, 198, 250, 298, 339,
-				378, 413, 445, 475, 502, 528, 553};
-
-/*
- * g723_40_encoder()
- *
- * Encodes a 16-bit linear PCM, A-law or u-law input sample and retuens
- * the resulting 5-bit CCITT G.723 40Kbps code.
- * Returns -1 if the input coding value is invalid.
- */
-int
-g723_40_encoder(
-	int		sl,
-	int		in_coding,
-	struct g72x_state *state_ptr)
-{
-	short		sei, sezi, se, sez;	/* ACCUM */
-	short		d;			/* SUBTA */
-	short		y;			/* MIX */
-	short		sr;			/* ADDB */
-	short		dqsez;			/* ADDC */
-	short		dq, i;
-
-	switch (in_coding) {	/* linearize input sample to 14-bit PCM */
-	case AUDIO_ENCODING_ALAW:
-		sl = alaw2linear(sl) >> 2;
-		break;
-	case AUDIO_ENCODING_ULAW:
-		sl = ulaw2linear(sl) >> 2;
-		break;
-	case AUDIO_ENCODING_LINEAR:
-		sl >>= 2;		/* sl of 14-bit dynamic range */
-		break;
-	default:
-		return (-1);
-	}
-
-	sezi = predictor_zero(state_ptr);
-	sez = sezi >> 1;
-	sei = sezi + predictor_pole(state_ptr);
-	se = sei >> 1;			/* se = estimated signal */
-
-	d = sl - se;			/* d = estimation difference */
-
-	/* quantize prediction difference */
-	y = step_size(state_ptr);	/* adaptive quantizer step size */
-	i = quantize(d, y, qtab_723_40, 15);	/* i = ADPCM code */
-
-	dq = reconstruct(i & 0x10, _dqlntab_723_40[i], y);	/* quantized diff */
-
-	sr = (dq < 0) ? se - (dq & 0x7FFF) : se + dq; /* reconstructed signal */
-
-	dqsez = sr + sez - se;		/* dqsez = pole prediction diff. */
-
-	update(5, y, _witab_723_40[i], _fitab_723_40[i], dq, sr, dqsez, state_ptr);
-
-	return (i);
-}
-
-/*
- * g723_40_decoder()
- *
- * Decodes a 5-bit CCITT G.723 40Kbps code and returns
- * the resulting 16-bit linear PCM, A-law or u-law sample value.
- * -1 is returned if the output coding is unknown.
- */
-int
-g723_40_decoder(
-	int		i,
-	int		out_coding,
-	struct g72x_state *state_ptr)
-{
-	short		sezi, sei, sez, se;	/* ACCUM */
-	short		y;			/* MIX */
-	short		sr;			/* ADDB */
-	short		dq;
-	short		dqsez;
-
-	i &= 0x1f;			/* mask to get proper bits */
-	sezi = predictor_zero(state_ptr);
-	sez = sezi >> 1;
-	sei = sezi + predictor_pole(state_ptr);
-	se = sei >> 1;			/* se = estimated signal */
-
-	y = step_size(state_ptr);	/* adaptive quantizer step size */
-	dq = reconstruct(i & 0x10, _dqlntab_723_40[i], y);	/* estimation diff. */
-
-	sr = (dq < 0) ? (se - (dq & 0x7FFF)) : (se + dq); /* reconst. signal */
-
-	dqsez = sr - se + sez;		/* pole prediction diff. */
-
-	update(5, y, _witab_723_40[i], _fitab_723_40[i], dq, sr, dqsez, state_ptr);
-
-	switch (out_coding) {
-	case AUDIO_ENCODING_ALAW:
-		return (tandem_adjust_alaw(sr, se, y, i, 0x10, qtab_723_40));
-	case AUDIO_ENCODING_ULAW:
-		return (tandem_adjust_ulaw(sr, se, y, i, 0x10, qtab_723_40));
-	case AUDIO_ENCODING_LINEAR:
-		return (sr << 2);	/* sr was of 14-bit dynamic range */
-	default:
-		return (-1);
-	}
-}
Index: vcl/unx/source/app/vsound.hxx
===================================================================
RCS file: vcl/unx/source/app/vsound.hxx
diff -N vcl/unx/source/app/vsound.hxx
--- vcl/unx/source/app/vsound.hxx	19 Jun 2006 19:52:31 -0000	1.11
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,118 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: vsound.hxx,v $
- *
- *  $Revision: 1.11 $
- *
- *  last change: $Author: hr $ $Date: 2006/06/19 19:52:31 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-#ifndef _VCL_VSOUND_HXX
-#define _VCL_VSOUND_HXX
-
-#if (defined(LINUX)) || defined(FREEBSD)
-#define USE_OSS
-#endif
-
-#ifdef SOLARIS
-#define USE_DEVAUDIO
-#endif
-
-#if STLPORT_VERSION>=321
-#include <cstdarg>
-#endif
-#include <sys/stat.h>
-#include <tools/string.hxx>
-
-class X11SalSound;
-
-namespace vcl_sal {
-	class VSound
-	{
-        protected:
-		VSound( ::X11SalSound* pSound ) : m_pSalSound( pSound ), m_pBuffer( NULL ) {}
-        
-		// instance data
-		::X11SalSound*			m_pSalSound;
-		// pointer to mmaped file
-		char*		m_pBuffer;
-		struct stat m_aStat;
-        
-        void initBuffer();
-        void releaseBuffer();
-        
-		virtual BOOL isValid() = 0;
-        public:
-		virtual ~VSound() {}
-        
-		virtual void play() = 0;
-		virtual void stop() = 0;
-		virtual void pause() = 0;
-		virtual void cont() = 0;
-        
-		static VSound* createVSound( X11SalSound* );
-	};
-    
-    
-    // a class to convert bytestreams from one codec to another
-    class AudioConverter
-    {
-        public:
-        virtual ~AudioConverter();
-        
-        virtual void reset() = 0;
-        // the returned memory should be deleted by user
-        virtual char* convert( char* pBuffer, int nBytesIn, int& nBytesOut ) = 0;
-        
-        // conversion from G721 encoded data
-        // input is G721 conforming byte buffer (actually nibble buffer)
-        // output is uLaw encoded byte buffer
-        static AudioConverter* createG721ToULawConverter();
-        
-        static AudioConverter* createINT8ToUINT16Converter();
-        static AudioConverter* createSwapINT16Converter();
-    };
-}
-
-#if OSL_DEBUG_LEVEL > 1
-#include <stdarg.h>
-#include <stdio.h>
-inline void SalDbgAssert( const char* pFmt, ... )
-{
-	va_list ap;
-	va_start( ap, pFmt );
-	vfprintf( stderr, pFmt, ap );
-	va_end( ap );
-}
-#else
-inline void SalDbgAssert( const char*, ... )
-{
-}
-#endif
-
-#endif
Index: vcl/util/makefile.mk
===================================================================
RCS file: /cvs/gsl/vcl/util/makefile.mk,v
retrieving revision 1.100
retrieving revision 1.98.10.3
diff -u -p -u -p -r1.100 -r1.98.10.3
--- vcl/util/makefile.mk	15 Oct 2007 13:07:51 -0000	1.100
+++ vcl/util/makefile.mk	23 Oct 2007 09:05:48 -0000	1.98.10.3
@@ -300,25 +300,6 @@ SHL2STDLIBS += $(XINERAMALIBS)
 SHL2STDLIBS+=`pkg-config --libs xrender`
 .ENDIF
 
-
-.IF "$(ENABLE_PASF)" != ""
-SHL2STDLIBS += $(SNDFILELIB) -lportaudio
-.IF "$(OS)"=="MACOSX"
-SHL2STDLIBS += -framework CoreAudio -framework AudioToolbox
-.ENDIF # "$(OS)"=="MACOSX"
-.ENDIF # "$(ENABLE_PASF)"!=""
-
-.IF "$(ENABLE_NAS)" != ""
-SHL2STDLIBS += -laudio
-.IF "$(XAU_LIBS)" != ""
-SHL2STDLIBS += $(XAU_LIBS)
-.ENDIF
-.IF "$(OS)"=="SOLARIS"
-# needed by libaudio.a
-SHL2STDLIBS += -ldl -lnsl -lsocket
-.ENDIF # SOLARIS
-.ENDIF
-
 .IF "$(GUIBASE)"=="unx"
 
 .IF "$(WITH_LIBSN)"=="YES"
Index: vcl/win/inc/saldata.hxx
===================================================================
RCS file: /cvs/gsl/vcl/win/inc/saldata.hxx,v
retrieving revision 1.28
retrieving revision 1.28.60.1
diff -u -p -u -p -r1.28 -r1.28.60.1
--- vcl/win/inc/saldata.hxx	27 Jun 2007 20:53:03 -0000	1.28
+++ vcl/win/inc/saldata.hxx	31 Aug 2007 09:44:58 -0000	1.28.60.1
@@ -297,10 +297,6 @@ int ImplSalWICompareAscii( const wchar_t
 #define SAL_MSG_CREATEOBJECT        (WM_USER+116)
 // wParam == 0; lParam == pObject;
 #define SAL_MSG_DESTROYOBJECT       (WM_USER+117)
-// wParam == 0; lParam == this; lResult == bRet
-#define SAL_MSG_CREATESOUND         (WM_USER+118)
-// wParam == 0; lParam == this
-#define SAL_MSG_DESTROYSOUND        (WM_USER+119)
 // wParam == hWnd; lParam == 0; lResult == hDC
 #define SAL_MSG_GETDC               (WM_USER+120)
 // wParam == hWnd; lParam == 0
Index: vcl/win/inc/salinst.h
===================================================================
RCS file: /cvs/gsl/vcl/win/inc/salinst.h,v
retrieving revision 1.13
retrieving revision 1.13.60.1
diff -u -p -u -p -r1.13 -r1.13.60.1
--- vcl/win/inc/salinst.h	27 Jun 2007 20:53:41 -0000	1.13
+++ vcl/win/inc/salinst.h	31 Aug 2007 09:44:58 -0000	1.13.60.1
@@ -83,7 +83,6 @@ public:
     virtual void			GetPrinterQueueState( SalPrinterQueueInfo* pInfo );
     virtual void			DeletePrinterQueueInfo( SalPrinterQueueInfo* pInfo );
     virtual String             GetDefaultPrinter();
-    virtual SalSound*			CreateSalSound();
     virtual SalTimer*			CreateSalTimer();
     virtual SalOpenGL*			CreateSalOpenGL( SalGraphics* pGraphics );
     virtual SalI18NImeStatus*	CreateI18NImeStatus();
Index: vcl/win/inc/salsound.h
===================================================================
RCS file: vcl/win/inc/salsound.h
diff -N vcl/win/inc/salsound.h
--- vcl/win/inc/salsound.h	27 Jun 2007 20:55:12 -0000	1.5
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,108 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: salsound.h,v $
- *
- *  $Revision: 1.5 $
- *
- *  last change: $Author: hr $ $Date: 2007/06/27 20:55:12 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-#ifndef _SV_SALSOUND_H
-#define _SV_SALSOUND_H
-
-#ifndef _SV_WINCOMP_HXX
-#include <wincomp.hxx>
-#endif
-
-#ifndef _GEN_HXX
-#include <tools/gen.hxx>
-#endif
-#ifndef _STRING_HXX
-#include <tools/string.hxx>
-#endif
-
-#ifndef _SV_SV_H
-#include <vcl/sv.h>
-#endif
-
-#include <osl/module.h>
-
-#ifndef _SV_SALFRAME_HXX
-#include <vcl/salframe.hxx>
-#endif
-#ifndef _SV_SALSTYPE_HXX
-#include <vcl/salstype.hxx>
-#endif
-#ifndef _SV_SALSOUND_HXX
-#include <vcl/salsound.hxx>
-#endif
-
-// ------------
-// - SalSound -
-// ------------
-
-class WinSalSound : public SalSound
-{
-private:
-	static oslModule	mhMCILib;
-	static ULONG		mnSoundState;
-	static void*		mpMCIFnc;
-	ULONG				mnStartTime;
-	ULONG				mnPlayLen;
-	HWND				mhSoundWnd;
-	UINT				mnDeviceId;
-	bool				mbLoop;
-	bool				mbPaused;
-
-public:
-	void				ImplSetError( DWORD nMciErr );
-	void				ImplNotify( SoundNotification eNotification, ULONG nError );
-
-public:
-    WinSalSound();
-    virtual ~WinSalSound();
-    
-    virtual bool		IsValid();
-    virtual bool		Init( const String&	rSoundName,
-                              ULONG&		rSoundLen );
-   	virtual void		Play( ULONG nStartTime, ULONG nPlayTime, bool bLoop );
-	virtual void		Stop();
-	virtual void		Pause();
-	virtual void		Continue();
-    virtual bool		IsLoopMode() const;
-	virtual bool		IsPlaying() const;
-    virtual bool		IsPaused() const;
-
-
-	bool				ImplCreate();
-	void				ImplDestroy();
-	static void 		Release();
-};
-
-#endif // _SV_SALSOUND_H
Index: vcl/win/inc/salsound.hxx
===================================================================
RCS file: vcl/win/inc/salsound.hxx
diff -N vcl/win/inc/salsound.hxx
--- vcl/win/inc/salsound.hxx	27 Jun 2007 20:55:24 -0000	1.3
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,104 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: salsound.hxx,v $
- *
- *  $Revision: 1.3 $
- *
- *  last change: $Author: hr $ $Date: 2007/06/27 20:55:24 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-#ifndef _SV_SALSOUND_HXX
-#define _SV_SALSOUND_HXX
-
-#ifndef _SV_WINCOMP_HXX
-#include <wincomp.hxx>
-#endif
-
-#ifndef _GEN_HXX
-#include <tools/gen.hxx>
-#endif
-#ifndef _STRING_HXX
-#include <tools/string.hxx>
-#endif
-
-#ifndef _SV_SV_H
-#include <vcl/sv.h>
-#endif
-
-#ifndef _SV_SALFRAME_HXX
-#include <vcl/salframe.hxx>
-#endif
-#ifndef _SV_SALSTYPE_HXX
-#include <vcl/salstype.hxx>
-#endif
-
-// ------------
-// - SalSound -
-// ------------
-
-class SalSound
-{
-private:
-	static HINSTANCE	mhMCILib;
-	static ULONG		mnSoundState;
-	static void*		mpMCIFnc;
-	SALSOUNDPROC		mpProc;
-	void*				mpInst;
-	ULONG				mnStartTime;
-	ULONG				mnPlayLen;
-	HWND				mhSoundWnd;
-	UINT				mnDeviceId;
-	BOOL				mbLoop;
-	BOOL				mbPaused;
-
-public:
-	void				ImplSetError( DWORD nMciErr );
-	void				ImplNotify( SoundNotification eNotification, ULONG nError );
-
-public:
-						SalSound();
-						~SalSound();
-
-	BOOL				ImplCreate();
-	BOOL				Create();
-	void				ImplDestroy();
-	static void 		Release();
-	static BOOL 		IsValid() { return( SOUND_STATE_VALID == SalSound::mnSoundState ); }
-
-	BOOL				Init( SalFrame* pFrame, const String& rSoundName, ULONG& rSoundLen );
-	BOOL				Init( SalFrame* pFrame, const BYTE* pSound, ULONG nDataLen, ULONG& rSoundLen );
-	void				Play( ULONG nStartTime, ULONG nPlayTime, BOOL bLoop );
-	void				Stop();
-	void				Pause();
-
-	void				SetNotifyProc( void* pInst, SALSOUNDPROC pProc )
-							{ mpInst = pInst; mpProc = pProc; }
-};
-
-#endif // _SV_SALSOUND_HXX
Index: vcl/win/source/app/MAKEFILE.MK
===================================================================
RCS file: /cvs/gsl/vcl/win/source/app/MAKEFILE.MK,v
retrieving revision 1.8
retrieving revision 1.8.160.1
diff -u -p -u -p -r1.8 -r1.8.160.1
--- vcl/win/source/app/MAKEFILE.MK	6 Feb 2007 14:20:03 -0000	1.8
+++ vcl/win/source/app/MAKEFILE.MK	31 Aug 2007 09:44:58 -0000	1.8.160.1
@@ -56,7 +56,6 @@ SLOFILES=   $(SLO)$/salshl.obj      \
             $(SLO)$/saldata.obj     \
             $(SLO)$/salinst.obj     \
             $(SLO)$/saltimer.obj    \
-            $(SLO)$/salsound.obj    \
             $(SLO)$/salinfo.obj
 
 # --- Targets ------------------------------------------------------
Index: vcl/win/source/app/salinst.cxx
===================================================================
RCS file: /cvs/gsl/vcl/win/source/app/salinst.cxx,v
retrieving revision 1.39
retrieving revision 1.39.12.1
diff -u -p -u -p -r1.39 -r1.39.12.1
--- vcl/win/source/app/salinst.cxx	2 Aug 2007 18:29:24 -0000	1.39
+++ vcl/win/source/app/salinst.cxx	31 Aug 2007 09:44:58 -0000	1.39.12.1
@@ -77,9 +77,6 @@
 #ifndef _SV_SALTIMER_H
 #include <saltimer.h>
 #endif
-#ifndef _SV_SALSOUND_H
-#include <salsound.h>
-#endif
 #ifndef _SV_SALATYPE_HXX
 #include <vcl/salatype.hxx>
 #endif
@@ -873,14 +870,6 @@ LRESULT CALLBACK SalComWndProc( HWND hWn
 			delete (SalObject*)lParam;
 			rDef = FALSE;
 			break;
-		case SAL_MSG_CREATESOUND:
-			nRet = ((WinSalSound*)lParam)->ImplCreate();
-			rDef = FALSE;
-			break;
-		case SAL_MSG_DESTROYSOUND:
-			((WinSalSound*)lParam)->ImplDestroy();
-			rDef = FALSE;
-			break;
 		case SAL_MSG_GETDC:
 			nRet = (LRESULT)GetDCEx( (HWND)wParam, 0, DCX_CACHE );
 			rDef = FALSE;
@@ -1120,13 +1109,6 @@ SalTimer* WinSalInstance::CreateSalTimer
 
 // -----------------------------------------------------------------------
 
-SalSound* WinSalInstance::CreateSalSound()
-{
-	return new WinSalSound();
-}
-
-// -----------------------------------------------------------------------
-
 SalOpenGL* WinSalInstance::CreateSalOpenGL( SalGraphics* pGraphics )
 {
 	return new WinSalOpenGL( pGraphics );
Index: vcl/win/source/app/salsound.cxx
===================================================================
RCS file: vcl/win/source/app/salsound.cxx
diff -N vcl/win/source/app/salsound.cxx
--- vcl/win/source/app/salsound.cxx	26 Mar 2007 14:40:21 -0000	1.9
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,527 +0,0 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: salsound.cxx,v $
- *
- *  $Revision: 1.9 $
- *
- *  last change: $Author: vg $ $Date: 2007/03/26 14:40:21 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_vcl.hxx"
-
-#define INCLUDE_MMSYSTEM
-
-// ------------
-// - Includes -
-// ------------
-
-#ifndef _SVWIN_H
-#include <tools/svwin.h>
-#endif
-
-#ifndef _SV_SALDATA_HXX
-#include <saldata.hxx>
-#endif
-#ifndef _SV_SALINST_H
-#include <salinst.h>
-#endif
-#ifndef _SV_SALSOUND_H
-#include <salsound.h>
-#endif
-
-// ---------
-// - Names -
-// ---------
-
-#define SOUND_LIBNAME		"WINMM.DLL"
-#define SOUND_PROCNAMEA 	"mciSendCommandA"
-#define SOUND_PROCNAMEW 	"mciSendCommandW"
-#define SOUND_WINDOWCLASSA	"SALSOUNDWND"
-#define SOUND_WINDOWCLASSW	L"SALSOUNDWND"
-
-// ------------
-// - Fnc cast -
-// ------------
-
-#define __MCI_CALL __stdcall
-
-#define MCIFNC ((DWORD( __MCI_CALL * )( UINT, UINT, DWORD, DWORD )) WinSalSound::mpMCIFnc)
-
-// -----------------
-// - Statics init. -
-// -----------------
-
-oslModule	WinSalSound::mhMCILib = 0;
-ULONG		WinSalSound::mnSoundState = SOUND_STATE_UNLOADED;
-void*		WinSalSound::mpMCIFnc = NULL;
-
-// -------------------
-// - Window-Callback -
-// -------------------
-
-void ImplSalHandleMCINotify( HWND hWnd, WPARAM nPar1, LPARAM )
-{
-	SoundNotification	eNotification = SOUND_NOTIFY_SUCCESS;
-	BOOL				bNotify = TRUE;
-
-	switch ( nPar1 )
-	{
-		case( MCI_NOTIFY_SUCCESSFUL ):
-			eNotification = SOUND_NOTIFY_SUCCESS;
-			break;
-
-		case( MCI_NOTIFY_ABORTED ):
-			eNotification = SOUND_NOTIFY_ABORTED;
-			break;
-
-		case( MCI_NOTIFY_FAILURE ):
-			eNotification = SOUND_NOTIFY_ERROR;
-			break;
-
-		default:
-			bNotify = FALSE;
-	}
-
-	if ( bNotify )
-		((WinSalSound*)GetWindowLong( hWnd, 0 ) )->ImplNotify( eNotification, 0 );
-}
-
-LRESULT CALLBACK SalSoundWndProcA( HWND hWnd, UINT nMsg, WPARAM nPar1, LPARAM nPar2 )
-{
-	if ( MM_MCINOTIFY == nMsg )
-		ImplSalHandleMCINotify( hWnd, nPar1, nPar2 );
-	return DefWindowProcA( hWnd, nMsg, nPar1, nPar2 );
-}
-
-LRESULT CALLBACK SalSoundWndProcW( HWND hWnd, UINT nMsg, WPARAM nPar1, LPARAM nPar2 )
-{
-	if ( MM_MCINOTIFY == nMsg )
-		ImplSalHandleMCINotify( hWnd, nPar1, nPar2 );
-	return DefWindowProcW( hWnd, nMsg, nPar1, nPar2 );
-}
-
-// ------------
-// - SalSound -
-// ------------
-
-WinSalSound::WinSalSound() :
-	mhSoundWnd		( 0 ),
-	mnDeviceId		( 0 ),
-	mbLoop			( FALSE ),
-	mbPaused		( FALSE )
-{
-}
-
-// ------------------------------------------------------------------------
-
-WinSalSound::~WinSalSound()
-{
-	Stop();
-
-	if ( mnDeviceId )
-	{
-		// close device
-		MCI_GENERIC_PARMS aGenericParams;
-		aGenericParams.dwCallback = (DWORD) mhSoundWnd;
-		MCIFNC( mnDeviceId, MCI_CLOSE, MCI_WAIT, (DWORD)&aGenericParams );
-	}
-
-	// Call Destroy in the main thread, because Create is also called in
-	// the main thread and if we don't call this also in the main thread
-	// windows doesn't destroy the window
-	WinSalInstance* pInst = GetSalData()->mpFirstInstance;
-	if ( pInst )
-	{
-		ImplSendMessage( pInst->mhComWnd, SAL_MSG_DESTROYSOUND,
-						 0, (LPARAM)this );
-	}
-	else
-		ImplDestroy();
-}
-
-// ------------------------------------------------------------------------
-
-void WinSalSound::ImplSetError( DWORD nMciErr )
-{
-	struct aMapper { DWORD nMci; ULONG nSv; };
-
-	ULONG			nError = SOUNDERR_GENERAL_ERROR;
-	static aMapper	aErrArr[] =
-	{
-		{ 0, SOUNDERR_SUCCESS },
-		{ MCIERR_CANNOT_LOAD_DRIVER, SOUNDERR_CANNOT_LOAD_DRIVER },
-		{ MCIERR_DEVICE_LOCKED, SOUNDERR_DEVICE_LOCKED },
-		{ MCIERR_DEVICE_NOT_INSTALLED, SOUNDERR_DEVICE_NOT_FOUND },
-		{ MCIERR_DEVICE_NOT_READY, SOUNDERR_DEVICE_NOT_READY },
-		{ MCIERR_DEVICE_TYPE_REQUIRED, SOUNDERR_DEVICE_NOT_FOUND },
-		{ MCIERR_DRIVER, SOUNDERR_CANNOT_LOAD_DRIVER },
-		{ MCIERR_DRIVER_INTERNAL, SOUNDERR_CANNOT_LOAD_DRIVER  },
-		{ MCIERR_EXTENSION_NOT_FOUND, SOUNDERR_SOUND_NOT_FOUND },
-		{ MCIERR_FILE_NOT_FOUND, SOUNDERR_SOUND_NOT_FOUND },
-		{ MCIERR_FILE_READ, SOUNDERR_CANNOT_READ_SOUND },
-		{ MCIERR_FILENAME_REQUIRED, SOUNDERR_SOUND_NOT_FOUND },
-		{ MCIERR_HARDWARE, SOUNDERR_HARDWARE_ERROR },
-		{ MCIERR_INVALID_DEVICE_NAME, SOUNDERR_DEVICE_NOT_FOUND },
-		{ MCIERR_INVALID_FILE, SOUNDERR_INVALID_FILE },
-		{ MCIERR_OUT_OF_MEMORY, SOUNDERR_OUT_OF_MEMORY },
-		{ MCIERR_UNSUPPORTED_FUNCTION, SOUNDERR_UNSUPPORTED_FUNCTION }
-	};
-
-	for ( USHORT n=0; n < (sizeof( aErrArr ) / sizeof( aMapper ) ); n++ )
-	{
-		if ( aErrArr[ n ].nMci == nMciErr )
-		{
-			nError = aErrArr[ n ].nSv;
-			break;
-		}
-	}
-
-	if ( nError )
-		ImplNotify( SOUND_NOTIFY_ERROR, nError );
-}
-
-// ------------------------------------------------------------------------
-
-void WinSalSound::ImplNotify( SoundNotification eNotification, ULONG nError )
-{
-	if ( mbLoop && (SOUND_NOTIFY_SUCCESS == eNotification) && !nError )
-		Play( mnStartTime, mnPlayLen, TRUE );
-
-    CallNotifyProc( eNotification, nError );
-}
-
-// ------------------------------------------------------------------------
-
-bool WinSalSound::ImplCreate()
-{
-	SalData*	pData = GetSalData();
-	bool		bRet = FALSE;
-
-	if ( SOUND_STATE_UNLOADED == WinSalSound::mnSoundState )
-	{
-		// load library and init fncpointer
-		if ( aSalShlData.mbWNT )
-		{
-            OUString aLibraryName( RTL_CONSTASCII_USTRINGPARAM( SOUND_LIBNAME ) );
-            OUString queryFuncName( RTL_CONSTASCII_USTRINGPARAM( SOUND_PROCNAMEW ) );
-            if ( (WinSalSound::mhMCILib = osl_loadModule( aLibraryName.pData, SAL_LOADMODULE_DEFAULT )) != 0 &&
-				 (WinSalSound::mpMCIFnc = (void*)osl_getSymbol( WinSalSound::mhMCILib, queryFuncName.pData )) != 0 )
-			{
-				WNDCLASSEXW aWndClass;
-
-				memset( &aWndClass, 0, sizeof( aWndClass ) );
-				aWndClass.cbSize		= sizeof( aWndClass );
-				aWndClass.lpfnWndProc	= SalSoundWndProcW;
-				aWndClass.cbWndExtra	= sizeof( SalSound* );
-				aWndClass.hInstance 	= pData->mhInst;
-				aWndClass.lpszClassName = SOUND_WINDOWCLASSW;
-				if ( RegisterClassExW( &aWndClass ) )
-				{
-					WinSalSound::mnSoundState = SOUND_STATE_VALID;
-					bRet = TRUE;
-				}
-			}
-		}
-		else
-		{
-            OUString aLibraryName( RTL_CONSTASCII_USTRINGPARAM( SOUND_LIBNAME ) );
-            OUString queryFuncName( RTL_CONSTASCII_USTRINGPARAM( SOUND_PROCNAMEA ) );
-            if ( (WinSalSound::mhMCILib = osl_loadModule( aLibraryName.pData, SAL_LOADMODULE_DEFAULT )) != 0 &&
-				 (WinSalSound::mpMCIFnc = (void*)osl_getSymbol( WinSalSound::mhMCILib, queryFuncName.pData )) != 0 )
-			{
-				WNDCLASSEXA aWndClass;
-
-				memset( &aWndClass, 0, sizeof( aWndClass ) );
-				aWndClass.cbSize		= sizeof( aWndClass );
-				aWndClass.lpfnWndProc	= SalSoundWndProcA;
-				aWndClass.cbWndExtra	= sizeof( SalSound* );
-				aWndClass.hInstance 	= pData->mhInst;
-				aWndClass.lpszClassName = SOUND_WINDOWCLASSA;
-				if ( RegisterClassExA( &aWndClass ) )
-				{
-					WinSalSound::mnSoundState = SOUND_STATE_VALID;
-					bRet = TRUE;
-				}
-			}
-		}
-
-		if ( !bRet )
-		{
-			if ( WinSalSound::mhMCILib )
-            {
-				osl_unloadModule( WinSalSound::mhMCILib );
-                WinSalSound::mhMCILib = NULL;
-            }
-
-			WinSalSound::mnSoundState = SOUND_STATE_INVALID;
-			ImplNotify( SOUND_NOTIFY_ERROR, SOUNDERR_CANNOT_LOAD_DRIVER );
-		}
-	}
-	else if ( SOUND_STATE_VALID == WinSalSound::mnSoundState )
-		bRet = TRUE;
-
-	if ( bRet )
-	{
-		// Create message window
-		if ( aSalShlData.mbWNT )
-		{
-			mhSoundWnd = CreateWindowExW( 0, SOUND_WINDOWCLASSW, L"", 0, 0, 0, 0, 0,
-										  HWND_DESKTOP, NULL, pData->mhInst, 0 );
-		}
-		else
-		{
-			mhSoundWnd = CreateWindowExA( 0, SOUND_WINDOWCLASSA, "", 0, 0, 0, 0, 0,
-										  HWND_DESKTOP, NULL, pData->mhInst, 0 );
-		}
-		SetWindowLong( mhSoundWnd, 0, (LONG)this );
-	}
-	else
-		mhSoundWnd = 0;
-
-	return bRet;
-}
-
-// ------------------------------------------------------------------------
-
-bool WinSalSound::IsValid()
-{
-	// Call Create in the main thread, because in the other case the
-	// Sound stop, if the calling thread dies.
-	WinSalInstance* pInst = GetSalData()->mpFirstInstance;
-	if ( pInst )
-	{
-		return (BOOL)ImplSendMessage( pInst->mhComWnd, SAL_MSG_CREATESOUND,
-									  0, (LPARAM)this );
-	}
-	else
-		return ImplCreate();
-}
-
-// ------------------------------------------------------------------------
-
-void WinSalSound::ImplDestroy()
-{
-	if ( mhSoundWnd )
-		DestroyWindow( mhSoundWnd );
-	mhSoundWnd = 0;
-}
-
-// ------------------------------------------------------------------------
-
-void WinSalSound::Release()
-{
-	// free library
-	if ( WinSalSound::mhMCILib )
-    {
-		osl_unloadModule( WinSalSound::mhMCILib );
-        WinSalSound::mhMCILib = NULL;
-    }
-
-	WinSalSound::mnSoundState = SOUND_STATE_UNLOADED;
-}
-
-// ------------------------------------------------------------------------
-
-bool WinSalSound::Init( const XubString& rSoundName, ULONG& rSoundLen )
-{
-	DWORD nMciErr = 0;
-	rSoundLen = 0;
-
-	// clear old device
-	if ( mnDeviceId )
-	{
-		Stop();
-
-		MCI_GENERIC_PARMS aGenericParams;
-		aGenericParams.dwCallback = (DWORD) mhSoundWnd;
-		nMciErr = MCIFNC( mnDeviceId, MCI_CLOSE, MCI_WAIT, (DWORD) &aGenericParams );
-		mnDeviceId = 0;
-	}
-
-	if ( rSoundName.Len() )
-	{
-		UINT nDeviceId;
-		if ( aSalShlData.mbWNT )
-		{
-			MCI_OPEN_PARMSW aOpenParams;
-			aOpenParams.dwCallback = (DWORD)mhSoundWnd;
-			aOpenParams.lpstrElementName =  reinterpret_cast<LPCWSTR>(rSoundName.GetBuffer());
-			aOpenParams.wDeviceID = 0;
-			aOpenParams.lpstrDeviceType = 0;
-			aOpenParams.lpstrAlias = 0;
-			nMciErr = MCIFNC( 0, MCI_OPEN, MCI_WAIT | MCI_OPEN_ELEMENT, (DWORD)&aOpenParams );
-			nDeviceId = aOpenParams.wDeviceID;
-		}
-		else
-		{
-			ByteString aSoundName( ImplSalGetWinAnsiString( rSoundName, TRUE ) );
-			MCI_OPEN_PARMSA aOpenParams;
-			aOpenParams.dwCallback = (DWORD)mhSoundWnd;
-			aOpenParams.lpstrElementName = aSoundName.GetBuffer();
-			aOpenParams.wDeviceID = 0;
-			aOpenParams.lpstrDeviceType = 0;
-			aOpenParams.lpstrAlias = 0;
-			nMciErr = MCIFNC( 0, MCI_OPEN, MCI_WAIT | MCI_OPEN_ELEMENT, (DWORD)&aOpenParams );
-			nDeviceId = aOpenParams.wDeviceID;
-		}
-
-		if ( !nMciErr )
-		{
-			// set time format
-			MCI_SET_PARMS aSetParams;
-			mnDeviceId = nDeviceId;
-			aSetParams.dwTimeFormat = MCI_FORMAT_MILLISECONDS;
-			nMciErr = MCIFNC( mnDeviceId, MCI_SET, MCI_WAIT | MCI_SET_TIME_FORMAT, (DWORD)&aSetParams );
-
-			if ( !nMciErr )
-			{
-				// get length of sound
-				MCI_STATUS_PARMS aStatus;
-				aStatus.dwItem = MCI_STATUS_LENGTH;
-				nMciErr = MCIFNC( mnDeviceId, MCI_STATUS, MCI_WAIT | MCI_STATUS_ITEM, (DWORD)&aStatus );
-
-				if ( !nMciErr )
-					rSoundLen = (ULONG)aStatus.dwReturn;
-			}
-		}
-	}
-
-	if ( nMciErr )
-		ImplSetError( nMciErr );
-
-	return (nMciErr ? false : true);
-}
-
-// ------------------------------------------------------------------------
-
-void WinSalSound::Play( ULONG nStartTime, ULONG nPlayLen, bool bLoop )
-{
-	if ( mnDeviceId )
-	{
-		DWORD nMciErr = 0;
-
-		if ( !mbPaused )
-		{
-			MCI_SEEK_PARMS aSeekParams;
-			aSeekParams.dwCallback = (DWORD) mhSoundWnd;
-			aSeekParams.dwTo = 0;
-			nMciErr = MCIFNC( mnDeviceId, MCI_SEEK,MCI_WAIT | MCI_TO, (DWORD) &aSeekParams );
-		}
-
-		mnStartTime = nStartTime;
-		mnPlayLen = nPlayLen;
-		mbLoop = bLoop;
-		mbPaused = false;
-
-		if( !nMciErr )
-		{
-			MCI_PLAY_PARMS	aPlayParams;
-			DWORD			nFlags = MCI_NOTIFY;
-
-			aPlayParams.dwCallback = (DWORD)mhSoundWnd;
-
-			if ( nStartTime )
-			{
-				aPlayParams.dwFrom = nStartTime;
-				nFlags |= MCI_FROM;
-			}
-
-			if ( nPlayLen != SOUND_PLAYALL )
-			{
-				aPlayParams.dwTo = nStartTime + nPlayLen;
-				nFlags |= MCI_TO;
-			}
-
-			nMciErr = MCIFNC( mnDeviceId, MCI_PLAY, nFlags, (DWORD) &aPlayParams );
-
-			if ( !nMciErr )
-				mbPaused = FALSE;
-		}
-
-		if ( nMciErr )
-			ImplSetError( nMciErr );
-	}
-	else
-		ImplSetError( MCIERR_INVALID_FILE );
-}
-
-// ------------------------------------------------------------------------
-
-void WinSalSound::Stop()
-{
-	if ( mnDeviceId )
-	{
-		MCI_GENERIC_PARMS aGenericParams;
-		aGenericParams.dwCallback = (DWORD)mhSoundWnd;
-		mbLoop = mbPaused = false;
-		MCIFNC( mnDeviceId, MCI_STOP, MCI_WAIT, (DWORD) &aGenericParams );
-	}
-}
-
-// ------------------------------------------------------------------------
-
-void WinSalSound::Pause()
-{
-	if ( mnDeviceId )
-	{
-		MCI_GENERIC_PARMS aGenericParams;
-		aGenericParams.dwCallback = (DWORD)mhSoundWnd;
-		mbPaused = true;
-		MCIFNC( mnDeviceId, MCI_PAUSE, MCI_WAIT, (DWORD) &aGenericParams );
-	}
-}
-
-// ------------------------------------------------------------------------
-
-void WinSalSound::Continue()
-{
-    Play( 0, 0, mbLoop );
-}
-
-// ------------------------------------------------------------------------
-
-bool WinSalSound::IsLoopMode() const
-{
-    return mbLoop;
-}
-
-// ------------------------------------------------------------------------
-
-bool WinSalSound::IsPlaying() const
-{
-    return !mbPaused;
-}
-
-// ------------------------------------------------------------------------
-
-bool WinSalSound::IsPaused() const
-{
-    return mbPaused;
-}
