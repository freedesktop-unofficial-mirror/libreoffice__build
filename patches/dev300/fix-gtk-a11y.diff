--- vcl/unx/source/plugadapt/salplug.cxx	(revision 264856)
+++ vcl/unx/source/plugadapt/salplug.cxx	(working copy)
@@ -92,32 +92,6 @@
             if( pInst )
             {
                 pCloseModule = aMod;
-
-                /*
-                 * Recent GTK+ versions load their modules with RTLD_LOCAL, so we can 
-                 * not access the 'gnome_accessibility_module_shutdown' anymore. 
-                 * So make sure libgtk+ & co are still mapped into memory when 
-                 * atk-bridge's atexit handler gets called.
-                 */
-                if( rModuleBase.equalsAscii("gtk") )
-                {
-                    const char* gtk_modules = getenv( "GTK_MODULES" );
-                    if( gtk_modules )
-                    {
-                        rtl::OString aModules( gtk_modules );
-                        sal_Int32 nIndex = 0;
-                        while( nIndex >= 0 )
-                        {
-                            rtl::OString aToken = aModules.getToken( 0, ':', nIndex );
-                            if( aToken.equals( "atk-bridge" ) )
-                            {
-                                pCloseModule = NULL;
-                                break;
-                            }
-                        }
-                    }
-                }
-                
                 GetSalData()->m_pPlugin = aMod;
             }
             else

--- vcl/unx/gtk/app/gtkinst.cxx	(revision 264856)
+++ vcl/unx/gtk/app/gtkinst.cxx	(working copy)
@@ -174,21 +174,7 @@
         pSalData->Init();
         pSalData->initNWF();
 
-        const char* pGtkModules = getenv( "GTK_MODULES" );
-        if( pGtkModules )
-        {
-            rtl::OString aModules( pGtkModules );
-            sal_Int32 nIndex = 0;
-            while( nIndex >= 0 )
-            {
-                rtl::OString aToken = aModules.getToken( 0, ':', nIndex );
-                if( aToken.equals( "gail" ) || aToken.equals( "atk-bridge" ) )
-                {
-                    InitAtkBridge();
-                    break;
-                }
-            }
-        }
+	InitAtkBridge();
 
         return pInstance;
     }
