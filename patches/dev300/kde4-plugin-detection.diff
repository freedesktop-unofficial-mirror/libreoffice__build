diff --git vcl/unx/source/plugadapt/salplug.cxx vcl/unx/source/plugadapt/salplug.cxx
index 335bb8f..da10725 100644
--- vcl/unx/source/plugadapt/salplug.cxx
+++ vcl/unx/source/plugadapt/salplug.cxx
@@ -55,13 +55,16 @@ typedef SalInstance*(*salFactoryProc)( oslModule pModule);
 
 static oslModule pCloseModule = NULL;
 
-#define DESKTOP_NONE 0
-#define DESKTOP_UNKNOWN 1
-#define DESKTOP_GNOME 2
-#define DESKTOP_KDE 3
-#define DESKTOP_CDE 4
+enum {
+    DESKTOP_NONE = 0,
+    DESKTOP_UNKNOWN,
+    DESKTOP_GNOME,
+    DESKTOP_KDE,
+    DESKTOP_KDE4,
+    DESKTOP_CDE
+};
 
-static const char * desktop_strings[5] = { "none", "unknown", "GNOME", "KDE", "CDE" };
+static const char * desktop_strings[] = { "none", "unknown", "GNOME", "KDE", "KDE4", "CDE" };
 
 static SalInstance* tryInstance( const OUString& rModuleBase )
 {
@@ -331,7 +334,15 @@ static OUString getNetWMName( Display* pDisplay )
 static bool is_kde_desktop( Display* pDisplay )
 {
     if ( NULL != getenv( "KDE_FULL_SESSION" ) )
-        return true;
+    {
+        const char *pVer = getenv( "KDE_SESSION_VERSION" );
+        if ( !pVer || pVer[0] == '0' )
+            return true; // does not exist => KDE3
+
+        rtl::OUString aVer( RTL_CONSTASCII_USTRINGPARAM( "3" ) );
+        if ( aVer.equalsIgnoreAsciiCaseAscii( pVer ) )
+            return true;
+    }
     
     // check for kwin
     rtl::OUString aWM = getNetWMName( pDisplay );
@@ -341,6 +352,22 @@ static bool is_kde_desktop( Display* pDisplay )
     return false;
 }
 
+static bool is_kde4_desktop( Display* /*pDisplay*/ )
+{
+    if ( NULL != getenv( "KDE_FULL_SESSION" ) )
+    {
+        rtl::OUString aVer( RTL_CONSTASCII_USTRINGPARAM( "4" ) );
+
+        const char *pVer = getenv( "KDE_SESSION_VERSION" );
+        if ( pVer && aVer.equalsIgnoreAsciiCaseAscii( pVer ) )
+            return true;
+    }
+
+    // TODO here we could check for KDE_SESSION_VERSION atom (must exist & equal 4)
+    
+    return false;
+}
+
 static bool is_cde_desktop( Display* pDisplay )
 {
     void* pLibrary = NULL;
@@ -370,6 +397,8 @@ static const char * get_desktop_environment()
             pRet = desktop_strings[DESKTOP_CDE];
         if ( aOver.equalsIgnoreAsciiCase( "kde" ) )
             pRet = desktop_strings[DESKTOP_KDE];
+        if ( aOver.equalsIgnoreAsciiCase( "kde4" ) )
+            pRet = desktop_strings[DESKTOP_KDE4];
         if ( aOver.equalsIgnoreAsciiCase( "gnome" ) )
             pRet = desktop_strings[DESKTOP_GNOME];
         if ( aOver.equalsIgnoreAsciiCase( "none" ) )
@@ -412,6 +441,8 @@ static const char * get_desktop_environment()
             
                 if ( is_kde_desktop( pDisplay ) )
                     pRet = desktop_strings[DESKTOP_KDE];
+                else if ( is_kde4_desktop( pDisplay ) )
+                    pRet = desktop_strings[DESKTOP_KDE4];
                 else if ( is_gnome_desktop( pDisplay ) )
                     pRet = desktop_strings[DESKTOP_GNOME];
                 else if ( is_cde_desktop( pDisplay ) )
@@ -443,6 +474,8 @@ static const char* autodetect_plugin()
         pRet = "gtk";
     else if( desktop == desktop_strings[DESKTOP_KDE] )
         pRet = "kde";
+    else if( desktop == desktop_strings[DESKTOP_KDE4] )
+        pRet = "kde";
     else
         pRet = "gen";
         
