From 378e7851981b06cb597c4a2bcb5b61baab10d543 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:08:25 +0200
Subject: [PATCH 718/768] calc-formula-r1c1-ui-fix.diff

---
 sc/source/ui/app/inputwin.cxx    |   12 +++++--
 sc/source/ui/formdlg/formula.cxx |   13 +++++--
 sc/source/ui/inc/viewfunc.hxx    |    4 +-
 sc/source/ui/view/viewfun2.cxx   |   71 ++++++++++++++++++++++----------------
 4 files changed, 61 insertions(+), 39 deletions(-)

diff --git sc/source/ui/app/inputwin.cxx sc/source/ui/app/inputwin.cxx
index 2a832cd..2b7d074 100644
--- sc/source/ui/app/inputwin.cxx
+++ sc/source/ui/app/inputwin.cxx
@@ -395,8 +395,10 @@ void __EXPORT ScInputWindow::Select()
                             const BOOL bDataFound = pViewSh->GetAutoSumArea( aRangeList );
                             if ( bDataFound )
                             {
+                                ScAddress aAddr = aRangeList.Last()->aEnd;
+                                aAddr.IncRow();
                                 const sal_Bool bSubTotal( UseSubTotal( &aRangeList ) );
-                                pViewSh->EnterAutoSum( aRangeList, bSubTotal );	// Block mit Summen fuellen
+                                pViewSh->EnterAutoSum( aRangeList, bSubTotal, aAddr );
                             }
                         }
                         else
@@ -412,7 +414,10 @@ void __EXPORT ScInputWindow::Select()
                                     pViewSh->MarkRange( aRange, FALSE, FALSE );
                                     pViewSh->SetCursor( aRange.aEnd.Col(), aRange.aEnd.Row() );
                                     const ScRangeList aRangeList;
-                                    const String aFormula = pViewSh->GetAutoSumFormula( aRangeList, bSubTotal );
+                                    ScAddress aAddr = aRange.aEnd;
+                                    aAddr.IncRow();
+                                    const String aFormula = pViewSh->GetAutoSumFormula(
+                                        aRangeList, bSubTotal, aAddr );
                                     SetFuncString( aFormula );
                                     break;
                                 }
@@ -424,7 +429,8 @@ void __EXPORT ScInputWindow::Select()
                         ScRangeList aRangeList;
                         const BOOL bDataFound = pViewSh->GetAutoSumArea( aRangeList );
                         const sal_Bool bSubTotal( UseSubTotal( &aRangeList ) );
-                        const String aFormula = pViewSh->GetAutoSumFormula( aRangeList, bSubTotal );
+                        ScAddress aAddr = pViewSh->GetViewData()->GetCurPos();
+                        const String aFormula = pViewSh->GetAutoSumFormula( aRangeList, bSubTotal, aAddr );
                         SetFuncString( aFormula );
 
                         if ( bDataFound && pScMod->IsEditMode() )
diff --git sc/source/ui/formdlg/formula.cxx sc/source/ui/formdlg/formula.cxx
index a084737..fe7c63c 100644
--- sc/source/ui/formdlg/formula.cxx
+++ sc/source/ui/formdlg/formula.cxx
@@ -452,10 +452,15 @@ void ScFormulaDlg::SetReference( const ScRange& rRef, ScDocument* pRefDoc )
         }
         else
         {
-            USHORT nFmt = ( rRef.aStart.Tab() == aCursorPos.Tab() )
-                                ? SCA_VALID
-                                : SCA_VALID | SCA_TAB_3D;
-            rRef.Format( aRefStr, nFmt, pRefDoc, pRefDoc->GetAddressConvention() );
+            ScTokenArray aArray;
+            ScComplexRefData aRefData;
+            aRefData.InitRangeRel(rRef, aCursorPos);
+            aArray.AddDoubleReference(aRefData);
+            ScCompiler aComp(pDoc, aCursorPos, aArray);
+            aComp.SetGrammar(pDoc->GetGrammar());
+            ::rtl::OUStringBuffer aBuf;
+            aComp.CreateStringFromTokenArray(aBuf);
+            aRefStr = aBuf.makeStringAndClear();
         }
 
         UpdateParaWin(theSel,aRefStr);
diff --git sc/source/ui/inc/viewfunc.hxx sc/source/ui/inc/viewfunc.hxx
index 4b4103b..bdec7a2 100644
--- sc/source/ui/inc/viewfunc.hxx
+++ sc/source/ui/inc/viewfunc.hxx
@@ -93,9 +93,9 @@ public:
     BYTE			GetSelectionScriptType();
 
     BOOL			GetAutoSumArea(ScRangeList& rRangeList);
-    void			EnterAutoSum(const ScRangeList& rRangeList, sal_Bool bSubTotal);
+    void			EnterAutoSum(const ScRangeList& rRangeList, bool bSubTotal, const ScAddress& rAddr);
     bool            AutoSum( const ScRange& rRange, bool bSubTotal, bool bSetCursor, bool bContinue );
-    String          GetAutoSumFormula( const ScRangeList& rRangeList, bool bSubTotal );
+    String          GetAutoSumFormula( const ScRangeList& rRangeList, bool bSubTotal, const ScAddress& rAddr );
 
     void			EnterData( SCCOL nCol, SCROW nRow, SCTAB nTab, const String& rString,
                                BOOL bRecord = TRUE, const EditTextObject* pData = NULL );
diff --git sc/source/ui/view/viewfun2.cxx sc/source/ui/view/viewfun2.cxx
index a4dcc8c..8b99440 100644
--- sc/source/ui/view/viewfun2.cxx
+++ sc/source/ui/view/viewfun2.cxx
@@ -90,6 +90,11 @@
 
 #include "tabbgcolor.hxx" //DBW
 
+#include <boost/scoped_ptr.hpp>
+
+using ::rtl::OUStringBuffer;
+using ::rtl::OUString;
+
 // STATIC DATA ---------------------------------------------------------------
 
 
@@ -500,9 +505,9 @@ BOOL ScViewFunc::GetAutoSumArea( ScRangeList& rRangeList )
 
 //----------------------------------------------------------------------------
 
-void ScViewFunc::EnterAutoSum(const ScRangeList& rRangeList, sal_Bool bSubTotal)		// Block mit Summen fuellen
+void ScViewFunc::EnterAutoSum(const ScRangeList& rRangeList, bool bSubTotal, const ScAddress& rAddr)
 {
-    String aFormula = GetAutoSumFormula( rRangeList, bSubTotal );
+    String aFormula = GetAutoSumFormula( rRangeList, bSubTotal, rAddr );
     EnterBlock( aFormula, NULL );
 }
 
@@ -655,7 +660,8 @@ bool ScViewFunc::AutoSum( const ScRange& rRange, bool bSubTotal, bool bSetCursor
                 const ScRange aRange( nCol, nStartRow, nTab, nCol, nSumEndRow, nTab );
                 if ( lcl_GetAutoSumForColumnRange( pDoc, aRangeList, aRange ) )
                 {
-                    const String aFormula = GetAutoSumFormula( aRangeList, bSubTotal );
+                    const String aFormula = GetAutoSumFormula(
+                        aRangeList, bSubTotal, ScAddress(nCol, nInsRow, nTab));
                     EnterData( nCol, nInsRow, nTab, aFormula );
                 }
             }
@@ -688,7 +694,7 @@ bool ScViewFunc::AutoSum( const ScRange& rRange, bool bSubTotal, bool bSetCursor
                 const ScRange aRange( nStartCol, nRow, nTab, nSumEndCol, nRow, nTab );
                 if ( lcl_GetAutoSumForRowRange( pDoc, aRangeList, aRange ) )
                 {
-                    const String aFormula = GetAutoSumFormula( aRangeList, bSubTotal );
+                    const String aFormula = GetAutoSumFormula( aRangeList, bSubTotal, ScAddress(nInsCol, nRow, nTab) );
                     EnterData( nInsCol, nRow, nTab, aFormula );
                 }
             }
@@ -708,37 +714,42 @@ bool ScViewFunc::AutoSum( const ScRange& rRange, bool bSubTotal, bool bSetCursor
 
 //----------------------------------------------------------------------------
 
-String ScViewFunc::GetAutoSumFormula( const ScRangeList& rRangeList, bool bSubTotal )
+String ScViewFunc::GetAutoSumFormula( const ScRangeList& rRangeList, bool bSubTotal, const ScAddress& rAddr )
 {
-    String aFormula = '=';
-    ScFunctionMgr* pFuncMgr = ScGlobal::GetStarCalcFunctionMgr();
-    const ScFuncDesc* pDesc = NULL;
-    if ( bSubTotal )
-    {
-        pDesc = pFuncMgr->Get( SC_OPCODE_SUB_TOTAL );
-    }
-    else
+    ScViewData* pViewData = GetViewData();
+    ScDocument* pDoc = pViewData->GetDocument();
+    ::boost::scoped_ptr<ScTokenArray> pArray(new ScTokenArray);
+
+    pArray->AddOpCode(bSubTotal ? ocSubTotal : ocSum);
+    pArray->AddOpCode(ocOpen);
+
+    if (bSubTotal)
     {
-        pDesc = pFuncMgr->Get( SC_OPCODE_SUM );
+        pArray->AddDouble(9);
+        pArray->AddOpCode(ocSep);
     }
-    if ( pDesc && pDesc->pFuncName )
+
+    ScRangeList aRangeList = rRangeList;
+    const ScRange* pFirst = aRangeList.First();
+    for (const ScRange* p = pFirst; p; p = aRangeList.Next())
     {
-        aFormula += *pDesc->pFuncName;
-        if ( bSubTotal )
-        {
-            aFormula.AppendAscii( RTL_CONSTASCII_STRINGPARAM( "(9;" ) );
-        }
-        else
-        {
-            aFormula += '(';
-        }
-        ScDocument* pDoc = GetViewData()->GetDocument();
-        String aRef;
-        rRangeList.Format( aRef, SCA_VALID, pDoc );
-        aFormula += aRef;
-        aFormula += ')';
+        if (p != pFirst)
+            pArray->AddOpCode(ocSep);
+        ScComplexRefData aRef;
+        aRef.InitRangeRel(*p, rAddr);
+        pArray->AddDoubleReference(aRef);
     }
-    return aFormula;
+
+    pArray->AddOpCode(ocClose);
+
+    ScCompiler aComp(pDoc, rAddr, *pArray);
+    aComp.SetGrammar(pDoc->GetGrammar());
+    OUStringBuffer aBuf;
+    aComp.CreateStringFromTokenArray(aBuf);
+    OUString aFormula = aBuf.makeStringAndClear();
+    aBuf.append(sal_Unicode('='));
+    aBuf.append(aFormula);
+    return aBuf.makeStringAndClear();
 }
 
 //----------------------------------------------------------------------------
-- 
1.7.0.1

