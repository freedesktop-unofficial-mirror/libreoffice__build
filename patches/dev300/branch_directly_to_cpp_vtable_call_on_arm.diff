--- bridges/source/cpp_uno/gcc3_linux_arm/armhelper.s.old	2010-02-02 12:49:41.000000000 +0100
+++ bridges/source/cpp_uno/gcc3_linux_arm/armhelper.s	2010-03-29 16:45:43.000000000 +0200
@@ -8,15 +8,22 @@
 	.global privateSnippetExecutor
 	.type privateSnippetExecutor, %function
 privateSnippetExecutor:
+        .fnstart                   @ start of unwinder entry
+
         stmfd sp!, {r0-r3}         @ follow other parameters on stack
+        .pad  #16                  @ throw this data away on exception
 	mov   r0, ip               @ r0 points to functionoffset/vtable
-        mov   ip, sp		   @ fix up the ip
-        stmfd sp!, {fp,ip,lr,pc}   @ 8 x 4 => stack remains 8 aligned
-	sub   fp, ip, #4	   @ set frame pointer
+        mov   r1, sp               @ r1 points to this and params
+                                   @ (see cppuno.cxx:codeSnippet())
+        stmfd sp!, {r4,lr}         @ save return address 
+                                   @ (r4 pushed to preserve stack alignment)
+        .save {r4,lr}              @ restore these regs on exception
 
-        add   r1, sp, #16          @ r1 points to this and params
         bl    cpp_vtable_call(PLT)
 
-        add  sp, sp, #32           @ restore stack
-        ldr  fp, [sp, #-32]	   @ restore frame pointer
-        ldr  pc, [sp, #-24]        @ return
+        add   sp, sp, #4           @ no need to restore r4 (we didn't touch it)
+        ldr   pc, [sp], #20        @ return, discarding function arguments
+
+        .fnend                     @ end of unwinder entry
+
+        .size privateSnippetExecutor, . - privateSnippetExecutor
