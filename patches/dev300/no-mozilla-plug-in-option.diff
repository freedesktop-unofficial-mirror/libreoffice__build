--- svx/source/dialog/optinet2.cxx-old	2007-05-04 22:59:31.000000000 +0200
+++ svx/source/dialog/optinet2.cxx	2007-05-04 22:59:56.000000000 +0200
@@ -1813,199 +1813,6 @@
 	maProtectRecordsPB.SetText( sNewText );
 }
 
-//added by jmeng begin
-MozPluginTabPage::MozPluginTabPage(Window* pParent, const SfxItemSet& rSet)
-	: SfxTabPage( pParent, SVX_RES( RID_SVXPAGE_INET_MOZPLUGIN ), rSet ),
-	aMSWordGB		( this, SVX_RES( GB_MOZPLUGIN	    ) ),
-	aWBasicCodeCB	( this, SVX_RES( CB_MOZPLUGIN_CODE ) )
-{
-	FreeResource();
-}
-
-MozPluginTabPage::~MozPluginTabPage()
-{
-}
-
-SfxTabPage*	MozPluginTabPage::Create( Window* pParent,
-										const SfxItemSet& rAttrSet )
-{
-	return new MozPluginTabPage( pParent, rAttrSet );
-}
-BOOL MozPluginTabPage::FillItemSet( SfxItemSet& )
-{
-	BOOL hasInstall = isInstalled();
-	BOOL hasChecked = aWBasicCodeCB.IsChecked();
-	if(hasInstall && (!hasChecked)){
-		//try to uninstall
-		uninstallPlugin();
-	}
-	else if((!hasInstall) && hasChecked){
-		//try to install
-		installPlugin();
-	}
-	else{
-		// do nothing
-	}
-	return TRUE;
-}
-void MozPluginTabPage::Reset( const SfxItemSet& )
-{
-		aWBasicCodeCB.Check( isInstalled());
-		aWBasicCodeCB.SaveValue();
-}
-
-#ifdef WNT
-extern "C" {
-	int lc_isInstalled(const  char* realFilePath);
-	int lc_installPlugin(const  char* realFilePath);
-	int lc_uninstallPlugin(const  char* realFilePath);
-}
-#endif
-
-#define NPP_PATH_MAX 2048
-inline bool getDllURL(rtl::OString * path)
-{
-    OSL_ASSERT(path != NULL);
-    ::rtl::OUString dirPath/*dllPath, */;
-    if (osl_getExecutableFile(&dirPath.pData) != osl_Process_E_None) {
-        return false;
-    }
-    dirPath = dirPath.copy(0, dirPath.lastIndexOf('/'));
-//    osl::FileBase::getAbsoluteFileURL(dirPath, libPath, dllPath);
-    ::rtl::OUString sysDirPath;
-	osl::FileBase::getSystemPathFromFileURL(dirPath, sysDirPath);
-    *path = OUStringToOString(sysDirPath, RTL_TEXTENCODING_ASCII_US);
-    return true;
-}
-
-BOOL MozPluginTabPage::isInstalled()
-{
-#ifdef UNIX
-    // get the real file referred by .so lnk file
-    char lnkFilePath[NPP_PATH_MAX] = {0};
-    char lnkReferFilePath[NPP_PATH_MAX] = {0};
-    char* pHome = getpwuid(getuid())->pw_dir;
-	strcat(lnkFilePath, pHome);
-	strcat(lnkFilePath, "/.mozilla/plugins/libnpsoplugin" SAL_DLLEXTENSION);
-
-	struct stat sBuf;
-	if (0 > lstat(lnkFilePath, &sBuf))
-	    return false;
-    if (!S_ISLNK(sBuf.st_mode))
-		return false;
-    if (0 >= readlink(lnkFilePath, lnkReferFilePath, NPP_PATH_MAX))
-		return false;
-    // If the link is relative, then we regard it as non-standard
-    if (lnkReferFilePath[0] != '/')
-        return false;
-
-    // get the real file path
-    char realFilePath[NPP_PATH_MAX] = {0};
-    ::rtl::OString tempString;
-    if (!getDllURL(&tempString)) {
-        return false;
-    }
-    strncpy(realFilePath, tempString.getStr(), NPP_PATH_MAX);
-	strcat(realFilePath, "/libnpsoplugin" SAL_DLLEXTENSION);
-
-    if (0 != strcmp(lnkReferFilePath, realFilePath))
-        return false;
-    return true;
-#endif
-#ifdef WNT
-	// get the value from registry
-		BOOL ret = true;
-	::rtl::OString tempString;
-	char realFilePath[NPP_PATH_MAX] = {0};
-    if (!getDllURL(&tempString)){
-        return false;
-    }
-    strncpy(realFilePath, tempString.getStr(), NPP_PATH_MAX);
-	if(! lc_isInstalled(realFilePath))
-		ret =true;
-	else
-		ret = false;
-	return ret;
-#endif
-}
-
-BOOL MozPluginTabPage::installPlugin()
-{
-#ifdef UNIX
-    // get the real file referred by .so lnk file
-    char lnkFilePath[NPP_PATH_MAX] = {0};
-    char* pHome = getpwuid(getuid())->pw_dir;
-	strcat(lnkFilePath, pHome);
-    strcat(lnkFilePath, "/.mozilla/plugins/libnpsoplugin" SAL_DLLEXTENSION);
-    remove(lnkFilePath);
-
-    // create the dirs if necessary
-    struct stat buf;
-    char tmpDir[NPP_PATH_MAX] = {0};
-    sprintf(tmpDir, "%s/.mozilla", pHome);
-    if (0 > stat(lnkFilePath, &buf))
-    {
-        mkdir(tmpDir, 0755);
-        strcat(tmpDir, "/plugins");
-        mkdir(tmpDir, 0755);
-    }
-
-    // get the real file path
-    char realFilePath[NPP_PATH_MAX] = {0};
-    ::rtl::OString tempString;
-    if (!getDllURL(&tempString)) {
-        return false;
-    }
-    strncpy(realFilePath, tempString.getStr(), NPP_PATH_MAX);
-	strcat(realFilePath, "/libnpsoplugin" SAL_DLLEXTENSION);
-
-    // create the link
-    if (0 != symlink(realFilePath, lnkFilePath))
-        return false;
-    return true;
-#endif
-#ifdef WNT
-	::rtl::OString tempString;
-	char realFilePath[NPP_PATH_MAX] = {0};
-    if (!getDllURL(&tempString)) {
-        return false;
-    }
-    strncpy(realFilePath, tempString.getStr(), NPP_PATH_MAX);
-	if( !lc_installPlugin(realFilePath))
-		return true;
-	else
-		return false;
-#endif
-}
-
-BOOL MozPluginTabPage::uninstallPlugin()
-{
-#ifdef UNIX
-    // get the real file referred by .so lnk file
-    char lnkFilePath[NPP_PATH_MAX] = {0};
-    char* pHome = getpwuid(getuid())->pw_dir;
-	strcat(lnkFilePath, pHome);
-	strcat(lnkFilePath, "/.mozilla/plugins/libnpsoplugin" SAL_DLLEXTENSION);
-
-	if(0 > remove(lnkFilePath))
-	    return false;
-	return true;
-#endif
-#ifdef WNT
-	::rtl::OString tempString;
-	char realFilePath[NPP_PATH_MAX] = {0};
-    if (!getDllURL(&tempString)) {
-        return false;
-    }
-    strncpy(realFilePath, tempString.getStr(), NPP_PATH_MAX);
-	if(!lc_uninstallPlugin(realFilePath))
-		return true;
-	else
-		return false;
-#endif
-}
-//added by jmeng end
-
 /* -------------------------------------------------------------------------*/
 
 class MailerProgramCfg_Impl : public utl::ConfigItem
