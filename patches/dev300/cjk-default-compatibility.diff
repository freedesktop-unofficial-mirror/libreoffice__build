From df0841da2d1d47896680118b45d54ca07ad8c2b9 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:53:35 +0200
Subject: [PATCH 044/768] cjk-default-compatibility.diff

---
 cui/source/options/optgdlg.cxx           |    6 ++++
 unotools/inc/unotools/compatibility.hxx  |    2 +
 unotools/source/config/compatibility.cxx |   40 ++++++++++++++++++++++++++++++
 3 files changed, 48 insertions(+), 0 deletions(-)

diff --git cui/source/options/optgdlg.cxx cui/source/options/optgdlg.cxx
index 41a459e..19c8c02 100644
--- cui/source/options/optgdlg.cxx
+++ cui/source/options/optgdlg.cxx
@@ -40,6 +40,7 @@
 #include <vcl/msgbox.hxx>
 #include <vcl/mnemonic.hxx>
 #include <i18npool/mslangid.hxx>
+#include <unotools/compatibility.hxx>
 #include <unotools/useroptions.hxx>
 #include <unotools/cacheoptions.hxx>
 #include <unotools/fontoptions.hxx>
@@ -1543,6 +1544,11 @@ BOOL OfaLanguagesTabPage::FillItemSet( SfxItemSet& rSet )
         // the end of this method
         pLangConfig->aSysLocaleOptions.SetLocaleConfigString( sNewLang );
         rSet.Put( SfxBoolItem( SID_OPT_LOCALE_CHANGED, TRUE ) );
+
+        sal_uInt16 nNewType = SvtLanguageOptions::GetScriptTypeOfLanguage( eNewLocale );
+        bool bNewCJK = ( nNewType & SCRIPTTYPE_ASIAN ) != 0;
+        SvtCompatibilityOptions aCompatOpts;
+        aCompatOpts.SetDefault( COMPATIBILITY_PROPERTYNAME_EXPANDWORDSPACE, !bNewCJK );
     }
 
     if(aDecimalSeparatorCB.GetSavedValue() != aDecimalSeparatorCB.IsChecked())
diff --git unotools/inc/unotools/compatibility.hxx unotools/inc/unotools/compatibility.hxx
index 11aeffc..65e92fa 100644
--- unotools/inc/unotools/compatibility.hxx
+++ unotools/inc/unotools/compatibility.hxx
@@ -153,6 +153,8 @@ class UNOTOOLS_DLLPUBLIC SvtCompatibilityOptions: public utl::detail::Options
 
         void Clear();
 
+        void SetDefault( ::rtl::OUString sName, bool bValue );
+
         /*-****************************************************************************************************//**
             @short      return complete specified list
             @descr      Call it to get all entries of compatibility options.
diff --git unotools/source/config/compatibility.cxx unotools/source/config/compatibility.cxx
index e502860..91aa8e8 100644
--- unotools/source/config/compatibility.cxx
+++ unotools/source/config/compatibility.cxx
@@ -38,6 +38,7 @@
 #include <tools/debug.hxx>
 #include <com/sun/star/uno/Any.hxx>
 #include <com/sun/star/uno/Sequence.hxx>
+#include <vcl/svapp.hxx>
 
 #ifndef __SGI_STL_VECTOR
 #include <vector>
@@ -247,6 +248,8 @@ class SvtCompatibilityOptions_Impl : public ConfigItem
          SvtCompatibilityOptions_Impl();
         ~SvtCompatibilityOptions_Impl();
 
+        void SetDefault( OUString sName, bool bValue );
+
         //---------------------------------------------------------------------------------------------------------
         //	overloaded methods of baseclass
         //---------------------------------------------------------------------------------------------------------
@@ -425,6 +428,12 @@ SvtCompatibilityOptions_Impl::SvtCompatibilityOptions_Impl()
 
         if ( !bDefaultFound && aItem.sName.equals( COMPATIBILITY_DEFAULT_NAME ) != sal_False )
         {
+            const AllSettings& rSettings = Application::GetSettings();
+            com::sun::star::lang::Locale aLocale = rSettings.GetLocale();
+            if ( aLocale.Language.equalsAscii( "zh" ) || aLocale.Language.equalsAscii( "ja" ) ||
+                    aLocale.Language.equalsAscii( "ko" ) )
+                aItem.bExpandWordSpace = false;
+
             m_aDefOptions = aItem;
             bDefaultFound = true;
         }
@@ -443,6 +452,32 @@ SvtCompatibilityOptions_Impl::~SvtCompatibilityOptions_Impl()
     }
 }
 
+void SvtCompatibilityOptions_Impl::SetDefault( OUString sName, bool bValue )
+{
+    if ( COMPATIBILITY_PROPERTYNAME_USEPRTMETRICS.equals( sName ) )
+        m_aDefOptions.SetUsePrtMetrics( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_ADDSPACING.equals( sName ) )
+        m_aDefOptions.SetAddSpacing( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_ADDSPACINGATPAGES.equals( sName ) )
+        m_aDefOptions.SetAddSpacingAtPages( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_USEOURTABSTOPS.equals( sName ) )
+        m_aDefOptions.SetUseOurTabStops( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_NOEXTLEADING.equals( sName ) )
+        m_aDefOptions.SetNoExtLeading( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_USELINESPACING.equals( sName ) )
+        m_aDefOptions.SetUseLineSpacing( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_ADDTABLESPACING.equals( sName ) )
+        m_aDefOptions.SetAddTableSpacing( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_USEOBJECTPOSITIONING.equals( sName ) )
+        m_aDefOptions.SetUseObjPos( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_USEOURTEXTWRAPPING.equals( sName ) )
+        m_aDefOptions.SetUseOurTextWrapping( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_CONSIDERWRAPPINGSTYLE.equals( sName ) )
+        m_aDefOptions.SetConsiderWrappingStyle( bValue );
+    else if ( COMPATIBILITY_PROPERTYNAME_EXPANDWORDSPACE.equals( sName ) )
+        m_aDefOptions.SetExpandWordSpace( bValue );
+}
+
 //*****************************************************************************************************************
 //	public method
 //*****************************************************************************************************************
@@ -680,6 +715,11 @@ void SvtCompatibilityOptions::Clear()
     m_pDataContainer->Clear();
 }
 
+void SvtCompatibilityOptions::SetDefault( ::rtl::OUString sName, bool bValue )
+{
+    m_pDataContainer->SetDefault( sName, bValue );
+}
+
 //*****************************************************************************************************************
 //	public method
 //*****************************************************************************************************************
-- 
1.7.0.1

