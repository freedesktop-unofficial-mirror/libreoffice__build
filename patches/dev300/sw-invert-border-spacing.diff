diff --git sw/inc/IDocumentSettingAccess.hxx sw/inc/IDocumentSettingAccess.hxx
index cebdfcd..b7b683f 100644
--- sw/inc/IDocumentSettingAccess.hxx
+++ sw/inc/IDocumentSettingAccess.hxx
@@ -84,6 +84,7 @@ namespace com { namespace sun { namespace star { namespace i18n { struct Forbidd
          // --> OD 2008-06-05 #i89181#
          TAB_AT_LEFT_INDENT_FOR_PARA_IN_LIST,
          // <--
+	 INVERT_BORDER_SPACING,
          // COMPATIBILITY FLAGS END
 
          BROWSE_MODE,
diff --git sw/inc/doc.hxx sw/inc/doc.hxx
index 25de567..5ee662e 100644
--- sw/inc/doc.hxx
+++ sw/inc/doc.hxx
@@ -609,6 +609,7 @@ private:
     bool mbOldPrinterMetrics                        : 1;   // FME 2007-05-14 #147385#
     bool mbTabRelativeToIndent                      : 1;   // #i24363# tab stops relative to indent
     bool mbProtectForm                              : 1;
+    bool mbInvertBorderSpacing                      : 1;
     bool mbTabAtLeftIndentForParagraphsInList;             // OD 2008-06-05 #i89181# - see above
 
 	// #i78591#
diff --git sw/source/core/doc/doc.cxx sw/source/core/doc/doc.cxx
index 4c7ad45..24f5ef4 100644
--- sw/source/core/doc/doc.cxx
+++ sw/source/core/doc/doc.cxx
@@ -184,6 +184,7 @@ bool SwDoc::get(/*[in]*/ DocumentSettingId id) const
         // --> OD 2008-06-05 #i89181#
         case TAB_AT_LEFT_INDENT_FOR_PARA_IN_LIST: return mbTabAtLeftIndentForParagraphsInList;
         // <--
+	case INVERT_BORDER_SPACING: return mbInvertBorderSpacing;
          // COMPATIBILITY FLAGS END
 
         case BROWSE_MODE: return mbBrowseMode;
@@ -307,6 +308,9 @@ void SwDoc::set(/*[in]*/ DocumentSettingId id, /*[in]*/ bool value)
             mbTabAtLeftIndentForParagraphsInList = value;
         break;
         // <--
+	case INVERT_BORDER_SPACING:
+	    mbInvertBorderSpacing = value;
+	break;
          // COMPATIBILITY FLAGS END
 
         case BROWSE_MODE:
diff --git sw/source/core/doc/docnew.cxx sw/source/core/doc/docnew.cxx
index f7bc2c5..19cda11 100644
--- sw/source/core/doc/docnew.cxx
+++ sw/source/core/doc/docnew.cxx
@@ -379,6 +379,7 @@ SwDoc::SwDoc() :
     // --> OD 2008-06-05 #i89181#
     mbTabAtLeftIndentForParagraphsInList    = false;        // hidden
     // <--
+    mbInvertBorderSpacing                   = false;        // hidden
 
     //
     // COMPATIBILITY FLAGS END
diff --git sw/source/core/layout/frmtool.cxx sw/source/core/layout/frmtool.cxx
index 5354200..21fdf63 100644
--- sw/source/core/layout/frmtool.cxx
+++ sw/source/core/layout/frmtool.cxx
@@ -2000,20 +2000,22 @@ void SwBorderAttrs::_CalcBottom()
 
 long SwBorderAttrs::CalcRight( const SwFrm* pCaller ) const
 {
-    long nRight;
+    long nRight=0;
 
-    // OD 23.01.2003 #106895# - for cell frame in R2L text direction the left
-    // and right border are painted on the right respectively left.
-    if ( pCaller->IsCellFrm() && pCaller->IsRightToLeft() )
-        nRight = CalcLeftLine();
-    else
-        nRight = CalcRightLine();
-
-    // for paragraphs, "left" is "before text" and "right" is "after text"
-    if ( pCaller->IsTxtFrm() && pCaller->IsRightToLeft() )
-        nRight += rLR.GetLeft();
-    else
-        nRight += rLR.GetRight();
+    if (!pCaller->IsTxtFrm() || !((SwTxtFrm*)pCaller)->GetTxtNode()->GetDoc()->get(IDocumentSettingAccess::INVERT_BORDER_SPACING)) {
+	// OD 23.01.2003 #106895# - for cell frame in R2L text direction the left
+	// and right border are painted on the right respectively left.
+	if ( pCaller->IsCellFrm() && pCaller->IsRightToLeft() )
+	    nRight = CalcLeftLine();
+	else
+	    nRight = CalcRightLine();
+	
+	// for paragraphs, "left" is "before text" and "right" is "after text"
+	if ( pCaller->IsTxtFrm() && pCaller->IsRightToLeft() )
+	    nRight += rLR.GetLeft();
+	else
+	    nRight += rLR.GetRight();
+    }
 
     // --> OD 2008-01-21 #newlistlevelattrs#
     // correction: retrieve left margin for numbering in R2L-layout
@@ -2028,20 +2030,23 @@ long SwBorderAttrs::CalcRight( const SwFrm* pCaller ) const
 
 long SwBorderAttrs::CalcLeft( const SwFrm *pCaller ) const
 {
-    long nLeft;
+    long nLeft=0;
 
-    // OD 23.01.2003 #106895# - for cell frame in R2L text direction the left
-    // and right border are painted on the right respectively left.
-    if ( pCaller->IsCellFrm() && pCaller->IsRightToLeft() )
-        nLeft = CalcRightLine();
-    else
-        nLeft = CalcLeftLine();
-
-    // for paragraphs, "left" is "before text" and "right" is "after text"
-    if ( pCaller->IsTxtFrm() && pCaller->IsRightToLeft() )
-        nLeft += rLR.GetRight();
-    else
-        nLeft += rLR.GetLeft();
+    if (!pCaller->IsTxtFrm() || !((SwTxtFrm*)pCaller)->GetTxtNode()->GetDoc()->get(IDocumentSettingAccess::INVERT_BORDER_SPACING)) {
+	// OD 23.01.2003 #106895# - for cell frame in R2L text direction the left
+	// and right border are painted on the right respectively left.
+	if ( pCaller->IsCellFrm() && pCaller->IsRightToLeft() )
+	    nLeft = CalcRightLine();
+	else
+	    nLeft = CalcLeftLine();
+	
+	// for paragraphs, "left" is "before text" and "right" is "after text"
+	if ( pCaller->IsTxtFrm() && pCaller->IsRightToLeft() )
+	    nLeft += rLR.GetRight();
+	else
+	    nLeft += rLR.GetLeft();
+    }
+    
 
     // --> OD 2008-01-21 #newlistlevelattrs#
     // correction: do not retrieve left margin for numbering in R2L-layout
diff --git sw/source/core/layout/paintfrm.cxx sw/source/core/layout/paintfrm.cxx
index a371990..2fed7f7 100644
--- sw/source/core/layout/paintfrm.cxx
+++ sw/source/core/layout/paintfrm.cxx
@@ -4650,7 +4650,7 @@ void SwFrm::PaintBorder( const SwRect& rRect, const SwPageFrm *pPage,
 						 const SwBorderAttrs &rAttrs ) const
 {
     //fuer (Row,Body,Ftn,Root,Column,NoTxt) gibt's hier nix zu tun
-    if ( (GetType() & 0x90C5) || (Prt().SSize() == Frm().SSize()) )
+    if ( (GetType() & 0x90C5) )
         return;
 
 	if ( (GetType() & 0x2000) && 	//Cell
diff --git sw/source/filter/rtf/swparrtf.cxx sw/source/filter/rtf/swparrtf.cxx
index 4ee6616..c70eed1 100644
--- sw/source/filter/rtf/swparrtf.cxx
+++ sw/source/filter/rtf/swparrtf.cxx
@@ -309,7 +309,7 @@ void SwRTFParser::Continue( int nToken )
             // --> FME 2006-02-10 #131283#
             pDoc->set(IDocumentSettingAccess::TABLE_ROW_KEEP, true);
             pDoc->set(IDocumentSettingAccess::IGNORE_TABS_AND_BLANKS_FOR_LINE_CALCULATION, true);
-
+	    pDoc->set(IDocumentSettingAccess::INVERT_BORDER_SPACING, true);
             //
             // COMPATIBILITY FLAGS END
             //
diff --git sw/source/filter/ww8/ww8par.cxx sw/source/filter/ww8/ww8par.cxx
index 68be371..65da983 100644
--- sw/source/filter/ww8/ww8par.cxx
+++ sw/source/filter/ww8/ww8par.cxx
@@ -1538,6 +1538,8 @@ void SwWW8ImplReader::ImportDop()
     rDoc.set(IDocumentSettingAccess::IGNORE_TABS_AND_BLANKS_FOR_LINE_CALCULATION, true);
     // <--
 
+    rDoc.set(IDocumentSettingAccess::INVERT_BORDER_SPACING, true);
+
     //
     // COMPATIBILITY FLAGS END
     //
diff --git sw/source/filter/ww8/ww8par6.cxx sw/source/filter/ww8/ww8par6.cxx
index d762dfb..c15042a 100644
--- sw/source/filter/ww8/ww8par6.cxx
+++ sw/source/filter/ww8/ww8par6.cxx
@@ -4708,10 +4708,19 @@ void SwWW8ImplReader::Read_Border(USHORT , const BYTE* , short nLen)
 
                 maTracer.Log(sw::log::eBorderDistOutside);
 
-                aBox.SetDistance( (USHORT)aInnerDist.Left(), BOX_LINE_LEFT );
-                aBox.SetDistance( (USHORT)aInnerDist.Top(), BOX_LINE_TOP );
-                aBox.SetDistance( (USHORT)aInnerDist.Right(), BOX_LINE_RIGHT );
-                aBox.SetDistance( (USHORT)aInnerDist.Bottom(), BOX_LINE_BOTTOM );
+		if ((nBorder & WW8_LEFT)==WW8_LEFT) {
+		    aBox.SetDistance( (USHORT)aInnerDist.Left(), BOX_LINE_LEFT );
+		}
+		if ((nBorder & WW8_TOP)==WW8_TOP) {
+		    aBox.SetDistance( (USHORT)aInnerDist.Top(), BOX_LINE_TOP );
+		}
+		if ((nBorder & WW8_RIGHT)==WW8_RIGHT) {
+		    aBox.SetDistance( (USHORT)aInnerDist.Right(), BOX_LINE_RIGHT );
+		}
+
+		if ((nBorder & WW8_BOT)==WW8_BOT) {
+		    aBox.SetDistance( (USHORT)aInnerDist.Bottom(), BOX_LINE_BOTTOM );
+		}
 
                 NewAttr( aBox );
 
diff --git sw/source/ui/uno/SwXDocumentSettings.cxx sw/source/ui/uno/SwXDocumentSettings.cxx
index 70feea6..2ac36e6 100644
--- sw/source/ui/uno/SwXDocumentSettings.cxx
+++ sw/source/ui/uno/SwXDocumentSettings.cxx
@@ -131,6 +131,7 @@ enum SwDocumentSettingsPropertyHandles
     // --> OD 2008-06-05 #i89181#
     HANDLE_TAB_AT_LEFT_INDENT_FOR_PARA_IN_LIST
     // <--
+    ,HANDLE_INVERT_BORDER_SPACING
 };
 
 MasterPropertySetInfo * lcl_createSettingsInfo()
@@ -184,7 +185,7 @@ MasterPropertySetInfo * lcl_createSettingsInfo()
         { RTL_CONSTASCII_STRINGPARAM("ProtectForm"), HANDLE_PROTECT_FORM, CPPUTYPE_BOOLEAN, 0, 0},
         // --> OD 2008-06-05 #i89181#
         { RTL_CONSTASCII_STRINGPARAM("TabAtLeftIndentForParagraphsInList"), HANDLE_TAB_AT_LEFT_INDENT_FOR_PARA_IN_LIST, CPPUTYPE_BOOLEAN, 0, 0},
-
+        { RTL_CONSTASCII_STRINGPARAM("InvertBorderSpacing"), HANDLE_INVERT_BORDER_SPACING, CPPUTYPE_BOOLEAN, 0, 0},
 /*
  * As OS said, we don't have a view when we need to set this, so I have to
  * find another solution before adding them to this property set - MTG
@@ -678,6 +679,12 @@ void SwXDocumentSettings::_setSingleValue( const comphelper::PropertyInfo & rInf
         }
         break;
         // <--
+	case HANDLE_INVERT_BORDER_SPACING:
+	{
+            sal_Bool bTmp = *(sal_Bool*)rValue.getValue();
+            mpDoc->set(IDocumentSettingAccess::INVERT_BORDER_SPACING, bTmp);
+	}
+	break;
         default:
 			throw UnknownPropertyException();
 	}
@@ -1005,7 +1012,12 @@ void SwXDocumentSettings::_getSingleValue( const comphelper::PropertyInfo & rInf
         }
         break;
         // <--
-
+	case HANDLE_INVERT_BORDER_SPACING:
+	{
+            sal_Bool bTmp = mpDoc->get(IDocumentSettingAccess::INVERT_BORDER_SPACING);
+            rValue.setValue( &bTmp, ::getBooleanCppuType() );
+	}
+	break;
         default:
 			throw UnknownPropertyException();
 	}
