diff --git vcl/source/gdi/impimagetree.cxx vcl/source/gdi/impimagetree.cxx
index 807535f..ad999b3 100644
--- vcl/source/gdi/impimagetree.cxx
+++ vcl/source/gdi/impimagetree.cxx
@@ -87,6 +87,21 @@ ImplZipAccessor::~ImplZipAccessor()
 
 // -----------------------------------------------------------------------
 
+static void impl_addToZipVector( uno::Reference< ucb::XSimpleFileAccess > xFileAccess,
+        ::std::vector< ::rtl::OUString > &rURLVector,
+        const rtl::OUString &rURL, const rtl::OUString &rZipName )
+{
+    if ( rURL.getLength() == 0 || rZipName.getLength() == 0 )
+        return;
+
+    INetURLObject aThemeBrandURL( rURL );
+    aThemeBrandURL.Append( rZipName );
+
+    rtl::OUString aMainURL( aThemeBrandURL.GetMainURL( INetURLObject::NO_DECODE ) );
+    if ( xFileAccess->exists( aMainURL ) )
+        rURLVector.push_back( aMainURL );
+}
+
 void ImplZipAccessor::Update( const ::rtl::OUString& rSymbolsStyle )
 {
 #ifdef DEBUG
@@ -105,57 +120,57 @@ void ImplZipAccessor::Update( const ::rtl::OUString& rSymbolsStyle )
     rtl::Bootstrap::expandMacros( aBrandPath );
     rtl::Bootstrap::expandMacros( aOOOPath );
 
+    // If we are installed in /usr/lib*/something, we try also
+    // /usr/share/something
+    ::rtl::OUString aDataDir = ::rtl::OUString::createFromAscii ( "/usr/share/" );
+#ifdef X86_64
+    ::rtl::OUString aLibDir = ::rtl::OUString::createFromAscii ( "/usr/lib64/" );
+#else
+    ::rtl::OUString aLibDir = ::rtl::OUString::createFromAscii ( "/usr/lib/" );
+#endif
+
+    rtl::OUString aOOOPathInShare;
+    sal_Int32 nLibDirPos = aOOOPath.indexOf( aLibDir );
+    if ( nLibDirPos >= 0 )
+        aOOOPathInShare = aOOOPath.replaceAt( nLibDirPos, aLibDir.getLength(), aDataDir );
+
     // Theme Branding Zip
     if( rSymbolsStyle.getLength() )
     {
-        INetURLObject   aThemeBrandURL( aBrandPath );
         ::rtl::OUString aThemeBrandZip( aZipFileName );
-
         ( aThemeBrandZip += ::rtl::OUString::createFromAscii( "_" ) ) += rSymbolsStyle;
         aThemeBrandZip += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_BRAND );
         aThemeBrandZip += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_SUFFIX );
-        aThemeBrandURL.Append( aThemeBrandZip );
 
-        if( mxFileAccess->exists( aThemeBrandURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
-            aTmpURLVector.push_back( aThemeBrandURL.GetMainURL( INetURLObject::NO_DECODE ) );
+        impl_addToZipVector( mxFileAccess, aTmpURLVector, aBrandPath, aThemeBrandZip );
     }
 
     // Branding Zip
-    INetURLObject   aBrandURL( aBrandPath );
     ::rtl::OUString aBrandZip( aZipFileName );
-
     aBrandZip += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_BRAND );
     aBrandZip += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_SUFFIX );
-    aBrandURL.Append( aBrandZip );
 
-    if( mxFileAccess->exists( aBrandURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
-        aTmpURLVector.push_back( aBrandURL.GetMainURL( INetURLObject::NO_DECODE ) );
+    impl_addToZipVector( mxFileAccess, aTmpURLVector, aBrandPath, aBrandZip );
 
     // Theme Zip
     if( rSymbolsStyle.getLength() )
     {
-        INetURLObject   aThemeURL( aOOOPath );
         ::rtl::OUString aThemeZip( aZipFileName );
-
         ( aThemeZip += ::rtl::OUString::createFromAscii( "_" ) ) += rSymbolsStyle;
         aThemeZip += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_SUFFIX );
-        aThemeURL.Append( aThemeZip );
 
-        if( mxFileAccess->exists( aThemeURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
-            aTmpURLVector.push_back( aThemeURL.GetMainURL( INetURLObject::NO_DECODE ) );
+        impl_addToZipVector( mxFileAccess, aTmpURLVector, aOOOPath, aThemeZip );
+        impl_addToZipVector( mxFileAccess, aTmpURLVector, aOOOPathInShare, aThemeZip );
     }
 
     // Default Zip
     if( rSymbolsStyle.getLength() )
     {
-        INetURLObject   aDefaultURL( aOOOPath );
         ::rtl::OUString aDefaultZip( aZipFileName );
-
         aDefaultZip += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_SUFFIX );
-        aDefaultURL.Append( aDefaultZip );
 
-        if( mxFileAccess->exists( aDefaultURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
-            aTmpURLVector.push_back( aDefaultURL.GetMainURL( INetURLObject::NO_DECODE ) );
+        impl_addToZipVector( mxFileAccess, aTmpURLVector, aOOOPath, aDefaultZip );
+        impl_addToZipVector( mxFileAccess, aTmpURLVector, aOOOPathInShare, aDefaultZip );
     }
 
     if( xFactory.is() )
diff --git xmlhelp/source/cxxhelp/provider/provider.cxx xmlhelp/source/cxxhelp/provider/provider.cxx
index 6d8240e..d31fdc9 100644
--- xmlhelp/source/cxxhelp/provider/provider.cxx
+++ xmlhelp/source/cxxhelp/provider/provider.cxx
@@ -348,7 +348,7 @@ void ContentProvider::init()
         setupextension );
 	rtl::OUString vendorshort = vendorname;
 	
-    uno::Sequence< rtl::OUString > aImagesZipPaths( 2 );
+    uno::Sequence< rtl::OUString > aImagesZipPaths( 3 );
     xHierAccess = getHierAccess( sProvider,	 "org.openoffice.Office.Common" );
 	
     rtl::OUString aPath( getKey( xHierAccess, "Path/Current/UserConfig" ) );
@@ -357,6 +357,19 @@ void ContentProvider::init()
 
 	aPath = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("$OOO_BASE_DIR/share/config"));
 	rtl::Bootstrap::expandMacros(aPath);
+    aImagesZipPaths[ 2 ] = aPath;
+
+    // try also /usr/share and even before /usr/lib
+    ::rtl::OUString aDataDir = ::rtl::OUString::createFromAscii ( "/usr/share/" ); 
+#ifdef X86_64 
+    ::rtl::OUString aLibDir = ::rtl::OUString::createFromAscii ( "/usr/lib64/" ); 
+#else 
+    ::rtl::OUString aLibDir = ::rtl::OUString::createFromAscii ( "/usr/lib/" ); 
+#endif 
+    sal_Int32 nLibDirPos = aPath.indexOf( aLibDir ); 
+ 
+    if ( nLibDirPos >= 0 ) 
+        aPath = aPath.replaceAt( nLibDirPos, aLibDir.getLength(), aDataDir ); 
     aImagesZipPaths[ 1 ] = aPath;
 
 	uno::Reference< uno::XComponentContext > xContext;
