From 2df013cf3a2ab8de56804825e92730b84b8883a5 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:09:09 +0200
Subject: [PATCH 853/878] svtools-wmf-clipperf.diff

---
 svtools/source/filter.vcl/wmf/winmtf.cxx |  182 +++++++++++------------------
 svtools/source/filter.vcl/wmf/winmtf.hxx |   38 +++----
 svtools/util/makefile.mk                 |    1 +
 3 files changed, 86 insertions(+), 135 deletions(-)

diff --git a/svtools/source/filter.vcl/wmf/winmtf.cxx b/svtools/source/filter.vcl/wmf/winmtf.cxx
index b49c26e..30e406c 100644
--- a/svtools/source/filter.vcl/wmf/winmtf.cxx
+++ b/svtools/source/filter.vcl/wmf/winmtf.cxx
@@ -30,8 +30,11 @@
 
 
 #include "winmtf.hxx"
+#include <basegfx/matrix/b2dhommatrix.hxx>
+#include <basegfx/polygon/b2dpolypolygontools.hxx>
 #include <vcl/metaact.hxx>
 #include <vcl/graphictools.hxx>
+#include <vcl/canvastools.hxx>
 #include <vcl/metric.hxx>
 #include <rtl/tencinfo.h>
 
@@ -42,103 +45,56 @@
 
 #define WIN_MTF_MAX_CLIP_DEPTH	16
 
-void WinMtfClipPath::ImpUpdateType()
+void WinMtfClipPath::intersectClipRect( const Rectangle& rRect )
 {
-    if ( !aPolyPoly.Count() )
-        eType = EMPTY;
-    else if ( aPolyPoly.IsRect() )
-        eType = RECTANGLE;
-    else
-        eType = COMPLEX;
-
-    bNeedsUpdate = sal_True;
+    maClip.intersectRange(
+        vcl::unotools::b2DRectangleFromRectangle(rRect));
 }
 
-void WinMtfClipPath::IntersectClipRect( const Rectangle& rRect )
+void WinMtfClipPath::excludeClipRect( const Rectangle& rRect )
 {
-    if ( !aPolyPoly.Count() )
-        aPolyPoly = Polygon( rRect );
-    else if ( nDepth < WIN_MTF_MAX_CLIP_DEPTH )
-    {
-        Polygon aPolygon( rRect );
-        PolyPolygon aIntersection;
-        PolyPolygon aPolyPolyRect( aPolygon );
-        aPolyPoly.GetIntersection( aPolyPolyRect, aIntersection );
-        aPolyPoly = aIntersection;
-        nDepth++;
-    }
-    ImpUpdateType();
+    maClip.subtractRange(
+        vcl::unotools::b2DRectangleFromRectangle(rRect));
 }
 
-void WinMtfClipPath::ExcludeClipRect( const Rectangle& rRect )
+void WinMtfClipPath::setClipPath( const PolyPolygon& rPolyPolygon, sal_Int32 nClippingMode )
 {
-    if ( aPolyPoly.Count() && ( nDepth < WIN_MTF_MAX_CLIP_DEPTH ) )
+    const basegfx::B2DPolyPolygon& rB2DPoly=rPolyPolygon.getB2DPolyPolygon();
+    switch ( nClippingMode )
     {
-        Polygon aPolygon( rRect );
-        PolyPolygon aPolyPolyRect( aPolygon );
-        PolyPolygon aDifference;
-        aPolyPoly.GetDifference( aPolyPolyRect, aDifference );
-        aPolyPoly = aDifference;
-        nDepth++;
-    }
-    ImpUpdateType();
-}
-
-void WinMtfClipPath::SetClipPath( const PolyPolygon& rPolyPolygon, sal_Int32 nClippingMode )
-{
-    if ( !rPolyPolygon.Count() )
-        aPolyPoly = rPolyPolygon;
-    else if ( nDepth < WIN_MTF_MAX_CLIP_DEPTH )
-    {
-        nDepth++;
-
-        PolyPolygon aNewClipPath;
-
-        // #115345# Watch out for empty aPolyPoly here - conceptually,
-        // an empty clip path is a rectangle of infinite size, but it
-        // is represented by an empty aPolyPoly. When intersecting
-        // rPolyPolygon with this _empty_ aPolyPoly, set algebra
-        // guarantees wrong results.
-        switch ( nClippingMode )
-        {
-            case RGN_OR :
-                // #115345# clip stays empty, when ORing an arbitrary
-                // rPolyPolygon. Thus, we can save us the unnecessary
-                // clipper call.
-                if( aPolyPoly.Count() )
-                    aPolyPoly.GetUnion( rPolyPolygon, aNewClipPath );
+        case RGN_OR :
+            maClip.unionPolyPolygon(rB2DPoly);
             break;
-            case RGN_XOR :
-                // TODO:
-                // #115345# Cannot handle this case, for the time being
-                aPolyPoly.GetXOR( rPolyPolygon, aNewClipPath );
+        case RGN_XOR :
+            maClip.xorPolyPolygon(rB2DPoly);
             break;
-            case RGN_DIFF :
-                // TODO:
-                // #115345# Cannot handle this case, for the time being
-                aPolyPoly.GetDifference( rPolyPolygon, aNewClipPath );
+        case RGN_DIFF :
+            maClip.subtractPolyPolygon(rB2DPoly);
             break;
-            case RGN_AND :
-                // #115345# Clip becomes rPolyPolygon, when ANDing
-                // with an arbitrary rPolyPolygon
-                if( aPolyPoly.Count() )
-                    aPolyPoly.GetIntersection( rPolyPolygon, aNewClipPath );
-                else
-                    aNewClipPath = rPolyPolygon;
+        case RGN_AND :
+            maClip.intersectPolyPolygon(rB2DPoly);
             break;
-            case RGN_COPY :
-                aNewClipPath = rPolyPolygon;
+        case RGN_COPY :
+            maClip = basegfx::tools::B2DClipState(rB2DPoly);
             break;
-        }
-        aPolyPoly = aNewClipPath;
     }
-    ImpUpdateType();
 }
 
-void WinMtfClipPath::MoveClipRegion( const Size& rSize )
+void WinMtfClipPath::moveClipRegion( const Size& rSize )
+{
+    // what a weird concept. emulate, don't want this in B2DClipState
+    // API
+    basegfx::B2DPolyPolygon aCurrClip=maClip.getClipPoly();
+    basegfx::B2DHomMatrix aTranslate;
+    aTranslate.translate(rSize.Width(), rSize.Height());
+
+    aCurrClip.transform(aTranslate);
+    maClip = basegfx::tools::B2DClipState( aCurrClip );
+}
+
+basegfx::B2DPolyPolygon WinMtfClipPath::getClipPath() const
 {
-    aPolyPoly.Move( rSize.Width(), rSize.Height() );
-    bNeedsUpdate = sal_True;
+    return maClip.getClipPoly();
 }
 
 // ------------------------------------------------------------------------
@@ -905,31 +861,35 @@ void WinMtfOutput::DeleteObject( sal_Int32 nIndex )
 
 void WinMtfOutput::IntersectClipRect( const Rectangle& rRect )
 {
-    aClipPath.IntersectClipRect( ImplMap( rRect ) );
+    mbClipNeedsUpdate=true;
+    aClipPath.intersectClipRect( ImplMap( rRect ) );
 }
 
 //-----------------------------------------------------------------------------------
 
 void WinMtfOutput::ExcludeClipRect( const Rectangle& rRect )
 {
-    aClipPath.ExcludeClipRect( ImplMap( rRect ) );
+    mbClipNeedsUpdate=true;
+    aClipPath.excludeClipRect( ImplMap( rRect ) );
 }
 
 //-----------------------------------------------------------------------------------
 
 void WinMtfOutput::MoveClipRegion( const Size& rSize )
 {
-    aClipPath.MoveClipRegion( ImplMap( rSize ) );
+    mbClipNeedsUpdate=true;
+    aClipPath.moveClipRegion( ImplMap( rSize ) );
 }
 
 void WinMtfOutput::SetClipPath( const PolyPolygon& rPolyPolygon, sal_Int32 nClippingMode, sal_Bool bIsMapped )
 {
+    mbClipNeedsUpdate=true;
     if ( bIsMapped )
-        aClipPath.SetClipPath( rPolyPolygon, nClippingMode );
+        aClipPath.setClipPath( rPolyPolygon, nClippingMode );
     else
     {
         PolyPolygon aPP( rPolyPolygon );
-        aClipPath.SetClipPath( ImplMap( aPP ), nClippingMode );
+        aClipPath.setClipPath( ImplMap( aPP ), nClippingMode );
     }
 }
 
@@ -951,6 +911,8 @@ WinMtfOutput::WinMtfOutput( GDIMetaFile& rGDIMetaFile ) :
     maActPos			( Point() ),
     mbNopMode			( sal_False ),
     mbFillStyleSelected	( sal_False ),
+    mbClipNeedsUpdate   ( true ),
+    mbComplexClip       ( false ),
     mnGfxMode			( GM_COMPATIBLE ),
     mnMapMode           ( MM_TEXT ),
     mnUnitsPerInch ( 96 ),
@@ -1003,31 +965,25 @@ WinMtfOutput::~WinMtfOutput()
 
 void WinMtfOutput::UpdateClipRegion()
 {
-    if ( aClipPath.bNeedsUpdate )
+    if ( mbClipNeedsUpdate )
     {
-        aClipPath.bNeedsUpdate = sal_False;
+        mbClipNeedsUpdate = false;
+        mbComplexClip = false;
 
         mpGDIMetaFile->AddAction( new MetaPopAction() );                    // taking the orignal clipregion
         mpGDIMetaFile->AddAction( new MetaPushAction( PUSH_CLIPREGION ) );  // 
 
-        switch ( aClipPath.GetType() )
+        // skip for 'no clipping at all' case
+        if( !aClipPath.isEmpty() )
         {
-            case RECTANGLE :
-            case COMPLEX :
-            {
-//				we will not generate a RegionClipRegion Action, because this action
-//				cannot be saved to the wmf format - saving to wmf always happens
-//				if the placeholder graphic for ole objects is generated. (SJ)
-
-//				Region aClipRegion( aClipPath.GetClipPath() );
-//				mpGDIMetaFile->AddAction( new MetaISectRegionClipRegionAction( aClipRegion ) );
-
-                Rectangle aClipRect( aClipPath.GetClipPath().GetBoundRect() );
-                mpGDIMetaFile->AddAction( new MetaISectRectClipRegionAction( aClipRect ) );
-            }
-            break;
-            case EMPTY:
-            break;  // -Wall not handled.
+            const basegfx::B2DPolyPolygon& rClipPoly( aClipPath.getClipPath() );
+            mpGDIMetaFile->AddAction(
+                new MetaISectRectClipRegionAction(
+                    vcl::unotools::rectangleFromB2DRectangle(
+                        rClipPoly.getB2DRange())));
+
+            mbComplexClip = rClipPoly.count() > 1
+                || !basegfx::tools::isRectangle(rClipPoly);
         }
     }
 }
@@ -1206,12 +1162,12 @@ void WinMtfOutput::DrawRect( const Rectangle& rRect, BOOL bEdge )
     UpdateClipRegion();
     UpdateFillStyle();
 
-    if ( aClipPath.GetType() == COMPLEX )
+    if ( mbComplexClip )
     {
         Polygon aPoly( ImplMap( rRect ) );
         PolyPolygon aPolyPolyRect( aPoly );
         PolyPolygon aDest;
-        aClipPath.GetClipPath().GetIntersection( aPolyPolyRect, aDest );
+        PolyPolygon(aClipPath.getClipPath()).GetIntersection( aPolyPolyRect, aDest );
         ImplDrawClippedPolyPolygon( aDest );
     }
     else
@@ -1366,11 +1322,11 @@ void WinMtfOutput::DrawPolygon( Polygon& rPolygon, sal_Bool bRecordPath )
     {
         UpdateFillStyle();
 
-        if ( aClipPath.GetType() == COMPLEX )
+        if ( mbComplexClip )
         {
             PolyPolygon aPolyPoly( rPolygon );
             PolyPolygon aDest;
-            aClipPath.GetClipPath().GetIntersection( aPolyPoly, aDest );
+            PolyPolygon(aClipPath.getClipPath()).GetIntersection( aPolyPoly, aDest );
             ImplDrawClippedPolyPolygon( aDest );
         }
         else
@@ -1442,10 +1398,10 @@ void WinMtfOutput::DrawPolyPolygon( PolyPolygon& rPolyPolygon, sal_Bool bRecordP
     {
         UpdateFillStyle();
 
-        if ( aClipPath.GetType() == COMPLEX )
+        if ( mbComplexClip )
         {
             PolyPolygon aDest;
-            aClipPath.GetClipPath().GetIntersection( rPolyPolygon, aDest );	
+            PolyPolygon(aClipPath.getClipPath()).GetIntersection( rPolyPolygon, aDest );
             ImplDrawClippedPolyPolygon( aDest );
         }
         else
@@ -1680,7 +1636,7 @@ void WinMtfOutput::DrawText( Point& rPosition, String& rText, sal_Int32* pDXArry
 void WinMtfOutput::ImplDrawBitmap( const Point& rPos, const Size& rSize, const BitmapEx rBitmap )
 {
     BitmapEx aBmpEx( rBitmap );
-    if ( aClipPath.GetType() == COMPLEX )
+    if ( mbComplexClip )
     {
         VirtualDevice aVDev;
         MapMode aMapMode( MAP_100TH_MM );
@@ -1695,7 +1651,7 @@ void WinMtfOutput::ImplDrawBitmap( const Point& rPos, const Size& rSize, const B
         aVDev.SetMapMode( aMapMode );
         aVDev.SetOutputSizePixel( aSizePixel );
         aVDev.SetFillColor( Color( COL_BLACK ) );
-        const PolyPolygon aClip( aClipPath.GetClipPath() );
+        const PolyPolygon aClip( aClipPath.getClipPath() );
         aVDev.DrawPolyPolygon( aClip );
         const Point aEmptyPoint;
 
@@ -2252,7 +2208,7 @@ void WinMtfOutput::Pop()
         if ( ! ( aClipPath == pSave->aClipPath ) )
         {
             aClipPath = pSave->aClipPath;
-            aClipPath.bNeedsUpdate = sal_True;
+            mbClipNeedsUpdate = true;
         }
         if ( meLatestRasterOp != meRasterOp )
             mpGDIMetaFile->AddAction( new MetaRasterOpAction( meRasterOp ) );
diff --git a/svtools/source/filter.vcl/wmf/winmtf.hxx b/svtools/source/filter.vcl/wmf/winmtf.hxx
index 7efc8db..0266f4b 100644
--- a/svtools/source/filter.vcl/wmf/winmtf.hxx
+++ b/svtools/source/filter.vcl/wmf/winmtf.hxx
@@ -45,6 +45,7 @@
 #include <vcl/graph.hxx>
 #include <vcl/virdev.hxx>
 #include <tools/poly.hxx>
+#include <basegfx/tools/b2dclipstate.hxx>
 #include <vcl/font.hxx>
 #include <vcl/bmpacc.hxx>
 #include <vcl/lineinfo.hxx>
@@ -309,35 +310,26 @@ struct WMF_APMFILEHEADER;
 void WinMtfAssertHandler( const sal_Char*, sal_uInt32 nFlags = WIN_MTF_ASSERT_MIFE );
 #endif 
 
-enum WinMtfClipPathType{ EMPTY, RECTANGLE, COMPLEX };
-
 class WinMtfClipPath
 {
-        PolyPolygon			aPolyPoly;
-        WinMtfClipPathType	eType;
-        sal_Int32			nDepth;
-
-        void		ImpUpdateType();
-
-    public :
+    basegfx::tools::B2DClipState maClip;
 
-        sal_Bool	bNeedsUpdate;
+public :
+    WinMtfClipPath(): maClip() {};
 
-                    WinMtfClipPath(): eType(EMPTY), nDepth( 0 ), bNeedsUpdate( sal_False ){};
+    void		setClipPath( const PolyPolygon& rPolyPolygon, sal_Int32 nClippingMode );
+    void		intersectClipRect( const Rectangle& rRect );
+    void		excludeClipRect( const Rectangle& rRect );
+    void		moveClipRegion( const Size& rSize );
 
-        void		SetClipPath( const PolyPolygon& rPolyPolygon, sal_Int32 nClippingMode );
-        void		IntersectClipRect( const Rectangle& rRect );
-        void		ExcludeClipRect( const Rectangle& rRect );
-        void		MoveClipRegion( const Size& rSize );
+    bool isEmpty() const { return maClip.isCleared(); }
 
-        WinMtfClipPathType GetType() const { return eType; };
-        const PolyPolygon& GetClipPath() const { return aPolyPoly; };
+    basegfx::B2DPolyPolygon getClipPath() const;
 
-        sal_Bool operator==( const WinMtfClipPath& rPath )
-        {
-            return  ( rPath.eType == eType ) &&
-                    ( rPath.aPolyPoly == aPolyPoly );
-        };
+    bool operator==( const WinMtfClipPath& rPath ) const
+    {
+        return maClip == rPath.maClip;
+    };
 };
 
 class WinMtfPathObj : public PolyPolygon
@@ -583,6 +575,8 @@ class WinMtfOutput
         sal_uInt32          mnRop;
         sal_Bool            mbNopMode;
         sal_Bool			mbFillStyleSelected;
+        sal_Bool            mbClipNeedsUpdate;
+        sal_Bool            mbComplexClip;
 
         std::vector< SaveStructPtr > vSaveStack;
 
diff --git a/svtools/util/makefile.mk b/svtools/util/makefile.mk
index 3166a0f..40b1e54 100644
--- a/svtools/util/makefile.mk
+++ b/svtools/util/makefile.mk
@@ -136,6 +136,7 @@ SHL1STDLIBS+= \
         $(VCLLIB)			\
         $(SVLLIB)			\
         $(SOTLIB)			\
+        $(BASEGFXLIB)		\
         $(UNOTOOLSLIB)		\
         $(TOOLSLIB)			\
         $(I18NISOLANGLIB)   \
-- 
1.7.0.1

