--- sfx2/inc/sfx2/tabdlg.hxx
+++ sfx2/inc/sfx2/tabdlg.hxx
@@ -43,6 +43,9 @@
 #include <svtools/itemset.hxx>
 #include <com/sun/star/frame/XFrame.hpp>
 
+#include <map>
+namespace layout { class TabPage; }
+
 class SfxPoolItem;
 class SfxTabDialog;
 class SfxViewFrame;
@@ -52,6 +55,11 @@ class SfxBindings;
 // typedefs --------------------------------------------------------------
 
 typedef SfxTabPage* (*CreateTabPage)(Window *pParent, const SfxItemSet &rAttrSet);
+namespace layout
+{
+class TabPage;
+typedef TabPage* (*CreateTabPage)(::Window *pParent, ::SfxItemSet const& set );
+}
 typedef USHORT*		(*GetTabPageRanges)(); // liefert internationale Which-Wert
 
 struct TabDlg_Impl;
@@ -98,6 +106,8 @@ friend class SfxTabDialogController;
 	USHORT				nAppPageId;
 	BOOL				bItemsReset;
 	BOOL				bFmt;
+    std::map<int, layout::TabPage*> layoutPages;
+    std::map<int, layout::CreateTabPage> layoutPageFuncs;
 
 //#if 0 // _SOLAR__PRIVATE
 	DECL_DLLPRIVATE_LINK( ActivatePageHdl, TabControl * );
@@ -128,7 +138,7 @@ protected:
 		handles the item sets to copy.
 		@return TRUE if it is allowed to leave the current page, FALSE otherwise
 	*/
-	BOOL			PrepareLeaveCurrentPage();
+	bool PrepareLeaveCurrentPage();
 
 public:
     SfxTabDialog( Window* pParent, const ResId &rResId, USHORT nSetId, SfxBindings& rBindings,
@@ -168,6 +178,8 @@ public:
 									BOOL bItemsOnDemand = FALSE,
 									USHORT nPos = TAB_APPEND);
 
+    void AddTabPage( int id, layout::TabPage* page, bool=false );
+    void AddTabPage( int id, layout::CreateTabPage, bool=false );
 	void				RemoveTabPage( USHORT nId );
 
 	void				SetCurPageId( USHORT nId ) { nAppPageId = nId; }
@@ -181,7 +193,7 @@ public:
 	const SfxItemSet*	GetOutputItemSet() const { return pOutSet; }
 	const SfxItemSet*	GetOutputItemSet( USHORT nId ) const;
 	int					FillOutputItemSet();
-	const BOOL			IsFormat() const { return bFmt; }
+	BOOL IsFormat() const { return bFmt; }
 
 	const OKButton& 	GetOKButton() const { return aOKBtn; }
 	OKButton&			GetOKButton() { return aOKBtn; }
diff --git a/sfx2/source/dialog/tabdlg.cxx b/sfx2/source/dialog/tabdlg.cxx
index 084ec17..d3254ed 100644
--- sfx2/source/dialog/tabdlg.cxx
+++ sfx2/source/dialog/tabdlg.cxx
@@ -56,6 +56,7 @@
 #include <sfx2/bindings.hxx>
 #include <sfx2/sfxdlg.hxx>
 #include <sfx2/itemconnect.hxx>
+#include <layout/layout.hxx>
 
 #include "dialog.hrc"
 #include "helpid.hrc"
@@ -171,6 +172,12 @@ void SfxTabDialogController::StateChanged( USHORT /*nSID*/, SfxItemState /*eStat
         for ( USHORT n=0; n<pDialog->aTabCtrl.GetPageCount(); n++ )
         {
             USHORT nPageId = pDialog->aTabCtrl.GetPageId( n );
+            if ( layout::TabPage* page = pDialog->layoutPages[nPageId] )
+            {
+                page->Reset( pSetItem->GetItemSet() );
+                bDialogStarted = TRUE;
+            }
+
             SfxTabPage* pTabPage = (SfxTabPage*) pDialog->aTabCtrl.GetTabPage( nPageId );
             if ( pTabPage )
             {
@@ -617,6 +624,10 @@ SfxTabDialog::~SfxTabDialog()
 	delete pOutSet;
 	delete pExampleSet;
 	delete [] pRanges;
+
+    for ( size_t i = 0; i < layoutPages.size(); i++ )
+        if (layout::TabPage *page = layoutPages[i])
+            delete page;
 }
 
 // -----------------------------------------------------------------------
@@ -922,6 +933,16 @@ void SfxTabDialog::AddTabPage
 }
 #endif
 
+void SfxTabDialog::AddTabPage( int id, layout::TabPage* page, bool )
+{
+    layoutPages[id] = page;
+}
+
+void SfxTabDialog::AddTabPage( int id, layout::CreateTabPage func, bool )
+{
+    layoutPageFuncs[id] = func;
+}
+
 // -----------------------------------------------------------------------
 
 void SfxTabDialog::RemoveTabPage( USHORT nId )
@@ -1164,19 +1185,39 @@ IMPL_LINK( SfxTabDialog, OkHdl, Button *, EMPTYARG )
 
 // -----------------------------------------------------------------------
 
-BOOL SfxTabDialog::PrepareLeaveCurrentPage()
+bool SfxTabDialog::PrepareLeaveCurrentPage()
 {
-	SfxTabPage* pPage =
-		(SfxTabPage*)aTabCtrl.GetTabPage( aTabCtrl.GetCurPageId() );
+	USHORT const nId = aTabCtrl.GetCurPageId();
+
+    if ( layout::TabPage* page = layoutPages[nId] )
+    {
+		if ( !pSet )
+			return page->DeactivatePage( 0 );
+
+        SfxItemSet set( *pSet->GetPool(), pSet->GetRanges() );
+
+        if ( page->HasExchangeSupport() )
+            return page->DeactivatePage( &set );
+
+		int result = page->DeactivatePage( 0 );
+        if ( result & layout::TabPage::LEAVE_PAGE && set.Count() )
+        {
+            pExampleSet->Put( set );
+            pOutSet->Put( set );
+		}
+		return result;
+    }
+
+	SfxTabPage* pPage = (SfxTabPage*)aTabCtrl.GetTabPage( nId );
 
 	bool bEnd = !pPage;
+
 	if ( pPage )
 	{
 		int nRet = SfxTabPage::LEAVE_PAGE;
 		if ( pSet )
 		{
 			SfxItemSet aTmp( *pSet->GetPool(), pSet->GetRanges() );
-			BOOL bRet = FALSE;
 
 			if ( pPage->HasExchangeSupport() )
 				nRet = pPage->DeactivatePage( &aTmp );
@@ -1189,8 +1230,6 @@ BOOL SfxTabDialog::PrepareLeaveCurrentPage()
 				pExampleSet->Put( aTmp );
 				pOutSet->Put( aTmp );
 			}
-			else if ( bRet )
-				pImpl->bModified |= TRUE;
 		}
 		else
 			nRet = pPage->DeactivatePage( NULL );
@@ -1215,37 +1254,7 @@ IMPL_LINK( SfxTabDialog, UserHdl, Button *, EMPTYARG )
 */
 
 {
-	SfxTabPage* pPage =
-		(SfxTabPage *)aTabCtrl.GetTabPage( aTabCtrl.GetCurPageId() );
-
-	FASTBOOL bEnd = !pPage;
-
-	if ( pPage )
-	{
-		int nRet = SfxTabPage::LEAVE_PAGE;
-
-		if ( pSet )
-		{
-			SfxItemSet aTmp( *pSet->GetPool(), pSet->GetRanges() );
-
-			if ( pPage->HasExchangeSupport() )
-				nRet = pPage->DeactivatePage( &aTmp );
-			else
-				nRet = pPage->DeactivatePage( NULL );
-
-			if ( ( SfxTabPage::LEAVE_PAGE & nRet ) == SfxTabPage::LEAVE_PAGE
-				 && aTmp.Count() )
-			{
-				pExampleSet->Put( aTmp );
-				pOutSet->Put( aTmp );
-			}
-		}
-		else
-			nRet = pPage->DeactivatePage( NULL );
-		bEnd = nRet;
-	}
-
-	if ( bEnd )
+	if ( PrepareLeaveCurrentPage () )
 	{
 		short nRet = Ok();
 
@@ -1271,7 +1280,14 @@ IMPL_LINK( SfxTabDialog, ResetHdl, Button *, EMPTYARG )
 */
 
 {
-	Data_Impl* pDataObject = Find( *pImpl->pData, aTabCtrl.GetCurPageId() );
+    int const nId = aTabCtrl.GetCurPageId();
+    if ( layout::TabPage* page = layoutPages[nId] )
+    {
+        page->Reset( *pSet );
+        return 0;
+    }
+
+	Data_Impl* pDataObject = Find( *pImpl->pData, nId );
 	DBG_ASSERT( pDataObject, "Id nicht bekannt" );
 
 	if ( pDataObject->bOnDemand )
@@ -1365,6 +1381,7 @@ IMPL_LINK( SfxTabDialog, BaseFmtHdl, Button *, EMPTYARG )
 
 // -----------------------------------------------------------------------
 
+
 IMPL_LINK( SfxTabDialog, ActivatePageHdl, TabControl *, pTabCtrl )
 
 /*  [Beschreibung]
@@ -1379,8 +1396,33 @@ IMPL_LINK( SfxTabDialog, ActivatePageHdl, TabControl *, pTabCtrl )
 */
 
 {
+	int const nId = pTabCtrl->GetCurPageId();
+    OSL_TRACE ("%s: page: %d", __FUNCTION__, nId );
+    if ( !layoutPages[nId] )
+        if ( layout::CreateTabPage func = layoutPageFuncs[nId] )
+        {
+            layout::TabPage::global_parent = pTabCtrl;
+            layout::TabPage* page = (func) (pTabCtrl, *pSet);
+            AddTabPage( nId, page );
+        }
+    if ( layout::TabPage* page = layoutPages[nId] )
+    {
+        TabPage *vclPage = page->GetTabPage();
+        TabControl *dialog = pTabCtrl;
+        page->Reset( page->GetItemSet() );
+        page->ActivatePage();
+        dialog->SetTabPage( nId, vclPage );
+
+        Size tabSize = vclPage->GetSizePixel();
+        Size dialogSize = dialog->GetTabPageSizePixel();
+        OSL_TRACE ("%s: tabSize: %d, %d", __FUNCTION__, tabSize.Width(), tabSize.Height() );
+        OSL_TRACE ("%s: dialogSize: %d, %d", __FUNCTION__, dialogSize.Width(), dialogSize.Height() );
+
+        dialog->SetTabPageSizePixel( dialogSize );
+        return 0;
+    }
+    
 	DBG_ASSERT( pImpl->pData->Count(), "keine Pages angemeldet" );
-	const USHORT nId = pTabCtrl->GetCurPageId();
 	SFX_APP();
 
 	// Tab Page schon da?
@@ -1455,6 +1497,9 @@ IMPL_LINK( SfxTabDialog, DeactivatePageHdl, TabControl *, pTabCtrl )
 */
 
 {
+    if ( /* layout::TabPage* p = */ layoutPages[pTabCtrl->GetCurPageId()] )
+        return SfxTabPage::LEAVE_PAGE;
+
 	USHORT nId = pTabCtrl->GetCurPageId();
 	SFX_APP();
 	SfxTabPage *pPage = (SfxTabPage*)pTabCtrl->GetTabPage( nId );
