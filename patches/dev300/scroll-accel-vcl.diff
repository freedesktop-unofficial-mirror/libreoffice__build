From f7b1e9048f355458a9bd703a09f04e0ff4c61b34 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:57:17 +0200
Subject: [PATCH 225/768] scroll-accel-vcl.diff

---
 vcl/inc/vcl/seleng.hxx       |    8 +++++++-
 vcl/source/window/seleng.cxx |   34 ++++++++++++++++++++++++++++++----
 2 files changed, 37 insertions(+), 5 deletions(-)

diff --git vcl/inc/vcl/seleng.hxx vcl/inc/vcl/seleng.hxx
index 3c31d09..dcb764b 100644
--- vcl/inc/vcl/seleng.hxx
+++ vcl/inc/vcl/seleng.hxx
@@ -38,6 +38,8 @@ class CommandEvent;
 // Timerticks
 #define SELENG_DRAGDROP_TIMEOUT     400
 #define SELENG_AUTOREPEAT_INTERVAL  50
+#define SELENG_AUTOREPEAT_INTERVAL_MIN 25
+#define SELENG_AUTOREPEAT_INTERVAL_MAX 300
 
 enum SelectionMode { NO_SELECTION, SINGLE_SELECTION, RANGE_SELECTION, MULTIPLE_SELECTION };
 
@@ -87,6 +89,7 @@ private:
     Timer               aWTimer; // erzeugt kuenstliche Mouse-Moves
     MouseEvent          aLastMove;
     SelectionMode       eSelMode;
+    ULONG               nUpdateInterval;
     // Stufigkeit fuer Mausbewegungen waehrend einer Selektion
     USHORT              nMouseSensitivity;
     USHORT              nLockedMods;
@@ -100,7 +103,8 @@ private:
 public:
 
                         SelectionEngine( Window* pWindow,
-                                         FunctionSet* pFunctions = NULL );
+                                         FunctionSet* pFunctions = NULL,
+                                         ULONG nAutoRepeatInterval = SELENG_AUTOREPEAT_INTERVAL );
                         ~SelectionEngine();
 
     // TRUE: Event wurde von Selection-Engine verarbeitet.
@@ -159,6 +163,8 @@ public:
     BOOL                HasAnchor() const;
     void                SetAnchor( BOOL bAnchor );
 
+    void                SetUpdateInterval( ULONG nInterval );
+
     // wird im Ctor eingeschaltet
     void				ExpandSelectionOnMouseMove( BOOL bExpand = TRUE )
                         {
diff --git vcl/source/window/seleng.cxx vcl/source/window/seleng.cxx
index 0280310..2ceedcb 100644
--- vcl/source/window/seleng.cxx
+++ vcl/source/window/seleng.cxx
@@ -55,8 +55,10 @@ inline BOOL SelectionEngine::ShouldDeselect( BOOL bModifierKey1 ) const
 |*
 *************************************************************************/
 
-SelectionEngine::SelectionEngine( Window* pWindow, FunctionSet* pFuncSet ) :
-                    pWin( pWindow )
+SelectionEngine::SelectionEngine( Window* pWindow, FunctionSet* pFuncSet,
+                                  ULONG nAutoRepeatInterval ) :
+    pWin( pWindow ),
+    nUpdateInterval( nAutoRepeatInterval )
 {
     eSelMode = SINGLE_SELECTION;
     pFunctionSet = pFuncSet;
@@ -64,7 +66,7 @@ SelectionEngine::SelectionEngine( Window* pWindow, FunctionSet* pFuncSet ) :
     nLockedMods = 0;
 
     aWTimer.SetTimeoutHdl( LINK( this, SelectionEngine, ImpWatchDog ) );
-    aWTimer.SetTimeout( SELENG_AUTOREPEAT_INTERVAL );
+    aWTimer.SetTimeout( nUpdateInterval );
 }
 
 /*************************************************************************
@@ -389,7 +391,7 @@ BOOL SelectionEngine::SelMouseMove( const MouseEvent& rMEvt )
     if( aWTimer.IsActive() && !aArea.IsInside( rMEvt.GetPosPixel() ))
         return TRUE;
 
-
+    aWTimer.SetTimeout( nUpdateInterval );
     aWTimer.Start();
     if ( eSelMode != SINGLE_SELECTION )
     {
@@ -485,3 +487,27 @@ void SelectionEngine::Command( const CommandEvent& rCEvt )
             nFlags &= ~SELENG_CMDEVT;
     }
 }
+
+void SelectionEngine::SetUpdateInterval( ULONG nInterval )
+{
+    if (nInterval < SELENG_AUTOREPEAT_INTERVAL_MIN)
+        // Set a lower threshold.  On Windows, setting this value too low
+        // would cause selection to get updated indefinitely.
+        nInterval = SELENG_AUTOREPEAT_INTERVAL_MIN;
+
+    if (nUpdateInterval == nInterval)
+        // no update needed.
+        return;
+
+    if (aWTimer.IsActive())
+    {
+        // reset the timer right away on interval change.
+        aWTimer.Stop();
+        aWTimer.SetTimeout(nInterval);
+        aWTimer.Start();
+    }
+    else
+        aWTimer.SetTimeout(nInterval);
+
+    nUpdateInterval = nInterval;
+}
-- 
1.7.0.1

