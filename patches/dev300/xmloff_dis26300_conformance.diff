From db9cc217609a098cfc4a6050aa9a7e22bb8f80ea Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:04:43 +0200
Subject: [PATCH 557/768] xmloff_dis26300_conformance.diff

---
 sw/source/filter/xml/xmltbli.cxx   |    2 +-
 xmloff/inc/xmloff/txtimp.hxx       |    1 +
 xmloff/inc/xmloff/xmlimp.hxx       |    6 +++++
 xmloff/inc/xmloff/xmltoken.hxx     |    2 +
 xmloff/source/core/xmlimp.cxx      |   36 ++++++++++++++++++++++++++++++
 xmloff/source/core/xmltoken.cxx    |    2 +
 xmloff/source/draw/shapeimport.cxx |    2 +-
 xmloff/source/text/txtimp.cxx      |   29 ++++++++++++++++++++----
 xmloff/source/text/txtparai.cxx    |   43 +++++++++++++++++++++---------------
 xmloff/source/text/txtparai.hxx    |    3 +-
 10 files changed, 100 insertions(+), 26 deletions(-)

diff --git sw/source/filter/xml/xmltbli.cxx sw/source/filter/xml/xmltbli.cxx
index fc0db71..b8e790a 100644
--- sw/source/filter/xml/xmltbli.cxx
+++ sw/source/filter/xml/xmltbli.cxx
@@ -2891,7 +2891,7 @@ const SwStartNode *SwXMLTableContext::InsertTableSection(
         bFirstSection = sal_False;
         OUString sStyleName( RTL_CONSTASCII_USTRINGPARAM("Standard") );
         GetImport().GetTextImport()->SetStyleAndAttrs( GetImport(),
-            GetImport().GetTextImport()->GetCursor(), sStyleName, sal_True );
+            GetImport().GetTextImport()->GetCursor(), sStyleName, rtl::OUString(), sal_True );
     }
     else
     {
diff --git xmloff/inc/xmloff/txtimp.hxx xmloff/inc/xmloff/txtimp.hxx
index cdfd1d9..734f15c 100644
--- xmloff/inc/xmloff/txtimp.hxx
+++ xmloff/inc/xmloff/txtimp.hxx
@@ -631,6 +631,7 @@ public:
             const ::com::sun::star::uno::Reference <
                 ::com::sun::star::text::XTextCursor >& rCursor,
             const ::rtl::OUString& rStyleName,
+            const ::rtl::OUString& rClassNames,
             sal_Bool bPara,
             sal_Bool bOutlineLevelAttrFound = sal_False,
             sal_Int8 nOutlineLevel = -1,
diff --git xmloff/inc/xmloff/xmlimp.hxx xmloff/inc/xmloff/xmlimp.hxx
index d7c1762..26b836d 100644
--- xmloff/inc/xmloff/xmlimp.hxx
+++ xmloff/inc/xmloff/xmlimp.hxx
@@ -212,6 +212,12 @@ public:
     static const ::com::sun::star::uno::Sequence< sal_Int8 > & getUnoTunnelId() throw();
     static SvXMLImport* getImplementation( ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > ) throw();
 
+
+        SvXMLImportContext *getTopContext();
+        SvXMLImportContext *createUnknownContext( USHORT nPrefix,
+                          const ::rtl::OUString& rLocalName,
+                          const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XAttributeList >& xAttrList );
+
     // ::com::sun::star::xml::sax::XDocumentHandler
     virtual void SAL_CALL startDocument(void)
         throw( ::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException );
diff --git xmloff/inc/xmloff/xmltoken.hxx xmloff/inc/xmloff/xmltoken.hxx
index b6f44ff..a3e3562 100644
--- xmloff/inc/xmloff/xmltoken.hxx
+++ xmloff/inc/xmloff/xmltoken.hxx
@@ -1399,6 +1399,7 @@ namespace xmloff { namespace token {
         XML_PRINTABLE,
         XML_PRINTED_BY,
         XML_PROCEEDINGS,
+    XML_PROCESS_CONTENT,
         XML_PRODUCT,
         XML_PROJECTION,
         XML_PROPERTIES,
@@ -1692,6 +1693,7 @@ namespace xmloff { namespace token {
         XML_STRUCTURE_PROTECTED,
         XML_STYLE,
         XML_STYLE_NAME,
+        XML_CLASS_NAMES,
         XML_STYLES,
         XML_STYLESHEET,
         XML_SUB_TABLE,
diff --git xmloff/source/core/xmlimp.cxx xmloff/source/core/xmlimp.cxx
index dda82a2..caa2610 100644
--- xmloff/source/core/xmlimp.cxx
+++ xmloff/source/core/xmlimp.cxx
@@ -764,6 +764,42 @@ void SAL_CALL SvXMLImport::startElement( const OUString& rName,
     mpContexts->Insert( pContext, nCount );
 }
 
+SvXMLImportContext *SvXMLImport::getTopContext() {
+    USHORT nCount = mpContexts->Count();
+    if (nCount>0) {
+    SvXMLImportContext *pContext = (*mpContexts)[nCount-1];
+    return pContext;
+    } else {
+    return NULL;
+    }
+}
+
+SvXMLImportContext *SvXMLImport::createUnknownContext( USHORT nPrefix,
+                      const ::rtl::OUString& rLocalName,
+                      const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XAttributeList >& xAttrList )
+{
+    bool bProcessContent=true;
+    sal_Int16 nAttrCount = xAttrList.is() ? xAttrList->getLength() : 0;
+    for(sal_Int16 a=0; a < nAttrCount; a++)
+    {
+    const OUString& rAttrName = xAttrList->getNameByIndex(a);
+    OUString aLocalName;
+    sal_uInt16 _nPrefix = GetNamespaceMap().GetKeyByAttrName(rAttrName, &aLocalName);
+    const OUString aValue( xAttrList->getValueByIndex(a) );
+    if (_nPrefix==XML_NAMESPACE_OFFICE && IsXMLToken( aLocalName, XML_PROCESS_CONTENT ) ) {
+        bProcessContent=!aValue.equalsIgnoreAsciiCaseAscii("false");
+    }
+    }
+    SvXMLImportContext *ret=NULL;
+    if (bProcessContent) {
+    ret=getTopContext();
+    }
+    if (ret==NULL) {
+    ret=new SvXMLImportContext( *this, nPrefix, rLocalName );
+    }
+    return ret;
+}
+
 void SAL_CALL SvXMLImport::endElement( const OUString&
 #ifdef DBG_UTIL
 rName
diff --git xmloff/source/core/xmltoken.cxx xmloff/source/core/xmltoken.cxx
index 20571fd..a677f9b 100644
--- xmloff/source/core/xmltoken.cxx
+++ xmloff/source/core/xmltoken.cxx
@@ -1407,6 +1407,7 @@ namespace xmloff { namespace token {
         TOKEN( "printable",                       XML_PRINTABLE ),
         TOKEN( "printed-by",                      XML_PRINTED_BY ),
         TOKEN( "proceedings",                     XML_PROCEEDINGS ),
+        TOKEN( "process-content",                 XML_PROCESS_CONTENT ),
         TOKEN( "product",                         XML_PRODUCT ),
         TOKEN( "projection",                      XML_PROJECTION ),
         TOKEN( "properties",                      XML_PROPERTIES ),
@@ -1700,6 +1701,7 @@ namespace xmloff { namespace token {
         TOKEN( "structure-protected",             XML_STRUCTURE_PROTECTED ),
         TOKEN( "style",                           XML_STYLE ),
         TOKEN( "style-name",                      XML_STYLE_NAME ),
+        TOKEN( "class-names",                     XML_CLASS_NAMES ),
         TOKEN( "styles",                          XML_STYLES ),
         TOKEN( "stylesheet",                      XML_STYLESHEET ),
         TOKEN( "sub-table",                       XML_SUB_TABLE ),
diff --git xmloff/source/draw/shapeimport.cxx xmloff/source/draw/shapeimport.cxx
index 282ff3c..a7ebbe2 100644
--- xmloff/source/draw/shapeimport.cxx
+++ xmloff/source/draw/shapeimport.cxx
@@ -908,7 +908,7 @@ SvXMLShapeContext* XMLShapeImportHelper::CreateGroupChildContext(
          }
         // add other shapes here...
         default:
-            return new SvXMLShapeContext( rImport, p_nPrefix, rLocalName, bTemporaryShape );
+        return NULL; // no shape context...
     }
 
     // now parse the attribute list and call the child context for each unknown attribute
diff --git xmloff/source/text/txtimp.cxx xmloff/source/text/txtimp.cxx
index 153d51e..abeaa46 100644
--- xmloff/source/text/txtimp.cxx
+++ xmloff/source/text/txtimp.cxx
@@ -341,6 +341,8 @@ static __FAR_DATA SvXMLTokenMapEntry aTextPAttrTokenMap[] =
     { XML_NAMESPACE_TEXT, XML_IS_LIST_HEADER,XML_TOK_TEXT_P_IS_LIST_HEADER },
     { XML_NAMESPACE_TEXT, XML_RESTART_NUMBERING,XML_TOK_TEXT_P_RESTART_NUMBERING },
     { XML_NAMESPACE_TEXT, XML_START_VALUE,XML_TOK_TEXT_P_START_VALUE },
+
+    { XML_NAMESPACE_TEXT, XML_CLASS_NAMES,	XML_TOK_TEXT_P_CLASS_NAMES },
     XML_TOKEN_MAP_END
 };
 
@@ -1128,6 +1130,7 @@ OUString XMLTextImportHelper::SetStyleAndAttrs(
         SvXMLImport& rImport,
         const Reference < XTextCursor >& rCursor,
         const OUString& rStyleName,
+        const OUString& rClassNames,
         sal_Bool bPara,
         sal_Bool bOutlineLevelAttrFound,
         sal_Int8 nOutlineLevel,
@@ -1363,8 +1366,11 @@ OUString XMLTextImportHelper::SetStyleAndAttrs(
     }
 
     // hard paragraph properties
-    if( pStyle )
-    {
+        sal_Int32 nTokenIndex = 0;
+    rtl::OUString aToken;
+    do {
+#if 1
+        if (pStyle) {
         pStyle->FillPropertySet( xPropSet );
         if( bPara && pStyle->HasMasterPageName() &&
             xPropSetInfo->hasPropertyByName( sPageDescName ) )
@@ -1426,7 +1432,19 @@ OUString XMLTextImportHelper::SetStyleAndAttrs(
                 }
             }
         }
-    }
+        }
+        aToken = rClassNames.getToken( 0, ' ', nTokenIndex );
+        if (aToken.getLength() && xAutoStyles.Is() )
+        {
+        pStyle = PTR_CAST( XMLTextStyleContext,
+                   ((SvXMLStylesContext *)&xAutoStyles)->
+                   FindStyleChildContext( nFamily, aToken, sal_True ) );
+        } else {
+        pStyle=NULL;
+        aToken=rtl::OUString();
+        }
+#endif
+    } while (pStyle!=NULL || aToken.getLength()>0);
 
     // outline level; set after list style has been set
     // --> OD 2005-08-25 #i53198#
@@ -2091,8 +2109,9 @@ SvXMLImportContext *XMLTextImportHelper::CreateTextChildContext(
         }
     }
 
-//	if( !pContext )
-//		pContext = new SvXMLImportContext( GetImport(), nPrefix, rLocalName );
+    if (pContext==NULL) {
+        pContext=rImport.createUnknownContext(nPrefix, rLocalName, xAttrList);
+    }
 
     // handle open redlines
     if ( (XML_TOK_TEXT_CHANGE != nToken) &&
diff --git xmloff/source/text/txtparai.cxx xmloff/source/text/txtparai.cxx
index 7fd7702..445469a 100644
--- xmloff/source/text/txtparai.cxx
+++ xmloff/source/text/txtparai.cxx
@@ -1843,23 +1843,22 @@ SvXMLImportContext *XMLImpSpanContext_Impl::CreateChildContext(
             SvXMLShapeContext* pShapeContext = rImport.GetShapeImport()->CreateGroupChildContext(
                 rImport, nPrefix, rLocalName, xAttrList, xShapes );
             pContext = pShapeContext;
-            // OD 2004-04-20 #i26791# - keep shape in a text frame hint to
-            // adjust its anchor position, if its at-character anchored
-            Reference < XTextRange > xAnchorPos =
-                rImport.GetTextImport()->GetCursor()->getStart();
-            rHints.Insert( new XMLDrawHint_Impl( pShapeContext, xAnchorPos ),
-                           rHints.Count() );
+        if (pContext) {
+        // OD 2004-04-20 #i26791# - keep shape in a text frame hint to
+        // adjust its anchor position, if its at-character anchored
+        Reference < XTextRange > xAnchorPos =
+            rImport.GetTextImport()->GetCursor()->getStart();
+        rHints.Insert( new XMLDrawHint_Impl( pShapeContext, xAnchorPos ),
+                   rHints.Count() );
+        }
         }
         if( !pContext )
         {
-            // ignore unknown content
-            pContext =
-                new SvXMLImportContext( rImport, nPrefix, rLocalName );
+            pContext=rImport.createUnknownContext(nPrefix, rLocalName, xAttrList);
         }
         // Behind fields, shapes and any unknown content blanks aren't ignored
         rIgnoreLeadingSpace = sal_False;
     }
-
     return pContext;
 }
 
@@ -1917,7 +1916,7 @@ XMLParaContext::XMLParaContext(
     const SvXMLTokenMap& rTokenMap =
         GetImport().GetTextImport()->GetTextPAttrTokenMap();
 
-    OUString aCondStyleName, sClassNames;
+    OUString sStyleName, aCondStyleName, sClassNames;
 
     sal_Int16 nAttrCount = xAttrList.is() ? xAttrList->getLength() : 0;
     for( sal_Int16 i=0; i < nAttrCount; i++ )
@@ -1999,18 +1998,24 @@ XMLParaContext::XMLParaContext(
             break;
         }
     }
-
+    m_sClassNames = sClassNames;
     if( aCondStyleName.getLength() )
-        sStyleName = aCondStyleName;
-    else if( sClassNames.getLength() )
-    {
+        m_sStyleName = aCondStyleName;
+    else {
+        m_sStyleName = sStyleName;
+    }
+    if (m_sStyleName.getLength()==0 && sClassNames.getLength()>0) {
+        // so when we only have class names make sure the first styles
+        // of the class names is the style name
         sal_Int32 nDummy = 0;
-        sStyleName = sClassNames.getToken( 0, ' ', nDummy );
+        m_sStyleName = m_sClassNames.getToken( 0, ' ', nDummy );
+        m_sClassNames = m_sClassNames.copy(m_sStyleName.getLength()+1);
     }
 }
 
 XMLParaContext::~XMLParaContext()
 {
+    rtl::OUString sStyleName = m_sStyleName;
     UniReference < XMLTextImportHelper > xTxtImport(
         GetImport().GetTextImport());
     Reference < XTextRange > xCrsrRange( xTxtImport->GetCursorAsRange() );
@@ -2075,6 +2080,7 @@ XMLParaContext::~XMLParaContext()
         // because of side effects of method <SetStyleAndAttrs(..)>
         xTxtImport->SetStyleAndAttrs( GetImport(), xAttrCursor,
                                       sCellParaStyleName,
+                      OUString(),
                                       sal_True,
                                       sal_False, -1, // suppress outline handling
                                       sal_False );   // suppress list attributes handling
@@ -2089,6 +2095,7 @@ XMLParaContext::~XMLParaContext()
     // --> OD 2007-07-25 #i73509# - add paramter <mbOutlineLevelAttrFound>
     sStyleName = xTxtImport->SetStyleAndAttrs( GetImport(), xAttrCursor,
                                                sStyleName,
+                           m_sClassNames,
                                                sal_True,
                                                mbOutlineLevelAttrFound,
                                                bHeading ? nOutlineLevel : -1 );
@@ -2151,7 +2158,7 @@ XMLParaContext::~XMLParaContext()
                             ((XMLStyleHint_Impl *)pHint)->GetStyleName();
                     if( rStyleName.getLength() )
                         xTxtImport->SetStyleAndAttrs( GetImport(),
-                                                      xAttrCursor, rStyleName,
+                                          xAttrCursor, rStyleName, OUString(),
                                                       sal_False );
                 }
                 break;
@@ -2311,7 +2318,7 @@ SvXMLImportContext *XMLParaContext::CreateChildContext(
 void XMLParaContext::Characters( const OUString& rChars )
 {
     OUString sChars =
-        GetImport().GetTextImport()->ConvertStarFonts( rChars, sStyleName,
+        GetImport().GetTextImport()->ConvertStarFonts( rChars, m_sStyleName,
                                                        nStarFontsConvFlags,
                                                        sal_True, GetImport() );
     GetImport().GetTextImport()->InsertString( sChars, bIgnoreLeadingSpace );
diff --git xmloff/source/text/txtparai.hxx xmloff/source/text/txtparai.hxx
index 1b2ba58..1a0e697 100644
--- xmloff/source/text/txtparai.hxx
+++ xmloff/source/text/txtparai.hxx
@@ -45,7 +45,8 @@ class XMLParaContext : public SvXMLImportContext
 {
     ::com::sun::star::uno::Reference <
         ::com::sun::star::text::XTextRange > xStart;	// xub_StrLen nStart;
-    ::rtl::OUString				sStyleName;
+    ::rtl::OUString				m_sStyleName;
+    ::rtl::OUString				m_sClassNames;
     ::rtl::OUString				sId;
     ::rtl::OUString             m_sXmlId;
     ::rtl::OUString             m_sAbout;
-- 
1.7.0.1

