Index: tools/inc/tools/urlobj.hxx
===================================================================
RCS file: /cvs/util/tools/inc/tools/urlobj.hxx,v
retrieving revision 1.3
retrieving revision 1.2.118.3
diff -u -p -u -p -b -w -B -r1.3 -r1.2.118.3
--- tools/inc/tools/urlobj.hxx	11 Apr 2008 13:35:46 -0000	1.3
+++ tools/inc/tools/urlobj.hxx	2 Jun 2008 13:32:32 -0000	1.2.118.3
@@ -141,9 +141,14 @@ enum INetProtocol
     INET_PROT_TELNET = 28,
     INET_PROT_VND_SUN_STAR_EXPAND = 29,
     INET_PROT_VND_SUN_STAR_TDOC = 30,
-    INET_PROT_GENERIC = 31,
-    INET_PROT_SMB = 32,
-	INET_PROT_END = 33
+    INET_PROT_SMB = 31,
+    INET_PROT_DAV = 32,
+    INET_PROT_DAVS = 33,
+    INET_PROT_WEBDAV = 34,
+    INET_PROT_WEBDAVS = 35,
+    INET_PROT_GENERIC = 36,
+    INET_PROT_GENERIC_HIERARCHICAL = 37,
+    INET_PROT_END = 38
 };
 
 //============================================================================
Index: tools/source/fsys/urlobj.cxx
===================================================================
RCS file: /cvs/util/tools/source/fsys/urlobj.cxx,v
retrieving revision 1.63
retrieving revision 1.61.26.4
diff -u -p -u -p -b -w -B -r1.63 -r1.61.26.4
--- tools/source/fsys/urlobj.cxx	15 Apr 2008 11:52:18 -0000	1.63
+++ tools/source/fsys/urlobj.cxx	2 Jun 2008 13:32:37 -0000	1.61.26.4
@@ -374,21 +374,21 @@ static INetURLObject::SchemeInfo const a
 		  false },
 		{ "ftp", "ftp://", 21, true, true, false, true, true, true, true,
 		  false },
-		{ "http", "http://", 80, true, false, false, false, true, true,
+		{ "http", "http://", 80, true, true, false, true, true, true,
 		  true, true },
 		{ "file", "file://", 0, true, false, false, false, true, false,
 		  true, false },
 		{ "mailto", "mailto:", 0, false, false, false, false, false,
 		  false, false, true },
-		{ "vnd.sun.star.webdav", "vnd.sun.star.webdav://", 80, true, false,
-		  false, false, true, true, true, true },
+		{ "vnd.sun.star.webdav", "vnd.sun.star.webdav://", 80, true, true,
+		  false, true, true, true, true, true },
 		{ "news", "news:", 0, false, false, false, false, false, false, false,
           false },
 		{ "private", "private:", 0, false, false, false, false, false,
 		  false, false, true },
 		{ "vnd.sun.star.help", "vnd.sun.star.help://", 0, true, false, false,
 		  false, false, false, true, true },
-		{ "https", "https://", 443, true, false, false, false, true, true,
+		{ "https", "https://", 443, true, true, false, true, true, true,
 		  true, true },
 		{ "slot", "slot:", 0, false, false, false, false, false, false,
 		  false, true },
@@ -432,9 +432,19 @@ static INetURLObject::SchemeInfo const a
 		  false, false, false, false, false },
         { "vnd.sun.star.tdoc", "vnd.sun.star.tdoc:", 0, false, false, false,
           false, false, false, true, false },
-        { "", "", 0, false, false, false, false, false, false, false, false },
         { "smb", "smb://", 139, true, true, false, true, true, true, true,
-          true } };
+          true },
+        { "dav", "dav://", 80, true, true, false, true, true, true, true,
+          true },
+        { "davs", "davs://", 443, true, true, false, true, true, true,
+          true, true },
+        { "webdav", "webdav://", 80, true, true, false, true, true, true, true,
+          true },
+        { "webdavs", "webdavs://", 443, true, true, false, true, true, true,
+          true, true },
+        { "", "", 0, false, false, false, false, false, false, false, false },
+        { "", "", 0, false, false, false, false, false, false, true, false }
+      };
 
 // static
 inline INetURLObject::SchemeInfo const &
@@ -847,6 +857,9 @@ bool INetURLObject::setAbsURIRef(rtl::OU
             aSynScheme = parseScheme(&p1, pEnd, nFragmentDelimiter);
             if (aSynScheme.getLength() > 0)
             {
+                if (p1 != pEnd && *p1 == '/')
+                    m_eScheme = INET_PROT_GENERIC_HIERARCHICAL;
+                else
                 m_eScheme = INET_PROT_GENERIC;
                 pPos = p1;
             }
@@ -864,7 +877,7 @@ bool INetURLObject::setAbsURIRef(rtl::OU
 			return false;
 		}
 
-        if (m_eScheme != INET_PROT_GENERIC) {
+        if (m_eScheme != INET_PROT_GENERIC && m_eScheme != INET_PROT_GENERIC_HIERARCHICAL) {
             aSynScheme = rtl::OUString::createFromAscii(getSchemeInfo().m_pScheme);
         }
         m_aScheme.set(aSynAbsURIRef, aSynScheme, aSynAbsURIRef.getLength());
@@ -2052,6 +2065,8 @@ INetURLObject::getPrefix(sal_Unicode con
 			  PrefixInfo::INTERNAL },
 			{ "cid:", 0, INET_PROT_CID, PrefixInfo::OFFICIAL },
 			{ "data:", 0, INET_PROT_DATA, PrefixInfo::OFFICIAL },
+			{ "dav:", 0, INET_PROT_DAV, PrefixInfo::OFFICIAL },
+			{ "davs:", 0, INET_PROT_DAVS, PrefixInfo::OFFICIAL },
 			{ "db:", "staroffice.db:", INET_PROT_DB, PrefixInfo::INTERNAL },
 			{ "file:", 0, INET_PROT_FILE, PrefixInfo::OFFICIAL },
 			{ "ftp:", 0, INET_PROT_FTP, PrefixInfo::OFFICIAL },
@@ -2133,6 +2148,8 @@ INetURLObject::getPrefix(sal_Unicode con
 			  PrefixInfo::OFFICIAL },
 			{ "vnd.sun.star.wfs:", 0, INET_PROT_VND_SUN_STAR_WFS,
 			  PrefixInfo::OFFICIAL },
+			{ "webdav:", 0, INET_PROT_WEBDAV, PrefixInfo::OFFICIAL },
+			{ "webdavs:", 0, INET_PROT_WEBDAVS, PrefixInfo::OFFICIAL },
 			{ "wfs:", "vnd.sun.star.wfs:", INET_PROT_VND_SUN_STAR_WFS,
 			  PrefixInfo::ALIAS } };
 	PrefixInfo const * pFirst = aMap + 1;
@@ -2929,6 +2946,10 @@ bool INetURLObject::parsePath(INetProtoc
 		case INET_PROT_VND_SUN_STAR_WEBDAV:
 		case INET_PROT_HTTPS:
         case INET_PROT_SMB:
+        case INET_PROT_DAV:
+        case INET_PROT_DAVS:
+        case INET_PROT_WEBDAV:
+        case INET_PROT_WEBDAVS:
 			if (pPos < pEnd && *pPos != '/')
 				return false;
 			while (pPos < pEnd && *pPos != nQueryDelimiter
@@ -3343,6 +3364,7 @@ bool INetURLObject::parsePath(INetProtoc
 			break;
 
         case INET_PROT_GENERIC:
+        case INET_PROT_GENERIC_HIERARCHICAL:
 			while (pPos < pEnd && *pPos != nFragmentDelimiter)
 			{
 				EscapeType eEscapeType;
@@ -4044,8 +4066,10 @@ bool INetURLObject::ConcatData(INetProto
 {
 	setInvalid();
 	m_eScheme = eTheScheme;
-	if (HasError() || m_eScheme == INET_PROT_GENERIC)
+
+	if (HasError() || m_eScheme == INET_PROT_GENERIC || m_eScheme == INET_PROT_GENERIC_HIERARCHICAL)
 		return false;
+
 	m_aAbsURIRef.setLength(0);
 	m_aAbsURIRef.appendAscii(getSchemeInfo().m_pScheme);
 	m_aAbsURIRef.append(sal_Unicode(':'));
Index: tools/workben/urltest.cxx
===================================================================
RCS file: /cvs/util/tools/workben/urltest.cxx,v
retrieving revision 1.39
retrieving revision 1.37.82.2
diff -u -p -u -p -b -w -B -r1.39 -r1.37.82.2
--- tools/workben/urltest.cxx	15 Apr 2008 11:53:38 -0000	1.39
+++ tools/workben/urltest.cxx	2 Jun 2008 13:32:44 -0000	1.37.82.2
@@ -1476,7 +1476,7 @@ main()
 
         url = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("A-b.3:/%2f?x#y"));
         urlobj = INetURLObject(url);
-        bSuccess &= assertEqual(url, INET_PROT_GENERIC, urlobj.GetProtocol());
+        bSuccess &= assertEqual(url, INET_PROT_GENERIC_HIERARCHICAL, urlobj.GetProtocol());
         bSuccess &= assertEqual(
             url, rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("a-b.3:/%2F?x#y")),
             rtl::OUString(urlobj.GetMainURL(INetURLObject::NO_DECODE)));
@@ -1504,7 +1504,7 @@ main()
 
         url = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("foo:/"));
         urlobj = INetURLObject(url);
-        bSuccess &= assertEqual(url, INET_PROT_GENERIC, urlobj.GetProtocol());
+        bSuccess &= assertEqual(url, INET_PROT_GENERIC_HIERARCHICAL, urlobj.GetProtocol());
         bSuccess &= assertEqual(
             url, url,
             rtl::OUString(urlobj.GetMainURL(INetURLObject::NO_DECODE)));
@@ -1542,7 +1542,7 @@ main()
 
         url = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("A-b.3:/%2f?x#y"));
         urlobj = INetURLObject(url, INET_PROT_CID);
-        bSuccess &= assertEqual(url, INET_PROT_GENERIC, urlobj.GetProtocol());
+        bSuccess &= assertEqual(url, INET_PROT_GENERIC_HIERARCHICAL, urlobj.GetProtocol());
         bSuccess &= assertEqual(
             url, rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("a-b.3:/%2F?x#y")),
             rtl::OUString(urlobj.GetMainURL(INetURLObject::NO_DECODE)));
@@ -1563,7 +1563,7 @@ main()
 
         url = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("foo:/"));
         urlobj = INetURLObject(url, INET_PROT_CID);
-        bSuccess &= assertEqual(url, INET_PROT_GENERIC, urlobj.GetProtocol());
+        bSuccess &= assertEqual(url, INET_PROT_GENERIC_HIERARCHICAL, urlobj.GetProtocol());
         bSuccess &= assertEqual(
             url, url,
             rtl::OUString(urlobj.GetMainURL(INetURLObject::NO_DECODE)));
