diff --git sc/inc/attarray.hxx sc/inc/attarray.hxx
index 2a8c515..82ea003 100644
--- sc/inc/attarray.hxx
+++ sc/inc/attarray.hxx
@@ -39,6 +39,7 @@ class ScEditDataArray;
 class ScMarkArray;
 class ScPatternAttr;
 class ScStyleSheet;
+class ScFlatBoolRowSegments;
 
 class Rectangle;
 class SfxItemPoolCache;
@@ -162,7 +163,7 @@ public:
 								BOOL bRefresh, BOOL bAttrs );
 	BOOL	RemoveAreaMerge( SCROW nStartRow, SCROW nEndRow );
 
-	void	FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, BOOL* pUsed, BOOL bReset );
+	void	FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, ScFlatBoolRowSegments& rUsedRows, bool bReset );
 	BOOL	IsStyleSheetUsed( const ScStyleSheet& rStyle, BOOL bGatherAllStyles ) const;
 
 	void	DeleteAreaSafe(SCROW nStartRow, SCROW nEndRow);
diff --git sc/inc/column.hxx sc/inc/column.hxx
index babda9e..0f9586e 100644
--- sc/inc/column.hxx
+++ sc/inc/column.hxx
@@ -71,8 +71,8 @@ class ScPostIt;
 struct ScFunctionData;
 struct ScLineFlags;
 struct ScMergePatternState;
 struct ScSetStringParam;
-
+class ScFlatBoolRowSegments;
 
 #define COLUMN_DELTA	4
 
@@ -341,7 +341,7 @@ public:
 	const ScStyleSheet*	GetSelectionStyle( const ScMarkData& rMark, BOOL& rFound ) const;
 	const ScStyleSheet*	GetAreaStyle( BOOL& rFound, SCROW nRow1, SCROW nRow2 ) const;
 
-	void		FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, BOOL* pUsed, BOOL bReset );
+	void		FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, ScFlatBoolRowSegments& rUsedRows, bool bReset );
 	BOOL		IsStyleSheetUsed( const ScStyleSheet& rStyle, BOOL bGatherAllStyles ) const;
 
                 /// May return -1 if not found
diff --git sc/source/core/data/attarray.cxx sc/source/core/data/attarray.cxx
index c02d595..a5f3607 100644
--- sc/source/core/data/attarray.cxx
+++ sc/source/core/data/attarray.cxx
@@ -57,6 +57,7 @@
 #include "rechead.hxx"
 #include "globstr.hrc"
 #include "cell.hxx"
+#include "segmenttree.hxx"
 
 #undef DBG_INVALIDATE
 #define DBGOUTPUT(s) \
@@ -1749,8 +1750,7 @@ SCsROW ScAttrArray::GetNextUnprotected( SCsROW nRow, BOOL bUp ) const
 	return nRet;
 }
 
-
-void ScAttrArray::FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, BOOL* pUsed, BOOL bReset )
+void ScAttrArray::FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, ScFlatBoolRowSegments& rUsedRows, bool bReset )
 {
 	SCROW nStart = 0;
 	SCSIZE nPos = 0;
@@ -1762,7 +1762,7 @@ void ScAttrArray::FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, BOOL* pU
 //			for (SCROW nRow = nStart; nRow <= nEnd; nRow++)
 //				pUsed[nRow] = TRUE;
 
-			memset( &pUsed[nStart], TRUE, nEnd-nStart+1 );
+			rUsedRows.setTrue(nStart, nEnd);
 
 			if (bReset)
 			{
diff --git sc/source/core/data/column.cxx sc/source/core/data/column.cxx
index 39061a7..374606a 100644
--- sc/source/core/data/column.cxx
+++ sc/source/core/data/column.cxx
@@ -620,13 +620,11 @@ const ScStyleSheet*	ScColumn::GetAreaStyle( BOOL& rFound, SCROW nRow1, SCROW nRo
 	return bEqual ? pStyle : NULL;
 }
 
-
-void ScColumn::FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, BOOL* pUsed, BOOL bReset )
+void ScColumn::FindStyleSheet( const SfxStyleSheetBase* pStyleSheet, ScFlatBoolRowSegments& rUsedRows, bool bReset )
 {
-	pAttrArray->FindStyleSheet( pStyleSheet, pUsed, bReset );
+	pAttrArray->FindStyleSheet( pStyleSheet, rUsedRows, bReset );
 }
 
-
 BOOL ScColumn::IsStyleSheetUsed( const ScStyleSheet& rStyle, BOOL bGatherAllStyles ) const
 {
 	return pAttrArray->IsStyleSheetUsed( rStyle, bGatherAllStyles );
diff --git sc/source/core/data/table2.cxx sc/source/core/data/table2.cxx
index 8cb6f7a..5a78469 100644
--- sc/source/core/data/table2.cxx
+++ sc/source/core/data/table2.cxx
@@ -60,6 +60,7 @@
 #include "bcaslot.hxx"
 #include "postit.hxx"
 #include "globstr.hrc"
+#include "segmenttree.hxx"
 
 #include <math.h>
 
@@ -1830,36 +1831,24 @@ void ScTable::StyleSheetChanged( const SfxStyleSheetBase* pStyleSheet, BOOL bRem
 								double nPPTX, double nPPTY,
 								const Fraction& rZoomX, const Fraction& rZoomY )
 {
-	BOOL* pUsed = new BOOL[MAXROWCOUNT];
-    memset( pUsed, 0, sizeof(BOOL) * (MAXROWCOUNT) );
+    ScFlatBoolRowSegments aUsedRows;
+    for (SCCOL i = 0; i <= MAXCOL; ++i)
+        aCol[i].FindStyleSheet(pStyleSheet, aUsedRows, bRemoved);
 
-	SCCOL nCol;
-	for (nCol=0; nCol<=MAXCOL; nCol++)
-		aCol[nCol].FindStyleSheet( pStyleSheet, pUsed, bRemoved );
+    SCROW nRow = 0;
+    while (nRow <= MAXROW)
+    {
+        ScFlatBoolRowSegments::RangeData aData;
+        if (!aUsedRows.getRangeData(nRow, aData))
+            // search failed!
+            return;
 
-	BOOL bFound = FALSE;
-	SCROW nStart = 0, nEnd = 0;
-	for (SCROW i=0; i<=MAXROW; i++)
-	{
-		if (pUsed[i])
-		{
-			if (!bFound)
-			{
-				nStart = i;
-				bFound = TRUE;
-			}
-			nEnd = i;
-		}
-		else if (bFound)
-		{
-			SetOptimalHeight( nStart, nEnd, 0, pDev, nPPTX, nPPTY, rZoomX, rZoomY, FALSE );
-			bFound = FALSE;
-		}
-	}
-	if (bFound)
-		SetOptimalHeight( nStart, nEnd, 0, pDev, nPPTX, nPPTY, rZoomX, rZoomY, FALSE );
+        SCROW nEndRow = aData.mnRow2;
+        if (aData.mbValue)
+			SetOptimalHeight(nRow, nEndRow, 0, pDev, nPPTX, nPPTY, rZoomX, rZoomY, FALSE);
 
-	delete[] pUsed;
+        nRow = nEndRow + 1;
+    }
 }
 
 
