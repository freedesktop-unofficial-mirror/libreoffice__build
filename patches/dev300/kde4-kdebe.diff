--- shell/source/backends/kdebe/kdecommonlayer.cxx.old	2008-03-26 02:12:01.000000000 +0100
+++ shell/source/backends/kdebe/kdecommonlayer.cxx	2008-03-26 02:12:37.000000000 +0100
@@ -104,7 +104,7 @@
         aClientProgram = "kmail";
     else
         aClientProgram = aClientProgram.section(SPACE, 0, 0);
-    sClientProgram = (const sal_Unicode *) aClientProgram.ucs2();
+    sClientProgram = (const sal_Unicode *) aClientProgram.utf16();
 
     aPropInfoList[nProperties].Name = rtl::OUString(
         RTL_CONSTASCII_USTRINGPARAM( "org.openoffice.Office.Common/ExternalMailer/Program") );
@@ -121,7 +121,7 @@
 
     aFixedFont = KGlobalSettings::fixedFont();
     aFontName = aFixedFont.family();
-    sFontName = (const sal_Unicode *) aFontName.ucs2();
+    sFontName = (const sal_Unicode *) aFontName.utf16();
     nFontHeight = aFixedFont.pointSize();
 
     aPropInfoList[nProperties].Name = rtl::OUString(
@@ -162,9 +162,9 @@
     ::rtl::OUString sTimeStamp,
                     sep( RTL_CONSTASCII_USTRINGPARAM( "$" ) );
 
-    sTimeStamp = (const sal_Unicode *) aClientProgram.ucs2();
+    sTimeStamp = (const sal_Unicode *) aClientProgram.utf16();
     sTimeStamp += sep;
-    sTimeStamp += (const sal_Unicode *) aFixedFont.ucs2();
+    sTimeStamp += (const sal_Unicode *) aFixedFont.utf16();
 
     return sTimeStamp;
 }
--- shell/source/backends/kdebe/kdeinetlayer.cxx.old	2008-03-26 02:13:08.000000000 +0100
+++ shell/source/backends/kdebe/kdeinetlayer.cxx	2008-03-26 02:19:27.000000000 +0100
@@ -108,9 +108,9 @@
 // The best we can do here is to ask the current value for a given address.
             setProxy(aPropInfoList, nProperties, 1,
                      KProtocolManager::noProxyFor(),
-                     KProtocolManager::proxyForURL( "http://www.openoffice.org" ),
-                     KProtocolManager::proxyForURL( "ftp://ftp.openoffice.org" ),
-					 KProtocolManager::proxyForURL( "https://www.openoffice.org" ));
+                     KProtocolManager::proxyForUrl( KUrl("http://www.openoffice.org") ),
+                     KProtocolManager::proxyForUrl( KUrl("ftp://ftp.openoffice.org") ),
+					 KProtocolManager::proxyForUrl( KUrl("https://www.openoffice.org") ));
             break;
         default:                            // No proxy is used
             setProxy(aPropInfoList, nProperties, 0);
@@ -147,9 +147,9 @@
         case KProtocolManager::EnvVarProxy:
             aProxyType = '1';
             aNoProxyFor = KProtocolManager::noProxyFor();
-            aHTTPProxy = KProtocolManager::proxyForURL( "http://www.openoffice.org" );
-			aHTTPSProxy = KProtocolManager::proxyForURL( "https://www.openoffice.org" );
-            aFTPProxy = KProtocolManager::proxyForURL( "ftp://ftp.openoffice.org" );
+            aHTTPProxy = KProtocolManager::proxyForUrl( KUrl("http://www.openoffice.org") );
+			aHTTPSProxy = KProtocolManager::proxyForUrl( KUrl("https://www.openoffice.org") );
+            aFTPProxy = KProtocolManager::proxyForUrl( KUrl("ftp://ftp.openoffice.org") );
             break;
         default:
             aProxyType = '0';
@@ -158,15 +158,15 @@
     ::rtl::OUString sTimeStamp,
                     sep( RTL_CONSTASCII_USTRINGPARAM( "$" ) );
 
-    sTimeStamp = (const sal_Unicode *) aProxyType.ucs2();
+    sTimeStamp = (const sal_Unicode *) aProxyType.utf16();
     sTimeStamp += sep;
-    sTimeStamp += (const sal_Unicode *) aNoProxyFor.ucs2();
+    sTimeStamp += (const sal_Unicode *) aNoProxyFor.utf16();
     sTimeStamp += sep;
-    sTimeStamp += (const sal_Unicode *) aHTTPProxy.ucs2();
+    sTimeStamp += (const sal_Unicode *) aHTTPProxy.utf16();
     sTimeStamp += sep;
-	sTimeStamp += (const sal_Unicode *) aHTTPSProxy.ucs2();
+	sTimeStamp += (const sal_Unicode *) aHTTPSProxy.utf16();
     sTimeStamp += sep;
-    sTimeStamp += (const sal_Unicode *) aFTPProxy.ucs2();
+    sTimeStamp += (const sal_Unicode *) aFTPProxy.utf16();
 
     return sTimeStamp;
 }
@@ -192,7 +192,7 @@
         ::rtl::OUString sNoProxyFor;
 
         aNoProxyFor = aNoProxyFor.replace( COMMA, SEMI_COLON );
-        sNoProxyFor = (const sal_Unicode *) aNoProxyFor.ucs2();
+        sNoProxyFor = (const sal_Unicode *) aNoProxyFor.utf16();
 
         aPropInfoList[nProperties].Name = rtl::OUString( 
         RTL_CONSTASCII_USTRINGPARAM( "org.openoffice.Inet/Settings/ooInetNoProxy") );
@@ -204,8 +204,8 @@
 
     if ( !aHTTPProxy.isEmpty() )
     {
-        KURL aProxy(aHTTPProxy);
-        ::rtl::OUString sProxy = (const sal_Unicode *) aProxy.host().ucs2();
+        KUrl aProxy(aHTTPProxy);
+        ::rtl::OUString sProxy = (const sal_Unicode *) aProxy.host().utf16();
         sal_Int32 nPort = aProxy.port();
 
         aPropInfoList[nProperties].Name = rtl::OUString(
@@ -225,8 +225,8 @@
 
 	if ( !aHTTPSProxy.isEmpty() )
     {
-        KURL aProxy(aHTTPSProxy);
-        ::rtl::OUString sProxy = (const sal_Unicode *) aProxy.host().ucs2();
+        KUrl aProxy(aHTTPSProxy);
+        ::rtl::OUString sProxy = (const sal_Unicode *) aProxy.host().utf16();
         sal_Int32 nPort = aProxy.port();
 
         aPropInfoList[nProperties].Name = rtl::OUString(
@@ -246,8 +246,8 @@
 
     if ( !aFTPProxy.isEmpty() )
     {
-        KURL aProxy(aFTPProxy);
-        ::rtl::OUString sProxy = (const sal_Unicode *) aProxy.host().ucs2();
+        KUrl aProxy(aFTPProxy);
+        ::rtl::OUString sProxy = (const sal_Unicode *) aProxy.host().utf16();
         sal_Int32 nPort = aProxy.port();
 
         aPropInfoList[nProperties].Name = rtl::OUString(
--- shell/source/backends/kdebe/kdepathslayer.cxx.old	2008-03-26 02:19:55.000000000 +0100
+++ shell/source/backends/kdebe/kdepathslayer.cxx	2008-03-26 02:27:24.000000000 +0100
@@ -108,6 +108,6 @@
     if ( aDocumentsDir.endsWith(QChar('/')) )
         aDocumentsDir.truncate ( aDocumentsDir.length() - 1 );
-    sDocumentsDir = (const sal_Unicode *) aDocumentsDir.ucs2();
+    sDocumentsDir = (const sal_Unicode *) aDocumentsDir.utf16();
     osl_getFileURLFromSystemPath( sDocumentsDir.pData, &sDocumentsURL.pData );
 
     aPropInfoList[nProperties].Name = rtl::OUString(
@@ -137,7 +137,7 @@
     QString aDocumentsDir;
     aDocumentsDir = KGlobalSettings::documentPath();
 
-    sTimeStamp += (const sal_Unicode *) aDocumentsDir.ucs2();
+    sTimeStamp += (const sal_Unicode *) aDocumentsDir.utf16();
 
     return sTimeStamp;
 }
