diff --git sc/inc/ViewSettingsSequenceDefines.hxx sc/inc/ViewSettingsSequenceDefines.hxx
index 4561e51..822f4d3 100644
--- sc/inc/ViewSettingsSequenceDefines.hxx
+++ sc/inc/ViewSettingsSequenceDefines.hxx
@@ -64,7 +64,7 @@
 // this are the defines for the position of the settings in the
 // TableViewSettingsSequence
 
-#define SC_TABLE_VIEWSETTINGS_COUNT         15
+#define SC_TABLE_VIEWSETTINGS_COUNT         16
 
 #define SC_CURSOR_X							0
 #define SC_CURSOR_Y							1
@@ -81,6 +81,7 @@
 #define SC_TABLE_ZOOM_VALUE                 12
 #define SC_TABLE_PAGE_VIEW_ZOOM_VALUE       13
 #define SC_TABLE_SHOWGRID                   14
+#define SC_TABLE_TAB_BG_COLOR               15
 
 #define SC_CURSORPOSITIONX					"CursorPositionX"
 #define SC_CURSORPOSITIONY					"CursorPositionY"
diff --git sc/inc/globstr.hrc sc/inc/globstr.hrc
index fbf7540..d0a0e4a 100644
--- sc/inc/globstr.hrc
+++ sc/inc/globstr.hrc
@@ -590,7 +590,9 @@
 #define STR_FORM_SPINNER            447
 #define STR_FORM_SCROLLBAR          448
                                        
-#define STR_COUNT                   449
+#define STR_UNDO_SET_TAB_BG_COLOR   449
+  
+#define STR_COUNT                   450
 
 #endif
 
diff --git sc/inc/sc.hrc sc/inc/sc.hrc
index 2eba0d8..f646b4a 100644
--- sc/inc/sc.hrc
+++ sc/inc/sc.hrc
@@ -1664,6 +1664,11 @@
 #define RID_SCPAGE_FORMULA          (SC_OOO_BUILD_START + 5)
 #define HID_SCPAGE_FORMULA          (SC_OOO_BUILD_START + 6)
 
+// Sheet tab color
+#define FID_TAB_MENU_SET_TAB_BG_COLOR   (SC_OOO_BUILD_START + 7)
+#define FID_TAB_SET_TAB_BG_COLOR        (SC_OOO_BUILD_START + 8)
+#define SCSTR_SET_TAB_BG_COLOR          (SC_OOO_BUILD_START + 9)
+
 #endif
 
 
diff --git sc/inc/scextopt.hxx sc/inc/scextopt.hxx
index 3464fbb..37c6cb0 100644
--- sc/inc/scextopt.hxx
+++ sc/inc/scextopt.hxx
@@ -81,6 +81,8 @@ struct ScExtTabSettings
     bool                mbFrozenPanes;      /// true = Frozen panes; false = Normal splits.
     bool                mbPageMode;         /// true = Pagebreak mode; false = Normal view mode.
     bool                mbShowGrid;         /// Whether or not to display gridlines.
+    bool                mbIsDefaultTabBgColor;  /// true = draw default tab color
+    Color               maTabBgColor;           /// Tab Bg Color
 
     explicit            ScExtTabSettings();
 };
diff --git sc/inc/unonames.hxx sc/inc/unonames.hxx
index 253c197..a348e69 100644
--- sc/inc/unonames.hxx
+++ sc/inc/unonames.hxx
@@ -529,6 +529,7 @@
 #define SC_UNO_ZOOMVALUE            "ZoomValue"
 #define SC_UNO_UPDTEMPL             "UpdateFromTemplate"
 #define SC_UNO_FILTERED_RANGE_SELECTION       "FilteredRangeSelection"
+#define SC_UNO_TABCOLOR             "TabColor"
 /*Stampit enable/disable print cancel */
 #define SC_UNO_ALLOWPRINTJOBCANCEL  "AllowPrintJobCancel"
 
diff --git sc/sdi/docsh.sdi sc/sdi/docsh.sdi
index 16dff9a..4ee3d4c 100644
--- sc/sdi/docsh.sdi
+++ sc/sdi/docsh.sdi
@@ -62,6 +62,7 @@ interface TableSelection
 	FID_TAB_MOVE		[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 	FID_DELETE_TABLE	[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 	FID_TAB_RENAME		[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
+    FID_TAB_SET_TAB_BG_COLOR    [ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 	FID_TAB_RTL			[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
     FID_TAB_TOGGLE_GRID [ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 
diff --git sc/sdi/scalc.sdi sc/sdi/scalc.sdi
index 254442f..2e1ec8c 100644
--- sc/sdi/scalc.sdi
+++ sc/sdi/scalc.sdi
@@ -7851,6 +7851,58 @@ SfxVoidItem ShareDocument SID_SHARE_DOC
 ]
 
 //--------------------------------------------------------------------------
+SvxColorItem TabBgColor FID_TAB_SET_TAB_BG_COLOR
+
+[
+    // flags: 
+    AutoUpdate = FALSE,
+    Cachable = Cachable,
+    FastCall = FALSE,
+    HasCoreId = FALSE,
+    HasDialog = TRUE,
+    ReadOnlyDoc = TRUE,
+    Toggle = FALSE,
+    Container = FALSE,
+    RecordAbsolute = FALSE,
+    RecordPerSet;
+    Synchron;
+
+    Readonly = FALSE,
+
+    // config: 
+    AccelConfig = TRUE,
+    MenuConfig = TRUE,
+    StatusBarConfig = FALSE,
+    ToolBoxConfig = FALSE,
+    GroupId = GID_FORMAT;
+]
+
+//--------------------------------------------------------------------------
+SfxVoidItem SetTabBgColor FID_TAB_MENU_SET_TAB_BG_COLOR
+(SvxColorItem TabBgColor FID_TAB_SET_TAB_BG_COLOR)
+[
+    /* flags: */
+    AutoUpdate = FALSE,
+    Cachable = Cachable,
+    FastCall = FALSE,
+    HasCoreId = FALSE,
+    HasDialog = TRUE,
+    ReadOnlyDoc = TRUE,
+    Toggle = FALSE,
+    Container = FALSE,
+    RecordAbsolute = FALSE,
+    RecordPerSet;
+    Synchron;
+
+    /* config: */
+    AccelConfig = TRUE,
+    MenuConfig = TRUE,
+    StatusBarConfig = FALSE,
+    ToolBoxConfig = FALSE,
+    GroupId = GID_FORMAT;
+]
+
+//--------------------------------------------------------------------------
 SfxBoolItem ToggleSheetGrid FID_TAB_TOGGLE_GRID
 
 [
diff --git sc/sdi/tabvwsh.sdi sc/sdi/tabvwsh.sdi
index bd51c83..8cc0ac4 100644
--- sc/sdi/tabvwsh.sdi
+++ sc/sdi/tabvwsh.sdi
@@ -60,6 +60,7 @@ interface Tables
 	FID_TABLE_HIDE	[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 	FID_TABLE_SHOW	[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
         SID_SELECT_TABLES       [ ExecMethod = Execute; StateMethod = GetState; ]
+    FID_TAB_MENU_SET_TAB_BG_COLOR   [ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 }
 
  // ===========================================================================
diff --git sc/source/filter/excel/read.cxx sc/source/filter/excel/read.cxx
index 5e747ca..aa2b377 100644
--- sc/source/filter/excel/read.cxx
+++ sc/source/filter/excel/read.cxx
@@ -1157,6 +1157,9 @@ FltError ImportExcel8::Read( void )
                     case EXC_ID_SXVDEX:         rPTableMgr.ReadSxvdex( maStrm );    break;
                     case EXC_ID_SXEX:           rPTableMgr.ReadSxex( maStrm );      break;
                     case EXC_ID_SXVIEWEX9:      rPTableMgr.ReadSxViewEx9( maStrm ); break;
+
+                    // 0x0862 (SHEETEXT)
+                    case EXC_ID_SHEETEXT:       rTabViewSett.ReadTabBgColor( maStrm, rPal );    break;
                 }
 			}
             break;
diff --git sc/source/filter/excel/xestyle.cxx sc/source/filter/excel/xestyle.cxx
index d93eec3..de32a64 100644
--- sc/source/filter/excel/xestyle.cxx
+++ sc/source/filter/excel/xestyle.cxx
@@ -77,6 +77,7 @@ sal_uInt32 lclGetWeighting( XclExpColorType eType )
         case EXC_COLOR_CELLTEXT:
         case EXC_COLOR_CHARTTEXT:
         case EXC_COLOR_CTRLTEXT:    return 10;
+        case EXC_COLOR_TABBG:
         case EXC_COLOR_CELLAREA:    return 20;
         case EXC_COLOR_GRID:        return 50;
         default:    DBG_ERRORFILE( "lclGetWeighting - unknown color type" );
diff --git sc/source/filter/excel/xeview.cxx sc/source/filter/excel/xeview.cxx
index 1ee104c..9f6daae 100644
--- sc/source/filter/excel/xeview.cxx
+++ sc/source/filter/excel/xeview.cxx
@@ -259,6 +259,36 @@ void XclExpSelection::WriteBody( XclExpStream& rStrm )
     maSelData.maXclSelection.Write( rStrm, false );
 }
 
+// ----------------------------------------------------------------------------
+
+XclExpTabBgColor::XclExpTabBgColor( const XclTabViewData& rTabViewData ) :
+//    XclExpRecord( 0x0862, 18 ), //TODO Use Real ID!
+    XclExpRecord( EXC_ID_SHEETEXT, 18 ), //TODO Use Real ID!
+    mrTabViewData( rTabViewData )
+{
+}
+//TODO Fix savexml...
+/*void XclExpTabBgColor::SaveXml( XclExpXmlStream& rStrm )
+{
+}*/
+
+void XclExpTabBgColor::WriteBody( XclExpStream& rStrm )
+{
+    if ( mrTabViewData.mbIsDefaultTabBgColor )
+        return;
+    sal_uInt16 rt = 0x0862; //rt
+    sal_uInt16 grbitFrt = 0x0000; //grbit must be set to 0
+    sal_uInt32 unused = 0x00000000; //Use twice...
+    sal_uInt32 cb = 0x00000014; // Record Size, may be larger in future...
+    sal_uInt16 reserved = 0x0000; //trailing bits are 0
+    sal_uInt16 TabBgColorIndex;
+    XclExpPalette& rPal = rStrm.GetRoot().GetPalette();
+    TabBgColorIndex = rPal.GetColorIndex(mrTabViewData.mnTabBgColorId);
+    if (TabBgColorIndex < 8 || TabBgColorIndex > 63 ) // only numbers 8 - 63 are valid numbers
+        TabBgColorIndex = 127; //Excel specs: 127 makes excel ignore tab color information.
+    rStrm << rt << grbitFrt << unused << unused << cb << TabBgColorIndex << reserved;
+}
+
 // Sheet view settings ========================================================
 
 namespace {
@@ -368,6 +398,15 @@ XclExpTabViewSettings::XclExpTabViewSettings( const XclExpRoot& rRoot, SCTAB nSc
         maData.mnNormalZoom     = lclGetXclZoom( rTabSett.mnNormalZoom, EXC_WIN2_NORMALZOOM_DEF );
         maData.mnPageZoom       = lclGetXclZoom( rTabSett.mnPageZoom, EXC_WIN2_PAGEZOOM_DEF );
         maData.mnCurrentZoom    = maData.mbPageMode ? maData.mnPageZoom : maData.mnNormalZoom;
+
+        // Tab Bg Color
+        if ( GetBiff() == EXC_BIFF8 && !rTabSett.mbIsDefaultTabBgColor )
+        {
+            XclExpPalette& rPal = GetPalette();
+            maData.mbIsDefaultTabBgColor = false;
+            maData.maTabBgColor = rTabSett.maTabBgColor;
+            maData.mnTabBgColorId = rPal.InsertColor(maData.maTabBgColor, EXC_COLOR_TABBG, EXC_COLOR_NOTABBG );
+        }
     }
 }
 
@@ -380,6 +419,7 @@ void XclExpTabViewSettings::Save( XclExpStream& rStrm )
     WriteSelection( rStrm, EXC_PANE_TOPRIGHT );
     WriteSelection( rStrm, EXC_PANE_BOTTOMLEFT );
     WriteSelection( rStrm, EXC_PANE_BOTTOMRIGHT );
+    WriteTabBgColor( rStrm );
 }
 
 static void lcl_WriteSelection( XclExpXmlStream& rStrm, const XclTabViewData& rData, sal_uInt8 nPane )
@@ -494,5 +534,10 @@ void XclExpTabViewSettings::WriteSelection( XclExpStream& rStrm, sal_uInt8 nPane
         XclExpSelection( maData, nPane ).Save( rStrm );
 }
 
+void XclExpTabViewSettings::WriteTabBgColor( XclExpStream& rStrm ) const
+{
+    if ( !maData.mbIsDefaultTabBgColor )
+        XclExpTabBgColor( maData ).Save( rStrm );
+}
 // ============================================================================
 
diff --git sc/source/filter/excel/xichart.cxx sc/source/filter/excel/xichart.cxx
index 99613dc..530aeca 100644
--- sc/source/filter/excel/xichart.cxx
+++ sc/source/filter/excel/xichart.cxx
@@ -3566,6 +3566,12 @@ void XclImpChart::ReadChartSubStream( XclImpStream& rStrm )
 
             case EXC_ID_WINDOW2:        rTabViewSett.ReadWindow2( rStrm, true );break;
             case EXC_ID_SCL:            rTabViewSett.ReadScl( rStrm );          break;
+            case EXC_ID_SHEETEXT: //0x0862
+            {
+                XclImpPalette& rPal = GetPalette();
+                rTabViewSett.ReadTabBgColor( rStrm,  rPal);
+            }
+            break;
         }
 
         switch( rStrm.GetRecId() )
diff --git sc/source/filter/excel/xiview.cxx sc/source/filter/excel/xiview.cxx
index 55525ad..3d62836 100644
--- sc/source/filter/excel/xiview.cxx
+++ sc/source/filter/excel/xiview.cxx
@@ -109,6 +109,25 @@ void XclImpTabViewSettings::Initialize()
     maData.SetDefaults();
 }
 
+void XclImpTabViewSettings::ReadTabBgColor( XclImpStream& rStrm, XclImpPalette& rPal )
+{
+    DBG_ASSERT_BIFF( GetBiff() >= EXC_BIFF8 );
+    if( GetBiff() < EXC_BIFF8 )
+        return;
+
+    sal_uInt8 ColorIndex;
+    Color TabBgColor;
+
+    rStrm.Ignore( 16 );
+    ColorIndex = rStrm.ReaduInt8() & EXC_SHEETEXT_TABCOLOR; //0x7F
+    if ( ColorIndex >= 8 && ColorIndex <= 63 ) //only accept valid index values
+    {
+        TabBgColor = rPal.GetColor( ColorIndex );
+        maData.maTabBgColor = TabBgColor;
+        maData.mbIsDefaultTabBgColor = false;
+    }
+}
+
 void XclImpTabViewSettings::ReadWindow2( XclImpStream& rStrm, bool bChart )
 {
     if( GetBiff() == EXC_BIFF2 )
@@ -281,6 +300,13 @@ void XclImpTabViewSettings::Finalize()
         aViewOpt.SetOption( VOPT_OUTLINER, maData.mbShowOutline );
         rDoc.SetViewOptions( aViewOpt );
     }
+
+    // *** set tab bg color
+    if (!maData.mbIsDefaultTabBgColor)
+    {
+        rTabSett.mbIsDefaultTabBgColor = maData.mbIsDefaultTabBgColor;
+        rTabSett.maTabBgColor = maData.maTabBgColor;
+    }
 }
 
 // ============================================================================
diff --git sc/source/filter/excel/xlview.cxx sc/source/filter/excel/xlview.cxx
index 080075b..2b8c50d 100644
--- sc/source/filter/excel/xlview.cxx
+++ sc/source/filter/excel/xlview.cxx
@@ -79,6 +79,8 @@ void XclTabViewData::SetDefaults()
     mbDefGridColor = true;
     mbShowFormulas = false;
     mbShowGrid = mbShowHeadings = mbShowZeros = mbShowOutline = true;
+    mbIsDefaultTabBgColor = true;
+    maTabBgColor.SetColor( COL_AUTO );
 }
 
 bool XclTabViewData::IsSplit() const
diff --git sc/source/filter/inc/xestyle.hxx sc/source/filter/inc/xestyle.hxx
index 8485bb1..9508c8b 100644
--- sc/source/filter/inc/xestyle.hxx
+++ sc/source/filter/inc/xestyle.hxx
@@ -61,7 +61,8 @@ enum XclExpColorType
     EXC_COLOR_CHARTLINE,        /// Line in a chart.
     EXC_COLOR_CHARTAREA,        /// Area in a chart.
     EXC_COLOR_CTRLTEXT,         /// Text color in a form control.
-    EXC_COLOR_GRID              /// Spreadsheet grid color.
+    EXC_COLOR_GRID,              /// Spreadsheet grid color.
+    EXC_COLOR_TABBG             /// Spreadsheet tab bg color.
 };
 
 // ----------------------------------------------------------------------------
diff --git sc/source/filter/inc/xeview.hxx sc/source/filter/inc/xeview.hxx
index 4d8b10d..5c54ecd 100644
--- sc/source/filter/inc/xeview.hxx
+++ sc/source/filter/inc/xeview.hxx
@@ -134,6 +134,20 @@ private:
     sal_uInt8           mnPane;             /// Pane identifier of this selection.
 };
 
+class XclExpTabBgColor : public XclExpRecord
+{
+public:
+    explicit            XclExpTabBgColor( const XclTabViewData& rTabViewData );
+
+    /* virtual void        SaveXml( XclExpXmlStream& rStrm ); TODO Fix XML Saving Stream */
+private:
+    /** Writes the contents of the SHEETEXT record. */
+    virtual void        WriteBody( XclExpStream& rStrm );
+
+private:
+    const XclTabViewData&  mrTabViewData;             /// view settings data of current sheet.
+};
+
 // View settings ==============================================================
 
 /** Contains all view settings records for a single sheet. */
@@ -156,6 +170,7 @@ private:
     void                WriteScl( XclExpStream& rStrm ) const;
     void                WritePane( XclExpStream& rStrm ) const;
     void                WriteSelection( XclExpStream& rStrm, sal_uInt8 nPane ) const;
+    void                WriteTabBgColor( XclExpStream& rStrm ) const;
 
 private:
     XclTabViewData      maData;             /// All view settings for a sheet.
diff --git sc/source/filter/inc/xiview.hxx sc/source/filter/inc/xiview.hxx
index f0b393e..a54c67b 100644
--- sc/source/filter/inc/xiview.hxx
+++ sc/source/filter/inc/xiview.hxx
@@ -83,7 +83,8 @@ public:
     void                ReadPane( XclImpStream& rStrm );
     /** Reads a SELECTION record. */
     void                ReadSelection( XclImpStream& rStrm );
-
+    /** Reads a SHEETEXT record (Tab Color). */
+    void                ReadTabBgColor( XclImpStream& rStrm, XclImpPalette& rPal );
     /** Sets the view settings at the current sheet or the extended sheet options object. */
     void                Finalize();
 
diff --git sc/source/filter/inc/xlview.hxx sc/source/filter/inc/xlview.hxx
index 4a3798e..c78979b 100644
--- sc/source/filter/inc/xlview.hxx
+++ sc/source/filter/inc/xlview.hxx
@@ -89,6 +89,11 @@ const sal_uInt8 EXC_PANE_TOPLEFT            = 3;        /// Single, top, left, o
 
 const sal_uInt16 EXC_ID_SCL                 = 0x00A0;
 
+// (0x0862) SHEETEXT ----------------------------------------------------------
+
+const sal_uInt16 EXC_ID_SHEETEXT            = 0x0862; 	/// header id for sheetext
+const sal_uInt8 EXC_SHEETEXT_TABCOLOR       = 0x7F; 	/// mask for tab color
+const sal_uInt16 EXC_COLOR_NOTABBG          = 0x7F;     /// Excel ignores Tab color when set to this value...
 // Structs ====================================================================
 
 /** Contains all view settings for the entire document. */
@@ -149,6 +154,9 @@ struct XclTabViewData
     bool                mbShowHeadings;     /// true = Show column/row headings.
     bool                mbShowZeros;        /// true = Show zero value zells.
     bool                mbShowOutline;      /// true = Show outlines.
+    bool                mbIsDefaultTabBgColor;	/// true = don't set tab color; false = set tab color;
+    Color               maTabBgColor;           /// Tab Color default = (COL_AUTO )
+    sal_uInt32          mnTabBgColorId;         /// pallette color id
 
     explicit            XclTabViewData();
                         ~XclTabViewData();
diff --git sc/source/ui/docshell/docfunc.cxx sc/source/ui/docshell/docfunc.cxx
index 5da446b..2e704fe 100644
--- sc/source/ui/docshell/docfunc.cxx
+++ sc/source/ui/docshell/docfunc.cxx
@@ -2612,6 +2612,45 @@ BOOL ScDocFunc::RenameTable( SCTAB nTab, const String& rName, BOOL bRecord, BOOL
 	return bSuccess;
 }
 
+BOOL ScDocFunc::SetTabBgColor( SCTAB nTab, const Color& rColor, BOOL bRecord, BOOL bApi )
+{
+
+    ScDocument* pDoc = rDocShell.GetDocument();
+    if (bRecord && !pDoc->IsUndoEnabled())
+        bRecord = FALSE;
+    if ( !pDoc->IsDocEditable() )
+    {
+        if (!bApi)
+            rDocShell.ErrorMessage(STR_PROTECTIONERR); //TODO Check to see what this string is...
+        return FALSE;
+    }
+
+    ScViewData* pViewData = rDocShell.GetViewData();
+
+    Color aOldTabBgColor;
+    aOldTabBgColor = pViewData->GetTabBgColor(nTab);
+
+    BOOL bSuccess = FALSE;
+    pViewData->SetTabBgColor(rColor, nTab);
+    if ( pViewData->GetTabBgColor( nTab ) == rColor)
+        bSuccess = TRUE;
+    if (bSuccess)
+    {
+        if (bRecord)
+        {
+            rDocShell.GetUndoManager()->AddUndoAction(
+                            new ScUndoSetTabBgColor( &rDocShell, nTab, aOldTabBgColor, rColor));
+        }
+        rDocShell.PostPaintExtras();
+        ScDocShellModificator aModificator( rDocShell );
+        aModificator.SetDocumentModified();
+        SFX_APP()->Broadcast( SfxSimpleHint( SC_HINT_TABLES_CHANGED ) );
+
+        bSuccess = TRUE;
+    }
+    return bSuccess;
+}
+
 //------------------------------------------------------------------------
 
 //!	SetWidthOrHeight - noch doppelt zu ViewFunc !!!!!!
diff --git sc/source/ui/inc/docfunc.hxx sc/source/ui/inc/docfunc.hxx
index d2bbeaf..21d770d 100644
--- sc/source/ui/inc/docfunc.hxx
+++ sc/source/ui/inc/docfunc.hxx
@@ -116,6 +116,8 @@ public:
 	BOOL			RenameTable( SCTAB nTab, const String& rName, BOOL bRecord, BOOL bApi );
 	BOOL			DeleteTable( SCTAB nTab, BOOL bRecord, BOOL bApi );
 
+    BOOL            SetTabBgColor( SCTAB nTab, const Color& rColor, BOOL bRecord, BOOL bApi );
+
 	BOOL			SetTableVisible( SCTAB nTab, BOOL bVisible, BOOL bApi );
 
 	BOOL			SetLayoutRTL( SCTAB nTab, BOOL bRTL, BOOL bApi );
diff --git sc/source/ui/inc/undotab.hxx sc/source/ui/inc/undotab.hxx
index c2d4eb9..af05ade 100644
--- sc/source/ui/inc/undotab.hxx
+++ sc/source/ui/inc/undotab.hxx
@@ -226,6 +226,31 @@ private:
 	void DoChange() const;
 };
 
+class ScUndoSetTabBgColor: public ScSimpleUndo
+{
+public:
+                    TYPEINFO();
+                    ScUndoSetTabBgColor(
+                            ScDocShell* pNewDocShell,
+                            SCTAB nT,
+                            const Color& aOTabBgColor,
+                            const Color& aNTabBgColor);
+    virtual         ~ScUndoSetTabBgColor();
+
+    virtual void    Undo();
+    virtual void    Redo();
+    virtual void    Repeat(SfxRepeatTarget& rTarget);
+    virtual BOOL    CanRepeat(SfxRepeatTarget& rTarget) const;
+
+virtual String	GetComment() const;
+
+private:
+    SCTAB   nTab;
+    Color   aOldTabBgColor;
+    Color   aNewTabBgColor;
+
+    void DoChange( SCTAB nTab, const Color& rTabBgColor ) const;
+};
 
 class ScUndoMakeScenario: public ScSimpleUndo
 {
diff --git sc/source/ui/inc/viewdata.hxx sc/source/ui/inc/viewdata.hxx
index afc4b75..17e3148 100644
--- sc/source/ui/inc/viewdata.hxx
+++ sc/source/ui/inc/viewdata.hxx
@@ -153,6 +153,9 @@ private:
 
 	BOOL			bOldCurValid;				// "virtuelle" Cursorpos. bei zusammengefassten
 
+    BOOL            bIsDefaultTabBgColor;
+    Color           aTabBgColor;
+
 					ScViewDataTable();
 					~ScViewDataTable();
 
@@ -287,6 +290,10 @@ public:
 	void			CopyTab( SCTAB nSrcTab, SCTAB nDestTab );
 	void			MoveTab( SCTAB nSrcTab, SCTAB nDestTab );
 
+    void            SetTabBgColor( Color rTabBgColor, SCTAB nTab );
+    BOOL            IsDefaultTabBgColor( SCTAB nTab ) const;
+    Color           GetTabBgColor( SCTAB nTab ) const;
+
 	SCTAB			GetRefTabNo() const 					{ return nRefTabNo; }
 	void			SetRefTabNo( SCTAB nNewTab )			{ nRefTabNo = nNewTab; }
 
diff --git sc/source/ui/inc/viewfunc.hxx sc/source/ui/inc/viewfunc.hxx
index 72e2d96..e886dac 100644
--- sc/source/ui/inc/viewfunc.hxx
+++ sc/source/ui/inc/viewfunc.hxx
@@ -276,6 +276,8 @@ public:
 									SCTAB nCount, const SCTAB* pSrcTabs,
 									BOOL bLink,SCTAB nTab);
 
+    BOOL            SetTabBgColor( const Color& rColor, SCTAB nTabNr );
+
 	void			InsertTableLink( const String& rFile,
 										const String& rFilter, const String& rOptions,
 										const String& rTabName );
diff --git sc/source/ui/src/globstr.src sc/source/ui/src/globstr.src
index 6912e7a..77793d8 100644
--- sc/source/ui/src/globstr.src
+++ sc/source/ui/src/globstr.src
@@ -1134,6 +1134,10 @@ Resource RID_GLOBSTR
 	{
 		Text [ en-US ] = "Rename Sheet" ;
 	};
+    String STR_UNDO_SET_TAB_BG_COLOR
+    {
+        Text [ en-US ] = "Set Tab Color" ;
+    };
 	String STR_UNDO_MOVE_TAB
 	{
 		Text [ en-US ] = "Move Sheets" ;
diff --git sc/source/ui/src/popup.src sc/source/ui/src/popup.src
index 25cd641..9e6fd0c 100644
--- sc/source/ui/src/popup.src
+++ sc/source/ui/src/popup.src
@@ -169,6 +169,12 @@ Menu RID_POPUP_TAB
 			HelpId = FID_TAB_MENU_RENAME ;
 			Text [ en-US ] = "~Rename Sheet..." ;
 		};
+        MenuItem
+        {
+            Identifier = FID_TAB_MENU_SET_TAB_BG_COLOR ;
+            HelpId = FID_TAB_MENU_SET_TAB_BG_COLOR ;
+            Text [ en-US ] = "Set Tab ~Color..." ;
+        };
 		MenuItem
 		{
 			Identifier = FID_TAB_MOVE ;
diff --git sc/source/ui/src/scstring.src sc/source/ui/src/scstring.src
index ed03d74..19f9087 100644
--- sc/source/ui/src/scstring.src
+++ sc/source/ui/src/scstring.src
@@ -283,6 +283,10 @@ String SCSTR_RENAMETAB
 {
 	Text [ en-US ] = "Rename Sheet" ;
 };
+String SCSTR_SET_TAB_BG_COLOR
+{
+    Text [ en-US ] = "Set Tab Color" ;
+};
 String SCSTR_RENAMEOBJECT
 {
 	Text [ en-US ] = "Name Object";
diff --git sc/source/ui/undo/undotab.cxx sc/source/ui/undo/undotab.cxx
index df3ab6f..b185d9a 100644
--- sc/source/ui/undo/undotab.cxx
+++ sc/source/ui/undo/undotab.cxx
@@ -70,6 +70,9 @@
 #include "drwlayer.hxx"
 #include "scresid.hxx"
 
+// for set tab bg color
+#include "viewdata.hxx"
+
 extern BOOL bDrawIsInUndo;			//! irgendwo als Member !!!
 
 using namespace com::sun::star;
@@ -93,6 +96,7 @@ TYPEINIT1(ScUndoScenarioFlags,	SfxUndoAction);
 TYPEINIT1(ScUndoRenameObject,	SfxUndoAction);
 TYPEINIT1(ScUndoLayoutRTL,		SfxUndoAction);
 TYPEINIT1(ScUndoSetGrammar,		SfxUndoAction);
+TYPEINIT1(ScUndoSetTabBgColor,  SfxUndoAction);
 
 
 // -----------------------------------------------------------------------
@@ -779,6 +783,73 @@ BOOL ScUndoCopyTab::CanRepeat(SfxRepeatTarget& /* rTarget */) const
 	return FALSE;
 }
 
+//---------------------------------------------------------------------------------
+//
+//      Tab Bg Color
+//
+
+ScUndoSetTabBgColor::ScUndoSetTabBgColor( ScDocShell* pNewDocShell,
+                                    SCTAB nT,
+//                                      const BOOL& bOIsDefaultTabBgColor, 
+//                                      const BOOL& bNIsDefaultTabBgColor,
+                                        const Color& aOTabBgColor, 
+                                        const Color& aNTabBgColor) :
+    ScSimpleUndo( pNewDocShell ),
+    nTab 	 ( nT )
+{
+//  bOldIsDefaultTabBgColor = bOIsDefaultTabBgColor;
+//  bNewIsDefaultTabBgColor = bNIsDefaultTabBgColor;
+    aOldTabBgColor = aOTabBgColor;
+    aNewTabBgColor = aNTabBgColor;
+}
+
+__EXPORT ScUndoSetTabBgColor::~ScUndoSetTabBgColor()
+{
+}
+
+String __EXPORT ScUndoSetTabBgColor::GetComment() const
+{
+    return ScGlobal::GetRscString( STR_UNDO_SET_TAB_BG_COLOR );
+}
+
+void ScUndoSetTabBgColor::DoChange( SCTAB nTabP, const Color& rTabBgColor ) const
+{
+    ScTabViewShell* pViewShell = ScTabViewShell::GetActiveViewShell();
+    if (pViewShell)
+    {
+        ScViewData* pViewData = pViewShell->GetViewData();
+        if (pViewData)
+        {
+            pViewData->SetTabNo(nTabP);
+            pViewData->SetTabBgColor( rTabBgColor, nTabP );
+            SFX_APP()->Broadcast( SfxSimpleHint( SC_HINT_TABLES_CHANGED ) );	// Navigator
+            pDocShell->PostPaintGridAll();
+            pDocShell->PostPaintExtras();
+            pDocShell->PostDataChanged();
+            pViewShell->UpdateInputHandler();
+        }
+    }
+}
+
+void __EXPORT ScUndoSetTabBgColor::Undo()
+{
+    DoChange(nTab, aOldTabBgColor);
+}
+
+void __EXPORT ScUndoSetTabBgColor::Redo()
+{
+    DoChange(nTab, aNewTabBgColor);
+}
+
+void __EXPORT ScUndoSetTabBgColor::Repeat(SfxRepeatTarget& /* rTarget */)
+{
+	//	No Repeat
+}
+
+BOOL __EXPORT ScUndoSetTabBgColor::CanRepeat(SfxRepeatTarget& /* rTarget */) const
+{
+    return FALSE;
+}
 
 // -----------------------------------------------------------------------
 //
diff --git sc/source/ui/view/scextopt.cxx sc/source/ui/view/scextopt.cxx
index 3ab9e7b..fb7162f 100644
--- sc/source/ui/view/scextopt.cxx
+++ sc/source/ui/view/scextopt.cxx
@@ -62,7 +62,9 @@ ScExtTabSettings::ScExtTabSettings() :
     mbSelected( false ),
     mbFrozenPanes( false ),
     mbPageMode( false ),
-    mbShowGrid( true )
+    mbShowGrid( true ),
+    mbIsDefaultTabBgColor( true ),
+    maTabBgColor( COL_AUTO)
 {
 }
 
diff --git sc/source/ui/view/tabcont.cxx sc/source/ui/view/tabcont.cxx
index 5117f2b..30c7dcb 100644
--- sc/source/ui/view/tabcont.cxx
+++ sc/source/ui/view/tabcont.cxx
@@ -68,6 +68,7 @@ ScTabControl::ScTabControl( Window* pParent, ScViewData* pData ) :
 	ScDocument* pDoc = pViewData->GetDocument();
 
 	String aString;
+    Color aTabBgColor;
 	SCTAB nCount = pDoc->GetTableCount();
 	for (SCTAB i=0; i<nCount; i++)
 	{
@@ -79,6 +80,12 @@ ScTabControl::ScTabControl( Window* pParent, ScViewData* pData ) :
 					InsertPage( static_cast<sal_uInt16>(i)+1, aString, TPB_SPECIAL );
 				else
 					InsertPage( static_cast<sal_uInt16>(i)+1, aString );
+
+                if ( !pViewData->IsDefaultTabBgColor(i) )
+                {
+                    aTabBgColor = pViewData->GetTabBgColor(i);
+                    SetTabBgColor(static_cast<sal_uInt16>(i)+1, aTabBgColor, pViewData->IsDefaultTabBgColor(i) );
+                }
 			}
 		}
 	}
@@ -259,6 +266,7 @@ void ScTabControl::Select()
 	rBind.Invalidate( FID_DELETE_TABLE );
 	rBind.Invalidate( FID_TABLE_SHOW );
 	rBind.Invalidate( FID_TABLE_HIDE );
+    rBind.Invalidate( FID_TAB_SET_TAB_BG_COLOR );
 
 		//	SetReference nur wenn der Konsolidieren-Dialog offen ist
 		//	(fuer Referenzen ueber mehrere Tabellen)
@@ -285,16 +293,22 @@ void ScTabControl::UpdateStatus()
 	SCTAB i;
 	String aString;
 	SCTAB nMaxCnt = Max( nCount, static_cast<SCTAB>(GetMaxId()) );
+    Color aTabBgColor;
 
 	BOOL bModified = FALSE;										// Tabellen-Namen
 	for (i=0; i<nMaxCnt && !bModified; i++)
 	{
 		if (pDoc->IsVisible(i))
+        {
 			pDoc->GetName(i,aString);
+            aTabBgColor = pViewData->GetTabBgColor(i);
+        }
 		else
+        {
 			aString.Erase();
+        }
 
-		if (GetPageText(static_cast<sal_uInt16>(i)+1) != aString)
+        if ( (GetPageText(static_cast<sal_uInt16>(i)+1) != aString) || (GetTabBgColor(static_cast<sal_uInt16>(i)+1) != aTabBgColor) )
 			bModified = TRUE;
 	}
 
@@ -311,6 +325,11 @@ void ScTabControl::UpdateStatus()
 						InsertPage( static_cast<sal_uInt16>(i)+1, aString, TPB_SPECIAL );
 					else
 						InsertPage( static_cast<sal_uInt16>(i)+1, aString );
+                    if ( !pViewData->IsDefaultTabBgColor(i) )
+                    {
+                        aTabBgColor = pViewData->GetTabBgColor(i);
+                        SetTabBgColor(static_cast<sal_uInt16>(i)+1, aTabBgColor, pViewData->IsDefaultTabBgColor(i));
+                    }
 				}
 			}
 		}
diff --git sc/source/ui/view/tabvwshf.cxx sc/source/ui/view/tabvwshf.cxx
index 6987883..9f2f15b 100644
--- sc/source/ui/view/tabvwshf.cxx
+++ sc/source/ui/view/tabvwshf.cxx
@@ -60,6 +60,13 @@
 
 #include "scabstdlg.hxx" //CHINA001
 
+// TabBgColor -----------------------------------------------------------------
+//TODO Clean up includes...
+#include <svtools/colrdlg.hxx>
+#include <svx/svxdlg.hxx>
+#include <svx/colritem.hxx>
+// TabBgColor -----------------------------------------------------------------
+
 #define IS_AVAILABLE(WhichId,ppItem) \
     (pReqArgs->GetItemState((WhichId), TRUE, ppItem ) == SFX_ITEM_SET)
 
@@ -699,10 +706,111 @@ void ScTabViewShell::ExecuteTable( SfxRequest& rReq )
             }
             break;
 
-		default:
-			DBG_ERROR("Unbekannte Message bei ViewShell");
-			break;
-	}
+        case FID_TAB_SET_TAB_BG_COLOR:
+        case FID_TAB_MENU_SET_TAB_BG_COLOR:
+            {
+                if ( nSlot == FID_TAB_MENU_SET_TAB_BG_COLOR )
+                    nSlot = FID_TAB_SET_TAB_BG_COLOR;
+
+                SCTAB nTabNr = pViewData->GetTabNo();
+                ScMarkData& rMark = pViewData->GetMarkData();
+                SCTAB nTabSelCount = rMark.GetSelectCount();
+
+                if ( !pDoc->IsDocEditable() )
+                    break;
+
+                if ( pDoc->IsTabProtected( nTabNr ) || nTabSelCount > 1 )
+                    break;
+
+                if( pReqArgs != NULL )
+                {
+                    BOOL                bDone = FALSE;
+                    const SfxPoolItem*  pItem;
+                    Color               aColor;
+
+                    if( IS_AVAILABLE( FN_PARAM_1, &pItem ) )
+                        nTabNr = ((const SfxUInt16Item*)pItem)->GetValue();
+
+                    if( IS_AVAILABLE( nSlot, &pItem ) )
+                        aColor = ((const SvxColorItem*)pItem)->GetValue();
+
+                    bDone = SetTabBgColor( aColor, nTabNr ); //ScViewFunc.SetTabBgColor
+
+                    if( bDone )
+                    {
+                        rReq.Done( *pReqArgs );
+                    }
+                }
+                else
+                {
+                    USHORT      nRet    = RET_OK;
+                    BOOL        bDone   = FALSE;
+                    //TODO Use real dialog, but use this one in the meantime...
+                    //TODO Create Resource...
+                    String        aErrMsg = String::CreateFromAscii("Error selecting the color...");
+                    Color        aTabBgColor;
+                    String        aDlgTitle;
+
+                    aDlgTitle = String(ScResId(SCSTR_SET_TAB_BG_COLOR));
+                    aTabBgColor = pViewData->GetTabBgColor( pViewData->GetTabNo() );
+
+                    SvColorDialog* pColorDlg = new SvColorDialog( GetDialogParent() );
+                            pColorDlg->SetColor( aTabBgColor );
+
+                    while ( !bDone && nRet == RET_OK )
+                    {
+                        nRet = pColorDlg->Execute();
+                        if( nRet == RET_OK )
+                        {
+                            Color aSelectedColor = pColorDlg->GetColor();
+                            bDone = SetTabBgColor( aSelectedColor, nTabNr );
+                            if ( bDone )
+                            {
+                                rReq.AppendItem( SvxColorItem( aTabBgColor, nSlot ) );
+                                rReq.Done();
+                            }
+                            else
+                            {
+                                if( rReq.IsAPI() )
+                                {
+                                    StarBASIC::Error( SbERR_SETPROP_FAILED );
+                                }
+                                else
+                                {
+                                    nRet = ErrorBox( GetDialogParent(),
+                                                        WinBits( WB_OK | WB_DEF_OK ),
+                                                        aErrMsg
+                                                    ).Execute();
+                                }
+                            }
+                        }
+                    }
+                    delete( pColorDlg );
+                }
+                /*DBW
+                SvColorDialog* pColorDlg = new SvColorDialog( GetDialogParent() );
+                            pColorDlg->SetColor( aTabBgColor );
+
+                            while ( !bDone && nRet == RET_OK )
+                            {
+                                nRet = pColorDlg->Execute();
+                                if( nRet == RET_OK )
+                                {
+                                    Color aSelectedColor = pColorDlg->GetColor();
+                                    SetTabBgColor( aSelectedColor, nTabNr );
+                                    bDone = TRUE;
+                                }
+                            }
+                            delete( pColorDlg );
+                */
+
+            }
+            break;
+
+        default:
+            DBG_ERROR("Unbekannte Message bei ViewShell");
+            break;
+    }
 }
 
 //------------------------------------------------------------------
@@ -821,6 +929,22 @@ void ScTabViewShell::GetStateTable( SfxItemSet& rSet )
             case FID_TAB_TOGGLE_GRID:
                 rSet.Put( SfxBoolItem(nWhich, pViewData->GetShowGrid()) );
                 break;
+
+            case FID_TAB_MENU_SET_TAB_BG_COLOR:
+                {
+                    if ( !pDoc->IsDocEditable() ||
+                            pDoc->IsTabProtected(nTab) ||nTabSelCount > 1 ||
+                            ( pDocShell && pDocShell->IsDocShared() ) )
+                        rSet.DisableItem( nWhich );
+                    break;
+                }
+            case FID_TAB_SET_TAB_BG_COLOR:
+                {
+                    Color aColor;
+                    aColor = pViewData->GetTabBgColor( nTab );
+                    rSet.Put( SvxColorItem( aColor, nWhich ) );
+                }
+                break;
 		}
 		nWhich = aIter.NextWhich();
 	}
diff --git sc/source/ui/view/viewdata.cxx sc/source/ui/view/viewdata.cxx
index bba31fc..22526b2 100644
--- sc/source/ui/view/viewdata.cxx
+++ sc/source/ui/view/viewdata.cxx
@@ -105,7 +105,9 @@ ScViewDataTable::ScViewDataTable() :
 				nCurX( 0 ),
 				nCurY( 0 ),
                 bShowGrid( true ),
-                bOldCurValid( FALSE )
+                bOldCurValid( FALSE ),
+                bIsDefaultTabBgColor( TRUE ),
+                aTabBgColor( Color(COL_AUTO) )
 {
 	nPosX[0]=nPosX[1]=0;
 	nPosY[0]=nPosY[1]=0;
@@ -168,6 +170,12 @@ void ScViewDataTable::WriteUserDataSequence(uno::Sequence <beans::PropertyValue>
         pSettings[SC_TABLE_SHOWGRID].Name = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(SC_UNO_SHOWGRID));
         pSettings[SC_TABLE_SHOWGRID].Value <<= static_cast<sal_Bool>(bShowGrid);
 
+        if (!bIsDefaultTabBgColor)
+        {
+            pSettings[SC_TABLE_TAB_BG_COLOR].Name = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(SC_UNO_TABCOLOR));
+            pSettings[SC_TABLE_TAB_BG_COLOR].Value <<= static_cast<sal_Int32>(aTabBgColor.GetColor());
+        }
+
 //        pSettings[SC_TABLE_SELECTED].Name = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(SC_TABLESELECTED));
 //        pSettings[SC_TABLE_SELECTED].Value <<= bool(rViewData.GetMarkData().GetTableSelect( nTab ));
 	}
@@ -284,6 +292,16 @@ void ScViewDataTable::ReadUserDataSequence(const uno::Sequence <beans::PropertyV
             aSettings[i].Value >>= bSelected;
             rViewData.GetMarkData().SelectTable( nTab, bSelected );
         }
+        else if (sName.compareToAscii(SC_UNO_TABCOLOR) == 0)
+        {
+            sal_Int32 nColor = COL_AUTO;
+            aSettings[i].Value >>= nColor;
+            if (nColor != COL_AUTO)
+            {
+                aTabBgColor.SetColor(static_cast<ColorData>(nColor));
+                bIsDefaultTabBgColor = false;
+            }
+        }
 	}
 	if (eHSplitMode == SC_SPLIT_FIX)
 		nFixPosX = SanitizeCol( static_cast<SCCOL>( bHasHSplitInTwips ? nTempPosHTw : nTempPosH ));
@@ -589,6 +607,39 @@ void ScViewData::MoveTab( SCTAB nSrcTab, SCTAB nDestTab )
 	aMarkData.InsertTab( nInsTab );			// ggf. angepasst
 }
 
+void ScViewData::SetTabBgColor( Color rTabBgColor, SCTAB nTab )
+{
+    if ( rTabBgColor != Color(COL_AUTO) )
+    {
+        if ( !pTabData[nTab] )
+            CreateTabData( nTab );
+        pTabData[nTab]->aTabBgColor = rTabBgColor;
+        pTabData[nTab]->bIsDefaultTabBgColor = FALSE;
+    }
+    else
+    {
+        if ( pTabData[nTab] )
+        {
+            pTabData[nTab]->bIsDefaultTabBgColor = TRUE;
+            pTabData[nTab]->aTabBgColor = Color( COL_AUTO );
+        }
+    }
+}
+
+Color ScViewData::GetTabBgColor( SCTAB nTab ) const
+{
+    if ( !pTabData[nTab] )
+        return Color(COL_AUTO);
+    return pTabData[nTab]->aTabBgColor;
+}
+
+BOOL ScViewData::IsDefaultTabBgColor( SCTAB nTab ) const
+{
+    if ( !pTabData[nTab] )
+        return true;
+    return pTabData[nTab]->bIsDefaultTabBgColor;
+}
+
 //UNUSED2008-05  void ScViewData::UpdateOle( ScSplitPos /* eWhich */ )
 //UNUSED2008-05  {
 //UNUSED2008-05      GetDocShell()->UpdateOle(this);
@@ -2477,6 +2528,10 @@ void ScViewData::WriteExtOptions( ScExtDocOptions& rDocOpt ) const
             rTabSett.mbPageMode = bPagebreak;
             rTabSett.mnNormalZoom = static_cast< long >( pViewTab->aZoomY * Fraction( 100.0 ) );
             rTabSett.mnPageZoom = static_cast< long >( pViewTab->aPageZoomY * Fraction( 100.0 ) );
+
+            // Tab Bg Color
+            rTabSett.mbIsDefaultTabBgColor = pViewTab->bIsDefaultTabBgColor;
+            rTabSett.maTabBgColor = pViewTab->aTabBgColor;
 		}
 	}
 }
@@ -2633,6 +2688,13 @@ void ScViewData::ReadExtOptions( const ScExtDocOptions& rDocOpt )
                     update map modes that are needed to draw text correctly. */
                 SetPagebreakMode( rTabSett.mbPageMode );
             }
+
+            // Tab Bg Color
+            if( !rTabSett.mbIsDefaultTabBgColor)
+            {
+                rViewTab.bIsDefaultTabBgColor = rTabSett.mbIsDefaultTabBgColor;
+                rViewTab.aTabBgColor = rTabSett.maTabBgColor;
+            }
 		}
 	}
 
diff --git sc/source/ui/view/viewfun2.cxx sc/source/ui/view/viewfun2.cxx
index 30f3976..b5e3c57 100644
--- sc/source/ui/view/viewfun2.cxx
+++ sc/source/ui/view/viewfun2.cxx
@@ -2271,6 +2271,19 @@ BOOL ScViewFunc::RenameTable( const String& rName, SCTAB nTab )
 
 //----------------------------------------------------------------------------
 
+BOOL ScViewFunc::SetTabBgColor( const Color& rColor, SCTAB nTab )
+{
+    BOOL bSuccess = GetViewData()->GetDocShell()->GetDocFunc().SetTabBgColor( nTab, rColor, TRUE, FALSE );
+    if (bSuccess)
+    {
+        GetViewData()->GetViewShell()->UpdateInputHandler();
+    }
+    return bSuccess;
+}
+
+
+//----------------------------------------------------------------------------
+
 void ScViewFunc::InsertAreaLink( const String& rFile,
 									const String& rFilter, const String& rOptions,
 									const String& rSource, ULONG nRefresh )
diff --git sc/uiconfig/scalc/menubar/menubar.xml sc/uiconfig/scalc/menubar/menubar.xml
index 7c95dda..ed0e663 100644
--- sc/uiconfig/scalc/menubar/menubar.xml
+++ sc/uiconfig/scalc/menubar/menubar.xml
@@ -211,6 +211,7 @@
             <menu:menu menu:id=".uno:SheetMenu">
                 <menu:menupopup>
                     <menu:menuitem menu:id=".uno:RenameTable"/>
+                    <menu:menuitem menu:id=".uno:SetTabBgColor"/>
                     <menu:menuitem menu:id=".uno:Hide"/>
                     <menu:menuitem menu:id=".uno:Show"/>
                     <menu:menuitem menu:id=".uno:SheetRightToLeft"/>
