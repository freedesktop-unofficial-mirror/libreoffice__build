diff --git sc/inc/ViewSettingsSequenceDefines.hxx sc/inc/ViewSettingsSequenceDefines.hxx
index 4561e51..822f4d3 100644
--- sc/inc/ViewSettingsSequenceDefines.hxx
+++ sc/inc/ViewSettingsSequenceDefines.hxx
@@ -64,7 +64,7 @@
 // this are the defines for the position of the settings in the
 // TableViewSettingsSequence
 
-#define SC_TABLE_VIEWSETTINGS_COUNT         15
+#define SC_TABLE_VIEWSETTINGS_COUNT         16
 
 #define SC_CURSOR_X							0
 #define SC_CURSOR_Y							1
@@ -81,6 +81,7 @@
 #define SC_TABLE_ZOOM_VALUE                 12
 #define SC_TABLE_PAGE_VIEW_ZOOM_VALUE       13
 #define SC_TABLE_SHOWGRID                   14
+#define SC_TABLE_TAB_BG_COLOR               15
 
 #define SC_CURSORPOSITIONX					"CursorPositionX"
 #define SC_CURSORPOSITIONY					"CursorPositionY"
diff --git sc/inc/globstr.hrc sc/inc/globstr.hrc
index fbf7540..b824628 100644
--- sc/inc/globstr.hrc
+++ sc/inc/globstr.hrc
@@ -589,8 +589,10 @@
 #define STR_FORM_DROPDOWN           446
 #define STR_FORM_SPINNER            447
 #define STR_FORM_SCROLLBAR          448
+
+#define STR_UNDO_SET_TAB_BG_COLOR   449
                                        
-#define STR_COUNT                   449
+#define STR_COUNT                   450
 
 #endif
 
diff --git sc/inc/sc.hrc sc/inc/sc.hrc
index 2eba0d8..95590a8 100644
--- sc/inc/sc.hrc
+++ sc/inc/sc.hrc
@@ -1664,6 +1664,19 @@
 #define RID_SCPAGE_FORMULA          (SC_OOO_BUILD_START + 5)
 #define HID_SCPAGE_FORMULA          (SC_OOO_BUILD_START + 6)
 
+// Sheet tab color
+//FIXME Get an official FID for my stuff
+#define FID_TAB_MENU_SET_TAB_BG_COLOR   (SC_OOO_BUILD_START + 7)
+#define FID_TAB_SET_TAB_BG_COLOR        (SC_OOO_BUILD_START + 8)
+
+#define SCSTR_SET_TAB_BG_COLOR          (SC_OOO_BUILD_START + 9)
+#define SCSTR_NO_TAB_BG_COLOR           (SC_OOO_BUILD_START + 10)
+#define SCSTR_TAB_BG_COLOR_MORE         (SC_OOO_BUILD_START + 11)
+
+#define RID_SCDLG_TAB_BG_COLOR          (SC_OOO_BUILD_START + 12)
+
+
+
 #endif
 
 
diff --git sc/inc/scabstdlg.hxx sc/inc/scabstdlg.hxx
index 46c9dc9..c03ad9c 100644
--- sc/inc/scabstdlg.hxx
+++ sc/inc/scabstdlg.hxx
@@ -292,6 +292,12 @@ public:
 	virtual void GetInputString( String& rString ) const = 0;
 };
 
+class AbstractScTabBgColorDlg : public VclAbstractDialog  //add for ScTabBgColorDlg
+{
+public:
+    virtual void GetSelectedColor( Color& rColor ) const = 0;
+};
+
 class AbstractScImportOptionsDlg : public VclAbstractDialog  //add for ScImportOptionsDlg
 {
 public:
@@ -433,6 +439,15 @@ public:
 																const String& rDefault,
 																ULONG nHelpId ,
 																int nId ) = 0;
+
+    virtual AbstractScTabBgColorDlg * CreateScTabBgColorDlg (  Window* pParent, //add for ScTabBgColorDlg
+                                                                const String& rTitle, //Dialog Title
+                                                                const String& rTabBgColorNoColorText, //Label for no tab color
+                                                                const String& rTabBgColorMoreText, //Text for the more button
+                                                                const Color& rDefaultColor, //Currently selected Color
+                                                                ULONG nHelpId ,
+                                                                int nId ) = 0;
+
 	virtual AbstractScImportOptionsDlg * CreateScImportOptionsDlg ( Window* 				pParent, //add for ScImportOptionsDlg
 																	int nId,
 																	BOOL                    bAscii = TRUE,
diff --git sc/inc/scextopt.hxx sc/inc/scextopt.hxx
index 3464fbb..ba1eea2 100644
--- sc/inc/scextopt.hxx
+++ sc/inc/scextopt.hxx
@@ -81,6 +81,8 @@ struct ScExtTabSettings
     bool                mbFrozenPanes;      /// true = Frozen panes; false = Normal splits.
     bool                mbPageMode;         /// true = Pagebreak mode; false = Normal view mode.
     bool                mbShowGrid;         /// Whether or not to display gridlines.
+    Color               maTabBgColor;       /// Tab Bg Color
+    bool                IsDefaultTabBgColor() const { return maTabBgColor == Color(COL_AUTO) ? TRUE : FALSE; };
 
     explicit            ScExtTabSettings();
 };
diff --git sc/inc/unonames.hxx sc/inc/unonames.hxx
index 253c197..90d20ba 100644
--- sc/inc/unonames.hxx
+++ sc/inc/unonames.hxx
@@ -531,6 +531,7 @@
 #define SC_UNO_FILTERED_RANGE_SELECTION       "FilteredRangeSelection"
 /*Stampit enable/disable print cancel */
 #define SC_UNO_ALLOWPRINTJOBCANCEL  "AllowPrintJobCancel"
+#define SC_UNO_TABCOLOR             "TabColor"
 
 //	old (5.2) property names for view options - for compatibility only!
 #define OLD_UNO_COLROWHDR			"ColumnRowHeaders"
diff --git sc/sdi/docsh.sdi sc/sdi/docsh.sdi
index 16dff9a..829a70b 100644
--- sc/sdi/docsh.sdi
+++ sc/sdi/docsh.sdi
@@ -64,6 +64,7 @@ interface TableSelection
 	FID_TAB_RENAME		[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 	FID_TAB_RTL			[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
     FID_TAB_TOGGLE_GRID [ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
+    FID_TAB_SET_TAB_BG_COLOR    [ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 
 	SID_TABLE_ACTIVATE	[ ExecMethod = Execute; ]
 }
diff --git sc/sdi/scalc.sdi sc/sdi/scalc.sdi
index 254442f..2e1ec8c 100644
--- sc/sdi/scalc.sdi
+++ sc/sdi/scalc.sdi
@@ -7851,6 +7851,58 @@ SfxVoidItem ShareDocument SID_SHARE_DOC
 ]
 
 //--------------------------------------------------------------------------
+SvxColorItem TabBgColor FID_TAB_SET_TAB_BG_COLOR
+
+[
+    // flags: 
+    AutoUpdate = FALSE,
+    Cachable = Cachable,
+    FastCall = FALSE,
+    HasCoreId = FALSE,
+    HasDialog = TRUE,
+    ReadOnlyDoc = TRUE,
+    Toggle = FALSE,
+    Container = FALSE,
+    RecordAbsolute = FALSE,
+    RecordPerSet;
+    Synchron;
+
+    Readonly = FALSE,
+
+    // config: 
+    AccelConfig = TRUE,
+    MenuConfig = TRUE,
+    StatusBarConfig = FALSE,
+    ToolBoxConfig = FALSE,
+    GroupId = GID_FORMAT;
+]
+
+//--------------------------------------------------------------------------
+SfxVoidItem SetTabBgColor FID_TAB_MENU_SET_TAB_BG_COLOR
+(SvxColorItem TabBgColor FID_TAB_SET_TAB_BG_COLOR)
+[
+    /* flags: */
+    AutoUpdate = FALSE,
+    Cachable = Cachable,
+    FastCall = FALSE,
+    HasCoreId = FALSE,
+    HasDialog = TRUE,
+    ReadOnlyDoc = TRUE,
+    Toggle = FALSE,
+    Container = FALSE,
+    RecordAbsolute = FALSE,
+    RecordPerSet;
+    Synchron;
+
+    /* config: */
+    AccelConfig = TRUE,
+    MenuConfig = TRUE,
+    StatusBarConfig = FALSE,
+    ToolBoxConfig = FALSE,
+    GroupId = GID_FORMAT;
+]
+
+//--------------------------------------------------------------------------
 SfxBoolItem ToggleSheetGrid FID_TAB_TOGGLE_GRID
 
 [
diff --git sc/sdi/tabvwsh.sdi sc/sdi/tabvwsh.sdi
index bd51c83..8cc0ac4 100644
--- sc/sdi/tabvwsh.sdi
+++ sc/sdi/tabvwsh.sdi
@@ -60,6 +60,7 @@ interface Tables
 	FID_TABLE_HIDE	[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 	FID_TABLE_SHOW	[ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
         SID_SELECT_TABLES       [ ExecMethod = Execute; StateMethod = GetState; ]
+    FID_TAB_MENU_SET_TAB_BG_COLOR   [ ExecMethod = ExecuteTable; StateMethod = GetStateTable; ]
 }
 
  // ===========================================================================
diff --git sc/source/filter/excel/read.cxx sc/source/filter/excel/read.cxx
index 5e747ca..aa2b377 100644
--- sc/source/filter/excel/read.cxx
+++ sc/source/filter/excel/read.cxx
@@ -1157,6 +1157,9 @@ FltError ImportExcel8::Read( void )
                     case EXC_ID_SXVDEX:         rPTableMgr.ReadSxvdex( maStrm );    break;
                     case EXC_ID_SXEX:           rPTableMgr.ReadSxex( maStrm );      break;
                     case EXC_ID_SXVIEWEX9:      rPTableMgr.ReadSxViewEx9( maStrm ); break;
+
+                    // 0x0862 (SHEETEXT)
+                    case EXC_ID_SHEETEXT:       rTabViewSett.ReadTabBgColor( maStrm, rPal );    break;
                 }
 			}
             break;
diff --git sc/source/filter/excel/xestyle.cxx sc/source/filter/excel/xestyle.cxx
index d93eec3..de32a64 100644
--- sc/source/filter/excel/xestyle.cxx
+++ sc/source/filter/excel/xestyle.cxx
@@ -77,6 +77,7 @@ sal_uInt32 lclGetWeighting( XclExpColorType eType )
         case EXC_COLOR_CELLTEXT:
         case EXC_COLOR_CHARTTEXT:
         case EXC_COLOR_CTRLTEXT:    return 10;
+        case EXC_COLOR_TABBG:
         case EXC_COLOR_CELLAREA:    return 20;
         case EXC_COLOR_GRID:        return 50;
         default:    DBG_ERRORFILE( "lclGetWeighting - unknown color type" );
diff --git sc/source/filter/excel/xeview.cxx sc/source/filter/excel/xeview.cxx
index 1ee104c..9a93776 100644
--- sc/source/filter/excel/xeview.cxx
+++ sc/source/filter/excel/xeview.cxx
@@ -259,6 +259,36 @@ void XclExpSelection::WriteBody( XclExpStream& rStrm )
     maSelData.maXclSelection.Write( rStrm, false );
 }
 
+// ----------------------------------------------------------------------------
+
+XclExpTabBgColor::XclExpTabBgColor( const XclTabViewData& rTabViewData ) :
+//    XclExpRecord( 0x0862, 18 ), //TODO Use Real ID!
+    XclExpRecord( EXC_ID_SHEETEXT, 18 ), //TODO Use Real ID!
+    mrTabViewData( rTabViewData )
+{
+}
+//TODO Fix savexml...
+/*void XclExpTabBgColor::SaveXml( XclExpXmlStream& rStrm )
+{
+}*/
+
+void XclExpTabBgColor::WriteBody( XclExpStream& rStrm )
+{
+    if ( mrTabViewData.IsDefaultTabBgColor() )
+        return;
+    sal_uInt16 rt = 0x0862; //rt
+    sal_uInt16 grbitFrt = 0x0000; //grbit must be set to 0
+    sal_uInt32 unused = 0x00000000; //Use twice...
+    sal_uInt32 cb = 0x00000014; // Record Size, may be larger in future...
+    sal_uInt16 reserved = 0x0000; //trailing bits are 0
+    sal_uInt16 TabBgColorIndex;
+    XclExpPalette& rPal = rStrm.GetRoot().GetPalette();
+    TabBgColorIndex = rPal.GetColorIndex(mrTabViewData.mnTabBgColorId);
+    if (TabBgColorIndex < 8 || TabBgColorIndex > 63 ) // only numbers 8 - 63 are valid numbers
+        TabBgColorIndex = 127; //Excel specs: 127 makes excel ignore tab color information.
+    rStrm << rt << grbitFrt << unused << unused << cb << TabBgColorIndex << reserved;
+}
+
 // Sheet view settings ========================================================
 
 namespace {
@@ -368,6 +398,14 @@ XclExpTabViewSettings::XclExpTabViewSettings( const XclExpRoot& rRoot, SCTAB nSc
         maData.mnNormalZoom     = lclGetXclZoom( rTabSett.mnNormalZoom, EXC_WIN2_NORMALZOOM_DEF );
         maData.mnPageZoom       = lclGetXclZoom( rTabSett.mnPageZoom, EXC_WIN2_PAGEZOOM_DEF );
         maData.mnCurrentZoom    = maData.mbPageMode ? maData.mnPageZoom : maData.mnNormalZoom;
+
+        // Tab Bg Color
+        if ( GetBiff() == EXC_BIFF8 && !rTabSett.IsDefaultTabBgColor() )
+        {
+            XclExpPalette& rPal = GetPalette();
+            maData.maTabBgColor = rTabSett.maTabBgColor;
+            maData.mnTabBgColorId = rPal.InsertColor(maData.maTabBgColor, EXC_COLOR_TABBG, EXC_COLOR_NOTABBG );
+        }
     }
 }
 
@@ -380,6 +418,7 @@ void XclExpTabViewSettings::Save( XclExpStream& rStrm )
     WriteSelection( rStrm, EXC_PANE_TOPRIGHT );
     WriteSelection( rStrm, EXC_PANE_BOTTOMLEFT );
     WriteSelection( rStrm, EXC_PANE_BOTTOMRIGHT );
+    WriteTabBgColor( rStrm );
 }
 
 static void lcl_WriteSelection( XclExpXmlStream& rStrm, const XclTabViewData& rData, sal_uInt8 nPane )
@@ -494,5 +533,10 @@ void XclExpTabViewSettings::WriteSelection( XclExpStream& rStrm, sal_uInt8 nPane
         XclExpSelection( maData, nPane ).Save( rStrm );
 }
 
+void XclExpTabViewSettings::WriteTabBgColor( XclExpStream& rStrm ) const
+{
+    if ( !maData.IsDefaultTabBgColor() )
+        XclExpTabBgColor( maData ).Save( rStrm );
+}
 // ============================================================================
 
diff --git sc/source/filter/excel/xichart.cxx sc/source/filter/excel/xichart.cxx
index 99613dc..530aeca 100644
--- sc/source/filter/excel/xichart.cxx
+++ sc/source/filter/excel/xichart.cxx
@@ -3566,6 +3566,12 @@ void XclImpChart::ReadChartSubStream( XclImpStream& rStrm )
 
             case EXC_ID_WINDOW2:        rTabViewSett.ReadWindow2( rStrm, true );break;
             case EXC_ID_SCL:            rTabViewSett.ReadScl( rStrm );          break;
+            case EXC_ID_SHEETEXT: //0x0862
+            {
+                XclImpPalette& rPal = GetPalette();
+                rTabViewSett.ReadTabBgColor( rStrm,  rPal);
+            }
+            break;
         }
 
         switch( rStrm.GetRecId() )
diff --git sc/source/filter/excel/xiview.cxx sc/source/filter/excel/xiview.cxx
index 55525ad..ce76483 100644
--- sc/source/filter/excel/xiview.cxx
+++ sc/source/filter/excel/xiview.cxx
@@ -109,6 +109,24 @@ void XclImpTabViewSettings::Initialize()
     maData.SetDefaults();
 }
 
+void XclImpTabViewSettings::ReadTabBgColor( XclImpStream& rStrm, XclImpPalette& rPal )
+{
+    DBG_ASSERT_BIFF( GetBiff() >= EXC_BIFF8 );
+    if( GetBiff() < EXC_BIFF8 )
+        return;
+
+    sal_uInt8 ColorIndex;
+    Color TabBgColor;
+
+    rStrm.Ignore( 16 );
+    ColorIndex = rStrm.ReaduInt8() & EXC_SHEETEXT_TABCOLOR; //0x7F
+    if ( ColorIndex >= 8 && ColorIndex <= 63 ) //only accept valid index values
+    {
+        TabBgColor = rPal.GetColor( ColorIndex );
+        maData.maTabBgColor = TabBgColor;
+    }
+}
+
 void XclImpTabViewSettings::ReadWindow2( XclImpStream& rStrm, bool bChart )
 {
     if( GetBiff() == EXC_BIFF2 )
@@ -281,6 +299,10 @@ void XclImpTabViewSettings::Finalize()
         aViewOpt.SetOption( VOPT_OUTLINER, maData.mbShowOutline );
         rDoc.SetViewOptions( aViewOpt );
     }
+
+    // *** set tab bg color
+    if ( !maData.IsDefaultTabBgColor() )
+        rTabSett.maTabBgColor = maData.maTabBgColor;
 }
 
 // ============================================================================
diff --git sc/source/filter/excel/xlview.cxx sc/source/filter/excel/xlview.cxx
index 080075b..8580d7a 100644
--- sc/source/filter/excel/xlview.cxx
+++ sc/source/filter/excel/xlview.cxx
@@ -79,6 +79,7 @@ void XclTabViewData::SetDefaults()
     mbDefGridColor = true;
     mbShowFormulas = false;
     mbShowGrid = mbShowHeadings = mbShowZeros = mbShowOutline = true;
+    maTabBgColor.SetColor( COL_AUTO );
 }
 
 bool XclTabViewData::IsSplit() const
diff --git sc/source/filter/inc/xestyle.hxx sc/source/filter/inc/xestyle.hxx
index 8485bb1..9508c8b 100644
--- sc/source/filter/inc/xestyle.hxx
+++ sc/source/filter/inc/xestyle.hxx
@@ -61,7 +61,8 @@ enum XclExpColorType
     EXC_COLOR_CHARTLINE,        /// Line in a chart.
     EXC_COLOR_CHARTAREA,        /// Area in a chart.
     EXC_COLOR_CTRLTEXT,         /// Text color in a form control.
-    EXC_COLOR_GRID              /// Spreadsheet grid color.
+    EXC_COLOR_GRID,              /// Spreadsheet grid color.
+    EXC_COLOR_TABBG             /// Spreadsheet tab bg color.
 };
 
 // ----------------------------------------------------------------------------
diff --git sc/source/filter/inc/xeview.hxx sc/source/filter/inc/xeview.hxx
index 4d8b10d..5c54ecd 100644
--- sc/source/filter/inc/xeview.hxx
+++ sc/source/filter/inc/xeview.hxx
@@ -134,6 +134,20 @@ private:
     sal_uInt8           mnPane;             /// Pane identifier of this selection.
 };
 
+class XclExpTabBgColor : public XclExpRecord
+{
+public:
+    explicit            XclExpTabBgColor( const XclTabViewData& rTabViewData );
+
+    /* virtual void        SaveXml( XclExpXmlStream& rStrm ); TODO Fix XML Saving Stream */
+private:
+    /** Writes the contents of the SHEETEXT record. */
+    virtual void        WriteBody( XclExpStream& rStrm );
+
+private:
+    const XclTabViewData&  mrTabViewData;             /// view settings data of current sheet.
+};
+
 // View settings ==============================================================
 
 /** Contains all view settings records for a single sheet. */
@@ -156,6 +170,7 @@ private:
     void                WriteScl( XclExpStream& rStrm ) const;
     void                WritePane( XclExpStream& rStrm ) const;
     void                WriteSelection( XclExpStream& rStrm, sal_uInt8 nPane ) const;
+    void                WriteTabBgColor( XclExpStream& rStrm ) const;
 
 private:
     XclTabViewData      maData;             /// All view settings for a sheet.
diff --git sc/source/filter/inc/xiview.hxx sc/source/filter/inc/xiview.hxx
index f0b393e..a54c67b 100644
--- sc/source/filter/inc/xiview.hxx
+++ sc/source/filter/inc/xiview.hxx
@@ -83,7 +83,8 @@ public:
     void                ReadPane( XclImpStream& rStrm );
     /** Reads a SELECTION record. */
     void                ReadSelection( XclImpStream& rStrm );
-
+    /** Reads a SHEETEXT record (Tab Color). */
+    void                ReadTabBgColor( XclImpStream& rStrm, XclImpPalette& rPal );
     /** Sets the view settings at the current sheet or the extended sheet options object. */
     void                Finalize();
 
diff --git sc/source/filter/inc/xlview.hxx sc/source/filter/inc/xlview.hxx
index 4a3798e..3070c28 100644
--- sc/source/filter/inc/xlview.hxx
+++ sc/source/filter/inc/xlview.hxx
@@ -89,6 +89,11 @@ const sal_uInt8 EXC_PANE_TOPLEFT            = 3;        /// Single, top, left, o
 
 const sal_uInt16 EXC_ID_SCL                 = 0x00A0;
 
+// (0x0862) SHEETEXT ----------------------------------------------------------
+
+const sal_uInt16 EXC_ID_SHEETEXT            = 0x0862; 	/// header id for sheetext
+const sal_uInt8 EXC_SHEETEXT_TABCOLOR       = 0x7F; 	/// mask for tab color
+const sal_uInt16 EXC_COLOR_NOTABBG          = 0x7F;     /// Excel ignores Tab color when set to this value...
 // Structs ====================================================================
 
 /** Contains all view settings for the entire document. */
@@ -149,6 +154,9 @@ struct XclTabViewData
     bool                mbShowHeadings;     /// true = Show column/row headings.
     bool                mbShowZeros;        /// true = Show zero value zells.
     bool                mbShowOutline;      /// true = Show outlines.
+    Color               maTabBgColor;       /// Tab Color default = (COL_AUTO )
+    bool                IsDefaultTabBgColor() const { return maTabBgColor == Color(COL_AUTO) ? TRUE : FALSE; };
+    sal_uInt32          mnTabBgColorId;         /// pallette color id
 
     explicit            XclTabViewData();
                         ~XclTabViewData();
diff --git sc/source/ui/attrdlg/scdlgfact.cxx sc/source/ui/attrdlg/scdlgfact.cxx
index ad0e25b..e631188 100644
--- sc/source/ui/attrdlg/scdlgfact.cxx
+++ sc/source/ui/attrdlg/scdlgfact.cxx
@@ -61,6 +61,7 @@
 #include "scendlg.hxx" //add for ScNewScenarioDlg
 #include "shtabdlg.hxx" //add for ScShowTabDlg
 #include "strindlg.hxx" //add for ScStringInputDlg
+#include "tabbgcolordlg.hxx"//add for ScTabBgColorDlg
 #include "scuiimoptdlg.hxx" //add for ScImportOptionsDlg
 #include "attrdlg.hxx" //add for ScAttrDlg
 #include "hfedtdlg.hxx" //add for ScHFEditDlg
@@ -115,6 +116,7 @@ IMPL_ABSTDLG_BASE(AbstractScDPShowDetailDlg_Impl); //add for ScDPShowDetailDlg
 IMPL_ABSTDLG_BASE(AbstractScNewScenarioDlg_Impl); //add for ScNewScenarioDlg
 IMPL_ABSTDLG_BASE(AbstractScShowTabDlg_Impl); //add for ScShowTabDlg
 IMPL_ABSTDLG_BASE(AbstractScStringInputDlg_Impl); //add for ScStringInputDlg
+IMPL_ABSTDLG_BASE(AbstractScTabBgColorDlg_Impl); //add for ScTabBgColorDlg
 IMPL_ABSTDLG_BASE(AbstractScImportOptionsDlg_Impl); //add for ScImportOptionsDlg
 IMPL_ABSTDLG_BASE(AbstractTabDialog_Impl); //add for ScAttrDlg, ScHFEditDlg, ScStyleDlg, ScSubTotalDlg,ScCharDlg, ScParagraphDlg, ScValidationDlg, ScSortDlg
 
@@ -615,6 +617,14 @@ void AbstractScStringInputDlg_Impl::GetInputString( String& rString ) const  //a
 }
 //add for AbstractScStringInputDlg_Impl end
 
+//add for AbstractScTabBgColorDlg_Impl begin
+void AbstractScTabBgColorDlg_Impl::GetSelectedColor( Color& rColor ) const  //add for ScTabBgColorDlg
+{
+    pDlg->GetSelectedColor( rColor );
+}
+//add for AbstractScTabBgColorDlg_Impl end
+
+
 //add for AbstractScImportOptionsDlg_Impl begin
 void AbstractScImportOptionsDlg_Impl::GetImportOptions( ScImportOptions& rOptions ) const  //add for ScImportOptionsDlg
 {
@@ -1263,6 +1273,32 @@ AbstractScShowTabDlg * ScAbstractDialogFactory_Impl::CreateScShowTabDlg ( Window
 }
  //add for ScStringInputDlg end
 
+//add for ScTabBgColorDlg begin
+AbstractScTabBgColorDlg * ScAbstractDialogFactory_Impl::CreateScTabBgColorDlg (
+                                                            Window* pParent,
+                                                            const String& rTitle,
+                                                            const String& rTabBgColorNoColorText,
+                                                            const String& rTabBgColorMoreText,
+                                                            const Color& rDefaultColor,
+                                                            ULONG nHelpId ,
+                                                            int nId )
+{
+ScTabBgColorDlg * pDlg=NULL;
+switch ( nId )
+{
+    case RID_SCDLG_TAB_BG_COLOR :
+        pDlg = new ScTabBgColorDlg( pParent, rTitle, rTabBgColorNoColorText, rTabBgColorMoreText, rDefaultColor, nHelpId );
+        break;
+    default:
+        break;
+}
+
+if ( pDlg )
+    return new AbstractScTabBgColorDlg_Impl( pDlg );
+return 0;
+}
+//add for ScTabBgColorDlg end
+
 //add for ScImportOptionsDlg begin
 AbstractScImportOptionsDlg * ScAbstractDialogFactory_Impl::CreateScImportOptionsDlg ( Window* 				pParent,
 																	int nId,
diff --git sc/source/ui/attrdlg/scdlgfact.hxx sc/source/ui/attrdlg/scdlgfact.hxx
index 05864d1..dd59844 100644
--- sc/source/ui/attrdlg/scdlgfact.hxx
+++ sc/source/ui/attrdlg/scdlgfact.hxx
@@ -62,6 +62,7 @@ class ScDPShowDetailDlg;
 class ScNewScenarioDlg;
 class ScShowTabDlg;
 class ScStringInputDlg;
+class ScTabBgColorDlg;
 class ScImportOptionsDlg;
 class SfxTabDialog;
 
@@ -343,6 +344,12 @@ class AbstractScStringInputDlg_Impl :  public AbstractScStringInputDlg  //add fo
 	virtual void GetInputString( String& rString ) const;
 };
 
+class AbstractScTabBgColorDlg_Impl :  public AbstractScTabBgColorDlg  //add for ScTabBgColorDlg
+{
+    DECL_ABSTDLG_BASE( AbstractScTabBgColorDlg_Impl, ScTabBgColorDlg )
+    virtual void GetSelectedColor( Color& rColor ) const;
+};
+
 class AbstractScImportOptionsDlg_Impl : public AbstractScImportOptionsDlg  //add for ScImportOptionsDlg
 {
 	DECL_ABSTDLG_BASE( AbstractScImportOptionsDlg_Impl, ScImportOptionsDlg)
@@ -517,6 +524,15 @@ public:
 																const String& rDefault,
 																ULONG nHelpId ,
 																int nId );
+
+    virtual AbstractScTabBgColorDlg * CreateScTabBgColorDlg (  Window* pParent, //add for ScStringInputDlg
+                                                                const String& rTitle, //Dialog Title
+                                                                const String& rTabBgColorNoColorText, //Label for no tab color
+                                                                const String& rTabBgColorMoreText, //Label for more button
+                                                                const Color& rDefaultColor, //Currently selected Color
+                                                                ULONG nHelpId ,
+                                                                int nId );
+
 	virtual AbstractScImportOptionsDlg * CreateScImportOptionsDlg ( Window* 				pParent, //add for ScImportOptionsDlg
 																	int nId,
 																	BOOL                    bAscii = TRUE,
diff --git sc/source/ui/docshell/docfunc.cxx sc/source/ui/docshell/docfunc.cxx
index 5da446b..3c9b947 100644
--- sc/source/ui/docshell/docfunc.cxx
+++ sc/source/ui/docshell/docfunc.cxx
@@ -2612,6 +2612,45 @@ BOOL ScDocFunc::RenameTable( SCTAB nTab, const String& rName, BOOL bRecord, BOOL
 	return bSuccess;
 }
 
+BOOL ScDocFunc::SetTabBgColor( SCTAB nTab, const Color& rColor, BOOL bRecord, BOOL bApi )
+{
+
+    ScDocument* pDoc = rDocShell.GetDocument();
+    if (bRecord && !pDoc->IsUndoEnabled())
+        bRecord = FALSE;
+    if ( !pDoc->IsDocEditable() )
+    {
+        if (!bApi)
+            rDocShell.ErrorMessage(STR_PROTECTIONERR); //TODO Check to see what this string is...
+        return FALSE;
+    }
+
+    ScViewData* pViewData = rDocShell.GetViewData();
+
+    Color aOldTabBgColor;
+    aOldTabBgColor = pViewData->GetTabBgColor(nTab);
+
+    BOOL bSuccess = FALSE;
+    pViewData->SetTabBgColor(rColor, nTab);
+    if ( pViewData->GetTabBgColor( nTab ) == rColor)
+        bSuccess = TRUE;
+    if (bSuccess)
+    {
+        if (bRecord)
+        {
+            rDocShell.GetUndoManager()->AddUndoAction(
+                new ScUndoSetTabBgColor( &rDocShell, nTab, aOldTabBgColor, rColor));
+        }
+        rDocShell.PostPaintExtras();
+        ScDocShellModificator aModificator( rDocShell );
+        aModificator.SetDocumentModified();
+        SFX_APP()->Broadcast( SfxSimpleHint( SC_HINT_TABLES_CHANGED ) );
+
+        bSuccess = TRUE;
+    }
+    return bSuccess;
+}
+
 //------------------------------------------------------------------------
 
 //!	SetWidthOrHeight - noch doppelt zu ViewFunc !!!!!!
diff --git sc/source/ui/inc/docfunc.hxx sc/source/ui/inc/docfunc.hxx
index d2bbeaf..21d770d 100644
--- sc/source/ui/inc/docfunc.hxx
+++ sc/source/ui/inc/docfunc.hxx
@@ -116,6 +116,8 @@ public:
 	BOOL			RenameTable( SCTAB nTab, const String& rName, BOOL bRecord, BOOL bApi );
 	BOOL			DeleteTable( SCTAB nTab, BOOL bRecord, BOOL bApi );
 
+    BOOL            SetTabBgColor( SCTAB nTab, const Color& rColor, BOOL bRecord, BOOL bApi );
+
 	BOOL			SetTableVisible( SCTAB nTab, BOOL bVisible, BOOL bApi );
 
 	BOOL			SetLayoutRTL( SCTAB nTab, BOOL bRTL, BOOL bApi );
diff --git sc/source/ui/inc/miscdlgs.hrc sc/source/ui/inc/miscdlgs.hrc
index 0c35e7e..5fae557 100644
--- sc/source/ui/inc/miscdlgs.hrc
+++ sc/source/ui/inc/miscdlgs.hrc
@@ -184,3 +184,9 @@
 #define BTN_GROUP_ROWS	3
 #define STR_GROUP		1
 #define STR_UNGROUP		2
+
+// Tab Bg Color
+#define TAB_BG_COLOR_CT_BORDER 1
+#define TAB_BG_COLOR_SET_BGDCOLOR 2
+#define TAB_BG_COLOR_GB_BGDCOLOR 3
+#define TAB_BG_COLOR_BTN_MORE 4
diff --git sc/source/ui/inc/tabbgcolordlg.hxx sc/source/ui/inc/tabbgcolordlg.hxx
new file mode 100644
index 0000000..523a210
--- /dev/null
+++ sc/source/ui/inc/tabbgcolordlg.hxx
@@ -0,0 +1,77 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: tabbgcolordlg.hxx,v $
+ * $Revision: 1.0 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef SC_TABBGCOLORDLG_HXX
+#define SC_TABBGCOLORDLG_HXX
+
+
+#include <vcl/dialog.hxx>
+#include <vcl/floatwin.hxx>
+#include <vcl/fixed.hxx>
+#include <vcl/imagebtn.hxx>
+#include <vcl/edit.hxx>
+
+#include <svtools/valueset.hxx>
+
+//------------------------------------------------------------------------
+
+class ScTabBgColorDlg : public ModalDialog
+{
+public:
+        ScTabBgColorDlg(    Window* pParent,
+                            const String& rTitle,
+                            const String& rTabBgColorNoColorText,
+                            const String& rNoTabBgColorText,
+                            const Color& rDefaultColor,
+                            ULONG nHelpId );
+        ~ScTabBgColorDlg();
+
+        void GetSelectedColor( Color& rColor ) const;
+private:
+        Control             aBorderWin;
+        ValueSet            aTabBgColorSet;
+        FixedLine           aTabBgColorBox;
+        /*PushButton          aTabBgColorMore;*/
+        OKButton            aBtnOk;
+        CancelButton        aBtnCancel;
+        HelpButton          aBtnHelp;
+        const String        aTabBgColorNoColorText;
+        const String        aTabBgColorMoreText;
+        Color               aTabBgColor;
+        ULONG               aHelpId;
+
+        void            FillColorValueSets_Impl();
+
+        DECL_LINK( TabBgColorSetHdl_Impl, ValueSet* );
+        /*DECL_LINK( TabBgColorMoreHdl_Impl, PushButton* pBtn );*/
+        DECL_LINK( TabBgColorOKHdl_Impl, OKButton* pBtn );
+};
+
+#endif // SC_TABBGCOLORDLG_HXX
diff --git sc/source/ui/inc/undotab.hxx sc/source/ui/inc/undotab.hxx
index c2d4eb9..af05ade 100644
--- sc/source/ui/inc/undotab.hxx
+++ sc/source/ui/inc/undotab.hxx
@@ -226,6 +226,31 @@ private:
 	void DoChange() const;
 };
 
+class ScUndoSetTabBgColor: public ScSimpleUndo
+{
+public:
+                    TYPEINFO();
+                    ScUndoSetTabBgColor(
+                            ScDocShell* pNewDocShell,
+                            SCTAB nT,
+                            const Color& aOTabBgColor,
+                            const Color& aNTabBgColor);
+    virtual         ~ScUndoSetTabBgColor();
+
+    virtual void    Undo();
+    virtual void    Redo();
+    virtual void    Repeat(SfxRepeatTarget& rTarget);
+    virtual BOOL    CanRepeat(SfxRepeatTarget& rTarget) const;
+
+virtual String	GetComment() const;
+
+private:
+    SCTAB   nTab;
+    Color   aOldTabBgColor;
+    Color   aNewTabBgColor;
+
+    void DoChange( SCTAB nTab, const Color& rTabBgColor ) const;
+};
 
 class ScUndoMakeScenario: public ScSimpleUndo
 {
diff --git sc/source/ui/inc/viewdata.hxx sc/source/ui/inc/viewdata.hxx
index afc4b75..27e6821 100644
--- sc/source/ui/inc/viewdata.hxx
+++ sc/source/ui/inc/viewdata.hxx
@@ -153,6 +153,9 @@ private:
 
 	BOOL			bOldCurValid;				// "virtuelle" Cursorpos. bei zusammengefassten
 
+    Color           aTabBgColor;
+    BOOL            IsDefaultTabBgColor() const {return aTabBgColor == Color( COL_AUTO ) ? TRUE : FALSE ;};
+
 					ScViewDataTable();
 					~ScViewDataTable();
 
@@ -287,6 +290,10 @@ public:
 	void			CopyTab( SCTAB nSrcTab, SCTAB nDestTab );
 	void			MoveTab( SCTAB nSrcTab, SCTAB nDestTab );
 
+    void            SetTabBgColor( Color rTabBgColor, SCTAB nTab );
+    BOOL            IsDefaultTabBgColor( SCTAB nTab ) const;
+    Color           GetTabBgColor( SCTAB nTab ) const;
+
 	SCTAB			GetRefTabNo() const 					{ return nRefTabNo; }
 	void			SetRefTabNo( SCTAB nNewTab )			{ nRefTabNo = nNewTab; }
 
diff --git sc/source/ui/inc/viewfunc.hxx sc/source/ui/inc/viewfunc.hxx
index 72e2d96..e886dac 100644
--- sc/source/ui/inc/viewfunc.hxx
+++ sc/source/ui/inc/viewfunc.hxx
@@ -276,6 +276,8 @@ public:
 									SCTAB nCount, const SCTAB* pSrcTabs,
 									BOOL bLink,SCTAB nTab);
 
+    BOOL            SetTabBgColor( const Color& rColor, SCTAB nTabNr );
+
 	void			InsertTableLink( const String& rFile,
 										const String& rFilter, const String& rOptions,
 										const String& rTabName );
diff --git sc/source/ui/miscdlgs/makefile.mk sc/source/ui/miscdlgs/makefile.mk
index 8fe1d6d..dc19c05 100644
--- sc/source/ui/miscdlgs/makefile.mk
+++ sc/source/ui/miscdlgs/makefile.mk
@@ -51,6 +51,7 @@ SLOFILES =  \
 	$(SLO)$/delcodlg.obj		\
 	$(SLO)$/inscodlg.obj		\
 	$(SLO)$/strindlg.obj		\
+    $(SLO)$/tabbgcolordlg.obj   \
 	$(SLO)$/mtrindlg.obj		\
 	$(SLO)$/lbseldlg.obj		\
 	$(SLO)$/filldlg.obj			\
diff --git sc/source/ui/miscdlgs/tabbgcolordlg.cxx sc/source/ui/miscdlgs/tabbgcolordlg.cxx
new file mode 100644
index 0000000..5e2be9b
--- /dev/null
+++ sc/source/ui/miscdlgs/tabbgcolordlg.cxx
@@ -0,0 +1,254 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: tabbgcolordlg.cxx,v $
+ * $Revision: 1.0 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sc.hxx"
+
+#undef SC_DLLIMPLEMENTATION
+
+//------------------------------------------------------------------
+
+#include <tools/debug.hxx>
+#include <tools/color.hxx>
+
+/// needed for color controls
+
+#include <sfx2/objsh.hxx>
+#include <svx/xtable.hxx>
+#include <svx/drawitem.hxx>
+#include <svtools/pathoptions.hxx>
+
+/// needed for the more button
+#include <vcl/button.hxx>
+/// needed for svcolordialog
+#include <svtools/colrdlg.hxx>
+#include <vcl/msgbox.hxx>
+
+#include <vcl/svapp.hxx>
+//#include <vcl/svdata.hxx>
+//#include <vcl/svdata.hxx>
+//#include <tools/resid.hxx>
+//#include <vcl/stdtext.hxx>
+//#include <vcl/svids.hrc>
+///
+
+/// needed for something...
+#include "tabbgcolordlg.hxx"
+#include "scresid.hxx"
+#include "miscdlgs.hrc"
+
+#include <svx/dialogs.hrc>
+
+#include <svx/svxitems.hrc>
+
+//==================================================================
+
+#define HDL(hdl) LINK(this,ScTabBgColorDlg,hdl)
+
+__EXPORT ScTabBgColorDlg::ScTabBgColorDlg( Window*         pParent,
+                                    const String&   rTitle,
+                                    const String&   rTabBgColorNoColorText,
+                                    const String&   rTabBgColorMoreText,
+                                    const Color&    rDefaultColor,
+                                    ULONG nHelpId ) :
+    ModalDialog    ( pParent, ScResId( RID_SCDLG_TAB_BG_COLOR ) ),
+    aBorderWin              ( this, ScResId( TAB_BG_COLOR_CT_BORDER ) ),
+    aTabBgColorSet          ( &aBorderWin, ScResId( TAB_BG_COLOR_SET_BGDCOLOR ) ),
+    aTabBgColorBox          ( this, ScResId( TAB_BG_COLOR_GB_BGDCOLOR ) ),
+/*    aTabBgColorMore         ( this, ScResId( TAB_BG_COLOR_BTN_MORE ) ),*/
+    aBtnOk                  ( this, ScResId( BTN_OK ) ),
+    aBtnCancel              ( this, ScResId( BTN_CANCEL ) ),
+    aBtnHelp                ( this, ScResId( BTN_HELP ) ),
+    aTabBgColorNoColorText  ( rTabBgColorNoColorText ),
+    aTabBgColorMoreText     ( rTabBgColorMoreText ),
+    aTabBgColor             ( rDefaultColor ),
+    aHelpId                 ( nHelpId )
+
+{
+    SetHelpId( nHelpId );
+    this->SetText( rTitle );
+    this->SetStyle(GetStyle() | WB_BORDER | WB_STDFLOATWIN | WB_3DLOOK | WB_DIALOGCONTROL | WB_SYSTEMWINDOW | WB_STANDALONE | WB_HIDE);
+    //TODO: Assign Help ID's to all controls...
+    /*aTabBgColorBox.SetText(rTitle);
+    WinBits nBits = ( aTabBgColorMore.GetStyle() | WB_3DLOOK | WB_CENTER | WB_VCENTER );
+    aTabBgColorMore.SetText( aTabBgColorMoreText ); 
+    aTabBgColorMore.SetStyle( nBits );*/
+    FillColorValueSets_Impl();
+    aTabBgColorSet.SetDoubleClickHdl( HDL(TabBgColorSetHdl_Impl) );
+    /*aTabBgColorMore.SetClickHdl( HDL(TabBgColorMoreHdl_Impl) );*/
+    aBtnOk.SetClickHdl( HDL(TabBgColorOKHdl_Impl) );
+    FreeResource();
+}
+
+//------------------------------------------------------------------------
+
+void ScTabBgColorDlg::GetSelectedColor( Color& rColor ) const
+{
+    rColor = aTabBgColor;
+}
+
+__EXPORT ScTabBgColorDlg::~ScTabBgColorDlg()
+{
+}
+
+void ScTabBgColorDlg::FillColorValueSets_Impl()
+{
+    SfxObjectShell* pDocSh = SfxObjectShell::Current();
+    const SfxPoolItem* pItem = NULL;
+    XColorTable* pColorTable = NULL;
+    const Size aSize15x15 = Size( 15, 15 );
+    const Size aSize10x10 = Size( 10, 10 );
+    const Size aSize5x5 = Size( 5, 5 );
+    USHORT nSelectedItem = 0;
+
+    FASTBOOL bOwn = FALSE;
+
+    DBG_ASSERT( pDocSh, "DocShell not found!" );
+
+    if ( pDocSh && ( 0 != ( pItem = pDocSh->GetItem( SID_COLOR_TABLE ) ) ) )
+        pColorTable = ( (SvxColorTableItem*)pItem )->GetColorTable();
+    if ( !pColorTable )
+    {
+        bOwn = TRUE;
+        pColorTable = new XColorTable( SvtPathOptions().GetPalettePath() );
+    }
+    if ( pColorTable )
+    {
+        short i = 0;
+        long nCount = pColorTable->Count();
+        XColorEntry* pEntry = NULL;
+        Color aColWhite( COL_WHITE );
+        String aStrWhite( ScResId( RID_SVXITEMS_COLOR_WHITE ) );
+        WinBits nBits = ( aTabBgColorSet.GetStyle() | WB_NAMEFIELD | WB_ITEMBORDER | WB_NONEFIELD | WB_3DLOOK | WB_NO_DIRECTSELECT ); //removed WB_NAMEFIELD, ...
+        aTabBgColorSet.SetText( aTabBgColorNoColorText );
+        aTabBgColorSet.SetStyle( nBits );
+        for ( i = 0; i < nCount; i++ )
+        {
+            pEntry = pColorTable->GetColor(i);
+            aTabBgColorSet.InsertItem( i + 1, pEntry->GetColor(), pEntry->GetName() );
+            if (pEntry->GetColor() == aTabBgColor)
+                nSelectedItem = (i + 1);
+        }
+
+        while ( i < 80 )
+        {
+            aTabBgColorSet.InsertItem( i + 1, aColWhite, aStrWhite );
+            i++;
+        }
+
+        if ( nCount > 80 )
+        {
+            aTabBgColorSet.SetStyle( nBits | WB_VSCROLL );
+        }
+
+    }
+    aTabBgColorSet.SetColCount( 10 );
+    aTabBgColorSet.SetLineCount( 10 );
+    aTabBgColorSet.CalcWindowSizePixel( aSize15x15 );
+    aTabBgColorSet.Format();
+    aTabBgColorSet.SelectItem(nSelectedItem);
+//    aTabBgColorSet.StartSelection();
+    aTabBgColorSet.Resize();
+    if ( bOwn )
+        delete pColorTable;
+}
+IMPL_LINK( ScTabBgColorDlg, TabBgColorSetHdl_Impl, ValueSet*, EMPTYARG )
+/*
+    Handler, called when color selection is changed
+*/
+{
+    USHORT nItemId = aTabBgColorSet.GetSelectItemId();
+    Color aColor = nItemId ? ( aTabBgColorSet.GetItemColor( nItemId ) ) : Color( COL_AUTO );
+    aTabBgColor = aColor;
+    EndDialog( TRUE );
+    return 0;
+}
+IMPL_LINK( ScTabBgColorDlg, TabBgColorOKHdl_Impl, OKButton*, EMPTYARG )
+{
+/*
+    Handler, called when the more button is pushed
+*/
+    USHORT nItemId = aTabBgColorSet.GetSelectItemId();
+    Color aColor = nItemId ? ( aTabBgColorSet.GetItemColor( nItemId ) ) : Color( COL_AUTO );
+    aTabBgColor = aColor;
+    EndDialog( TRUE );
+    return 0;
+}
+
+/*IMPL_LINK( ScTabBgColorDlg, TabBgColorMoreHdl_Impl, PushButton*, EMPTYARG )*/
+/*
+    Handler, called when the more button is pushed
+*/
+/*{
+    USHORT      nRet    = RET_OK;
+    BOOL bOwn = FALSE;
+    BOOL bInColorTable = FALSE;
+    SfxObjectShell* pDocSh = SfxObjectShell::Current();
+    const SfxPoolItem* pItem = NULL;
+    XColorTable* pColorTable = NULL;
+    XColorEntry* pEntry = NULL;
+
+    SvColorDialog* pColorDlg = new SvColorDialog( this );
+    pColorDlg->SetColor( aTabBgColor );
+    nRet = pColorDlg->Execute();
+    if( nRet == RET_OK )
+    {
+        aTabBgColor = pColorDlg->GetColor();
+        if ( pDocSh && ( 0 != ( pItem = pDocSh->GetItem( SID_COLOR_TABLE ) ) ) )
+            pColorTable = ( (SvxColorTableItem*)pItem )->GetColorTable();
+        if ( !pColorTable )
+        {
+            bOwn = TRUE;
+            pColorTable = new XColorTable( SvtPathOptions().GetPalettePath() );
+        }
+        if ( pColorTable )
+        {
+            short i = 0;
+            long nCount = pColorTable->Count();
+            for ( i = 0; i < nCount; i++ )
+            {
+                pEntry = pColorTable->GetColor(i);
+                if (pEntry->GetColor() == aTabBgColor){
+                    bInColorTable = TRUE;
+                    break;
+                }
+            }
+        }
+        if (!bInColorTable)
+        {
+            XColorEntry* pNewEntry = new XColorEntry(aTabBgColor, String::CreateFromAscii(""));
+            pColorTable->Insert( (pColorTable->Count()+1), pNewEntry );
+	    aTabBgColorSet.InsertItem( aTabBgColorSet.GetItemCount()+1, pNewEntry->GetColor(), pNewEntry->GetName() );
+	    aTabBgColorSet.SelectItem( aTabBgColorSet.GetItemCount() );
+        }
+        //EndDialog( TRUE );
+    }
+    return 0;
+}*/
diff --git sc/source/ui/src/globstr.src sc/source/ui/src/globstr.src
index 6912e7a..bf4a147 100644
--- sc/source/ui/src/globstr.src
+++ sc/source/ui/src/globstr.src
@@ -1134,6 +1134,10 @@ Resource RID_GLOBSTR
 	{
 		Text [ en-US ] = "Rename Sheet" ;
 	};
+    String STR_UNDO_SET_TAB_BG_COLOR
+    {
+        Text [ en-US ] = "Tab Color" ;
+    };
 	String STR_UNDO_MOVE_TAB
 	{
 		Text [ en-US ] = "Move Sheets" ;
diff --git sc/source/ui/src/miscdlgs.src sc/source/ui/src/miscdlgs.src
index fce9761..0575a23 100644
--- sc/source/ui/src/miscdlgs.src
+++ sc/source/ui/src/miscdlgs.src
@@ -546,6 +546,58 @@ ModalDialog RID_SCDLG_STRINPUT
         Size = MAP_APPFONT ( 110 , 8 ) ;
 	};
 };
+ModalDialog RID_SCDLG_TAB_BG_COLOR
+{
+    OutputSize = TRUE ;
+    SVLook = TRUE ;
+    Size = MAP_APPFONT ( 180 , 150 ) ;
+    Moveable = TRUE ;
+    Closeable = TRUE ;
+    Control TAB_BG_COLOR_CT_BORDER
+    {
+        Border = TRUE ;
+        Pos = MAP_APPFONT ( 1 , 1 ) ; //12, 32
+        Size = MAP_APPFONT ( 116+2 , 145+2 ) ;
+        DialogControl = TRUE;
+    };
+    Control TAB_BG_COLOR_SET_BGDCOLOR
+    {
+        /*HelpId = HID_BACKGROUND_CTL_BGDCOLORSET ;*/
+        Hide = FALSE ;
+        Pos = MAP_APPFONT ( 0 , 0 ) ;
+        Size = MAP_APPFONT ( 116 , 145 ) ;
+        TabStop = TRUE ;
+    };
+    /*PushButton TAB_BG_COLOR_BTN_MORE
+    {
+        Pos = MAP_APPFONT ( 34, 152 ) ;
+        Size = MAP_APPFONT ( 50 , 15 ) ;
+        //Text =  SCSTR_TAB_BG_COLOR_MORE;
+        TabStop = TRUE ;
+        DefButton = FALSE ;
+    };*/
+    OKButton BTN_OK
+    {
+        Pos = MAP_APPFONT ( 125 , 50 ) ;
+        Size = MAP_APPFONT ( 50 , 14 ) ;
+        TabStop = TRUE ;
+        DefButton = TRUE ;
+    };
+    CancelButton BTN_CANCEL
+    {
+        Pos = MAP_APPFONT ( 125 , 67 ) ;
+        Size = MAP_APPFONT ( 50 , 14 ) ;
+        TabStop = TRUE ;
+        DefButton = FALSE ;
+    };
+    HelpButton BTN_HELP
+    {
+        Pos = MAP_APPFONT ( 125 , 84 ) ;
+        Size = MAP_APPFONT ( 50 , 14 ) ;
+        TabStop = TRUE ;
+        DefButton = FALSE ;
+    };
+};
 /*
 ModalDialog RID_SCDLG_MTRINPUT
 {
diff --git sc/source/ui/src/popup.src sc/source/ui/src/popup.src
index 25cd641..6f23024 100644
--- sc/source/ui/src/popup.src
+++ sc/source/ui/src/popup.src
@@ -187,6 +187,15 @@ Menu RID_POPUP_TAB
 			HelpId = FID_TAB_RTL ;
 			Text [ en-US ] = "S~heet Right-To-Left" ;
 		};
+        //------------------------------
+        MenuItem { Separator = TRUE ; };
+        //------------------------------
+        MenuItem
+        {
+            Identifier = FID_TAB_MENU_SET_TAB_BG_COLOR ;
+            HelpId = FID_TAB_MENU_SET_TAB_BG_COLOR ;
+            Text [ en-US ] = "~Tab Color..." ;
+        };
 	};
 };
 
diff --git sc/source/ui/src/scstring.src sc/source/ui/src/scstring.src
index ed03d74..a9e9f4b 100644
--- sc/source/ui/src/scstring.src
+++ sc/source/ui/src/scstring.src
@@ -283,6 +283,18 @@ String SCSTR_RENAMETAB
 {
 	Text [ en-US ] = "Rename Sheet" ;
 };
+String SCSTR_SET_TAB_BG_COLOR
+{
+    Text [ en-US ] = "Tab Color" ;
+};
+String SCSTR_NO_TAB_BG_COLOR
+{
+    Text [ en-US ] = "No Tab Color" ;
+};
+String SCSTR_TAB_BG_COLOR_MORE
+{
+    Text [ en-US ] = "~More" ;
+};
 String SCSTR_RENAMEOBJECT
 {
 	Text [ en-US ] = "Name Object";
diff --git sc/source/ui/undo/undotab.cxx sc/source/ui/undo/undotab.cxx
index df3ab6f..bf389d2 100644
--- sc/source/ui/undo/undotab.cxx
+++ sc/source/ui/undo/undotab.cxx
@@ -70,6 +70,9 @@
 #include "drwlayer.hxx"
 #include "scresid.hxx"
 
+// for set tab bg color
+#include "viewdata.hxx"
+
 extern BOOL bDrawIsInUndo;			//! irgendwo als Member !!!
 
 using namespace com::sun::star;
@@ -93,6 +96,7 @@ TYPEINIT1(ScUndoScenarioFlags,	SfxUndoAction);
 TYPEINIT1(ScUndoRenameObject,	SfxUndoAction);
 TYPEINIT1(ScUndoLayoutRTL,		SfxUndoAction);
 TYPEINIT1(ScUndoSetGrammar,		SfxUndoAction);
+TYPEINIT1(ScUndoSetTabBgColor,  SfxUndoAction);
 
 
 // -----------------------------------------------------------------------
@@ -779,6 +783,68 @@ BOOL ScUndoCopyTab::CanRepeat(SfxRepeatTarget& /* rTarget */) const
 	return FALSE;
 }
 
+//---------------------------------------------------------------------------------
+//
+//      Tab Bg Color
+//
+
+ScUndoSetTabBgColor::ScUndoSetTabBgColor( ScDocShell* pNewDocShell,
+                                        SCTAB nT,
+                                        const Color& aOTabBgColor,
+                                        const Color& aNTabBgColor) :
+    ScSimpleUndo( pNewDocShell ),
+    nTab 	 ( nT )
+{
+    aOldTabBgColor = aOTabBgColor;
+    aNewTabBgColor = aNTabBgColor;
+}
+
+__EXPORT ScUndoSetTabBgColor::~ScUndoSetTabBgColor()
+{
+}
+
+String __EXPORT ScUndoSetTabBgColor::GetComment() const
+{
+    return ScGlobal::GetRscString( STR_UNDO_SET_TAB_BG_COLOR );
+}
+
+void ScUndoSetTabBgColor::DoChange( SCTAB nTabP, const Color& rTabBgColor ) const
+{
+    ScTabViewShell* pViewShell = ScTabViewShell::GetActiveViewShell();
+    if (pViewShell)
+    {
+        ScViewData* pViewData = pViewShell->GetViewData();
+        if (pViewData)
+        {
+            pViewData->SetTabBgColor( rTabBgColor, nTabP );
+            SFX_APP()->Broadcast( SfxSimpleHint( SC_HINT_TABLES_CHANGED ) );
+            pDocShell->PostPaintGridAll();
+            pDocShell->PostPaintExtras();
+            pDocShell->PostDataChanged();
+            pViewShell->UpdateInputHandler();
+        }
+    }
+}
+
+void __EXPORT ScUndoSetTabBgColor::Undo()
+{
+    DoChange(nTab, aOldTabBgColor);
+}
+
+void __EXPORT ScUndoSetTabBgColor::Redo()
+{
+    DoChange(nTab, aNewTabBgColor);
+}
+
+void __EXPORT ScUndoSetTabBgColor::Repeat(SfxRepeatTarget& /* rTarget */)
+{
+	//	No Repeat
+}
+
+BOOL __EXPORT ScUndoSetTabBgColor::CanRepeat(SfxRepeatTarget& /* rTarget */) const
+{
+    return FALSE;
+}
 
 // -----------------------------------------------------------------------
 //
diff --git sc/source/ui/view/scextopt.cxx sc/source/ui/view/scextopt.cxx
index 3ab9e7b..8ca5fc2 100644
--- sc/source/ui/view/scextopt.cxx
+++ sc/source/ui/view/scextopt.cxx
@@ -62,7 +62,8 @@ ScExtTabSettings::ScExtTabSettings() :
     mbSelected( false ),
     mbFrozenPanes( false ),
     mbPageMode( false ),
-    mbShowGrid( true )
+    mbShowGrid( true ),
+    maTabBgColor( COL_AUTO)
 {
 }
 
diff --git sc/source/ui/view/tabcont.cxx sc/source/ui/view/tabcont.cxx
index 5117f2b..c601ef3 100644
--- sc/source/ui/view/tabcont.cxx
+++ sc/source/ui/view/tabcont.cxx
@@ -68,6 +68,7 @@ ScTabControl::ScTabControl( Window* pParent, ScViewData* pData ) :
 	ScDocument* pDoc = pViewData->GetDocument();
 
 	String aString;
+    Color aTabBgColor;
 	SCTAB nCount = pDoc->GetTableCount();
 	for (SCTAB i=0; i<nCount; i++)
 	{
@@ -79,6 +80,12 @@ ScTabControl::ScTabControl( Window* pParent, ScViewData* pData ) :
 					InsertPage( static_cast<sal_uInt16>(i)+1, aString, TPB_SPECIAL );
 				else
 					InsertPage( static_cast<sal_uInt16>(i)+1, aString );
+                if ( !pViewData->IsDefaultTabBgColor(i) )
+                {
+                    aTabBgColor = pViewData->GetTabBgColor(i);
+                    /*SetTabBgColor(static_cast<sal_uInt16>(i)+1, aTabBgColor, pViewData->IsDefaultTabBgColor(i) );*/
+                    SetTabBgColor( static_cast<sal_uInt16>(i)+1, aTabBgColor );
+                }
 			}
 		}
 	}
@@ -259,6 +266,7 @@ void ScTabControl::Select()
 	rBind.Invalidate( FID_DELETE_TABLE );
 	rBind.Invalidate( FID_TABLE_SHOW );
 	rBind.Invalidate( FID_TABLE_HIDE );
+    rBind.Invalidate( FID_TAB_SET_TAB_BG_COLOR );
 
 		//	SetReference nur wenn der Konsolidieren-Dialog offen ist
 		//	(fuer Referenzen ueber mehrere Tabellen)
@@ -285,16 +293,22 @@ void ScTabControl::UpdateStatus()
 	SCTAB i;
 	String aString;
 	SCTAB nMaxCnt = Max( nCount, static_cast<SCTAB>(GetMaxId()) );
+    Color aTabBgColor;
 
 	BOOL bModified = FALSE;										// Tabellen-Namen
 	for (i=0; i<nMaxCnt && !bModified; i++)
 	{
 		if (pDoc->IsVisible(i))
+        {
 			pDoc->GetName(i,aString);
+            aTabBgColor = pViewData->GetTabBgColor(i);
+        }
 		else
+        {
 			aString.Erase();
+        }
 
-		if (GetPageText(static_cast<sal_uInt16>(i)+1) != aString)
+        if ( (GetPageText(static_cast<sal_uInt16>(i)+1) != aString) || (GetTabBgColor(static_cast<sal_uInt16>(i)+1) != aTabBgColor) )
 			bModified = TRUE;
 	}
 
@@ -311,6 +325,11 @@ void ScTabControl::UpdateStatus()
 						InsertPage( static_cast<sal_uInt16>(i)+1, aString, TPB_SPECIAL );
 					else
 						InsertPage( static_cast<sal_uInt16>(i)+1, aString );
+                    if ( !pViewData->IsDefaultTabBgColor(i) )
+                    {
+                        aTabBgColor = pViewData->GetTabBgColor(i);
+                        SetTabBgColor( static_cast<sal_uInt16>(i)+1, aTabBgColor );
+                    }
 				}
 			}
 		}
diff --git sc/source/ui/view/tabvwshf.cxx sc/source/ui/view/tabvwshf.cxx
index 6987883..dce02b8 100644
--- sc/source/ui/view/tabvwshf.cxx
+++ sc/source/ui/view/tabvwshf.cxx
@@ -60,6 +60,20 @@
 
 #include "scabstdlg.hxx" //CHINA001
 
+//TODO CLEANUP ADDED INCLUDES!!
+//#include <vcl/floatwin.hxx>
+#include "tabbgcolordlg.hxx" //DBW
+
+// TabBgColor -----------------------------------------------------------------
+//TODO Clean up includes...
+#include <svtools/colrdlg.hxx>
+#include <svx/svxdlg.hxx>
+#include <svx/colritem.hxx>
+#include <svx/brshitem.hxx>
+#include <svx/tbcontrl.hxx>
+
+// TabBgColor -----------------------------------------------------------------
+
 #define IS_AVAILABLE(WhichId,ppItem) \
     (pReqArgs->GetItemState((WhichId), TRUE, ppItem ) == SFX_ITEM_SET)
 
@@ -696,17 +710,127 @@ void ScTabViewShell::ExecuteTable( SfxRequest& rReq )
                 rBindings.Invalidate( FID_TAB_TOGGLE_GRID );
                 PaintGrid();
                 rReq.Done();
+			}
+			break;
+
+        case FID_TAB_SET_TAB_BG_COLOR:
+        case FID_TAB_MENU_SET_TAB_BG_COLOR:
+            {
+                if ( nSlot == FID_TAB_MENU_SET_TAB_BG_COLOR )
+                    nSlot = FID_TAB_SET_TAB_BG_COLOR;
+
+                SCTAB nTabNr = pViewData->GetTabNo();
+                ScMarkData& rMark = pViewData->GetMarkData();
+                SCTAB nTabSelCount = rMark.GetSelectCount();
+
+                if ( !pDoc->IsDocEditable() )
+                    break;
+
+                if ( pDoc->IsTabProtected( nTabNr ) ) // ||nTabSelCount > 1
+                    break;
+
+                if( pReqArgs != NULL )
+                {
+                    BOOL                bDone = FALSE;
+                    const SfxPoolItem*  pItem;
+                    Color               aColor;
+                    if( IS_AVAILABLE( FN_PARAM_1, &pItem ) )
+                        nTabNr = ((const SfxUInt16Item*)pItem)->GetValue();
+
+                    if( IS_AVAILABLE( nSlot, &pItem ) )
+                        aColor = ((const SvxColorItem*)pItem)->GetValue();
+
+                    if ( nTabSelCount > 1 )
+                    {
+                        for (SCTAB nTab=0; nTab<nTabCount; nTab++)
+                        {
+                            if ( rMark.GetTableSelect(nTab) )
+                            {
+                                bDone = SetTabBgColor( aColor, nTab );
+                                if (!bDone)
+                                    break;
+                            }
+                        }
+                    }
+                    else
+                    {
+                        bDone = SetTabBgColor( aColor, nCurrentTab ); //ScViewFunc.SetTabBgColor
+                    }
+                    if( bDone )
+                    {
+                        rReq.Done( *pReqArgs );
+                    }
+                }
+                else
+                {
+                    USHORT      nRet    = RET_OK; /// temp
+                    BOOL        bDone   = FALSE; /// temp
+                    //TODO Create Error string Resource...
+                    String      aErrMsg = String::CreateFromAscii("Error selecting the color...");
+                    Color       aTabBgColor;
+                    Color       aNewTabBgColor;
+
+                    aTabBgColor = pViewData->GetTabBgColor( nCurrentTab );
+
+                    ScAbstractDialogFactory* pFact = ScAbstractDialogFactory::Create();
+                    DBG_ASSERT(pFact, "ScAbstractFactory create fail!");
+
+                    AbstractScTabBgColorDlg* pDlg = pFact->CreateScTabBgColorDlg(
+                                                                GetDialogParent(),
+                                                                String(ScResId(SCSTR_SET_TAB_BG_COLOR)),
+                                                                String(ScResId(SCSTR_NO_TAB_BG_COLOR)),
+                                                                String(ScResId(SCSTR_TAB_BG_COLOR_MORE)),
+                                                                aTabBgColor,
+                                                                nSlot,RID_SCDLG_TAB_BG_COLOR);
+
+                    while ( !bDone && nRet == RET_OK )
+                    {
+                        nRet = pDlg->Execute();
+                        if( nRet == RET_OK )
+                        {
+                            Color aSelectedColor;
+                            pDlg->GetSelectedColor(aSelectedColor);
+                            for  (SCTAB nTab=0; nTab<nTabCount; nTab++)
+                            {
+                                if ( rMark.GetTableSelect(nTab) )
+                                {
+                                    bDone = SetTabBgColor( aSelectedColor, nTab );
+                                    if (!bDone)
+                                        break;
+                                }
+                            }
+                            if ( bDone )
+                            {
+                                rReq.AppendItem( SvxColorItem( aTabBgColor, nSlot ) );
+                                rReq.Done();
+                            }
+                            else
+                            {
+                                if( rReq.IsAPI() )
+                                {
+                                    StarBASIC::Error( SbERR_SETPROP_FAILED );
+                                }
+                                else
+                                {
+                                    nRet = ErrorBox(GetDialogParent(),
+                                                    WinBits( WB_OK | WB_DEF_OK ),
+                                                    aErrMsg).Execute();
+                                }
+                            }
+                        }
+                    }
+                    delete( pDlg );
+                }
             }
             break;
 
-		default:
-			DBG_ERROR("Unbekannte Message bei ViewShell");
-			break;
-	}
+        default:
+            DBG_ERROR("Unbekannte Message bei ViewShell");
+            break;
+    }
 }
 
 //------------------------------------------------------------------
-
 void ScTabViewShell::GetStateTable( SfxItemSet& rSet )
 {
 	ScViewData* pViewData	= GetViewData();
@@ -821,6 +945,22 @@ void ScTabViewShell::GetStateTable( SfxItemSet& rSet )
             case FID_TAB_TOGGLE_GRID:
                 rSet.Put( SfxBoolItem(nWhich, pViewData->GetShowGrid()) );
                 break;
+
+            case FID_TAB_MENU_SET_TAB_BG_COLOR:
+                {
+                    if ( !pDoc->IsDocEditable() ||
+                            pDoc->IsTabProtected(nTab) || 
+                            ( pDocShell && pDocShell->IsDocShared() ) )
+                        rSet.DisableItem( nWhich );
+                    break;
+                }
+            case FID_TAB_SET_TAB_BG_COLOR:
+                {
+                    Color aColor;
+                    aColor = pViewData->GetTabBgColor( nTab );
+                    rSet.Put( SvxColorItem( aColor, nWhich ) );
+                }
+                break;
 		}
 		nWhich = aIter.NextWhich();
 	}
diff --git sc/source/ui/view/viewdata.cxx sc/source/ui/view/viewdata.cxx
index bba31fc..bfad0ba 100644
--- sc/source/ui/view/viewdata.cxx
+++ sc/source/ui/view/viewdata.cxx
@@ -105,7 +105,8 @@ ScViewDataTable::ScViewDataTable() :
 				nCurX( 0 ),
 				nCurY( 0 ),
                 bShowGrid( true ),
-                bOldCurValid( FALSE )
+                bOldCurValid( FALSE ),
+                aTabBgColor( Color(COL_AUTO) )
 {
 	nPosX[0]=nPosX[1]=0;
 	nPosY[0]=nPosY[1]=0;
@@ -168,6 +169,13 @@ void ScViewDataTable::WriteUserDataSequence(uno::Sequence <beans::PropertyValue>
         pSettings[SC_TABLE_SHOWGRID].Name = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(SC_UNO_SHOWGRID));
         pSettings[SC_TABLE_SHOWGRID].Value <<= static_cast<sal_Bool>(bShowGrid);
 
+        if ( !IsDefaultTabBgColor() )
+        {
+            pSettings[SC_TABLE_TAB_BG_COLOR].Name = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(SC_UNO_TABCOLOR));
+            pSettings[SC_TABLE_TAB_BG_COLOR].Value <<= static_cast<sal_Int32>(aTabBgColor.GetColor());
+        }
+
+
 //        pSettings[SC_TABLE_SELECTED].Name = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(SC_TABLESELECTED));
 //        pSettings[SC_TABLE_SELECTED].Value <<= bool(rViewData.GetMarkData().GetTableSelect( nTab ));
 	}
@@ -284,6 +292,13 @@ void ScViewDataTable::ReadUserDataSequence(const uno::Sequence <beans::PropertyV
             aSettings[i].Value >>= bSelected;
             rViewData.GetMarkData().SelectTable( nTab, bSelected );
         }
+        else if (sName.compareToAscii(SC_UNO_TABCOLOR) == 0)
+        {
+            sal_Int32 nColor = COL_AUTO;
+            aSettings[i].Value >>= nColor;
+            if (nColor != COL_AUTO)
+                aTabBgColor.SetColor(static_cast<ColorData>(nColor));
+        }
 	}
 	if (eHSplitMode == SC_SPLIT_FIX)
 		nFixPosX = SanitizeCol( static_cast<SCCOL>( bHasHSplitInTwips ? nTempPosHTw : nTempPosH ));
@@ -589,6 +604,36 @@ void ScViewData::MoveTab( SCTAB nSrcTab, SCTAB nDestTab )
 	aMarkData.InsertTab( nInsTab );			// ggf. angepasst
 }
 
+void ScViewData::SetTabBgColor( Color rTabBgColor, SCTAB nTab )
+{
+    if ( rTabBgColor != Color(COL_AUTO) )
+    {
+        if ( !pTabData[nTab] )
+            CreateTabData( nTab );
+        pTabData[nTab]->aTabBgColor = rTabBgColor;
+    }
+    else
+    {
+        if ( pTabData[nTab] )
+            pTabData[nTab]->aTabBgColor = Color( COL_AUTO );
+    }
+}
+
+Color ScViewData::GetTabBgColor( SCTAB nTab ) const
+{
+    if ( !pTabData[nTab] )
+        return Color(COL_AUTO);
+    return pTabData[nTab]->aTabBgColor;
+}
+
+BOOL ScViewData::IsDefaultTabBgColor( SCTAB nTab ) const
+{
+    if ( !pTabData[nTab] )
+        return true;
+    BOOL bResult = pTabData[nTab]->aTabBgColor==Color( COL_AUTO ) ? TRUE : FALSE;
+    return bResult;
+}
+
 //UNUSED2008-05  void ScViewData::UpdateOle( ScSplitPos /* eWhich */ )
 //UNUSED2008-05  {
 //UNUSED2008-05      GetDocShell()->UpdateOle(this);
@@ -2477,6 +2522,9 @@ void ScViewData::WriteExtOptions( ScExtDocOptions& rDocOpt ) const
             rTabSett.mbPageMode = bPagebreak;
             rTabSett.mnNormalZoom = static_cast< long >( pViewTab->aZoomY * Fraction( 100.0 ) );
             rTabSett.mnPageZoom = static_cast< long >( pViewTab->aPageZoomY * Fraction( 100.0 ) );
+
+            // Tab Bg Color
+            rTabSett.maTabBgColor = pViewTab->aTabBgColor;
 		}
 	}
 }
@@ -2633,6 +2681,10 @@ void ScViewData::ReadExtOptions( const ScExtDocOptions& rDocOpt )
                     update map modes that are needed to draw text correctly. */
                 SetPagebreakMode( rTabSett.mbPageMode );
             }
+
+            // Tab Bg Color
+            if( !rTabSett.IsDefaultTabBgColor() )
+                rViewTab.aTabBgColor = rTabSett.maTabBgColor;
 		}
 	}
 
diff --git sc/source/ui/view/viewfun2.cxx sc/source/ui/view/viewfun2.cxx
index 30f3976..badc96f 100644
--- sc/source/ui/view/viewfun2.cxx
+++ sc/source/ui/view/viewfun2.cxx
@@ -2271,6 +2271,20 @@ BOOL ScViewFunc::RenameTable( const String& rName, SCTAB nTab )
 
 //----------------------------------------------------------------------------
 
+BOOL ScViewFunc::SetTabBgColor( const Color& rColor, SCTAB nTab )
+{
+    //TODO Make sure this is passing the correct values...
+    BOOL bSuccess = GetViewData()->GetDocShell()->GetDocFunc().SetTabBgColor( nTab, rColor, TRUE, FALSE );
+    if (bSuccess)
+    {
+        GetViewData()->GetViewShell()->UpdateInputHandler();
+    }
+    return bSuccess;
+}
+
+
+//----------------------------------------------------------------------------
+
 void ScViewFunc::InsertAreaLink( const String& rFile,
 									const String& rFilter, const String& rOptions,
 									const String& rSource, ULONG nRefresh )
diff --git sc/uiconfig/scalc/menubar/menubar.xml sc/uiconfig/scalc/menubar/menubar.xml
index 7c95dda..322d448 100644
--- sc/uiconfig/scalc/menubar/menubar.xml
+++ sc/uiconfig/scalc/menubar/menubar.xml
@@ -214,6 +214,8 @@
                     <menu:menuitem menu:id=".uno:Hide"/>
                     <menu:menuitem menu:id=".uno:Show"/>
                     <menu:menuitem menu:id=".uno:SheetRightToLeft"/>
+                    <menu:menuseparator/>
+                    <menu:menuitem menu:id=".uno:SetTabBgColor"/>
                 </menu:menupopup>
             </menu:menu>
             <menu:menu menu:id=".uno:MergeCellsMenu">
diff --git sc/util/makefile.mk sc/util/makefile.mk
index 982d458..564882f 100644
--- sc/util/makefile.mk
+++ sc/util/makefile.mk
@@ -261,6 +261,7 @@ LIB8OBJFILES = \
 		$(SLO)$/attrdlg.obj	\
 		$(SLO)$/scuiimoptdlg.obj	\
 		$(SLO)$/strindlg.obj		\
+        $(SLO)$/tabbgcolordlg.obj   \
 		$(SLO)$/shtabdlg.obj		\
 		$(SLO)$/scendlg.obj		\
 		$(SLO)$/pvfundlg.obj	\
