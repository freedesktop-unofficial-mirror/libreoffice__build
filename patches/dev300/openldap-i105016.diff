Index: extensions/source/config/ldap/wrapldapinclude.hxx
===================================================================
--- extensions/source/config/ldap/wrapldapinclude.hxx	(revision 276155)
+++ extensions/source/config/ldap/wrapldapinclude.hxx	(working copy)
@@ -35,6 +35,12 @@
 
 #ifdef WITH_OPENLDAP
 #include <ldap.h>
+#ifndef LDAP_API
+#    define LDAP_API(rt) rt
+#endif
+#ifndef LDAP_CALL
+#    define LDAP_CALL
+#endif
 #else
 #ifndef LDAP_INCLUDED
 #define LDAP_INCLUDED
Index: extensions/source/config/ldap/ldapaccess.cxx
===================================================================
--- extensions/source/config/ldap/ldapaccess.cxx	(revision 276155)
+++ extensions/source/config/ldap/ldapaccess.cxx	(working copy)
@@ -315,14 +315,17 @@
     if ( !s_Ldap_Module )
     {
 #if defined(WIN) || defined(WNT)
-        const ::rtl::OUString sModuleName(RTL_CONSTASCII_USTRINGPARAM("nsldap32v50.dll"));
+#       define LIBLDAP "nsldap32v50.dll"
 #else
-#ifdef WITH_OPENLDAP
-        const ::rtl::OUString sModuleName(RTL_CONSTASCII_USTRINGPARAM("libldap.so"));
-#else
-        const ::rtl::OUString sModuleName(RTL_CONSTASCII_USTRINGPARAM("libldap50.so"));
+#   ifdef WITH_OPENLDAP
+#       define xstr(s) str(s)
+#       define str(s) #s
+#       define LIBLDAP "libldap-" xstr(LDAP_VENDOR_VERSION_MAJOR) "." xstr(LDAP_VENDOR_VERSION_MINOR) ".so." xstr(LDAP_VENDOR_VERSION_MAJOR)
+#   else
+#       define LIBLDAP "libldap50.so"
+#   endif
 #endif
-#endif
+        const ::rtl::OUString sModuleName(RTL_CONSTASCII_USTRINGPARAM(LIBLDAP));
 
 		// load the dbtools library
 		s_Ldap_Module = osl_loadModuleRelative(&thisModule, sModuleName.pData, 0);
