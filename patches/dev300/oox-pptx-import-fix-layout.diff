diff -rup ../../build-orig/ooo310-m10/oox/inc/oox/ppt/pptshape.hxx oox/inc/oox/ppt/pptshape.hxx
--- ../../build-orig/ooo310-m10/oox/inc/oox/ppt/pptshape.hxx	2008-04-10 16:45:28.000000000 +0200
+++ oox/inc/oox/ppt/pptshape.hxx	2009-04-24 12:33:35.000000000 +0200
@@ -64,9 +64,11 @@ public:
 	ShapeLocation getShapeLocation() const { return meShapeLocation; };
 	sal_Bool isReferenced() const { return mbReferenced; };
 	void setReferenced( sal_Bool bReferenced ){ mbReferenced = bReferenced; };
+        void setPlaceholder( oox::drawingml::ShapePtr pPlaceholder ) { mpPlaceholder = pPlaceholder; }
 
 protected:
 
+        oox::drawingml::ShapePtr mpPlaceholder;
 };
 
 } }
diff -rup ../../build-orig/ooo310-m10/oox/source/ppt/pptshapecontext.cxx oox/source/ppt/pptshapecontext.cxx
--- ../../build-orig/ooo310-m10/oox/source/ppt/pptshapecontext.cxx	2009-04-24 13:53:44.000000000 +0200
+++ oox/source/ppt/pptshapecontext.cxx	2009-04-24 12:37:44.000000000 +0200
@@ -203,6 +203,7 @@ Reference< XFastContextHandler > PPTShap
 				    PPTShape* pPPTShape = dynamic_cast< PPTShape* >( pPlaceholder.get() );
 				    if ( pPPTShape )
 					pPPTShape->setReferenced( sal_True );
+				    pPPTShapePtr->setPlaceholder( pPlaceholder );
 				}
 			}
 		}
diff -rup ../../build-orig/ooo310-m10/oox/source/ppt/pptshape.cxx oox/source/ppt/pptshape.cxx
--- ../../build-orig/ooo310-m10/oox/source/ppt/pptshape.cxx	2009-04-24 13:53:45.000000000 +0200
+++ oox/source/ppt/pptshape.cxx	2009-04-24 12:38:41.000000000 +0200
@@ -31,6 +31,7 @@
 #include "oox/ppt/pptshape.hxx"
 #include "oox/core/namespaces.hxx"
 #include "oox/core/xmlfilterbase.hxx"
+#include "oox/drawingml/textbody.hxx"
 #include "tokens.hxx"
 
 #include <com/sun/star/container/XNamed.hpp>
@@ -43,6 +44,7 @@
 
 using rtl::OUString;
 using namespace ::oox::core;
+using namespace ::oox::drawingml;
 using namespace ::com::sun::star;
 using namespace ::com::sun::star::awt;
 using namespace ::com::sun::star::uno;
@@ -158,7 +160,19 @@ void PPTShape::addShape(
 			// use style from master slide for placeholders only, otherwise use slide's style, which might be the default style from presentation
 			if ( !aMasterTextListStyle.get() )
 			        aMasterTextListStyle = ( mnSubType && rSlidePersist.getMasterPersist().get() ) ? rSlidePersist.getMasterPersist()->getOtherTextStyle() : rSlidePersist.getOtherTextStyle();
-			setMasterTextListStyle( aMasterTextListStyle );
+
+			if( aMasterTextListStyle.get() && getTextBody().get() ) {
+			    TextListStylePtr aCombinedTextListStyle (new TextListStyle());
+
+			    aCombinedTextListStyle->apply( *aMasterTextListStyle.get() );
+
+			    if( mpPlaceholder.get() && mpPlaceholder->getTextBody().get() )
+				aCombinedTextListStyle->apply( mpPlaceholder->getTextBody()->getTextListStyle() );
+ 			    aCombinedTextListStyle->apply( getTextBody()->getTextListStyle() );
+
+			    setMasterTextListStyle( aCombinedTextListStyle );
+			} else
+			    setMasterTextListStyle( aMasterTextListStyle );
 
             Reference< XShape > xShape( createAndInsert( rFilterBase, sServiceName, rxTheme, rxShapes, pShapeRect ) );
 
