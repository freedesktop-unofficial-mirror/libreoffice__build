---
 filter/source/graphicfilter/eps/eps.cxx |   14 +++++++++++++-
 1 files changed, 13 insertions(+), 1 deletions(-)

diff --git filter/source/graphicfilter/eps/eps.cxx filter/source/graphicfilter/eps/eps.cxx
index 4cf73f0..499fc6c 100644
--- filter/source/graphicfilter/eps/eps.cxx
+++ filter/source/graphicfilter/eps/eps.cxx
@@ -293,7 +293,11 @@ BOOL PSWriter::WritePS( const Graphic& rGraphic, SvStream& rTargetStream, Filter
     // default values for the dialog options
     mnLevel = 2;
     mbGrayScale = FALSE;
+#ifdef UNX // don't compress by default on unix as ghostscript is unable to read LZW compressed eps
+    mbCompression = FALSE;
+#else
     mbCompression = TRUE;
+#endif
     mnTextMode = 0;			// default0 : export glyph outlines
 
     // try to get the dialog selection
@@ -310,12 +314,20 @@ BOOL PSWriter::WritePS( const Graphic& rGraphic, SvStream& rTargetStream, Filter
             String aVersionStr( RTL_CONSTASCII_USTRINGPARAM( "Version" ) );
             String aColorStr( RTL_CONSTASCII_USTRINGPARAM( "ColorFormat" ) );   
             String aComprStr( RTL_CONSTASCII_USTRINGPARAM( "CompressionMode" ) );
+#ifdef UNX // don't put binary tiff preview ahead of postscript code by default on unix as ghostscript is unable to read it
+            mnPreview = pFilterConfigItem->ReadInt32( aPreviewStr, 0 );
+#else
             mnPreview = pFilterConfigItem->ReadInt32( aPreviewStr, 1 );
+#endif
             mnLevel = pFilterConfigItem->ReadInt32( aVersionStr, 2 );
             if ( mnLevel != 1 )
                 mnLevel = 2;
             mbGrayScale = pFilterConfigItem->ReadInt32( aColorStr, 1 ) == 2;
-            mbCompression = pFilterConfigItem->ReadInt32( aComprStr, 1 ) == 1;	
+#ifdef UNX // don't compress by default on unix as ghostscript is unable to read LZW compressed eps
+            mbCompression = pFilterConfigItem->ReadInt32( aComprStr, 0 ) != 0;
+#else
+            mbCompression = pFilterConfigItem->ReadInt32( aComprStr, 1 ) == 1;
+#endif
             String sTextMode( RTL_CONSTASCII_USTRINGPARAM( "TextMode" ) );
             mnTextMode = pFilterConfigItem->ReadInt32( sTextMode, 0 );
             if ( mnTextMode > 2 )
-- 
1.7.0.1

