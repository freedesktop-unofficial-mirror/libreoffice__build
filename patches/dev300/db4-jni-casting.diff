Index: db-4.2.52.patch
===================================================================
RCS file: /cvs/external/berkeleydb/db-4.2.52.patch,v
retrieving revision 1.22.6.1
diff -u -u -r1.22.6.1 db-4.2.52.patch
--- berkeleydb/db-4.2.52.patch	25 Oct 2007 14:01:17 -0000	1.22.6.1
+++ berkeleydb/db-4.2.52.patch	3 Nov 2007 12:41:36 -0000
@@ -2221,3 +2221,3536 @@
 ! 			$(SLO)$/xa_map.obj
 ! 
 ! .INCLUDE :  target.mk
+*** misc/db-4.2.52.NC/libdb_java/db_java_wrap.c	2003-12-03 16:10:36.000000000 -0500
+--- misc/build/db-4.2.52.NC/libdb_java/db_java_wrap.c	2005-05-23 14:54:42.000000000 -0400
+***************
+*** 371,377 ****
+  	memset(lsn_copy, 0, sizeof(DB_LSN));
+  	*lsn_copy = *lsn;
+  	/* Magic to convert a pointer to a long - must match SWIG */
+! 	*(DB_LSN **)&jptr = lsn_copy;
+  	return (*jenv)->NewObject(jenv, dblsn_class, dblsn_construct,
+  	    jptr, JNI_TRUE);
+  }
+--- 371,378 ----
+  	memset(lsn_copy, 0, sizeof(DB_LSN));
+  	*lsn_copy = *lsn;
+  	/* Magic to convert a pointer to a long - must match SWIG */
+! 	jptr = (intptr_t) lsn_copy;
+! /*	*(DB_LSN **)&jptr = lsn_copy; */
+  	return (*jenv)->NewObject(jenv, dblsn_class, dblsn_construct,
+  	    jptr, JNI_TRUE);
+  }
+***************
+*** 632,638 ****
+  	int completed;
+  
+  	COMPQUIET(jcls, NULL);
+! 	dbenv = *(DB_ENV **)&jdbenvp;
+  	jdbenv = (jobject)DB_ENV_INTERNAL(dbenv);
+  
+  	if (dbenv == NULL) {
+--- 633,640 ----
+  	int completed;
+  
+  	COMPQUIET(jcls, NULL);
+! 	dbenv = (DB_ENV *)((intptr_t)jdbenvp);
+! /*	dbenv = *(DB_ENV **)&jdbenvp; */
+  	jdbenv = (jobject)DB_ENV_INTERNAL(dbenv);
+  
+  	if (dbenv == NULL) {
+***************
+*** 701,707 ****
+  				    "DbLockRequest lock field is NULL", NULL, jdbenv);
+  				goto out2;
+  			}
+! 			lockp = *(DB_LOCK **)&jlockp;
+  			prereq->lock = *lockp;
+  			break;
+  		case DB_LOCK_PUT_ALL:
+--- 703,710 ----
+  				    "DbLockRequest lock field is NULL", NULL, jdbenv);
+  				goto out2;
+  			}
+! 			lockp = (DB_LOCK *)((intptr_t)jlockp);
+! /*			lockp = *(DB_LOCK **)&jlockp; */
+  			prereq->lock = *lockp;
+  			break;
+  		case DB_LOCK_PUT_ALL:
+***************
+*** 745,751 ****
+  			    lockreq_lock_fid);
+  			jlockp = (*jenv)->GetLongField(jenv, jlock,
+  			    lock_cptr_fid);
+! 			lockp = *(DB_LOCK **)&jlockp;
+  			__os_free(NULL, lockp);
+  			(*jenv)->SetLongField(jenv, jlock, lock_cptr_fid,
+  			    (jlong)0);
+--- 748,755 ----
+  			    lockreq_lock_fid);
+  			jlockp = (*jenv)->GetLongField(jenv, jlock,
+  			    lock_cptr_fid);
+! 			lockp = (DB_LOCK *)((intptr_t)jlockp);
+! /*			lockp = *(DB_LOCK **)&jlockp; */
+  			__os_free(NULL, lockp);
+  			(*jenv)->SetLongField(jenv, jlock, lock_cptr_fid,
+  			    (jlong)0);
+***************
+*** 763,769 ****
+  			}
+  
+  			*lockp = lockreq[i].lock;
+! 			*(DB_LOCK **)&jlockp = lockp;
+  
+  			jlockreq = (*jenv)->GetObjectArrayElement(jenv,
+  			    list, i + offset);
+--- 767,774 ----
+  			}
+  
+  			*lockp = lockreq[i].lock;
+! 			jlockp = (intptr_t)lockp;
+! /*			*(DB_LOCK **)&jlockp = lockp; */
+  
+  			jlockreq = (*jenv)->GetObjectArrayElement(jenv,
+  			    list, i + offset);
+***************
+*** 1194,1200 ****
+  
+  JNIEXPORT jobject JNICALL Java_com_sleepycat_db_db_1javaJNI_initDbEnvRef0(
+      JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg2) {
+! 	DB_ENV *self = *(DB_ENV **)&jarg1;
+  	COMPQUIET(jcls, NULL);
+  
+  	DB_ENV_INTERNAL(self) = (void *)(*jenv)->NewGlobalRef(jenv, jarg2);
+--- 1199,1206 ----
+  
+  JNIEXPORT jobject JNICALL Java_com_sleepycat_db_db_1javaJNI_initDbEnvRef0(
+      JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg2) {
+! 	DB_ENV *self = (DB_ENV *)((intptr_t)jarg1);
+! /*	DB_ENV *self = *(DB_ENV **)&jarg1; */
+  	COMPQUIET(jcls, NULL);
+  
+  	DB_ENV_INTERNAL(self) = (void *)(*jenv)->NewGlobalRef(jenv, jarg2);
+***************
+*** 1204,1210 ****
+  
+  JNIEXPORT jobject JNICALL Java_com_sleepycat_db_db_1javaJNI_initDbRef0(
+      JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg2) {
+! 	DB *self = *(DB **)&jarg1;
+  	COMPQUIET(jcls, NULL);
+  
+  	DB_INTERNAL(self) = (void *)(*jenv)->NewGlobalRef(jenv, jarg2);
+--- 1210,1217 ----
+  
+  JNIEXPORT jobject JNICALL Java_com_sleepycat_db_db_1javaJNI_initDbRef0(
+      JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg2) {
+! 	DB *self = (DB *)((intptr_t)jarg1);
+! /*	DB *self = *(DB **)&jarg1; */
+  	COMPQUIET(jcls, NULL);
+  
+  	DB_INTERNAL(self) = (void *)(*jenv)->NewGlobalRef(jenv, jarg2);
+***************
+*** 1221,1227 ****
+  
+  JNIEXPORT jobject JNICALL Java_com_sleepycat_db_db_1javaJNI_getDbRef0(
+      JNIEnv *jenv, jclass jcls, jlong jarg1) {
+! 	DB *self = *(DB **)&jarg1;
+  	COMPQUIET(jcls, NULL);
+  	COMPQUIET(jenv, NULL);
+  
+--- 1228,1235 ----
+  
+  JNIEXPORT jobject JNICALL Java_com_sleepycat_db_db_1javaJNI_getDbRef0(
+      JNIEnv *jenv, jclass jcls, jlong jarg1) {
+! 	DB *self = (DB *)((intptr_t)jarg1);
+! /*	DB *self = *(DB **)&jarg1; */
+  	COMPQUIET(jcls, NULL);
+  	COMPQUIET(jenv, NULL);
+  
+***************
+*** 1230,1242 ****
+  
+  JNIEXPORT jlong JNICALL Java_com_sleepycat_db_db_1javaJNI_getDbEnv0(
+      JNIEnv *jenv, jclass jcls, jlong jarg1) {
+! 	DB *self = *(DB **)&jarg1;
+  	jlong env_cptr;
+  
+  	COMPQUIET(jenv, NULL);
+  	COMPQUIET(jcls, NULL);
+  
+! 	*(DB_ENV **)&env_cptr = self->dbenv;
+  	return env_cptr;
+  }
+  
+--- 1238,1252 ----
+  
+  JNIEXPORT jlong JNICALL Java_com_sleepycat_db_db_1javaJNI_getDbEnv0(
+      JNIEnv *jenv, jclass jcls, jlong jarg1) {
+! 	DB *self = (DB *)((intptr_t)jarg1);
+! /*	DB *self = *(DB **)&jarg1; */
+  	jlong env_cptr;
+  
+  	COMPQUIET(jenv, NULL);
+  	COMPQUIET(jcls, NULL);
+  
+! 	env_cptr = (jlong)((intptr_t)(self->dbenv));
+! /*	*(DB_ENV **)&env_cptr = self->dbenv; */
+  	return env_cptr;
+  }
+  
+***************
+*** 1997,2003 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(DB_ENV **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      errno = 0;
+--- 2007,2014 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (DB_ENV *)((intptr_t)jarg1);
+! /*    arg1 = *(DB_ENV **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      errno = 0;
+***************
+*** 2006,2012 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, JDBENV);
+      
+!     *(struct __db **)&jresult = result; 
+      return jresult;
+  }
+  
+--- 2017,2024 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, JDBENV);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(struct __db **)&jresult = result; */
+      return jresult;
+  }
+  
+***************
+*** 2021,2029 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+!     arg3 = *(DB **)&jarg3; 
+      
+      arg4 = (jarg4 == NULL) ? NULL : __dbj_seckey_create;
+      
+--- 2033,2044 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+!     arg3 = (DB *)((intptr_t)jarg3);
+! /*    arg3 = *(DB **)&jarg3; */
+      
+      arg4 = (jarg4 == NULL) ? NULL : __dbj_seckey_create;
+      
+***************
+*** 2051,2057 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 2066,2073 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 2080,2087 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+      if (jarg1 == 0) {
+--- 2096,2105 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      arg3 = (u_int32_t)jarg3; 
+      
+      if (jarg1 == 0) {
+***************
+*** 2096,2102 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, DB2JDBENV);
+      
+!     *(DBC **)&jresult = result; 
+      return jresult;
+  }
+  
+--- 2114,2121 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, DB2JDBENV);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(DBC **)&jresult = result; */
+      return jresult;
+  }
+  
+***************
+*** 2112,2119 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+--- 2131,2140 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+***************
+*** 2147,2153 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (int)jarg2; 
+      {
+          arg3 = 0;
+--- 2168,2175 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (int)jarg2; 
+      {
+          arg3 = 0;
+***************
+*** 2176,2182 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 2198,2205 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 2211,2218 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+--- 2234,2243 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+***************
+*** 2254,2260 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2279,2286 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2282,2288 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2308,2315 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2308,2314 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2335,2342 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2334,2340 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2362,2369 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2362,2368 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2391,2398 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2390,2396 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2420,2427 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2416,2422 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2447,2454 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2442,2448 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2474,2481 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2468,2474 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2501,2508 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2482,2488 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, DB2JDBENV);
+      
+!     *(DB_MPOOLFILE **)&jresult = result; 
+      return jresult;
+  }
+  
+--- 2516,2523 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, DB2JDBENV);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(DB_MPOOLFILE **)&jresult = result; */
+      return jresult;
+  }
+  
+***************
+*** 2494,2500 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2529,2536 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2520,2526 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2556,2563 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2546,2552 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2583,2590 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2572,2578 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2610,2617 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2598,2604 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2637,2644 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2624,2630 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2664,2671 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2650,2656 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2691,2698 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2676,2682 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2718,2725 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2702,2708 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2745,2752 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2730,2736 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2774,2781 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2756,2762 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2801,2808 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2782,2788 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2828,2835 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2810,2816 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 2857,2864 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 2838,2844 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      {
+          int i, count, err;
+          
+--- 2886,2893 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      {
+          int i, count, err;
+          
+***************
+*** 2858,2864 ****
+              }else {
+                  jlong jptr = (*jenv)->GetLongField(jenv, jobj,
+                  dbc_cptr_fid);
+!                 arg2[i] = *(DBC **)&jptr;
+              }
+          }
+          arg2[count] = NULL;
+--- 2907,2914 ----
+              }else {
+                  jlong jptr = (*jenv)->GetLongField(jenv, jobj,
+                  dbc_cptr_fid);
+!                 arg2[i] = (DBC *)((intptr_t)jptr);
+! /*                arg2[i] = *(DBC **)&jptr; */
+              }
+          }
+          arg2[count] = NULL;
+***************
+*** 2877,2883 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, DB2JDBENV);
+      
+!     *(DBC **)&jresult = result; 
+      
+      __os_free(NULL, arg2);
+      
+--- 2927,2934 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, DB2JDBENV);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(DBC **)&jresult = result; */
+      
+      __os_free(NULL, arg2);
+      
+***************
+*** 2897,2904 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return ;
+--- 2948,2957 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return ;
+***************
+*** 2943,2950 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      {
+          arg3 = 0;
+          if (jarg3) {
+--- 2996,3005 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      {
+          arg3 = 0;
+          if (jarg3) {
+***************
+*** 2998,3005 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+--- 3053,3062 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+***************
+*** 3055,3062 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+--- 3112,3121 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+***************
+*** 3100,3106 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 3159,3166 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 3147,3153 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 3207,3214 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 3201,3207 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_append_recno;
+      
+--- 3262,3269 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_append_recno;
+      
+***************
+*** 3227,3233 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_bt_compare;
+      
+--- 3289,3296 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_bt_compare;
+      
+***************
+*** 3253,3259 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3316,3323 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3277,3283 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3341,3348 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3301,3307 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_bt_prefix;
+      
+--- 3366,3373 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_bt_prefix;
+      
+***************
+*** 3328,3334 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = jarg2; 
+      arg3 = (int)jarg3; 
+      
+--- 3394,3401 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = jarg2; 
+      arg3 = (int)jarg3; 
+      
+***************
+*** 3353,3359 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_dup_compare;
+      
+--- 3420,3427 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_dup_compare;
+      
+***************
+*** 3380,3386 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 3448,3455 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 3414,3420 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_db_feedback;
+      
+--- 3483,3490 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_db_feedback;
+      
+***************
+*** 3440,3446 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3510,3517 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3464,3470 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3535,3542 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3488,3494 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_h_hash;
+      
+--- 3560,3567 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_h_hash;
+      
+***************
+*** 3514,3520 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3587,3594 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3538,3544 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (int)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3612,3619 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (int)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3562,3568 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3637,3644 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3586,3592 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (int)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3662,3669 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (int)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3610,3616 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3687,3694 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3634,3640 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (int)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3712,3719 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (int)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3658,3664 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 3737,3744 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 3691,3697 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3771,3778 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3716,3722 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3797,3804 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3793,3799 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 3875,3882 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3819,3826 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+      if (jarg1 == 0) {
+--- 3902,3911 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      arg3 = (u_int32_t)jarg3; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3848,3854 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 3933,3940 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 3886,3892 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 3972,3979 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 3937,3943 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __dbc **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4024,4031 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __dbc *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __dbc **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 3961,3967 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __dbc **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 4049,4056 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __dbc *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __dbc **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 3989,3995 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __dbc **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 4078,4085 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __dbc *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __dbc **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 4016,4022 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __dbc **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 4106,4113 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __dbc *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __dbc **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 4031,4037 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, DBC2JDBENV);
+      
+!     *(DBC **)&jresult = result; 
+      return jresult;
+  }
+  
+--- 4122,4129 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, DBC2JDBENV);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(DBC **)&jresult = result; */
+      return jresult;
+  }
+  
+***************
+*** 4048,4054 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __dbc **)&jarg1; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return 0;
+--- 4140,4147 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __dbc *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __dbc **)&jarg1; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return 0;
+***************
+*** 4097,4103 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __dbc **)&jarg1; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return 0;
+--- 4190,4198 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __dbc *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __dbc **)&jarg1; */
+! 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return 0;
+***************
+*** 4152,4158 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __dbc **)&jarg1; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return 0;
+--- 4247,4255 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __dbc *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __dbc **)&jarg1; */
+! 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return 0;
+***************
+*** 4202,4208 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, NULL);
+      
+!     *(struct __db_env **)&jresult = result; 
+      return jresult;
+  }
+  
+--- 4299,4306 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, NULL);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(struct __db_env **)&jresult = result; */
+      return jresult;
+  }
+  
+***************
+*** 4214,4220 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 4312,4319 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 4241,4248 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      {
+          arg3 = 0;
+          if (jarg3) {
+--- 4340,4349 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      {
+          arg3 = 0;
+          if (jarg3) {
+***************
+*** 4290,4297 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      {
+          arg3 = 0;
+          if (jarg3) {
+--- 4391,4400 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      {
+          arg3 = 0;
+          if (jarg3) {
+***************
+*** 4345,4351 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (int)jarg2; 
+      {
+          arg3 = 0;
+--- 4448,4455 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (int)jarg2; 
+      {
+          arg3 = 0;
+***************
+*** 4374,4380 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 4478,4485 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 4403,4409 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4508,4515 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 4445,4451 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4551,4558 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 4471,4477 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4578,4585 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 4497,4503 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4605,4612 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 4525,4531 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4634,4641 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 4551,4557 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4661,4668 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 4577,4583 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4688,4695 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 4603,4609 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 4715,4722 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 4632,4638 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 4745,4752 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 4663,4669 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 4777,4784 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 4699,4705 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 4814,4821 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 4734,4740 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = jarg2; 
+      arg3 = (int)jarg3; 
+      
+--- 4850,4857 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = jarg2; 
+      arg3 = (int)jarg3; 
+      
+***************
+*** 4759,4765 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 4876,4883 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 4793,4799 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 4911,4918 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 4826,4832 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_error;
+      
+--- 4945,4952 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_error;
+      
+***************
+*** 4849,4855 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      arg3 = (jarg3 == JNI_TRUE);
+--- 4969,4976 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      arg3 = (jarg3 == JNI_TRUE);
+***************
+*** 4876,4882 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_env_feedback;
+      
+--- 4997,5004 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_env_feedback;
+      
+***************
+*** 4902,4908 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (size_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5024,5031 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (size_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 4926,4932 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_panic;
+      
+--- 5049,5056 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_panic;
+      
+***************
+*** 4956,4963 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+!     arg2 = *(void **)&jarg2; 
+      {
+          arg3 = 0;
+          if (jarg3) {
+--- 5080,5089 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+!     arg2 = (void *)((intptr_t)jarg2);
+! /*    arg2 = *(void **)&jarg2; */
+      {
+          arg3 = 0;
+          if (jarg3) {
+***************
+*** 5000,5006 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (long)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5126,5133 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (long)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5024,5030 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5151,5158 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5049,5055 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (db_timeout_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+--- 5177,5184 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (db_timeout_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+***************
+*** 5074,5080 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 5203,5210 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 5107,5113 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5237,5244 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5131,5137 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_app_dispatch;
+      
+--- 5262,5269 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      arg2 = (jarg2 == NULL) ? NULL : __dbj_app_dispatch;
+      
+***************
+*** 5158,5164 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      time2 = (time_t)jarg2;
+      arg2 = &time2;
+--- 5290,5297 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      time2 = (time_t)jarg2;
+      arg2 = &time2;
+***************
+*** 5186,5192 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      arg3 = (jarg3 == JNI_TRUE);
+--- 5319,5326 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      arg3 = (jarg3 == JNI_TRUE);
+***************
+*** 5213,5219 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5347,5354 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5255,5261 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5390,5397 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5281,5287 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5417,5424 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5307,5313 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5444,5451 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5333,5339 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5471,5478 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5361,5367 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+--- 5500,5507 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+***************
+*** 5394,5400 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+--- 5534,5541 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+***************
+*** 5421,5427 ****
+      }else if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, JDBENV);
+      
+!     *(DB_LOCK **)&jresult = result; 
+      
+      if (ldbt4.jarr != NULL) {
+          (*jenv)->ReleaseByteArrayElements(jenv, ldbt4.jarr,
+--- 5562,5569 ----
+      }else if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, JDBENV);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(DB_LOCK **)&jresult = result; */
+      
+      if (ldbt4.jarr != NULL) {
+          (*jenv)->ReleaseByteArrayElements(jenv, ldbt4.jarr,
+***************
+*** 5439,5445 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5581,5588 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5465,5471 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5608,5615 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5489,5496 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+!     arg2 = *(DB_LOCK **)&jarg2; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5633,5642 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+!     arg2 = (DB_LOCK *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_LOCK **)&jarg2; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5514,5520 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5660,5667 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5546,5552 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      {
+          int i, len, err;
+          size_t bytesize;
+--- 5693,5700 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      {
+          int i, len, err;
+          size_t bytesize;
+***************
+*** 5591,5597 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5739,5746 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5615,5621 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5764,5771 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5639,5645 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5789,5796 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5663,5669 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5814,5821 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5687,5693 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5839,5846 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5713,5719 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5866,5873 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5741,5747 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5895,5902 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5767,5773 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 5922,5929 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5794,5800 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 5950,5957 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5839,5846 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(DB_LSN **)&jarg1; 
+!     arg2 = *(DB_LSN **)&jarg2; 
+      result = (int)DbEnv_log_compare((DB_LSN const *)arg1,(DB_LSN const *)arg2);
+      
+      jresult = (jint)result; 
+--- 5996,6005 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (DB_LSN *)((intptr_t)jarg1);
+! /*    arg1 = *(DB_LSN **)&jarg1; */
+!     arg2 = (DB_LSN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_LSN **)&jarg2; */
+      result = (int)DbEnv_log_compare((DB_LSN const *)arg1,(DB_LSN const *)arg2);
+      
+      jresult = (jint)result; 
+***************
+*** 5856,5862 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6015,6022 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 5871,5877 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, JDBENV);
+      
+!     *(DB_LOGC **)&jresult = result; 
+      return jresult;
+  }
+  
+--- 6031,6038 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, JDBENV);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(DB_LOGC **)&jresult = result; */
+      return jresult;
+  }
+  
+***************
+*** 5884,5891 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+!     arg2 = *(DB_LSN **)&jarg2; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6045,6054 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+!     arg2 = (DB_LSN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_LSN **)&jarg2; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5913,5920 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+!     arg2 = *(DB_LSN **)&jarg2; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6076,6085 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+!     arg2 = (DB_LSN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_LSN **)&jarg2; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 5940,5947 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+!     arg2 = *(DB_LSN **)&jarg2; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return ;
+--- 6105,6114 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+!     arg2 = (DB_LSN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_LSN **)&jarg2; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return ;
+***************
+*** 5977,5983 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6144,6151 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6009,6015 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6177,6184 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6033,6039 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      {
+          arg2 = 0;
+          if (jarg2) {
+--- 6202,6209 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      {
+          arg2 = 0;
+          if (jarg2) {
+***************
+*** 6066,6072 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6236,6243 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6090,6096 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6261,6268 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6114,6120 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6286,6293 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6140,6146 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6313,6320 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6166,6172 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6340,6347 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6193,6199 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6368,6375 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6226,6232 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6402,6409 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6276,6282 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (int)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6453,6460 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (int)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6303,6309 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6481,6488 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6329,6335 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6508,6515 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6356,6362 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6536,6543 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6385,6392 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+!     arg2 = *(DB_TXN **)&jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+      if (jarg1 == 0) {
+--- 6566,6575 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+!     arg2 = (DB_TXN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_TXN **)&jarg2; */
+      arg3 = (u_int32_t)jarg3; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6401,6407 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, JDBENV);
+      
+!     *(DB_TXN **)&jresult = result; 
+      return jresult;
+  }
+  
+--- 6584,6591 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, JDBENV);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(DB_TXN **)&jresult = result; */
+      return jresult;
+  }
+  
+***************
+*** 6415,6421 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      arg4 = (u_int32_t)jarg4; 
+--- 6599,6606 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      arg4 = (u_int32_t)jarg4; 
+***************
+*** 6443,6449 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (int)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+--- 6628,6635 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (int)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+***************
+*** 6498,6504 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6684,6691 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6551,6557 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6738,6745 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6580,6586 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (int)jarg2; 
+      arg3 = (int)jarg3; 
+      arg4 = (u_int32_t)jarg4; 
+--- 6768,6775 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (int)jarg2; 
+      arg3 = (int)jarg3; 
+      arg4 = (u_int32_t)jarg4; 
+***************
+*** 6616,6622 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return 0;
+--- 6805,6812 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return 0;
+***************
+*** 6631,6637 ****
+      id4 = (*jenv)->GetIntField(jenv, jarg4, rep_processmsg_envid);
+      arg4 = &id4;
+      
+!     arg5 = *(DB_LSN **)&jarg5; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 6821,6828 ----
+      id4 = (*jenv)->GetIntField(jenv, jarg4, rep_processmsg_envid);
+      arg4 = &id4;
+      
+!     arg5 = (DB_LSN *)((intptr_t)jarg5);
+! /*    arg5 = *(DB_LSN **)&jarg5; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6667,6673 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return ;
+--- 6858,6865 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt2, jarg2) != 0)
+      return ;
+***************
+*** 6700,6706 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6892,6899 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6732,6738 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = jarg2; 
+      
+      if (jarg1 == 0) {
+--- 6925,6932 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6757,6763 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_env **)&jarg1; 
+      arg2 = (int)jarg2; 
+      
+      arg3 = (jarg3 == NULL) ? NULL : __dbj_rep_transport;
+--- 6951,6958 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_env *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_env **)&jarg1; */
+      arg2 = (int)jarg2; 
+      
+      arg3 = (jarg3 == NULL) ? NULL : __dbj_rep_transport;
+***************
+*** 6854,6860 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_txn **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7049,7056 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_txn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_txn **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6877,6883 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_txn **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 7073,7080 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_txn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_txn **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6901,6907 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_txn **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 7098,7105 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_txn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_txn **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 6925,6931 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_txn **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7123,7130 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_txn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_txn **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 6946,6952 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_txn **)&jarg1; 
+      
+      arg2 = (u_int8_t *)(*jenv)->GetByteArrayElements(jenv, jarg2, NULL);
+      
+--- 7145,7152 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_txn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_txn **)&jarg1; */
+      
+      arg2 = (u_int8_t *)(*jenv)->GetByteArrayElements(jenv, jarg2, NULL);
+      
+***************
+*** 6983,6989 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_txn **)&jarg1; 
+      arg2 = (db_timeout_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+--- 7183,7190 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_txn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_txn **)&jarg1; */
+      arg2 = (db_timeout_t)jarg2; 
+      arg3 = (u_int32_t)jarg3; 
+      
+***************
+*** 7008,7014 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_log_cursor **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 7209,7216 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_log_cursor *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_log_cursor **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 7036,7043 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_log_cursor **)&jarg1; 
+!     arg2 = *(DB_LSN **)&jarg2; 
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+--- 7238,7247 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_log_cursor *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_log_cursor **)&jarg1; */
+!     arg2 = (DB_LSN *)((intptr_t)jarg2);
+! /*    arg2 = *(DB_LSN **)&jarg2; */
+      
+      if (__dbj_dbt_copyin(jenv, &ldbt3, jarg3) != 0)
+      return 0;
+***************
+*** 7069,7075 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_lock_u **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7273,7280 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_lock_u *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_lock_u **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 7098,7104 ****
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, NULL);
+      
+!     *(struct __db_lsn **)&jresult = result; 
+      return jresult;
+  }
+  
+--- 7303,7310 ----
+      if (!DB_RETOK_STD(errno))
+      __dbj_throw(jenv, errno, NULL, NULL, NULL);
+      
+!     jresult = (jlong)((intptr_t)result);
+! /*    *(struct __db_lsn **)&jresult = result; */
+      return jresult;
+  }
+  
+***************
+*** 7108,7114 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_lsn **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7314,7321 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_lsn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_lsn **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 7127,7133 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_lsn **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7334,7341 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_lsn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_lsn **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 7148,7154 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_lsn **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7356,7363 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_lsn *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_lsn **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 7169,7175 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_mpoolfile **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7378,7385 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_mpoolfile *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_mpoolfile **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 7195,7201 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_mpoolfile **)&jarg1; 
+      arg2 = (DB_CACHE_PRIORITY)jarg2; 
+      
+      if (jarg1 == 0) {
+--- 7405,7412 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_mpoolfile *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_mpoolfile **)&jarg1; */
+      arg2 = (DB_CACHE_PRIORITY)jarg2; 
+      
+      if (jarg1 == 0) {
+***************
+*** 7219,7225 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_mpoolfile **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7430,7437 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_mpoolfile *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_mpoolfile **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 7246,7252 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_mpoolfile **)&jarg1; 
+      arg2 = (u_int32_t)jarg2; 
+      
+      arg3 = (jarg3 == JNI_TRUE);
+--- 7458,7465 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_mpoolfile *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_mpoolfile **)&jarg1; */
+      arg2 = (u_int32_t)jarg2; 
+      
+      arg3 = (jarg3 == JNI_TRUE);
+***************
+*** 7273,7279 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_mpoolfile **)&jarg1; 
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+--- 7486,7493 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_mpoolfile *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_mpoolfile **)&jarg1; */
+      
+      if (jarg1 == 0) {
+          __dbj_throw(jenv, EINVAL, "call on closed handle", NULL, NULL);
+***************
+*** 7299,7305 ****
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = *(struct __db_mpoolfile **)&jarg1; 
+      arg2 = jarg2; 
+      
+      if (jarg1 == 0) {
+--- 7513,7520 ----
+      
+      (void)jenv;
+      (void)jcls;
+!     arg1 = (struct __db_mpoolfile *)((intptr_t)jarg1);
+! /*    arg1 = *(struct __db_mpoolfile **)&jarg1; */
+      arg2 = jarg2; 
+      
+      if (jarg1 == 0) {
