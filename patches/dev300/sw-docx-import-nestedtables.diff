diff --git sw/source/core/docnode/ndtbl.cxx sw/source/core/docnode/ndtbl.cxx
index 7d67c27..744ab3b 100644
--- sw/source/core/docnode/ndtbl.cxx
+++ sw/source/core/docnode/ndtbl.cxx
@@ -1327,7 +1327,8 @@ SwTableNode* SwNodes::TextToTable( const std::vector< std::vector<SwNodeRange> >
                 SwTxtNode& rTxtNode = static_cast<SwTxtNode&>(rNode);
                 // setze den bei allen TextNode in der Tabelle den TableNode
                 // als StartNode
-                rTxtNode.pStartOfSection = pTblNd;
+// FIXME: this is setting wrong node StartOfSections in nested tables.
+//                rTxtNode.pStartOfSection = pTblNd;
                 // remove PageBreaks/PageDesc/ColBreak
                 const SwAttrSet* pSet = rTxtNode.GetpSwAttrSet();
                 if( pSet )
@@ -1406,7 +1407,6 @@ SwTableNode* SwNodes::TextToTable( const std::vector< std::vector<SwNodeRange> >
                         aCellNodeIdx = SwNodeIndex( *aCellNodeIdx.GetNode().EndOfSectionNode() );
                 }
 
-
                 // Section der Box zuweisen
                 pBox = new SwTableBox( pBoxFmt, *pSttNd, pLine );
                 pLine->GetTabBoxes().C40_INSERT( SwTableBox, pBox, nBoxes++ );
diff --git sw/source/core/unocore/unoobj2.cxx sw/source/core/unocore/unoobj2.cxx
index 715fed4..c4efc2b 100644
--- sw/source/core/unocore/unoobj2.cxx
+++ sw/source/core/unocore/unoobj2.cxx
@@ -1249,6 +1249,12 @@ SwXTextRange::SwXTextRange(SwFrmFmt& rTblFmt) :
 	aObjectDepend(this, &rTblFmt),
 	aPropSet(aSwMapProvider.GetPropertyMap(PROPERTY_MAP_TEXT_CURSOR))
 {
+    SwTable* pTable = SwTable::FindTable( &rTblFmt );
+    SwTableNode* pTblNode = pTable->GetTableNode( );
+    SwPosition aPosition( *pTblNode );
+    SwPaM aPam( aPosition );
+
+    _CreateNewBookmark( aPam );
 }
 
 /*-- 10.12.98 12:54:44---------------------------------------------------
diff --git sw/source/core/unocore/unotext.cxx sw/source/core/unocore/unotext.cxx
index 23cd6cd..13f2a29 100644
--- sw/source/core/unocore/unotext.cxx
+++ sw/source/core/unocore/unotext.cxx
@@ -1873,18 +1873,11 @@ uno::Reference< text::XTextTable > SwXText::convertToTable(
             if(aStartCellPam.Start()->nNode < aEndCellPam.End()->nNode)
             {
                 const SwNode& rStartNode = aStartCellPam.Start()->nNode.GetNode();
-                if(!rStartNode.IsTxtNode() ||
-                        !aEndCellPam.End()->nNode.GetNode().IsTxtNode())
-                {
-                    //start and end of the cell must be on a SwTxtNode
-                    bExcept = true;
-                    break;
-                }
                 // increment on each StartNode and decrement on each EndNode
                 // we must reach zero at the end and must not go below zero
                 long nOpenNodeBlock = 0;
                 SwNodeIndex aCellIndex = aStartCellPam.Start()->nNode;
-                while( ++aCellIndex < aEndCellPam.End()->nNode.GetIndex())
+                while( aCellIndex < aEndCellPam.End()->nNode.GetIndex())
                 {
                     if( aCellIndex.GetNode().IsStartNode() )
                         ++nOpenNodeBlock;
@@ -1895,6 +1888,7 @@ uno::Reference< text::XTextTable > SwXText::convertToTable(
                         bExcept = true;
                         break;
                     }
+                    ++aCellIndex;
                 }
                 if( nOpenNodeBlock != 0)
                 {
@@ -1940,7 +1934,9 @@ uno::Reference< text::XTextTable > SwXText::convertToTable(
                     //node border anyway
                 }
                 else
+                {
                     bExcept = true;
+                }
             }
            //now check if there's a need to insert another paragraph break
             if( aEndCellPam.End()->nContent.GetIndex() < aEndCellPam.End()->nNode.GetNode().GetTxtNode()->Len())
@@ -2004,7 +2000,13 @@ uno::Reference< text::XTextTable > SwXText::convertToTable(
             }
             catch ( const uno::Exception e )
             {
-                // TODO log
+#if DEBUG
+                std::clog << "Exception when setting property: ";
+                std::clog << rtl::OUStringToOString( pTableProperties[nProperty].Name, RTL_TEXTENCODING_UTF8 ).getStr( );
+                std::clog << ". Message: ";
+                std::clog << rtl::OUStringToOString( e.Message, RTL_TEXTENCODING_UTF8 ).getStr( );
+                std::clog << std::endl;
+#endif
             }
         }
 
