From 522157fc4ca29886c6b370f4c1a4173585fa9f2b Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:02:03 +0200
Subject: [PATCH 424/768] svg-import-opacity-fix.diff

---
 filter/source/svg/gfxtypes.hxx  |    2 ++
 filter/source/svg/svgreader.cxx |   38 ++++++++++++++++++++++----------------
 2 files changed, 24 insertions(+), 16 deletions(-)

diff --git filter/source/svg/gfxtypes.hxx filter/source/svg/gfxtypes.hxx
index 4ae27d5..118624c 100644
--- filter/source/svg/gfxtypes.hxx
+++ filter/source/svg/gfxtypes.hxx
@@ -174,6 +174,7 @@ struct State
         mbVisibility(true),
         meFillType(SOLID),
         mnFillOpacity(1.0),
+        mnOpacity(1.0),
         meStrokeType(NONE),
         mnStrokeOpacity(1.0),
         meViewportFillType(NONE),
@@ -220,6 +221,7 @@ struct State
 
     PaintType                   meFillType;
     double                      mnFillOpacity;
+    double                      mnOpacity;
     PaintType                   meStrokeType;
     double                      mnStrokeOpacity;
     PaintType                   meViewportFillType;
diff --git filter/source/svg/svgreader.cxx filter/source/svg/svgreader.cxx
index f835bf6..4fe718b 100644
--- filter/source/svg/svgreader.cxx
+++ filter/source/svg/svgreader.cxx
@@ -519,12 +519,12 @@ struct AnnotatingVisitor
                                       rtl::OUString::valueOf(
                                           maGradientStopVector[
                                               rState.maFillGradient.maStops[0]].maStopColor.a*
-                                          maCurrState.mnFillOpacity*100.0)+USTR("%" ) );
+                                          maCurrState.mnFillOpacity*maCurrState.mnOpacity*100.0)+USTR("%" ) );
                 xAttrs->AddAttribute( USTR( "draw:start" ),
                                       rtl::OUString::valueOf(
                                           maGradientStopVector[
                                               rState.maFillGradient.maStops[1]].maStopColor.a*
-                                          maCurrState.mnFillOpacity*100.0)+USTR("%" ) );
+                                          maCurrState.mnFillOpacity*maCurrState.mnOpacity*100.0)+USTR("%" ) );
                 xAttrs->AddAttribute( USTR( "draw:border" ), USTR("0%") );
                 mxDocumentHandler->startElement( USTR("draw:opacity"),
                                                  xUnoAttrs );
@@ -616,17 +616,17 @@ struct AnnotatingVisitor
                         xAttrs->AddAttribute( USTR( "draw:opacity-name" ),
                                               getStyleName("svgopacity", rState.maFillGradient.mnId) );
                     }
-                    else if( maCurrState.mnFillOpacity != 1.0 )
+                    else if( maCurrState.mnFillOpacity*maCurrState.mnOpacity != 1.0 )
                         xAttrs->AddAttribute( USTR( "draw:opacity" ),
-                                              rtl::OUString::valueOf(100.0*maCurrState.mnFillOpacity)+USTR("%") );
+                                              rtl::OUString::valueOf(100.0*maCurrState.mnFillOpacity*maCurrState.mnOpacity)+USTR("%") );
                 }
                 else
                 {
                     xAttrs->AddAttribute( USTR( "draw:fill" ), USTR("solid"));
                     xAttrs->AddAttribute( USTR( "draw:fill-color" ), getOdfColor(rState.maFillColor));
-                    if( maCurrState.mnFillOpacity != 1.0 )
+                    if( maCurrState.mnFillOpacity*maCurrState.mnOpacity != 1.0 )
                         xAttrs->AddAttribute( USTR( "draw:opacity" ),
-                                              rtl::OUString::valueOf(100.0*maCurrState.mnFillOpacity)+USTR("%") );
+                                              rtl::OUString::valueOf(100.0*maCurrState.mnFillOpacity*maCurrState.mnOpacity)+USTR("%") );
                 }
             }
             else
@@ -652,9 +652,9 @@ struct AnnotatingVisitor
                 xAttrs->AddAttribute( USTR( "draw:stroke-linejoin"), USTR("round"));
             else if( maCurrState.meLineJoin == basegfx::B2DLINEJOIN_BEVEL )
                 xAttrs->AddAttribute( USTR( "draw:stroke-linejoin"), USTR("bevel"));
-            if( maCurrState.mnStrokeOpacity != 1.0 )
+            if( maCurrState.mnStrokeOpacity*maCurrState.mnOpacity != 1.0 )
                 xAttrs->AddAttribute( USTR("svg:stroke-opacity"),
-                                      rtl::OUString::valueOf(100.0*maCurrState.mnStrokeOpacity)+USTR("%"));
+                                      rtl::OUString::valueOf(100.0*maCurrState.mnStrokeOpacity*maCurrState.mnOpacity)+USTR("%"));
         }
 
         mxDocumentHandler->startElement( USTR("style:graphic-properties"),
@@ -876,6 +876,12 @@ struct AnnotatingVisitor
                     maCurrState.meFillRule = maParentStates.back().meFillRule;
                 break;
             }
+            case XML_OPACITY:
+                if( aValueUtf8 == "inherit" )
+                    maCurrState.mnOpacity = maParentStates.back().mnOpacity;
+                else
+                    maCurrState.mnOpacity = aValueUtf8.toDouble();
+                break;
             case XML_FILL_OPACITY:
                 if( aValueUtf8 == "inherit" )
                     maCurrState.mnFillOpacity = maParentStates.back().mnFillOpacity;
@@ -2540,13 +2546,13 @@ struct ShapeRenderingVisitor
                 const BYTE	cTransStart( 255-
                     basegfx::fround(mrGradientStopVector[
                                         aState.maFillGradient.maStops[1]].maStopColor.a*
-                                    aState.mnFillOpacity*255.0));
+                                    aState.mnFillOpacity*maCurrState.mnOpacity*255.0));
                 const Color aTransStart( cTransStart, cTransStart, cTransStart );
 
                 const BYTE	cTransEnd( 255-
                     basegfx::fround(mrGradientStopVector[
                                         aState.maFillGradient.maStops[0]].maStopColor.a*
-                                    aState.mnFillOpacity*255.0));
+                                    aState.mnFillOpacity*maCurrState.mnOpacity*255.0));
                 const Color aTransEnd( cTransEnd, cTransEnd, cTransEnd );
 
                 // modulate gradient opacity with overall fill opacity
@@ -2594,10 +2600,10 @@ struct ShapeRenderingVisitor
             else
                 mrOutDev.SetFillColor(getVclColor(aState.maFillColor));
 
-            if( aState.mnFillOpacity != 1.0 )
+            if( aState.mnFillOpacity*maCurrState.mnOpacity != 1.0 )
                 mrOutDev.DrawTransparent(::PolyPolygon(aPoly),
                                          basegfx::fround(
-                                             (1.0-aState.mnFillOpacity)*100.0));
+                                             (1.0-(aState.mnFillOpacity*maCurrState.mnOpacity))*100.0));
             else
                 mrOutDev.DrawPolyPolygon(::PolyPolygon(aPoly));
         }
@@ -2652,10 +2658,10 @@ struct ShapeRenderingVisitor
 
             for( sal_uInt32 i=0; i<aPolys.size(); ++i )
             {
-                if( aState.mnStrokeOpacity != 1.0 )
+                if( aState.mnStrokeOpacity*maCurrState.mnOpacity != 1.0 )
                     mrOutDev.DrawTransparent(::PolyPolygon(aPolys[i]),
                                              basegfx::fround(
-                                                 (1.0-aState.mnStrokeOpacity)*100.0));
+                                                 (1.0-(aState.mnStrokeOpacity*maCurrState.mnOpacity))*100.0));
                 else
                     mrOutDev.DrawPolyPolygon(::PolyPolygon(aPolys[i]));
 
@@ -2675,10 +2681,10 @@ struct ShapeRenderingVisitor
             else
                 mrOutDev.SetLineColor(getVclColor(aState.maStrokeColor));
 
-            if( aState.mnStrokeOpacity != 1.0 )
+            if( aState.mnStrokeOpacity*maCurrState.mnOpacity != 1.0 )
                 mrOutDev.DrawTransparent(::PolyPolygon(aPoly),
                                          basegfx::fround(
-                                             (1.0-aState.mnStrokeOpacity)*100.0));
+                                             (1.0-(aState.mnStrokeOpacity*maCurrState.mnOpacity))*100.0));
             else
                 mrOutDev.DrawPolyPolygon(::PolyPolygon(aPoly));
         }
-- 
1.7.0.1

