diff --git fpicker/source/unx/kde4/KDE4FPEntry.cxx fpicker/source/unx/kde4/KDE4FPEntry.cxx
index 9a75688..805e6cf 100644
--- fpicker/source/unx/kde4/KDE4FPEntry.cxx
+++ fpicker/source/unx/kde4/KDE4FPEntry.cxx
@@ -84,12 +84,12 @@ static Reference< XInterface > SAL_CALL createInstance( const Reference< XMultiS
 // the three uno functions that will be exported
 extern "C" 
 {
-	void SAL_CALL component_getImplementationEnvironment( const sal_Char ** ppEnvTypeName, uno_Environment ** ppEnv )
+    void SAL_CALL component_getImplementationEnvironment( const sal_Char ** ppEnvTypeName, uno_Environment ** )
 	{
 		*ppEnvTypeName = CPPU_CURRENT_LANGUAGE_BINDING_NAME;
 	}
 
-	sal_Bool SAL_CALL component_writeInfo( void* pServiceManager, void* pRegistryKey )
+    sal_Bool SAL_CALL component_writeInfo( void*, void* pRegistryKey )
 	{
 		sal_Bool bRetVal = sal_True;
 
@@ -110,7 +110,7 @@ extern "C"
 		return bRetVal;
 	}
 
-	void* SAL_CALL component_getFactory( const sal_Char* pImplName, uno_Interface* pSrvManager, uno_Interface* pRegistryKey )
+    void* SAL_CALL component_getFactory( const sal_Char* pImplName, uno_Interface* pSrvManager, uno_Interface* )
 	{
 		void* pRet = 0;
 
diff --git fpicker/source/unx/kde4/KDE4FilePicker.cxx fpicker/source/unx/kde4/KDE4FilePicker.cxx
index b5cd83d..6c6db9e 100644
--- fpicker/source/unx/kde4/KDE4FilePicker.cxx
+++ fpicker/source/unx/kde4/KDE4FilePicker.cxx
@@ -118,6 +118,8 @@ using namespace ::com::sun::star::uno;
 // helper functions
 //////////////////////////////////////////////////////////////////////////
 
+#include <QDebug>
+
 namespace
 {
     // controling event notifications    
@@ -166,7 +168,7 @@ KDE4FilePicker::KDE4FilePicker( const uno::Reference<lang::XMultiServiceFactory>
 	
 	_layout = new QGridLayout(_extraControls);
 	
-	_dialog = new KFileDialog(KUrl(""), QString(""), 0, _extraControls);
+    _dialog = new KFileDialog(KUrl("~"), QString(""), 0, _extraControls);
 	_dialog->setMode(KFile::File | KFile::LocalOnly);
 	
 	//default mode
@@ -213,21 +215,19 @@ sal_Int16 SAL_CALL KDE4FilePicker::execute()
 		}
 	}
 	
+    _dialog->clearFilter();
 	_dialog->setFilter(_filter);
+    
 	_dialog->exec();
 	
 	//nasty hack to get a local qt event loop going to process the dialog
 	//otherwise the dialog returns immediately
 	while (_dialog->isVisible())
-	{
 		kapp->processEvents(QEventLoop::WaitForMoreEvents);
-	}
 	
 	//block and wait for user input
 	if (_dialog->result() == KFileDialog::Accepted)
-	{
 		return ExecutableDialogResults::OK;
-	}
 	
 	return ExecutableDialogResults::CANCEL;
 }
@@ -236,13 +236,9 @@ void SAL_CALL KDE4FilePicker::setMultiSelectionMode( sal_Bool multiSelect )
     throw( uno::RuntimeException )
 {
 	if (multiSelect)
-	{
 		_dialog->setMode(KFile::Files | KFile::LocalOnly);
-	}
 	else
-	{
 		_dialog->setMode(KFile::File | KFile::LocalOnly);
-	}
 }
 
 void SAL_CALL KDE4FilePicker::setDefaultName( const ::rtl::OUString &name )
@@ -256,7 +252,7 @@ void SAL_CALL KDE4FilePicker::setDisplayDirectory( const rtl::OUString &dir )
     throw( uno::RuntimeException )
 {
 	const QString url = toQString(dir);
-	_dialog->setStartDir(KUrl(url));
+    _dialog->setUrl(KUrl(url));
 }
 
 rtl::OUString SAL_CALL KDE4FilePicker::getDisplayDirectory()
@@ -269,16 +265,54 @@ rtl::OUString SAL_CALL KDE4FilePicker::getDisplayDirectory()
 uno::Sequence< ::rtl::OUString > SAL_CALL KDE4FilePicker::getFiles()
     throw( uno::RuntimeException )
 {
-	QStringList files = _dialog->selectedFiles();
+    QStringList rawFiles = _dialog->selectedFiles();
+    QStringList files;
 	
-	uno::Sequence< ::rtl::OUString > seq(files.size());
+    // check if we need to add an extension
+    QString extension = "";
+    if ( _dialog->operationMode() == KFileDialog::Saving )
+    {
+        QCheckBox *cb = dynamic_cast<QCheckBox*> (
+            _customWidgets[ExtendedFilePickerElementIds::CHECKBOX_AUTOEXTENSION ]);
+            
+        if (cb->isChecked())
+        {
+            extension = _dialog->currentFilter(); // assuming filter value is like this *.ext
+            extension.replace("*","");
+        }
+    }
+    
+    // Workaround for the double click selection KDE4 bug 
+    // kde file picker returns the file and directories for selectedFiles()
+    // when a file is double clicked
+    // make a true list of files
+    const QString dir = "file://" + KUrl(rawFiles[0]).directory();
 	
-	for (int i=0 ; i<files.size() ; ++i)
+    // by appending the dir, we make OO treat all opens like multifile opens
+    // this makes the code for adding the the OO sequence simpler
+    files.append(dir);
+    
+    for (USHORT i = 0; i < rawFiles.size(); ++i)
 	{
-		const QString fileName = "file:" + files[i];
-		seq[i] = toOUString(fileName);
+        // if the raw file is not the base directory (see above kde bug)
+        // we add the file to list of avail files
+        if ((dir + "/") != ("file://" + rawFiles[i]))
+        {
+            const QString filename = KUrl(rawFiles[i]).fileName();
+            
+            //prevent extension append if we already have one
+            if (filename.endsWith(extension))
+                files.append(filename);
+            else
+                files.append(filename + extension);
+        }
 	}
 	
+    // add all files and leading directory to outgoing OO sequence
+    uno::Sequence< ::rtl::OUString > seq(files.size());
+    for (int i = 0; i < files.size(); ++i)
+        seq[i] = toOUString(files[i]);
+    
 	return seq;
 }
 
@@ -289,9 +323,7 @@ void SAL_CALL KDE4FilePicker::appendFilter( const ::rtl::OUString &title, const
 	QString f = toQString(filter);
 	
 	if (!_filter.isNull())
-	{
 		_filter.append("\n");
-	}
 	
 	//add to hash map for reverse lookup in getCurrentFilter
 	_filters.insert(f, t);
@@ -318,17 +350,31 @@ rtl::OUString SAL_CALL KDE4FilePicker::getCurrentFilter()
 	
 	//default if not found
 	if (filter.isNull())
-	{
 		filter = "ODF Text Document (.odt)";
-	}
 	
 	return toOUString(filter);
 }
 
-void SAL_CALL KDE4FilePicker::appendFilterGroup( const rtl::OUString&, const uno::Sequence<beans::StringPair>& )
+void SAL_CALL KDE4FilePicker::appendFilterGroup( const rtl::OUString&, const uno::Sequence<beans::StringPair>&)
     throw( lang::IllegalArgumentException, uno::RuntimeException )
-{
-	//TODO
+{	
+    //TODO ... don't really like this behavior... Shtylman
+#if 0
+    if (!_filter.isNull())
+        _filter.append(QString("\n"));
+    
+    for (USHORT i = 0; i < filters.getLength(); ++i)
+    {
+        beans::StringPair aPair = filters[i];
+        
+        _filter.append(QString("%1|%2").arg(
+            toQString(aPair.Second).replace(";", " ")).arg(
+            toQString(aPair.First).replace("/","\\/") + "\n" ));
+    }
+    
+    if (filters.getLength() > 0)
+        _filter.append(QString("*.*|*.*"));
+#endif
 }
 
 void SAL_CALL KDE4FilePicker::setValue( sal_Int16 controlId, sal_Int16, const uno::Any &value )
