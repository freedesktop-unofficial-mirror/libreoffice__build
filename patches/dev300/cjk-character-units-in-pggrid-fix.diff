--- sw/source/ui/inc/pggrid.hxx-orig	2008-06-17 01:19:59.000000000 +0800
+++ sw/source/ui/inc/pggrid.hxx	2008-05-30 14:12:08.000000000 +0800
@@ -96,6 +96,7 @@ class SwTextGridPage: public SfxTabPage
 
     void UpdatePageSize(const SfxItemSet& rSet);
     void PutGridItem(SfxItemSet& rSet);
+    void SetLinesOrCharsRanges(FixedText & rField, const sal_Int32 nValue ); 
 
     DECL_LINK(GridTypeHdl, RadioButton*);
     DECL_LINK(CharorLineChangedHdl, SpinField*);
--- sw/source/ui/misc/pggrid.cxx-orig	2008-05-29 12:07:20.000000000 +0800
+++ sw/source/ui/misc/pggrid.cxx	2008-06-17 01:16:57.000000000 +0800
@@ -261,6 +261,7 @@ void    SwTextGridPage::Reset(const SfxI
         GridTypeHdl(pButton);
         aSnapToCharsCB.Check(rGridItem.IsSnapToChars());
         aLinesPerPageNF.SetValue(rGridItem.GetLines());
+        SetLinesOrCharsRanges( aLinesRangeFT , aLinesPerPageNF.GetMax() );
         m_nRubyUserValue = rGridItem.GetBaseHeight();
         m_bRubyUserValue = sal_True;
         aTextSizeMF.SetValue(aTextSizeMF.Normalize(m_nRubyUserValue), FUNIT_TWIP);
@@ -387,6 +388,12 @@ void SwTextGridPage::UpdatePageSize(cons
         if ( m_bSquaredMode )
         {
             aCharsPerLineNF.SetValue(m_aPageSize.Width() / nTextSize);
+        aCharsPerLineNF.SetMax( aCharsPerLineNF.GetValue() );
+            aLinesPerPageNF.SetMax( m_aPageSize.Height() / 
+        (   aTextSizeMF.Denormalize(aTextSizeMF.GetValue(FUNIT_TWIP)) +
+                    aRubySizeMF.Denormalize(aRubySizeMF.GetValue(FUNIT_TWIP))));
+            SetLinesOrCharsRanges( aCharsRangeFT , aCharsPerLineNF.GetMax() );
+            SetLinesOrCharsRanges( aLinesRangeFT , aLinesPerPageNF.GetMax() );
         }
         else
         {
@@ -396,9 +403,21 @@ void SwTextGridPage::UpdatePageSize(cons
                 aCharsPerLineNF.SetValue(m_aPageSize.Width() / nTextWidth); 
             else
                 aCharsPerLineNF.SetValue( 45 );
+        SetLinesOrCharsRanges( aCharsRangeFT , aCharsPerLineNF.GetMax() );
+        SetLinesOrCharsRanges( aLinesRangeFT , aLinesPerPageNF.GetMax() );
         }
     }
 }
+/* -----------------------------30.05.2008 14:12------------------------------
+
+ ---------------------------------------------------------------------------*/
+void SwTextGridPage::SetLinesOrCharsRanges(FixedText & rField, const sal_Int32 nValue )
+{
+    String aFieldStr = String::CreateFromAscii("( 1 -");
+    aFieldStr += String::CreateFromInt32( nValue );
+    aFieldStr += String::CreateFromAscii(" )");
+    rField.SetText( aFieldStr );
+}
 /* -----------------------------06.02.2002 15:24------------------------------
 
  ---------------------------------------------------------------------------*/
@@ -433,6 +452,8 @@ IMPL_LINK(SwTextGridPage, CharorLineChan
                     aRubySizeMF.Denormalize(aRubySizeMF.GetValue(FUNIT_TWIP))));
             aLinesPerPageNF.SetMax(nMaxLines);
         }
+        SetLinesOrCharsRanges( aLinesRangeFT , aLinesPerPageNF.GetMax() );
+    SetLinesOrCharsRanges( aCharsRangeFT , aCharsPerLineNF.GetMax() );
 	}
     else//in normal mode
     {
@@ -441,10 +462,7 @@ IMPL_LINK(SwTextGridPage, CharorLineChan
             long nHeight = static_cast< sal_Int32 >(m_aPageSize.Height() / aLinesPerPageNF.GetValue());
             aTextSizeMF.SetValue(aTextSizeMF.Normalize(nHeight), FUNIT_TWIP);
             aRubySizeMF.SetValue(0, FUNIT_TWIP);
-            String aMaxLinesFTStr = String::CreateFromAscii("( 1 - ");
-            aMaxLinesFTStr += String::CreateFromInt32(aLinesPerPageNF.GetValue());
-            aMaxLinesFTStr += String::CreateFromAscii(" )");
-            aLinesRangeFT.SetText( aMaxLinesFTStr );
+            SetLinesOrCharsRanges( aLinesRangeFT , aLinesPerPageNF.GetMax() );
             
             m_nRubyUserValue = nHeight;
             m_bRubyUserValue = sal_True;
@@ -453,10 +471,7 @@ IMPL_LINK(SwTextGridPage, CharorLineChan
         {
             long nWidth = static_cast< sal_Int32 >(m_aPageSize.Width() / aCharsPerLineNF.GetValue());
             aCharWidthMF.SetValue(aCharWidthMF.Normalize(nWidth), FUNIT_TWIP);
-            String aMaxCharsFTStr = String::CreateFromAscii("( 1 - ");
-            aMaxCharsFTStr += String::CreateFromInt32(aCharsPerLineNF.GetValue());
-            aMaxCharsFTStr += String::CreateFromAscii(" )");
-            aCharsRangeFT.SetText( aMaxCharsFTStr );
+            SetLinesOrCharsRanges( aCharsRangeFT , aCharsPerLineNF.GetMax() );
         }
     }
     GridModifyHdl(0);
@@ -480,6 +495,7 @@ IMPL_LINK(SwTextGridPage, TextSizeChange
                 (   aTextSizeMF.Denormalize(aTextSizeMF.GetValue(FUNIT_TWIP)) +
                     aRubySizeMF.Denormalize(aRubySizeMF.GetValue(FUNIT_TWIP))));
             aLinesPerPageNF.SetMax(nMaxLines);
+            SetLinesOrCharsRanges( aLinesRangeFT , aLinesPerPageNF.GetMax() );
         }
     }
     else
@@ -489,10 +505,7 @@ IMPL_LINK(SwTextGridPage, TextSizeChange
             sal_Int32 nTextSize = static_cast< sal_Int32 >(aTextSizeMF.Denormalize(aTextSizeMF.GetValue(FUNIT_TWIP)));
             aLinesPerPageNF.SetValue(m_aPageSize.Height() / nTextSize);
             m_bRubyUserValue = sal_False;
-            String aRangesStr = String::CreateFromAscii("( 1 - ");
-            aRangesStr += String::CreateFromInt32( m_aPageSize.Height() / nTextSize );
-            aRangesStr += String::CreateFromAscii(" )");
-            aLinesRangeFT.SetText( aRangesStr );
+            SetLinesOrCharsRanges( aLinesRangeFT , aLinesPerPageNF.GetMax() );
         }
         else if (&aCharWidthMF == pField)
         {
@@ -501,10 +514,7 @@ IMPL_LINK(SwTextGridPage, TextSizeChange
             if (nTextWidth)
                 nMaxChar = m_aPageSize.Width() / nTextWidth;
             aCharsPerLineNF.SetValue( nMaxChar );
-            String aCharRangeStr = String::CreateFromAscii("( 1 - ");
-            aCharRangeStr += String::CreateFromInt32( nMaxChar );
-            aCharRangeStr += String::CreateFromAscii(" )");
-            aCharsRangeFT.SetText( aCharRangeStr );
+            SetLinesOrCharsRanges( aCharsRangeFT , aCharsPerLineNF.GetMax() );
         }
         //rubySize is disabled
     }
