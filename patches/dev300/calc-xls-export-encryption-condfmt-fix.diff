From 7722eb552051a935cc336bfaa704b981dec6b516 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:56:31 +0200
Subject: [PATCH 213/878] calc-xls-export-encryption-condfmt-fix.diff

---
 sc/source/filter/excel/xecontent.cxx |    6 +++---
 sc/source/filter/excel/xestream.cxx  |   11 +++++++++++
 sc/source/filter/inc/xestream.hxx    |    3 +++
 sc/source/filter/xcl97/xcl97rec.cxx  |    4 +++-
 4 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/sc/source/filter/excel/xecontent.cxx b/sc/source/filter/excel/xecontent.cxx
index c2074df..beb712d 100644
--- a/sc/source/filter/excel/xecontent.cxx
+++ b/sc/source/filter/excel/xecontent.cxx
@@ -753,19 +753,19 @@ void XclExpCFImpl::WriteBody( XclExpStream& rStrm )
             // font used flag for underline -> 0 = used, 1 = default
             sal_uInt32 nFontFlags3 = mbUnderlUsed ? 0 : EXC_CF_FONT_UNDERL;
 
-            rStrm.WriteZeroBytes( 64 );
+            rStrm.WriteZeroBytesToRecord( 64 );
             rStrm   << nHeight
                     << nStyle
                     << maFontData.mnWeight
                     << EXC_FONTESC_NONE
                     << maFontData.mnUnderline;
-            rStrm.WriteZeroBytes( 3 );
+            rStrm.WriteZeroBytesToRecord( 3 );
             rStrm   << nColor
                     << sal_uInt32( 0 )
                     << nFontFlags1
                     << EXC_CF_FONT_ESCAPEM      // escapement never used -> set the flag
                     << nFontFlags3;
-            rStrm.WriteZeroBytes( 16 );
+            rStrm.WriteZeroBytesToRecord( 16 );
             rStrm   << sal_uInt16( 1 );         // must be 1
         }
 
diff --git a/sc/source/filter/excel/xestream.cxx b/sc/source/filter/excel/xestream.cxx
index b888b2c..c768ae1 100644
--- a/sc/source/filter/excel/xestream.cxx
+++ b/sc/source/filter/excel/xestream.cxx
@@ -256,6 +256,17 @@ void XclExpStream::WriteZeroBytes( sal_Size nBytes )
         WriteRawZeroBytes( nBytes );
 }
 
+void XclExpStream::WriteZeroBytesToRecord( sal_Size nBytes )
+{
+    if (!mbInRec)
+        // not in record.
+        return;
+
+    sal_uInt8 nZero = 0;
+    for (sal_Size i = 0; i < nBytes; ++i)
+        *this << nZero;
+}
+
 sal_Size XclExpStream::CopyFromStream( SvStream& rInStrm, sal_Size nBytes )
 {
     sal_Size nStrmPos = rInStrm.Tell();
diff --git a/sc/source/filter/inc/xestream.hxx b/sc/source/filter/inc/xestream.hxx
index 2bfe5af..df284e2 100644
--- a/sc/source/filter/inc/xestream.hxx
+++ b/sc/source/filter/inc/xestream.hxx
@@ -123,6 +123,9 @@ public:
     sal_Size            Write( const void* pData, sal_Size nBytes );
     /** Writes a sequence of nBytes zero bytes (respects slice setting). */
     void                WriteZeroBytes( sal_Size nBytes );
+
+    void                WriteZeroBytesToRecord( sal_Size nBytes );
+
     /** Copies nBytes bytes from current position of the stream rInStrm.
         @descr  Omitting the second parameter means: read to end of stream. */
     sal_Size            CopyFromStream( SvStream& rInStrm, sal_Size nBytes = STREAM_SEEK_TO_END );
diff --git a/sc/source/filter/xcl97/xcl97rec.cxx b/sc/source/filter/xcl97/xcl97rec.cxx
index bc2ca61..aeb3e3b 100644
--- a/sc/source/filter/xcl97/xcl97rec.cxx
+++ b/sc/source/filter/xcl97/xcl97rec.cxx
@@ -1488,8 +1488,10 @@ void XclExpWriteAccess::WriteBody( XclExpStream& rStrm )
         rStrm << aData[i];
 }
 
-void XclExpInterfaceEnd::WriteBody( XclExpStream& /*rStrm*/ )
+void XclExpInterfaceEnd::WriteBody( XclExpStream& rStrm )
 {
+    // Don't forget to re-enable encryption.
+    rStrm.EnableEncryption();
 }
 
 // ============================================================================
-- 
1.7.0.1

