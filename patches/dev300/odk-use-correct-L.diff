Index: setsdkenv_unix.sh.in
===================================================================
--- odk/setsdkenv_unix.sh.in	(Revision 271835)
+++ odk/setsdkenv_unix.sh.in	(Arbeitskopie)
@@ -278,34 +278,37 @@
     export STLDEBUG
 fi
 
-# For URE, prepare symbolic links for libraries:
-rm -f "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
+if [ "$platform" != "Mac OS X" ]; then
+    # For URE, prepare symbolic links for libraries:
+    rm -f "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}" \
+        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}" \
+        "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}" \
+        "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
 
-if [ -L "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}" ]
-then
-    rm -rf "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
-fi
+    if [ -L "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}" ]
+    then
+        rm -rf "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+    fi
 
 
-if [ "${OO_SDK_URE_HOME}" ]
-then
+    if [ "${OO_SDK_URE_HOME}" ]
+    then
     mkdir -p "${OO_SDK_OUT}/${directoryname}/lib"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppu.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppuhelper${comid}.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_sal.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_salhelper${comid}.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
+        ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppu.${soext}.3" \
+            "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}"
+        ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppuhelper${comid}.${soext}.3" \
+            "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}"
+        ln -s "${OO_SDK_URE_LIB_DIR}/libuno_sal.${soext}.3" \
+            "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}"
+        ln -s "${OO_SDK_URE_LIB_DIR}/libuno_salhelper${comid}.${soext}.3" \
+            "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
 
-    if [ -r "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" ]
-    then
-	ln -s "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" \
-	    "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+        if [ -r "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" ]
+        then
+	    ln -s "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" \
+	        "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+        fi
+
     fi
 
 fi
Index: setsdkenv_unix.csh.in
===================================================================
--- odk/setsdkenv_unix.csh.in	(Revision 271798)
+++ odk/setsdkenv_unix.csh.in	(Arbeitskopie)
@@ -236,32 +236,34 @@
     setenv STLDEBUG ""
 endif
 
-
-# For URE, prepare symbolic links for libraries:
-rm -f "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.so" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
-
-if ( -e "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}" ) then
-    rm -rf "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
-endif
-
-if ( "${OO_SDK_URE_HOME}" != "" ) then
-    mkdir -p "${OO_SDK_OUT}/${directoryname}/lib"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppu.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppuhelper${comid}.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_sal.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_salhelper${comid}.${soext}.3" \
+if ( "$platform" != "Mac OS X" ) then
+    # For URE, prepare symbolic links for libraries:
+    rm -f "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.so" \
+        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}" \
+        "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}" \
         "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
-
-    if ( -r "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" ) then
-	ln -s "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" \
-	    "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+    
+    if ( -e "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}" ) then
+        rm -rf "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
     endif
+    
+    if ( "${OO_SDK_URE_HOME}" != "" ) then
+        mkdir -p "${OO_SDK_OUT}/${directoryname}/lib"
+        ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppu.${soext}.3" \
+            "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}"
+        ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppuhelper${comid}.${soext}.3" \
+            "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}"
+        ln -s "${OO_SDK_URE_LIB_DIR}/libuno_sal.${soext}.3" \
+            "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}"
+        ln -s "${OO_SDK_URE_LIB_DIR}/libuno_salhelper${comid}.${soext}.3" \
+            "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
+    
+        if ( -r "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" ) then
+    	ln -s "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" \
+    	    "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+        endif
+    
+    endif
 
 endif
 
Index: settings/settings.mk
===================================================================
--- odk/settings/settings.mk	(Revision 271835)
+++ odk/settings/settings.mk	(Arbeitskopie)
@@ -216,7 +216,7 @@
 COMP_LINK_FLAGS=$(LIBRARY_LINK_FLAGS) -M $(PRJ)/settings/component.uno.map
 
 EXE_LINK_FLAGS=-w -mt -z combreloc -PIC -temp=/tmp -norunpath -Bdirect -z defs
-LINK_LIBS=-L$(OUT)/lib -L$(OO_SDK_OUT)/$(PLATFORM)/lib -L"$(OO_SDK_URE_LIB_DIR)"
+LINK_LIBS=-L$(OUT)/lib -L"$(OO_SDK_HOME)/lib" -L"$(OO_SDK_URE_LIB_DIR)"
 LINK_JAVA_LIBS=-L"$(OO_SDK_JAVA_HOME)/jre/lib/$(JAVA_PROC_TYPE)"
 
 ifeq "$(PROCTYPE)" "sparc64"
@@ -362,7 +362,7 @@
 
 #EXE_LINK_FLAGS=-Wl,--allow-shlib-undefined -Wl,-export-dynamic -Wl,-z,defs -Wl,--whole-archive -lsalcpprt -Wl,--no-whole-archive
 EXE_LINK_FLAGS=-Wl,--allow-shlib-undefined -Wl,-export-dynamic -Wl,-z,defs -Wl,--no-whole-archive
-LINK_LIBS=-L$(OUT)/lib -L$(OO_SDK_OUT)/$(PLATFORM)/lib -L"$(OO_SDK_URE_LIB_DIR)"
+LINK_LIBS=-L$(OUT)/lib -L"$(OO_SDK_HOME)/lib" -L"$(OO_SDK_URE_LIB_DIR)"
 LINK_JAVA_LIBS=-L"$(OO_SDK_JAVA_HOME)/jre/lib/$(JAVA_PROC_TYPE)"
 
 ifneq "$(OO_SDK_URE_HOME)" ""
@@ -570,7 +570,7 @@
 
 EXE_LINK_FLAGS=-Wl,--allow-shlib-undefined 
 #EXE_LINK_FLAGS+=-Wl,-export-dynamic -Wl,-z,defs
-LINK_LIBS=-L$(OUT)/lib -L$(OO_SDK_OUT)/$(PLATFORM)/lib -L"$(OO_SDK_URE_LIB_DIR)" $(PTHREAD_LIBS)
+LINK_LIBS=-L$(OUT)/lib -L"$(OO_SDK_HOME)/lib" -L"$(OO_SDK_URE_LIB_DIR)" $(PTHREAD_LIBS)
 LINK_JAVA_LIBS=-L"$(OO_SDK_JAVA_HOME)/jre/lib/$(JAVA_PROC_TYPE)"
 
 ifneq "$(OO_SDK_URE_HOME)" ""
