diff --git a/toolkit/doc/layout/TODO b/toolkit/doc/layout/TODO
index abd717c..fbc2c85 100644
--- toolkit/doc/layout/TODO
+++ toolkit/doc/layout/TODO
@@ -4,6 +4,11 @@
 ** Move everything & development into new layout-dialogs CWS
 
 ** cleanups
+*** Add XRadioButton2 and layout::VCLXRadioButton with
+    {get,set}RadioGroup.  Remove import.cxx RadioGroups::RadioGroup,
+    VCLXRadioButton::getFirstActionListener () and [actionListener
+    juggling in] layout::RadioButton_impl::SetClickHdl() and
+    EnableRadioCheck() layout::RadioButton_impl::Check.
 *** layout/import.hxx: what's this generator stuff?
 #if 0
 // generator
@@ -87,7 +92,6 @@ but keep using yes/no on Windows, eg?
 *** remove -DTEST_LAYOUT=1 from util/makefile.mk?
 
 ** fixes
-*** mpRadioGroup HACK --> use radiogroup property
 *** missing properties
 	'title' -> 'Set Zoom'
 Missing prop Title
@@ -109,6 +113,11 @@ grep zoom.src svx/source/dialog/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t
 grep wordcountdialog.src sw/source/ui/dialog/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", "layout", "janneke\\vc\\layout-cws\\toolkit\\workben\\layout\\workben.xml", $3, "layout", $6 "_label", "", "", $8, "0", $10, $11, $12, "", $14, $15}' | sed -e 's/FL_\([A-Z]*\)_label/FL_\1_text/' -e 's/\t_label/\tDLG_WORDCOUNT_title/'s
 *** sortdlg
 grep sortdlg.src ../../../sc/source/ui/src/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", "layout", "janneke\\vc\\layout-cws\\toolkit\\workben\\layout\\sort-options.xml", $3, "layout", $6 "_label", "", "", $8, "0", $10, $11, $12, "", $14, $15}' | sed -e 's/\(\(FL\|STR\)_[^\t]*\)_label/\1_text/' -e 's/\t_label/\tRID_SCDLG_SORT_title/' | grep -E '	(nl|de|en-US)	' > localize-str.sdf
+grep sortdlg.src sc/source/ui/src/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", "layout", "sc\\uiconfig\\layout\\sort-options.xml", $3, "layout", $6 "_label", "", "", $8, "0", $10, $11, $12, "", $14, $15}' | sed -e 's/\(\(FL\|STR\)_[^\t]*\)_label/\1_text/' -e 's/\t_label/\tRID_SCDLG_SORT_title/' > sc/uiconfig/layout/localize-sort-options.sdf
+*** insert-sheet
+grep instbdlg.src sc/source/ui/miscdlgs/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", "layout", "sc\\uiconfig\\layout\\insert-sheet.xml", $3, "layout", $6 "_label", "", "", $8, "0", $10, $11, $12, "", $14, $15}' | sed -e 's/\(\(FL\|STR\)_[^\t]*\)_label/\1_text/' -e 's/\t_label/\tRID_SCDLG_INSERT_TABLE_title/' > sc/uiconfig/layout/localize-insert-sheet.sdf
+*** move-copy-sheet
+grep -E 'miscdlgs.src.*(FT_DEST|FT_INSERT|STR_NEWDOC|RID_SCDLG_MOVETAB|BTN_COPY)' sc/source/ui/src/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", "layout", "sc\\uiconfig\\layout\\move-copy-sheet.xml", $3, "layout", $6 "_label", "", "", $8, "0", $10, $11, $12, "", $14, $15}' | sed -e 's/\(\(FL\|STR\)_[^\t]*\)_label/\1_text/' -e 's/\t_label/\tRID_SCDLG_MOVETAB_title/' > sc/uiconfig/layout/localize-move-copy-sheet.sdf
 
 
 * i18n
diff --git a/toolkit/inc/layout/layout-post.hxx b/toolkit/inc/layout/layout-post.hxx
index 54ed610..1d3d955 100644
--- toolkit/inc/layout/layout-post.hxx
+++ toolkit/inc/layout/layout-post.hxx
@@ -34,6 +34,10 @@
 
 #if ENABLE_LAYOUT
 
+/* Allow re-inclusion for cxx file. */
+#undef _LAYOUT_PRE_HXX
+
+
 #undef AdvancedButton
 #undef ApplyButton
 #undef Box
@@ -45,6 +49,7 @@
 #undef Control
 #undef Dialog
 #undef Edit
+#undef ErrorBox
 #undef FixedImage
 #undef FixedInfo
 #undef FixedLine
@@ -52,11 +57,15 @@
 #undef HBox
 #undef HelpButton
 #undef IgnoreButton
+#undef InfoBox
 #undef ListBox
+#undef MessBox
+#undef MessageBox
 #undef MetricField
 #undef MetricFormatter
 #undef MoreButton
 #undef MultiLineEdit
+#undef MultiListBox
 #undef NoButton
 #undef NumericField
 #undef NumericFormatter
@@ -64,36 +73,31 @@
 #undef Plugin
 #undef ProgressBar
 #undef PushButton
+#undef QueryBox
 #undef RadioButton
 #undef ResetButton
 #undef RetryButton
+#undef SfxTabPage
+#undef SfxTabDialog
 #undef SpinField
-#undef Table
+#undef TabDialog
+#undef TabControl
 #undef TabPage
+#undef Table
 #undef VBox
+#undef WarningBox
 #undef YesButton
 
 #undef ModalDialog
 #undef ModelessDialog
+#undef ScExpandedFixedText
 #undef SfxModalDialog
-#undef SfxTabPage
+#undef SfxModelessDialog
 
 #undef SvxLanguageBox
 
 #undef Window
 
-
-#undef SVX_RES
-#define SVX_RES(i)        ResId(i,DIALOG_MGR())
-
-#undef SvtResId
-
-#undef SW_RES
-#define SW_RES(i)               ResId(i,SWDIALOG_MGR())
-
-/* Allow re-inclusion for cxx file. */
-#undef _LAYOUT_PRE_HXX
-
 #endif /* ENABLE_LAYOUT */
 
 #endif /* _LAYOUT_POST_HXX */
diff --git a/toolkit/inc/layout/layout-pre.hxx b/toolkit/inc/layout/layout-pre.hxx
index fbbc1df..b628708 100644
--- toolkit/inc/layout/layout-pre.hxx
+++ toolkit/inc/layout/layout-pre.hxx
@@ -34,15 +34,8 @@
 
 #if ENABLE_LAYOUT
 
-//#if !LAYOUT
-//#define LAYOUT 1
-//#endif
-//#define LAYOUT_NS layout
-
-// TWBN, but find that SfxModalDialog and FixedLine are already defined, eg compiling
-// dlgfact.cxx
-//typedef layout::Dialog SfxModalDialog;
-//typedef layout::FixedLine FixedLine;
+///* Allow re-inclusion for next hxx file. */
+#undef _LAYOUT_POST_HXX
 
 #define AdvancedButton layout::AdvancedButton
 #define ApplyButton layout::ApplyButton
@@ -55,6 +48,7 @@
 #define Control layout::Control
 #define Dialog layout::Dialog
 #define Edit layout::Edit
+#define ErrorBox layout::ErrorBox
 #define FixedImage layout::FixedImage
 #define FixedInfo layout::FixedInfo
 #define FixedLine layout::FixedLine
@@ -62,11 +56,15 @@
 #define HBox layout::HBox
 #define HelpButton layout::HelpButton
 #define IgnoreButton layout::IgnoreButton
+#define InfoBox layout::InfoBox
 #define ListBox layout::ListBox
+#define MessBox layout::MessBox
+#define MessageBox layout::MessageBox
 #define MetricField layout::MetricField
 #define MetricFormatter layout::MetricFormatter
 #define MoreButton layout::MoreButton
 #define MultiLineEdit layout::MultiLineEdit
+#define MultiListBox layout::MultiListBox
 #define NoButton layout::NoButton
 #define NumericField layout::NumericField
 #define NumericFormatter layout::NumericFormatter
@@ -74,64 +72,31 @@
 #define Plugin layout::Plugin
 #define ProgressBar layout::ProgressBar
 #define PushButton layout::PushButton
+#define QueryBox layout::QueryBox
 #define RadioButton layout::RadioButton
 #define ResetButton layout::ResetButton
 #define RetryButton layout::RetryButton
+#define SfxTabDialog layout::SfxTabDialog
+#define SfxTabPage layout::SfxTabPage
 #define SpinField layout::SpinField
-#define Table layout::Table
+#define TabControl layout::TabControl
 #define TabPage layout::TabPage
+#define Table layout::Table
 #define VBox layout::VBox
+#define WarningBox layout::WarningBox
 #define YesButton layout::YesButton
 
 #define ModalDialog Dialog
 #define ModelessDialog Dialog
+#define ScExpandedFixedText FixedText
 #define SfxModalDialog Dialog
-#define SfxTabPage TabPage
+#define SfxModelessDialog Dialog
+#define TabDialog Dialog
 
 #define SvxLanguageBox ListBox
 
 #define Window ::Window
 
-#define LAYOUT_DIALOG_PARENT\
-    VCLXWindow::GetImplementation( uno::Reference <awt::XWindow> ( GetPeer(), uno::UNO_QUERY ) )->GetWindow()
-
-#undef SVX_RES
-#define SVX_RES(x) #x
-#undef SvtResId
-#define SvtResId(x) #x
-#undef SW_RES
-#define SW_RES(x) #x
-
-/* Hmm.  These hacks make zoom.cxx, wordcountdialog.cxx, ... diffs
- * smaller but 'tis not really scalable. */
-#ifdef _LAYOUT_POST_HXX
-
-#ifdef _SVX_RECOVER_CXX
-#undef SfxModalDialog
-// 3rd parameter must match ID in <modaldialog> "RID_SVXDLG_RECOVER", localize.sdf
-#define SfxModalDialog( pParent, SVX_RES_RID ) Dialog( pParent, "recover.xml", "RID_SVXDLG_RECOVER" )
-#endif /* _SVX_RECOVER_CXX */
-
-#ifdef SW_WORDCOUNTDIALOG_HXX
-#undef SfxModalDialog
-// 3rd parameter must match ID in <modaldialog> "DLG_WORDCOUNT", localize.sdf
-#define SfxModalDialog( pParent, SW_RES_RID ) Dialog( pParent, "wordcount.xml", "DLG_WORDCOUNT" )
-#define SW_WORDCOUNTDIALOG_HRC
-#endif /* SW_WORDCOUNTDIALOG_HXX */
-
-#ifdef _SVX_ZOOM_CXX
-#undef SfxModalDialog
-// 3rd parameter must match ID in <modaldialog> "RID_SVXDLG_ZOOM", localize.sdf
-#define SfxModalDialog( pParent, SVX_RES_RID ) Dialog( pParent, "zoom.xml", "RID_SVXDLG_ZOOM" )
-#define _SVX_ZOOM_HRC
-#endif /* _SVX_ZOOM_CXX */
-
-#endif /* _LAYOUT_POST_HXX */
-
-#else /* !ENABLE_LAYOUT */
-
-#define LAYOUT_PRE_POST 1
-
-#endif /* !ENABLE_LAYOUT */
+#endif /* ENABLE_LAYOUT */
 
 #endif /* _LAYOUT_PRE_HXX */
diff --git a/toolkit/inc/layout/layout.hxx b/toolkit/inc/layout/layout.hxx
index 62b7ffa..8db7e00 100644
--- toolkit/inc/layout/layout.hxx
+++ toolkit/inc/layout/layout.hxx
@@ -32,28 +32,46 @@
 #ifndef _LAYOUT_HXX
 #define _LAYOUT_HXX
 
-#include <com/sun/star/uno/XInterface.hpp>
 #include <com/sun/star/awt/XLayoutContainer.hpp>
+#include <com/sun/star/uno/XInterface.hpp>
 #include <com/sun/star/util/Color.hpp>
 #include <i18npool/lang.h>
+#include <toolkit/dllapi.h>
 #include <tools/gen.hxx>
 #include <tools/link.hxx>
 #include <tools/string.hxx>
-
-// FIXME: eventually wrap FieldUnit
+#include <vcl/combobox.h>
 #include <vcl/fldunit.hxx>
-// FIXME: eventually wrap this too ...
+#include <vcl/lstbox.h>
+#include <vcl/smartid.hxx>
 #include <vcl/wintypes.hxx>
 
-#include <toolkit/dllapi.h>
-
+class Button;
+class ComboBox;
 class Control;
+class Dialog;
 class Image;
-class SfxPoolItem;
-class SfxItemSet;
+class ListBox;
+class MapMode;
+class MultiListBox;
+class NotifyEvent;
+class Pointer;
+class PushButton;
+class RadioButton;
+class ResId;
+class SfxChildWinInfo;
+class TabControl;
+class TabPage;
+class VCLXRadioButton;
 class VCLXWindow;
 class Window;
-class TabPage;
+
+namespace layoutimpl
+{
+class VCLXTabControl;
+}
+
+class VCLXTabControl;
 
 namespace com { namespace sun { namespace star { namespace awt { class XWindow; } } } }
 
@@ -70,7 +88,7 @@ class TOOLKIT_DLLPUBLIC Context
 public:
     Context( char const* pPath );
     virtual ~Context();
-    PeerHandle GetPeerHandle( char const* pId, sal_uInt32 nId = 0 ) const;
+    PeerHandle GetPeerHandle( char const* id, sal_uInt32 nId = 0 ) const;
     void setToplevel( PeerHandle xToplevel );
     PeerHandle getToplevel();
     PeerHandle getRoot();
@@ -83,46 +101,88 @@ public:
             par( pImpl ) {} \
         char const* GetUnoName() const; \
     public: \
-        t( Context *pCtx, char const* pId, sal_uInt32 nId = 0 ); \
-        t( Window *pParent, WinBits nStyle = defaultWinBit )
+        t( Context *context, char const* id, sal_uInt32 nId = 0 ); \
+        t( Window *parent, WinBits nStyle = defaultWinBit ); \
+        t (Window *parent, ResId const &res)
 #define DECL_GET_IMPL(t) \
         inline t##Impl &getImpl() const
 
+#define DECL_GET_WINDOW( cls ) ::cls* Get##cls() const
+#define IMPL_GET_WINDOW( cls ) ::cls* cls::Get##cls() const { return reinterpret_cast< ::cls*>( GetWindow() ); }
+
+#define DECL_GET_VCLXWINDOW( cls ) ::VCLX##cls* GetVCLX##cls() const
+#define IMPL_GET_VCLXWINDOW( cls ) ::VCLX##cls* cls::Get##VCLX##cls() const { return reinterpret_cast< ::VCLX##cls*>( GetVCLXWindow() ); }
+
+#define DECL_GET_LAYOUT_VCLXWINDOW( cls ) ::layoutimpl::VCLX##cls* GetVCLX##cls() const
+#define IMPL_GET_LAYOUT_VCLXWINDOW( cls ) ::layoutimpl::VCLX##cls* cls::Get##VCLX##cls() const { return reinterpret_cast< ::layoutimpl::VCLX##cls*>( GetVCLXWindow() ); }
+
 // follows the VCL inheritance hierarchy ...
 
 class WindowImpl;
 class TOOLKIT_DLLPUBLIC Window
 {
 protected:
+    friend class WindowImpl;
     WindowImpl *mpImpl;
-    static PeerHandle CreatePeer( Window *pParent, WinBits nStyle,
+    static PeerHandle CreatePeer( Window *parent, WinBits nStyle,
                                   char const* pName);
+
+    virtual void setRes (ResId const& res);
+
 public:
     DECL_GET_IMPL( Window );
     explicit Window( WindowImpl *pImpl );
     virtual ~Window();
 
-    PeerHandle GetPeer();
+    PeerHandle GetPeer() const;
     Context *getContext();
 
     void Enable( bool bEnable = true );
     inline void Disable() { Enable( false ); }
-    void Show( BOOL bVisible = TRUE );
-    inline void Hide() { Show( FALSE ); }
+    void Show( bool bVisible = true );
+    inline void Hide() { Show( false ); }
     void GrabFocus();
     void FreeResource() {}
 
-    void SetParent( Window *pParent );
-    void SetParent( ::Window *pParent );
+    void SetParent( ::Window *parent );
+    virtual void ParentSet (Window *window);
+    void SetParent( Window *parent );
 
-    css::uno::Reference<css::awt::XWindow> GetRef();
-    VCLXWindow* GetVCLXWindow();
-    ::Window* GetWindow();
-    ::Window* GetParent();
+    css::uno::Reference<css::awt::XWindow> GetRef() const;
+    VCLXWindow* GetVCLXWindow() const;
+    ::Window* GetWindow() const;
+    ::Window* GetParent() const;
 
+    void SetPointer( Pointer const& pointer );
+    Pointer const& GetPointer() const;
     WinBits GetStyle();
-    void SetStyle( WinBits nStyle );
-    void SetUpdateMode( bool /*bUpdate*/ ) { }
+    void SetText( String const& str );
+    String GetText() const;
+    void SetStyle( WinBits style );
+    void SetUpdateMode( bool mode );
+    void SetHelpId( sal_uIntPtr id );
+    sal_uIntPtr GetHelpId() const;
+    void SetSmartHelpId( SmartId const&, SmartIdUpdateMode mode=SMART_SET_SMART );
+    SmartId GetSmartHelpId() const;
+    void EnterWait ();
+    void LeaveWait ();
+    bool IsWait () const;
+    //void Enable (bool enable=true, bool child=true);
+    //void Disable (bool child=true);
+    bool IsEnabled () const;
+    void EnableInput (bool enable=true, bool child=true);
+    bool IsInputEnabled () const;
+
+    bool IsVisible () const;
+    bool HasChildPathFocus (bool systemWindow=false) const;
+    void SetPosPixel (Point const&);
+    Point GetPosPixel () const;
+    void SetSizePixel (Size const&);
+    Size GetSizePixel () const;
+    sal_Int32 GetCtrlTextWidth (String const& str) const;
+    sal_Int32 GetTextHeight () const;
+
+    Size LogicToPixel( Size const& size, MapMode const& mapMode=(MapMode const&)*(MapMode*)0 ) const;
 };
 
 class ControlImpl;
@@ -130,8 +190,13 @@ class TOOLKIT_DLLPUBLIC Control : public Window
 {
     DECL_GET_IMPL( Control );
     DECL_CONSTRUCTORS( Control, Window, 0 );
+
 public:
-// void SetText( String const& rStr ); - can't do this here ...
+    ~Control ();
+    void SetGetFocusHdl (Link const& link);
+    Link& GetGetFocusHdl ();
+    void SetLoseFocusHdl (Link const& link);
+    Link& GetLoseFocusHdl ();
 };
 
 class FixedLineImpl;
@@ -139,6 +204,7 @@ class TOOLKIT_DLLPUBLIC FixedLine : public Control
 {
     DECL_GET_IMPL( FixedLine );
     DECL_CONSTRUCTORS( FixedLine, Control, WB_HORZ );
+
 public:
     bool IsEnabled();
 };
@@ -148,7 +214,9 @@ class TOOLKIT_DLLPUBLIC FixedText : public Control
 {
     DECL_GET_IMPL( FixedText );
     DECL_CONSTRUCTORS( FixedText, Control, 0 );
+
 public:
+    ~FixedText ();
     void SetText( String const& rStr );
 };
 
@@ -183,13 +251,18 @@ class TOOLKIT_DLLPUBLIC Button : public Control
 {
     DECL_GET_IMPL( Button );
     DECL_CONSTRUCTORS( Button, Control, 0 );
+    DECL_GET_WINDOW (Button);
+
 public:
+    ~Button ();
+    static String GetStandardText (sal_uInt16 button_type);
     void SetText( String const& rStr );
-    BOOL SetModeImage( const Image& rImage );
+    bool SetModeImage( const Image& rImage );
     void SetImageAlign( ImageAlign eAlign );
 
     void SetClickHdl( Link const& rLink );
     virtual void Click() /* pure virtual? */;
+    Link& GetClickHdl ();
 };
 
 class PushButtonImpl;
@@ -197,9 +270,12 @@ class TOOLKIT_DLLPUBLIC PushButton : public Button
 {
     DECL_GET_IMPL( PushButton );
     DECL_CONSTRUCTORS( PushButton, Button, 0 );
+    DECL_GET_WINDOW (PushButton);
+
 public:
-    void Check( BOOL bCheck = TRUE );
-    BOOL IsChecked() const;
+    ~PushButton ();
+    void Check( bool bCheck=true );
+    bool IsChecked() const;
 
     void Toggle();
     void SetToggleHdl( Link const& rLink );
@@ -252,6 +328,12 @@ class TOOLKIT_DLLPUBLIC AdvancedButton : public PushButton
     void AddSimple( Window* w );
     void RemoveAdvanced( Window* w );
     void RemoveSimple( Window* w );
+
+    void SetAdvancedText (rtl::OUString const& text);
+    void SetSimpleText (rtl::OUString const& text);
+    rtl::OUString GetAdvancedText () const;
+    rtl::OUString GetSimpleText () const;
+    void SetDelta (int);
 };
 
 class MoreButtonImpl;
@@ -261,6 +343,11 @@ class TOOLKIT_DLLPUBLIC MoreButton : public AdvancedButton
     DECL_GET_IMPL( MoreButton );
     void AddWindow( Window* w );
     void RemoveWindow( Window* w );
+
+    void SetMoreText (rtl::OUString const& text);
+    void SetLessText (rtl::OUString const& text);
+    rtl::OUString GetMoreText () const;
+    rtl::OUString GetLessText () const;
 };
 
 class RadioButtonImpl;
@@ -268,9 +355,12 @@ class TOOLKIT_DLLPUBLIC RadioButton : public Button
 {
     DECL_GET_IMPL( RadioButton );
     DECL_CONSTRUCTORS( RadioButton, Button, 0 );
+    DECL_GET_WINDOW( RadioButton );
+    DECL_GET_VCLXWINDOW( RadioButton );
 public:
-    void Check( BOOL bCheck = TRUE );
-    BOOL IsChecked() const;
+    ~RadioButton ();
+    void Check( bool bCheck=true );
+    bool IsChecked() const;
 
     void Toggle();
     void SetToggleHdl( Link const& rLink );
@@ -281,9 +371,11 @@ class TOOLKIT_DLLPUBLIC CheckBox : public Button
 {
     DECL_GET_IMPL( CheckBox );
     DECL_CONSTRUCTORS( CheckBox, Button, 0 );
+
 public:
-    void Check( BOOL bCheck = TRUE );
-    BOOL IsChecked() const;
+    ~CheckBox ();
+    void Check( bool bCheck=true );
+    bool IsChecked() const;
 
     void Toggle();
     void SetToggleHdl( Link const& rLink );
@@ -294,9 +386,11 @@ class TOOLKIT_DLLPUBLIC Edit : public Control
 {
     DECL_GET_IMPL( Edit );
     DECL_CONSTRUCTORS( Edit, Control, WB_BORDER );
+
 public:
-    void SetText( XubString const& rStr ) const;
-    XubString GetText() const;
+    ~Edit ();
+    void SetText( String const& rStr ) const;
+    String GetText() const;
     void SetModifyHdl( Link const& rLink );
     void SetSelection( Selection const& rSelection );
 };
@@ -320,8 +414,7 @@ class TOOLKIT_DLLPUBLIC FormatterBase
 {
 protected:
     FormatterBaseImpl *mpFormatImpl;
-    FormatterBase( FormatterBaseImpl *pFormatImpl )
-        : mpFormatImpl( pFormatImpl ) {}
+    FormatterBase( FormatterBaseImpl *pFormatImpl );
 };
 
 class NumericFormatterImpl;
@@ -346,8 +439,8 @@ class TOOLKIT_DLLPUBLIC NumericField : public SpinField, public NumericFormatter
 {
     DECL_GET_IMPL( NumericField );
 public:
-    NumericField( Context *pCtx, char const* pId, sal_uInt32 nId = 0 );
-    NumericField( Window *pParent, WinBits nStyle );
+    NumericField( Context *context, char const* id, sal_uInt32 nId=0 );
+    NumericField( Window *parent, WinBits nStyle );
 };
 
 class MetricFormatterImpl;
@@ -358,12 +451,12 @@ class TOOLKIT_DLLPUBLIC MetricFormatter : public FormatterBase
     explicit MetricFormatter( FormatterBaseImpl *pImpl );
     MetricFormatterImpl &getFormatImpl() const;
 public:
-    void SetMin( sal_Int64 nNewMin, FieldUnit nUnit = FUNIT_NONE );
-    void SetMax( sal_Int64 nNewMax, FieldUnit nUnit = FUNIT_NONE );
-    void SetFirst( sal_Int64 nNewFirst, FieldUnit nUnit = FUNIT_NONE );
-    void SetLast( sal_Int64 nNewLast, FieldUnit nUnit = FUNIT_NONE );
-    void SetValue( sal_Int64 nNewValue, FieldUnit nUnit = FUNIT_NONE );
-    sal_Int64 GetValue( FieldUnit nUnit = FUNIT_NONE ) const;
+    void SetMin( sal_Int64 nNewMin, FieldUnit nUnit=FUNIT_NONE );
+    void SetMax( sal_Int64 nNewMax, FieldUnit nUnit=FUNIT_NONE );
+    void SetFirst( sal_Int64 nNewFirst, FieldUnit nUnit=FUNIT_NONE );
+    void SetLast( sal_Int64 nNewLast, FieldUnit nUnit=FUNIT_NONE );
+    void SetValue( sal_Int64 nNewValue, FieldUnit nUnit=FUNIT_NONE );
+    sal_Int64 GetValue( FieldUnit nUnit=FUNIT_NONE ) const;
 
     void SetSpinSize( sal_Int64 nNewSize );
 };
@@ -373,124 +466,209 @@ class TOOLKIT_DLLPUBLIC MetricField : public SpinField, public MetricFormatter
 {
     DECL_GET_IMPL( MetricField );
 public:
-    MetricField( Context *pCtx, char const* pId, sal_uInt32 nId = 0 );
-    MetricField( Window *pParent, WinBits nStyle );
+    MetricField( Context *context, char const* id, sal_uInt32 nId=0 );
+    MetricField( Window *parent, WinBits nStyle );
 };
 
-#define COMBOBOX_APPEND            ((USHORT)0xFFFF)
-#define COMBOBOX_ENTRY_NOTFOUND    ((USHORT)0xFFFF)
 class ComboBoxImpl;
 class TOOLKIT_DLLPUBLIC ComboBox : public Edit
 {
     DECL_GET_IMPL( ComboBox );
+    DECL_GET_WINDOW (ComboBox );
     DECL_CONSTRUCTORS( ComboBox, Edit, 0 );
 
 public:
-    USHORT InsertEntry( XubString const& rStr, USHORT nPos = COMBOBOX_APPEND );
+    ~ComboBox ();
+    sal_uInt16 InsertEntry( XubString const& rStr, sal_uInt16 nPos=COMBOBOX_APPEND );
     void RemoveEntry( XubString const& rStr );
-    void RemoveEntry( USHORT nPos );
+    void RemoveEntry( sal_uInt16 nPos );
     void Clear();
 
-    USHORT GetEntryPos( XubString const& rStr ) const;
-    XubString GetEntry( USHORT nPos ) const;
-    USHORT GetEntryCount() const;
+    sal_uInt16 GetEntryPos( XubString const& rStr ) const;
+    XubString GetEntry( sal_uInt16 nPos ) const;
+    sal_uInt16 GetEntryCount() const;
 
     void SetClickHdl( Link const& rLink );
     void SetSelectHdl( Link const& rLink );
+    void EnableAutocomplete (bool enable, bool matchCase=false );
 };
 
-#define LISTBOX_APPEND               ((USHORT)0xFFFF)
-#define LISTBOX_ENTRY_NOTFOUND       ((USHORT)0xFFFF)
 class ListBoxImpl;
 class TOOLKIT_DLLPUBLIC ListBox : public Control
 {
     DECL_GET_IMPL( ListBox );
     DECL_CONSTRUCTORS( ListBox, Control, WB_BORDER );
+    DECL_GET_WINDOW (ListBox);
+
 public:
-    USHORT InsertEntry( XubString const& rStr, USHORT nPos = LISTBOX_APPEND );
+    ~ListBox ();
+    sal_uInt16 InsertEntry( XubString const& rStr, sal_uInt16 nPos=LISTBOX_APPEND );
 
     void RemoveEntry( XubString const& rStr );
-    void RemoveEntry( USHORT nPos );
+    void RemoveEntry( sal_uInt16 nPos );
     void Clear();
 
-    USHORT GetEntryPos( XubString const& rStr ) const;
-    XubString GetEntry( USHORT nPos ) const;
-    USHORT GetEntryCount() const;
+    sal_uInt16 GetEntryPos( XubString const& rStr ) const;
+    XubString GetEntry( sal_uInt16 nPos ) const;
+    sal_uInt16 GetEntryCount() const;
 
-    void SelectEntry( XubString const& rStr, BOOL bSelect = TRUE );
-    void SelectEntryPos( USHORT nPos, BOOL bSelect = TRUE );
+    void SelectEntry( XubString const& rStr, bool bSelect=true );
+    void SelectEntryPos( sal_uInt16 nPos, bool bSelect=true );
 
-    USHORT GetSelectEntryCount() const;
-    XubString GetSelectEntry( USHORT nSelIndex = 0 ) const;
-    USHORT GetSelectEntryPos( USHORT nSelIndex = 0 ) const;
+    sal_uInt16 GetSelectEntryCount() const;
+    XubString GetSelectEntry( sal_uInt16 nSelIndex=0 ) const;
+    sal_uInt16 GetSelectEntryPos( sal_uInt16 nSelIndex=0 ) const;
 
     void SetSelectHdl( Link const& rLink );
     void SetClickHdl( Link const& rLink );
 
-    void SetEntryData( USHORT/*nPos*/, void*/*pNewData*/) { }
-    void* GetEntryData( USHORT/*nPos*/) const { return 0; } 
+    void SetEntryData (sal_uInt16 pos, void* data);
+    void* GetEntryData (sal_uInt16 pos) const;
 
     // SvxLanguageBox
-    void SetLanguageList( INT16/*nLangList*/, bool/*bHasLangNone*/, bool /*bLangNoneIsLangAll*/= false, bool /*bCheckSpellAvail*/= false ) { }
+    void SetLanguageList (sal_Int16 list, bool hasLangNone, bool langNoneIsLangAll=false, bool checkSpellAvailable=false);
 
-    USHORT InsertLanguage( const LanguageType/*eLangType*/, USHORT/*nPos*/= LISTBOX_APPEND ) { return 0; }
-    USHORT InsertLanguage( const LanguageType/*eLangType*/, bool/*bCheckEntry*/, USHORT /*nPos*/= LISTBOX_APPEND ) { return 0; }
-    void RemoveLanguage( const LanguageType/*eLangType*/) { }
-    void SelectLanguage( const LanguageType/*eLangType*/, bool/*bSelect*/= true) { }
-    LanguageType GetSelectLanguage() const { return 0; }
-    bool IsLanguageSelected( const LanguageType/*eLangType*/) const { return true; }
+    sal_uInt16 InsertLanguage (LanguageType const type, sal_uInt16 pos=LISTBOX_APPEND);
+    sal_uInt16 InsertLanguage (LanguageType const type, bool checkEntry, sal_uInt16 pos=LISTBOX_APPEND);
+    void RemoveLanguage (LanguageType const type);
+    void SelectLanguage (LanguageType const type, bool select=true);
+    LanguageType GetSelectLanguage () const;
+    bool IsLanguageSelected( LanguageType const type) const;
+};
+
+class MultiListBoxImpl;
+class TOOLKIT_DLLPUBLIC MultiListBox : public ListBox
+{
+    DECL_GET_IMPL( MultiListBox );
+    DECL_CONSTRUCTORS( MultiListBox, ListBox, 0 );
+    DECL_GET_WINDOW( MultiListBox );
 };
 
 class DialogImpl;
 class TOOLKIT_DLLPUBLIC Dialog : public Context, public Window
 {
-    DECL_GET_IMPL( Dialog );
+    DECL_GET_WINDOW (Dialog);
+
 public:
-    Dialog( Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0 );
-    Dialog( ::Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0 );
-    short Execute();
-    void EndDialog( long nResult = 0 );
+    DECL_GET_IMPL (Dialog);
+    Dialog( Window *parent, char const* xml_file, char const* id, sal_uInt32 nId=0 );
+    Dialog( ::Window *parent, char const* xml_file, char const* id, sal_uInt32 nId=0 );
+    ~Dialog ();
+    virtual short Execute();
+    void EndDialog( long nResult=0 );
     void SetText( String const& rStr );
+    void SetTitle (String const& rStr );
+    bool Close ();
+    long Notify (NotifyEvent & event);
+
+    // Sxf*Dialog
+    bool bConstruct;
+	void Initialize (SfxChildWinInfo*);
+};
+
+#define DECL_MESSAGE_BOX_CTORS(Name)\
+    public:\
+    Name##Box (::Window *parent, char const* message,\
+               char const* yes=0, char const* no=0, sal_uIntPtr help_id=0,\
+               char const* xml_file="message-box.xml", char const* id="message-box");\
+    Name##Box (::Window *parent, rtl::OUString const& message,\
+               rtl::OUString yes=String (),\
+               rtl::OUString no=String (),\
+               sal_uIntPtr help_id=0,\
+               char const* xml_file="message-box.xml", char const* id="message-box");\
+    Name##Box (::Window *parent, WinBits, char const* message,\
+               char const* yes=0, char const* no=0, sal_uIntPtr help_id=0,\
+               char const* xml_file="message-box.xml", char const* id="message-box");\
+    Name##Box (::Window *parent, WinBits, rtl::OUString const& message,\
+               rtl::OUString yes=String (),\
+               rtl::OUString no=String (),\
+               sal_uIntPtr help_id=0,\
+               char const* xml_file="message-box.xml", char const* id="message-box")\
+
+class TOOLKIT_DLLPUBLIC MessageBox : public Dialog
+{
+    DECL_MESSAGE_BOX_CTORS(Message);
+
+protected:
+    FixedImage imageError;
+    FixedImage imageInfo;
+    FixedImage imageQuery;
+    FixedImage imageWarning;
+    FixedText messageText;
+    CancelButton cancelButton;
+    HelpButton helpButton;
+    IgnoreButton ignoreButton;
+    NoButton noButton;
+    RetryButton retryButton;
+    YesButton yesButton;
+
+    void bits_init (WinBits bits, rtl::OUString const& message,
+                    rtl::OUString yes, rtl::OUString, sal_uIntPtr help_id);
+    void init (rtl::OUString const& message,
+               rtl::OUString const& yes, rtl::OUString const& no, sal_uIntPtr help_id);
+    void init (char const* message, char const* yes, char const* no, sal_uIntPtr help_id);
+};
+
+#define CLASS_MESSAGE_BOX(Name)\
+    class TOOLKIT_DLLPUBLIC Name##Box : public MessageBox\
+    {\
+        DECL_MESSAGE_BOX_CTORS (Name);\
+    }
+
+//CLASS_MESSAGE_BOX (Mess);
+typedef MessageBox MessBox;
+CLASS_MESSAGE_BOX (Error);
+CLASS_MESSAGE_BOX (Info);
+CLASS_MESSAGE_BOX (Query);
+CLASS_MESSAGE_BOX (Warning);
+
+#undef CLASS_MESSAGE_BOX
+
+#ifndef TAB_APPEND
+#define TAB_APPEND -1
+#endif /* !TAB_APPEND */
+
+class TabControlImpl;
+class TOOLKIT_DLLPUBLIC TabControl : public Control
+{
+    DECL_GET_IMPL (TabControl);
+    DECL_CONSTRUCTORS (TabControl, Control, 0);
+    DECL_GET_WINDOW (TabControl);
+    DECL_GET_LAYOUT_VCLXWINDOW (TabControl);
+
+public:
+    ~TabControl ();
+    void InsertPage (sal_uInt16 id, String const& title, sal_uInt16 pos=TAB_APPEND);
+    void RemovePage (sal_uInt16 id);
+    sal_uInt16 GetPageCount () const;
+    sal_uInt16 GetPageId (sal_uInt16 pos) const;
+    sal_uInt16 GetPagePos (sal_uInt16 id) const;
+    void SetCurPageId (sal_uInt16 id);
+    sal_uInt16 GetCurPageId () const;
+    void SetTabPage (sal_uInt16 id, ::TabPage* page);
+    ::TabPage* GetTabPage (sal_uInt16 id) const;
+    void SetActivatePageHdl (Link const& link);
+    Link& GetActivatePageHdl () const;
+    void SetDeactivatePageHdl (Link const& link);
+    Link& GetDeactivatePageHdl () const;
+    void SetTabPageSizePixel (Size const& size);
+    Size GetTabPageSizePixel () const;
 };
 
-#define DECL_GET_WINDOW( cls ) ::cls* Get##cls()
-#define IMPL_GET_WINDOW( cls ) ::cls* cls::Get##cls() { return reinterpret_cast< ::cls*>( GetWindow() ); }
 class TabPageImpl;
 class TOOLKIT_DLLPUBLIC TabPage : public Context, public Window
 {
     DECL_GET_IMPL( TabPage );
 public:
     static ::Window* global_parent;
+    static TabControl* global_tabcontrol;
     
-    TabPage( Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0, SfxItemSet const* set = 0 );
-    TabPage( ::Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0, SfxItemSet const* set = 0 );
+    TabPage( Window *parent, char const* xml_file, char const* id, sal_uInt32 nId=0 );
+    TabPage( ::Window *parent, char const* xml_file, char const* id, sal_uInt32 nId=0 );
     ~TabPage();
-    //DECL_GET_WINDOW( TabPage );
-    ::TabPage* GetTabPage();
+    DECL_GET_WINDOW( TabPage );
     virtual void ActivatePage();
     virtual void DeactivatePage();
-#if 0
-};
-
-//FIXME: move to sfx2 or svtools layout.hxx
-class TOOLKIT_DLLPUBLIC SfxTabPage : public TabPage
-{
-public:
-    SfxTabPage( Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0, SfxItemSet const* set = 0 );
-    SfxTabPage( ::Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0, SfxItemSet const* set = 0 );
-#endif
-    // SfxTabPage...
-    enum PageAction { KEEP_PAGE, LEAVE_PAGE, REFRESH_SET };
-
-    bool bHasExchangeSupport;
-    bool HasExchangeSupport() { return bHasExchangeSupport; }
-    SfxItemSet const* pSet;
-    SfxItemSet const& GetItemSet() const { return *pSet; }
-    virtual void Reset( SfxItemSet const& r );
-    void SetExchangeSupport( bool exchangeSupport = true ) { bHasExchangeSupport = exchangeSupport; }
-    //static const SfxPoolItem* GetItem( const SfxItemSet& rSet, USHORT nSlot );
-	virtual void ActivatePage( SfxItemSet const& ) { }
-	virtual int DeactivatePage( SfxItemSet* ) { return LEAVE_PAGE; }
 };
 
 class ProgressBarImpl;
@@ -516,7 +694,7 @@ protected:
     css::uno::Reference< css::awt::XLayoutContainer > mxContainer;
     Container( rtl::OUString const& rName, sal_Int32 nBorder );
 public:
-    Container( Context const* pCtx, char const* pId );
+    Container( Context const* context, char const* id );
 
     void Add( Window *pWindow );
     void Add( Container *pContainer );
@@ -540,11 +718,11 @@ class TOOLKIT_DLLPUBLIC Table : public Container
 protected:
     Table( sal_Int32 nBorder, sal_Int32 nColumns );
 public:
-    Table( Context const* pCtx, char const* pId );
+    Table( Context const* context, char const* id );
     void Add( Window *pWindow, bool bXExpand, bool bYExpand,
-              sal_Int32 nXSpan = 1, sal_Int32 nYSpan = 1 );
+              sal_Int32 nXSpan=1, sal_Int32 nYSpan=1 );
     void Add( Container *pContainer, bool bXExpand, bool bYExpand,
-              sal_Int32 nXSpan = 1, sal_Int32 nYSpan = 1 );
+              sal_Int32 nXSpan=1, sal_Int32 nYSpan=1 );
 
 private:
     void setProps( css::uno::Reference< css::awt::XLayoutConstrains > xChild,
@@ -556,7 +734,7 @@ class TOOLKIT_DLLPUBLIC Box : public Container
 protected:
     Box( rtl::OUString const& rName, sal_Int32 nBorder, bool bHomogeneous );
 public:
-    Box( Context const* pCtx, char const* pId );
+    Box( Context const* context, char const* id );
     void Add( Window *pWindow, bool bExpand, bool bFill, sal_Int32 nPadding);
     void Add( Container *pContainer, bool bExpand, bool bFill, sal_Int32 nPadding);
 
@@ -568,13 +746,13 @@ private:
 class TOOLKIT_DLLPUBLIC HBox : public Box
 {
 public:
-    HBox( Context const* pCtx, char const* pId );
+    HBox( Context const* context, char const* id );
     HBox( sal_Int32 nBorder, bool bHomogeneous );
 };
 class TOOLKIT_DLLPUBLIC VBox : public Box
 {
 public:
-    VBox( Context const* pCtx, char const* pId );
+    VBox( Context const* context, char const* id );
     VBox( sal_Int32 nBorder, bool bHomogeneous );
 };
 
@@ -585,7 +763,7 @@ class TOOLKIT_DLLPUBLIC Plugin : public Control
     //DECL_CONSTRUCTORS( Plugin, Control, 0 );
 public:
     ::Control *mpPlugin;
-    Plugin( Context *pCtx, char const* pId, ::Control *plugin );
+    Plugin( Context *context, char const* id, ::Control *plugin );
 };
 
 class LocalizedStringImpl;
@@ -593,13 +771,36 @@ class TOOLKIT_DLLPUBLIC LocalizedString : public Window
 {
     DECL_GET_IMPL( LocalizedString );
 public:
-    LocalizedString( Context *pCtx, char const* pId );
+    LocalizedString( Context *context, char const* id );
 
     String operator =( String const& );
     operator String();
 //    operator String const&() const;
 };
 
+class InPlugImpl;
+class TOOLKIT_DLLPUBLIC InPlug : public Context, public Window
+{
+    DECL_GET_IMPL (InPlug);
+
+public:
+    InPlug ( Window *parent, char const* xml_file, char const* id, sal_uInt32 nId=0);
+    InPlug ( ::Window *parent, char const* xml_file, char const* id, sal_uInt32 nId=0);
+
+    void ParentSet (Window *window);
+};
+
 } // end namespace layout
 
+#if ENABLE_LAYOUT
+#define LAYOUT_NS layout::
+#define LAYOUT_DIALOG_PARENT\
+    VCLXWindow::GetImplementation( uno::Reference <awt::XWindow> ( GetPeer(), uno::UNO_QUERY ) )->GetWindow()
+#define LAYOUT_THIS_WINDOW( this ) this->GetWindow ()
+#else /* !ENABLE_LAYOUT */
+#define LAYOUT_NS
+#define LAYOUT_DIALOG_PARENT this
+#define LAYOUT_THIS_WINDOW( this ) this
+#endif /* !ENABLE_LAYOUT */
+
 #endif /* _LAYOUT_HXX */
diff --git a/toolkit/inc/toolkit/awt/vclxwindows.hxx b/toolkit/inc/toolkit/awt/vclxwindows.hxx
index 4c250ba..27a803c 100644
--- toolkit/inc/toolkit/awt/vclxwindows.hxx
+++ toolkit/inc/toolkit/awt/vclxwindows.hxx
@@ -181,6 +181,7 @@ protected:
 
 public:
 					VCLXButton();
+    ~VCLXButton();
 
 	// ::com::sun::star::lang::XComponent
     void SAL_CALL dispose(  ) throw(::com::sun::star::uno::RuntimeException);
@@ -346,6 +347,8 @@ public:
 
     static void     ImplGetPropertyIds( std::list< sal_uInt16 > &aIds );
     virtual void    GetPropertyIds( std::list< sal_uInt16 > &aIds ) { return ImplGetPropertyIds( aIds ); }
+
+    ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > getFirstActionListener ();
 };
 
 //	----------------------------------------------------
@@ -764,6 +767,7 @@ protected:
 
 public:
 						VCLXComboBox();
+    ~VCLXComboBox();
 
 	// ::com::sun::star::uno::XInterface
     ::com::sun::star::uno::Any					SAL_CALL queryInterface( const ::com::sun::star::uno::Type & rType ) throw(::com::sun::star::uno::RuntimeException);
diff --git a/toolkit/prj/build.lst b/toolkit/prj/build.lst
index 8b7ac22..1448f0d 100644
--- toolkit/prj/build.lst
+++ toolkit/prj/build.lst
@@ -2,6 +2,7 @@ ti	toolkit	:	vcl NULL
 ti	toolkit									usr1	-	all	ti_mkout NULL
 ti	toolkit\prj								get		-	all	ti_prj NULL
 ti	toolkit\inc								nmake	-	all	ti_inc NULL
+ti	toolkit\uiconfig\layout									nmake	-	all	ti_uiconfig_layout NULL
 ti	toolkit\source\helper					nmake	-	all	ti_helper  ti_inc NULL
 ti	toolkit\source\awt						nmake	-	all	ti_awt  ti_inc NULL
 ti	toolkit\source\controls					nmake	-	all	ti_controls  ti_inc NULL
diff --git a/toolkit/prj/d.lst b/toolkit/prj/d.lst
index 88ee9c8..743e2d6 100644
--- toolkit/prj/d.lst
+++ toolkit/prj/d.lst
@@ -52,3 +52,5 @@ mkdir: %_DEST%\inc%_EXT%\layout
 ..\%__SRC%\lib\*.dylib %_DEST%\lib%_EXT%\*.dylib
 
 ..\inc\layout\*.hxx %_DEST%\inc%_EXT%\layout\*.hxx
+
+..\%__SRC%\bin\*-layout.zip %_DEST%\pck%_EXT%\*.*
diff --git a/toolkit/source/awt/forward.hxx b/toolkit/source/awt/forward.hxx
index c3f5f24..7dc9278 100644
--- toolkit/source/awt/forward.hxx
+++ toolkit/source/awt/forward.hxx
@@ -67,4 +67,11 @@
         return aReturn; \
     }
 
+#if defined (_MSC_VER) && (_MSC_VER <= 1310)
+// Windows .Net2003 build fix
+#define W3K_EXPLICIT_CAST(x) static_cast <XWindow2*> (&x)
+#else // !(defined (_MSC_VER) && (_MSC_VER <= 1310))
+#define W3K_EXPLICIT_CAST(x) x
+#endif // !(defined (_MSC_VER) && (_MSC_VER <= 1310))
+
 #endif /*AWT_FORWARD_HXX*/
diff --git a/toolkit/source/awt/vclxdialog.cxx b/toolkit/source/awt/vclxdialog.cxx
index 98de970..76e3993 100644
--- toolkit/source/awt/vclxdialog.cxx
+++ toolkit/source/awt/vclxdialog.cxx
@@ -109,7 +109,7 @@ void SAL_CALL VCLXDialog::dispose() throw(::com::sun::star::uno::RuntimeExceptio
         ::vos::OGuard aGuard( GetMutex() );
 
         ::com::sun::star::lang::EventObject aDisposeEvent;
-        aDisposeEvent.Source = *this;
+        aDisposeEvent.Source = W3K_EXPLICIT_CAST (*this);
 //            maTabListeners.disposeAndClear( aDisposeEvent );
     }
 
@@ -211,6 +211,15 @@ void VCLXDialog::setTitle( const ::rtl::OUString& Title ) throw(::com::sun::star
         pWindow->SetText( Title );
 }
 
+void VCLXDialog::setHelpId( sal_Int32 id ) throw(::com::sun::star::uno::RuntimeException)
+{
+    ::vos::OGuard aGuard( GetMutex() );
+
+    Window* pWindow = GetWindow();
+    if ( pWindow )
+        pWindow->SetHelpId( id );
+}
+
 ::rtl::OUString VCLXDialog::getTitle() throw(::com::sun::star::uno::RuntimeException)
 {
     ::vos::OGuard aGuard( GetMutex() );
diff --git a/toolkit/source/awt/vclxdialog.hxx b/toolkit/source/awt/vclxdialog.hxx
index 7f45718..337d780 100644
--- toolkit/source/awt/vclxdialog.hxx
+++ toolkit/source/awt/vclxdialog.hxx
@@ -102,6 +102,7 @@ public:
 
     // ::com::sun::star::awt::XDialog2
     void SAL_CALL endDialog( sal_Int32 nResult ) throw(::com::sun::star::uno::RuntimeException);
+    void SAL_CALL setHelpId( sal_Int32 id ) throw(::com::sun::star::uno::RuntimeException);
 
 };
 
diff --git a/toolkit/source/awt/vclxfixedline.cxx b/toolkit/source/awt/vclxfixedline.cxx
index 10c631d..68385ed 100644
--- toolkit/source/awt/vclxfixedline.cxx
+++ toolkit/source/awt/vclxfixedline.cxx
@@ -69,7 +69,7 @@ void SAL_CALL VCLXFixedLine::dispose( ) throw(RuntimeException)
         ::vos::OGuard aGuard( GetMutex() );
 
         EventObject aDisposeEvent;
-        aDisposeEvent.Source = *this;
+        aDisposeEvent.Source = W3K_EXPLICIT_CAST (*this);
     }
 
     VCLXWindow::dispose();
diff --git a/toolkit/source/awt/vclxplugin.cxx b/toolkit/source/awt/vclxplugin.cxx
index f17552a..8145174 100644
--- toolkit/source/awt/vclxplugin.cxx
+++ toolkit/source/awt/vclxplugin.cxx
@@ -40,6 +40,8 @@
 #include <toolkit/helper/property.hxx>
 #include <vcl/ctrl.hxx>
 
+#include "forward.hxx"
+
 namespace layoutimpl
 {
 
@@ -63,7 +65,7 @@ void SAL_CALL VCLXPlugin::dispose() throw(uno::RuntimeException)
         ::vos::OGuard aGuard( GetMutex() );
         
         lang::EventObject aDisposeEvent;
-        aDisposeEvent.Source = *this;
+        aDisposeEvent.Source = W3K_EXPLICIT_CAST (*this);
     }
     
     VCLXWindow::dispose();
diff --git a/toolkit/source/awt/vclxscroller.cxx b/toolkit/source/awt/vclxscroller.cxx
index 9e5674e..b532161 100644
--- toolkit/source/awt/vclxscroller.cxx
+++ toolkit/source/awt/vclxscroller.cxx
@@ -75,7 +75,7 @@ void SAL_CALL VCLXScroller::dispose( ) throw(RuntimeException)
         ::vos::OGuard aGuard( GetMutex() );
 
         EventObject aDisposeEvent;
-        aDisposeEvent.Source = *this;
+        aDisposeEvent.Source = W3K_EXPLICIT_CAST (*this);
 //            maTabListeners.disposeAndClear( aDisposeEvent );
     }
 
diff --git a/toolkit/source/awt/vclxsplitter.cxx b/toolkit/source/awt/vclxsplitter.cxx
index f2efbb3..5530e46 100644
--- toolkit/source/awt/vclxsplitter.cxx
+++ toolkit/source/awt/vclxsplitter.cxx
@@ -113,7 +113,7 @@ void SAL_CALL VCLXSplitter::dispose( ) throw(RuntimeException)
         ::vos::OGuard aGuard( GetMutex() );
 
         EventObject aDisposeEvent;
-        aDisposeEvent.Source = *this;
+        aDisposeEvent.Source = W3K_EXPLICIT_CAST (*this);
 //            maTabListeners.disposeAndClear( aDisposeEvent );
     }
 
diff --git a/toolkit/source/awt/vclxtabcontrol.cxx b/toolkit/source/awt/vclxtabcontrol.cxx
index 9ef31ca..782b3a8 100644
--- toolkit/source/awt/vclxtabcontrol.cxx
+++ toolkit/source/awt/vclxtabcontrol.cxx
@@ -43,16 +43,14 @@
 namespace layoutimpl
 {
 
-using namespace ::com::sun::star::uno;
-using namespace ::com::sun::star::awt;
 using namespace ::com::sun::star::lang;
 using namespace ::com::sun::star::beans;
 using namespace ::com::sun::star;
 
 VCLXTabControl::ChildProps::ChildProps( VCLXTabControl::ChildData *pData )
-    {
-        addProp( RTL_CONSTASCII_USTRINGPARAM( "Title" ),
-                 ::getCppuType( static_cast< const rtl::OUString* >( NULL ) ),
+{
+    addProp( RTL_CONSTASCII_USTRINGPARAM( "Title" ),
+             ::getCppuType( static_cast< const rtl::OUString* >( NULL ) ),
              &(pData->maTitle) );
 }
 
@@ -66,7 +64,7 @@ VCLXTabControl::ChildData*
 VCLXTabControl::createChild( uno::Reference< awt::XLayoutConstrains > const& xChild )
 {
     return new ChildData( xChild );
-    }
+}
 
 VCLXTabControl::ChildProps*
 VCLXTabControl::createChildProps( Box_Base::ChildData *pData )
@@ -76,12 +74,19 @@ VCLXTabControl::createChildProps( Box_Base::ChildData *pData )
 
 DBG_NAME( VCLXTabControl );
 
+#if !defined (__GNUC__)
+#define __PRETTY_FUNCTION__ __FUNCTION__
+#endif /* !__GNUC__ */
+
 VCLXTabControl::VCLXTabControl()
-: VCLXWindow()
-    , VCLXTabControl_Base()
+  : VCLXWindow()
+  , VCLXTabControl_Base()
   , Box_Base()
-  , mnNextTabId( 1 )
+  , mTabId (1)
+  , bRealized (false)
 {
+    OSL_TRACE ("\n********%s:%x", __PRETTY_FUNCTION__, this);
+
     DBG_CTOR( VCLXTabControl, NULL );
 }
 
@@ -94,13 +99,13 @@ IMPLEMENT_2_FORWARD_XINTERFACE2( VCLXTabControl, VCLXWindow, Container, VCLXTabC
 
 IMPLEMENT_FORWARD_XTYPEPROVIDER2( VCLXTabControl, VCLXWindow, VCLXTabControl_Base );
 
-void SAL_CALL VCLXTabControl::dispose( ) throw(RuntimeException)
+void SAL_CALL VCLXTabControl::dispose( ) throw(uno::RuntimeException)
 {
     {
         ::vos::OGuard aGuard( GetMutex() );
 
         EventObject aDisposeEvent;
-        aDisposeEvent.Source = *this;
+        aDisposeEvent.Source = W3K_EXPLICIT_CAST (*this);
 //            maTabListeners.disposeAndClear( aDisposeEvent );
     }
 
@@ -108,38 +113,38 @@ void SAL_CALL VCLXTabControl::dispose( ) throw(RuntimeException)
 }
 
 #if 0
-void SAL_CALL VCLXTabControl::addTabListener( const Reference< XTabListener >& listener ) throw (RuntimeException)
+void SAL_CALL VCLXTabControl::addTabListener( const Reference< XTabListener >& listener ) throw (uno::RuntimeException)
 {
 if ( listener.is() )
 maTabListeners.addInterface( listener );
 }
 
-void SAL_CALL VCLXTabControl::removeTabListener( const Reference< XTabListener >& listener ) throw (RuntimeException)
+void SAL_CALL VCLXTabControl::removeTabListener( const Reference< XTabListener >& listener ) throw (uno::RuntimeException)
 {
 if ( listener.is() )
 maTabListeners.removeInterface( listener );
 }
 #endif
 
-TabControl *VCLXTabControl::getTabControl() const throw (RuntimeException)
+TabControl *VCLXTabControl::getTabControl() const throw (uno::RuntimeException)
 {
     TabControl *pTabControl = static_cast< TabControl* >( GetWindow() );
     if ( pTabControl )
         return pTabControl;
-    throw RuntimeException();
+    throw uno::RuntimeException();
 }
 
-sal_Int32 SAL_CALL VCLXTabControl::insertTab() throw (RuntimeException)
+sal_Int32 SAL_CALL VCLXTabControl::insertTab() throw (uno::RuntimeException)
 {
     TabControl *pTabControl = getTabControl();
-    USHORT id = sal::static_int_cast< USHORT >( mnNextTabId++ );
+    USHORT id = sal::static_int_cast< USHORT >( mTabId++ );
     rtl::OUString title (RTL_CONSTASCII_USTRINGPARAM( "" ) );
     pTabControl->InsertPage( id, title.getStr(), TAB_APPEND );
     pTabControl->SetTabPage( id, new TabPage( pTabControl ) );
     return id;
 }
 
-void SAL_CALL VCLXTabControl::removeTab( sal_Int32 ID ) throw (RuntimeException, IndexOutOfBoundsException)
+void SAL_CALL VCLXTabControl::removeTab( sal_Int32 ID ) throw (uno::RuntimeException, IndexOutOfBoundsException)
 {
     TabControl *pTabControl = getTabControl();
     if ( pTabControl->GetTabPage( sal::static_int_cast< USHORT >( ID ) ) == NULL )
@@ -147,7 +152,7 @@ void SAL_CALL VCLXTabControl::removeTab( sal_Int32 ID ) throw (RuntimeException,
     pTabControl->RemovePage( sal::static_int_cast< USHORT >( ID ) );
 }
 
-void SAL_CALL VCLXTabControl::activateTab( sal_Int32 ID ) throw (RuntimeException, IndexOutOfBoundsException)
+void SAL_CALL VCLXTabControl::activateTab( sal_Int32 ID ) throw (uno::RuntimeException, IndexOutOfBoundsException)
 {
     TabControl *pTabControl = getTabControl();
     if ( pTabControl->GetTabPage( sal::static_int_cast< USHORT >( ID ) ) == NULL )
@@ -155,15 +160,15 @@ void SAL_CALL VCLXTabControl::activateTab( sal_Int32 ID ) throw (RuntimeExceptio
     pTabControl->SelectTabPage( sal::static_int_cast< USHORT >( ID ) );
 }
 
-sal_Int32 SAL_CALL VCLXTabControl::getActiveTabID() throw (RuntimeException)
+sal_Int32 SAL_CALL VCLXTabControl::getActiveTabID() throw (uno::RuntimeException)
 {
     return getTabControl()->GetCurPageId( );
 }
 
-void SAL_CALL VCLXTabControl::addTabListener( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XTabListener >& xListener ) throw (::com::sun::star::uno::RuntimeException)
+void SAL_CALL VCLXTabControl::addTabListener( const uno::Reference< awt::XTabListener >& xListener ) throw (uno::RuntimeException)
 {
-    for ( std::list< ::com::sun::star::uno::Reference
-              < ::com::sun::star::awt::XTabListener > >::const_iterator it
+    for ( std::list< uno::Reference
+              < awt::XTabListener > >::const_iterator it
               = mxTabListeners.begin(); it != mxTabListeners.end(); it++ )
     {
         if ( *it == xListener )
@@ -173,10 +178,10 @@ void SAL_CALL VCLXTabControl::addTabListener( const ::com::sun::star::uno::Refer
     mxTabListeners.push_back( xListener );
 }
 
-void SAL_CALL VCLXTabControl::removeTabListener( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XTabListener >& xListener ) throw (::com::sun::star::uno::RuntimeException)
+void SAL_CALL VCLXTabControl::removeTabListener( const uno::Reference< awt::XTabListener >& xListener ) throw (uno::RuntimeException)
 {
-    for ( std::list< ::com::sun::star::uno::Reference
-              < ::com::sun::star::awt::XTabListener > >::iterator it
+    for ( std::list< uno::Reference
+              < awt::XTabListener > >::iterator it
               = mxTabListeners.begin(); it != mxTabListeners.end(); it++ )
     {
         if ( *it == xListener )
@@ -187,7 +192,7 @@ void SAL_CALL VCLXTabControl::removeTabListener( const ::com::sun::star::uno::Re
     }
 }
 
-void SAL_CALL VCLXTabControl::setTabProps( sal_Int32 ID, const Sequence< NamedValue >& Properties ) throw (RuntimeException, IndexOutOfBoundsException)
+void SAL_CALL VCLXTabControl::setTabProps( sal_Int32 ID, const uno::Sequence< NamedValue >& Properties ) throw (uno::RuntimeException, IndexOutOfBoundsException)
 {
     TabControl *pTabControl = getTabControl();
     if ( pTabControl->GetTabPage( sal::static_int_cast< USHORT >( ID ) ) == NULL )
@@ -196,7 +201,7 @@ void SAL_CALL VCLXTabControl::setTabProps( sal_Int32 ID, const Sequence< NamedVa
     for( int i = 0; i < Properties.getLength(); i++ )
     {
         const rtl::OUString &name = Properties[i].Name;
-        const Any &value = Properties[i].Value;
+        const uno::Any &value = Properties[i].Value;
 
         if ( name  == rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Title" ) ) )
         {
@@ -206,8 +211,8 @@ void SAL_CALL VCLXTabControl::setTabProps( sal_Int32 ID, const Sequence< NamedVa
     }
 }
 
-Sequence< NamedValue > SAL_CALL VCLXTabControl::getTabProps( sal_Int32 ID )
-    throw (IndexOutOfBoundsException, RuntimeException)
+uno::Sequence< NamedValue > SAL_CALL VCLXTabControl::getTabProps( sal_Int32 ID )
+    throw (IndexOutOfBoundsException, uno::RuntimeException)
 {
     TabControl *pTabControl = getTabControl();
     if ( pTabControl->GetTabPage( sal::static_int_cast< USHORT >( ID ) ) == NULL )
@@ -216,11 +221,11 @@ Sequence< NamedValue > SAL_CALL VCLXTabControl::getTabProps( sal_Int32 ID )
 #define ADD_PROP( seq, i, name, val ) {                                \
         NamedValue value;                                                  \
         value.Name = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( name ) ); \
-        value.Value = makeAny( val );                                      \
+        value.Value = uno::makeAny( val );                                      \
         seq[i] = value;                                                    \
     }
 
-    Sequence< NamedValue > props( 2 );
+    uno::Sequence< NamedValue > props( 2 );
     ADD_PROP( props, 0, "Title", rtl::OUString( pTabControl->GetPageText( sal::static_int_cast< USHORT >( ID ) ) ) );
     ADD_PROP( props, 1, "Position", pTabControl->GetPagePos( sal::static_int_cast< USHORT >( ID ) ) );
 #undef ADD_PROP
@@ -228,7 +233,7 @@ Sequence< NamedValue > SAL_CALL VCLXTabControl::getTabProps( sal_Int32 ID )
 }
 
 // TODO: draw tab border here
-void SAL_CALL VCLXTabControl::draw( sal_Int32 nX, sal_Int32 nY ) throw(::com::sun::star::uno::RuntimeException)
+void SAL_CALL VCLXTabControl::draw( sal_Int32 nX, sal_Int32 nY ) throw(uno::RuntimeException)
 {
     ::vos::OGuard aGuard( GetMutex() );
 
@@ -249,16 +254,25 @@ void SAL_CALL VCLXTabControl::draw( sal_Int32 nX, sal_Int32 nY ) throw(::com::su
     VCLXWindow::draw( nX, nY );
 }
 
+void VCLXTabControl::AddChild (uno::Reference< awt::XLayoutConstrains > const& xChild)
+
+{
+    OSL_TRACE ("%s: children: %d", __PRETTY_FUNCTION__, maChildren.size ());
+    mIdMap[ xChild ] = mTabId++;
+    Box_Base::AddChild( xChild );
+    OSL_TRACE ("%s: children: %d", __PRETTY_FUNCTION__, maChildren.size ());
+}
+
 void SAL_CALL VCLXTabControl::addChild(
-    const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XLayoutConstrains > &xChild )
-    throw (::com::sun::star::uno::RuntimeException, ::com::sun::star::awt::MaxChildrenException)
+    const uno::Reference< awt::XLayoutConstrains > &xChild )
+    throw (uno::RuntimeException, awt::MaxChildrenException)
 {
     mIdMap[ xChild ] = insertTab();
     Box_Base::addChild( xChild );
-    }
+}
 
-void SAL_CALL VCLXTabControl::removeChild( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XLayoutConstrains > &xChild )
-    throw (::com::sun::star::uno::RuntimeException)
+void SAL_CALL VCLXTabControl::removeChild( const uno::Reference< awt::XLayoutConstrains > &xChild )
+    throw (uno::RuntimeException)
 {
     removeTab( mIdMap[xChild] );
     mIdMap[ xChild ] = -1;
@@ -284,22 +298,87 @@ static void setChildrenVisible( uno::Reference < awt::XLayoutConstrains > xChild
     }
 }
 
-void SAL_CALL VCLXTabControl::allocateArea(
-    const ::com::sun::star::awt::Rectangle &rArea )
-    throw (::com::sun::star::uno::RuntimeException)
+void SAL_CALL VCLXTabControl::allocateArea (awt::Rectangle const &area)
+    throw (uno::RuntimeException)
 {
-    maAllocation = rArea;
+    OSL_TRACE ("\n%s", __PRETTY_FUNCTION__);
+    maAllocation = area;
 
     TabControl *pTabControl = getTabControl();
 
-// FIXME: this is wrong. We just want to set tab controls pos/size for the tabs menu,
-// otherwise, it gets events that should go to children (I guess we could solve this
-// by making the tabcontrol as the actual XWindow parent of its children, when importing...)
-// Not sure about TabPage drawing... That doesn't work on gtk+; just ignoring that.
-// LATER: Nah, the proper fix is to get the XWindow hierarchy straight.
-
-    setPosSize( rArea.X, rArea.Y, rArea.Width, rArea.Height, PosSize::POSSIZE );
+// FIXME: this is wrong. We just want to set tab controls pos/size for
+// the tabs menu, otherwise, it gets events that should go to children
+// (I guess we could solve this by making the tabcontrol as the actual
+// XWindow parent of its children, when importing...)  Not sure about
+// TabPage drawing... That doesn't work on gtk+; just ignoring that.
+// LATER: Nah, the proper fix is to get the XWindow hierarchy
+// straight.
 
+#if 0
+    setPosSize( area.X, area.Y, area.Width, area.Height, awt::PosSize::POSSIZE );
+#else
+    awt::Size currentSize = getSize();
+    awt::Size requestedSize (area.Width, area.Height);
+//    requestedSize.Height = getHeightForWidth( area.Width );
+
+    awt::Size minimumSize = getMinimumSize();
+    if (requestedSize.Width < minimumSize.Width)
+        requestedSize.Width = minimumSize.Width;
+    if (requestedSize.Height < minimumSize.Height)
+        requestedSize.Height = minimumSize.Height;
+
+    Size pageSize = static_cast<TabControl*> (GetWindow ())->GetTabPageSizePixel ();
+    awt::Size pageBasedSize (0, 0);
+    pageBasedSize.Width = pageSize.Width ();
+    pageBasedSize.Height = pageSize.Height ();
+
+    const int wc = 0;
+    const int hc = 20;
+    static int pwc = 0;
+    static int phc = 40;
+    
+    if (requestedSize.Width < pageBasedSize.Width)
+        requestedSize.Width = pageBasedSize.Width + wc;
+    if (requestedSize.Height < pageBasedSize.Height)
+        requestedSize.Height = pageBasedSize.Height + hc;
+
+    Size windowSize = GetWindow()->GetSizePixel();
+    Window *parent = GetWindow()->GetParent();
+    Size parentSize = parent->GetSizePixel();
+
+#ifdef GCC_MAJOR
+    OSL_TRACE ("\n%s", __PRETTY_FUNCTION__);
+#endif /* GCC_MAJOR */
+    OSL_TRACE ("%s: cursize: %d ,%d", __FUNCTION__, currentSize.Width, currentSize.Height );
+    OSL_TRACE ("%s: area: %d, %d", __FUNCTION__, area.Width, area.Height );
+    OSL_TRACE ("%s: minimum: %d, %d", __FUNCTION__, minimumSize.Width, minimumSize.Height );
+    OSL_TRACE ("%s: requestedSize: %d, %d", __FUNCTION__, requestedSize.Width, requestedSize.Height );
+    OSL_TRACE ("%s: pageBasedSize: %d, %d", __FUNCTION__, pageBasedSize.Width, pageBasedSize.Height );
+
+    //OSL_TRACE ("%s: parent: %d, %d", __FUNCTION__, parentSize.Width(), parentSize.Height() );
+    //OSL_TRACE ("%s: window: %d, %d", __FUNCTION__, windowSize.Width(), windowSize.Height() );
+
+    //bRealized = false;
+    if (!bRealized)
+    {
+        setPosSize( area.X, area.Y, requestedSize.Width, requestedSize.Height, awt::PosSize::POSSIZE );
+        bRealized = true;
+    }
+    else
+    {
+        if ( requestedSize.Width > currentSize.Width + 10)
+            setPosSize( 0, 0, requestedSize.Width, 0, awt::PosSize::WIDTH );
+        if ( requestedSize.Height > currentSize.Height + 10)
+            setPosSize( 0, 0, 0, requestedSize.Height, awt::PosSize::HEIGHT );
+    }
+#endif
+    
+    if (pageBasedSize.Width > parentSize.Width ()
+        || pageBasedSize.Height > parentSize.Height ())
+        //parent->SetSizePixel ( Size (pageBasedSize.Width, pageBasedSize.Height));
+        //parent->SetSizePixel ( Size (pageBasedSize.Width + pwc, pageBasedSize.Height + phc));
+        parent->SetSizePixel ( Size (requestedSize.Width + pwc, requestedSize.Height + phc));
+    
     // FIXME: we can save cycles by setting visibility more sensibly. Having
     // it here does makes it easier when changing tabs (just needs a recalc())
     unsigned i = 0;
@@ -307,8 +386,8 @@ void SAL_CALL VCLXTabControl::allocateArea(
               = maChildren.begin(); it != maChildren.end(); it++, i++ )
     {
         ChildData *child = static_cast<VCLXTabControl::ChildData*> ( *it );
-        ::com::sun::star::uno::Reference
-              < ::com::sun::star::awt::XLayoutConstrains > xChild( child->mxChild );
+        uno::Reference
+              < awt::XLayoutConstrains > xChild( child->mxChild );
         if ( xChild.is() )
         {
             uno::Reference< awt::XWindow > xWin( xChild, uno::UNO_QUERY );
@@ -340,15 +419,15 @@ void SAL_CALL VCLXTabControl::allocateArea(
     }
 }
 
-::com::sun::star::awt::Size SAL_CALL VCLXTabControl::getMinimumSize()
-    throw(::com::sun::star::uno::RuntimeException)
+awt::Size SAL_CALL VCLXTabControl::getMinimumSize()
+    throw(uno::RuntimeException)
 {
-    awt::Size size = VCLXWindow::getMinimumSize();
+    awt::Size requestedSize = VCLXWindow::getMinimumSize();
     awt::Size childrenSize( 0, 0 );
 
     TabControl* pTabControl = static_cast< TabControl* >( GetWindow() );
     if ( !pTabControl )
-        return size;
+        return requestedSize;
 
     // calculate size to accomodate all children
     unsigned i = 0;
@@ -367,10 +446,17 @@ void SAL_CALL VCLXTabControl::allocateArea(
         }
     }
 
-    size.Width += childrenSize.Width;
-    size.Height += childrenSize.Height + 20;
-    maRequisition = size;
-    return size;
+#ifdef GCC_MAJOR
+    OSL_TRACE ("\n%s", __PRETTY_FUNCTION__);
+#endif /* GCC_MAJOR */
+    OSL_TRACE ("%s: children: %d", __FUNCTION__, i);
+    OSL_TRACE ("%s: childrenSize: %d, %d", __FUNCTION__, childrenSize.Width, childrenSize.Height );
+
+    requestedSize.Width += childrenSize.Width;
+    requestedSize.Height += childrenSize.Height + 20;
+
+    maRequisition = requestedSize;
+    return requestedSize;
 }
 
 void VCLXTabControl::ProcessWindowEvent( const VclWindowEvent& _rVclWindowEvent )
@@ -391,12 +477,12 @@ void VCLXTabControl::ProcessWindowEvent( const VclWindowEvent& _rVclWindowEvent
         case VCLEVENT_TABPAGE_PAGETEXTCHANGED:
         {
             ULONG page = (ULONG) _rVclWindowEvent.GetData();
-            for ( std::list< ::com::sun::star::uno::Reference
-                      < ::com::sun::star::awt::XTabListener > >::iterator it
+            for ( std::list< uno::Reference
+                      < awt::XTabListener > >::iterator it
                       = mxTabListeners.begin(); it != mxTabListeners.end(); it++)
             {
-                ::com::sun::star::uno::Reference
-                    < ::com::sun::star::awt::XTabListener > listener = *it;
+                uno::Reference
+                    < awt::XTabListener > listener = *it;
 
                 switch ( _rVclWindowEvent.GetId() )
                 {
@@ -414,7 +500,7 @@ void VCLXTabControl::ProcessWindowEvent( const VclWindowEvent& _rVclWindowEvent
                         listener->removed( page );
                         break;
                     case VCLEVENT_TABPAGE_REMOVEDALL:
-                        for( int i = 1; i < mnNextTabId; i++)
+                        for ( int i = 1; i < mTabId; i++)
                         {
                             if ( pTabControl->GetTabPage( sal::static_int_cast< USHORT >( i ) ) )
                                 listener->removed( i );
@@ -434,12 +520,12 @@ void VCLXTabControl::ProcessWindowEvent( const VclWindowEvent& _rVclWindowEvent
     }
 }
 
-void SAL_CALL VCLXTabControl::setProperty( const ::rtl::OUString& PropertyName, const Any &Value ) throw(RuntimeException)
+void SAL_CALL VCLXTabControl::setProperty( const ::rtl::OUString& PropertyName, const uno::Any &Value ) throw(uno::RuntimeException)
 {
-                VCLXWindow::setProperty( PropertyName, Value );
-        }
+    VCLXWindow::setProperty( PropertyName, Value );
+}
 
-Any SAL_CALL VCLXTabControl::getProperty( const ::rtl::OUString& PropertyName ) throw(RuntimeException)
+uno::Any SAL_CALL VCLXTabControl::getProperty( const ::rtl::OUString& PropertyName ) throw(uno::RuntimeException)
 {
     return VCLXWindow::getProperty( PropertyName );
 }
diff --git a/toolkit/source/awt/vclxtabcontrol.hxx b/toolkit/source/awt/vclxtabcontrol.hxx
index 432e464..8ea8296 100644
--- toolkit/source/awt/vclxtabcontrol.hxx
+++ toolkit/source/awt/vclxtabcontrol.hxx
@@ -50,9 +50,14 @@ class VCLXTabControl :public VCLXWindow
                      ,public VCLXTabControl_Base
                      ,public Box_Base
 {
+    int mTabId;
+    bool bRealized;
+
 public:
     VCLXTabControl();
 
+    void AddChild (css::uno::Reference <css::awt::XLayoutConstrains> const &);
+
 protected:
     ~VCLXTabControl( );
 
@@ -65,7 +70,7 @@ protected:
     // XComponent
     void SAL_CALL dispose( ) throw(::com::sun::star::uno::RuntimeException);
 
-    virtual void SAL_CALL draw( sal_Int32 nX, sal_Int32 nY ) throw        (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL draw( sal_Int32 nX, sal_Int32 nY ) throw (::com::sun::star::uno::RuntimeException);
 
     // XSimpleTabController
     virtual ::sal_Int32 SAL_CALL insertTab() throw (::com::sun::star::uno::RuntimeException);
@@ -108,10 +113,6 @@ protected:
     // VCLXWindow
     void ProcessWindowEvent( const VclWindowEvent& _rVclWindowEvent );
 
-
-    // Each tab page needs an unique id.
-    int mnNextTabId;
-
 public:
     // Maps page ids to child references
     struct ChildData : public Box_Base::ChildData
diff --git a/toolkit/source/awt/vclxtabpage.cxx b/toolkit/source/awt/vclxtabpage.cxx
index 4a1c127..1abad26 100644
--- toolkit/source/awt/vclxtabpage.cxx
+++ toolkit/source/awt/vclxtabpage.cxx
@@ -41,6 +41,10 @@
 #include <vcl/tabpage.hxx>
 #include <vcl/tabctrl.hxx>
 
+#if !defined (__GNUC__)
+#define __PRETTY_FUNCTION__ __FUNCTION__
+#endif /* !__GNUC__ */
+
 namespace layoutimpl
 {
 
@@ -72,7 +76,7 @@ void SAL_CALL VCLXTabPage::dispose() throw(uno::RuntimeException)
         ::vos::OGuard aGuard( GetMutex() );
         
         lang::EventObject aDisposeEvent;
-        aDisposeEvent.Source = *this;
+        aDisposeEvent.Source = W3K_EXPLICIT_CAST (*this);
     }
     
     VCLXWindow::dispose();
@@ -81,44 +85,58 @@ void SAL_CALL VCLXTabPage::dispose() throw(uno::RuntimeException)
 void SAL_CALL VCLXTabPage::allocateArea( awt::Rectangle const& area )
     throw (uno::RuntimeException)
 {
-    awt::Size curSize = getSize();
-    awt::Size reqSize = getMinimumSize();
-    reqSize.Height = getHeightForWidth( area.Width );
+    awt::Size currentSize = getSize();
+    awt::Size requestedSize = getMinimumSize();
+    requestedSize.Height = getHeightForWidth( area.Width );
 
-    if ( curSize.Width > 0 && curSize.Height > 0
-         && reqSize.Width > curSize.Width )
-        reqSize.Width = curSize.Width;
-    if ( curSize.Width > 0 && curSize.Height > 0
-         && reqSize.Height > curSize.Height )
-        reqSize.Height = curSize.Height;
+    if ( currentSize.Width > 0 && currentSize.Height > 0
+         && requestedSize.Width > currentSize.Width )
+        requestedSize.Width = currentSize.Width;
+    if ( currentSize.Width > 0 && currentSize.Height > 0
+         && requestedSize.Height > currentSize.Height )
+        requestedSize.Height = currentSize.Height;
 
     // FIXME: missing destructor?
     if ( !GetWindow() )
         return;
 
-    Size window = GetWindow()->GetSizePixel();
-    Size parent = GetWindow()->GetParent()->GetSizePixel();
+    Size windowSize = GetWindow()->GetSizePixel();
+    Window *parent = GetWindow()->GetParent();
+    Size parentSize = parent->GetSizePixel();
 
     Point pos = GetWindow()->GetPosPixel();
+    OSL_TRACE ("\n%s", __PRETTY_FUNCTION__);
     OSL_TRACE ("%s: curpos: %d ,%d", __FUNCTION__, pos.X(), pos.Y() );
 
-    OSL_TRACE ("%s: cursize: %d ,%d", __FUNCTION__, curSize.Width, curSize.Height );
+    OSL_TRACE ("%s: cursize: %d ,%d", __FUNCTION__, currentSize.Width, currentSize.Height );
     OSL_TRACE ("%s: area: %d, %d", __FUNCTION__, area.Width, area.Height );
-    OSL_TRACE ("%s: reqSize: %d, %d", __FUNCTION__, reqSize.Width, reqSize.Height );
-    OSL_TRACE ("%s: parent: %d, %d", __FUNCTION__, parent.Width(), parent.Height() );
-    OSL_TRACE ("%s: window: %d, %d", __FUNCTION__, window.Width(), window.Height() );
+    OSL_TRACE ("%s: requestedSize: %d, %d", __FUNCTION__, requestedSize.Width, requestedSize.Height );
+    OSL_TRACE ("%s: parent: %d, %d", __FUNCTION__, parentSize.Width(), parentSize.Height() );
+    OSL_TRACE ("%s: window: %d, %d", __FUNCTION__, windowSize.Width(), windowSize.Height() );
+
+#if 0
+    if (requestedSize.Width > parentSize.Width ()
+        || requestedSize.Height > parentSize.Height ())
+    {
+        OSL_TRACE ("%s: ***setting parent: %d, %d", __FUNCTION__, requestedSize.Width, requestedSize.Height );
+        parent->SetSizePixel ( Size (requestedSize.Width, requestedSize.Height) );
+
+        if (Window *grand_parent = parent->GetParent ())
+            grand_parent->SetSizePixel ( Size (requestedSize.Width, requestedSize.Height) );
+    }
+#endif
 
     if ( !bRealized )
     {
-        setPosSize( 0, 0, reqSize.Width, reqSize.Height, awt::PosSize::SIZE );
+        setPosSize( area.X, area.Y, requestedSize.Width, requestedSize.Height, awt::PosSize::SIZE );
         bRealized = true;
     }
     else
     {
-        if ( reqSize.Width > curSize.Width )
-            setPosSize( 0, 0, reqSize.Width, 0, awt::PosSize::WIDTH );
-        if ( reqSize.Height > curSize.Height )
-            setPosSize( 0, 0, 0, reqSize.Height, awt::PosSize::HEIGHT );
+        if ( requestedSize.Width > currentSize.Width + 10)
+            setPosSize( 0, 0, requestedSize.Width, 0, awt::PosSize::WIDTH );
+        if ( requestedSize.Height > currentSize.Height + 10)
+            setPosSize( 0, 0, 0, requestedSize.Height, awt::PosSize::HEIGHT );
     }
 
     awt::Size newSize = getSize();
diff --git a/toolkit/source/awt/vclxtabpage.hxx b/toolkit/source/awt/vclxtabpage.hxx
index d6e3032..b83e6b1 100644
--- toolkit/source/awt/vclxtabpage.hxx
+++ toolkit/source/awt/vclxtabpage.hxx
@@ -49,6 +49,7 @@ class VCLXTabPage : public VCLXWindow
                   , public Bin
 {
     bool bRealized;
+
 public:
     VCLXTabPage( Window *p );
 
diff --git a/toolkit/source/awt/vclxwindow.cxx b/toolkit/source/awt/vclxwindow.cxx
index 2f31115..1bb9fd8 100644
--- toolkit/source/awt/vclxwindow.cxx
+++ toolkit/source/awt/vclxwindow.cxx
@@ -1135,6 +1135,10 @@ void VCLXWindow::dispose(  ) throw(::com::sun::star::uno::RuntimeException)
 		aObj.Source = static_cast< ::cppu::OWeakObject* >( this );
 
 		maEventListeners.disposeAndClear( aObj );
+#if 0 // ENABLE_LAYOUT
+        /* FIXME: see layout::~ComboBox () */
+        if (!dynamic_cast<VCLXComboBox*> (this))
+#endif /* 0 ENABLE_LAYOUT */
 		maFocusListeners.disposeAndClear( aObj );
 		maWindowListeners.disposeAndClear( aObj );
 		maKeyListeners.disposeAndClear( aObj );
diff --git a/toolkit/source/awt/vclxwindows.cxx b/toolkit/source/awt/vclxwindows.cxx
index ec4c268..72d470e 100644
--- toolkit/source/awt/vclxwindows.cxx
+++ toolkit/source/awt/vclxwindows.cxx
@@ -413,6 +413,11 @@ VCLXButton::VCLXButton()
 {
 }
 
+VCLXButton::~VCLXButton()
+{
+    OSL_TRACE ("%s", __FUNCTION__);
+}
+
 ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessibleContext > VCLXButton::CreateAccessibleContext()
 {
     return getAccessibleFactory().createAccessibleContext( this );
@@ -1336,6 +1341,13 @@ void VCLXRadioButton::ImplClickedOrToggled( BOOL bToggled )
 	}
 }
 
+::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > VCLXRadioButton::getFirstActionListener ()
+{
+    if (!maItemListeners.getLength ())
+        return ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > ();
+    return maActionListeners.getElements()[0];
+}
+
 //	----------------------------------------------------
 //	class VCLXSpinField
 //	----------------------------------------------------
@@ -2148,6 +2160,7 @@ VCLXDialog::VCLXDialog()
 
 VCLXDialog::~VCLXDialog()
 {
+    OSL_TRACE ("%s", __FUNCTION__);
 }
 
 // ::com::sun::star::uno::XInterface
@@ -3703,6 +3716,11 @@ VCLXComboBox::VCLXComboBox()
 {
 }
 
+VCLXComboBox::~VCLXComboBox()
+{
+    OSL_TRACE ("%s", __FUNCTION__);
+}
+
 // ::com::sun::star::uno::XInterface
 ::com::sun::star::uno::Any VCLXComboBox::queryInterface( const ::com::sun::star::uno::Type & rType ) throw(::com::sun::star::uno::RuntimeException)
 {
diff --git a/toolkit/source/layout/box-base.cxx b/toolkit/source/layout/box-base.cxx
index aad69f7..f0b7a42 100644
--- toolkit/source/layout/box-base.cxx
+++ toolkit/source/layout/box-base.cxx
@@ -88,16 +88,22 @@ bool Box_Base::ChildData::isVisible()
     return layoutimpl::isVisible( mxChild );
 }
 
+void
+Box_Base::AddChild (uno::Reference <awt::XLayoutConstrains> const& xChild)
+{
+    ChildData *pData = createChild (xChild);
+    maChildren.push_back (pData);
+    queueResize ();
+}
+
 void SAL_CALL
-Box_Base::addChild( const uno::Reference< awt::XLayoutConstrains >& xChild )
+Box_Base::addChild (uno::Reference <awt::XLayoutConstrains> const& xChild)
     throw (uno::RuntimeException, awt::MaxChildrenException)
 {
-    if ( xChild.is() )
+    if (xChild.is ())
     {
-        ChildData *pData = createChild( xChild );
-        maChildren.push_back( pData );
-        setChildParent( xChild );
-        queueResize();
+        AddChild (xChild);
+        setChildParent (xChild);
     }
 }
 
diff --git a/toolkit/source/layout/box-base.hxx b/toolkit/source/layout/box-base.hxx
index 44e0434..14db44c 100644
--- toolkit/source/layout/box-base.hxx
+++ toolkit/source/layout/box-base.hxx
@@ -70,8 +70,10 @@ protected:
     ChildData *removeChildData( std::list< ChildData *>, css::uno::Reference< css::awt::XLayoutConstrains > const& Child );
     
 public:
+    void AddChild( const css::uno::Reference< css::awt::XLayoutConstrains >& Child);
+
     // css::awt::XLayoutContainer
-    virtual void SAL_CALL addChild( const css::uno::Reference< css::awt::XLayoutConstrains >& Child )
+    virtual void SAL_CALL addChild( const css::uno::Reference< css::awt::XLayoutConstrains >& Child)
         throw (css::uno::RuntimeException, css::awt::MaxChildrenException);
     virtual void SAL_CALL removeChild( const css::uno::Reference< css::awt::XLayoutConstrains >& Child )
         throw (css::uno::RuntimeException);
diff --git a/toolkit/source/layout/helper.cxx b/toolkit/source/layout/helper.cxx
index 1e96643..c1430b3 100644
--- toolkit/source/layout/helper.cxx
+++ toolkit/source/layout/helper.cxx
@@ -207,6 +207,9 @@ createToolkitWidget( uno::Reference< awt::XToolkit > xToolkit,
         return uno::Reference< awt::XLayoutConstrains >();
     }
 
+#if 0 // This shadows the show="false" property and seems otherwise
+      // unnecessary
+
     // default to visible, let then people change it on properties
     if ( ! bToplevel )
     {
@@ -214,6 +217,8 @@ createToolkitWidget( uno::Reference< awt::XToolkit > xToolkit,
         if ( xWindow.is() )
             xWindow->setVisible( true );
     }
+#endif
+
     return xPeer;
 }
 
@@ -378,13 +383,14 @@ PropHelper::queryInterface( const ::com::sun::star::uno::Type & rType ) throw(::
 #include <vcl/tabctrl.hxx>
 #include <vcl/tabpage.hxx>
 
+#include <toolkit/awt/vclxwindows.hxx>
+#include <vcl/lstbox.hxx>
+
 #include <typeinfo>
 
 namespace layoutimpl
 {
 
-TOOLKIT_DLLPUBLIC Window* global_parent;
-
 uno::Reference< awt::XLayoutConstrains > ImplCreateWindow(
     uno::Reference< uno::XInterface > xParent,
     OUString aName, long WindowAttributes )
@@ -408,6 +414,16 @@ uno::Reference< awt::XLayoutConstrains > ImplCreateWindow(
 
         WindowAttributes ^= awt::WindowAttribute::SHOW;
     }
+    else if ( aName.equalsAscii( "modelessdialog" ) )
+    {
+        if ( pParent == NULL )
+            pParent = DIALOG_NO_PARENT;
+        pNewWindow = new ModelessDialog( pParent,
+                                         ImplGetWinBits( WindowAttributes, 0 ) );
+        pNewComp = new layoutimpl::VCLXDialog();
+
+        WindowAttributes ^= awt::WindowAttribute::SHOW;
+    }
     else if ( aName.equalsAscii( "modaldialog" ) )
     {
         if ( pParent == NULL )
@@ -509,9 +525,14 @@ uno::Reference< awt::XLayoutConstrains > ImplCreateWindow(
     }
     else if ( aName.equalsAscii( "tabpage" ) )
     {
+#if 0
         if ( !pParent )
             pParent = layout::TabPage::global_parent;
-
+#else
+        if (layout::TabPage::global_parent)
+            pParent = layout::TabPage::global_parent;
+        layout::TabPage::global_parent = 0;
+#endif        
         //pNewWindow = new TabPage( pParent, ImplGetWinBits( WindowAttributes, 0 ) );
         WindowAttributes ^= awt::WindowAttribute::SHOW;
         WinBits nStyle = ImplGetWinBits( WindowAttributes, 0 );
@@ -530,13 +551,23 @@ uno::Reference< awt::XLayoutConstrains > ImplCreateWindow(
         pNewWindow = new Window( pParent, ImplGetWinBits( WindowAttributes, 0 ) );
         pNewComp = new layoutimpl::LocalizedString();
     }
+#if 0 // parent paranoia
+    else if ( aName.equalsAscii( "listbox" ) )
+    {
+        WindowAttributes |= awt::VclWindowPeerAttribute::DROPDOWN;
+        WinBits nStyle = ImplGetWinBits( WindowAttributes, 0 );
+        nStyle |= WB_DROPDOWN;
+        pNewWindow = new ListBox( pParent, nStyle );
+        pNewComp = new VCLXListBox ();
+    }
+#endif
 
     if ( !pNewWindow )
         return xRef;
 
     pNewWindow->SetCreatedWithToolkit( sal_True );
     if ( pNewComp )
-        pNewComp->SetCreatedWithToolkit( TRUE );
+        pNewComp->SetCreatedWithToolkit( true );
     xRef = pNewComp;
     pNewWindow->SetComponentInterface( pNewComp );
     if ( WindowAttributes & awt::WindowAttribute::SHOW )
diff --git a/toolkit/source/layout/import.cxx b/toolkit/source/layout/import.cxx
index 47857e6..500b69e 100644
--- toolkit/source/layout/import.cxx
+++ toolkit/source/layout/import.cxx
@@ -99,7 +99,16 @@ SAL_THROW (())
     {
         OUString aTitle;
         if ( findAndRemove( "title", aProps, aTitle ) )
+        {
+            OSL_TRACE("Setting title: %s", OUSTRING_CSTR( aTitle ) );
             xDialog->setTitle( aTitle );
+        }
+        OUString aHelpId;
+        if ( findAndRemove( "help-id", aProps, aHelpId ) )
+        {
+            OSL_TRACE("Setting help-id: %s", OUSTRING_CSTR( aHelpId ) );
+            xDialog->setHelpId( aHelpId.toInt32 () );
+        }
     } // DEBUG:
     else if ( pParent == NULL )
     {
@@ -122,32 +131,23 @@ SAL_THROW (())
         if ( DialogButtonHBox *b = dynamic_cast<DialogButtonHBox *> ( mpWidget->getPeer().get() ) )
             b->setOrdering ( aOrdering );
 
-#ifdef IMPORT_RADIOGROUP
-    bool bSetRadioGroup, bSetTitle;
-    OUString aRadioGroup, aTitle;
+    bool bSetRadioGroup;
+    OUString aRadioGroup;
     bSetRadioGroup = findAndRemove( "radiogroup", aProps, aRadioGroup );
-    bSetTitle = findAndRemove( "title", aProps, aTitle );
 
-    setProperties( mxPeer, aProps );
+    mpWidget->setProperties( aProps );
 
     // we need to add radio buttons to the group after their properties are
     // set, so we can check if they should be the one selected by default or not.
     // And the state changed event isn't fired when changing properties.
-    if ( bSetRadioGroup )
-    {
-        static int i = 0;
-        i++;
-        uno::Reference< awt::XRadioButton > xRadio( mxPeer, uno::UNO_QUERY );
-        if ( xRadio.is() )
-            pImport->mxRadioGroups.addItem( aRadioGroup, xRadio );
-    }
-    if ( bSetTitle )
+
+    uno::Reference< awt::XRadioButton > xRadio( mpWidget->getPeer(), uno::UNO_QUERY );
+    if ( xRadio.is() )
     {
-        uno::Reference< awt::XDialog2 > xDialog( mxPeer, uno::UNO_QUERY );
-        if ( xDialog.is() )
-            xDialog->setTitle( aTitle );
+        if (!bSetRadioGroup)
+            aRadioGroup = OUString::createFromAscii ("default");
+        pImport->mxRadioGroups.addItem( aRadioGroup, xRadio );
     }
-#endif
 }
 
 WidgetElement::~WidgetElement()
@@ -181,7 +181,7 @@ WidgetElement::startChildElement ( sal_Int32 nUid, OUString const &name,
 // transex3 hack.
 void SAL_CALL
 WidgetElement::characters( OUString const& rChars )
-    throw (css::xml::sax::SAXException, css::uno::RuntimeException)
+    throw (xml::sax::SAXException, uno::RuntimeException)
 {
     if ( mpWidget && rChars.trim().getLength() )
     {
@@ -246,4 +246,97 @@ uno::Reference< xml::input::XElement > ImportContext::startRootElement(
         return new ToplevelElement( rLocalName, xAttributes, this );
 }
 
+RadioGroups::RadioGroups()
+{
+}
+
+void RadioGroups::addItem( rtl::OUString id, uno::Reference< awt::XRadioButton > xRadio )
+    throw (uno::RuntimeException)
+{
+    if ( ! xRadio.is() )
+        throw uno::RuntimeException();
+    
+    uno::Reference< RadioGroup > group;
+    RadioGroupsMap::iterator it = mxRadioGroups.find( id );
+    if ( it == mxRadioGroups.end() )
+    {
+        group = uno::Reference< RadioGroup > ( new RadioGroup() );
+        mxRadioGroups [id] = group;
+    }
+    else
+        group = it->second;
+    group->addItem( xRadio );
+}
+
+RadioGroups::RadioGroup::RadioGroup()
+{
+}
+
+void RadioGroups::RadioGroup::addItem( uno::Reference< awt::XRadioButton > xRadio )
+{
+    if ( ! mxSelectedRadio.is() )
+    {
+        xRadio->setState( true );
+        mxSelectedRadio = xRadio;
+    }
+    else if ( xRadio->getState() )
+    {
+#if 1
+        xRadio->setState( false );
+#else // huh, why select last added?
+      mxSelectedRadio->setState( false );
+      mxSelectedRadio = xRadio;
+#endif
+    }
+
+    // TOO late: actionPerformed is called before itemStateChanged.
+    // If client code (wrongly?) uses actionPerformed, it will see
+    // the previous RadioButtons' state.
+    xRadio->addItemListener( this );
+
+    uno::Reference< awt::XButton > xButton = uno::Reference< awt::XButton > ( xRadio, uno::UNO_QUERY );
+    xButton->addActionListener( this );
+
+    mxRadios.push_back (xRadio);
+}
+
+void RadioGroups::RadioGroup::handleSelected ()
+    throw (uno::RuntimeException)
+{
+    for ( RadioButtonsList::iterator it = mxRadios.begin();
+          it != mxRadios.end(); it++ )
+        if ( *it != mxSelectedRadio && (*it)->getState() )
+        {
+            mxSelectedRadio->setState( false );
+            mxSelectedRadio = *it;
+            break;
+        }
+}
+
+// awt::XItemListener
+void RadioGroups::RadioGroup::itemStateChanged( const awt::ItemEvent& e )
+    throw (uno::RuntimeException)
+{
+    // TOO late: actionPerformed is called before itemStateChanged.
+    // If client code (wrongly?) uses actionPerformed, it will see
+    // the previous RadioButtons' state.
+
+    // Need this for initialization, though.
+    if ( e.Selected )
+        handleSelected ();
+}
+
+// awt::XActionListener
+void RadioGroups::RadioGroup::actionPerformed( const awt::ActionEvent& )
+    throw (uno::RuntimeException)
+{
+    handleSelected ();
+}
+
+// lang::XEventListener
+void SAL_CALL RadioGroups::RadioGroup::disposing( const lang::EventObject& )
+    throw (uno::RuntimeException)
+{
+}
+
 } // namespace layoutimpl
diff --git a/toolkit/source/layout/import.hxx b/toolkit/source/layout/import.hxx
index e6d7e51..4e36a19 100644
--- toolkit/source/layout/import.hxx
+++ toolkit/source/layout/import.hxx
@@ -37,8 +37,11 @@
 #define _BACKWARD_BACKWARD_WARNING_H 1
 #include <hash_map>
 
+
 #include <com/sun/star/xml/input/XRoot.hpp>
 #include <cppuhelper/implbase1.hxx>
+#include <com/sun/star/awt/XButton.hpp>
+#include <com/sun/star/awt/XRadioButton.hpp>
 
 namespace layoutimpl
 {
@@ -46,94 +49,41 @@ class LayoutRoot;
 class LayoutWidget;
 namespace css = ::com::sun::star;
 
-/* blocks under IMPORT_RADIOGROUP are marked for deletion.
-   The use of it is to synchronize radio buttons into groups.
-   But toolkit doesn't fire toggle events when toggled from the code.
-   Another approach is to implement our own XRadioButton from our
-   internal toolkit. We could have some singleton where they would
-   register... We would need to add another attribute...
-*/
-
-#ifdef IMPORT_RADIOGROUP
-#include <com/sun/star/awt/XRadioButton.hpp>
 class RadioGroups
 {
 public:
-    RadioGroups()
-    {
-    }
+    RadioGroups();
 
     void addItem( rtl::OUString id, css::uno::Reference< css::awt::XRadioButton > xRadio )
-        throw (css::uno::RuntimeException)
-    {
-        if ( ! xRadio.is() )
-            throw css::uno::RuntimeException();
-
-        css::uno::Reference< RadioGroup > group;
-        RadioGroupsMap::iterator it = mxRadioGroups.find( id );
-        if ( it == mxRadioGroups.end() )
-        {
-            group = css::uno::Reference< RadioGroup > ( new RadioGroup() );
-            mxRadioGroups [id] = group;
-        }
-        else
-            group = it->second;
-        group->addItem( xRadio );
-    }
+        throw (css::uno::RuntimeException);
 
 private:
     class RadioGroup : public ::cppu::WeakImplHelper1< css::awt::XItemListener >
+        , public ::cppu::WeakImplHelper1< css::awt::XActionListener >
     {
     public:
-        RadioGroup()
-        {
-        }
-
-        void addItem( css::uno::Reference< css::awt::XRadioButton > xRadio )
-        {
-            if ( ! mxSelectedRadio.is() )
-            {
-                xRadio->setState( true );
-                mxSelectedRadio = xRadio;
-            }
-            else if ( xRadio->getState() )
-            {
-                mxSelectedRadio->setState( false );
-                mxSelectedRadio = xRadio;
-            }
-
-            xRadio->addItemListener( this );
-            mxRadios.push_back (xRadio);
-        }
+        RadioGroup();
+        void addItem( css::uno::Reference< css::awt::XRadioButton > xRadio );
 
     private:
         typedef std::list< css::uno::Reference< css::awt::XRadioButton > > RadioButtonsList;
         RadioButtonsList mxRadios;
         css::uno::Reference< css::awt::XRadioButton > mxSelectedRadio;
 
+        void handleSelected ()
+            throw (css::uno::RuntimeException);
+
         // awt::XItemListener
-        void itemStateChanged( const com::sun::star::awt::ItemEvent& e)
-            throw (css::uno::RuntimeException)
-        {
-            if ( e.Selected )
-            {
-                mxSelectedRadio->setState( false );
-                // the only radio button selected would be the one that fired the event
-                for ( RadioButtonsList::iterator it = mxRadios.begin();
-                      it != mxRadios.end(); it++ )
-                    if ( (*it)->getState() )
-                    {
-                        mxSelectedRadio = *it;
-                        break;
-                    }
-            }
-        }
+        void SAL_CALL itemStateChanged( const css::awt::ItemEvent& e )
+            throw (css::uno::RuntimeException);
+
+        // awt::XActionListener
+        void SAL_CALL actionPerformed( const css::awt::ActionEvent& e )
+            throw (css::uno::RuntimeException);
 
         // lang::XEventListener
         void SAL_CALL disposing( const css::lang::EventObject& )
-            throw (css::uno::RuntimeException)
-        {
-        }
+            throw (css::uno::RuntimeException);
     };
 
     // each RadioGroup will stay alive after RadioGroups die with the ImportContext
@@ -141,7 +91,6 @@ private:
     typedef std::map< rtl::OUString, css::uno::Reference< RadioGroup > > RadioGroupsMap;
     RadioGroupsMap mxRadioGroups;
 };
-#endif
 
 #if 0
 // generator
@@ -197,9 +146,7 @@ class ImportContext : public ::cppu::WeakImplHelper1< css::xml::input::XRoot >
 public:
     sal_Int32 XMLNS_LAYOUT_UID, XMLNS_CONTAINER_UID;
     LayoutRoot &mrRoot; // switch to XNameContainer ref ?
-#ifdef IMPORT_RADIOGROUP
     RadioGroups mxRadioGroups;
-#endif
 
     inline ImportContext( LayoutRoot &rRoot ) SAL_THROW( () )
         : mrRoot( rRoot ) {}
diff --git a/toolkit/source/layout/proplist.cxx b/toolkit/source/layout/proplist.cxx
index c16d979..f63fba1 100644
--- toolkit/source/layout/proplist.cxx
+++ toolkit/source/layout/proplist.cxx
@@ -404,7 +404,8 @@ findAndRemove( const char *pAttr, PropList &rProps, OUString &rValue )
 
     for ( it = rProps.begin(); it != rProps.end(); it++ )
     {
-        if ( it->first.equalsIgnoreAsciiCase( aName ) )
+        if ( it->first.equalsIgnoreAsciiCase( aName )
+             || it->first.equalsIgnoreAsciiCase( OUString::createFromAscii ("_") + aName ) )
         {
             rValue = it->second;
             rProps.erase( it );
diff --git a/toolkit/source/vclcompat/makefile.mk b/toolkit/source/vclcompat/makefile.mk
index 26b414e..a95d39f 100644
--- toolkit/source/vclcompat/makefile.mk
+++ toolkit/source/vclcompat/makefile.mk
@@ -39,6 +39,10 @@ ENABLE_EXCEPTIONS=true
 .INCLUDE : settings.mk
 .INCLUDE : $(PRJ)$/util$/makefile.pmk
 
+.IF "$(COMNAME)" == "gcc3"
+CFLAGS+=-Wall -fno-default-inline
+.ENDIF
+
 # --- Files --------------------------------------------------------
 
 # FIXME: This is bad, hmkay
diff --git a/toolkit/source/vclcompat/wbutton.cxx b/toolkit/source/vclcompat/wbutton.cxx
index 5617f4f..5c1af3e 100644
--- toolkit/source/vclcompat/wbutton.cxx
+++ toolkit/source/vclcompat/wbutton.cxx
@@ -39,6 +39,7 @@
 #include <com/sun/star/graphic/XGraphic.hpp>
 #include <cppuhelper/implbase1.hxx>
 #include <toolkit/awt/vclxwindow.hxx>
+#include <toolkit/awt/vclxwindows.hxx>
 #include <toolkit/helper/convert.hxx>
 #include <vcl/button.hxx>
 #include <vcl/event.hxx>
@@ -49,16 +50,19 @@
 #include <list>
 
 #include "layout/layoutcore.hxx"
+#include "layout/proplist.hxx"
 
 using namespace ::com::sun::star;
 
+using rtl::OUString;
+
 namespace layout
 {
 
 class ImageImpl
 {
   public:
-    css::uno::Reference< css::graphic::XGraphic > mxGraphic;
+    uno::Reference< graphic::XGraphic > mxGraphic;
     ImageImpl( const char *pName )
         : mxGraphic( layoutimpl::loadGraphic( pName ) )
     {
@@ -81,18 +85,16 @@ Image::~Image()
 
 class ButtonImpl : public ControlImpl
                  , public ::cppu::WeakImplHelper1< awt::XActionListener >
-                 , public ::cppu::WeakImplHelper1< awt::XItemListener >
 {
     Link maClickHdl;
-  protected:
-    // we add toggle hooks here to cut on code
-    Link maToggleHdl;
-  public:
+
+public:
     uno::Reference< awt::XButton > mxButton;
-    ButtonImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ControlImpl( pCtx, xPeer, pWindow )
-        , mxButton( xPeer, uno::UNO_QUERY )
+    ButtonImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ControlImpl( context, peer, window )
+        , mxButton( peer, uno::UNO_QUERY )
     {
+        /* We have default action when clicked, always listen. */
         mxButton->addActionListener( this );
     }
 
@@ -102,21 +104,26 @@ class ButtonImpl : public ControlImpl
 
     virtual void Click() { /* make me pure virtual? */ };
 
-    void SetClickHdl( const Link& rLink )
+    Link& GetClickHdl ()
     {
-        maClickHdl = rLink;
-        if ( !rLink )
-            mxButton->removeActionListener( this );
-        else
-            mxButton->addActionListener( this );
+        return maClickHdl;
     }
 
-    virtual void SAL_CALL disposing( const css::lang::EventObject& /* Source */ )
-        throw (css::uno::RuntimeException)
-    { mxButton.clear(); }
+    virtual void SetClickHdl( Link const& link )
+    {
+        maClickHdl = link;
+    }
+
+    void SAL_CALL disposing( lang::EventObject const& e )
+        throw (uno::RuntimeException)
+    {
+        mxButton->removeActionListener( this );
+        ControlImpl::disposing (e);
+        mxButton.clear ();
+    }
 
-    virtual void SAL_CALL actionPerformed( const css::awt::ActionEvent& /* rEvent */ )
-        throw (css::uno::RuntimeException)
+    virtual void SAL_CALL actionPerformed( const awt::ActionEvent& )
+        throw (uno::RuntimeException)
     {
         if ( !maClickHdl )
             Click();
@@ -124,20 +131,22 @@ class ButtonImpl : public ControlImpl
             maClickHdl.Call( static_cast<Window *>( mpWindow ) );
     }
 
-    virtual  // HACK: doesn't need to be virtual... remove in future...
-    void SAL_CALL itemStateChanged( const css::awt::ItemEvent& /* rEvent */ )
-        throw (css::uno::RuntimeException)
-    {
-        maToggleHdl.Call( static_cast<Window *>( mpWindow ) );
-    }
-
-    BOOL SetModeImage( css::uno::Reference< css::graphic::XGraphic > xGraph )
+    bool SetModeImage( uno::Reference< graphic::XGraphic > xGraph )
     {
         setProperty( "Graphic", uno::Any( xGraph ) );
         return true;
     }
 };
 
+Button::~Button ()
+{
+}
+
+String Button::GetStandardText (sal_uInt16 button_type)
+{
+    return ::Button::GetStandardText (button_type);
+}
+
 void Button::SetText( String const& rStr )
 {
     if ( !getImpl().mxButton.is() )
@@ -145,12 +154,18 @@ void Button::SetText( String const& rStr )
     getImpl().mxButton->setLabel( rStr );
 }
 
-void Button::SetClickHdl( const Link& rLink )
+void Button::SetClickHdl( const Link& link )
+{
+    if (&getImpl () && getImpl().mxButton.is ())
+        getImpl().SetClickHdl( link );
+}
+
+Link& Button::GetClickHdl ()
 {
-    getImpl().SetClickHdl( rLink );
+    return getImpl().GetClickHdl ();
 }
 
-BOOL Button::SetModeImage( const Image& rImage )
+bool Button::SetModeImage( const Image& rImage )
 {
     return getImpl().SetModeImage( rImage.getImpl().mxGraphic );
 }
@@ -166,45 +181,64 @@ void Button::Click()
 
 IMPL_GET_IMPL( Button );
 IMPL_CONSTRUCTORS( Button, Control, "button" );
+IMPL_GET_WINDOW (Button);
 
 class PushButtonImpl : public ButtonImpl
+                 , public ::cppu::WeakImplHelper1< awt::XItemListener >
 {
-  public:
-    PushButtonImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ButtonImpl( pCtx, xPeer, pWindow ) {}
+    Link maToggleHdl;
+public:
+    PushButtonImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ButtonImpl( context, peer, window )
+    {
+    }
 
-    void SetToggleHdl( const Link& rLink )
+    void SetToggleHdl( const Link& link )
     {
         // XButton doesn't have an explicit event for Toggle. Anyway, it is a
         // superset of the clicks: all clicks, and explicit toggles
-        maToggleHdl = rLink;
-        if ( !rLink )
+        if (!link && !!maToggleHdl)
             mxButton->removeActionListener( this );
-        else
+        else if (!!link && !maToggleHdl)
             mxButton->addActionListener( this );
+        maToggleHdl = link;
     }
-
-    virtual void SAL_CALL actionPerformed( const css::awt::ActionEvent& rEvent )
-        throw (css::uno::RuntimeException)
+    void SAL_CALL disposing( lang::EventObject const& e )
+        throw (uno::RuntimeException)
     {
-        ButtonImpl::actionPerformed( rEvent );
+        ButtonImpl::disposing (e);
+    }
+    virtual void SAL_CALL actionPerformed( awt::ActionEvent const& e )
+        throw (uno::RuntimeException)
+    {
+        ButtonImpl::actionPerformed( e );
         fireToggle();
     }
-
-    inline void fireToggle()
+    virtual void SAL_CALL itemStateChanged( const awt::ItemEvent& )
+        throw (uno::RuntimeException)
+    {
+        maToggleHdl.Call( static_cast<Window *>( mpWindow ) );
+    }
+    void fireToggle()
     {
         maToggleHdl.Call(  static_cast<Window *>( mpWindow ) );
     }
+
 };
 
-void PushButton::Check( BOOL bCheck )
+PushButton::~PushButton ()
+{
+    SetToggleHdl (Link ());
+}
+
+void PushButton::Check( bool bCheck )
 {
     getImpl().setProperty( "State", uno::Any( (sal_Int16) !!bCheck ) );
     // XButton doesn't have explicit toggle event
     getImpl().fireToggle();
 }
 
-BOOL PushButton::IsChecked() const
+bool PushButton::IsChecked() const
 {
     return !!( getImpl().getProperty( "State" ).get< sal_Int16 >() );
 }
@@ -214,74 +248,61 @@ void PushButton::Toggle()
     Check( true );
 }
 
-void PushButton::SetToggleHdl( const Link& rLink )
+void PushButton::SetToggleHdl( const Link& link )
 {
-    getImpl().SetToggleHdl( rLink );
+    if (&getImpl () && getImpl().mxButton.is ())
+        getImpl().SetToggleHdl( link );
 }
 
 IMPL_GET_IMPL( PushButton );
 IMPL_CONSTRUCTORS( PushButton, Button, "pushbutton" );
-
- // HACK: put every radio button into a group :/
-static std::list< RadioButtonImpl*> mpRadioGroup;
+IMPL_GET_WINDOW (PushButton);
 
 class RadioButtonImpl : public ButtonImpl
+                      , public ::cppu::WeakImplHelper1< awt::XItemListener >
 {
+    Link maToggleHdl;
 public:
     uno::Reference< awt::XRadioButton > mxRadioButton;
-    RadioButtonImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ButtonImpl( pCtx, xPeer, pWindow )
-        , mxRadioButton( xPeer, uno::UNO_QUERY )
+    RadioButtonImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ButtonImpl( context, peer, window )
+        , mxRadioButton( peer, uno::UNO_QUERY )
     {
-        // TEMP:
-        mpRadioGroup.push_back( this );
-        mxRadioButton->addItemListener( this );
     }
 
-    ~RadioButtonImpl()
-    {
-        //mxRadioButton->removeItemListener( this );
-        mpRadioGroup.pop_front();
-    }
-
-    void Check( BOOL bCheck )
+    void Check( bool bCheck )
     {
         if ( !mxRadioButton.is() )
             return;
+
+#if 1
+        // Have setState fire item event for
+        // RadioGroups::RadioGroup::itemStateChanged ()
+        ::RadioButton *r = static_cast<RadioButton*>(mpWindow)->GetRadioButton ();
+        bool state = r->IsRadioCheckEnabled ();
+        r->EnableRadioCheck();
         mxRadioButton->setState( !!bCheck );
+        r->EnableRadioCheck (state);
+#else
+        mxRadioButton->setState( !!bCheck );
+#endif
         fireToggle();
-
-        if ( bCheck )
-            unsetOthersGroup( this );
     }
 
-    BOOL IsChecked()
+    bool IsChecked()
     {
         if ( !mxRadioButton.is() )
-            return FALSE;
+            return false;
         return mxRadioButton->getState();
     }
 
-    static void unsetOthersGroup( RadioButtonImpl* current )
+    void SetToggleHdl( const Link& link )
     {
-        // set all others to false
-        for ( std::list< RadioButtonImpl*>::iterator i = mpRadioGroup.begin();
-              i != mpRadioGroup.end(); i++ )
-            {
-            if ( *i != current )
-                ( *i )->Check( false );
-        }
-    }
-
-    void SetToggleHdl( const Link& rLink )
-    {
-        maToggleHdl = rLink;
-#if 0
-        if ( !rLink )
+        if (!link && !!maToggleHdl)
             mxRadioButton->removeItemListener( this );
-        else
+        else if (!!link && !maToggleHdl)
             mxRadioButton->addItemListener( this );
-#endif
+        maToggleHdl = link;
     }
 
     inline void fireToggle()
@@ -289,84 +310,117 @@ public:
         maToggleHdl.Call(  static_cast<Window *>( mpWindow ) );
     }
 
-//HACK: temp
-    virtual void SAL_CALL itemStateChanged( const css::awt::ItemEvent& rEvent )
-        throw (css::uno::RuntimeException)
+    virtual void SetClickHdl( const Link& link )
+    {
+        // Keep RadioGroups::RadioGroup's actionListener at HEAD
+        // of list.  This way, it can handle RadioGroup's button
+        // states before all other callbacks and make sure the
+        // client code has the right state.
+
+        // IWBN to add an XRadioButton2 and layout::VCLXRadioButton
+        // with {get,set}RadioGroup() (and a "radiogroup" property
+        // even) and handle the grouping here in RadioButtonImpl.
+        uno::Reference< uno::XInterface > x = static_cast<VCLXRadioButton*> (mpWindow->GetVCLXWindow ())->getFirstActionListener ();
+        uno::Reference< awt::XActionListener > a = uno::Reference< awt::XActionListener> (x ,uno::UNO_QUERY );
+        mxButton->removeActionListener (a);
+        ButtonImpl::SetClickHdl (link);
+        mxButton->addActionListener (a);
+    }
+
+    void SAL_CALL disposing( lang::EventObject const& e )
+        throw (uno::RuntimeException)
     {
-        if ( !!maToggleHdl )
-        ButtonImpl::itemStateChanged( rEvent );
+        ButtonImpl::disposing (e);
+    }
 
-        if ( IsChecked() )
-            unsetOthersGroup( this );
+    virtual void SAL_CALL itemStateChanged( const awt::ItemEvent& )
+        throw (uno::RuntimeException)
+    {
+        maToggleHdl.Call( static_cast<Window *>( mpWindow ) );
     }
 };
 
-void RadioButton::Check( BOOL bCheck )
+RadioButton::~RadioButton ()
+{
+    SetToggleHdl (Link ());
+}
+
+void RadioButton::Check( bool bCheck )
 {
     getImpl().Check( bCheck );
 }
 
-BOOL RadioButton::IsChecked() const
+bool RadioButton::IsChecked() const
 {
     return getImpl().IsChecked();
 }
 
-void RadioButton::SetToggleHdl( const Link& rLink )
+void RadioButton::SetToggleHdl( const Link& link )
 {
-    getImpl().SetToggleHdl( rLink );
+    if (&getImpl () && getImpl().mxRadioButton.is ())
+        getImpl().SetToggleHdl( link );
 }
 
 IMPL_GET_IMPL( RadioButton );
-#if 1
+IMPL_GET_WINDOW( RadioButton );
+IMPL_GET_VCLXWINDOW( RadioButton );
 IMPL_CONSTRUCTORS( RadioButton, Button, "radiobutton" );
-#else //debugging aid
-RadioButton::RadioButton( Context *pCtx, const char *pId, sal_uInt32 nId )
-    : Button( new RadioButtonImpl( pCtx, pCtx->GetPeerHandle( pId, nId ), this ) )
-{
-    printf( "%s: name=%s\n", __PRETTY_FUNCTION__, pId );
-}
-
-RadioButton::RadioButton( Window *pParent, WinBits nBits )
-    : Button( new RadioButtonImpl( pParent->getContext(), Window::CreatePeer( pParent, nBits, "radiobutton" ), this ) )
-{
-}
-#endif
 
 class CheckBoxImpl : public ButtonImpl
+                 , public ::cppu::WeakImplHelper1< awt::XItemListener >
 {
+    Link maToggleHdl;
   public:
     uno::Reference< awt::XCheckBox > mxCheckBox;
-    CheckBoxImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ButtonImpl( pCtx, xPeer, pWindow )
-        , mxCheckBox( xPeer, uno::UNO_QUERY ) {}
+    CheckBoxImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ButtonImpl( context, peer, window )
+        , mxCheckBox( peer, uno::UNO_QUERY )
+    {
+    }
 
-    void SetToggleHdl( const Link& rLink )
+    void SetToggleHdl( const Link& link )
     {
-        maToggleHdl = rLink;
-        if ( !rLink )
+        if (!link && !!maToggleHdl)
             mxCheckBox->removeItemListener( this );
-        else
+        else if (!!link && !maToggleHdl)
             mxCheckBox->addItemListener( this );
+        maToggleHdl = link;
+    }
+    void SAL_CALL disposing( lang::EventObject const& e )
+        throw (uno::RuntimeException)
+    {
+        ButtonImpl::disposing (e);
+    }
+    virtual void SAL_CALL itemStateChanged( const awt::ItemEvent& )
+        throw (uno::RuntimeException)
+    {
+        maToggleHdl.Call( static_cast<Window *>( mpWindow ) );
     }
 };
 
-void CheckBox::Check( BOOL bCheck )
+CheckBox::~CheckBox ()
+{
+    SetToggleHdl (Link ());
+}
+
+void CheckBox::Check( bool bCheck )
 {
     if ( !getImpl().mxCheckBox.is() )
         return;
     getImpl().mxCheckBox->setState( !!bCheck );
 }
 
-BOOL CheckBox::IsChecked() const
+bool CheckBox::IsChecked() const
 {
     if ( !getImpl().mxCheckBox.is() )
-        return FALSE;
+        return false;
     return getImpl().mxCheckBox->getState() != 0;
 }
 
-void CheckBox::SetToggleHdl( const Link& rLink )
+void CheckBox::SetToggleHdl( const Link& link )
 {
-    getImpl().SetToggleHdl( rLink );
+    if (&getImpl () && getImpl().mxCheckBox.is ())
+        getImpl().SetToggleHdl( link );
 }
 
 IMPL_GET_IMPL( CheckBox );
@@ -376,14 +430,14 @@ IMPL_CONSTRUCTORS( CheckBox, Button, "checkbox" );
     class t##Impl : public parent##Impl \
     { \
     public: \
-        t##Impl( Context *pCtx, PeerHandle const& xPeer, Window *pWindow ) \
-            : parent##Impl( pCtx, xPeer, pWindow ) \
+        t##Impl( Context *context, PeerHandle const& peer, Window *window ) \
+            : parent##Impl( context, peer, window ) \
         { \
         } \
         void Click() \
         { \
-            Dialog *d = static_cast<Dialog *>( mpCtx ); \
-            d->EndDialog( response ); \
+            if (Dialog *d = static_cast<Dialog *> (mpCtx)) \
+                d->EndDialog( response ); \
         } \
     }
 
@@ -422,45 +476,35 @@ protected:
     bool bAdvancedMode;
     std::list< Window*> maAdvanced;
     std::list< Window*> maSimple;
-    rtl::OUString mSimpleLabel;
-    rtl::OUString mAdvancedLabel;
 
+public:
+    OUString mAdvancedLabel;
+    OUString mSimpleLabel;
+
+protected:
     Window* Remove( std::list< Window*> lst, Window* w )
-{
+    {
         for ( std::list< Window*>::iterator it = maAdvanced.begin();
               it != maAdvanced.end(); it++ )
             if ( *it == w )
-    {
+            {
                 lst.erase( it );
                 return *it;
             }
         return 0;
     }
-    void redraw()
-    {
-        uno::Reference <awt::XWindow> ref( mxWindow, uno::UNO_QUERY );
-        ::Window* window = VCLXWindow::GetImplementation( ref )->GetWindow();
-        ::Window* parent = window->GetParent();
-
-        ::Rectangle r = Rectangle( parent->GetPosPixel(),
-                                   parent->GetSizePixel() );
-
-        parent->Invalidate( r, INVALIDATE_CHILDREN | INVALIDATE_NOCHILDREN );
-        parent->SetPosSizePixel( 0, 0, r.nRight - r.nLeft, r.nBottom - r.nTop,
-                                 awt::PosSize::SIZE );
-    }
-
+    
 public:
-    AdvancedButtonImpl( Context *pCtx, PeerHandle const& xPeer, Window *pWindow )
-        : PushButtonImpl( pCtx, xPeer, pWindow )
+    AdvancedButtonImpl( Context *context, PeerHandle const& peer, Window *window )
+        : PushButtonImpl( context, peer, window )
         , bAdvancedMode( false )
           // TODO: i18n
           // Button::GetStandardText( BUTTON_ADVANCED );
           // Button::GetStandardText( BUTTON_SIMPLE );
-        , mSimpleLabel( rtl::OUString::createFromAscii( "Advanced..." ) )
-        , mAdvancedLabel( rtl::OUString::createFromAscii( "Simple..." ) )
-{
-}
+        , mAdvancedLabel( OUString::createFromAscii( "Advanced..." ) )
+        , mSimpleLabel( OUString::createFromAscii( "Simple..." ) )
+    {
+    }
     void Click()
     {
         bAdvancedMode = !bAdvancedMode;
@@ -469,20 +513,20 @@ public:
         else
             simpleMode();
     }
+    void setAlign ()
+    {
+        ::PushButton *b = static_cast<PushButton*> (mpWindow)->GetPushButton ();
+        b->SetSymbolAlign (SYMBOLALIGN_RIGHT);
+        b->SetSmallSymbol ();
+        //mpWindow->SetStyle (mpWindow->GetStyle() | WB_CENTER);
+    }
     void advancedMode()
     {
-        // TODO: set symbol/image?
-        // SYMBOL_PAGEUP, SYMBOL_PAGEDOWN
-#if 0
-        // How to set images from here?
-        // XImageConsumer looks like a disaster
-        // Should move all this switching functionality to VCLXAdvancedButton?
-        /biek/home/janneke/vc/layout-cws/default_images/res/commandimagelist/
-            sc_arrowshapes_down.png
-            sch_flowchartshapes.flowchart-extract.png
-            sch_flowchartshapes.flowchart-merge.png
-#endif        
-        mxButton->setLabel( mAdvancedLabel );
+        ::PushButton *b = static_cast<PushButton*> (mpWindow)->GetPushButton ();
+        b->SetSymbol (SYMBOL_PAGEUP);
+        setAlign ();
+        if (mSimpleLabel.getLength ())
+            b->SetText (mSimpleLabel);
         for ( std::list< Window*>::iterator it = maAdvanced.begin();
               it != maAdvanced.end(); it++ )
             ( *it )->Show();
@@ -490,12 +534,16 @@ public:
               it != maSimple.end(); it++ )
             ( *it )->Hide();
 
-        redraw();
+        redraw ();
     }
-
     void simpleMode()
-{
-        mxButton->setLabel( mSimpleLabel );
+    {
+        //mxButton->setLabel( mSimpleLabel );
+        ::PushButton *b = static_cast<PushButton*> (mpWindow)->GetPushButton ();
+        b->SetSymbol (SYMBOL_PAGEDOWN);
+        if (mAdvancedLabel.getLength ())
+            b->SetText (mAdvancedLabel);
+        setAlign ();
         for ( std::list< Window*>::iterator it = maAdvanced.begin();
               it != maAdvanced.end(); it++ )
             ( *it )->Hide();
@@ -503,7 +551,7 @@ public:
               it != maSimple.end(); it++ )
             ( *it )->Show();
 
-        redraw();
+        redraw (true);
     }
     void AddAdvanced( Window* w )
     {
@@ -547,18 +595,44 @@ void AdvancedButton::RemoveSimple( Window* w )
     getImpl().RemoveSimple( w );
 }
 
-IMPL_CONSTRUCTORS( AdvancedButton, PushButton, "advancedbutton" );
+void AdvancedButton::SetAdvancedText (OUString const& text)
+{
+    if (text.getLength ())
+        getImpl ().mAdvancedLabel = text;
+}
+
+void AdvancedButton::SetSimpleText (OUString const& text)
+{
+    if (text.getLength ())
+        getImpl ().mSimpleLabel = text;
+}
+
+OUString AdvancedButton::GetAdvancedText () const
+{
+    return getImpl ().mAdvancedLabel;
+}
+
+OUString AdvancedButton::GetSimpleText () const
+{
+    return getImpl ().mSimpleLabel;
+}
+
+void AdvancedButton::SetDelta (int)
+{
+}
+
+IMPL_CONSTRUCTORS_BODY( AdvancedButton, PushButton, "advancedbutton", getImpl().simpleMode () );
 IMPL_GET_IMPL( AdvancedButton );
 
 
 class MoreButtonImpl : public AdvancedButtonImpl
 {
 public:
-    MoreButtonImpl( Context *pCtx, PeerHandle const& xPeer, Window *pWindow )
-        : AdvancedButtonImpl( pCtx, xPeer, pWindow)
+    MoreButtonImpl( Context *context, PeerHandle const& peer, Window *window )
+        : AdvancedButtonImpl( context, peer, window)
     {
-        mAdvancedLabel = ::Button::GetStandardText( BUTTON_LESS );
-        mSimpleLabel = ::Button::GetStandardText( BUTTON_MORE );
+        mSimpleLabel = Button::GetStandardText( BUTTON_MORE );
+        mAdvancedLabel = Button::GetStandardText( BUTTON_LESS );
     }
     void AddWindow( Window* w ) { AddAdvanced( w ); }
     void RemoveWindow( Window* w ) { RemoveAdvanced( w ); }
@@ -566,7 +640,7 @@ public:
 
 // TODO
 //BUTTON_IMPL( MoreButton, PushButton, 0 );
-IMPL_CONSTRUCTORS( MoreButton, AdvancedButton, "morebutton" );
+IMPL_CONSTRUCTORS_BODY( MoreButton, AdvancedButton, "morebutton", getImpl().simpleMode () );
 IMPL_GET_IMPL( MoreButton );
 
 void MoreButton::AddWindow( Window* w )
@@ -579,4 +653,24 @@ void MoreButton::RemoveWindow( Window* w )
     getImpl().RemoveWindow( w );
 }
 
+void MoreButton::SetMoreText (OUString const& text)
+{
+    SetAdvancedText (text);
+}
+
+void MoreButton::SetLessText (OUString const& text)
+{
+    SetSimpleText (text);
+}
+
+OUString MoreButton::GetMoreText () const
+{
+    return GetAdvancedText ();
+}
+
+OUString MoreButton::GetLessText () const
+{
+    return GetSimpleText ();
+}
+
 } // namespace layout
diff --git a/toolkit/source/vclcompat/wcontainer.cxx b/toolkit/source/vclcompat/wcontainer.cxx
index ba49195..9783cb9 100644
--- toolkit/source/vclcompat/wcontainer.cxx
+++ toolkit/source/vclcompat/wcontainer.cxx
@@ -44,8 +44,8 @@ using namespace ::com::sun::star;
 namespace layout
 {
 
-Container::Container( Context const* pCtx, char const* pId )
-    : mxContainer( pCtx->GetPeerHandle( pId ), uno::UNO_QUERY )
+Container::Container( Context const* context, char const* pId )
+    : mxContainer( context->GetPeerHandle( pId ), uno::UNO_QUERY )
 {
     if ( !mxContainer.is() )
     {
@@ -154,12 +154,12 @@ Table::Table( sal_Int32 nBorder, sal_Int32 nColumns )
                               uno::Any( nColumns ) );
 }
 
-void Table::Add( Window *pWindow, bool bXExpand, bool bYExpand,
+void Table::Add( Window *window, bool bXExpand, bool bYExpand,
                  sal_Int32 nXSpan, sal_Int32 nYSpan )
 {
-    if ( !pWindow )
+    if ( !window )
         return;
-    WindowImpl &rImpl = pWindow->getImpl();
+    WindowImpl &rImpl = window->getImpl();
     uno::Reference< awt::XLayoutConstrains > xChild( rImpl.mxWindow,
                                                      uno::UNO_QUERY );
     mxContainer->addChild( xChild );
@@ -200,11 +200,11 @@ Box::Box( rtl::OUString const& rName, sal_Int32 nBorder, bool bHomogeneous )
                               uno::Any( bHomogeneous ) );
 }
 
-void Box::Add( Window *pWindow, bool bExpand, bool bFill, sal_Int32 nPadding)
+void Box::Add( Window *window, bool bExpand, bool bFill, sal_Int32 nPadding)
 {
-    if ( !pWindow )
+    if ( !window )
         return;
-    WindowImpl &rImpl = pWindow->getImpl();
+    WindowImpl &rImpl = window->getImpl();
     uno::Reference< awt::XLayoutConstrains > xChild( rImpl.mxWindow,
                                                      uno::UNO_QUERY );
 
@@ -237,13 +237,13 @@ void Box::setProps( uno::Reference< awt::XLayoutConstrains > xChild,
                               uno::Any( nPadding ) );
 }
 
-Table::Table( Context const* pCtx, char const* pId )
-    : Container( pCtx, pId )
+Table::Table( Context const* context, char const* pId )
+    : Container( context, pId )
 {
 }
 
-Box::Box( Context const* pCtx, char const* pId )
-    : Container( pCtx, pId )
+Box::Box( Context const* context, char const* pId )
+    : Container( context, pId )
 {
 }
 
@@ -253,8 +253,8 @@ HBox::HBox( sal_Int32 nBorder, bool bHomogeneous )
 {
 }
 
-HBox::HBox( Context const* pCtx, char const* pId )
-    : Box( pCtx, pId )
+HBox::HBox( Context const* context, char const* pId )
+    : Box( context, pId )
 {
 }
 
@@ -264,8 +264,8 @@ VBox::VBox( sal_Int32 nBorder, bool bHomogeneous )
 {
 }
 
-VBox::VBox( Context const* pCtx, char const* pId )
-    : Box( pCtx, pId )
+VBox::VBox( Context const* context, char const* pId )
+    : Box( context, pId )
 {
 }
 
diff --git a/toolkit/source/vclcompat/wfield.cxx b/toolkit/source/vclcompat/wfield.cxx
index 015cf63..c2520ff 100644
--- toolkit/source/vclcompat/wfield.cxx
+++ toolkit/source/vclcompat/wfield.cxx
@@ -33,48 +33,42 @@
 
 #include <comphelper/processfactory.hxx>
 #include <com/sun/star/awt/XMetricField.hpp>
-#include <com/sun/star/awt/XCurrencyField.hpp>
+#include <com/sun/star/awt/XNumericField.hpp>
 #include <com/sun/star/awt/XTextComponent.hpp>
 #include <com/sun/star/awt/XListBox.hpp>
 #include <com/sun/star/awt/XComboBox.hpp>
 #include <cppuhelper/implbase1.hxx>
 #include <com/sun/star/awt/XActionListener.hpp>
 #include <com/sun/star/awt/XItemListener.hpp>
+#include <vcl/combobox.hxx>
+#include <vcl/lstbox.hxx>
+
+#include <toolkit/awt/vclxwindows.hxx>
 
 using namespace ::com::sun::star;
 
 namespace layout
 {
 
-class EditImpl : public ControlImpl,
-                 public ::cppu::WeakImplHelper1< awt::XTextListener >
+class EditImpl : public ControlImpl
+               , public ::cppu::WeakImplHelper1< awt::XTextListener >
 {
+public:
     Link maModifyHdl;
-  public:
+
     uno::Reference< awt::XTextComponent > mxEdit;
-    EditImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ControlImpl( pCtx, xPeer, pWindow )
-        ,  mxEdit( xPeer, uno::UNO_QUERY )
+    EditImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ControlImpl( context, peer, window )
+        , mxEdit( peer, uno::UNO_QUERY )
     {
     }
 
-    virtual void SAL_CALL disposing( const css::lang::EventObject& /* Source */ )
-        throw (css::uno::RuntimeException)
-    {
-        SetModifyHdl( Link() );
-        mxEdit.clear();
-    }
+    ~EditImpl ();
 
-    void SetModifyHdl( const Link& rLink )
-    {
-        if ( !mxEdit.is() )
-            return;
-        maModifyHdl = rLink;
-        if ( !rLink )
-            mxEdit->removeTextListener( this );
-        else
-            mxEdit->addTextListener( this );
-    }
+    virtual void SAL_CALL disposing( lang::EventObject const& e )
+        throw (css::uno::RuntimeException);
+
+    virtual void SetModifyHdl( Link const& link );
 
     void SAL_CALL textChanged( const css::awt::TextEvent& /* rEvent */ )
         throw (css::uno::RuntimeException)
@@ -83,6 +77,31 @@ class EditImpl : public ControlImpl,
     }
 };
 
+EditImpl::~EditImpl ()
+{
+}
+
+void SAL_CALL EditImpl::disposing( lang::EventObject const& e )
+    throw (css::uno::RuntimeException)
+{
+    ControlImpl::disposing (e);
+    mxEdit.clear ();
+}
+
+void EditImpl::SetModifyHdl( Link const& link )
+{
+    if (!link && !!maModifyHdl)
+        mxEdit->removeTextListener( this );
+    else if (!!link && !maModifyHdl)
+        mxEdit->addTextListener( this );
+    maModifyHdl = link;
+}
+
+Edit::~Edit ()
+{
+    SetModifyHdl (Link ());
+}
+
 void Edit::SetSelection( Selection const& rSelection )
 {
     if ( !getImpl().mxEdit.is() )
@@ -104,9 +123,10 @@ XubString Edit::GetText() const
     return XubString( getImpl().mxEdit->getText());
 }
 
-void Edit::SetModifyHdl( const Link& rLink )
+void Edit::SetModifyHdl( const Link& link )
 {
-    getImpl().SetModifyHdl( rLink );
+    if (&getImpl () && getImpl().mxEdit.is ())
+        getImpl().SetModifyHdl( link );
 }
 
 IMPL_CONSTRUCTORS( Edit, Control, "edit" );
@@ -116,8 +136,8 @@ IMPL_GET_IMPL( Edit );
 class MultiLineEditImpl : public EditImpl
 {
 public:
-    MultiLineEditImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : EditImpl( pCtx, xPeer, pWindow )
+    MultiLineEditImpl( Context *context, const PeerHandle &peer, Window *window )
+        : EditImpl( context, peer, window )
     {
     }
 };
@@ -129,8 +149,8 @@ IMPL_GET_IMPL( MultiLineEdit );
 class SpinFieldImpl : public EditImpl
 {
   public:
-    SpinFieldImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : EditImpl( pCtx, xPeer, pWindow )
+    SpinFieldImpl( Context *context, const PeerHandle &peer, Window *window )
+        : EditImpl( context, peer, window )
     {
     }
 };
@@ -141,8 +161,8 @@ IMPL_CONSTRUCTORS( SpinField, Edit, "spinfield" );
 class NumericFieldImpl : public SpinFieldImpl
 {
   public:
-    NumericFieldImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : SpinFieldImpl( pCtx, xPeer, pWindow )
+    NumericFieldImpl( Context *context, const PeerHandle &peer, Window *window )
+        : SpinFieldImpl( context, peer, window )
     {
     }
 };
@@ -151,8 +171,8 @@ class NumericFieldImpl : public SpinFieldImpl
 class MetricFieldImpl : public SpinFieldImpl
 {
   public:
-    MetricFieldImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : SpinFieldImpl( pCtx, xPeer, pWindow )
+    MetricFieldImpl( Context *context, const PeerHandle &peer, Window *window )
+        : SpinFieldImpl( context, peer, window )
     {
     }
 };
@@ -165,21 +185,26 @@ IMPL_GET_IMPL( MetricField );
 class FormatterBaseImpl
 {
   protected:
-    PeerHandle mxPeer;
+    PeerHandle mpeer;
   public:
-    explicit FormatterBaseImpl( const PeerHandle &xPeer )
-        : mxPeer( xPeer )
+    explicit FormatterBaseImpl( const PeerHandle &peer )
+        : mpeer( peer )
     {
     };
 };
 
+FormatterBase::FormatterBase( FormatterBaseImpl *pFormatImpl )
+    : mpFormatImpl( pFormatImpl )
+{
+}
+
 class NumericFormatterImpl : public FormatterBaseImpl
 {
   public:
-    uno::Reference< awt::XCurrencyField > mxField;
-    explicit NumericFormatterImpl( const PeerHandle &xPeer )
-        : FormatterBaseImpl( xPeer )
-        , mxField( xPeer, uno::UNO_QUERY )
+    uno::Reference< awt::XNumericField > mxField;
+    explicit NumericFormatterImpl( const PeerHandle &peer )
+        : FormatterBaseImpl( peer )
+        , mxField( peer, uno::UNO_QUERY )
     {
     }
 
@@ -206,9 +231,9 @@ class MetricFormatterImpl : public FormatterBaseImpl
 {
   public:
     uno::Reference< awt::XMetricField > mxField;
-    explicit MetricFormatterImpl( const PeerHandle &xPeer )
-        : FormatterBaseImpl( xPeer )
-        , mxField( xPeer, uno::UNO_QUERY )
+    explicit MetricFormatterImpl( const PeerHandle &peer )
+        : FormatterBaseImpl( peer )
+        , mxField( peer, uno::UNO_QUERY )
     {
     }
 };
@@ -295,20 +320,27 @@ sal_Int64 MetricFormatter::GetValue( FieldUnit nUnit ) const
 IMPL_CONSTRUCTORS_2( MetricField, SpinField, MetricFormatter, "metricfield" );
 
 // Window/Control/Edit/ComboBox
-class ComboBoxImpl : public EditImpl,
-                     public ::cppu::WeakImplHelper1< awt::XActionListener >,
-                     public ::cppu::WeakImplHelper1< awt::XItemListener >
+class ComboBoxImpl : public EditImpl
+                   , public ::cppu::WeakImplHelper1< awt::XActionListener >
+                   , public ::cppu::WeakImplHelper1< awt::XItemListener >
 {
-    Link maClickHdl, maSelectHdl;
 public:
     uno::Reference< awt::XComboBox > mxComboBox;
-    ComboBoxImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : EditImpl( pCtx, xPeer, pWindow ),
-        mxComboBox( xPeer, uno::UNO_QUERY )
+
+    Link maClickHdl;
+    Link maSelectHdl;
+
+    Window *parent;
+    
+    ComboBoxImpl( Context *context, const PeerHandle &peer, Window *window )
+        : EditImpl( context, peer, window )
+        , mxComboBox( peer, uno::UNO_QUERY )
     {
     }
 
-    USHORT InsertEntry( XubString const& rStr, USHORT nPos )
+    ~ComboBoxImpl ();
+
+    sal_uInt16 InsertEntry( XubString const& rStr, sal_uInt16 nPos )
     {
         if ( nPos == COMBOBOX_APPEND )
             nPos = GetEntryCount();
@@ -316,56 +348,53 @@ public:
         return nPos;
     }
 
-    void RemoveEntry( USHORT nPos )
+    void RemoveEntry( sal_uInt16 nPos )
     {
         mxComboBox->removeItems( nPos, 1 );
     }
 
-    USHORT GetEntryPos( const XubString& rStr ) const
+    sal_uInt16 GetEntryPos( const XubString& rStr ) const
     {
         uno::Sequence< rtl::OUString> aItems( mxComboBox->getItems() );
         rtl::OUString rKey( rStr );
         for( unsigned int i = 0; aItems.getLength(); i++ )
         {
             if ( aItems[ i ] == rKey )
-                return sal::static_int_cast< USHORT >( i );
+                return sal::static_int_cast< sal_uInt16 >( i );
         }
         return COMBOBOX_ENTRY_NOTFOUND;
     }
 
-    XubString GetEntry( USHORT nPos ) const
+    XubString GetEntry( sal_uInt16 nPos ) const
     {
         return XubString( mxComboBox->getItem( nPos ) );
     }
 
-    USHORT GetEntryCount() const
+    sal_uInt16 GetEntryCount() const
     {
         return mxComboBox->getItemCount();
     }
 
-    void SetClickHdl( const Link& rLink )
+    void SetClickHdl( Link const& link )
     {
-        maClickHdl = rLink;
-        if ( !rLink )
+        if (!link && !!maClickHdl)
             mxComboBox->removeActionListener( this );
-        else
+        else if (!!link && !maClickHdl)
             mxComboBox->addActionListener( this );
+        maClickHdl = link;
     }
 
-    void SetSelectHdl( const Link& rLink )
+    void SetSelectHdl( Link const& link )
     {
-        maSelectHdl = rLink;
-        if ( !rLink )
+        if (!link && !!maSelectHdl)
             mxComboBox->removeItemListener( this );
-        else
+        else if (!!link && !maSelectHdl)
             mxComboBox->addItemListener( this );
+        maSelectHdl = link;
     }
 
-    virtual void SAL_CALL disposing( const css::lang::EventObject& /* Source */ )
-        throw (css::uno::RuntimeException)
-    {
-        mxComboBox.clear();
-    }
+    virtual void SAL_CALL disposing( lang::EventObject const& e )
+        throw (css::uno::RuntimeException);
 
     virtual void SAL_CALL actionPerformed( const css::awt::ActionEvent& /* rEvent */ )
         throw (css::uno::RuntimeException)
@@ -386,7 +415,25 @@ public:
     }
 };
 
-USHORT ComboBox::InsertEntry( const XubString &rStr, USHORT nPos )
+ComboBox::~ComboBox ()
+{
+    OSL_TRACE ("%s: deleting ComboBox for window: %p", __FUNCTION__, GetWindow ());
+}
+
+ComboBoxImpl::~ComboBoxImpl ()
+{
+    OSL_TRACE ("%s: deleting ComboBoxImpl for window: %p", __FUNCTION__, mpWindow ? mpWindow->GetWindow () : 0);
+    OSL_TRACE ("%s: deleting ComboBoxImpl for listener: %p", __FUNCTION__, static_cast<XFocusListener*> (this));
+}
+
+void ComboBoxImpl::disposing( lang::EventObject const& e )
+    throw (css::uno::RuntimeException)
+{
+    EditImpl::disposing (e);
+    mxComboBox.clear ();
+}
+
+sal_uInt16 ComboBox::InsertEntry( const XubString &rStr, sal_uInt16 nPos )
 {
     return getImpl().InsertEntry( rStr, nPos );
 }
@@ -396,7 +443,7 @@ void ComboBox::RemoveEntry( const XubString& rStr )
     getImpl().RemoveEntry( GetEntryPos( rStr ) );
 }
 
-void ComboBox::RemoveEntry( USHORT nPos )
+void ComboBox::RemoveEntry( sal_uInt16 nPos )
 {
     getImpl().RemoveEntry( nPos );
 }
@@ -407,51 +454,70 @@ void ComboBox::Clear()
     getImpl().setProperty( "StringItemList", uno::Any( aNoItems ) );
 }
 
-USHORT ComboBox::GetEntryPos( const XubString& rStr ) const
+sal_uInt16 ComboBox::GetEntryPos( const XubString& rStr ) const
 {
     return getImpl().GetEntryPos( rStr );
 }
 
-XubString ComboBox::GetEntry( USHORT nPos ) const
+XubString ComboBox::GetEntry( sal_uInt16 nPos ) const
 {
     rtl::OUString rItem = getImpl().mxComboBox->getItem( nPos );
     return XubString( rItem );
 }
 
-USHORT ComboBox::GetEntryCount() const
+sal_uInt16 ComboBox::GetEntryCount() const
 {
     return getImpl().GetEntryCount();
 }
 
-void ComboBox::SetClickHdl( const Link& rLink )
+void ComboBox::SetClickHdl( const Link& link )
+{
+    if (&getImpl () && getImpl().mxComboBox.is ())
+        getImpl().SetClickHdl( link );
+}
+
+void ComboBox::SetSelectHdl( const Link& link )
 {
-    getImpl().SetClickHdl( rLink );
+    if (&getImpl () && getImpl().mxComboBox.is ())
+        getImpl().SetSelectHdl( link );
 }
 
-void ComboBox::SetSelectHdl( const Link& rLink )
+void ComboBox::EnableAutocomplete (bool enable, bool matchCase)
 {
-    getImpl().SetSelectHdl( rLink );
+    GetComboBox ()->EnableAutocomplete (enable, matchCase);
+}
+
+IMPL_CONSTRUCTORS_BODY( ComboBox, Edit, "combobox", getImpl().parent = parent; );
+IMPL_GET_WINDOW (ComboBox);
+/// IMPL_GET_IMPL( ComboBox );
+
+static ComboBoxImpl& null_combobox_impl = (ComboBoxImpl&)*(ComboBoxImpl*)0;
+
+ComboBoxImpl &ComboBox::getImpl () const
+{
+    if (ComboBoxImpl* c = static_cast<ComboBoxImpl *>(mpImpl))
+        return *c;
+    return null_combobox_impl;
 }
 
-IMPL_CONSTRUCTORS( ComboBox, Edit, "combobox" );
-IMPL_GET_IMPL( ComboBox );
 
 // Window/Control/ListBox
-class ListBoxImpl : public ControlImpl,
-                    public ::cppu::WeakImplHelper1< awt::XActionListener >,
-                    public ::cppu::WeakImplHelper1< awt::XItemListener >
+class ListBoxImpl : public ControlImpl
+                  , public ::cppu::WeakImplHelper1< awt::XActionListener >
+                  , public ::cppu::WeakImplHelper1< awt::XItemListener >
 {
-    Link maClickHdl, maSelectHdl;
+    Link maClickHdl;
+    Link maSelectHdl;
 public:
     uno::Reference< awt::XListBox > mxListBox;
-    ListBoxImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ControlImpl( pCtx, xPeer, pWindow ),
-        mxListBox( xPeer, uno::UNO_QUERY )
+    ListBoxImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ControlImpl( context, peer, window ),
+        mxListBox( peer, uno::UNO_QUERY )
     {
         SelectEntryPos( 0, true );
     }
 
-    USHORT InsertEntry(const XubString& rStr, USHORT nPos)
+    sal_uInt16 InsertEntry(const XubString& rStr, sal_uInt16 nPos)
     {
         if ( nPos == LISTBOX_APPEND )
             nPos = mxListBox->getItemCount();
@@ -459,12 +525,12 @@ public:
         return nPos;
     }
 
-    void RemoveEntry( USHORT nPos )
+    void RemoveEntry( sal_uInt16 nPos )
     {
         mxListBox->removeItems( nPos, 1 );
     }
 
-    USHORT RemoveEntry(const XubString& rStr, USHORT nPos)
+    sal_uInt16 RemoveEntry(const XubString& rStr, sal_uInt16 nPos)
     {
         if ( nPos == LISTBOX_APPEND )
             nPos = mxListBox->getItemCount();
@@ -472,41 +538,41 @@ public:
         return nPos;
     }
 
-    USHORT GetEntryPos( const XubString& rStr ) const
+    sal_uInt16 GetEntryPos( const XubString& rStr ) const
     {
         uno::Sequence< rtl::OUString> aItems( mxListBox->getItems() );
         rtl::OUString rKey( rStr );
         for( unsigned int i = 0; aItems.getLength(); i++ )
         {
             if ( aItems[ i ] == rKey )
-                return sal::static_int_cast< USHORT >( i );
+                return sal::static_int_cast< sal_uInt16 >( i );
         }
         return LISTBOX_ENTRY_NOTFOUND;
     }
 
-    XubString GetEntry( USHORT nPos ) const
+    XubString GetEntry( sal_uInt16 nPos ) const
     {
         return mxListBox->getItem( nPos );
     }
 
-    USHORT GetEntryCount() const
+    sal_uInt16 GetEntryCount() const
     {
         return mxListBox->getItemCount();
     }
 
-    void SelectEntryPos( USHORT nPos, BOOL bSelect )
+    void SelectEntryPos( sal_uInt16 nPos, bool bSelect )
     {
         mxListBox->selectItemPos( nPos, bSelect );
     }
 
-    USHORT GetSelectEntryCount() const
+    sal_uInt16 GetSelectEntryCount() const
     {
-        return sal::static_int_cast< USHORT >( mxListBox->getSelectedItems().getLength() );
+        return sal::static_int_cast< sal_uInt16 >( mxListBox->getSelectedItems().getLength() );
     }
 
-    USHORT GetSelectEntryPos( USHORT nSelIndex ) const
+    sal_uInt16 GetSelectEntryPos( sal_uInt16 nSelIndex ) const
     {
-        USHORT nSelected = 0;
+        sal_uInt16 nSelected = 0;
         if ( mxListBox->isMutipleMode() )
         {
             uno::Sequence< short > aItems( mxListBox->getSelectedItemsPos() );
@@ -518,28 +584,29 @@ public:
         return nSelected;
     }
 
-    void SetClickHdl( const Link& rLink )
+    void SetClickHdl( Link const& link )
     {
-        maClickHdl = rLink;
-        if ( !rLink )
+        if (!link && !!maClickHdl)
             mxListBox->removeActionListener( this );
-        else
+        else if (!!link && !maClickHdl)
             mxListBox->addActionListener( this );
+        maClickHdl = link;
     }
 
-    void SetSelectHdl( const Link& rLink )
+    void SetSelectHdl( Link const& link )
     {
-        maSelectHdl = rLink;
-        if ( !rLink )
+        if (!link && !!maSelectHdl)
             mxListBox->removeItemListener( this );
-        else
+        else if (!!link && !maSelectHdl)
             mxListBox->addItemListener( this );
+        maSelectHdl = link;
     }
 
-    virtual void SAL_CALL disposing( const css::lang::EventObject& /* Source */ )
+    virtual void SAL_CALL disposing( lang::EventObject const& e )
         throw (css::uno::RuntimeException)
     {
-        mxListBox.clear();
+        ControlImpl::disposing (e);
+        mxListBox.clear ();
     }
 
     void SAL_CALL actionPerformed( const css::awt::ActionEvent& /* rEvent */ )
@@ -558,12 +625,16 @@ public:
     }
 };
 
-USHORT ListBox::InsertEntry(const XubString& rStr, USHORT nPos)
+ListBox::~ListBox ()
+{
+}
+
+sal_uInt16 ListBox::InsertEntry(const XubString& rStr, sal_uInt16 nPos)
 {
     return getImpl().InsertEntry(rStr, nPos);
 }
 
-void ListBox::RemoveEntry( USHORT nPos )
+void ListBox::RemoveEntry( sal_uInt16 nPos )
 {
     return getImpl().RemoveEntry( nPos );
 }
@@ -579,57 +650,112 @@ void ListBox::Clear()
     getImpl().setProperty( "StringItemList", uno::Any( aNoItems ) );
 }
 
-USHORT ListBox::GetEntryPos( const XubString& rStr ) const
+sal_uInt16 ListBox::GetEntryPos( const XubString& rStr ) const
 {
     return getImpl().GetEntryPos( rStr );
 }
 
-XubString ListBox::GetEntry( USHORT nPos ) const
+XubString ListBox::GetEntry( sal_uInt16 nPos ) const
 {
     return getImpl().GetEntry( nPos );
 }
 
-USHORT ListBox::GetEntryCount() const
+sal_uInt16 ListBox::GetEntryCount() const
 {
     return getImpl().GetEntryCount();
 }
 
-void ListBox::SelectEntryPos( USHORT nPos, BOOL bSelect )
+void ListBox::SelectEntryPos( sal_uInt16 nPos, bool bSelect )
 {
     getImpl().SelectEntryPos( nPos, bSelect );
 }
 
-void ListBox::SelectEntry( const XubString& rStr, BOOL bSelect )
+void ListBox::SelectEntry( const XubString& rStr, bool bSelect )
 {
     SelectEntryPos( GetEntryPos( rStr ), bSelect );
 }
 
-USHORT ListBox::GetSelectEntryCount() const
+sal_uInt16 ListBox::GetSelectEntryCount() const
 {
     return getImpl().GetSelectEntryCount();
 }
 
-USHORT ListBox::GetSelectEntryPos( USHORT nSelIndex ) const
+sal_uInt16 ListBox::GetSelectEntryPos( sal_uInt16 nSelIndex ) const
 {
     return getImpl().GetSelectEntryPos( nSelIndex );
 }
 
-XubString ListBox::GetSelectEntry( USHORT nSelIndex ) const
+XubString ListBox::GetSelectEntry( sal_uInt16 nSelIndex ) const
 {
     return GetEntry( GetSelectEntryPos( nSelIndex ) );
 }
 
-void ListBox::SetSelectHdl( const Link& rLink )
+void ListBox::SetSelectHdl( const Link& link )
 {
-    getImpl().SetSelectHdl( rLink );
+    getImpl().SetSelectHdl( link );
 }
 
-void ListBox::SetClickHdl( const Link& rLink )
+void ListBox::SetClickHdl( const Link& link )
 {
-    getImpl().SetClickHdl( rLink );
+    if (&getImpl () && getImpl().mxListBox.is ())
+        getImpl().SetClickHdl( link );
 }
 
-IMPL_CONSTRUCTORS( ListBox, Control, "listbox" );
+
+void ListBox::SetEntryData( sal_uInt16 pos, void* data)
+{
+    GetListBox ()->SetEntryData (pos, data);
+}
+
+void* ListBox::GetEntryData( sal_uInt16 pos) const
+{
+    return GetListBox ()->GetEntryData (pos);
+} 
+
+// SvxLanguageBox
+void ListBox::SetLanguageList( sal_Int16/*list*/, bool/*hasLangNone*/, bool /*langNoneIsLangAll*/, bool /*checkSpellAvail*/)
+{
+}
+
+sal_uInt16 ListBox::InsertLanguage( const LanguageType/*type*/, sal_uInt16/*pos*/)
+{
+    return 0;
+}
+sal_uInt16 ListBox::InsertLanguage( const LanguageType/*type*/, bool/*checkEntry*/, sal_uInt16 /*pos*/)
+{
+    return 0;
+}
+void ListBox::RemoveLanguage( const LanguageType/*type*/)
+{
+}
+void ListBox::SelectLanguage( const LanguageType/*type*/, bool/*select*/)
+{
+}
+LanguageType ListBox::GetSelectLanguage() const
+{
+    return 0;
+}
+bool ListBox::IsLanguageSelected( const LanguageType/*type*/) const
+{
+    return true;
+}
+
+IMPL_CONSTRUCTORS ( ListBox, Control, "listbox" );
 IMPL_GET_IMPL( ListBox );
+IMPL_GET_WINDOW (ListBox);
+
+// Window/Control/List/MultiListBox
+class MultiListBoxImpl : public ListBoxImpl
+{
+public:
+    MultiListBoxImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ListBoxImpl( context, peer, window )
+    {
+    }
+};
+
+IMPL_CONSTRUCTORS_BODY( MultiListBox, ListBox, "multilistbox", GetMultiListBox()->EnableMultiSelection( true ); );
+IMPL_GET_IMPL( MultiListBox );
+IMPL_GET_WINDOW( MultiListBox );
 
 } // namespace layout
diff --git a/toolkit/source/vclcompat/wrapper.cxx b/toolkit/source/vclcompat/wrapper.cxx
index 38db3f4..e8c2b11 100644
--- toolkit/source/vclcompat/wrapper.cxx
+++ toolkit/source/vclcompat/wrapper.cxx
@@ -1,7 +1,7 @@
 /*************************************************************************
  *
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
+ *
  * Copyright 2008 by Sun Microsystems, Inc.
  *
  * OpenOffice.org - a multi-platform office productivity suite
@@ -29,35 +29,41 @@
  *
  ************************************************************************/
 
+#include <tools/rc.h>
+//#define RESOURCE_PUBLISH_PROTECTED 1
+#if RESOURCE_PUBLISH_PROTECTED
+// ugh, override non-helpful proctection
+#define protected public
+#endif /* RESOURCE_PUBLISH_PROTECTED */
+#include <tools/rc.hxx>
+#undef protected
+
+
 #include "wrapper.hxx"
 
 #include <awt/vclxplugin.hxx>
+#include <awt/vclxtabcontrol.hxx>
 #include <com/sun/star/awt/PosSize.hpp>
 #include <com/sun/star/awt/VclWindowPeerAttribute.hpp>
 #include <com/sun/star/awt/WindowAttribute.hpp>
 #include <com/sun/star/awt/XDialog2.hpp>
 #include <com/sun/star/awt/XProgressBar.hpp>
+#include <com/sun/star/awt/XSimpleTabController.hpp>
+#include <com/sun/star/awt/XTabListener.hpp>
 #include <com/sun/star/graphic/XGraphic.hpp>
 #include <comphelper/processfactory.hxx>
-#include <cstdio>
 #include <layout/factory.hxx>
 #include <layout/layoutcore.hxx>
-#include <layout/root.hxx>
 #include <layout/localized-string.hxx>
+#include <layout/root.hxx>
 #include <toolkit/awt/vclxwindow.hxx>
 #include <vcl/ctrl.hxx>
+#include <vcl/dialog.hxx>
 #include <vcl/image.hxx>
+#include <vcl/tabctrl.hxx>
 #include <vcl/tabpage.hxx>
 #include <vcl/window.hxx>
 
- 
-#if 0
-/* FIXME: move to sfx2 or svtools/layout.hxx */
-#include <svtools/itempool.hxx>
-#include <svtools/itemset.hxx>
-#include <svtools/poolitem.hxx>
-#endif
- 
 using namespace ::com::sun::star;
 using rtl::OUString;
 
@@ -105,9 +111,18 @@ public:
         val >>= xRet;
         return xRet;
     }
-    PeerHandle getTopLevel()                 { return mxTopLevel; }
-    void setTopLevel( PeerHandle xToplevel ) { mxTopLevel = xToplevel; }
-    PeerHandle getRoot()                     { return mxRoot; }
+    PeerHandle getTopLevel()
+    {
+        return mxTopLevel;
+    }
+    void setTopLevel( PeerHandle xToplevel )
+    {
+        mxTopLevel = xToplevel;
+    }
+    PeerHandle getRoot()
+    {
+        return mxRoot;
+    }
 };
 
 Context::Context( const char *pPath )
@@ -131,16 +146,16 @@ PeerHandle Context::getToplevel()
 }
 PeerHandle Context::getRoot()
 {
-     return pImpl->getRoot();
+    return pImpl->getRoot();
 }
 
-PeerHandle Context::GetPeerHandle( const char *pId, sal_uInt32 nId ) const
+PeerHandle Context::GetPeerHandle( const char *id, sal_uInt32 nId ) const
 {
     PeerHandle xHandle;
-    xHandle = pImpl->getByName( OUString( pId, strlen( pId ), RTL_TEXTENCODING_UTF8 ) );
+    xHandle = pImpl->getByName( OUString( id, strlen( id ), RTL_TEXTENCODING_UTF8 ) );
     if ( !xHandle.is() )
     {
-        DBG_ERROR1( "Failed to fetch widget '%s'", pId );
+        DBG_ERROR1( "Failed to fetch widget '%s'", id );
     }
 
     if ( nId != 0 )
@@ -151,32 +166,177 @@ PeerHandle Context::GetPeerHandle( const char *pId, sal_uInt32 nId ) const
     return xHandle;
 }
 
-IMPL_GET_IMPL( Control );
+WindowImpl::WindowImpl (Context *context, const PeerHandle &peer, Window *window)
+    : mpWindow (window)
+    , mpCtx (context)
+    , mxWindow (peer, uno::UNO_QUERY)
+    , mxVclPeer (peer, uno::UNO_QUERY)
+    , mvclWindow (0)
+    , bFirstTimeVisible (true)
+{
+}
+
+WindowImpl::~WindowImpl ()
+{
+    if (mpWindow)
+        mpWindow->mpImpl = 0;
+    if (mvclWindow)
+    {
+        VCLXWindow *v = mvclWindow->GetWindowPeer ();
+        v->SetWindow (0);
+        mvclWindow->SetComponentInterface (uno::Reference <awt::XWindowPeer> ());
+        mvclWindow->SetWindowPeer (uno::Reference <awt::XWindowPeer> (), 0);
+        delete mvclWindow;
+        mvclWindow = 0;
+    }
+}
+
+void WindowImpl::wrapperGone ()
+{
+    mvclWindow = 0;
+    mpWindow->mpImpl = 0;
+    mpWindow = 0;
+    mpCtx = 0;
+    if ( mxWindow.is() )
+    {
+        uno::Reference< lang::XComponent > xComp( mxWindow, uno::UNO_QUERY );
+        mxWindow.clear ();
+        if ( xComp.is() )
+            xComp->dispose();
+    }
+}
+
+void SAL_CALL WindowImpl::disposing (lang::EventObject const&)
+    throw (uno::RuntimeException)
+{
+    if (mxWindow.is ())
+        mxWindow.clear ();
+}
+
+uno::Any WindowImpl::getProperty (char const* name)
+{
+    if ( !this || !mxVclPeer.is() )
+        return css::uno::Any();
+    return mxVclPeer->getProperty
+        ( rtl::OUString( name, strlen( name ), RTL_TEXTENCODING_ASCII_US ) );
+}
+
+void WindowImpl::setProperty (char const *name, uno::Any any)
+{
+    if ( !this || !mxVclPeer.is() )
+        return;
+    mxVclPeer->setProperty
+        ( rtl::OUString( name, strlen( name ), RTL_TEXTENCODING_ASCII_US ), any );
+}
+
+void WindowImpl::redraw (bool resize)
+{
+    uno::Reference <awt::XWindow> ref (mxWindow, uno::UNO_QUERY);
+    ::Window* window = VCLXWindow::GetImplementation (ref)->GetWindow ();
+    ::Window* parent = window->GetParent();
+    ::Rectangle r = Rectangle (parent->GetPosPixel (),
+                               parent->GetSizePixel ());
+    parent->Invalidate (r, INVALIDATE_CHILDREN | INVALIDATE_NOCHILDREN );
+    if (resize)
+        parent->SetPosSizePixel (0, 0, 1, 1, awt::PosSize::SIZE);
+    else
+        parent->SetPosSizePixel (0, 0, r.nRight - r.nLeft, r.nBottom - r.nTop,
+                                 awt::PosSize::SIZE);
+}
 
 Window::Window( WindowImpl *pImpl )
     : mpImpl( pImpl )
 {
+    mpImpl->mvclWindow = GetVCLXWindow () ? GetWindow () : 0;
 }
 
 Window::~Window()
 {
     /* likely to be an UNO object - with floating references */
-    mpImpl->wrapperGone();
-    mpImpl = NULL;
+    if (mpImpl)
+        mpImpl->wrapperGone ();
+    mpImpl = 0;
+}
+
+///IMPL_GET_IMPL( Control );
+
+static ControlImpl& null_control_impl = (ControlImpl&)*(ControlImpl*)0;
+
+ControlImpl &Control::getImpl () const
+{
+    if (ControlImpl* c = static_cast<ControlImpl *>(mpImpl))
+        return *c;
+    return null_control_impl;
 }
 
-void Window::SetParent( ::Window *pParent )
+Control::~Control ()
+{
+    SetGetFocusHdl (Link ());
+    SetLoseFocusHdl (Link ());
+}
+
+void Window::setRes (ResId const& res)
+{
+#if RESOURCE_PUBLISH_PROTECTED
+    // Resources are shut-off from use.  Is that really necessary?
+    Resource &r = *GetWindow ();
+    r.GetRes (res);
+#else /* !RESOURCE_PUBLISH_PROTECTED */
+    //We *must* derive.  Is this also really necessary?
+    //Resource r (res);
+
+    // ugh, I wonder which solution is cleaner...
+    class Resource_open_up : public Resource
+    {
+    public:
+        Resource_open_up (ResId const& r)
+            : Resource (r)
+        {
+        }
+        static sal_Int32 GetLongRes (void *p)
+        {
+            return Resource::GetLongRes (p);
+        }
+        void* GetClassRes ()
+        {
+            return Resource::GetClassRes ();
+        }
+        sal_Int32 ReadLongRes ()
+        {
+            return Resource::ReadLongRes ();
+        }
+        UniString ReadStringRes ()
+        {
+            return Resource::ReadStringRes ();
+        }
+    };
+
+    Resource_open_up r (res);
+#endif /* !RESOURCE_PUBLISH_PROTECTED */
+    if (sal_uInt32 help_id = (sal_uInt32)r.GetLongRes (static_cast<char *> (r.GetClassRes ()) + 12))
+        SetHelpId (help_id);
+    sal_uInt32 mask = r.ReadLongRes ();
+    if ( mask & WINDOW_TEXT )
+        SetText( r.ReadStringRes ());
+}
+
+void Window::SetParent( ::Window *parent )
 {
     uno::Reference <awt::XWindow> ref( GetPeer(), uno::UNO_QUERY );
-    ::Window *window = VCLXWindow::GetImplementation( ref )->GetWindow();
-    window->SetParent( pParent );
+    if (VCLXWindow *vcl = VCLXWindow::GetImplementation( ref ))
+        if (::Window *window = vcl->GetWindow())
+            window->SetParent( parent );
 }
 
-void Window::SetParent( Window *pParent )
+void Window::SetParent( Window *parent )
 {
-    uno::Reference <awt::XWindow> parentRef( pParent->GetPeer(), uno::UNO_QUERY );
-    ::Window *parentWindow = VCLXWindow::GetImplementation( parentRef )->GetWindow();
-    SetParent( parentWindow );
+    /* Let's hear it for C++: poor man's dynamic binding.  */
+    parent->ParentSet (this);
+}
+
+void Window::ParentSet (Window *window)
+{
+    window->SetParent (GetWindow ());
 }
 
 Context *Window::getContext()
@@ -184,33 +344,124 @@ Context *Window::getContext()
     return this && mpImpl ? mpImpl->mpCtx : NULL;
 }
 
-PeerHandle Window::GetPeer()
+PeerHandle Window::GetPeer() const
 {
     if ( !mpImpl )
         return PeerHandle();
     return mpImpl->mxWindow;
 }
 
-uno::Reference<awt::XWindow> Window::GetRef()
+uno::Reference<awt::XWindow> Window::GetRef() const
 {
     return uno::Reference <awt::XWindow> ( GetPeer(), uno::UNO_QUERY );
 }
 
-VCLXWindow* Window::GetVCLXWindow()
+VCLXWindow* Window::GetVCLXWindow() const
 {
     return VCLXWindow::GetImplementation( GetRef() );
 }
 
-::Window* Window::GetWindow()
+::Window* Window::GetWindow() const
 {
     return GetVCLXWindow()->GetWindow();
 }
 
-::Window* Window::GetParent()
+::Window* Window::GetParent() const
 {
     return GetWindow()->GetParent();
 }
 
+void Window::SetHelpId( sal_uIntPtr id )
+{
+    GetWindow()->SetHelpId( id );
+}
+
+sal_uIntPtr Window::GetHelpId() const
+{
+    return GetWindow()->GetHelpId();
+}
+
+void Window::SetSmartHelpId( SmartId const& id, SmartIdUpdateMode mode )
+{
+    GetWindow()->SetSmartHelpId( id, mode );
+}
+
+SmartId Window::GetSmartHelpId() const
+{
+    return GetWindow()->GetSmartHelpId();
+}
+
+void Window::EnterWait ()
+{
+    GetWindow()->EnterWait ();
+}
+void Window::LeaveWait ()
+{
+    GetWindow()->LeaveWait ();
+}
+bool Window::IsWait () const
+{
+    return GetWindow()->IsWait ();
+}
+
+bool Window::IsVisible () const
+{
+    if (GetWindow ())
+        return GetWindow()->IsVisible ();
+    return false;
+}
+
+bool Window::HasChildPathFocus (bool systemWindow) const
+{
+    return GetWindow()->HasChildPathFocus (systemWindow);
+}
+
+void Window::SetPosPixel (Point const&)
+{
+}
+
+Point Window::GetPosPixel () const
+{
+    return Point ();
+}
+
+void Window::SetSizePixel (Size const&)
+{
+}
+
+Size Window::GetSizePixel () const
+{
+    return Size ();
+}
+
+// void Window::Enable (bool enable, bool child);
+// {
+//     GetWindow ()->Enable (enable, child);
+// }
+
+// void Window::Disable (bool child)
+// {
+//     GetWindow ()->Disable (child);
+// }
+
+bool Window::IsEnabled () const
+{
+    return GetWindow ()->IsEnabled ();
+//     if (getImpl().mxWindow.is ())
+//         return getImpl ().mxWindow->isEnabled ();
+//     return false;
+}
+
+void Window::EnableInput (bool enable, bool child)
+{
+    GetWindow ()->EnableInput (enable, child);
+}
+
+bool Window::IsInputEnabled () const
+{
+    return GetWindow ()->IsInputEnabled ();
+}
+
 struct ToolkitVclPropsMap
 {
     WinBits vclStyle;
@@ -341,7 +592,7 @@ uno::Reference< awt::XToolkit > getToolkit()
     return xToolkit;
 }
 
-PeerHandle Window::CreatePeer( Window *pParent, WinBits nStyle, const char *pName)
+PeerHandle Window::CreatePeer( Window *parent, WinBits nStyle, const char *pName)
 {
 
     long nWinAttrbs = 0;
@@ -349,7 +600,7 @@ PeerHandle Window::CreatePeer( Window *pParent, WinBits nStyle, const char *pNam
         if ( nStyle & toolkitVclPropsMap[ i ].vclStyle )
             nWinAttrbs |= toolkitVclPropsMap[ i ].initAttr;
 
-    return layoutimpl::createWidget( getToolkit(), pParent->GetPeer(),
+    return layoutimpl::createWidget( getToolkit(), parent->GetPeer(),
                                      OUString::createFromAscii( pName ), nWinAttrbs );
 }
 
@@ -360,11 +611,16 @@ void Window::Enable( bool bEnable )
     getImpl().mxWindow->setEnable( bEnable );
 }
 
-void Window::Show( BOOL bVisible )
+void Window::Show( bool bVisible )
 {
     if ( !getImpl().mxWindow.is() )
         return;
     getImpl().mxWindow->setVisible( bVisible );
+    if (GetParent() && bVisible && getImpl().bFirstTimeVisible)
+    {
+        getImpl().redraw ();
+        getImpl().bFirstTimeVisible = false;
+    }
 }
 
 void Window::GrabFocus()
@@ -374,158 +630,650 @@ void Window::GrabFocus()
     getImpl().mxWindow->setFocus();
 }
 
+void Window::SetUpdateMode(bool mode)
+{
+    GetWindow()->SetUpdateMode( mode );
+}
+
+void Window::SetPointer( Pointer const& pointer )
+{
+    GetWindow()->SetPointer( pointer );
+}
+
+Pointer const& Window::GetPointer() const
+{
+    return GetWindow()->GetPointer();
+}
+
+void Window::SetText( String const& str )
+{
+    GetWindow()->SetText( str );
+}
+
+String Window::GetText() const
+{
+    return GetWindow()->GetText();
+}
+
+sal_Int32 Window::GetCtrlTextWidth (String const&) const
+{
+    return 0;
+}
+
+sal_Int32 Window::GetTextHeight () const
+{
+    return 0;
+}
+
+Size Window::LogicToPixel( Size const& size, MapMode const&) const
+{
+    return size;
+}
+
+ControlImpl::ControlImpl (Context *context, const PeerHandle &peer, Window *window)
+    : WindowImpl( context, peer, window )
+{
+}
+
+ControlImpl::~ControlImpl ()
+{
+    if ((!!mGetFocusHdl || !!mLoseFocusHdl) && mxWindow.is ())
+        /* Disposing will be done @ VCLXWindow::dispose () maFocusListeners.disposeAndClear()
+           don't do it twice */
+        mxWindow.clear ();
+}
+
+void ControlImpl::SetGetFocusHdl (Link const& link)
+{
+    if (!mLoseFocusHdl || !link)
+        UpdateListening (link);
+    mGetFocusHdl = link;
+}
+
+Link& ControlImpl::GetGetFocusHdl ()
+{
+    return mGetFocusHdl;
+}
+
+void ControlImpl::SetLoseFocusHdl (Link const& link)
+{
+    if (!mGetFocusHdl || !link)
+        UpdateListening (link);
+    mLoseFocusHdl = link;
+}
+
+Link& ControlImpl::GetLoseFocusHdl ()
+{
+    return mGetFocusHdl;
+}
+
+void ControlImpl::UpdateListening (Link const& link)
+{
+    if (!link && (!!mGetFocusHdl || !!mLoseFocusHdl)
+        && (!mGetFocusHdl || !mLoseFocusHdl))
+        mxWindow->removeFocusListener (this);
+    else if (!!link && !mGetFocusHdl && !mLoseFocusHdl)
+        mxWindow->addFocusListener (this);
+}
+
+void SAL_CALL ControlImpl::disposing (lang::EventObject const&)
+    throw (uno::RuntimeException)
+{
+///    mxWindow.clear ();
+}
+
+void ControlImpl::SAL_CALL focusGained (awt::FocusEvent const&)
+    throw (uno::RuntimeException)
+{
+    mGetFocusHdl.Call (mpWindow);
+}
+
+void ControlImpl::SAL_CALL focusLost (awt::FocusEvent const&)
+    throw (uno::RuntimeException)
+{
+    mLoseFocusHdl.Call (mpWindow);
+}
+
+Link& Control::GetGetFocusHdl ()
+{
+    return getImpl ().GetGetFocusHdl ();
+}
+
+void Control::SetGetFocusHdl (Link const& link)
+{
+    if (&getImpl () && getImpl().mxWindow.is ())
+        getImpl ().SetGetFocusHdl (link);
+}
+
+Link& Control::GetLoseFocusHdl ()
+{
+    return getImpl ().GetLoseFocusHdl ();
+}
+
+void Control::SetLoseFocusHdl (Link const& link)
+{
+    if (&getImpl () && getImpl().mxWindow.is ())
+        getImpl ().SetLoseFocusHdl (link);
+}
+
 class DialogImpl : public WindowImpl
 {
 public:
     uno::Reference< awt::XDialog2 > mxDialog;
-    DialogImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : WindowImpl( pCtx, xPeer, pWindow )
-        , mxDialog( xPeer, uno::UNO_QUERY )
-    {
-    }
+    DialogImpl( Context *context, PeerHandle const &peer, Window *window );
 };
 
-IMPL_GET_IMPL( Dialog )
+DialogImpl::DialogImpl( Context *context, const PeerHandle &peer, Window *window )
+    : WindowImpl( context, peer, window )
+    , mxDialog( peer, uno::UNO_QUERY )
+{
+}
 
-Dialog::Dialog( Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId )
-    : Context( pXMLPath )
-    , Window( new DialogImpl( this, Context::GetPeerHandle( pId, nId ), this ) )
+Dialog::Dialog( Window *parent, const char *xml_file, const char *id, sal_uInt32 nId )
+    : Context( xml_file )
+    , Window( new DialogImpl( this, Context::GetPeerHandle( id, nId ), this ) )
+    , bConstruct (true)
 {
-    if ( pParent )
-        SetParent( pParent );
+    if ( parent )
+        SetParent( parent );
 }
 
-Dialog::Dialog( ::Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId )
-    : Context( pXMLPath )
-    , Window( new DialogImpl( this, Context::GetPeerHandle( pId, nId ), this ) )
+Dialog::Dialog( ::Window *parent, const char *xml_file, const char *id, sal_uInt32 nId )
+    : Context( xml_file )
+    , Window( new DialogImpl( this, Context::GetPeerHandle( id, nId ), this ) )
 {
-    if ( pParent )
-        SetParent( pParent );
+    if ( parent )
+        SetParent( parent );
 }
 
+Dialog::~Dialog ()
+{
+}
+
+IMPL_GET_WINDOW (Dialog);
+IMPL_GET_IMPL (Dialog);
+
+#define MX_DIALOG if (getImpl ().mxDialog.is ()) getImpl ().mxDialog
+#define RETURN_MX_DIALOG if (getImpl ().mxDialog.is ()) return getImpl ().mxDialog
+
 short Dialog::Execute()
 {
-    if ( !getImpl().mxDialog.is() )
-        return -1;
-    return getImpl().mxDialog->execute();
+    RETURN_MX_DIALOG->execute ();
+    return -1;
 }
 
-void Dialog::EndDialog( long nResult )
+void Dialog::EndDialog( long result )
 {
-    if ( !getImpl().mxDialog.is() )
-        return;
-    getImpl().mxDialog->endDialog( nResult );
+    MX_DIALOG->endDialog (result);
 }
 
-void Dialog::SetText( String const& rStr )
+void Dialog::SetText( String const& str )
 {
-    if ( !getImpl().mxDialog.is() )
-        return;
-    getImpl().mxDialog->setTitle( rStr );
+    SetTitle (str);
 }
 
-class TabPageImpl : public WindowImpl
+void Dialog::SetTitle( String const& str )
 {
-public:
-    uno::Reference< awt::XWindow > mxTabPage;
-    TabPageImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : WindowImpl( pCtx, xPeer, pWindow )
-        , mxTabPage( xPeer, uno::UNO_QUERY )
-    {
-    }
-};
+    MX_DIALOG->setTitle (str);
+}
 
-::Window* TabPage::global_parent = 0;
+bool Dialog::Close ()
+{
+    EndDialog (false);
+    return true;
+}
 
-IMPL_GET_IMPL( TabPage )
+long Dialog::Notify (NotifyEvent& event)
+{
+    return GetDialog ()->Notify (event);
+}
 
-TabPage::TabPage( Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId, SfxItemSet const* set )
-    : Context( pXMLPath )
-    , Window( new TabPageImpl( this, Context::GetPeerHandle( pId, nId ), this ) )
-    , bHasExchangeSupport( false )
-    , pSet( set )
+void Dialog::Initialize (SfxChildWinInfo*)
 {
-    if ( pParent )
-        SetParent( pParent );
 }
 
-TabPage::TabPage( ::Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId, SfxItemSet const* set )
-    : Context( pXMLPath )
-    , Window( new TabPageImpl( this, Context::GetPeerHandle( pId, nId ), this ) )
-    , bHasExchangeSupport( false )
-    , pSet( set )
+#define MESSAGE_BOX_MEMBER_INIT\
+    Dialog (parent, xml_file, id)\
+        , imageError (this, "FI_ERROR")\
+        , imageInfo (this, "FI_INFO")\
+        , imageQuery (this, "FI_QUERY")\
+        , imageWarning (this, "FI_WARNING")\
+        , messageText (this, "FT_MESSAGE")\
+        , cancelButton (this, "BTN_CANCEL")\
+        , helpButton (this, "BTN_HELP")\
+        , ignoreButton (this, "BTN_IGNORE")\
+        , noButton (this, "BTN_NO")\
+        , retryButton (this, "BTN_RETRY")\
+        , yesButton (this, "BTN_YES")
+
+MessageBox::MessageBox (::Window *parent, char const* message,
+                        char const* yes, char const* no, sal_uIntPtr help_id,
+                        char const* xml_file, char const* id)
+    : MESSAGE_BOX_MEMBER_INIT
+{
+    ignoreButton.Hide ();
+    retryButton.Hide ();
+    init (message, yes, no, help_id);
+}
+
+MessageBox::MessageBox (::Window *parent, OUString const& message,
+                        OUString yes, OUString no, sal_uIntPtr help_id,
+                        char const* xml_file, char const* id)
+    : MESSAGE_BOX_MEMBER_INIT
 {
-    if ( pParent )
-        SetParent( pParent );
+    ignoreButton.Hide ();
+    retryButton.Hide ();
+    init (message, yes, no, help_id);
 }
 
-TabPage::~TabPage()
+#if !defined (__GNUC__)
+#define __PRETTY_FUNCTION__ __FUNCTION__
+#endif /* !__GNUC__ */
+
+MessageBox::MessageBox (::Window *parent, WinBits bits, char const* message,
+                        char const* yes, char const* no, sal_uIntPtr help_id,
+                        char const* xml_file, char const* id)
+    : MESSAGE_BOX_MEMBER_INIT
 {
-    delete GetTabPage();
+    // HIG suggests using verbs instead of yes/no/retry etc.
+    // This constructor provides client-code compatibility: Client code should be fixed.
+    OSL_TRACE ("%s: warning, deprecated vcl/Messbox compatibility", __PRETTY_FUNCTION__);
+    bits_init (bits, OUString::createFromAscii (message), OUString::createFromAscii (yes), OUString::createFromAscii (no), help_id);
 }
 
-IMPL_GET_WINDOW( TabPage );
+MessageBox::MessageBox (::Window *parent, WinBits bits, OUString const& message,
+                        OUString yes, OUString no, sal_uIntPtr help_id,
+                        char const* xml_file, char const* id)
+    : MESSAGE_BOX_MEMBER_INIT
+{
+    // HIG suggests using verbs instead of yes/no/retry etc.
+    // This constructor provides client-code compatibility: Client code should be fixed.
+    OSL_TRACE ("%s: warning, deprecated vcl/Messbox compatibility", __PRETTY_FUNCTION__);
+    bits_init (bits, message, yes, no, help_id);
+}
 
-void TabPage::ActivatePage()
+void MessageBox::bits_init (WinBits bits, OUString const& message,
+                            OUString yes, OUString no, sal_uIntPtr help_id)
+{
+	if ( bits & ( WB_OK_CANCEL | WB_OK ))
+        yes = Button::GetStandardText ( BUTTON_OK );
+	if ( bits & (WB_YES_NO | WB_YES_NO_CANCEL ))
+	{
+        yes = Button::GetStandardText ( BUTTON_YES );
+        no =  Button::GetStandardText ( BUTTON_NO );
+	}
+    if (! (bits & (WB_RETRY_CANCEL | WB_YES_NO_CANCEL | WB_ABORT_RETRY_IGNORE )))
+        cancelButton.Hide ();
+    if (! (bits & (WB_RETRY_CANCEL | WB_ABORT_RETRY_IGNORE)))
+        retryButton.Hide ();
+    if ( bits & WB_ABORT_RETRY_IGNORE )
+        cancelButton.SetText ( Button::GetStandardText (BUTTON_ABORT));
+    else
+        ignoreButton.Hide ();
+	if ( !(bits & ( WB_OK | WB_OK_CANCEL | WB_YES_NO | WB_YES_NO_CANCEL)))
+        yesButton.Hide ();
+	if ( !(bits & ( WB_YES_NO | WB_YES_NO_CANCEL)))
+        noButton.Hide ();
+
+    init (message, yes, no, help_id);
+}
+
+void MessageBox::init (char const* message, char const* yes, char const* no, sal_uIntPtr help_id)
 {
+    init ( OUString::createFromAscii (message), OUString::createFromAscii (yes), OUString::createFromAscii (no), help_id);
 }
 
-void TabPage::DeactivatePage()
+void MessageBox::init (OUString const& message, OUString const& yes, OUString const& no, sal_uIntPtr help_id)
+{
+    imageError.Hide ();
+    imageInfo.Hide ();
+    imageQuery.Hide ();
+    imageWarning.Hide ();
+    if (message.getLength ())
+        messageText.SetText (message);
+    if (yes.getLength ())
+    {
+        yesButton.SetText (yes);
+        if (yes != OUString (Button::GetStandardText (BUTTON_OK))
+            && yes != OUString (Button::GetStandardText (BUTTON_YES)))
+            SetTitle (yes);
+        if (no.getLength ())
+            noButton.SetText (no);
+        else
+            noButton.Hide ();
+    }
+    if (help_id)
+        SetHelpId (help_id);
+    else
+        helpButton.Hide ();
+}
+
+#undef MESSAGE_BOX_IMPL
+#define MESSAGE_BOX_IMPL(Name)\
+    Name##Box::Name##Box (::Window *parent, char const* message,\
+                          char const* yes, char const* no, sal_uIntPtr help_id,\
+                          char const* xml_file, char const* id)\
+    : MessageBox (parent, message, yes, no, help_id, xml_file, id)\
+    {\
+        image##Name.Show ();\
+    }\
+    Name##Box::Name##Box (::Window *parent, OUString const& message,\
+                          OUString yes, OUString no, sal_uIntPtr help_id,\
+                          char const* xml_file, char const* id)\
+    : MessageBox (parent, message, yes, no, help_id, xml_file, id)\
+    {\
+        image##Name.Show ();\
+    }\
+    Name##Box::Name##Box (::Window *parent, WinBits bits, char const* message,\
+                          char const* yes, char const* no, sal_uIntPtr help_id,\
+                          char const* xml_file, char const* id)\
+    : MessageBox (parent, bits, message, yes, no, help_id, xml_file, id)\
+    {\
+        image##Name.Show ();\
+    }\
+    Name##Box::Name##Box (::Window *parent, WinBits bits, OUString const& message,\
+                          OUString yes, OUString no, sal_uIntPtr help_id,\
+                          char const* xml_file, char const* id)\
+    : MessageBox (parent, bits, message, yes, no, help_id, xml_file, id)\
+    {\
+        image##Name.Show ();\
+    }
+
+MESSAGE_BOX_IMPL (Error);
+MESSAGE_BOX_IMPL (Info);
+MESSAGE_BOX_IMPL (Query);
+MESSAGE_BOX_IMPL (Warning);
+
+class TabControlImpl
+    : public ControlImpl
+    , public ::cppu::WeakImplHelper1 <awt::XTabListener>
+{
+    Link mActivatePageHdl;
+    Link mDeactivatePageHdl;
+
+public:
+    uno::Reference <awt::XSimpleTabController> mxTabControl;
+    TabControlImpl (Context *context, const PeerHandle &peer, Window *window)
+        : ControlImpl (context, peer, window)
+        ,  mxTabControl (peer, uno::UNO_QUERY)
+    {
+    }
+
+    virtual void SAL_CALL disposing (lang::EventObject const& e)
+        throw (uno::RuntimeException)
+    {
+        ControlImpl::disposing (e);
+        mxTabControl.clear ();
+    }
+
+    Link& GetActivatePageHdl ()
+    {
+        return mActivatePageHdl;
+    }
+
+    void SetActivatePageHdl (Link const& link)
+    {
+        if (!mDeactivatePageHdl || !link)
+            UpdateListening (link);
+        mActivatePageHdl = link;
+    }
+
+    Link& GetDeactivatePageHdl ()
+    {
+        return mDeactivatePageHdl;
+    }
+
+    void SetDeactivatePageHdl (Link const& link)
+    {
+        if (!mActivatePageHdl || !link)
+            UpdateListening (link);
+        mDeactivatePageHdl = link;
+    }
+
+    void UpdateListening (Link const& link)
+    {
+        if (!link && (!!mActivatePageHdl || !!mDeactivatePageHdl))
+            mxTabControl->removeTabListener (this);
+        else if (!!link && !mActivatePageHdl && !mDeactivatePageHdl)
+            mxTabControl->addTabListener (this);
+    }
+
+    void SAL_CALL activated (sal_Int32)
+        throw (uno::RuntimeException)
+    {
+        mActivatePageHdl.Call (mpWindow);
+    }
+
+    void SAL_CALL deactivated (sal_Int32)
+        throw (uno::RuntimeException)
+    {
+        mDeactivatePageHdl.Call (mpWindow);
+    }
+
+    void SAL_CALL inserted (sal_Int32)
+        throw (uno::RuntimeException)
+    {
+    }
+
+    void SAL_CALL removed (sal_Int32)
+        throw (uno::RuntimeException)
+    {
+    }
+
+    void SAL_CALL changed (sal_Int32, uno::Sequence <beans::NamedValue> const&)
+        throw (uno::RuntimeException)
+    {
+    }
+};
+
+IMPL_GET_WINDOW (TabControl);
+IMPL_GET_LAYOUT_VCLXWINDOW (TabControl);
+
+#define MX_TABCONTROL if (getImpl ().mxTabControl.is ()) getImpl ().mxTabControl
+#define RETURN_MX_TABCONTROL if (getImpl ().mxTabControl.is ()) return getImpl ().mxTabControl
+
+TabControl::~TabControl ()
 {
+    SetActivatePageHdl (Link ());
+    SetDeactivatePageHdl (Link ());
 }
 
+void TabControl::InsertPage (sal_uInt16 id, String const& title, sal_uInt16 pos)
+{
+    (void) pos;
+//    GetTabControl ()->InsertPage (id, title, pos);
+//    GetTabControl ()->SetTabPage (id, new ::TabPage (GetTabControl ()));
+
+    MX_TABCONTROL->insertTab ();
+    SetCurPageId (id);
+
+#if 1 // colour me loc productive -- NOT
+#define ADD_PROP( seq, i, name, val )\
+    { \
+        beans::NamedValue value; \
+        value.Name = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( name ) ); \
+        value.Value = uno::makeAny( val ); \
+        seq[i] = value; \
+    }
+
+    uno::Sequence< beans::NamedValue > seq (1);
+    ADD_PROP ( seq, 0, "Title", OUString (title) );
+    MX_TABCONTROL->setTabProps (id, seq);
+#else
+    GetTabPage (id)->SetText (title);
+#endif
+
 #if 0
-SfxTabPage::SfxTabPage( Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId, SfxItemSet const* set )
-    : TabPage( pParent, pXMLPath, pId, nId )
-    , bHasExchangeSupport( false )
-    , pSet( set )
+    /// This so seems the right solution, but it makes the buttons of the
+    /// tabdialog move up
+    
+    ::TabPage *page = GetTabPage (id);
+    if (Window *w = dynamic_cast <Window*> (page))
+    {
+        w->SetParent (this);
+        //GetVCLXTabControl ()->Box_Base::addChild (uno::Reference <awt::XLayoutConstrains> (w->GetPeer (), uno::UNO_QUERY));
+        //GetVCLXTabControl ()->Box_Base::AddChild (uno::Reference <awt::XLayoutConstrains> (w->GetPeer (), uno::UNO_QUERY));
+        //GetVCLXTabControl ()->AddChild (w);
+        //GetVCLXTabControl ()->AddChild (uno::Reference <awt::XLayoutConstrains> (w->GetPeer (), uno::UNO_QUERY));
+        //uno::Reference <uno::XInterface> x (page->GetWindowPeer());
+        //GetVCLXTabControl ()->AddChild (uno::Reference <awt::XLayoutConstrains> (page->::Window::GetWindowPeer (), uno::UNO_QUERY));
+        //GetVCLXTabControl ()->AddChild (uno::Reference <awt::XLayoutConstrains> (page->GetComponentInterface (), uno::UNO_QUERY));
+    }
+    getImpl ().redraw ();
+#endif
+}
+void TabControl::RemovePage (sal_uInt16 id)
+{
+    GetTabControl ()->RemovePage (id);
+}
+sal_uInt16 TabControl::GetPageCount () const
+{
+    return GetTabControl ()->GetPageCount ();
+}
+sal_uInt16 TabControl::GetPageId (sal_uInt16 pos) const
+{
+    return GetTabControl ()->GetPageId (pos);
+}
+sal_uInt16 TabControl::GetPagePos (sal_uInt16 id) const
+{
+    getImpl ().redraw ();
+    return GetTabControl ()->GetPagePos (id);
+}
+void TabControl::SetCurPageId (sal_uInt16 id)
 {
+    getImpl ().redraw ();
+    GetTabControl ()->SetCurPageId (id);
 }
+sal_uInt16 TabControl::GetCurPageId () const
+{
+    return GetTabControl ()->GetCurPageId ();
+}
+void TabControl::SetTabPage (sal_uInt16 id, ::TabPage* page)
+{
+    GetTabControl ()->SetTabPage (id, page);
 
-SfxTabPage::SfxTabPage( ::Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId, SfxItemSet const* set )
-    : TabPage( pParent, pXMLPath, pId, nId )
+#if 0
+    /// This so seems the right solution, but it makes the buttons of the
+    /// tabdialog move up
+    if (Window *w = dynamic_cast <Window*> (page))
+    {
+        w->SetParent (this);
+        //GetVCLXTabControl ()->Box_Base::addChild (uno::Reference <awt::XLayoutConstrains> (w->GetPeer (), uno::UNO_QUERY));
+        //GetVCLXTabControl ()->Box_Base::AddChild (uno::Reference <awt::XLayoutConstrains> (w->GetPeer (), uno::UNO_QUERY));
+        //GetVCLXTabControl ()->AddChild (w);
+        //GetVCLXTabControl ()->AddChild (uno::Reference <awt::XLayoutConstrains> (w->GetPeer (), uno::UNO_QUERY));
+        //GetVCLXTabControl ()->AddChild (uno::Reference <awt::XLayoutConstrains> (page->GetWindowPeer (), uno::UNO_QUERY));
+        //GetVCLXTabControl ()->AddChild (uno::Reference <awt::XLayoutConstrains> (page->GetComponentInterface (), uno::UNO_QUERY));
+    }
+#endif
+    getImpl ().redraw ();
+}
+::TabPage* TabControl::GetTabPage (sal_uInt16 id) const
+{
+    return GetTabControl ()->GetTabPage (id);
+}
+void TabControl::SetActivatePageHdl (Link const& link)
+{
+    if (&getImpl () && getImpl().mxTabControl.is ())
+        getImpl ().SetActivatePageHdl (link);
+}
+Link& TabControl::GetActivatePageHdl () const
+{
+    return getImpl ().GetActivatePageHdl ();
+}
+void TabControl::SetDeactivatePageHdl (Link const& link)
+{
+    if (&getImpl () && getImpl().mxTabControl.is ())
+        getImpl ().SetDeactivatePageHdl (link);
+}
+Link& TabControl::GetDeactivatePageHdl () const
+{
+    return getImpl ().GetDeactivatePageHdl ();
+}
+void TabControl::SetTabPageSizePixel (Size const& size)
 {
+    GetTabControl ()->SetTabPageSizePixel (size);
+//    GetParent()->SetSizePixel (size);
+//    GetWindow()->SetSizePixel (size);
+    //GetVCLXTabControl->SetTabSize (size);
+}
+Size TabControl::GetTabPageSizePixel () const
+{
+#if 0
+    //return GetTabControl ()->GetTabPageSizePixel ();
+    static size_t const tab_page_first_index = 1;
+    for (size_t i = 0; i < GetPageCount (); i++)
+    {
+        ::TabPage *p = GetTabPage (i + tab_page_first_index);
+        //if (dynamic_cast<Windowt*> (p))
+        if (i) // URG
+            return p->GetOptimalSize (WINDOWSIZE_MINIMUM);
+    }
+#endif
+    return GetTabControl ()->GetTabPageSizePixel ();
 }
 
-/* FIXME: static method, full c&p from sfx2/source/dialog/tabdlg.cxx */
-//const SfxPoolItem* TabPage::GetItem( const SfxItemSet& rSet, USHORT nSlot )
-const SfxPoolItem* SfxTabPage::GetItem( const SfxItemSet& rSet, USHORT nSlot )
+IMPL_CONSTRUCTORS (TabControl, Control, "tabcontrol");
+IMPL_GET_IMPL (TabControl);
 
+class TabPageImpl : public WindowImpl
 {
-	const SfxItemPool* pPool = rSet.GetPool();
-	USHORT nWh = pPool->GetWhich( nSlot );
-	const SfxPoolItem* pItem = 0;
-#ifdef DEBUG
-	SfxItemState eState;
-    eState =
-#endif
-			rSet.GetItemState( nWh, TRUE, &pItem );  // -Wall required??
+public:
+    uno::Reference< awt::XWindow > mxTabPage;
+    TabPageImpl( Context *context, const PeerHandle &peer, Window *window )
+        : WindowImpl( context, peer, window )
+        , mxTabPage( peer, uno::UNO_QUERY )
+    {
+    }
+};
+
+::Window* TabPage::global_parent = 0;
+TabControl* TabPage::global_tabcontrol = 0;
 
-	if ( !pItem && nWh != nSlot )
-		pItem = &pPool->GetDefaultItem( nWh );
-	return pItem;
+IMPL_GET_IMPL( TabPage );
+
+TabPage::TabPage( Window *parent, const char *xml_file, const char *id, sal_uInt32 nId)
+    : Context( xml_file )
+    , Window( new TabPageImpl( this, Context::GetPeerHandle( id, nId ), this ) )
+{
+    if ( parent )
+        SetParent( parent );
 }
-#else 
 
-#define SfxTabPage TabPage
+TabPage::TabPage( ::Window *parent, const char *xml_file, const char *id, sal_uInt32 nId)
+    : Context( xml_file )
+    , Window( new TabPageImpl( this, Context::GetPeerHandle( id, nId ), this ) )
+{
+    if ( parent )
+        SetParent( parent );
+}
 
-#endif
+TabPage::~TabPage()
+{
+    delete GetTabPage();
+}
+
+IMPL_GET_WINDOW( TabPage );
 
-void SfxTabPage::Reset( SfxItemSet const& )
+void TabPage::ActivatePage()
+{
+}
+
+void TabPage::DeactivatePage()
 {
 }
 
 class FixedLineImpl : public ControlImpl
 {
 public:
-    FixedLineImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ControlImpl( pCtx, xPeer, pWindow )
+    FixedLineImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ControlImpl( context, peer, window )
     {
     }
 };
 
 IMPL_CONSTRUCTORS( FixedLine, Control, "hfixedline" );
-IMPL_GET_IMPL( FixedLine )
+IMPL_GET_IMPL( FixedLine );
 
 bool FixedLine::IsEnabled()
 {
@@ -537,21 +1285,35 @@ class FixedTextImpl : public ControlImpl
 {
 public:
     uno::Reference< awt::XFixedText > mxFixedText;
-    FixedTextImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ControlImpl( pCtx, xPeer, pWindow )
-        , mxFixedText( xPeer, uno::UNO_QUERY )
+    FixedTextImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ControlImpl( context, peer, window )
+        , mxFixedText( peer, uno::UNO_QUERY )
     {
     }
 
-    virtual void SAL_CALL disposing( const css::lang::EventObject& /* Source */ )
-        throw (css::uno::RuntimeException)
-    {
-        mxFixedText.clear();
-    }
+    ~FixedTextImpl ();
+
+    virtual void SAL_CALL disposing( lang::EventObject const& e )
+        throw (uno::RuntimeException);
 };
 
+FixedTextImpl::~FixedTextImpl ()
+{
+}
+
+void SAL_CALL FixedTextImpl::disposing( lang::EventObject const& e )
+    throw (uno::RuntimeException)
+{
+    ControlImpl::disposing (e);
+    mxFixedText.clear ();
+}
+
+FixedText::~FixedText ()
+{
+}
+
 IMPL_CONSTRUCTORS( FixedText, Control, "fixedtext" );
-IMPL_GET_IMPL( FixedText )
+IMPL_GET_IMPL( FixedText );
 
 void FixedText::SetText( String const& rStr )
 {
@@ -563,8 +1325,8 @@ void FixedText::SetText( String const& rStr )
 class FixedInfoImpl : public FixedTextImpl
 {
 public:
-    FixedInfoImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : FixedTextImpl( pCtx, xPeer, pWindow )
+    FixedInfoImpl( Context *context, const PeerHandle &peer, Window *window )
+        : FixedTextImpl( context, peer, window )
     {
     }
 };
@@ -576,16 +1338,17 @@ class ProgressBarImpl : public ControlImpl
 {
 public:
     uno::Reference< awt::XProgressBar > mxProgressBar;
-    ProgressBarImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : ControlImpl( pCtx, xPeer, pWindow )
-        , mxProgressBar( xPeer, uno::UNO_QUERY )
+    ProgressBarImpl( Context *context, const PeerHandle &peer, Window *window )
+        : ControlImpl( context, peer, window )
+        , mxProgressBar( peer, uno::UNO_QUERY )
     {
     }
 
-    virtual void SAL_CALL disposing( const css::lang::EventObject& /* Source */ )
-        throw (css::uno::RuntimeException)
+    virtual void SAL_CALL disposing( lang::EventObject const& e )
+        throw (uno::RuntimeException)
     {
-        mxProgressBar.clear();
+        ControlImpl::disposing (e);
+        mxProgressBar.clear ();
     }
 };
 
@@ -594,11 +1357,11 @@ class FixedImageImpl: public ControlImpl
 {
 public:
     uno::Reference< graphic::XGraphic > mxGraphic;
-    FixedImageImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow)
+    FixedImageImpl( Context *context, const PeerHandle &peer, Window *window)
 //                    const char *pName )
-        : ControlImpl( pCtx, xPeer, pWindow )
+        : ControlImpl( context, peer, window )
           //, mxGraphic( layoutimpl::loadGraphic( pName ) )
-        , mxGraphic( xPeer, uno::UNO_QUERY )
+        , mxGraphic( peer, uno::UNO_QUERY )
     {
         if ( !mxGraphic.is() )
         {
@@ -620,12 +1383,12 @@ void FixedImage::setImage( ::Image const& i )
     if ( !getImpl().mxGraphic.is() )
         return;
     //FIXME: hack moved to proplist
-    //getImpl().mxGraphic = 
+    //getImpl().mxGraphic =
 }
 
 #if 0
 
-    FixedImage::FixedImage( const char *pName )
+FixedImage::FixedImage( const char *pName )
     : pImpl( new FixedImageImpl( pName ) )
 {
 }
@@ -637,31 +1400,18 @@ FixedImage::~FixedImage()
 
 #endif
 
-    
-IMPL_CONSTRUCTORS( ProgressBar, Control, "ProgressBar" );
-#if 0
-ProgressBar::ProgressBar( Context *pCtx, const char *pId, sal_uInt32 nId )
-    : Control( new ProgressBarImpl( pCtx, pCtx->GetPeerHandle( pId, nId ), this ) )
-{
-}
-ProgressBar::ProgressBar( Window *pParent, WinBits nBits)
-//    : Control( new ProgressBarImpl( pParent->getContext(), Window::CreatePeer( pParent, nBits, "ProgressBar" ), this ) )
-    : Control( new ProgressBarImpl( pParent->getContext(), Window::CreatePeer( pParent, nBits, "progressbar" ), this ) )
-{
-}
-#endif
 
+IMPL_CONSTRUCTORS( ProgressBar, Control, "ProgressBar" );
 IMPL_GET_IMPL( ProgressBar );
 
-
-void ProgressBar::SetForegroundColor( css::util::Color color )
+void ProgressBar::SetForegroundColor( util::Color color )
 {
     if ( !getImpl().mxProgressBar.is() )
         return;
     getImpl().mxProgressBar->setForegroundColor( color );
 }
 
-void ProgressBar::SetBackgroundColor( css::util::Color color )
+void ProgressBar::SetBackgroundColor( util::Color color )
 {
     if ( !getImpl().mxProgressBar.is() )
         return;
@@ -694,8 +1444,8 @@ class PluginImpl: public ControlImpl
 public:
     ::Control *mpPlugin;
 
-    PluginImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow, :: Control *plugin )
-        : ControlImpl( pCtx, xPeer, pWindow )
+    PluginImpl( Context *context, const PeerHandle &peer, Window *window, :: Control *plugin )
+        : ControlImpl( context, peer, window )
         , mpPlugin( plugin )
     {
         uno::Reference <awt::XWindow> ref( mxWindow, uno::UNO_QUERY );
@@ -706,14 +1456,14 @@ public:
         vcl->SetPlugin( mpPlugin );
         plugin->SetParent( parent );
         plugin->SetStyle( vcl->mStyle );
-        plugin->SetCreatedWithToolkit( TRUE );
+        plugin->SetCreatedWithToolkit( true );
         plugin->SetComponentInterface( vcl );
         plugin->Show();
     }
 };
 
-Plugin::Plugin( Context *pCtx, char const *pId, ::Control *plugin )
-    : Control( new PluginImpl( pCtx, pCtx->GetPeerHandle( pId, 0 ), this, plugin ) )
+Plugin::Plugin( Context *context, char const *id, ::Control *plugin )
+    : Control( new PluginImpl( context, context->GetPeerHandle( id, 0 ), this, plugin ) )
     , mpPlugin( plugin )
 {
 }
@@ -724,8 +1474,8 @@ class LocalizedStringImpl : public WindowImpl
 {
 public:
     layoutimpl::LocalizedString *mpString;
-    LocalizedStringImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : WindowImpl( pCtx, xPeer, pWindow )
+    LocalizedStringImpl( Context *context, const PeerHandle &peer, Window *window )
+        : WindowImpl( context, peer, window )
         , mpString( static_cast<layoutimpl::LocalizedString*>( VCLXWindow::GetImplementation( uno::Reference <awt::XWindow> ( mxWindow, uno::UNO_QUERY ) ) ) )
     {
     }
@@ -744,8 +1494,8 @@ public:
 
 IMPL_GET_IMPL( LocalizedString );
 
-LocalizedString::LocalizedString( Context *pCtx, char const* pId )
-    : Window( new LocalizedStringImpl( pCtx, pCtx->GetPeerHandle( pId, 0 ), this ) )
+LocalizedString::LocalizedString( Context *context, char const* id )
+    : Window( new LocalizedStringImpl( context, context->GetPeerHandle( id, 0 ), this ) )
 {
 }
 
@@ -760,4 +1510,49 @@ String LocalizedString::operator= (String const& s)
     return getImpl().getText();
 }
 
+class InPlugImpl : public WindowImpl
+{
+public:
+    InPlugImpl (Context *context, const PeerHandle &peer, Window *window)
+        : WindowImpl (context, peer, window)
+    {
+    }
+};
+
+IMPL_GET_IMPL (InPlug);
+
+static char const *FIXME_set_parent (::Window *parent, char const *xml_file)
+{
+    layout::TabPage::global_parent = parent;
+    return xml_file;
+}
+
+InPlug::InPlug (Window *parent, char const* xml_file, char const* id, sal_uInt32 nId)
+    : Context (FIXME_set_parent (parent ? parent->GetWindow () : 0, xml_file))
+    , layout::Window (new InPlugImpl (this, Context::GetPeerHandle (id, nId), this))
+{
+    if (parent)
+        SetParent (parent);
+    if (::Window *w = dynamic_cast< ::Window* > (this))
+        w->SetComponentInterface (GetVCLXWindow ());
+}
+
+InPlug::InPlug (::Window *parent, char const* xml_file, char const* id, sal_uInt32 nId)
+    : Context (FIXME_set_parent (parent, xml_file))
+    , layout::Window (new InPlugImpl (this, Context::GetPeerHandle (id, nId), this))
+{
+    if (parent)
+        layout::Window::SetParent (parent);
+    if (::Window *w = dynamic_cast< ::Window* > (this))
+        w->SetComponentInterface (GetVCLXWindow ());
+}
+
+void InPlug::ParentSet (Window *window)
+{
+    window->SetParent (dynamic_cast< ::Window* > (this));
+
+    /// FIXME: for standalone run of layout::SfxTabDialog
+    SetParent (window->GetParent ());
+}
+
 } // namespace layout
diff --git a/toolkit/source/vclcompat/wrapper.hxx b/toolkit/source/vclcompat/wrapper.hxx
index 25dbd90..81a2b7b 100644
--- toolkit/source/vclcompat/wrapper.hxx
+++ toolkit/source/vclcompat/wrapper.hxx
@@ -34,8 +34,11 @@
 
 #include <layout/layout.hxx>
 #include <com/sun/star/uno/Reference.hxx>
+#include <com/sun/star/awt/XDialog2.hpp>
+#include <com/sun/star/awt/XFocusListener.hpp>
 #include <com/sun/star/awt/XWindow.hpp>
 #include <com/sun/star/awt/XVclWindowPeer.hpp>
+#include <cppuhelper/implbase1.hxx>
 
 #include <cstring>
 
@@ -46,64 +49,49 @@ namespace css = com::sun::star;
 
 class WindowImpl
 {
-  public:
+public:
     Window *mpWindow;
     Context *mpCtx;
     css::uno::Reference< css::awt::XWindow > mxWindow;
     css::uno::Reference< css::awt::XVclWindowPeer > mxVclPeer;
+    ::Window *mvclWindow;
+    bool bFirstTimeVisible;
 
-    WindowImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : mpWindow( pWindow )
-        , mpCtx( pCtx )
-        , mxWindow( xPeer, css::uno::UNO_QUERY )
-        , mxVclPeer( xPeer, css::uno::UNO_QUERY )
-    {
-    }
-
-    virtual ~WindowImpl()
-    {
-    }
+    WindowImpl (Context *context, PeerHandle const &peer, Window *window);
+    virtual ~WindowImpl ();
 
-    void wrapperGone()
-    {
-        mpWindow = NULL;
-        mpCtx = NULL;
-        if ( mxWindow.is() )
-        {
-            css::uno::Reference< css::lang::XComponent > xComp( mxWindow, css::uno::UNO_QUERY );
-            mxWindow.clear();
-            if ( xComp.is() )
-                xComp->dispose();
-        }
-    }
+    void wrapperGone();
+    css::uno::Any getProperty (char const *name);
+    void setProperty (char const *name, css::uno::Any any);
+    void redraw (bool resize=false);
 
-    css::uno::Any getProperty( const char *pName )
-    {
-        if ( !this || !mxVclPeer.is() )
-            return css::uno::Any();
-        return mxVclPeer->getProperty
-            ( rtl::OUString( pName, strlen( pName ), RTL_TEXTENCODING_ASCII_US ) );
-    }
-    void setProperty( const char *pName, css::uno::Any aAny )
-    {
-        if ( !this || !mxVclPeer.is() )
-            return;
-        mxVclPeer->setProperty
-            ( rtl::OUString( pName, strlen( pName ), RTL_TEXTENCODING_ASCII_US ), aAny );
-    }
+    // XFocusListener
+    virtual void SAL_CALL disposing (css::lang::EventObject const&) throw (css::uno::RuntimeException);
 };
 
 class ControlImpl : public WindowImpl
+                  , public ::cppu::WeakImplHelper1 <css::awt::XFocusListener>
 {
-  public:
-    ControlImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : WindowImpl( pCtx, xPeer, pWindow )
-    {
-    }
+public:
+    Link mGetFocusHdl;
+    Link mLoseFocusHdl;
+
+    ControlImpl( Context *context, PeerHandle const& peer, Window *window );
+    ~ControlImpl ();
+
+    virtual void SetGetFocusHdl (Link const& link);
+    Link& GetGetFocusHdl ();
+    virtual void SetLoseFocusHdl (Link const& link);
+    Link& GetLoseFocusHdl ();
+    virtual void UpdateListening (Link const& link);
+
+    // XFocusListener
+    virtual void SAL_CALL disposing (css::lang::EventObject const&) throw (css::uno::RuntimeException);
+    void SAL_CALL focusGained (css::awt::FocusEvent const& e) throw (css::uno::RuntimeException);
+    void SAL_CALL focusLost (css::awt::FocusEvent const& e) throw (css::uno::RuntimeException);
 };
 
-inline WindowImpl &Window::getImpl() const
-{ return *(static_cast< WindowImpl * >( mpImpl )); }
+inline WindowImpl &Window::getImpl() const{ return *(static_cast< WindowImpl * >( mpImpl )); }
 
 // Helpers for defining boiler-plate constructors ...
 // Could in-line in top-level but not with safe static_casts.
@@ -112,23 +100,39 @@ inline WindowImpl &Window::getImpl() const
     { \
         return *(static_cast<t##Impl *>(mpImpl)); \
     }
-#define IMPL_CONSTRUCTORS(t,par,unoName) \
-    t::t( Context *pCtx, const char *pId, sal_uInt32 nId ) \
-        : par( new t##Impl( pCtx, pCtx->GetPeerHandle( pId, nId ), this ) ) \
+#define IMPL_CONSTRUCTORS_BODY(t,par,unoName,body) \
+    t::t( Context *context, const char *pId, sal_uInt32 nId ) \
+        : par( new t##Impl( context, context->GetPeerHandle( pId, nId ), this ) ) \
+    { \
+        Window *parent = dynamic_cast<Window*> (context);\
+        body;\
+        if (parent)\
+            SetParent (parent);\
+    } \
+    t::t( Window *parent, WinBits bits) \
+        : par( new t##Impl( parent->getContext(), Window::CreatePeer( parent, bits, unoName ), this ) ) \
     { \
+        body;\
+        if ( parent )\
+            SetParent (parent);\
     } \
-    t::t( Window *pParent, WinBits nBits) \
-        : par( new t##Impl( pParent->getContext(), Window::CreatePeer( pParent, nBits, unoName ), this ) ) \
+    t::t( Window *parent, ResId const& res) \
+        : par( new t##Impl( parent->getContext(), Window::CreatePeer( parent, 0, unoName ), this ) ) \
     { \
+        body;\
+        setRes (res);\
+        if (parent)\
+            SetParent (parent);\
     }
+#define IMPL_CONSTRUCTORS(t,par,unoName) IMPL_CONSTRUCTORS_BODY(t, par, unoName, )
 #define IMPL_CONSTRUCTORS_2(t,win_par,other_par,unoName) \
-    t::t( Context *pCtx, const char *pId, sal_uInt32 nId ) \
-        : win_par( new t##Impl( pCtx, pCtx->GetPeerHandle( pId, nId ), this ) ) \
+    t::t( Context *context, const char *pId, sal_uInt32 nId ) \
+        : win_par( new t##Impl( context, context->GetPeerHandle( pId, nId ), this ) ) \
         , other_par( new other_par##Impl( Window::GetPeer() ) ) \
     { \
     } \
-    t::t( Window *pParent, WinBits nBits) \
-        : win_par( new t##Impl( pParent->getContext(), Window::CreatePeer( pParent, nBits, unoName ), this ) ) \
+    t::t( Window *parent, WinBits bits) \
+        : win_par( new t##Impl( parent->getContext(), Window::CreatePeer( parent, bits, unoName ), this ) ) \
         , other_par( new other_par##Impl( Window::GetPeer() ) ) \
     { \
     }
diff --git a/toolkit/src2xml/source/boxer.py b/toolkit/src2xml/source/boxer.py
index c697ec8..1b716d7 100644
--- toolkit/src2xml/source/boxer.py
+++ toolkit/src2xml/source/boxer.py
@@ -9,11 +9,11 @@ class DlgLayoutBuilder(object):
 
     def addWidget (self, elem):
         x, y = int(elem.getAttr('x')), int(elem.getAttr('y'))
-        if self.rows.has_key(y):
-            self.rows[y][x] = elem
-        else:
-            self.rows[y] = {}
-            self.rows[y][x] = elem
+        self.rows[y] = self.rows.get (y, {})
+        while self.rows[y].has_key(x):
+            y += 1
+            self.rows[y] = self.rows.get (y, {})
+        self.rows[y][x] = elem
 
     def build (self):
         root = Element('vbox')
@@ -53,6 +53,8 @@ class Boxer(object):
 
         newnode = Element(dlgnode.name)
         newnode.clone(dlgnode)
+        if dlgnode.name == 'string':
+            return newnode
         newnode.setAttr("xmlns", "http://openoffice.org/2007/layout")
         newnode.setAttr("xmlns:cnt", "http://openoffice.org/2007/layout/container")
         mx = DlgLayoutBuilder(newnode)
diff --git a/toolkit/src2xml/source/src2xml.py b/toolkit/src2xml/source/src2xml.py
index fdcc0fb..128cfa1 100644
--- toolkit/src2xml/source/src2xml.py
+++ toolkit/src2xml/source/src2xml.py
@@ -127,7 +127,6 @@ def convert (file_name, options):
     lexer.includeDirs = options.include_path
     lexer.stopOnHeader = options.stopOnHeader
     lexer.debugMacro = options.debug_macro
-#     lexer.debug = True
     if options.debug_lexer:
         lexer.debug = True
         lexer.tokenize()
@@ -145,8 +144,8 @@ def convert (file_name, options):
     if options.debug_parser:
         parser.debug = True
         root = parser.parse()
-        print root.dump()
-        return
+        s = root.dump()
+        return s
 
     # Parse the tokens.
     root = parser.parse()
@@ -174,9 +173,11 @@ def post_process (s):
     """Make output directly usable by layout module."""
     s = re.sub ('(</?)([a-z]+)-([a-z]+)-([a-z]+)', r'\1\2\3\4', s)
     s = re.sub ('(</?)([a-z]+)-([a-z]+)', r'\1\2\3', s)
-    s = re.sub ('(<(checkbox|radiobutton|(fixed(info|text)))[^>]*) text=', r'\1 label=', s)
+    s = re.sub ('(<(checkbox|(cancel|help|ignore|ok|push|more|no|radio|reset|retry|yes)button|(fixed(info|text)))[^>]*) text=', r'\1 label=', s)
     s = re.sub (' (height|width|x|y)="[0-9]*"', '', s)
     s = re.sub (' (label|text|title)="', r' _\1="', s)
+    s = re.sub ('&([^m][^p]*[^;]*)', r'&amp;\1', s)
+    s = re.sub (' hide="(TRUE|true|1)"', ' show="false"', s)
 
     s = s.replace ('<modaldialog', '<modaldialog sizeable="true"')
     s = s.replace (' rid=', ' id=')
diff --git a/toolkit/uiconfig/layout/delzip b/toolkit/uiconfig/layout/delzip
new file mode 100644
index 0000000..7b4d68d
--- /dev/null
+++ toolkit/uiconfig/layout/delzip
@@ -0,0 +1 @@
+empty
\ No newline at end of file
diff --git a/toolkit/uiconfig/layout/localize.sdf b/toolkit/uiconfig/layout/localize.sdf
new file mode 100644
index 0000000..ea30561
--- /dev/null
+++ toolkit/uiconfig/layout/localize.sdf
@@ -0,0 +1 @@
+#empty
diff --git a/toolkit/uiconfig/layout/makefile.mk b/toolkit/uiconfig/layout/makefile.mk
new file mode 100644
index 0000000..c3d1e5a
--- /dev/null
+++ toolkit/uiconfig/layout/makefile.mk
@@ -0,0 +1,58 @@
+#*************************************************************************
+#
+#   OpenOffice.org - a multi-platform office productivity suite
+#
+#   $RCSfile$
+#
+#   $Revision$
+#
+#   last change: $Author$ $Date$
+#
+#   The Contents of this file are made available subject to
+#   the terms of GNU Lesser General Public License Version 2.1.
+#
+#
+#     GNU Lesser General Public License Version 2.1
+#     =============================================
+#     Copyright 2005 by Sun Microsystems, Inc.
+#     901 San Antonio Road, Palo Alto, CA 94303, USA
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License version 2.1, as published by the Free Software Foundation.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 51 Franklin Street, 5th Floor, Boston,
+#     MA  02110-1301  USA
+#
+#*************************************************************************
+
+PRJ=../..
+PRJNAME=toolkit
+TARGET=layout
+
+.INCLUDE : settings.mk
+
+.IF "$(ENABLE_LAYOUT)" == "TRUE"
+
+all: ALLTAR
+
+XML_FILES=\
+  message-box.xml\
+  tab-dialog.xml\
+
+#
+
+.INCLUDE : layout.mk
+
+.ELSE # ENABLE_LAYOUT != TRUE
+all .PHONY:
+.ENDIF # ENABLE_LAYOUT != TRUE
+
+.INCLUDE :  target.mk
diff --git a/toolkit/uiconfig/layout/message-box.xml b/toolkit/uiconfig/layout/message-box.xml
new file mode 100644
index 0000000..6a64be1
--- /dev/null
+++ toolkit/uiconfig/layout/message-box.xml
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This is a template.  i18n translation is not performed in-place;
+     i18n translated xml files are generated from this template by
+     transex3/layout/tralay.  !-->
+
+<modaldialog xmlns="http://openoffice.org/2007/layout"
+             xmlns:cnt="http://openoffice.org/2007/layout/container"
+             id="message-box" _title="" optimumsize="true"
+             has_border="true" sizeable="true" moveable="true" closeable="true">
+    <vbox border="5" spacing="5">
+	<hbox border="5" spacing="20">
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedimage id="FI_ERROR" cnt:expand="false" cnt:v-align="0.5" cnt:v-fill="0" graphic="res/commandimagelist/msgbox-error.png" />
+	    </align>
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedimage id="FI_INFO" cnt:expand="false" cnt:v-align="0.5" cnt:v-fill="0" graphic="res/commandimagelist/msgbox-info.png" />
+	    </align>
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedimage id="FI_QUERY" cnt:expand="false" cnt:v-align="0.5" cnt:v-fill="0" graphic="res/commandimagelist/msgbox-query.png" />
+	    </align>
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedimage id="FI_WARNING" cnt:expand="false" cnt:v-align="0.5" cnt:v-fill="0" graphic="res/commandimagelist/msgbox-warning.png" />
+	    </align>
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedtext id="FT_MESSAGE" _label="FT-LABEL" cnt:v-align="0.5" cnt:v-fill="0" />
+	    </align>
+	    <flow/>
+	</hbox>
+	<dialogbuttonhbox border="0" spacing="5">
+	    <flow/>
+	    <!-- deprecoted vcl/MsgBox compatibility !-->
+	    <retrybutton id="BTN_RETRY" />
+	    <ignorebutton id="BTN_IGNORE" />
+
+	    <yesbutton id="BTN_YES"/>
+	    <cancelbutton id="BTN_CANCEL"/>
+	    <helpbutton id="BTN_HELP"/>
+	    <nobutton id="BTN_NO" xlabel="~Alternate"/>
+	</dialogbuttonhbox>
+    </vbox>
+</modaldialog>
diff --git a/toolkit/uiconfig/layout/tab-dialog.xml b/toolkit/uiconfig/layout/tab-dialog.xml
new file mode 100644
index 0000000..1d631e9
--- /dev/null
+++ toolkit/uiconfig/layout/tab-dialog.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<dialog xmlns="http://openoffice.org/2007/layout"
+	xmlns:cnt="http://openoffice.org/2007/layout/container"
+	_title="layout::TabDialog" optimumsize="true"
+	id="tab-dialog"
+	has_border="true" sizeable="true" moveable="true">
+    <vbox spacing="5" border="5">
+	<tabcontrol id="ID_TABCONTROL"/>
+	<dialogbuttonhbox border="5" spacing="5" cnt:expand="false">
+	    <flow/>
+	    <okbutton id="BTN_OK" show="false"/>
+	    <pushbutton id="BTN_USER" _label="&lt;User&gt;" show="false"/>
+	    <cancelbutton id="BTN_CANCEL" show="false"/>
+	    <helpbutton id="BTN_HELP" show="false"/>
+	    <resetbutton id="BTN_RESET" show="false"/>
+	    <pushbutton id="BTN_BASEFMT" _label="&lt;Base Format&gt;" show="false"/>
+	</dialogbuttonhbox>
+    </vbox>
+</dialog>
diff --git a/toolkit/util/makefile.pmk b/toolkit/util/makefile.pmk
index f88a240..acf6ba4 100644
--- toolkit/util/makefile.pmk
+++ toolkit/util/makefile.pmk
@@ -41,7 +41,5 @@ CFLAGS += -xldscope=hidden
 
 CFLAGS+=-I$(PRJ)/inc/layout
 .IF "$(ENABLE_LAYOUT)" == "TRUE"
-CFLAGS+=-DENABLE_LAYOUT=1 -DTEST_LAYOUT=1
-.ELSE
-CFLAGS+=-DENABLE_LAYOUT=0
+CFLAGS+=-DTEST_LAYOUT=1
 .ENDIF # ENABLE_LAYOUT == TRUE
diff --git a/toolkit/workben/layout/.gitignore b/toolkit/workben/layout/.gitignore
index 9b72951..142ba57 100644
--- toolkit/workben/layout/.gitignore
+++ toolkit/workben/layout/.gitignore
@@ -1,3 +1,4 @@
 /de
 /en-US
 /nl
+/ja
\ No newline at end of file
diff --git a/toolkit/workben/layout/TEST b/toolkit/workben/layout/TEST
new file mode 100755
index 0000000..d6a20cb
--- /dev/null
+++ toolkit/workben/layout/TEST
@@ -0,0 +1,3 @@
+export OOO_INSTALL_PREFIX=$(cd ../../../../.. && pwd)/ooo-svn
+test -d $OOO_INSTALL_PREFIX/openoffice.org3 && export OOO_PREFIX_BRAND=$OOO_INSTALL_PREFIX/openoffice.org3 || export OOO_PREFIX_BRAND=$OOO_INSTALL_PREFIX
+LD_LIBRARY_PATH=$OOO_PREFIX_BRAND/basis-link/program:$OOO_PREFIX_BRAND/basis-link/ure-link/lib ../../unxlngx6.pro/bin/test "$@"
diff --git a/toolkit/workben/layout/insert-sheet.xml b/toolkit/workben/layout/insert-sheet.xml
new file mode 100644
index 0000000..0ce5843
--- /dev/null
+++ toolkit/workben/layout/insert-sheet.xml
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This is a template.  i18n translation is not performed in-place;
+     i18n translated XML files are generated from this template by
+     transex3/layout/tralay.  !-->
+
+<modaldialog sizeable="true" closeable="true" moveable="true" output-size="true" id="RID_SCDLG_INSERT_TABLE" sv-look="true" _title="Insert Sheet" xmlns="http://openoffice.org/2007/layout" xmlns:cnt="http://openoffice.org/2007/layout/container">
+    <vbox spacing="5" border="5">
+        <fixedline id="FL_POSITION" _text="Position"/>
+	<hbox>
+	    <vbox cnt:padding="13" spacing="5">
+		<radiobutton radiogroup="insert-sheet-position" id="RB_BEFORE" tabstop="true" _label="B~efore current sheet"/>
+		<radiobutton radiogroup="insert-sheet-position" id="RB_BEHIND" tabstop="true" _label="~After current sheet"/>
+	    </vbox>
+	</hbox>
+        <fixedline id="FL_TABLE" _text="Sheet"/>
+	<hbox>
+	    <vbox cnt:padding="13" spacing="5">
+		<radiobutton radiogroup="insert-sheet-source" id="RB_NEW" _label="~New sheet"/>
+		<hbox>
+		    <vbox cnt:padding="13" spacing="5" cnt:fill="false" cnt:expand="false">
+			<fixedtext id="FT_COUNT" _label="N~o. of sheets"/>
+			<fixedtext id="FT_NAME" _label="Na~me"/>
+		    </vbox>
+		    <vbox>
+			<hbox>
+			    <numericfield has_border="true" maximum="256" minimum="1" repeat="true" id="NF_COUNT" spin="true" spin-size="1" tabstop="true" value="1" cnt:fill="true" cnt:expand="false"/>
+			</hbox>
+			<edit has_border="true" id="ED_TABNAME"  cnt:fill="true" cnt:expand="true"/>
+		    </vbox>
+		</hbox>
+	    </vbox>
+	</hbox>
+	<hbox>
+	    <vbox cnt:padding="13" spacing="5">
+		<radiobutton radiogroup="insert-sheet-source" id="RB_FROMFILE" _label="~From file"/>
+		<hbox>
+		    <vbox cnt:padding="13" spacing="5">
+			<hbox>
+			    <multilistbox auto-hscroll="true" has_border="true" id="LB_TABLES" simple-mode="true" string-item-list=" : : : : " cnt:fill="true" cnt:expand="true"/>
+			    <vbox cnt:fill="false" cnt:expand="false" spacing="5">
+				<pushbutton id="BTN_BROWSE" _label="~Browse..." cnt:expand="false"/>
+			    <checkbox id="CB_LINK" _label="Lin~k" cnt:expand="false"/>
+			    <flow/>
+			    </vbox>
+			</hbox>
+			<fixedtext id="FT_PATH" label="FT-PATH"/>
+		    </vbox>
+		</hbox>
+	    </vbox>
+	</hbox>
+	<dialogbuttonhbox border="5" spacing="5">
+            <okbutton default="true" id="BTN_OK"/>
+            <cancelbutton id="BTN_CANCEL"/>
+            <helpbutton id="BTN_HELP"/>
+	</dialogbuttonhbox>
+    </vbox>
+</modaldialog>
diff --git a/toolkit/workben/layout/makefile.mk b/toolkit/workben/layout/makefile.mk
index e82e1c9..cd0f327 100644
--- toolkit/workben/layout/makefile.mk
+++ toolkit/workben/layout/makefile.mk
@@ -43,12 +43,10 @@ ENABLE_EXCEPTIONS=TRUE
 CFLAGS += -I$(PRJ)/source/layout
 
 # Allow zoom and wordcount to be built without depending on svx,sv,sfx2
-CFLAGS += -I../$(PRJ)/svx/inc -I../$(PRJ)/svtools/inc -I../$(PRJ)/sfx2/inc -I../$(PRJ)/sc/inc -I../$(PRJ)/sc/source/ui/inc
+CFLAGS += -I../$(PRJ)/svx/inc -I../$(PRJ)/svtools/inc -I../$(PRJ)/sfx2/inc -I../$(PRJ)/sc/inc -I../$(PRJ)/sc/source/ui/inc -I../$(PRJ)/sw/inc
 
 .INCLUDE : $(PRJ)$/util$/makefile.pmk
 
-CFLAGS += -DENABLE_LAYOUT=1 -DTEST_LAYOUT=1
-
 .IF "$(COMNAME)" == "gcc3"
 CFLAGS+=-Wall -Wno-non-virtual-dtor
 .ENDIF
@@ -92,8 +90,13 @@ default: ALLTAR
 .INCLUDE : target.mk
 
 XML_FILES=\
+	insert-sheet.xml\
+	message-box.xml\
+	move-copy-sheet.xml\
 	recover.xml\
 	sort-options.xml\
+	string-input.xml\
+	tab-dialog.xml\
 	wordcount.xml\
 	zoom.xml\
 
@@ -119,12 +122,16 @@ $(svtools):
 	ln -sf ..$/$(PRJ)$/svtools$/inc $(INCCOM)$/svtools
 
 dist .PHONY :
+	cp -pv message-box.xml $(PRJ)/uiconfig/layout
+	cp -pv tab-dialog.xml $(PRJ)/uiconfig/layout
 	$(SHELL) ./un-test.sh zoom.cxx > ../$(PRJ)/svx/source/dialog/zoom.cxx
 	$(SHELL) ./un-test.sh zoom.hxx > ../$(PRJ)/svx/source/dialog/zoom.hxx
 	touch ../$(PRJ)/svx/source/dialog/dlgfact.cxx
+	cp -pv zoom.xml ../$(PRJ)/svx/uiconfig/layout
 	$(SHELL) ./un-test.sh wordcountdialog.cxx > ../$(PRJ)/sw/source/ui/dialog/wordcountdialog.cxx
 	$(SHELL) ./un-test.sh wordcountdialog.hxx > ../$(PRJ)/sw/source/ui/inc/wordcountdialog.hxx
 	touch ../$(PRJ)/sw/source/ui/dialog/swdlgfact.cxx
+	cp -pv wordcount.xml ../$(PRJ)/sw/uiconfig/layout
 	# FIXME: broken setup
 	ln -sf ../inc/wordcountdialog.hxx ../$(PRJ)/sw/source/ui/dialog/wordcountdialog.hxx 
 	$(SHELL) ./un-test.sh tpsort.cxx > ../$(PRJ)/sc/source/ui/dbgui/tpsort.cxx
@@ -133,6 +140,10 @@ dist .PHONY :
 	$(SHELL) ./un-test.sh sortdlg.hxx > ../$(PRJ)/sc/source/ui/inc/sortdlg.hxx
 	touch ../$(PRJ)/sc/source/ui/attrdlg/scdlgfact.cxx
 	touch ../$(PRJ)/sc/source/ui/view/cellsh2.cxx
+	cp -pv insert-sheet.xml ../$(PRJ)/sc/uiconfig/layout
+	cp -pv move-copy-sheet.xml ../$(PRJ)/sc/uiconfig/layout
+	cp -pv sort-options.xml ../$(PRJ)/sc/uiconfig/layout
+	cp -pv string-input.xml ../$(PRJ)/sc/uiconfig/layout
 
 .ELSE # ENABLE_LAYOUT != TRUE
 all .PHONY:
diff --git a/toolkit/workben/layout/message-box.xml b/toolkit/workben/layout/message-box.xml
new file mode 100644
index 0000000..6a64be1
--- /dev/null
+++ toolkit/workben/layout/message-box.xml
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This is a template.  i18n translation is not performed in-place;
+     i18n translated xml files are generated from this template by
+     transex3/layout/tralay.  !-->
+
+<modaldialog xmlns="http://openoffice.org/2007/layout"
+             xmlns:cnt="http://openoffice.org/2007/layout/container"
+             id="message-box" _title="" optimumsize="true"
+             has_border="true" sizeable="true" moveable="true" closeable="true">
+    <vbox border="5" spacing="5">
+	<hbox border="5" spacing="20">
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedimage id="FI_ERROR" cnt:expand="false" cnt:v-align="0.5" cnt:v-fill="0" graphic="res/commandimagelist/msgbox-error.png" />
+	    </align>
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedimage id="FI_INFO" cnt:expand="false" cnt:v-align="0.5" cnt:v-fill="0" graphic="res/commandimagelist/msgbox-info.png" />
+	    </align>
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedimage id="FI_QUERY" cnt:expand="false" cnt:v-align="0.5" cnt:v-fill="0" graphic="res/commandimagelist/msgbox-query.png" />
+	    </align>
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedimage id="FI_WARNING" cnt:expand="false" cnt:v-align="0.5" cnt:v-fill="0" graphic="res/commandimagelist/msgbox-warning.png" />
+	    </align>
+	    <align cnt:expand="false" cnt:fill="true">
+		<fixedtext id="FT_MESSAGE" _label="FT-LABEL" cnt:v-align="0.5" cnt:v-fill="0" />
+	    </align>
+	    <flow/>
+	</hbox>
+	<dialogbuttonhbox border="0" spacing="5">
+	    <flow/>
+	    <!-- deprecoted vcl/MsgBox compatibility !-->
+	    <retrybutton id="BTN_RETRY" />
+	    <ignorebutton id="BTN_IGNORE" />
+
+	    <yesbutton id="BTN_YES"/>
+	    <cancelbutton id="BTN_CANCEL"/>
+	    <helpbutton id="BTN_HELP"/>
+	    <nobutton id="BTN_NO" xlabel="~Alternate"/>
+	</dialogbuttonhbox>
+    </vbox>
+</modaldialog>
diff --git a/toolkit/workben/layout/move-copy-sheet.xml b/toolkit/workben/layout/move-copy-sheet.xml
new file mode 100644
index 0000000..79720df
--- /dev/null
+++ toolkit/workben/layout/move-copy-sheet.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This is a template.  i18n translation is not performed in-place;
+     i18n translated XML files are generated from this template by
+     transex3/layout/tralay.  !-->
+
+<modaldialog sizeable="true" closeable="true" help-id="FID_TAB_MOVE" moveable="true" output-size="true" id="RID_SCDLG_MOVETAB" sv-look="true" _title="Move/Copy Sheet" xmlns="http://openoffice.org/2007/layout" xmlns:cnt="http://openoffice.org/2007/layout/container">
+    <vbox spacing="5" border="5">
+	<string id="STR_NEWDOC" _text="- new document -"/>
+        <fixedtext id="FT_DEST" _label="To ~document"/>
+        <listbox has_border="true" dropdown="true" id="LB_DEST" tabstop="true"/>
+        <fixedtext id="FT_INSERT" _label="~Insert before"/>
+        <listbox has_border="true" id="LB_INSERT" tabstop="true" string-item-list=" : : : : " />
+        <checkbox id="BTN_COPY" tabstop="true" _label="~Copy"/>
+	<dialogbuttonhbox border="5" spacing="5">
+	    <flow/>
+            <cancelbutton id="BTN_CANCEL" tabstop="true"/>
+            <helpbutton id="BTN_HELP" tabstop="true"/>
+            <okbutton default="true" id="BTN_OK" tabstop="true"/>
+	</dialogbuttonhbox>
+    </vbox>
+</modaldialog>
diff --git a/toolkit/workben/layout/recover.cxx b/toolkit/workben/layout/recover.cxx
index 706ee21..a0cc56b 100644
--- toolkit/workben/layout/recover.cxx
+++ toolkit/workben/layout/recover.cxx
@@ -55,6 +55,13 @@ using namespace com::sun::star;
 
 #include <layout/layout-pre.hxx>
 
+#if ENABLE_LAYOUT
+#undef SVX_RES
+#define SVX_RES(x) #x
+#undef SfxModalDialog
+#define SfxModalDialog( parent, id ) Dialog( parent, "recover.xml", id )
+#endif /* ENABLE_LAYOUT */
+
 #if TEST_LAYOUT
 SvxRecoverDialog::SvxRecoverDialog( Window* pParent )
 #else /* !TEST_LAYOUT */
diff --git a/toolkit/workben/layout/sort-options.xml b/toolkit/workben/layout/sort-options.xml
index e2e01f0..43144c1 100644
--- toolkit/workben/layout/sort-options.xml
+++ toolkit/workben/layout/sort-options.xml
@@ -33,8 +33,8 @@
 		<listbox has_border="true" dropdown="true" id="LB_ALGORITHM" tabstop="true"/>
             </hbox>
             <fixedline id="FL_DIRECTION" _text="Direction"/>
-            <radiobutton id="BTN_TOP_DOWN" tabstop="true" _label="~Top to bottom (sort rows)"/>
-            <radiobutton id="BTN_LEFT_RIGHT" tabstop="true" _label="L~eft to right (sort columns)"/>
+            <radiobutton id="BTN_TOP_DOWN" radiogroup="sort-options" tabstop="true" _label="~Top to bottom (sort rows)"/>
+            <radiobutton id="BTN_LEFT_RIGHT" radiogroup="sort-options" tabstop="true" _label="L~eft to right (sort columns)"/>
 	</vbox>
     </vbox>
 </tabpage>
diff --git a/toolkit/workben/layout/sortdlg.cxx b/toolkit/workben/layout/sortdlg.cxx
index e7731ef..3a6a243 100644
--- toolkit/workben/layout/sortdlg.cxx
+++ toolkit/workben/layout/sortdlg.cxx
@@ -42,8 +42,9 @@
 #include "scresid.hxx"
 #include "sortdlg.hrc"
 
-
-//==================================================================
+#ifndef LAYOUT_SFX_TABDIALOG_BROKEN
+#include <layout/layout-pre.hxx>
+#endif
 
 ScSortDlg::ScSortDlg( Window*			pParent,
 					  const SfxItemSet* pArgSet ) :
@@ -54,8 +55,15 @@ ScSortDlg::ScSortDlg( Window*			pParent,
 		bIsByRows	( FALSE )
 
 {
+#ifdef LAYOUT_SFX_TABDIALOG_BROKEN
 	AddTabPage( TP_FIELDS,	ScTabPageSortFields::Create,  0 );
 	AddTabPage( TP_OPTIONS,	ScTabPageSortOptions::Create, 0 );
+#else
+    String fields = rtl::OUString::createFromAscii ("fields");
+	AddTabPage( TP_FIELDS, fields, ScTabPageSortFields::Create, 0, FALSE, TAB_APPEND);
+    String options = rtl::OUString::createFromAscii ("options");
+	AddTabPage( TP_OPTIONS,	options, ScTabPageSortOptions::Create, 0, FALSE, TAB_APPEND);
+#endif    
 	FreeResource();
 }
 
diff --git a/toolkit/workben/layout/sortdlg.hxx b/toolkit/workben/layout/sortdlg.hxx
index d2ea7ed..a950d97 100644
--- toolkit/workben/layout/sortdlg.hxx
+++ toolkit/workben/layout/sortdlg.hxx
@@ -33,10 +33,14 @@
 
 #include <sfx2/tabdlg.hxx>
 
-#ifndef _SFX_HXX
-#endif
+#if !TEST_LAYOUT
+#define LAYOUT_SFX_TABDIALOG_BROKEN 1
+#endif /* !TEST_LAYOUT */
 
-//==================================================================
+#ifndef LAYOUT_SFX_TABDIALOG_BROKEN
+#include <sfx2/layout.hxx>
+#include <layout/layout-pre.hxx>
+#endif
 
 class ScSortDlg : public SfxTabDialog
 {
@@ -61,7 +65,8 @@ inline void ScSortDlg::SetByRows ( BOOL bByRows  )	{ bIsByRows = bByRows; }
 inline BOOL ScSortDlg::GetHeaders() const 			{ return bIsHeaders; }
 inline BOOL ScSortDlg::GetByRows () const 			{ return bIsByRows; }
 
+#ifndef LAYOUT_SFX_TABDIALOG_BROKEN
+#include <layout/layout-post.hxx>
+#endif
 
 #endif // SC_SORTDLG_HXX
-
-
diff --git a/toolkit/workben/layout/string-input.xml b/toolkit/workben/layout/string-input.xml
new file mode 100644
index 0000000..0a59899
--- /dev/null
+++ toolkit/workben/layout/string-input.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This is a template.  i18n translation is not performed in-place;
+     i18n translated XML files are generated from this template by
+     transex3/layout/tralay.  !-->
+
+<modaldialog sizeable="true" closeable="false" moveable="true" output-size="true" id="RID_SCDLG_STRINPUT" sv-look="true" xmlns="http://openoffice.org/2007/layout" xmlns:cnt="http://openoffice.org/2007/layout/container" title="Insert String">
+    <vbox spacing="5" border="5">
+        <fixedtext id="FT_LABEL" label="FT-LABEL"/>
+        <edit has_border="true" id="ED_INPUT" tabstop="true"/>
+	<dialogbuttonhbox border="5" spacing="5">
+            <okbutton default="true" id="BTN_OK" tabstop="true"/>
+            <cancelbutton id="BTN_CANCEL" tabstop="true"/>
+            <helpbutton id="BTN_HELP" tabstop="true"/>
+	</dialogbuttonhbox>
+    </vbox>
+</modaldialog>
diff --git a/toolkit/workben/layout/tab-dialog.xml b/toolkit/workben/layout/tab-dialog.xml
new file mode 100644
index 0000000..1d631e9
--- /dev/null
+++ toolkit/workben/layout/tab-dialog.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<dialog xmlns="http://openoffice.org/2007/layout"
+	xmlns:cnt="http://openoffice.org/2007/layout/container"
+	_title="layout::TabDialog" optimumsize="true"
+	id="tab-dialog"
+	has_border="true" sizeable="true" moveable="true">
+    <vbox spacing="5" border="5">
+	<tabcontrol id="ID_TABCONTROL"/>
+	<dialogbuttonhbox border="5" spacing="5" cnt:expand="false">
+	    <flow/>
+	    <okbutton id="BTN_OK" show="false"/>
+	    <pushbutton id="BTN_USER" _label="&lt;User&gt;" show="false"/>
+	    <cancelbutton id="BTN_CANCEL" show="false"/>
+	    <helpbutton id="BTN_HELP" show="false"/>
+	    <resetbutton id="BTN_RESET" show="false"/>
+	    <pushbutton id="BTN_BASEFMT" _label="&lt;Base Format&gt;" show="false"/>
+	</dialogbuttonhbox>
+    </vbox>
+</dialog>
diff --git a/toolkit/workben/layout/tabcontrol.xml b/toolkit/workben/layout/tabcontrol.xml
index 6a423f5..b11973b 100644
--- toolkit/workben/layout/tabcontrol.xml
+++ toolkit/workben/layout/tabcontrol.xml
@@ -1,18 +1,18 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
 <dialog xmlns="http://openoffice.org/2007/layout"
-        xmlns:cnt="http://openoffice.org/2007/layout/container"
-        title="TabControl Test" optimumsize="true"
-        has_border="true" sizeable="true" moveable="true">
-	<vbox>
-		<tabcontrol>
-			<pushbutton label="Child 1" cnt:title="Page 1" />
-			<edit has_border="true" text="Child 2" cnt:title="Page 2" />
-			<vbox cnt:title="Page 3">
-				<pushbutton label="Child 3"/>
-				<edit has_border="true" text="Child 4" />
-			</vbox>
-		</tabcontrol>
-		<okbutton cnt:expand="false" />
-	</vbox>
+	xmlns:cnt="http://openoffice.org/2007/layout/container"
+	title="TabControl Test" optimumsize="true"
+	has_border="true" sizeable="true" moveable="true">
+    <vbox>
+	<tabcontrol>
+	    <pushbutton label="Child 1" cnt:title="Page 1" />
+	    <edit has_border="true" text="Child 2" cnt:title="Page 2" />
+	    <vbox cnt:title="Page 3">
+		<pushbutton label="Child 3"/>
+		<edit has_border="true" text="Child 4" />
+	    </vbox>
+	</tabcontrol>
+	<okbutton cnt:expand="false" />
+    </vbox>
 </dialog>
diff --git a/toolkit/workben/layout/test.cxx b/toolkit/workben/layout/test.cxx
index 159cbc9..86a0b1c 100644
--- toolkit/workben/layout/test.cxx
+++ toolkit/workben/layout/test.cxx
@@ -237,19 +237,21 @@ void LayoutTest::RunEditor()
     editor.Execute();
 }
 
-void RunDialog( Dialog& dialog )
+short RunDialog( Dialog& dialog )
 {
     dialog.Show();
-    dialog.Execute();
-    fprintf( stderr, "Done: dialog execute exited\n" );
+    short result = dialog.Execute();
+    fprintf( stderr, "Done: dialog execute exited:%d\n", result);
+    return result;
 }
 
 #undef Dialog
-void RunDialog( ::Dialog& dialog )
+short RunDialog( ::Dialog& dialog )
 {
     dialog.Show();
-    dialog.Execute();
-    fprintf( stderr, "Done: dialog execute exited\n" );
+    short result = dialog.Execute();
+    fprintf( stderr, "Done: dialog execute exited:%d\n", result);
+    return result;
 }
 
 #if SORT_DLG
@@ -270,6 +272,19 @@ void TestDialog( OUString const& name )
         PluginDialog plugin ( 0 );
         RunDialog( plugin );
     }
+    else if ( name.equalsAscii( "query" ) )
+    {
+        QueryBox query ( 0, "Do you want to do?", "do");
+        RunDialog( query );
+    }
+    else if ( name.equalsAscii( "query-compat" ) )
+    {
+        QueryBox query ( 0,
+                         WinBits( WB_YES_NO | WB_DEF_YES ),
+//                         WinBits( WB_ABORT_RETRY_IGNORE ),
+                         OUString::createFromAscii ("Do you want to do?"));
+        RunDialog( query );
+    }
     else if ( name.equalsAscii( "recover" ) )
     {
         SvxRecoverDialog recover ( 0 );
@@ -279,7 +294,7 @@ void TestDialog( OUString const& name )
     else if ( name.equalsAscii( "sort" ) )
     {
         LoadSC();
-        ScSortDlg sort ( 0, 0 );
+        ScSortDlg sort (0, 0);
         RunDialog( sort );
     }
 #endif /* SORT_DLG */
diff --git a/toolkit/workben/layout/tpsort.cxx b/toolkit/workben/layout/tpsort.cxx
index 9468c5d..6770232 100644
--- toolkit/workben/layout/tpsort.cxx
+++ toolkit/workben/layout/tpsort.cxx
@@ -7,7 +7,7 @@
  * OpenOffice.org - a multi-platform office productivity suite
  *
  * $RCSfile: tpsort.cxx,v $
- * $Revision: 1.13 $
+ * $Revision: 1.14 $
  *
  * This file is part of OpenOffice.org.
  *
@@ -554,7 +554,7 @@ IMPL_LINK( ScTabPageSortFields, SelectHdl, ListBox *, pLb )
 #undef ScResId
 #define ScResId(x) #x
 #undef SfxTabPage
-#define SfxTabPage( parent, id, args ) TabPage( parent, "sort-options.xml", id, 0, &args )
+#define SfxTabPage( parent, id, args ) SfxTabPage( parent, "sort-options.xml", id, &args )
 #endif /* ENABLE_LAYOUT */
 
 ScTabPageSortOptions::ScTabPageSortOptions( Window* 			pParent,
@@ -584,6 +584,7 @@ ScTabPageSortOptions::ScTabPageSortOptions( Window* 			pParent,
 //		aFtArea 		( this, ScResId( FT_AREA ) ),
 		//
 #if ENABLE_LAYOUT
+#undef this
 #undef ScResId
 #define ScResId(x) this, #x
 #endif /* ENABLE_LAYOUT */
@@ -748,7 +749,6 @@ USHORT* __EXPORT ScTabPageSortOptions::GetRanges()
 
 #if ENABLE_LAYOUT
 #undef SfxTabPage
-#define SfxTabPage TabPage
 #endif /* ENABLE_LAYOUT */
 SfxTabPage* __EXPORT ScTabPageSortOptions::Create(
 											Window*				pParent,
diff --git a/toolkit/workben/layout/tpsort.hxx b/toolkit/workben/layout/tpsort.hxx
index ed6bdc8..ea1b28d 100644
--- toolkit/workben/layout/tpsort.hxx
+++ toolkit/workben/layout/tpsort.hxx
@@ -132,7 +132,7 @@ class ScRangeData;
 class CollatorRessource;
 class CollatorWrapper;
 
-#include <layout/layout.hxx>
+#include <sfx2/layout.hxx>
 #include <layout/layout-pre.hxx>
 
 class ScTabPageSortOptions : public SfxTabPage
@@ -142,12 +142,10 @@ public:
 									  const SfxItemSet&	 rArgSet );
 				~ScTabPageSortOptions();
 
-#if !ENABLE_LAYOUT
+#undef SfxTabPage
+#define SfxTabPage ::SfxTabPage
 	static	SfxTabPage*	Create		( Window*				pParent,
 									  const SfxItemSet& 	rArgSet );
-#else /* ENABLE_LAYOUT */
-    static TabPage*	Create ( Window* parent, SfxItemSet const& set );
-#endif /* ENABLE_LAYOUT */
 	static	USHORT*		GetRanges	();
 	virtual	BOOL		FillItemSet	( SfxItemSet& rArgSet );
 	virtual	void		Reset		( const SfxItemSet& rArgSet );
diff --git a/toolkit/workben/layout/wordcount.xml b/toolkit/workben/layout/wordcount.xml
index ae33571..e922294 100644
--- toolkit/workben/layout/wordcount.xml
+++ toolkit/workben/layout/wordcount.xml
@@ -7,7 +7,7 @@
              xmlns:cnt="http://openoffice.org/2007/layout/container"
              help-id="HID_DLG_WORDCOUNT"
              id="DLG_WORDCOUNT"
-             sizeable="true" moveable="true" optimumsize="true"
+             sizeable="true" moveable="true" optimumsize="true" closeable="true"
              has_border="true" sv-look="true" _title="Word Count">
     <vbox border="5" spacing="5">
         <fixedline id="FL_CURRENT" _text="Current selection"/>
@@ -26,7 +26,7 @@
 	    </vbox>
 	</hbox>
 	<!-- if we could do cnt:cnt:padding="-13" here, we would not have to close
-	     and reope the hbox/vbox thing !-->
+	     and reopen the hbox/vbox thing !-->
         <fixedline id="FL_DOC" _text="Whole document"/>
 	<hbox>
 	    <vbox cnt:padding="13" spacing="5">
diff --git a/toolkit/workben/layout/wordcountdialog.cxx b/toolkit/workben/layout/wordcountdialog.cxx
index 64f1836..1eebbe5 100644
--- toolkit/workben/layout/wordcountdialog.cxx
+++ toolkit/workben/layout/wordcountdialog.cxx
@@ -7,7 +7,7 @@
  * OpenOffice.org - a multi-platform office productivity suite
  *
  * $RCSfile: wordcountdialog.cxx,v $
- * $Revision: 1.3 $
+ * $Revision: 1.10 $
  *
  * This file is part of OpenOffice.org.
  *
@@ -47,6 +47,15 @@
 #include <wordcountdialog.hrc>
 #endif /* !TEST_LAYOUT */
 
+#if ENABLE_LAYOUT
+#undef SW_RES
+#define SW_RES(x) #x
+#undef SfxModalDialog
+#define SfxModalDialog( parent, id ) Dialog( parent, "wordcount.xml", id )
+#define SW_WORDCOUNTDIALOG_HRC
+#include <helpid.h>
+#endif /* ENABLE_LAYOUT */
+
 /*-- 06.04.2004 16:05:55---------------------------------------------------
 
   -----------------------------------------------------------------------*/
@@ -73,6 +82,9 @@ SwWordCountDialog::SwWordCountDialog(Window* pParent) :
 #pragma warning (default : 4355)
 #endif
 {
+#if ENABLE_LAYOUT
+    SetHelpId (HID_DLG_WORDCOUNT);
+#endif /* ENABLE_LAYOUT */
     FreeResource();
 }
 /*-- 06.04.2004 16:05:56---------------------------------------------------
diff --git a/toolkit/workben/layout/wordcountdialog.hxx b/toolkit/workben/layout/wordcountdialog.hxx
index 62e97bb..b0674e2 100644
--- toolkit/workben/layout/wordcountdialog.hxx
+++ toolkit/workben/layout/wordcountdialog.hxx
@@ -7,7 +7,7 @@
  * OpenOffice.org - a multi-platform office productivity suite
  *
  * $RCSfile: wordcountdialog.hxx,v $
- * $Revision: 1.3 $
+ * $Revision: 1.5 $
  *
  * This file is part of OpenOffice.org.
  *
diff --git a/toolkit/workben/layout/zoom.cxx b/toolkit/workben/layout/zoom.cxx
index 3185c96..6d7ade8 100644
--- toolkit/workben/layout/zoom.cxx
+++ toolkit/workben/layout/zoom.cxx
@@ -7,7 +7,7 @@
  * OpenOffice.org - a multi-platform office productivity suite
  *
  * $RCSfile: zoom.cxx,v $
- * $Revision: 1.3 $
+ * $Revision: 1.12 $
  *
  * This file is part of OpenOffice.org.
  *
@@ -51,7 +51,9 @@
 #define _SVX_ZOOM_CXX
 
 #include <svx/dialogs.hrc>
+#if !TEST_LAYOUT
 #include "zoom.hrc"
+#endif /* !TEST_LAYOUT */
 
 #include "zoom.hxx"
 #if TEST_LAYOUT
@@ -112,6 +114,13 @@ struct SvxViewLayoutItem : public LAYOUT_SfxPoolItem
 
 #include <layout/layout-pre.hxx>
 
+#if ENABLE_LAYOUT
+#undef SVX_RES
+#define SVX_RES(x) #x
+#undef SfxModalDialog
+#define SfxModalDialog( parent, id ) Dialog( parent, "zoom.xml", id )
+#endif /* ENABLE_LAYOUT */
+
 // static ----------------------------------------------------------------
 
 static USHORT pRanges[] =
@@ -282,6 +291,9 @@ SvxZoomDialog::SvxZoomDialog( Window* pParent, const SfxItemSet& rCoreSet ) :
 	bModified	( FALSE )
 
 {
+#if ENABLE_LAYOUT
+    SetHelpId (SID_ATTR_ZOOM);
+#endif /* ENABLE_LAYOUT */
 	Link aLink = LINK( this, SvxZoomDialog, UserHdl );
     a100Btn.SetClickHdl( aLink );
     aOptimalBtn.SetClickHdl( aLink );
diff --git a/toolkit/workben/layout/zoom.hxx b/toolkit/workben/layout/zoom.hxx
index 7dc09dc..461cd5a 100644
--- toolkit/workben/layout/zoom.hxx
+++ toolkit/workben/layout/zoom.hxx
@@ -7,7 +7,7 @@
  * OpenOffice.org - a multi-platform office productivity suite
  *
  * $RCSfile: zoom.hxx,v $
- * $Revision: 1.3 $
+ * $Revision: 1.6 $
  *
  * This file is part of OpenOffice.org.
  *
diff --git a/toolkit/workben/layout/zoom.xml b/toolkit/workben/layout/zoom.xml
index 5ad8fcf..5938643 100644
--- toolkit/workben/layout/zoom.xml
+++ toolkit/workben/layout/zoom.xml
@@ -7,34 +7,34 @@
              xmlns:cnt="http://openoffice.org/2007/layout/container"
              id="RID_SVXDLG_ZOOM" _title="Zoom &amp; View Layout" optimumsize="true"
 	     help-id="SID_ATTR_ZOOM"
-             has_border="true" sizeable="true" moveable="true">
+             has_border="true" sizeable="true" moveable="true" closeable="true">
     <vbox spacing="5" border="5">
 	<hbox spacing="0" border="0">
 	    <vbox spacing="5" border="5">
-	<fixedline id="FL_ZOOM" _text="Zoom factor" cnt:expand="true"/>
-		<radiobutton radiogroup="zoom" id="BTN_OPTIMAL"   _label="Optimal"/>
-	<radiobutton radiogroup="zoom" id="BTN_WHOLE_PAGE" _label="Whole Page"/>
-	<radiobutton radiogroup="zoom" id="BTN_PAGE_WIDTH" _label="Page Width"/>
-	<radiobutton radiogroup="zoom" id="BTN_100"   _label="100 %"/>
-	<hbox cnt:expand="false" cnt:fill="true">
-	    <align cnt:expand="false" cnt:fill="true">
-		<radiobutton cnt:v-align="0.5" cnt:v-fill="0" radiogroup="zoom" id="BTN_USER" _label="Variable"/>
-	    </align>
-	    <flow cnt:padding="10" cnt:expand="false"/>
-	    <metricfield id="ED_USER" value-step="1"
-			 repeat="true" has_border="true" spin="true"
-			 _text="100%" unit="11" custom-unit-text="%"
-			 right="true"
-			 cnt:expand="false"/>
-	</hbox>
+		<fixedline id="FL_ZOOM" _text="Zoom factor" cnt:expand="true"/>
+		<radiobutton radiogroup="zoom-factor" id="BTN_OPTIMAL"   _label="Optimal"/>
+		<radiobutton radiogroup="zoom-factor" id="BTN_WHOLE_PAGE" _label="Whole Page"/>
+		<radiobutton radiogroup="zoom-factor" id="BTN_PAGE_WIDTH" _label="Page Width"/>
+		<radiobutton radiogroup="zoom-factor" id="BTN_100"   _label="100 %"/>
+		<hbox cnt:expand="false" cnt:fill="true">
+		    <align cnt:expand="false" cnt:fill="true">
+			<radiobutton cnt:v-align="0.5" cnt:v-fill="0" radiogroup="zoom-factor" id="BTN_USER" _label="Variable"/>
+		    </align>
+		    <flow cnt:padding="10" cnt:expand="false"/>
+		    <metricfield id="ED_USER" value-step="1"
+				 repeat="true" has_border="true" spin="true"
+				 _text="100%" unit="11" custom-unit-text="%"
+				 right="true"
+				 cnt:expand="false"/>
+		</hbox>
 	    </vbox>
 	    <vbox spacing="5" border="5">
 		<fixedline id="FL_VIEWLAYOUT" _text="View layout" cnt:expand="true"/>
-		<radiobutton radiogroup="zoom" id="BTN_AUTOMATIC" _label="~Automatic"/>
-		<radiobutton radiogroup="zoom" id="BTN_SINGLE"    _label="~Single page"/>
+		<radiobutton radiogroup="zoom-layout" id="BTN_AUTOMATIC" _label="~Automatic"/>
+		<radiobutton radiogroup="zoom-layout" id="BTN_SINGLE"    _label="~Single page"/>
 		<hbox cnt:expand="false" cnt:fill="true">
 		    <align cnt:expand="false" cnt:fill="true">
-			<radiobutton cnt:v-align="0.5" cnt:v-fill="0" radiogroup="zoom" id="BTN_COLUMNS" _label="~Columns"/>
+			<radiobutton cnt:v-align="0.5" cnt:v-fill="0" radiogroup="zoom-layout" id="BTN_COLUMNS" _label="~Columns"/>
 		    </align>
 		    <flow cnt:padding="10" cnt:expand="false"/>
 		    <metricfield id="ED_COLUMNS" value-step="1"
