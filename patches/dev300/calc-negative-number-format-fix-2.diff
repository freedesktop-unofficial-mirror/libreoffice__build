diff --git svl/inc/svl/zformat.hxx svl/inc/svl/zformat.hxx
index dd91ceb..779fcfe 100644
--- svl/inc/svl/zformat.hxx
+++ svl/inc/svl/zformat.hxx
@@ -334,6 +334,10 @@ public:
     // Whether the negative format is without a sign or not
     BOOL IsNegativeWithoutSign() const;
 
+    BOOL IsNegativeInBracket() const;
+
+    BOOL HasPositiveBracketPlaceholder() const;
+
     // Whether a new SYMBOLTYPE_CURRENCY is contained in the format
     BOOL HasNewCurrency() const;
 
diff --git svl/source/numbers/zforlist.cxx svl/source/numbers/zforlist.cxx
index 5e2031d..3125dc5 100644
--- svl/source/numbers/zforlist.cxx
+++ svl/source/numbers/zforlist.cxx
@@ -2744,6 +2744,10 @@ void SvNumberFormatter::GenerateFormat(String& sString,
     utl::DigitGroupingIterator aGrouping( xLocaleData->getDigitGrouping());
     const xub_StrLen nDigitsInFirstGroup = static_cast<xub_StrLen>(aGrouping.get());
     const String& rThSep = GetNumThousandSep();
+
+    SvNumberformat* pFormat = (SvNumberformat*) aFTable.Get(nIndex);
+    BOOL insertBrackets = pFormat->IsNegativeInBracket();
+
     if (nAnzLeading == 0)
     {
         if (!bThousand)
@@ -2836,15 +2840,35 @@ void SvNumberFormatter::GenerateFormat(String& sString,
             sString += ';';
         sString += sNegStr;
     }
-    if (IsRed && eType != NUMBERFORMAT_CURRENCY)
+    if ( (IsRed || insertBrackets ) && eType != NUMBERFORMAT_CURRENCY)
     {
         String sTmpStr = sString;
+
+        if ( pFormat->HasPositiveBracketPlaceholder() )
+        {
+             sTmpStr += '_';
+             sTmpStr += ')';
+        }
         sTmpStr += ';';
-        sTmpStr += '[';
-        sTmpStr += pFormatScanner->GetRedString();
-        sTmpStr += ']';
-        sTmpStr += '-';
-        sTmpStr +=sString;
+
+        if (IsRed)
+        {
+            sTmpStr += '[';
+            sTmpStr += pFormatScanner->GetRedString();
+            sTmpStr += ']';
+        }
+
+        if (insertBrackets)
+        {
+            sTmpStr += '(';
+            sTmpStr += sString;
+            sTmpStr += ')';
+        }
+        else
+        {
+            sTmpStr += '-';
+            sTmpStr +=sString;
+        }
         sString = sTmpStr;
     }
 }
diff --git svl/source/numbers/zformat.cxx svl/source/numbers/zformat.cxx
index 48a6dcf..39c5a0e 100644
--- svl/source/numbers/zformat.cxx
+++ svl/source/numbers/zformat.cxx
@@ -4114,6 +4114,22 @@ BOOL SvNumberformat::IsNegativeWithoutSign() const
     return FALSE;
 }
 
+BOOL SvNumberformat::IsNegativeInBracket() const
+{
+    USHORT nAnz = NumFor[1].GetCount();
+    if (!nAnz)
+         return FALSE;
+
+    String *tmpStr = NumFor[1].Info().sStrArray;
+    return (tmpStr[0] == '(' && tmpStr[nAnz-1] == ')' );
+}
+
+BOOL SvNumberformat::HasPositiveBracketPlaceholder() const
+{
+    USHORT nAnz = NumFor[0].GetCount();
+    String *tmpStr = NumFor[0].Info().sStrArray;
+    return (tmpStr[nAnz-1].EqualsAscii( "_)" ));
+}
 
 DateFormat SvNumberformat::GetDateOrder() const
 {
