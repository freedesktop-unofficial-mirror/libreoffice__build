diff -rup canvas-orig/source/cairo/cairo_canvasbitmap.cxx canvas/source/cairo/cairo_canvasbitmap.cxx
--- canvas-orig/source/cairo/cairo_canvasbitmap.cxx	2008-03-03 18:19:05.000000000 +0100
+++ canvas/source/cairo/cairo_canvasbitmap.cxx	2008-03-03 18:20:23.000000000 +0100
@@ -120,31 +120,23 @@ namespace cairocanvas
         case 2: {
 #ifdef CAIRO_HAS_XLIB_SURFACE
         ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any > args( 3 );
-        Surface* pSurface = mpDevice->getSurface( maCanvasHelper.maSize, CAIRO_CONTENT_COLOR_ALPHA );
         Surface* pAlphaSurface = mpDevice->getSurface( maCanvasHelper.maSize, CAIRO_CONTENT_ALPHA );
-        Cairo* pCairo = pSurface->getCairo();
         Cairo* pAlphaCairo = pAlphaSurface->getCairo();
 
         // create RGB image (levels of gray) of alpha channel of original picture
-        cairo_set_source_surface( pAlphaCairo, mpBufferSurface->mpSurface, 0, 0 );
+        cairo_set_source_rgba( pAlphaCairo, 0, 0, 0, 1 );
         cairo_set_operator( pAlphaCairo, CAIRO_OPERATOR_SOURCE );
         cairo_paint( pAlphaCairo );
+        cairo_set_source_surface( pAlphaCairo, mpBufferSurface->mpSurface, 0, 0 );
+        cairo_set_operator( pAlphaCairo, CAIRO_OPERATOR_XOR );
+        cairo_paint( pAlphaCairo );
         cairo_destroy( pAlphaCairo );
 
-        cairo_set_source_rgba(pCairo, 1, 1, 1, 1 );
-        cairo_set_operator( pCairo, CAIRO_OPERATOR_SOURCE );
-        cairo_paint( pCairo );
-        cairo_set_source_surface( pCairo, pAlphaSurface->mpSurface, 0, 0 );
-        cairo_set_operator( pCairo, CAIRO_OPERATOR_OVER );
-        cairo_paint( pCairo );
-
-        delete pAlphaSurface;
-        cairo_destroy( pCairo );
-        pSurface->doNotFreePixmap();
+        pAlphaSurface->doNotFreePixmap();
         args[0] = ::com::sun::star::uno::Any( true );
-        args[1] = ::com::sun::star::uno::Any( pSurface->getPixmap () );
-        args[2] = ::com::sun::star::uno::Any( sal_Int32( pSurface->getDepth () ) );
-        delete pSurface;
+        args[1] = ::com::sun::star::uno::Any( pAlphaSurface->getPixmap () );
+        args[2] = ::com::sun::star::uno::Any( sal_Int32( pAlphaSurface->getDepth () ) );
+        delete pAlphaSurface;
 
         // return pixmap and alphachannel pixmap - it will be used in BitmapEx
         aRV = ::com::sun::star::uno::Any( args );
diff -rup canvas-orig/source/cairo/cairo_canvasbitmap.hxx canvas/source/cairo/cairo_canvasbitmap.hxx
--- canvas-orig/source/cairo/cairo_canvasbitmap.hxx	2008-03-03 18:19:05.000000000 +0100
+++ canvas/source/cairo/cairo_canvasbitmap.hxx	2008-03-03 18:18:59.000000000 +0100
@@ -110,7 +110,7 @@ namespace cairocanvas
         //     2nd the pixmap handle
         //     3rd the pixmap depth
         virtual ::com::sun::star::uno::Any SAL_CALL getFastPropertyValue(sal_Int32 nHandle)  throw (::com::sun::star::uno::RuntimeException);
-        virtual void SAL_CALL setFastPropertyValue(sal_Int32 nHandle, const ::com::sun::star::uno::Any&)  throw (::com::sun::star::uno::RuntimeException) {}
+        virtual void SAL_CALL setFastPropertyValue(sal_Int32 /* nHandle */, const ::com::sun::star::uno::Any&)  throw (::com::sun::star::uno::RuntimeException) {}
 
     private:
         /** MUST hold here, too, since CanvasHelper only contains a
diff -rup canvas-orig/source/cairo/cairo_canvashelper.cxx canvas/source/cairo/cairo_canvashelper.cxx
--- canvas-orig/source/cairo/cairo_canvashelper.cxx	2008-03-03 18:19:05.000000000 +0100
+++ canvas/source/cairo/cairo_canvashelper.cxx	2008-03-03 18:18:59.000000000 +0100
@@ -734,7 +734,7 @@ namespace cairocanvas
 	    cy = 0.5;
 	    r0 = 0;
 	    r1 = 0.5;
-	    Matrix aScaleMatrix;
+//	    Matrix aScaleMatrix;
 
 	    pPattern = cairo_pattern_create_radial( cx, cy, r0, cx, cy, r1 );
 	    addColorStops( pPattern, aValues.maColors, aValues.maStops, true );
