Fix crash during pptx export (happens during app shutdown)

From: Thorsten Behrens <thb@openoffice.org>


---

 oox/inc/oox/export/shapes.hxx            |    5 ++---
 oox/source/export/shapes.cxx             |   15 ++++-----------
 sd/source/filter/pptx/pptx-epptooxml.cxx |    4 +++-
 3 files changed, 9 insertions(+), 15 deletions(-)


diff --git oox/inc/oox/export/shapes.hxx oox/inc/oox/export/shapes.hxx
index fd8b229..e4c43b9 100644
--- oox/inc/oox/export/shapes.hxx
+++ oox/inc/oox/export/shapes.hxx
@@ -78,7 +78,7 @@ private:
     };
 
     typedef std::hash_map< const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape>, sal_Int32, ShapeHash, ShapeCheck> ShapeHashMap;
-    static ShapeHashMap saShapeMap;
+    ShapeHashMap maShapeMap;
 
 public:
     ShapeExport( sal_Int32 nXmlNamespace, ::sax_fastparser::FSHelperPtr pFS, ::oox::core::XmlFilterBase* pFB = NULL, DocumentType eDocumentType = DOCUMENT_PPTX );
@@ -160,8 +160,7 @@ public:
                         WriteUnknownShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
 
     sal_Int32 GetNewShapeID( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > rShape );
-    static sal_Int32 GetNewShapeID( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > rShape, ::oox::core::XmlFilterBase* pFB );
-    static sal_Int32 GetShapeID( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > rShape );
+    sal_Int32 GetShapeID( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > rShape );
 };
 
 }}
diff --git oox/source/export/shapes.cxx oox/source/export/shapes.cxx
index 3cc0d52..08d0e0d 100644
--- oox/source/export/shapes.cxx
+++ oox/source/export/shapes.cxx
@@ -979,28 +979,21 @@ size_t ShapeExport::ShapeHash::operator()( const ::com::sun::star::uno::Referenc
 
 sal_Int32 ShapeExport::GetNewShapeID( const Reference< XShape > rXShape )
 {
-    return GetNewShapeID( rXShape, GetFB() );
-}
-
-sal_Int32 ShapeExport::GetNewShapeID( const Reference< XShape > rXShape, XmlFilterBase* pFB )
-{
-    sal_Int32 nID = pFB->GetUniqueId();
+    sal_Int32 nID = GetFB()->GetUniqueId();
 
-    saShapeMap[ rXShape ] = nID;
+    maShapeMap[ rXShape ] = nID;
 
     return nID;
 }
 
 sal_Int32 ShapeExport::GetShapeID( const Reference< XShape > rXShape )
 {
-    ShapeHashMap::const_iterator aIter = saShapeMap.find( rXShape );
+    ShapeHashMap::const_iterator aIter = maShapeMap.find( rXShape );
 
-    if( aIter == saShapeMap.end() )
+    if( aIter == maShapeMap.end() )
         return -1;
 
     return aIter->second;
 }
 
-ShapeExport::ShapeHashMap ShapeExport::saShapeMap;
-
 } }
diff --git sd/source/filter/pptx/pptx-epptooxml.cxx sd/source/filter/pptx/pptx-epptooxml.cxx
index e9c3e08..3f186ca 100644
--- sd/source/filter/pptx/pptx-epptooxml.cxx
+++ sd/source/filter/pptx/pptx-epptooxml.cxx
@@ -624,16 +624,18 @@ void PowerPointExport::WriteAnimationAttributeName( FSHelperPtr pFS, const OUStr
     pFS->endElementNS( XML_p, XML_attrNameLst );
 }
 
-void PowerPointExport::WriteAnimationTarget( FSHelperPtr pFS, Any aTarget )
+void PowerPointExport::WriteAnimationTarget( FSHelperPtr /*pFS*/, Any aTarget )
 {
     Reference< XShape > rXShape( aTarget, UNO_QUERY );
 
     if( rXShape.is() ) {
+#if 0
 	pFS->startElementNS( XML_p, XML_tgtEl, FSEND );
 	pFS->singleElementNS( XML_p, XML_spTgt,
 			      XML_spid, I32S( ShapeExport::GetShapeID( rXShape ) ),
 			      FSEND );
 	pFS->endElementNS( XML_p, XML_tgtEl );
+#endif
     }
 }
 
