diff --git a/filter/prj/build.lst b/filter/prj/build.lst
index 7df13b1..8392777 100644
--- filter/prj/build.lst
+++ filter/prj/build.lst
@@ -1,4 +1,4 @@
-fl	filter	:	svtools unotools goodies xmloff svx javaunohelper jvmaccess XALAN:xalan LIBXSLT:libxslt NULL
+fl	filter	:	svtools unotools goodies xmloff svx javaunohelper sax jvmaccess XALAN:xalan LIBXSLT:libxslt NULL
 fl	filter									usr1	-	all	fl_mkout			NULL
 fl	filter\prj								get		-	all	fl_prj				NULL
 fl	filter\inc								nmake	-	all	fl_inc				NULL
diff --git a/filter/source/config/fragments/fcfg_drawgraphics.mk b/filter/source/config/fragments/fcfg_drawgraphics.mk
index 7038e27..41a4625 100644
--- filter/source/config/fragments/fcfg_drawgraphics.mk
+++ filter/source/config/fragments/fcfg_drawgraphics.mk
@@ -54,6 +54,7 @@ F4_DRAWGRAPHICS = \
     SGF___StarOffice_Writer_SGF \
     SGV___StarDraw_2_0 \
     SVM___StarView_Metafile \
+    SVG___Scalable_Vector_Graphics \
     TGA___Truevision_TARGA \
     TIF___Tag_Image_File \
     WMF___MS_Windows_Metafile \
diff --git a/filter/source/config/fragments/filters/SVG___Scalable_Vector_Graphics.xcu b/filter/source/config/fragments/filters/SVG___Scalable_Vector_Graphics.xcu
new file mode 100644
index 0000000..7a1b9a5
--- /dev/null
+++ filter/source/config/fragments/filters/SVG___Scalable_Vector_Graphics.xcu
@@ -0,0 +1,13 @@
+	<node oor:name="SVG - Scalable Vector Graphics" oor:op="replace">
+		<prop oor:name="Flags"><value>IMPORT ALIEN USESOPTIONS 3RDPARTYFILTER PREFERRED</value></prop>
+		<prop oor:name="UIComponent"/>
+		<prop oor:name="FilterService"><value>com.sun.star.comp.Draw.SVGFilter</value></prop>
+		<prop oor:name="UserData"><value></value></prop>
+		<prop oor:name="UIName">
+			<value xml:lang="x-default">SVG - Scalable Vector Graphics</value>
+		</prop>
+		<prop oor:name="FileFormatVersion"><value>0</value></prop>
+		<prop oor:name="Type"><value>svg_Scalable_Vector_Graphics</value></prop>
+		<prop oor:name="TemplateName"/>
+		<prop oor:name="DocumentService"><value>com.sun.star.drawing.DrawingDocument</value></prop>
+	</node>
diff --git a/filter/source/config/fragments/types/svg_Scalable_Vector_Graphics.xcu b/filter/source/config/fragments/types/svg_Scalable_Vector_Graphics.xcu
index 31fc7fc..da37d67 100644
--- filter/source/config/fragments/types/svg_Scalable_Vector_Graphics.xcu
+++ filter/source/config/fragments/types/svg_Scalable_Vector_Graphics.xcu
@@ -1,12 +1,12 @@
 	<node oor:name="svg_Scalable_Vector_Graphics" oor:op="replace" >
-		<prop oor:name="DetectService"/>
+		<prop oor:name="DetectService"><value>com.sun.star.comp.filters.XMLFilterDetect</value></prop>
 		<prop oor:name="URLPattern"/>
 		<prop oor:name="Extensions"><value>svg</value></prop>
 		<prop oor:name="MediaType"><value>image/svg+xml</value></prop>
-		<prop oor:name="Preferred"><value>false</value></prop>
-		<prop oor:name="PreferredFilter"/>
+		<prop oor:name="Preferred"><value>true</value></prop>
+		<prop oor:name="PreferredFilter"><value>SVG - Scalable Vector Graphics</value></prop>
 		<prop oor:name="UIName">
 			<value>SVG - Scalable Vector Graphics</value>
 		</prop>
-		<prop oor:name="ClipboardFormat"/>
+		<prop oor:name="ClipboardFormat"><value>doctype:xmlns="http://www.w3.org/2000/svg"</value></prop>
 	</node>
diff --git a/filter/source/svg/delzip b/filter/source/svg/delzip
new file mode 100644
index 0000000..e69de29
diff --git a/filter/source/svgimport/COPYING.LIB b/filter/source/svgimport/COPYING.LIB
new file mode 100644
index 0000000..5ab7695
--- /dev/null
+++ filter/source/svgimport/COPYING.LIB
@@ -0,0 +1,504 @@
+		  GNU LESSER GENERAL PUBLIC LICENSE
+		       Version 2.1, February 1999
+
+ Copyright (C) 1991, 1999 Free Software Foundation, Inc.
+ 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+[This is the first released version of the Lesser GPL.  It also counts
+ as the successor of the GNU Library Public License, version 2, hence
+ the version number 2.1.]
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+Licenses are intended to guarantee your freedom to share and change
+free software--to make sure the software is free for all its users.
+
+  This license, the Lesser General Public License, applies to some
+specially designated software packages--typically libraries--of the
+Free Software Foundation and other authors who decide to use it.  You
+can use it too, but we suggest you first think carefully about whether
+this license or the ordinary General Public License is the better
+strategy to use in any particular case, based on the explanations below.
+
+  When we speak of free software, we are referring to freedom of use,
+not price.  Our General Public Licenses are designed to make sure that
+you have the freedom to distribute copies of free software (and charge
+for this service if you wish); that you receive source code or can get
+it if you want it; that you can change the software and use pieces of
+it in new free programs; and that you are informed that you can do
+these things.
+
+  To protect your rights, we need to make restrictions that forbid
+distributors to deny you these rights or to ask you to surrender these
+rights.  These restrictions translate to certain responsibilities for
+you if you distribute copies of the library or if you modify it.
+
+  For example, if you distribute copies of the library, whether gratis
+or for a fee, you must give the recipients all the rights that we gave
+you.  You must make sure that they, too, receive or can get the source
+code.  If you link other code with the library, you must provide
+complete object files to the recipients, so that they can relink them
+with the library after making changes to the library and recompiling
+it.  And you must show them these terms so they know their rights.
+
+  We protect your rights with a two-step method: (1) we copyright the
+library, and (2) we offer you this license, which gives you legal
+permission to copy, distribute and/or modify the library.
+
+  To protect each distributor, we want to make it very clear that
+there is no warranty for the free library.  Also, if the library is
+modified by someone else and passed on, the recipients should know
+that what they have is not the original version, so that the original
+author's reputation will not be affected by problems that might be
+introduced by others.
+
+  Finally, software patents pose a constant threat to the existence of
+any free program.  We wish to make sure that a company cannot
+effectively restrict the users of a free program by obtaining a
+restrictive license from a patent holder.  Therefore, we insist that
+any patent license obtained for a version of the library must be
+consistent with the full freedom of use specified in this license.
+
+  Most GNU software, including some libraries, is covered by the
+ordinary GNU General Public License.  This license, the GNU Lesser
+General Public License, applies to certain designated libraries, and
+is quite different from the ordinary General Public License.  We use
+this license for certain libraries in order to permit linking those
+libraries into non-free programs.
+
+  When a program is linked with a library, whether statically or using
+a shared library, the combination of the two is legally speaking a
+combined work, a derivative of the original library.  The ordinary
+General Public License therefore permits such linking only if the
+entire combination fits its criteria of freedom.  The Lesser General
+Public License permits more lax criteria for linking other code with
+the library.
+
+  We call this license the "Lesser" General Public License because it
+does Less to protect the user's freedom than the ordinary General
+Public License.  It also provides other free software developers Less
+of an advantage over competing non-free programs.  These disadvantages
+are the reason we use the ordinary General Public License for many
+libraries.  However, the Lesser license provides advantages in certain
+special circumstances.
+
+  For example, on rare occasions, there may be a special need to
+encourage the widest possible use of a certain library, so that it becomes
+a de-facto standard.  To achieve this, non-free programs must be
+allowed to use the library.  A more frequent case is that a free
+library does the same job as widely used non-free libraries.  In this
+case, there is little to gain by limiting the free library to free
+software only, so we use the Lesser General Public License.
+
+  In other cases, permission to use a particular library in non-free
+programs enables a greater number of people to use a large body of
+free software.  For example, permission to use the GNU C Library in
+non-free programs enables many more people to use the whole GNU
+operating system, as well as its variant, the GNU/Linux operating
+system.
+
+  Although the Lesser General Public License is Less protective of the
+users' freedom, it does ensure that the user of a program that is
+linked with the Library has the freedom and the wherewithal to run
+that program using a modified version of the Library.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.  Pay close attention to the difference between a
+"work based on the library" and a "work that uses the library".  The
+former contains code derived from the library, whereas the latter must
+be combined with the library in order to run.
+
+		  GNU LESSER GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License Agreement applies to any software library or other
+program which contains a notice placed by the copyright holder or
+other authorized party saying it may be distributed under the terms of
+this Lesser General Public License (also called "this License").
+Each licensee is addressed as "you".
+
+  A "library" means a collection of software functions and/or data
+prepared so as to be conveniently linked with application programs
+(which use some of those functions and data) to form executables.
+
+  The "Library", below, refers to any such software library or work
+which has been distributed under these terms.  A "work based on the
+Library" means either the Library or any derivative work under
+copyright law: that is to say, a work containing the Library or a
+portion of it, either verbatim or with modifications and/or translated
+straightforwardly into another language.  (Hereinafter, translation is
+included without limitation in the term "modification".)
+
+  "Source code" for a work means the preferred form of the work for
+making modifications to it.  For a library, complete source code means
+all the source code for all modules it contains, plus any associated
+interface definition files, plus the scripts used to control compilation
+and installation of the library.
+
+  Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running a program using the Library is not restricted, and output from
+such a program is covered only if its contents constitute a work based
+on the Library (independent of the use of the Library in a tool for
+writing it).  Whether that is true depends on what the Library does
+and what the program that uses the Library does.
+  
+  1. You may copy and distribute verbatim copies of the Library's
+complete source code as you receive it, in any medium, provided that
+you conspicuously and appropriately publish on each copy an
+appropriate copyright notice and disclaimer of warranty; keep intact
+all the notices that refer to this License and to the absence of any
+warranty; and distribute a copy of this License along with the
+Library.
+
+  You may charge a fee for the physical act of transferring a copy,
+and you may at your option offer warranty protection in exchange for a
+fee.
+
+  2. You may modify your copy or copies of the Library or any portion
+of it, thus forming a work based on the Library, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) The modified work must itself be a software library.
+
+    b) You must cause the files modified to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    c) You must cause the whole of the work to be licensed at no
+    charge to all third parties under the terms of this License.
+
+    d) If a facility in the modified Library refers to a function or a
+    table of data to be supplied by an application program that uses
+    the facility, other than as an argument passed when the facility
+    is invoked, then you must make a good faith effort to ensure that,
+    in the event an application does not supply such function or
+    table, the facility still operates, and performs whatever part of
+    its purpose remains meaningful.
+
+    (For example, a function in a library to compute square roots has
+    a purpose that is entirely well-defined independent of the
+    application.  Therefore, Subsection 2d requires that any
+    application-supplied function or table used by this function must
+    be optional: if the application does not supply it, the square
+    root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Library,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Library, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library
+with the Library (or with a work based on the Library) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may opt to apply the terms of the ordinary GNU General Public
+License instead of this License to a given copy of the Library.  To do
+this, you must alter all the notices that refer to this License, so
+that they refer to the ordinary GNU General Public License, version 2,
+instead of to this License.  (If a newer version than version 2 of the
+ordinary GNU General Public License has appeared, then you can specify
+that version instead if you wish.)  Do not make any other change in
+these notices.
+
+  Once this change is made in a given copy, it is irreversible for
+that copy, so the ordinary GNU General Public License applies to all
+subsequent copies and derivative works made from that copy.
+
+  This option is useful when you wish to copy part of the code of
+the Library into a program that is not a library.
+
+  4. You may copy and distribute the Library (or a portion or
+derivative of it, under Section 2) in object code or executable form
+under the terms of Sections 1 and 2 above provided that you accompany
+it with the complete corresponding machine-readable source code, which
+must be distributed under the terms of Sections 1 and 2 above on a
+medium customarily used for software interchange.
+
+  If distribution of object code is made by offering access to copy
+from a designated place, then offering equivalent access to copy the
+source code from the same place satisfies the requirement to
+distribute the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  5. A program that contains no derivative of any portion of the
+Library, but is designed to work with the Library by being compiled or
+linked with it, is called a "work that uses the Library".  Such a
+work, in isolation, is not a derivative work of the Library, and
+therefore falls outside the scope of this License.
+
+  However, linking a "work that uses the Library" with the Library
+creates an executable that is a derivative of the Library (because it
+contains portions of the Library), rather than a "work that uses the
+library".  The executable is therefore covered by this License.
+Section 6 states terms for distribution of such executables.
+
+  When a "work that uses the Library" uses material from a header file
+that is part of the Library, the object code for the work may be a
+derivative work of the Library even though the source code is not.
+Whether this is true is especially significant if the work can be
+linked without the Library, or if the work is itself a library.  The
+threshold for this to be true is not precisely defined by law.
+
+  If such an object file uses only numerical parameters, data
+structure layouts and accessors, and small macros and small inline
+functions (ten lines or less in length), then the use of the object
+file is unrestricted, regardless of whether it is legally a derivative
+work.  (Executables containing this object code plus portions of the
+Library will still fall under Section 6.)
+
+  Otherwise, if the work is a derivative of the Library, you may
+distribute the object code for the work under the terms of Section 6.
+Any executables containing that work also fall under Section 6,
+whether or not they are linked directly with the Library itself.
+
+  6. As an exception to the Sections above, you may also combine or
+link a "work that uses the Library" with the Library to produce a
+work containing portions of the Library, and distribute that work
+under terms of your choice, provided that the terms permit
+modification of the work for the customer's own use and reverse
+engineering for debugging such modifications.
+
+  You must give prominent notice with each copy of the work that the
+Library is used in it and that the Library and its use are covered by
+this License.  You must supply a copy of this License.  If the work
+during execution displays copyright notices, you must include the
+copyright notice for the Library among them, as well as a reference
+directing the user to the copy of this License.  Also, you must do one
+of these things:
+
+    a) Accompany the work with the complete corresponding
+    machine-readable source code for the Library including whatever
+    changes were used in the work (which must be distributed under
+    Sections 1 and 2 above); and, if the work is an executable linked
+    with the Library, with the complete machine-readable "work that
+    uses the Library", as object code and/or source code, so that the
+    user can modify the Library and then relink to produce a modified
+    executable containing the modified Library.  (It is understood
+    that the user who changes the contents of definitions files in the
+    Library will not necessarily be able to recompile the application
+    to use the modified definitions.)
+
+    b) Use a suitable shared library mechanism for linking with the
+    Library.  A suitable mechanism is one that (1) uses at run time a
+    copy of the library already present on the user's computer system,
+    rather than copying library functions into the executable, and (2)
+    will operate properly with a modified version of the library, if
+    the user installs one, as long as the modified version is
+    interface-compatible with the version that the work was made with.
+
+    c) Accompany the work with a written offer, valid for at
+    least three years, to give the same user the materials
+    specified in Subsection 6a, above, for a charge no more
+    than the cost of performing this distribution.
+
+    d) If distribution of the work is made by offering access to copy
+    from a designated place, offer equivalent access to copy the above
+    specified materials from the same place.
+
+    e) Verify that the user has already received a copy of these
+    materials or that you have already sent this user a copy.
+
+  For an executable, the required form of the "work that uses the
+Library" must include any data and utility programs needed for
+reproducing the executable from it.  However, as a special exception,
+the materials to be distributed need not include anything that is
+normally distributed (in either source or binary form) with the major
+components (compiler, kernel, and so on) of the operating system on
+which the executable runs, unless that component itself accompanies
+the executable.
+
+  It may happen that this requirement contradicts the license
+restrictions of other proprietary libraries that do not normally
+accompany the operating system.  Such a contradiction means you cannot
+use both them and the Library together in an executable that you
+distribute.
+
+  7. You may place library facilities that are a work based on the
+Library side-by-side in a single library together with other library
+facilities not covered by this License, and distribute such a combined
+library, provided that the separate distribution of the work based on
+the Library and of the other library facilities is otherwise
+permitted, and provided that you do these two things:
+
+    a) Accompany the combined library with a copy of the same work
+    based on the Library, uncombined with any other library
+    facilities.  This must be distributed under the terms of the
+    Sections above.
+
+    b) Give prominent notice with the combined library of the fact
+    that part of it is a work based on the Library, and explaining
+    where to find the accompanying uncombined form of the same work.
+
+  8. You may not copy, modify, sublicense, link with, or distribute
+the Library except as expressly provided under this License.  Any
+attempt otherwise to copy, modify, sublicense, link with, or
+distribute the Library is void, and will automatically terminate your
+rights under this License.  However, parties who have received copies,
+or rights, from you under this License will not have their licenses
+terminated so long as such parties remain in full compliance.
+
+  9. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Library or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Library (or any work based on the
+Library), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Library or works based on it.
+
+  10. Each time you redistribute the Library (or any work based on the
+Library), the recipient automatically receives a license from the
+original licensor to copy, distribute, link with or modify the Library
+subject to these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties with
+this License.
+
+  11. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Library at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Library by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under any
+particular circumstance, the balance of the section is intended to apply,
+and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  12. If the distribution and/or use of the Library is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Library under this License may add
+an explicit geographical distribution limitation excluding those countries,
+so that distribution is permitted only in or among countries not thus
+excluded.  In such case, this License incorporates the limitation as if
+written in the body of this License.
+
+  13. The Free Software Foundation may publish revised and/or new
+versions of the Lesser General Public License from time to time.
+Such new versions will be similar in spirit to the present version,
+but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Library
+specifies a version number of this License which applies to it and
+"any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Library does not specify a
+license version number, you may choose any version ever published by
+the Free Software Foundation.
+
+  14. If you wish to incorporate parts of the Library into other free
+programs whose distribution conditions are incompatible with these,
+write to the author to ask for permission.  For software which is
+copyrighted by the Free Software Foundation, write to the Free
+Software Foundation; we sometimes make exceptions for this.  Our
+decision will be guided by the two goals of preserving the free status
+of all derivatives of our free software and of promoting the sharing
+and reuse of software generally.
+
+			    NO WARRANTY
+
+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+           How to Apply These Terms to Your New Libraries
+
+  If you develop a new library, and you want it to be of the greatest
+possible use to the public, we recommend making it free software that
+everyone can redistribute and change.  You can do so by permitting
+redistribution under these terms (or, alternatively, under the terms of the
+ordinary General Public License).
+
+  To apply these terms, attach the following notices to the library.  It is
+safest to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least the
+"copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the library's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+
+Also add information on how to contact you by electronic and paper mail.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the library, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the
+  library `Frob' (a library for tweaking knobs) written by James Random Hacker.
+
+  <signature of Ty Coon>, 1 April 1990
+  Ty Coon, President of Vice
+
+That's all there is to it!
+
+
diff --git a/filter/source/svgimport/README b/filter/source/svgimport/README
new file mode 100644
index 0000000..ebdb1f9
--- /dev/null
+++ filter/source/svgimport/README
@@ -0,0 +1,4 @@
+Required patches:
+
+buildfix-xmloff-exportxforms.diff 
+fix-linkoo.diff
diff --git a/filter/source/svgimport/config/description.xml b/filter/source/svgimport/config/description.xml
new file mode 100644
index 0000000..96c1b4a
--- /dev/null
+++ filter/source/svgimport/config/description.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<description xmlns="http://openoffice.org/extensions/description/2006"
+    xmlns:xlink="http://www.w3.org/1999/xlink"
+	xmlns:d="http://openoffice.org/extensions/description/2006">
+	<version    value="0.3" />
+	<identifier value="com.sun.star.comp.documents.SVGImport"/>
+	<dependencies>
+		<OpenOffice.org-minimal-version value="2.4" d:name="OpenOffice.org 2.4"/>
+	</dependencies>
+</description>
diff --git a/filter/source/svgimport/config/manifest.xml b/filter/source/svgimport/config/manifest.xml
new file mode 100644
index 0000000..a845d15
--- /dev/null
+++ filter/source/svgimport/config/manifest.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?> 
+<!DOCTYPE manifest:manifest PUBLIC "-//OpenOffice.org//DTD Manifest 1.0//EN" "Manifest.dtd"> 
+<manifest:manifest xmlns:manifest="http://openoffice.org/2001/manifest"> 
+  <manifest:file-entry manifest:media-type="application/vnd.sun.star.uno-component;type=native"
+                       manifest:full-path="svgimport.unoSHARED_EXTENSION"/>
+  <manifest:file-entry manifest:media-type="application/vnd.sun.star.configuration-data" 
+					   manifest:full-path="svg_import_filter.xcu"/> 
+  <manifest:file-entry manifest:media-type="application/vnd.sun.star.configuration-data" 
+					   manifest:full-path="svg_types.xcu"/> 
+</manifest:manifest>
diff --git a/filter/source/svgimport/config/svg_import_filter.xcu b/filter/source/svgimport/config/svg_import_filter.xcu
new file mode 100644
index 0000000..8324b50
--- /dev/null
+++ filter/source/svgimport/config/svg_import_filter.xcu
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<oor:component-data xmlns:oor="http://openoffice.org/2001/registry" xmlns:xs="http://www.w3.org/2001/XMLSchema" oor:name="Filter" oor:package="org.openoffice.TypeDetection">
+ <node oor:name="Filters">
+  <node oor:name="draw_svg_import" oor:type="xs:string" oor:op="replace">
+   <prop oor:name="DocumentService">
+    <value>com.sun.star.drawing.DrawingDocument</value>
+   </prop>
+   <prop oor:name="FileFormatVersion" oor:type="xs:int">
+    <value>0</value>
+   </prop>
+   <prop oor:name="FilterService" oor:type="xs:string">
+    <!-- stacks filters for XML import. see UserData below. 
+		 the _Writer_ in the impl name is a misnomer -->
+    <value>com.sun.star.comp.Writer.XmlFilterAdaptor</value>
+   </prop>
+   <prop oor:name="Flags" oor:type="oor:string-list">
+    <value>3RDPARTYFILTER ALIEN IMPORT PREFERRED</value>
+   </prop>
+   <prop oor:name="Type" oor:type="xs:string">
+    <value>svg_Scalable_Vector_Graphics</value>
+   </prop>
+   <prop oor:name="UIName">
+    <value xml:lang="x-default">SVG - Scalable Vector Graphics</value>
+   </prop>
+   <prop oor:name="TemplateName"/>
+   <prop oor:name="UIComponent"/>
+   <prop oor:name="UserData" oor:type="oor:string-list">
+    <!-- converter service, ,import service,export service, , ,bool for pretty printing on or off -->
+    <value oor:separator=",">com.sun.star.comp.documents.SVGImport,,com.sun.star.comp.Draw.XMLOasisImporter,,,,true</value>
+   </prop>
+  </node>
+ </node>
+</oor:component-data>
diff --git a/filter/source/svgimport/config/svg_types.xcu b/filter/source/svgimport/config/svg_types.xcu
new file mode 100644
index 0000000..17724fd
--- /dev/null
+++ filter/source/svgimport/config/svg_types.xcu
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE oor:component-data SYSTEM "../../../../component-update.dtd">
+<oor:component-data xmlns:oor="http://openoffice.org/2001/registry" xmlns:xs="http://www.w3.org/2001/XMLSchema" oor:package="org.openoffice.TypeDetection" oor:name="Types">
+	<node oor:name="Types">
+	<node oor:name="svg_Scalable_Vector_Graphics" oor:op="replace" >
+		<prop oor:name="DetectService"><value>com.sun.star.comp.filters.XMLFilterDetect</value></prop>
+		<prop oor:name="URLPattern"/>
+		<prop oor:name="Extensions"><value>svg</value></prop>
+		<prop oor:name="MediaType"><value>image/svg+xml</value></prop>
+		<prop oor:name="Preferred"><value>true</value></prop>
+		<prop oor:name="PreferredFilter"><value>draw_svg_import</value></prop>
+		<prop oor:name="UIName">
+			<value>SVG - Scalable Vector Graphics</value>
+		</prop>
+		<prop oor:name="ClipboardFormat"><value>doctype:xmlns="http://www.w3.org/2000/svg"</value></prop>
+	</node>
+	</node>
+</oor:component-data>
diff --git a/filter/source/svgimport/delzip b/filter/source/svgimport/delzip
new file mode 100644
index 0000000..e69de29
diff --git a/filter/source/svgimport/exports.map b/filter/source/svgimport/exports.map
new file mode 100644
index 0000000..acb4748
--- /dev/null
+++ filter/source/svgimport/exports.map
@@ -0,0 +1,9 @@
+SVGFILTER_1_0 {
+        global:
+                component_getImplementationEnvironment;
+                component_getFactory;
+                component_writeInfo;
+
+        local:
+                *;
+}; 
diff --git a/filter/source/svgimport/gentoken.pl b/filter/source/svgimport/gentoken.pl
new file mode 100644
index 0000000..124457f
--- /dev/null
+++ filter/source/svgimport/gentoken.pl
@@ -0,0 +1,58 @@
+# from oox/source/token - should really put this into solenv
+
+$ARGV0 = shift @ARGV;
+$ARGV1 = shift @ARGV;
+$ARGV2 = shift @ARGV;
+
+open ( TOKENS, $ARGV0 ) || die "can't open token file: $!";
+my %tokens;
+
+while ( defined ($line = <TOKENS>) )
+{
+	if( !($line =~ /^#/) )
+	{
+		chomp($line);
+		@token = split(/\s+/,$line);
+		if ( not defined ($token[1]) )
+		{
+			$token[1] = "XML_".$token[0];
+			$token[1] =~ tr/\-\.\:/___/;
+			$token[1] =~ s/\+/PLUS/g;
+			$token[1] =~ s/\-/MINUS/g;
+		}
+
+		$tokens{$token[0]} = uc($token[1]);
+	}
+}
+close ( TOKENS );
+
+open ( HXX, ">$ARGV1" ) || die "can't open tokens.hxx file: $!";
+open ( GPERF, ">$ARGV2" ) || die "can't open tokens.gperf file: $!";
+
+print ( GPERF "%language=C++\n" );
+print ( GPERF "%global-table\n" );
+print ( GPERF "%null-strings\n" );
+print ( GPERF "%struct-type\n" );
+print ( GPERF "struct xmltoken\n" );
+print ( GPERF "{\n" );
+print ( GPERF "  const sal_Char *name; sal_Int32 nToken; \n" );
+print ( GPERF "};\n" );
+print ( GPERF "%%\n" );
+
+print ( HXX "#ifndef INCLUDED_AUTOGEN_TOKEN_HXX\n" );
+print ( HXX "#define INCLUDED_AUTOGEN_TOKEN_HXX\n\n" );
+print ( HXX "#include <sal/types.h>\n\n" );
+
+$i = 0;
+foreach( sort(keys(%tokens)) )
+{
+	print( HXX "const sal_Int32 $tokens{$_} = $i;\n" );
+	print( GPERF "$_,$tokens{$_}\n" );
+	$i = $i + 1;
+}
+print ( GPERF "%%\n" );
+print ( HXX "const sal_Int32 XML_TOKEN_COUNT = $i;\n" );
+print ( HXX "const sal_Int32 XML_TOKEN_INVALID = -1;\n\n" );
+print ( HXX "#endif\n" );
+close ( HXX );
+close ( GPERF );
diff --git a/filter/source/svgimport/gfxtypes.hxx b/filter/source/svgimport/gfxtypes.hxx
new file mode 100644
index 0000000..eb6b80f
--- /dev/null
+++ filter/source/svgimport/gfxtypes.hxx
@@ -0,0 +1,309 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_GFXTYPES_HXX
+#define INCLUDED_GFXTYPES_HXX
+
+#include <basegfx/range/b2drange.hxx>
+#include <basegfx/matrix/b2dhommatrix.hxx>
+#include <basegfx/polygon/b2dlinegeometry.hxx>
+
+#include <hash_set>
+#include <hash_map>
+
+namespace svgi
+{
+
+struct ARGBColor
+{
+    double toDoubleColor( sal_uInt8 val ) { return val/255.0; }
+
+    ARGBColor() : a(0.0), r(0.0), g(0.0), b(0.0)
+    {}
+    explicit ARGBColor(double fGrey) : a(1.0), r(fGrey), g(fGrey), b(fGrey)
+    {}
+    ARGBColor( double r_, double g_, double b_ ) : 
+        a(1.0), r(r_), g(g_), b(b_)
+    {}
+    ARGBColor( double a_, double r_, double g_, double b_ ) : 
+        a(a_), r(r_), g(g_), b(b_)
+    {}
+    ARGBColor( int r_, int g_, int b_ ) : 
+        a(1.0),
+        r(toDoubleColor(r_)), 
+        g(toDoubleColor(g_)), 
+        b(toDoubleColor(b_))
+    {}
+    ARGBColor( int a_, int r_, int g_, int b_ ) : 
+        a(toDoubleColor(a_)), 
+        r(toDoubleColor(r_)), 
+        g(toDoubleColor(g_)), 
+        b(toDoubleColor(b_))
+    {}
+    double a;
+    double r;
+    double g;
+    double b;
+};
+inline bool operator==( const ARGBColor& rLHS, const ARGBColor& rRHS )
+{ return rLHS.a==rRHS.a && rLHS.r==rRHS.r && rLHS.g==rRHS.g && rLHS.b==rRHS.b; }
+
+struct GradientStop
+{
+    GradientStop() : maStopColor(), mnStopPosition(0.0)
+    {}
+    ARGBColor maStopColor;
+    double    mnStopPosition;
+};
+inline bool operator==( const GradientStop& rLHS, const GradientStop& rRHS )
+{ return rLHS.mnStopPosition==rRHS.mnStopPosition && rLHS.maStopColor==rRHS.maStopColor; }
+
+struct Gradient
+{
+    Gradient() : maStops(), mbBoundingBoxUnits(false)
+    {}
+    std::vector<GradientStop> maStops;
+    bool                      mbBoundingBoxUnits;
+};
+
+inline bool operator==( const Gradient& rLHS, const Gradient& rRHS )
+{ return rLHS.mbBoundingBoxUnits==rRHS.mbBoundingBoxUnits && rLHS.maStops==rRHS.maStops; }
+
+enum PaintType
+{
+    NONE,
+    SOLID,
+    GRADIENT
+};
+
+enum FillRule
+{
+    NON_ZERO,
+    EVEN_ODD
+};
+
+enum TextAlign
+{
+    BEFORE,
+    CENTER,
+    AFTER
+};
+
+enum CapStyle
+{
+    BUTT,
+    RECT,
+    ROUND
+};
+
+enum FontStyle
+{
+    STYLE_NORMAL,
+    STYLE_OBLIQUE,
+    STYLE_ITALIC
+};
+
+enum FontVariant
+{
+    VARIANT_NORMAL,
+    VARIANT_SMALLCAPS
+};
+
+struct State
+{
+    State() :
+        maCTM(),
+        maTransform(),
+        maViewport(),
+        maViewBox(),
+        maFontFamily(), // app-default
+        mnFontSize(12.0),
+        meFontStyle(STYLE_NORMAL),
+        meFontVariant(VARIANT_NORMAL),
+        mnFontWeight(400.0),
+        meTextAnchor(BEFORE),
+        meTextDisplayAlign(BEFORE),
+        mnTextLineIncrement(0.0),
+        maCurrentColor(1.0),
+        mbVisibility(true),
+        meFillType(SOLID),
+        mnFillOpacity(1.0),
+        meStrokeType(NONE),
+        mnStrokeOpacity(1.0),
+        meViewportFillType(NONE),
+        mnViewportFillOpacity(1.0),
+        maFillColor(0.0),
+        maFillGradient(),
+        meFillRule(NON_ZERO),
+        maStrokeColor(0.0),
+        maStrokeGradient(),
+        maDashArray(),
+        mnDashOffset(0.0),
+        meLineCap(BUTT),
+        meLineJoin(basegfx::B2DLINEJOIN_MITER),
+        mnMiterLimit(4.0),
+        mnStrokeWidth(1.0),
+        maViewportFillColor(1.0),
+        maViewportFillGradient(),
+        mnStyleId(0)
+    {}
+
+    basegfx::B2DHomMatrix       maCTM;
+    basegfx::B2DHomMatrix       maTransform;
+    basegfx::B2DRange           maViewport;
+    basegfx::B2DRange           maViewBox;
+
+    rtl::OUString               maFontFamily;
+    /** Absolute: xx-small=6.94 | x-small=8.33 | small=10 | medium=12 | large=14.4 | x-large=17.28 | xx-large=20.736
+
+        Relative(to parent): larger (enlarge by 1.2)
+                             smaller (shrink by 1.2)
+
+     */
+    double                      mnFontSize;
+    FontStyle                   meFontStyle;
+    FontVariant                 meFontVariant;
+    double                      mnFontWeight;
+
+    TextAlign                   meTextAnchor; // text-anchor
+    TextAlign                   meTextDisplayAlign; // display-align
+    double                      mnTextLineIncrement; // 0.0 means auto
+
+    ARGBColor                   maCurrentColor;
+    bool                        mbVisibility;
+
+    PaintType                   meFillType;
+    double                      mnFillOpacity;
+    PaintType                   meStrokeType;
+    double                      mnStrokeOpacity;
+    PaintType                   meViewportFillType;
+    double                      mnViewportFillOpacity;
+
+    ARGBColor                   maFillColor;
+    Gradient                    maFillGradient;
+    FillRule                    meFillRule;
+
+    ARGBColor                   maStrokeColor;
+    Gradient                    maStrokeGradient;
+    std::vector<double>         maDashArray;
+    double                      mnDashOffset;
+    CapStyle                    meLineCap;
+    basegfx::B2DLineJoin        meLineJoin;
+    double                      mnMiterLimit;
+    double                      mnStrokeWidth;
+
+    ARGBColor                   maViewportFillColor;
+    Gradient                    maViewportFillGradient;
+
+    sal_Int32                   mnStyleId;
+};
+
+inline bool operator==(const State& rLHS, const State& rRHS )
+{
+    return rLHS.maCTM==rRHS.maCTM &&
+        rLHS.maTransform==rRHS.maTransform &&
+        rLHS.maViewport==rRHS.maViewport &&
+        rLHS.maViewBox==rRHS.maViewBox &&
+        rLHS.maFontFamily==rRHS.maFontFamily &&
+        rLHS.mnFontSize==rRHS.mnFontSize &&
+        rLHS.meFontStyle==rRHS.meFontStyle &&
+        rLHS.meFontVariant==rRHS.meFontVariant &&
+        rLHS.mnFontWeight==rRHS.mnFontWeight &&
+        rLHS.meTextAnchor==rRHS.meTextAnchor &&
+        rLHS.meTextDisplayAlign==rRHS.meTextDisplayAlign &&
+        rLHS.mnTextLineIncrement==rRHS.mnTextLineIncrement &&
+        rLHS.maCurrentColor==rRHS.maCurrentColor &&
+        rLHS.mbVisibility==rRHS.mbVisibility &&
+        rLHS.meFillType==rRHS.meFillType &&
+        rLHS.mnFillOpacity==rRHS.mnFillOpacity &&
+        rLHS.meStrokeType==rRHS.meStrokeType &&
+        rLHS.mnStrokeOpacity==rRHS.mnStrokeOpacity &&
+        rLHS.meViewportFillType==rRHS.meViewportFillType &&
+        rLHS.mnViewportFillOpacity==rRHS.mnViewportFillOpacity &&
+        rLHS.maFillColor==rRHS.maFillColor &&
+        rLHS.maFillGradient==rRHS.maFillGradient &&
+        rLHS.meFillRule==rRHS.meFillRule &&
+        rLHS.maStrokeColor==rRHS.maStrokeColor &&
+        rLHS.maStrokeGradient==rRHS.maStrokeGradient &&
+        rLHS.maDashArray==rRHS.maDashArray &&
+        rLHS.mnDashOffset==rRHS.mnDashOffset &&
+        rLHS.meLineCap==rRHS.meLineCap &&
+        rLHS.meLineJoin==rRHS.meLineJoin &&
+        rLHS.mnMiterLimit==rRHS.mnMiterLimit &&
+        rLHS.mnStrokeWidth==rRHS.mnStrokeWidth &&
+        rLHS.maViewportFillColor==rRHS.maViewportFillColor &&
+        rLHS.maViewportFillGradient==rRHS.maViewportFillGradient;
+}
+        
+struct StateHash
+{
+    size_t operator()(const State& rState ) const
+    {
+        return size_t(rState.maCTM.get( 0, 0 ))
+            ^  size_t(rState.maCTM.get( 1, 0 ))
+            ^  size_t(rState.maCTM.get( 0, 1 ))
+            ^  size_t(rState.maCTM.get( 1, 1 ))
+            ^  size_t(rState.maCTM.get( 0, 2 ))
+            ^  size_t(rState.maCTM.get( 1, 2 ))
+            ^  size_t(rState.maViewport.getWidth())
+            ^  size_t(rState.maViewport.getHeight())
+            ^  size_t(rState.maViewBox.getWidth())
+            ^  size_t(rState.maViewBox.getHeight())
+            ^  size_t(rState.maFontFamily.hashCode())
+            ^  size_t(rState.mnFontSize)
+            ^  size_t(rState.meFontStyle)
+            ^  size_t(rState.meFontVariant)
+            ^  size_t(rState.mnFontWeight)
+            ^  size_t(rState.meTextAnchor)
+            ^  size_t(rState.meTextDisplayAlign)
+            ^  size_t(rState.mnTextLineIncrement)
+            ^  size_t(rState.mbVisibility)
+            ^  size_t(rState.meFillType)
+            ^  size_t(rState.mnFillOpacity)
+            ^  size_t(rState.meStrokeType)
+            ^  size_t(rState.mnStrokeOpacity)
+            ^  size_t(rState.meViewportFillType)
+            ^  size_t(rState.mnViewportFillOpacity)
+            ^  size_t(rState.maFillColor.a)
+            ^  size_t(rState.maFillColor.r)
+            ^  size_t(rState.maFillColor.g)
+            ^  size_t(rState.maFillColor.b)
+            ^  size_t(rState.maFillGradient.maStops.size())
+            ^  size_t(rState.meFillRule)
+            ^  size_t(rState.maStrokeColor.a)
+            ^  size_t(rState.maStrokeColor.r)
+            ^  size_t(rState.maStrokeColor.g)
+            ^  size_t(rState.maStrokeColor.b)
+            ^  size_t(rState.maStrokeGradient.maStops.size())
+            ^  size_t(rState.maDashArray.size())
+            ^  size_t(rState.mnDashOffset)
+            ^  size_t(rState.meLineCap)
+            ^  size_t(rState.meLineJoin)
+            ^  size_t(rState.mnMiterLimit)
+            ^  size_t(rState.mnStrokeWidth)
+            ^  size_t(rState.maViewportFillColor.a)
+            ^  size_t(rState.maViewportFillColor.r)
+            ^  size_t(rState.maViewportFillColor.g)
+            ^  size_t(rState.maViewportFillColor.b)
+            ^  size_t(rState.maViewportFillGradient.maStops.size());
+    }
+};
+
+typedef std::hash_set<State, StateHash> StatePool;
+typedef std::hash_map<sal_Int32, State> StateMap;
+
+} // namespace svgi
+
+#endif
diff --git a/filter/source/svgimport/makefile.mk b/filter/source/svgimport/makefile.mk
new file mode 100644
index 0000000..45eac4b
--- /dev/null
+++ filter/source/svgimport/makefile.mk
@@ -0,0 +1,136 @@
+#*************************************************************************
+#
+#    OpenOffice.org - a multi-platform office productivity suite
+#
+#    Author:
+#      Fridrich Strba  <fridrich.strba@bluewin.ch>
+#      Thorsten Behrens <tbehrens@novell.com>	   	
+#
+#      Copyright (C) 2008, Novell Inc.
+#      Parts copyright 2005 by Sun Microsystems, Inc.
+#
+#   The Contents of this file are made available subject to
+#   the terms of GNU Lesser General Public License Version 2.1.
+#
+#*************************************************************************
+
+PRJ=..$/..
+
+PRJNAME=filter
+TARGET=svgimport
+ENABLE_EXCEPTIONS=TRUE
+
+# --- Settings ----------------------------------
+
+.INCLUDE :  settings.mk
+.INCLUDE :	libs.mk
+.INCLUDE :  svgisettings.pmk
+DLLPRE=
+
+.IF "$(verbosetrace)"!="" || "$(VERBOSETRACE)"!=""
+CDEFS+= -DVERBOSE
+.ENDIF
+
+# --- Types -------------------------------------
+
+SLOFILES=	$(SLO)$/odfserializer.obj   \
+			$(SLO)$/parserfragments.obj	\
+			$(SLO)$/saxattrlist.obj		\
+			$(SLO)$/services.obj		\
+			$(SLO)$/svgimporter.obj		\
+			$(SLO)$/svgreader.obj       \
+			$(SLO)$/tokenmap.obj        \
+			$(SLO)$/units.obj
+
+# --- Library -----------------------------------
+
+SHL1TARGET=$(TARGET).uno
+
+SHL1STDLIBS=\
+	$(BASEGFXLIB)		\
+	$(UNOTOOLSLIB)		\
+	$(COMPHELPERLIB)	\
+	$(CPPUHELPERLIB)	\
+	$(CPPULIB)			\
+	$(SALLIB)
+
+SHL1DEPN=
+SHL1IMPLIB=	i$(SHL1TARGET)
+SHL1LIBS=	$(SLB)$/$(TARGET).lib
+SHL1VERSIONMAP=exports.map
+SHL1DEF=	$(MISC)$/$(SHL1TARGET).def
+
+DEF1NAME=$(SHL1TARGET)
+
+# --- Extension packaging ------------------------------------------
+
+common_build_zip=
+
+DESCRIPTION:=$(MISC)$/svgimport$/description.xml
+
+.IF "$(GUI)" == "WIN" || "$(GUI)" == "WNT"
+PACKLICS:=$(foreach,i,$(alllangiso) $(MISC)$/svgimport$/registration$/license_$i.txt)
+.ELSE
+PACKLICS:=$(foreach,i,$(alllangiso) $(MISC)$/svgimport$/registration$/LICENSE_$i)
+.ENDIF
+
+COMPONENT_FILES= \
+    $(MISC)$/svgimport$/svg_import_filter.xcu \
+    $(MISC)$/svgimport$/svg_types.xcu
+
+COMPONENT_MANIFEST= \
+	$(MISC)$/svgimport$/META-INF$/manifest.xml
+
+COMPONENT_LIBRARY= \
+    $(MISC)$/svgimport$/$(DLLPRE)$(SHL1TARGET)$(DLLPOST)
+
+ZIP1DEPS=		$(PACKLICS) $(DESCRIPTION) $(COMPONENT_MANIFEST) $(COMPONENT_FILES) $(COMPONENT_LIBRARY) makefile.mk
+ZIP1TARGET=		svgimport
+ZIP1DIR=		$(MISC)$/svgimport
+ZIP1EXT=		.oxt
+ZIP1FLAGS=-r
+ZIP1LIST=		*
+
+# --- Targets ----------------------------------
+
+.INCLUDE : target.mk
+
+# Generate gperf files - from oox/source/token
+$(INCCOM)$/tokens.hxx $(MISC)$/tokens.gperf : tokens.txt gentoken.pl
+		$(PERL) gentoken.pl tokens.txt $(INCCOM)$/tokens.hxx $(MISC)$/tokens.gperf
+
+$(INCCOM)$/tokens.cxx : $(MISC)$/tokens.gperf makefile.mk
+		gperf --compare-strncmp -C -m 20 $(MISC)$/tokens.gperf | $(SED) -e "s/(char\*)0/(char\*)0, 0/g" >$(INCCOM)$/tokens.cxx
+
+$(SLO)$/tokenmap.obj : $(INCCOM)$/tokens.cxx $(INCCOM)$/tokens.hxx
+
+# Pack extension
+$(COMPONENT_MANIFEST) : config$/$$(@:f)
+	@@-$(MKDIRHIER) $(@:d)
+    $(TYPE) $< | $(SED) "s/SHARED_EXTENSION/$(DLLPOST)/" | $(SED) "s/EXEC_EXTENSION/$(EXECPOST)/" > $@
+
+# TODO(Q3): strip the binary?
+$(COMPONENT_LIBRARY) : $(DLLDEST)$/$$(@:f)
+	@@-$(MKDIRHIER) $(@:d)
+    $(COPY) $< $@
+
+$(PACKLICS) : $(SOLARBINDIR)$/osl$/LICENSE$$(@:b:s/_/./:e:s/./_/)$$(@:e)
+	@@-$(MKDIRHIER) $(@:d)
+	$(GNUCOPY) $< $@
+
+$(MISC)$/svgimport$/%.xcu : config$/%.xcu
+	@@-$(MKDIRHIER) $(@:d)
+	$(GNUCOPY) $< $@
+.INCLUDE .IGNORE : $(MISC)$/$(TARGET)_lang_track.mk
+.IF "$(LAST_WITH_LANG)"!="$(WITH_LANG)"
+PHONYDESC=.PHONY
+.ENDIF			# "$(LAST_WITH_LANG)"!="$(WITH_LANG)"
+$(DESCRIPTION) $(PHONYDESC) : config$/$$(@:f)
+	@@-$(MKDIRHIER) $(@:d)
+.IF "$(GUI)" == "WIN" || "$(GUI)" == "WNT"
+	$(PERL) $(SOLARENV)$/bin$/licinserter.pl $< registration/license_xxx.txt $(MISC)/description.tmp
+.ELSE	
+	$(PERL) $(SOLARENV)$/bin$/licinserter.pl $< registration/LICENSE_xxx $(MISC)/description.tmp
+.ENDIF	
+	$(SED) -e " s/IDENT_PLACEHOLDER/$(SVGI_IMPLEMENTATION_IDENTIFIER)/" $(MISC)/description.tmp > $@ 
+	@echo LAST_WITH_LANG=$(WITH_LANG) > $(MISC)$/$(TARGET)_lang_track.mk
diff --git a/filter/source/svgimport/odfserializer.cxx b/filter/source/svgimport/odfserializer.cxx
new file mode 100644
index 0000000..7686223
--- /dev/null
+++ filter/source/svgimport/odfserializer.cxx
@@ -0,0 +1,140 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "odfserializer.hxx"
+#include <osl/diagnose.h>
+#include <rtl/ustrbuf.hxx>
+#include <cppuhelper/compbase1.hxx>
+#include <cppuhelper/basemutex.hxx>
+#include <com/sun/star/uno/Sequence.hxx>
+#include <boost/noncopyable.hpp>
+
+using namespace ::com::sun::star;
+
+namespace svgi
+{
+
+typedef ::cppu::WeakComponentImplHelper1< 
+    com::sun::star::xml::sax::XDocumentHandler> ODFSerializerBase;
+
+class ODFSerializer : private cppu::BaseMutex,
+                public ODFSerializerBase,
+                boost::noncopyable
+{
+public:
+    explicit ODFSerializer(const uno::Reference<io::XOutputStream>& xOut) :
+        ODFSerializerBase(m_aMutex),
+        m_xOutStream(xOut),
+        m_aLineFeed(1),
+        m_aBuf()
+    {
+        m_aLineFeed[0] = '\n';
+    }
+
+    virtual void SAL_CALL startDocument(  ) throw (xml::sax::SAXException, uno::RuntimeException);
+    virtual void SAL_CALL endDocument(  ) throw (xml::sax::SAXException, uno::RuntimeException);
+    virtual void SAL_CALL startElement( const ::rtl::OUString& aName, const uno::Reference< xml::sax::XAttributeList >& xAttribs ) throw (xml::sax::SAXException, uno::RuntimeException);
+    virtual void SAL_CALL endElement( const ::rtl::OUString& aName ) throw (xml::sax::SAXException, uno::RuntimeException);
+    virtual void SAL_CALL characters( const ::rtl::OUString& aChars ) throw (xml::sax::SAXException, uno::RuntimeException);
+    virtual void SAL_CALL ignorableWhitespace( const ::rtl::OUString& aWhitespaces ) throw (xml::sax::SAXException, uno::RuntimeException);
+    virtual void SAL_CALL processingInstruction( const ::rtl::OUString& aTarget, const ::rtl::OUString& aData ) throw (xml::sax::SAXException, uno::RuntimeException);
+    virtual void SAL_CALL setDocumentLocator( const uno::Reference< xml::sax::XLocator >& xLocator ) throw (xml::sax::SAXException, uno::RuntimeException);
+
+private:
+    uno::Reference<io::XOutputStream> m_xOutStream;
+    uno::Sequence<sal_Int8>           m_aLineFeed;
+    uno::Sequence<sal_Int8>           m_aBuf;
+};
+
+void SAL_CALL ODFSerializer::startDocument(  ) throw (xml::sax::SAXException, uno::RuntimeException)
+{
+    OSL_PRECOND(m_xOutStream.is(), "ODFSerializer(): invalid output stream");
+
+    rtl::OUStringBuffer aElement;
+    aElement.appendAscii("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
+    characters(aElement.makeStringAndClear());
+}
+
+void SAL_CALL ODFSerializer::endDocument() throw (xml::sax::SAXException, uno::RuntimeException)
+{}
+
+void SAL_CALL ODFSerializer::startElement( const ::rtl::OUString& aName, 
+                                           const uno::Reference< xml::sax::XAttributeList >& xAttribs ) throw (xml::sax::SAXException, uno::RuntimeException)
+{
+    rtl::OUStringBuffer aElement;
+    aElement.appendAscii("<");
+    aElement.append(aName);
+    aElement.appendAscii(" ");
+
+    const sal_Int16 nLen=xAttribs->getLength();
+    for( sal_Int16 i=0; i<nLen; ++i )
+    {
+        rtl::OUStringBuffer aAttribute;
+        aElement.append(xAttribs->getNameByIndex(i));
+        aElement.appendAscii("=\"");
+        aElement.append(xAttribs->getValueByIndex(i));
+        aElement.appendAscii("\" ");
+    }
+
+    aElement.appendAscii(">");
+    characters(aElement.makeStringAndClear());
+}
+
+void SAL_CALL ODFSerializer::endElement( const ::rtl::OUString& aName ) throw (xml::sax::SAXException, uno::RuntimeException)
+{
+    rtl::OUStringBuffer aElement;
+    aElement.appendAscii("</");
+    aElement.append(aName);
+    aElement.appendAscii(">");
+    characters(aElement.makeStringAndClear());
+}
+
+void SAL_CALL ODFSerializer::characters( const ::rtl::OUString& aChars ) throw (xml::sax::SAXException, uno::RuntimeException)
+{
+    const rtl::OString aStr = rtl::OUStringToOString(aChars,
+                                                     RTL_TEXTENCODING_UTF8);
+    const sal_Int32 nLen( aStr.getLength() );
+    m_aBuf.realloc( nLen );
+    const sal_Char* pStr = aStr.getStr();
+    std::copy(pStr,pStr+nLen,m_aBuf.getArray());
+
+    m_xOutStream->writeBytes(m_aBuf);
+    // TODO(F1): Make pretty printing configurable
+    m_xOutStream->writeBytes(m_aLineFeed);
+}
+
+void SAL_CALL ODFSerializer::ignorableWhitespace( const ::rtl::OUString& aWhitespaces ) throw (xml::sax::SAXException, uno::RuntimeException)
+{
+    // TODO(F1): Make pretty printing configurable
+    characters(aWhitespaces);
+}
+
+void SAL_CALL ODFSerializer::processingInstruction( const ::rtl::OUString&, 
+                                                    const ::rtl::OUString& ) throw (xml::sax::SAXException, uno::RuntimeException)
+{}
+
+void SAL_CALL ODFSerializer::setDocumentLocator( const uno::Reference< xml::sax::XLocator >& ) throw (xml::sax::SAXException, uno::RuntimeException)
+{}
+
+uno::Reference< xml::sax::XDocumentHandler> createSerializer(const uno::Reference<io::XOutputStream>& xOut )
+{
+    return uno::Reference<xml::sax::XDocumentHandler>(new ODFSerializer(xOut));
+}
+
+}
diff --git a/filter/source/svgimport/odfserializer.hxx b/filter/source/svgimport/odfserializer.hxx
new file mode 100644
index 0000000..f2ab4a3
--- /dev/null
+++ filter/source/svgimport/odfserializer.hxx
@@ -0,0 +1,31 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_SVG_ODFSERIALIZER_HXX
+#define INCLUDED_SVG_ODFSERIALIZER_HXX
+
+#include <com/sun/star/uno/Reference.hxx>
+#include <com/sun/star/xml/sax/XDocumentHandler.hpp>
+#include <com/sun/star/io/XOutputStream.hpp>
+
+namespace svgi
+{
+    /// Creates a XDocumentHandler that serializes directly to an XOutputStream
+    ::com::sun::star::uno::Reference< com::sun::star::xml::sax::XDocumentHandler>
+        createSerializer(const ::com::sun::star::uno::Reference<com::sun::star::io::XOutputStream>& );
+}
+
+#endif // _COM_SUN_STAR_XML_SAX_XDOCUMENTHANDLER_HDL_
diff --git a/filter/source/svgimport/parserfragments.cxx b/filter/source/svgimport/parserfragments.cxx
new file mode 100644
index 0000000..790281d
--- /dev/null
+++ filter/source/svgimport/parserfragments.cxx
@@ -0,0 +1,344 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "parserfragments.hxx"
+#include "gfxtypes.hxx"
+
+#include <basegfx/tools/canvastools.hxx>
+#include <com/sun/star/geometry/AffineMatrix2D.hpp>
+
+#include <boost/bind.hpp>
+#include <boost/spirit.hpp>
+#include <numeric>
+#include <algorithm>
+
+using namespace ::com::sun::star;
+
+namespace svgi
+{
+
+inline sal_Int8 hex2int( char val )
+{
+    return val <= '9' ? val-'0' : val+10-'A';
+}
+
+void setFourBitColor( double& rChannel, char nChar )
+{
+    const sal_Int8 nVal(hex2int(nChar));
+    rChannel = (nVal*16+nVal)/255.0;
+}
+
+void setEightBitColor( double& rChannel, const char* pStart, const char* )
+{
+    const sal_Int8 nVal0(hex2int(pStart[0]));
+    const sal_Int8 nVal1(hex2int(pStart[1]));
+    rChannel = (nVal0*16+nVal1)/255.0;
+}
+
+void setIntColor( double& rChannel, sal_uInt8 nVal )
+{
+    rChannel = nVal/255.0;
+}
+
+void calcRotation(std::vector<geometry::AffineMatrix2D>& rTransforms,
+                  geometry::AffineMatrix2D&              rCurrTransform,
+                  double                                 fRotationAngle)
+{
+    ::basegfx::B2DHomMatrix aCurr;
+    aCurr.translate(-rCurrTransform.m02,-rCurrTransform.m12);
+    aCurr.rotate(fRotationAngle*M_PI/180);
+    aCurr.translate(rCurrTransform.m02,rCurrTransform.m12);
+
+    rTransforms.push_back(
+        basegfx::unotools::affineMatrixFromHomMatrix(
+            rCurrTransform,
+            aCurr));
+}
+
+void calcSkewX(std::vector<geometry::AffineMatrix2D>& rTransforms,
+               double                                 fSkewAngle)
+{
+    geometry::AffineMatrix2D aMat(1.0,0.0,0.0,
+                                  tan(fSkewAngle),1.0,0.0);
+    rTransforms.push_back(aMat);
+}
+
+void calcSkewY(std::vector<geometry::AffineMatrix2D>& rTransforms,
+               double                                 fSkewAngle)
+{
+    geometry::AffineMatrix2D aMat(1.0,tan(fSkewAngle),0.0,
+                                  0.0,1.0,0.0);
+    rTransforms.push_back(aMat);
+}
+
+geometry::AffineMatrix2D multiplyMatrix( const geometry::AffineMatrix2D& rLHS,
+                                         const geometry::AffineMatrix2D& rRHS )
+{
+    basegfx::B2DHomMatrix aLHS;
+    basegfx::B2DHomMatrix aRHS;
+
+    basegfx::unotools::homMatrixFromAffineMatrix(aLHS,rLHS);
+    basegfx::unotools::homMatrixFromAffineMatrix(aRHS,rRHS);
+
+    aRHS*=aLHS;
+
+    geometry::AffineMatrix2D aRet;
+    return basegfx::unotools::affineMatrixFromHomMatrix(aRet,aRHS);
+}
+
+bool parseColor( const char* sColor, ARGBColor& rColor  )
+{
+    using namespace ::boost::spirit;
+
+    int_parser<sal_uInt8,16,1,3> byte_p;
+
+    return parse(sColor,
+        //  Begin grammar
+        (
+            // the #rgb form
+            ('#' >> digit_p[boost::bind(&setFourBitColor,
+                                        boost::ref(rColor.r),_1)] 
+                 >> digit_p[boost::bind(&setFourBitColor,
+                                        boost::ref(rColor.g),_1)] 
+                 >> digit_p[boost::bind(&setFourBitColor,
+                                        boost::ref(rColor.b),_1)]) 
+          |
+            // the #rrggbb form
+            ('#' >> (digit_p >> digit_p)[boost::bind(&setEightBitColor,
+                                                     boost::ref(rColor.r),_1,_2)]
+                 >> (digit_p >> digit_p)[boost::bind(&setEightBitColor,
+                                                     boost::ref(rColor.g),_1,_2)]
+                 >> (digit_p >> digit_p)[boost::bind(&setEightBitColor,
+                                                     boost::ref(rColor.b),_1,_2)]) 
+          |
+            // rgb() form
+            (str_p("rgb") 
+             >> confix_p('(', 
+                         // rgb(int,int,int)
+                         (byte_p[boost::bind(&setIntColor,
+                                             boost::ref(rColor.r),_1)] >> ',' >>
+                          byte_p[boost::bind(&setIntColor,
+                                             boost::ref(rColor.r),_1)] >> ',' >>
+                          byte_p[boost::bind(&setIntColor,
+                                             boost::ref(rColor.r),_1)])
+                       |  
+                         // rgb(double,double,double)
+                         (real_p[assign_a(rColor.r)] >> ',' >>
+                          real_p[assign_a(rColor.g)] >> ',' >>
+                          real_p[assign_a(rColor.b)]),
+                         ')'))
+          |  
+            str_p("black")[assign_a(rColor,ARGBColor(0,0,0))]
+          |
+            str_p("silver")[assign_a(rColor,ARGBColor(192,192,192))]
+          |  
+            str_p("gray")[assign_a(rColor,ARGBColor(128,128,128))]
+          |  
+            str_p("white")[assign_a(rColor,ARGBColor(255,255,255))]
+          |  
+            str_p("maroon")[assign_a(rColor,ARGBColor(128,0,0))]
+          |  
+            str_p("red")[assign_a(rColor,ARGBColor(255,0,0))]
+          |  
+            str_p("purple")[assign_a(rColor,ARGBColor(128,0,128))]
+          |  
+            str_p("fuchsia")[assign_a(rColor,ARGBColor(255,0,255))]
+          |  
+            str_p("green")[assign_a(rColor,ARGBColor(0,128,0))]
+          |  
+            str_p("lime")[assign_a(rColor,ARGBColor(0,255,0))]
+          |  
+            str_p("olive")[assign_a(rColor,ARGBColor(128,128,0))]
+          |  
+            str_p("yellow")[assign_a(rColor,ARGBColor(255,255,0))]
+          |  
+            str_p("navy")[assign_a(rColor,ARGBColor(0,0,128))]
+          |  
+            str_p("blue")[assign_a(rColor,ARGBColor(0,0,255))]
+          |  
+            str_p("teal")[assign_a(rColor,ARGBColor(0,128,128))]
+          |  
+            str_p("aqua")[assign_a(rColor,ARGBColor(0,255,255))]
+        ),
+        //  End grammar
+        space_p).full;
+}
+
+//////////////////////////////////////////////////////////////
+
+bool parseTransform( const char* sTransform, basegfx::B2DHomMatrix& rTransform )
+{
+    using namespace ::boost::spirit;
+
+    double fRefOffsetX(0.0);
+    double fRefOffsetY(0.0);
+    bool   bRefTransform(false);
+
+    double fRotationAngle=0.0;
+    double fSkewAngle=0.0;
+    geometry::AffineMatrix2D aIdentityTransform;
+    geometry::AffineMatrix2D aCurrTransform;
+    std::vector<geometry::AffineMatrix2D> aTransforms;
+    aIdentityTransform.m00 = 1.0; aIdentityTransform.m11 = 1.0;
+    aCurrTransform = aIdentityTransform;
+    
+    const bool bRes = parse(sTransform,
+        //  Begin grammar
+        (
+            // identity transform
+            str_p("none")
+          |
+            // the ref() form
+            (str_p("ref")
+             >> confix_p('(', 
+                         str_p("svg")[assign_a(bRefTransform,true)] 
+                         >> *(real_p[assign_a(fRefOffsetX)] >> ',' >>
+                              real_p[assign_a(fRefOffsetY)]),
+                         ')'))
+          |
+            // the transform-list form
+            (list_p(
+               (   
+                 // matrix(a,b,c,d,e,f)  
+                 (str_p("matrix") 
+                  >> confix_p('(', 
+                              real_p[assign_a(aCurrTransform.m00)] >> ',' >>
+                              real_p[assign_a(aCurrTransform.m10)] >> ',' >>
+                              real_p[assign_a(aCurrTransform.m01)] >> ',' >>
+                              real_p[assign_a(aCurrTransform.m11)] >> ',' >>
+                              real_p[assign_a(aCurrTransform.m02)] >> ',' >>
+                              real_p[assign_a(aCurrTransform.m12)],
+                              ')'))[push_back_a(aTransforms,aCurrTransform)]
+               |  
+                 // translate(x,[y])
+                 (str_p("translate") 
+                  >> confix_p('(', 
+                              real_p[assign_a(aCurrTransform.m02)] >>
+                              !(',' >> real_p[assign_a(aCurrTransform.m12)]),
+                              ')'))[push_back_a(aTransforms,aCurrTransform)]
+               |  
+                 // scale(x,[y])
+                 (str_p("scale") 
+                  >> confix_p('(', 
+                              real_p[assign_a(aCurrTransform.m00)] >> 
+                              !(',' >> real_p[assign_a(aCurrTransform.m11)]),
+                              ')'))[push_back_a(aTransforms,aCurrTransform)]
+               |  
+                 // rotate(phi,[cx, cy])
+                 (str_p("rotate") 
+                  >> confix_p('(', 
+                              real_p[assign_a(fRotationAngle)] >> ',' >>
+                              real_p[assign_a(aCurrTransform.m00)] >> ',' >>
+                              real_p[assign_a(aCurrTransform.m11)],
+                              ')'))[boost::bind(&calcRotation,
+                                                boost::ref(aTransforms),
+                                                boost::ref(aCurrTransform),
+                                                boost::cref(fRotationAngle))]
+               |  
+                 // skewX(phi)
+                 (str_p("skewX") 
+                  >> '(' 
+                  >> real_p[assign_a(fSkewAngle)] 
+                  >> ')')[boost::bind(&calcSkewX,
+                                      boost::ref(aTransforms),
+                                      boost::cref(fSkewAngle))]
+               |  
+                 // skewY(phi)
+                 (str_p("skewY") 
+                  >> '(' 
+                  >> real_p[assign_a(fSkewAngle)] 
+                  >> ')')[boost::bind(&calcSkewY,
+                                      boost::ref(aTransforms),
+                                      boost::cref(fSkewAngle))]
+                 // reset current transform after every push
+               )[assign_a(aCurrTransform,aIdentityTransform)],
+                 // list delimiter is either ',' or space
+                ',' | eps_p ))
+        ),
+        //  End grammar
+        space_p).full;
+
+    if( !bRes )
+        return false;
+
+    // fold all transformations into one
+    const geometry::AffineMatrix2D aTotalTransform(
+        std::accumulate(aTransforms.begin(),
+                        aTransforms.end(),
+                        aIdentityTransform,
+                        &multiplyMatrix));
+
+    basegfx::unotools::homMatrixFromAffineMatrix(
+        rTransform,
+        aTotalTransform);
+
+    // TODO(F1): handle the ref case
+    return bRes;
+}
+
+//////////////////////////////////////////////////////////////
+
+bool parseViewBox( const char* sViewbox, basegfx::B2DRange& rRect )
+{
+    using namespace ::boost::spirit;
+
+    double x=0.0,y=0.0,w=0.0,h=0.0;
+    
+    const bool bRes = parse(sViewbox,
+        //  Begin grammar
+        (
+            // either comma- or space-delimited list of four doubles
+            (real_p[assign_a(x)] >> ',' >>
+             real_p[assign_a(y)] >> ',' >>
+             real_p[assign_a(w)] >> ',' >>
+             real_p[assign_a(h)])
+           | 
+            (real_p[assign_a(x)] >>
+             real_p[assign_a(y)] >>
+             real_p[assign_a(w)] >>
+             real_p[assign_a(h)])
+        ),
+        //  End grammar
+        space_p).full;
+
+    if( !bRes )
+        return false;
+
+    rRect = basegfx::B2DRange(x,y,x+w,y+h);
+
+    return true;
+}
+
+//////////////////////////////////////////////////////////////
+
+bool parseDashArray( const char* sDashArray, std::vector<double>& rOutputVector )
+{
+    using namespace ::boost::spirit;
+    
+    rOutputVector.clear();
+    return parse(sDashArray,
+        //  Begin grammar
+        (
+            // parse comma-delimited list of doubles
+            list_p(real_p[push_back_a(rOutputVector)])
+        ),
+        //  End grammar
+        space_p).full;
+}
+    
+} // namespace svgi
diff --git a/filter/source/svgimport/parserfragments.hxx b/filter/source/svgimport/parserfragments.hxx
new file mode 100644
index 0000000..0139934
--- /dev/null
+++ filter/source/svgimport/parserfragments.hxx
@@ -0,0 +1,45 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_PARSERFRAGMENTS_HXX
+#define INCLUDED_PARSERFRAGMENTS_HXX
+
+#include <sal/config.h>
+#include <vector>
+
+namespace basegfx
+{ 
+    class B2DHomMatrix; 
+    class B2DRange; 
+}
+namespace svgi
+{
+    struct ARGBColor;
+
+    /// Parse given string for one of the SVG color grammars
+    bool parseColor( const char* sColor, ARGBColor& rColor );
+
+    /// Parse given string for one of the SVG transformation grammars
+    bool parseTransform( const char* sTransform, basegfx::B2DHomMatrix& rTransform );
+
+    /// Parse given string for the viewBox attribute
+    bool parseViewBox( const char* sViewbox, basegfx::B2DRange& rRect );
+
+    /// Parse given string for a list of double values, comma-delimited
+    bool parseDashArray( const char* sDashArray, std::vector<double>& rOutputVector );
+
+} // namespace svgi
+
+#endif
diff --git a/filter/source/svgimport/saxattrlist.cxx b/filter/source/svgimport/saxattrlist.cxx
new file mode 100644
index 0000000..6061f9d
--- /dev/null
+++ filter/source/svgimport/saxattrlist.cxx
@@ -0,0 +1,101 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "saxattrlist.hxx"
+
+namespace svgi
+{
+
+AttributeList::AttributeList( const PropertyMap& rMap ) :
+    m_aAttributes(),
+    m_aIndexMap()
+{
+    *this = rMap;
+}
+
+AttributeList& AttributeList::operator=( const PropertyMap& rMap )
+{
+    clear();
+    m_aAttributes.reserve(rMap.size());
+    for( PropertyMap::const_iterator it = rMap.begin();
+         it != rMap.end(); ++it )
+    {
+        m_aIndexMap[ it->first ] = m_aAttributes.size();
+        m_aAttributes.push_back( AttrEntry( it->first, it->second ) );
+    }
+
+    return *this;
+}
+
+void AttributeList::clear()
+{
+    m_aIndexMap.clear();
+    m_aAttributes.clear();
+}
+
+AttributeList::AttributeList( const AttributeList& rClone ) :
+    cppu::WeakImplHelper2<com::sun::star::xml::sax::XAttributeList, com::sun::star::util::XCloneable>(rClone),
+    m_aAttributes( rClone.m_aAttributes ),
+    m_aIndexMap( rClone.m_aIndexMap )
+{
+}
+
+static const rtl::OUString& getCDATAString()
+{
+    static rtl::OUString aStr( RTL_CONSTASCII_USTRINGPARAM( "CDATA" ) );
+    return aStr;
+}
+    
+sal_Int16 SAL_CALL AttributeList::getLength() throw()
+{
+    return sal_Int16(m_aAttributes.size());
+}
+rtl::OUString SAL_CALL AttributeList::getNameByIndex( sal_Int16 i_nIndex ) throw()
+{
+    return (i_nIndex < sal_Int16(m_aAttributes.size())) ? m_aAttributes[i_nIndex].m_aName : rtl::OUString();
+}
+
+rtl::OUString SAL_CALL AttributeList::getTypeByIndex( sal_Int16 i_nIndex) throw()
+{
+    return (i_nIndex < sal_Int16(m_aAttributes.size())) ? getCDATAString() : rtl::OUString();
+}
+
+rtl::OUString SAL_CALL AttributeList::getTypeByName( const ::rtl::OUString& i_rName ) throw()
+{
+    return (m_aIndexMap.find( i_rName ) != m_aIndexMap.end()) ? getCDATAString() : rtl::OUString();
+}
+
+rtl::OUString SAL_CALL AttributeList::getValueByIndex( sal_Int16 i_nIndex ) throw()
+{
+    return (i_nIndex < sal_Int16(m_aAttributes.size())) ? m_aAttributes[i_nIndex].m_aValue : rtl::OUString();
+}
+
+rtl::OUString SAL_CALL AttributeList::getValueByName(const ::rtl::OUString& i_rName) throw()
+{
+    std::hash_map< rtl::OUString, size_t, rtl::OUStringHash >::const_iterator it = m_aIndexMap.find( i_rName );
+    return (it != m_aIndexMap.end()) ? m_aAttributes[it->second].m_aValue : rtl::OUString();
+}
+    
+com::sun::star::uno::Reference< ::com::sun::star::util::XCloneable > SAL_CALL AttributeList::createClone() throw()
+{
+    return new AttributeList( *this );
+}
+
+}
+
diff --git a/filter/source/svgimport/saxattrlist.hxx b/filter/source/svgimport/saxattrlist.hxx
new file mode 100644
index 0000000..2dd0ae8
--- /dev/null
+++ filter/source/svgimport/saxattrlist.hxx
@@ -0,0 +1,69 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_SVGI_ATTRIBUTELIST_HXX
+#define INCLUDED_SVGI_ATTRIBUTELIST_HXX
+
+#include <rtl/ustring.hxx>
+#include <vector>
+#include <hash_map>
+#include <cppuhelper/implbase2.hxx>
+
+#include <com/sun/star/util/XCloneable.hpp>
+#include <com/sun/star/xml/sax/XAttributeList.hpp>
+
+namespace svgi
+{
+    typedef std::hash_map< rtl::OUString, rtl::OUString, rtl::OUStringHash > PropertyMap;
+
+    // TODO(Q3): Move this to comphelper - duplicate to xmloff, pdfimport, too
+    class AttributeList : public ::cppu::WeakImplHelper2<
+		    com::sun::star::xml::sax::XAttributeList,
+            com::sun::star::util::XCloneable
+            >
+    {
+        struct AttrEntry
+        {
+            rtl::OUString m_aName;
+            rtl::OUString m_aValue;
+            
+            AttrEntry( const rtl::OUString& i_rName, const rtl::OUString& i_rValue )
+            : m_aName( i_rName ), m_aValue( i_rValue ) {}
+        };
+        std::vector< AttrEntry >                                          m_aAttributes;
+        PropertyMap::hash_map< rtl::OUString, size_t, rtl::OUStringHash > m_aIndexMap;
+    
+    public:
+        AttributeList( const PropertyMap& );
+        AttributeList( const AttributeList& );
+
+        AttributeList& operator=( const PropertyMap& );
+        void clear();
+    
+        // ::com::sun::star::xml::sax::XAttributeList
+        virtual sal_Int16 SAL_CALL getLength() throw();
+        virtual rtl::OUString SAL_CALL getNameByIndex(sal_Int16 i) throw();
+        virtual rtl::OUString SAL_CALL getTypeByIndex(sal_Int16 i) throw();
+        virtual rtl::OUString SAL_CALL getTypeByName(const ::rtl::OUString& aName) throw();
+        virtual rtl::OUString SAL_CALL getValueByIndex(sal_Int16 i) throw();
+        virtual rtl::OUString SAL_CALL getValueByName(const ::rtl::OUString& aName) throw();
+    
+        // ::com::sun::star::util::XCloneable
+        virtual ::com::sun::star::uno::Reference< ::com::sun::star::util::XCloneable > SAL_CALL createClone() throw();
+    };
+}
+
+#endif
diff --git a/filter/source/svgimport/services.cxx b/filter/source/svgimport/services.cxx
new file mode 100644
index 0000000..ff456f8
--- /dev/null
+++ filter/source/svgimport/services.cxx
@@ -0,0 +1,36 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "svgimporter.hxx"
+
+#include <cppuhelper/factory.hxx>
+#include <cppuhelper/implementationentry.hxx>
+#include <comphelper/servicedecl.hxx>
+
+using namespace ::com::sun::star;
+
+namespace sdecl = comphelper::service_decl;
+ sdecl::class_<svgi::SVGImporter> serviceImpl;
+ const sdecl::ServiceDecl svgImportDecl(
+     serviceImpl,
+     "com.sun.star.comp.documents.SVGImport",
+     "com.sun.star.document.ImportFilter" );
+
+// The C shared lib entry points
+COMPHELPER_SERVICEDECL_EXPORTS1(svgImportDecl)
diff --git a/filter/source/svgimport/svgimporter.cxx b/filter/source/svgimport/svgimporter.cxx
new file mode 100644
index 0000000..9cd237a
--- /dev/null
+++ filter/source/svgimport/svgimporter.cxx
@@ -0,0 +1,90 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "svgimporter.hxx" 
+#include "svgreader.hxx" 
+
+#include <rtl/ref.hxx>
+#include <com/sun/star/lang/XComponent.hpp>
+#include <com/sun/star/uno/Any.hxx>
+#include <com/sun/star/uno/Type.hxx>
+#include <com/sun/star/uno/XComponentContext.hpp>
+#include <com/sun/star/beans/PropertyValue.hpp>
+#include <com/sun/star/xml/sax/XParser.hpp>
+#include <com/sun/star/xml/sax/InputSource.hpp>
+#include <com/sun/star/xml/XImportFilter.hpp>
+#include <com/sun/star/io/XActiveDataSource.hpp>
+#include <com/sun/star/task/XStatusIndicator.hpp>
+#include <comphelper/oslfile2streamwrap.hxx>
+
+using namespace ::com::sun::star;
+
+namespace svgi
+{
+
+SVGImporter::SVGImporter( const uno::Reference< uno::XComponentContext > &rxMSF ) :
+    m_xFactory(rxMSF),
+    m_xModel()
+{}
+
+sal_Bool SAL_CALL SVGImporter::importer( const uno::Sequence< beans::PropertyValue >&        rSourceData,
+                                         const uno::Reference< xml::sax::XDocumentHandler >& rHdl,
+                                         const uno::Sequence< rtl::OUString >&               /*rUserData*/ ) throw( uno::RuntimeException )
+{
+    rtl::OUString aURL;
+    uno::Reference< io::XInputStream > xInputStream;
+    uno::Reference< task::XStatusIndicator > xStatus;
+    const sal_Int32 nLength = rSourceData.getLength();
+    const beans::PropertyValue* pAttribs = rSourceData.getConstArray();
+    for ( sal_Int32 i=0 ; i<nLength; ++i, ++pAttribs )
+	{
+        if( pAttribs->Name.equalsAscii( "InputStream" ) )
+        {
+            pAttribs->Value >>= xInputStream;
+        }
+        else if( pAttribs->Name.equalsAscii( "URL" ) )
+        {
+            if( (pAttribs->Value >>= aURL) )
+            {
+                osl::File aInputFile(aURL);
+                aInputFile.open(OpenFlag_Read);
+                xInputStream.set(new comphelper::OSLInputStreamWrapper(aInputFile));
+            }
+        }
+        else if( pAttribs->Name.equalsAscii( "StatusIndicator" ) )
+            pAttribs->Value >>= xStatus;
+	}
+
+    OSL_ASSERT(xInputStream.is());
+    if(!xInputStream.is()) 
+        return sal_False;
+
+    SVGReader aReader(m_xFactory, xInputStream, rHdl);
+    return aReader.parseAndConvert();
+}
+
+//XImporter
+void SAL_CALL SVGImporter::setTargetDocument( const uno::Reference< lang::XComponent >& xDocument ) throw( lang::IllegalArgumentException )
+{
+    m_xModel = uno::Reference< frame::XModel >( xDocument, uno::UNO_QUERY );
+    if( xDocument.is() && ! m_xModel.is() )
+        throw lang::IllegalArgumentException();
+}
+
+}
diff --git a/filter/source/svgimport/svgimporter.hxx b/filter/source/svgimport/svgimporter.hxx
new file mode 100644
index 0000000..0a3a51b
--- /dev/null
+++ filter/source/svgimport/svgimporter.hxx
@@ -0,0 +1,54 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_SVGIMPORTER_HXX
+#define INCLUDED_SVGIMPORTER_HXX
+
+#include <com/sun/star/frame/XModel.hpp>
+#include <com/sun/star/uno/Reference.hxx>
+#include <com/sun/star/xml/XImportFilter.hpp>
+#include <com/sun/star/document/XImporter.hpp>
+#include <com/sun/star/uno/XComponentContext.hpp>
+#include <cppuhelper/implbase2.hxx>
+
+namespace svgi
+{
+
+class SVGImporter : public cppu::WeakImplHelper2<
+    com::sun::star::xml::XImportFilter,
+    com::sun::star::document::XImporter>
+{
+private:
+	com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> m_xFactory;
+    com::sun::star::uno::Reference<com::sun::star::frame::XModel>          m_xModel;
+
+    // XImportFilter    
+    virtual sal_Bool SAL_CALL importer( const com::sun::star::uno::Sequence< com::sun::star::beans::PropertyValue >& rSourceData,
+                                        const com::sun::star::uno::Reference< com::sun::star::xml::sax::XDocumentHandler >& rHdl,
+                                        const com::sun::star::uno::Sequence< rtl::OUString >& rUserData ) throw( com::sun::star::uno::RuntimeException );
+
+    // XImporter
+    virtual void SAL_CALL setTargetDocument( const com::sun::star::uno::Reference< com::sun::star::lang::XComponent >& xDocument )
+        throw( com::sun::star::lang::IllegalArgumentException );
+    
+public:
+	
+    explicit SVGImporter( const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XComponentContext > &rxMSF );
+};
+
+}
+
+#endif
diff --git a/filter/source/svgimport/svgisettings.pmk b/filter/source/svgimport/svgisettings.pmk
new file mode 100644
index 0000000..1c86425
--- /dev/null
+++ filter/source/svgimport/svgisettings.pmk
@@ -0,0 +1,17 @@
+#*************************************************************************
+#
+#    OpenOffice.org - a multi-platform office productivity suite
+#
+#    Author:
+#      Fridrich Strba  <fridrich.strba@bluewin.ch>
+#      Thorsten Behrens <tbehrens@novell.com>	   	
+#
+#      Copyright (C) 2008, Novell Inc.
+#      Parts copyright 2005 by Sun Microsystems, Inc.
+#
+#   The Contents of this file are made available subject to
+#   the terms of GNU Lesser General Public License Version 2.1.
+#
+#*************************************************************************
+
+PDFI_IMPLEMENTATION_IDENTIFIER="com.sun.star.comp.documents.PDFImport"
diff --git a/filter/source/svgimport/svgreader.cxx b/filter/source/svgimport/svgreader.cxx
new file mode 100644
index 0000000..b0a20b1
--- /dev/null
+++ filter/source/svgimport/svgreader.cxx
@@ -0,0 +1,992 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "svgreader.hxx"
+#include "saxattrlist.hxx"
+#include "gfxtypes.hxx"
+#include "units.hxx"
+#include "parserfragments.hxx"
+#include "tokenmap.hxx"
+
+#include <rtl/math.hxx>
+#include <rtl/ref.hxx>
+#include <rtl/ustring.hxx>
+#include <rtl/ustrbuf.hxx>
+#include <basegfx/vector/b2enums.hxx>
+#include <basegfx/range/b2drange.hxx>
+#include <basegfx/matrix/b2dhommatrix.hxx>
+#include <basegfx/polygon/b2dpolypolygon.hxx>
+#include <basegfx/polygon/b2dlinegeometry.hxx>
+#include <basegfx/polygon/b2dpolygontools.hxx>
+#include <basegfx/polygon/b2dpolypolygontools.hxx>
+#include <basegfx/polygon/b2dlinegeometry.hxx>
+#include <com/sun/star/io/XSeekable.hpp>
+#include <com/sun/star/xml/sax/XParser.hpp>
+#include <com/sun/star/xml/dom/XDocumentBuilder.hpp>
+#include <com/sun/star/xml/dom/NodeType.hpp>
+
+#include <boost/bind.hpp>
+#include <hash_set>
+
+#define USTR(x) rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( x ) )
+#define OASIS_STR "urn:oasis:names:tc:opendocument:xmlns:"
+#define USER_UNIT (50.0) // FIXME? 50.0 considered a nice magic value ;-)
+
+using namespace ::com::sun::star;
+
+namespace svgi
+{
+namespace
+{
+/** Visit all elements of the given tree (in-order traversal)
+
+    Given functor is called for every element, and passed the
+    element's attributes, if any
+ */
+template<typename Func> void visitElements(Func& rFunc,
+                                           const uno::Reference<xml::dom::XElement> xElem)
+{
+    if( xElem->hasAttributes() )
+        rFunc(xElem,xElem->getAttributes());
+    else
+        rFunc(xElem);
+
+    // notify children processing
+    rFunc.push();
+
+    // recurse over children
+    uno::Reference<xml::dom::XNodeList> xChildren( xElem->getChildNodes() );
+    const sal_Int32 nNumNodes( xChildren->getLength() );
+    for( sal_Int32 i=0; i<nNumNodes; ++i )
+    {
+        if( xChildren->item(i)->getNodeType() == xml::dom::NodeType_ELEMENT_NODE )
+            visitElements( rFunc,
+                           uno::Reference<xml::dom::XElement>(
+                               xChildren->item(i),
+                               uno::UNO_QUERY_THROW) );
+    }
+
+    // children processing done
+    rFunc.pop();
+}
+
+struct AnnotatingVisitor
+{
+    AnnotatingVisitor(StatePool&                                        rStatePool,
+                      StateMap&                                         rStateMap,
+                      const uno::Reference<xml::sax::XDocumentHandler>& xDocumentHandler) :
+        mnCurrStateId(0),
+        maCurrState(),
+        maParentStates(),
+        mrStates(rStatePool),
+        mrStateMap(rStateMap),
+        mxDocumentHandler(xDocumentHandler)
+    {
+        // fake initial parent - needs to setup a somewhat upscaling
+        // transformation, to avoid those dreaded integer roundoff
+        // errors in the drawing layer
+        State aState;
+        aState.maTransform.scale(USER_UNIT,USER_UNIT);
+        aState.maCTM = aState.maTransform;
+        maParentStates.push_back(aState);
+    }
+
+    void operator()( const uno::Reference<xml::dom::XElement>& )
+    {}
+
+    void operator()( const uno::Reference<xml::dom::XElement>&      xElem,
+                     const uno::Reference<xml::dom::XNamedNodeMap>& xAttributes )
+    {
+        // init state. CTM and viewport gets inherited from parent
+        maCurrState = State(); 
+        maCurrState.maCTM = maParentStates.back().maCTM;
+        maCurrState.maViewport = maParentStates.back().maViewport;
+
+        // scan for style info
+        const sal_Int32 nNumElems( xAttributes->getLength() );
+        rtl::OUString sAttributeValue;
+        for( sal_Int32 i=0; i<nNumElems; ++i )
+        {
+            sAttributeValue = xAttributes->item(i)->getNodeValue();
+            const sal_Int32 nTokenId( 
+                getTokenId(xAttributes->item(i)->getNodeName()));
+            if( XML_STYLE == nTokenId )
+                parseStyle(sAttributeValue);
+            else 
+                parseAttribute(nTokenId, 
+                               xAttributes->item(i)->getNodeName(),
+                               sAttributeValue);
+        }
+
+        // all attributes parsed, can calc total CTM now
+        if( !maCurrState.maViewBox.isEmpty() &&
+            maCurrState.maViewBox.getWidth() != 0.0 && 
+            maCurrState.maViewBox.getHeight() != 0.0 )
+        {
+            // transform aViewBox into viewport, such that they
+            // coincide
+            maCurrState.maTransform.translate(-maCurrState.maViewBox.getMinX(),
+                                              -maCurrState.maViewBox.getMinY());
+            maCurrState.maTransform.scale(maCurrState.maViewport.getWidth()/maCurrState.maViewBox.getWidth(),
+                                          maCurrState.maViewport.getHeight()/maCurrState.maViewBox.getHeight());
+        }
+        maCurrState.maCTM *= maCurrState.maTransform;
+        
+        // if necessary, serialize to automatic-style section
+        writeStyle(xElem);
+    }
+
+    rtl::OUString getStyleName( const char* sPrefix, sal_Int32 nId )
+    {
+        return rtl::OUString::createFromAscii(sPrefix)+rtl::OUString::valueOf(nId);
+    }
+
+    sal_Int8 toByteColor( double val )
+    {
+        // TODO(Q3): duplicated from vcl::unotools
+        return sal::static_int_cast<sal_Int8>(
+            basegfx::fround(val*255.0));
+    }
+
+    rtl::OUString getOdfColor( const ARGBColor& rColor )
+    {
+        // TODO(Q3): duplicated from pdfimport
+        rtl::OUStringBuffer aBuf( 7 );
+        const sal_uInt8 nRed  ( toByteColor(rColor.r)   );
+        const sal_uInt8 nGreen( toByteColor(rColor.g) );
+        const sal_uInt8 nBlue ( toByteColor(rColor.b)  );
+        aBuf.append( sal_Unicode('#') );
+        if( nRed < 10 )
+            aBuf.append( sal_Unicode('0') );
+        aBuf.append( sal_Int32(nRed), 16 );
+        if( nGreen < 10 )
+            aBuf.append( sal_Unicode('0') );
+        aBuf.append( sal_Int32(nGreen), 16 );
+        if( nBlue < 10 )
+            aBuf.append( sal_Unicode('0') );
+        aBuf.append( sal_Int32(nBlue), 16 );
+
+        // TODO(F3): respect alpha transparency (polygons etc.)
+        OSL_ASSERT(rColor.a == 1.0);
+
+        return aBuf.makeStringAndClear();
+    }
+
+    bool writeStyle(const State& rState)
+    {
+        PropertyMap aProps;
+        rtl::Reference<AttributeList> xAttrs( new AttributeList(aProps) );
+        uno::Reference<xml::sax::XAttributeList> xUnoAttrs( xAttrs.get() );
+
+        std::pair<StatePool::iterator,
+                  bool> aRes = mrStates.insert(rState);
+        if( !aRes.second )
+            return false; // not written
+
+        ++mnCurrStateId;
+
+        // mnStyleId does not take part in hashing/comparison
+        const_cast<State&>(*aRes.first).mnStyleId = mnCurrStateId;
+        mrStateMap.insert(std::make_pair(
+                              mnCurrStateId,
+                              rState));
+        
+        // serialize to automatic-style section
+        aProps[ USTR( "style:name" ) ] = getStyleName("svggraphicstyle",
+                                                      mnCurrStateId);
+        aProps[ USTR( "style:family" ) ] = USTR("graphic");
+        *xAttrs = aProps;
+        mxDocumentHandler->startElement( USTR("style:style"), 
+                                         xUnoAttrs );
+        
+        aProps.clear();
+        if( rState.meFillType != NONE )
+        {
+            aProps[ USTR( "draw:fill" ) ] = USTR("solid");
+            aProps[ USTR( "draw:fill-color" ) ] = getOdfColor(rState.maFillColor);
+            if( maCurrState.mnFillOpacity != 1.0 )
+                aProps[ USTR( "draw:fill-opacity" ) ] = rtl::OUString::valueOf(maCurrState.mnFillOpacity);
+        }
+        else
+        {
+            aProps[ USTR( "draw:fill" ) ] = USTR("none");
+        }
+        if( rState.meStrokeType != NONE )
+        {
+            aProps[ USTR( "draw:stroke" ) ] = USTR("solid");
+            aProps[ USTR( "draw:stroke-color" ) ] = getOdfColor(rState.maStrokeColor);
+        }
+        else
+        {
+            aProps[ USTR( "draw:stroke" ) ] = USTR("none");
+        }
+        if( maCurrState.mnStrokeWidth != 0.0 )
+        {
+            ::basegfx::B2DVector aVec(maCurrState.mnStrokeWidth,0);
+            aVec *= maCurrState.maCTM;
+            aProps[ USTR("svg:stroke-width") ] = rtl::OUString::valueOf( aVec.getLength()/100.0 )+USTR("mm");
+        }
+        if( maCurrState.meLineJoin == basegfx::B2DLINEJOIN_MITER )
+            aProps[ USTR( "draw:stroke-linejoin") ] = USTR("miter");
+        else if( maCurrState.meLineJoin == basegfx::B2DLINEJOIN_ROUND )
+            aProps[ USTR( "draw:stroke-linejoin") ] = USTR("round");
+        else if( maCurrState.meLineJoin == basegfx::B2DLINEJOIN_BEVEL )
+            aProps[ USTR( "draw:stroke-linejoin") ] = USTR("bevel");
+        if( maCurrState.mnStrokeOpacity != 1.0 )
+            aProps[ USTR( "svg:stroke-opacity") ] = rtl::OUString::valueOf(maCurrState.mnStrokeOpacity);
+        *xAttrs = aProps;
+        mxDocumentHandler->startElement( USTR("style:graphic-properties"), 
+                                         xUnoAttrs );
+        mxDocumentHandler->endElement( USTR("style:graphic-properties") );
+        mxDocumentHandler->endElement( USTR("style:style") );
+
+        return true; // newly written
+    }
+
+    void writeStyle(const uno::Reference<xml::dom::XElement>& xElem)
+    {
+        sal_Int32 nEmulatedStyleId=0;
+        if( maCurrState.maDashArray.size() && 
+            maCurrState.meStrokeType != NONE )
+        {
+            // ODF dashing is severly borked - generate filled shape
+            // instead (further down the road - here, we simply
+            // emulate a filled style with the next id)
+
+            // move all stroke attribs to fill, clear stroking
+            State aEmulatedStrokeState( maCurrState );
+            aEmulatedStrokeState.meFillType = maCurrState.meStrokeType;
+            aEmulatedStrokeState.mnFillOpacity = maCurrState.mnStrokeOpacity;
+            aEmulatedStrokeState.maFillColor = maCurrState.maStrokeColor;
+            aEmulatedStrokeState.maFillGradient = maCurrState.maStrokeGradient;
+            aEmulatedStrokeState.meFillRule = EVEN_ODD;
+            aEmulatedStrokeState.meStrokeType = NONE;
+
+            if( writeStyle(aEmulatedStrokeState) )
+                nEmulatedStyleId = mnCurrStateId;
+            else
+                nEmulatedStyleId = mrStates.find(aEmulatedStrokeState)->mnStyleId;
+        }
+
+        sal_Int32 nStyleId=0;
+        if( writeStyle(maCurrState) )
+            nStyleId = mnCurrStateId;
+        else
+            nStyleId = mrStates.find(maCurrState)->mnStyleId;
+
+        xElem->setAttribute(USTR("internal-style-ref"),
+                            rtl::OUString::valueOf(
+                                nStyleId,16)
+                            +USTR("$")
+                            +rtl::OUString::valueOf(
+                                nEmulatedStyleId,16));
+    }
+
+    void push()
+    {
+        maParentStates.push_back(maCurrState);
+    }
+
+    void pop()
+    {
+        maParentStates.pop_back();
+    }
+
+    void parseAttribute( const sal_Int32      nTokenId, 
+                         const rtl::OUString& sAttribute, 
+                         const rtl::OUString& sValue )
+    {
+        rtl::OString aValueUtf8( sValue.getStr(), 
+                                 sValue.getLength(), 
+                                 RTL_TEXTENCODING_UTF8 );
+        switch(nTokenId)
+        {
+            case XML_WIDTH:
+            {
+                const double fViewPortWidth(
+                    convLength(sValue));
+            
+                maCurrState.maViewport.expand(
+                    basegfx::B2DTuple(fViewPortWidth,0.0));
+                break;
+            }
+            case XML_HEIGHT:
+            {
+                const double fViewPortHeight(
+                    convLength(sValue));
+            
+                maCurrState.maViewport.expand(
+                    basegfx::B2DTuple(0.0,fViewPortHeight));
+                break;
+            }
+            case XML_VIEWBOX:
+            {
+                // TODO(F1): preserveAspectRatio
+                parseViewBox(
+                    aValueUtf8,
+                    maCurrState.maViewBox);
+                break;
+            }
+            case XML_FILL_RULE:
+            {
+                if( aValueUtf8 == "evenodd" )
+                    maCurrState.meFillRule = EVEN_ODD;
+                else if( aValueUtf8 == "nonzero" )
+                    maCurrState.meFillRule = NON_ZERO;
+                else if( aValueUtf8 == "inherit" )
+                    maCurrState.meFillRule = maParentStates.back().meFillRule;
+                break;
+            }
+            case XML_STROKE_WIDTH:
+            {
+                if( aValueUtf8 == "inherit" )
+                    maCurrState.mnStrokeWidth = maParentStates.back().mnStrokeWidth;
+                else
+                    maCurrState.mnStrokeWidth = convLength(sValue);
+                break;
+            }
+            case XML_STROKE_LINECAP:
+            {
+                if( aValueUtf8 == "butt" )
+                    maCurrState.meLineCap = BUTT;
+                else if( aValueUtf8 == "round" )
+                    maCurrState.meLineCap = ROUND;
+                else if( aValueUtf8 == "square" )
+                    maCurrState.meLineCap = RECT;
+                else if( aValueUtf8 == "inherit" )
+                    maCurrState.meLineCap = maParentStates.back().meLineCap;
+                break;
+            }
+            case XML_STROKE_LINEJOIN:
+            {
+                if( aValueUtf8 == "miter" )
+                    maCurrState.meLineJoin = basegfx::B2DLINEJOIN_MITER;
+                else if( aValueUtf8 == "round" )
+                    maCurrState.meLineJoin = basegfx::B2DLINEJOIN_ROUND;
+                else if( aValueUtf8 == "bevel" )
+                    maCurrState.meLineJoin = basegfx::B2DLINEJOIN_BEVEL;
+                else if( aValueUtf8 == "inherit" )
+                    maCurrState.meLineJoin = maParentStates.back().meLineJoin;
+                break;
+            }
+            case XML_STROKE_MITERLIMIT:
+            {
+                if( aValueUtf8 == "inherit" )
+                    maCurrState.mnMiterLimit = maParentStates.back().mnMiterLimit;
+                else
+                    maCurrState.mnMiterLimit = aValueUtf8.toDouble();
+                break;
+            }
+            case XML_STROKE_DASHOFFSET:
+            {
+                if( aValueUtf8 == "inherit" )
+                    maCurrState.mnDashOffset = maParentStates.back().mnDashOffset;
+                else
+                    maCurrState.mnDashOffset = convLength(sValue);
+                break;
+            }
+            case XML_STROKE_DASHARRAY:
+            {
+                if( aValueUtf8 == "none" )
+                    maCurrState.maDashArray.clear();
+                else if( aValueUtf8 == "inherit" )
+                    maCurrState.maDashArray = maParentStates.back().maDashArray;
+                else
+                    parseDashArray(aValueUtf8.getStr(),
+                                   maCurrState.maDashArray);
+                break;
+            }
+            case XML_FILL:
+            {
+                const State& rParent( maParentStates.back() );
+                parsePaint( aValueUtf8.getStr(),
+                            maCurrState.meFillType,
+                            maCurrState.maFillColor,
+                            maCurrState.maFillGradient,
+                            rParent.meFillType,
+                            rParent.maFillColor,
+                            rParent.maFillGradient );
+                break;
+            }
+            case XML_STROKE:
+            {
+                const State& rParent( maParentStates.back() );
+                parsePaint( aValueUtf8.getStr(),
+                            maCurrState.meStrokeType,
+                            maCurrState.maStrokeColor,
+                            maCurrState.maStrokeGradient,
+                            rParent.meStrokeType,
+                            rParent.maStrokeColor,
+                            rParent.maStrokeGradient );
+                break;
+            }
+            case XML_TRANSFORM:
+            {
+                basegfx::B2DHomMatrix aTransform;
+                parseTransform(aValueUtf8.getStr(),aTransform);
+                maCurrState.maTransform = maCurrState.maTransform*aTransform;
+                break;
+            }
+            default:
+                fprintf(stderr, 
+                        "unhandled token %s (detected as %s)\n", 
+                        rtl::OUStringToOString(
+                            sAttribute,
+                            RTL_TEXTENCODING_UTF8 ).getStr(),
+                        getTokenName(nTokenId));
+                break;
+        }
+    }
+
+    void parseStyle( const rtl::OUString& sValue )
+    {
+        // split individual style attributes
+        sal_Int32 nIndex=0, nDummyIndex=0;
+        rtl::OUString aCurrToken;
+        do 
+        {
+            aCurrToken=sValue.getToken(0,';',nIndex);
+            
+            // split attrib & value
+            nDummyIndex=0;
+            rtl::OUString aCurrAttrib(
+                aCurrToken.getToken(0,':',nDummyIndex).trim());
+            OSL_ASSERT(nDummyIndex!=-1);
+            nDummyIndex=0;
+            rtl::OUString aCurrValue(
+                aCurrToken.getToken(1,':',nDummyIndex).trim());
+            OSL_ASSERT(nDummyIndex==-1);
+
+            // recurse into normal attribute parsing
+            parseAttribute( getTokenId(aCurrAttrib),
+                            aCurrAttrib,
+                            aCurrValue );
+        }
+        while( nIndex != -1 );
+    }
+
+    void parsePaint( const char*      sValue, 
+                     PaintType&       rType,
+                     ARGBColor&       rColor,
+                     Gradient&        rGradient,
+                     const PaintType& rInheritType,
+                     const ARGBColor& rInheritColor,
+                     const Gradient&  rInheritGradient )
+    {
+        if( strcmp(sValue,"none") == 0 )
+            rType = NONE;
+        else if( strcmp(sValue,"currentColor") == 0 )
+        {
+            rType = SOLID;
+            rColor = maCurrState.maCurrentColor;
+        }
+        else if( strcmp(sValue,"inherit") == 0)
+        {
+            rType = rInheritType;
+            rColor = rInheritColor;
+            rGradient = rInheritGradient;
+        }
+        else
+        { 
+            rType = SOLID;
+            parseColor(sValue,rColor);
+        }
+    }
+
+    sal_Int32                                   mnCurrStateId;
+    State                                       maCurrState;
+    std::vector<State>                          maParentStates;
+    StatePool&                                  mrStates;
+    StateMap&                                   mrStateMap;
+    uno::Reference<xml::sax::XDocumentHandler>  mxDocumentHandler;
+};
+
+/// Annotate svg styles with unique references to state pool
+static void annotateStyles( StatePool&                                        rStatePool,
+                            StateMap&                                         rStateMap,
+                            const uno::Reference<xml::dom::XElement>          xElem,
+                            const uno::Reference<xml::sax::XDocumentHandler>& xDocHdl )
+{
+    AnnotatingVisitor aVisitor(rStatePool,rStateMap,xDocHdl);
+    visitElements(aVisitor, xElem);
+}
+
+struct ShapeWritingVisitor
+{
+    ShapeWritingVisitor(StatePool&                                        rStatePool,
+                        StateMap&                                         rStateMap,
+                        const uno::Reference<xml::sax::XDocumentHandler>& xDocumentHandler) :
+        mrStates(rStatePool),
+        mrStateMap(rStateMap),
+        mxDocumentHandler(xDocumentHandler),
+        mnShapeNum(0)
+    {}
+
+    void operator()( const uno::Reference<xml::dom::XElement>& )
+    {
+    }
+
+    void operator()( const uno::Reference<xml::dom::XElement>&      xElem,
+                     const uno::Reference<xml::dom::XNamedNodeMap>& xAttributes )
+    {
+        PropertyMap aProps;
+        rtl::Reference<AttributeList> xAttrs( new AttributeList(aProps) );
+        uno::Reference<xml::sax::XAttributeList> xUnoAttrs( xAttrs.get() );
+        
+        sal_Int32 nDummyIndex(0);
+        rtl::OUString sStyleId(
+            xElem->getAttribute(
+                USTR("internal-style-ref")).getToken(
+                    0,'$',nDummyIndex));
+        StateMap::iterator pOrigState=mrStateMap.find(
+            sStyleId.toInt32());
+        maCurrState = pOrigState != mrStateMap.end() ? pOrigState->second : maParentStates.back();
+
+        const sal_Int32 nTokenId(getTokenId(xElem->getNodeName()));
+        switch(nTokenId)
+        {
+            case XML_POLYGON:
+            case XML_POLYLINE:
+            {
+                rtl::OUString sPoints = xElem->getAttribute(USTR("points"));
+                basegfx::B2DPolygon aPoly;
+                basegfx::tools::importFromSvgPoints(aPoly, sPoints);
+                if( nTokenId == XML_POLYGON )
+                    aPoly.setClosed(true);
+
+                writePathShape(aProps,
+                               xAttrs,
+                               xUnoAttrs,
+                               xElem,
+                               sStyleId,
+                               basegfx::B2DPolyPolygon(aPoly));
+                break;
+            }
+            case XML_RECT:
+            {
+                // collect attributes
+                const sal_Int32 nNumElems( xAttributes->getLength() );
+                rtl::OUString sAttributeValue;
+                bool bRxSeen=false, bRySeen=false;
+                double x=0.0,y=0.0,width=0.0,height=0.0,rx=0.0,ry=0.0;
+                for( sal_Int32 i=0; i<nNumElems; ++i )
+                {
+                    sAttributeValue = xAttributes->item(i)->getNodeValue();
+                    const sal_Int32 nAttribId( 
+                        getTokenId(xAttributes->item(i)->getNodeName()));
+                    switch(nAttribId)
+                    {
+                        case XML_X:
+                            x = convLength(sAttributeValue);
+                            break;
+                        case XML_Y:
+                            y = convLength(sAttributeValue);
+                            break;
+                        case XML_WIDTH:
+                            width = convLength(sAttributeValue);
+                            break;
+                        case XML_HEIGHT:
+                            height = convLength(sAttributeValue);
+                            break;
+                        case XML_RX:
+                            rx = convLength(sAttributeValue);
+                            bRxSeen=true;
+                            break;
+                        case XML_RY:
+                            ry = convLength(sAttributeValue);
+                            bRySeen=true;
+                            break;
+                        default:
+                            // skip
+                            break;
+                    }
+                }
+
+                if( bRxSeen && !bRySeen )
+                    ry = rx;
+                else if( bRySeen && !bRxSeen )
+                    rx = ry;
+
+                basegfx::B2DPolygon aPoly;
+                aPoly = basegfx::tools::createPolygonFromRect(
+                    basegfx::B2DRange(x,y,x+width,y+height),
+                    rx, ry );
+
+                writePathShape(aProps,
+                               xAttrs,
+                               xUnoAttrs,
+                               xElem,
+                               sStyleId,
+                               basegfx::B2DPolyPolygon(aPoly));                
+                break;
+            }
+            case XML_PATH:
+            {
+                rtl::OUString sPath = xElem->getAttribute(USTR("d"));
+                basegfx::B2DPolyPolygon aPoly;
+                basegfx::tools::importFromSvgD(aPoly, sPath);
+
+                writePathShape(aProps,
+                               xAttrs,
+                               xUnoAttrs,
+                               xElem,
+                               sStyleId,
+                               aPoly);
+                break;
+            }
+        }
+    }
+
+    void push()
+    {
+        maParentStates.push_back(maCurrState);
+    }
+
+    void pop()
+    {
+        maParentStates.pop_back();
+    }
+
+    void writePathShape( PropertyMap&                                    rProps, 
+                         rtl::Reference<AttributeList>&                  xAttrs,
+                         const uno::Reference<xml::sax::XAttributeList>& xUnoAttrs,
+                         const uno::Reference<xml::dom::XElement>&       xElem,
+                         const rtl::OUString&                            rStyleId,
+                         const basegfx::B2DPolyPolygon&                  rPoly )
+    {
+        // we might need to split up polypolygon into multiple path
+        // shapes (e.g. when emulating line stroking)
+        std::vector<basegfx::B2DPolyPolygon> aPolys(1,rPoly);
+        State aState = maCurrState;
+        rtl::OUString aStyleId(rStyleId);
+
+        rProps.clear();
+
+        if( aState.maDashArray.size() )
+        {
+            // ODF dashing is severly borked - generate filled polygon instead
+            aPolys.clear();
+            for( sal_uInt32 i=0; i<rPoly.count(); ++i )
+            {                
+                aPolys.push_back(
+                    basegfx::tools::createAreaGeometry(
+                        rPoly.getB2DPolygon(i),
+                        aState.mnStrokeWidth/2.0,
+                        aState.meLineJoin));
+                // TODO(F2): line ends
+            }
+
+            sal_Int32 nDummyIndex(0);
+            aStyleId = xElem->getAttribute(
+                USTR("internal-style-ref")).getToken(1,'$',nDummyIndex);
+            StateMap::iterator pAlternateState=mrStateMap.find(aStyleId.toInt32());
+            aState = pAlternateState != mrStateMap.end() ? pAlternateState->second : maParentStates.back();
+            OSL_ENSURE( pAlternateState == mrStateMap.end(),
+                        "Doh - where's my alternate style entry?!" );
+        }
+
+        // TODO(F2): separate out shear, rotate etc.
+        // apply transformation to polygon, to keep draw
+        // import in 100th mm   
+        std::for_each(aPolys.begin(),aPolys.end(),
+                      boost::bind(&basegfx::B2DPolyPolygon::transform,
+                                  _1,boost::cref(aState.maCTM)));
+
+        for( sal_uInt32 i=0; i<aPolys.size(); ++i )
+        {
+            fillShapeProperties(rProps,
+                                xElem,
+                                aPolys[i].areControlPointsUsed() ?
+                                basegfx::tools::getRange(
+                                    basegfx::tools::adaptiveSubdivideByAngle(aPolys[i])) :
+                                basegfx::tools::getRange(aPolys[i]),
+                                USTR("svggraphicstyle")+aStyleId);
+            
+            rProps[ USTR( "svg:d" ) ] = basegfx::tools::exportToSvgD(
+                aPolys[i],
+                false,   // no relative coords. causes rounding errors      
+                false ); // no quad bezier detection. crashes older versions.   
+            *xAttrs = rProps;    
+            mxDocumentHandler->startElement(USTR("draw:path"), 
+                                            xUnoAttrs);
+            mxDocumentHandler->endElement(USTR("draw:path"));
+        }
+    }
+
+    void fillShapeProperties( PropertyMap&                              rProps, 
+                              const uno::Reference<xml::dom::XElement>& xElem,
+                              const basegfx::B2DRange&                  rShapeBounds,
+                              const rtl::OUString&                      rStyleName )
+    {
+        rProps[ USTR( "draw:z-index" ) ] = rtl::OUString::valueOf( mnShapeNum++ );
+        rProps[ USTR( "draw:style-name" ) ] = rStyleName;
+        rProps[ USTR( "svg:width" ) ] = rtl::OUString::valueOf(rShapeBounds.getWidth()/100.0)+USTR("mm");
+        rProps[ USTR( "svg:height" ) ] = rtl::OUString::valueOf(rShapeBounds.getHeight()/100.0)+USTR("mm");
+
+        // OOo expects the viewbox to be in 100th of mm
+        rProps[ USTR( "svg:viewBox" ) ] = 
+            USTR("0 0 ")
+            + rtl::OUString::valueOf( 
+                basegfx::fround(rShapeBounds.getWidth()) )
+            + USTR(" ")
+            + rtl::OUString::valueOf(
+                basegfx::fround(rShapeBounds.getHeight()) );
+
+        // TODO(F1): decompose transformation in calling code, and use
+        // transform attribute here
+        rProps[ USTR( "svg:x" ) ] = rtl::OUString::valueOf(rShapeBounds.getMinX()/100.0)+USTR("mm");
+        rProps[ USTR( "svg:y" ) ] = rtl::OUString::valueOf(rShapeBounds.getMinY()/100.0)+USTR("mm");
+    }
+
+    State                                      maCurrState;
+    std::vector<State>                         maParentStates;
+    StatePool&                                 mrStates;
+    StateMap&                                  mrStateMap;
+    uno::Reference<xml::sax::XDocumentHandler> mxDocumentHandler;
+    sal_Int32                                  mnShapeNum;
+};
+
+/// Write out shapes from DOM tree
+static void writeShapes( StatePool&                                        rStatePool,
+                         StateMap&                                         rStateMap,
+                         const uno::Reference<xml::dom::XElement>          xElem,
+                         const uno::Reference<xml::sax::XDocumentHandler>& xDocHdl )
+{
+    ShapeWritingVisitor aVisitor(rStatePool,rStateMap,xDocHdl);
+    visitElements(aVisitor, xElem);
+}
+
+#ifdef VERBOSE
+struct DumpingVisitor
+{
+    void operator()( const uno::Reference<xml::dom::XElement>& xElem )
+    {
+        fprintf(stderr, "name: %s\n", 
+                rtl::OUStringToOString(
+                    xElem->getTagName(),
+                    RTL_TEXTENCODING_UTF8 ).getStr());
+    }
+
+    void operator()( const uno::Reference<xml::dom::XElement>&      xElem,
+                     const uno::Reference<xml::dom::XNamedNodeMap>& xAttributes )
+    {
+        fprintf(stderr, "name: %s", 
+                rtl::OUStringToOString(
+                    xElem->getTagName(),
+                    RTL_TEXTENCODING_UTF8 ).getStr());
+        const sal_Int32 nNumElems( xAttributes->getLength() );
+        for( sal_Int32 i=0; i<nNumElems; ++i )
+        {
+            fprintf(stderr, " %s=%s", 
+                    rtl::OUStringToOString(
+                        xAttributes->item(i)->getNodeName(),
+                        RTL_TEXTENCODING_UTF8 ).getStr(),
+                    rtl::OUStringToOString(
+                        xAttributes->item(i)->getNodeValue(),
+                        RTL_TEXTENCODING_UTF8 ).getStr());
+        }
+
+        fprintf(stderr, "\n");
+    }
+
+    void push() {}
+    void pop()  {}
+};
+
+static void dumpTree( const uno::Reference<xml::dom::XElement> xElem )
+{
+    DumpingVisitor aVisitor;
+    visitElements(aVisitor, xElem);
+}
+#endif
+
+} // namespace 
+
+
+SVGReader::SVGReader(const uno::Reference<uno::XComponentContext>&     xServiceFactory,
+                     const uno::Reference<io::XInputStream>&           xInputStream, 
+                     const uno::Reference<xml::sax::XDocumentHandler>& xDocumentHandler) :
+	m_xServiceFactory( xServiceFactory ),
+	m_xInputStream( xInputStream ),
+	m_xDocumentHandler( xDocumentHandler )
+{
+}
+
+sal_Bool SVGReader::parseAndConvert()
+{
+	uno::Reference<xml::dom::XDocumentBuilder> xDomBuilder( 
+        m_xServiceFactory->getServiceManager()->createInstanceWithContext( 
+            rtl::OUString::createFromAscii("com.sun.star.xml.dom.DocumentBuilder"),
+            m_xServiceFactory), uno::UNO_QUERY );
+
+    uno::Reference<xml::dom::XDocument> xDom(
+        xDomBuilder->parse(m_xInputStream),
+        uno::UNO_QUERY_THROW );
+
+    uno::Reference<xml::dom::XElement> xDocElem( xDom->getDocumentElement(),
+                                                 uno::UNO_QUERY_THROW );
+
+    /////////////////////////////////////////////////////////////////
+    // doc boilerplate    
+    /////////////////////////////////////////////////////////////////
+
+    m_xDocumentHandler->startDocument();
+    
+    // get the document dimensions
+
+    // together with the AnnotatingVisitor, fake a somewhat upscaling
+    // transformation, to avoid those dreaded integer roundoff errors
+    // in the drawing layer
+    double fViewPortWidth(
+        USER_UNIT*convLength(xDocElem->getAttribute(USTR("width"))));
+    double fViewPortHeight(
+        USER_UNIT*convLength(xDocElem->getAttribute(USTR("height"))));
+
+    PropertyMap aProps;
+
+    // document prolog
+    aProps[ USTR( "xmlns:office" ) ]      = USTR( OASIS_STR "office:1.0" );
+    aProps[ USTR( "xmlns:style" ) ]       = USTR( OASIS_STR "style:1.0" );
+    aProps[ USTR( "xmlns:text" ) ]        = USTR( OASIS_STR "text:1.0" );
+    aProps[ USTR( "xmlns:svg" ) ]         = USTR( OASIS_STR "svg-compatible:1.0" );
+    aProps[ USTR( "xmlns:table" ) ]       = USTR( OASIS_STR "table:1.0" );
+    aProps[ USTR( "xmlns:draw" ) ]        = USTR( OASIS_STR "drawing:1.0" );
+    aProps[ USTR( "xmlns:fo" ) ]          = USTR( OASIS_STR "xsl-fo-compatible:1.0" );
+    aProps[ USTR( "xmlns:xlink" )]        = USTR( "http://www.w3.org/1999/xlink" );
+    aProps[ USTR( "xmlns:dc" )]           = USTR( "http://purl.org/dc/elements/1.1/" );
+    aProps[ USTR( "xmlns:number" )]       = USTR( OASIS_STR "datastyle:1.0" );
+    aProps[ USTR( "xmlns:presentation" )] = USTR( OASIS_STR "presentation:1.0" );
+    aProps[ USTR( "xmlns:math" )]         = USTR( "http://www.w3.org/1998/Math/MathML" );
+    aProps[ USTR( "xmlns:form" )]         = USTR( OASIS_STR "form:1.0" );
+    aProps[ USTR( "xmlns:script" )]       = USTR( OASIS_STR "script:1.0" );
+    aProps[ USTR( "xmlns:dom" )]          = USTR( "http://www.w3.org/2001/xml-events" );
+    aProps[ USTR( "xmlns:xforms" )]       = USTR( "http://www.w3.org/2002/xforms" );
+    aProps[ USTR( "xmlns:xsd" )]          = USTR( "http://www.w3.org/2001/XMLSchema" );
+    aProps[ USTR( "xmlns:xsi" )]          = USTR( "http://www.w3.org/2001/XMLSchema-instance" );
+    aProps[ USTR( "office:version" ) ]    = USTR( "1.0" );
+
+    rtl::Reference<AttributeList> xAttrs( new AttributeList(aProps) );
+    uno::Reference<xml::sax::XAttributeList> xUnoAttrs( xAttrs.get() );
+    m_xDocumentHandler->startElement( USTR("office:document"), xUnoAttrs );
+
+    xAttrs->clear();
+    m_xDocumentHandler->startElement( USTR("office:automatic-styles"), 
+                                      xUnoAttrs );
+    aProps.clear();
+    aProps[ USTR( "style:name" ) ] = USTR("pagelayout1");
+    *xAttrs = aProps;
+    m_xDocumentHandler->startElement( USTR("style:page-layout"), 
+                                      xUnoAttrs );
+    // TODO(Q3): this is super-ugly. In-place container come to mind.
+    aProps.clear();
+    aProps[ USTR( "fo:margin-top" ) ] = 
+    aProps[ USTR( "fo:margin-bottom" ) ] = rtl::OUString::valueOf(fViewPortHeight/2000.0)+USTR("mm");
+    aProps[ USTR( "fo:margin-left" ) ] = 
+    aProps[ USTR( "fo:margin-right" ) ] = rtl::OUString::valueOf(fViewPortWidth/2000.0)+USTR("mm");
+    aProps[ USTR( "fo:page-width" ) ] = rtl::OUString::valueOf(11.0*fViewPortWidth/1000.0)+USTR("mm");
+    aProps[ USTR( "fo:page-height" ) ] = rtl::OUString::valueOf(11.0*fViewPortHeight/1000.0)+USTR("mm");
+    aProps[ USTR( "style:print-orientation" ) ] = 
+        fViewPortWidth > fViewPortHeight ? 
+        USTR("landscape") :
+        USTR("portrait");
+    *xAttrs = aProps;
+    m_xDocumentHandler->startElement( USTR("style:page-layout-properties"), 
+                                      xUnoAttrs );
+    m_xDocumentHandler->endElement( USTR("style:page-layout-properties") );
+    m_xDocumentHandler->endElement( USTR("style:page-layout") );
+
+    aProps.clear();
+    aProps[ USTR( "style:name" ) ] = USTR("pagestyle1");
+    aProps[ USTR( "style:family" ) ] = USTR("drawing-page");
+    *xAttrs = aProps;
+    m_xDocumentHandler->startElement( USTR("style:style"), 
+                                      xUnoAttrs );
+
+    aProps.clear();
+    aProps[ USTR( "draw:background-size" ) ] = USTR("border");
+    aProps[ USTR( "draw:fill" ) ] = USTR("none");
+    *xAttrs = aProps;
+    m_xDocumentHandler->startElement( USTR("style:drawing-page-properties"), 
+                                      xUnoAttrs );
+    m_xDocumentHandler->endElement( USTR("style:drawing-page-properties") );
+    m_xDocumentHandler->endElement( USTR("style:style") );
+
+    StatePool aStatePool;
+    StateMap  aStateMap;
+    annotateStyles(aStatePool,aStateMap,
+                   xDocElem,m_xDocumentHandler);
+
+#ifdef VERBOSE
+    dumpTree(xDocElem);
+#endif
+
+    m_xDocumentHandler->endElement( USTR("office:automatic-styles") );
+
+    ////////////////////////////////////////////////////////////////////
+
+    xAttrs->clear();
+    m_xDocumentHandler->startElement( USTR("office:styles"), 
+                                      xUnoAttrs);
+    m_xDocumentHandler->endElement( USTR("office:styles") );
+
+    ////////////////////////////////////////////////////////////////////
+
+    m_xDocumentHandler->startElement( USTR("office:master-styles"), 
+                                      xUnoAttrs );
+    aProps.clear();
+    aProps[ USTR( "style:name" ) ] = USTR("Default");
+    aProps[ USTR( "style:page-layout-name" ) ] = USTR("pagelayout1");
+    aProps[ USTR( "draw:style-name" ) ] = USTR("pagestyle1");
+    *xAttrs = aProps;
+    m_xDocumentHandler->startElement( USTR("style:master-page"), 
+                                      xUnoAttrs );
+    m_xDocumentHandler->endElement( USTR("style:master-page") );
+
+    m_xDocumentHandler->endElement( USTR("office:master-styles") );
+
+    ////////////////////////////////////////////////////////////////////
+
+    xAttrs->clear();
+    m_xDocumentHandler->startElement( USTR("office:body"), 
+                                      xUnoAttrs );
+    m_xDocumentHandler->startElement( USTR("office:drawing"), 
+                                      xUnoAttrs );
+
+    aProps.clear();
+    aProps[ USTR( "draw:master-page-name" ) ] = USTR("Default");
+    aProps[ USTR( "draw:style-name" ) ] = USTR("pagestyle1");
+    *xAttrs = aProps;    
+    m_xDocumentHandler->startElement(USTR("draw:page"), 
+                                     xUnoAttrs);
+
+    // write out all shapes
+    writeShapes(aStatePool,
+                aStateMap,
+                xDocElem,
+                m_xDocumentHandler);
+
+    m_xDocumentHandler->endElement( USTR("draw:page") );
+    m_xDocumentHandler->endElement( USTR("office:drawing") );
+    m_xDocumentHandler->endElement( USTR("office:body") );
+    m_xDocumentHandler->endElement( USTR("office:document") );
+    m_xDocumentHandler->endDocument();
+
+    return sal_True;
+}
+
+} // namespace svgi
diff --git a/filter/source/svgimport/svgreader.hxx b/filter/source/svgimport/svgreader.hxx
new file mode 100644
index 0000000..9030c97
--- /dev/null
+++ filter/source/svgimport/svgreader.hxx
@@ -0,0 +1,42 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_SVGREADER_HXX
+#define INCLUDED_SVGREADER_HXX
+
+#include <com/sun/star/uno/XComponentContext.hpp>
+#include <com/sun/star/xml/sax/XDocumentHandler.hpp>
+#include <com/sun/star/io/XInputStream.hpp>
+
+namespace svgi
+{
+
+class SVGReader
+{
+    const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XComponentContext >      m_xServiceFactory;    
+    const ::com::sun::star::uno::Reference< com::sun::star::io::XInputStream >              m_xInputStream;
+	const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XDocumentHandler >  m_xDocumentHandler;
+
+public:
+    SVGReader( const com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>&           xServiceFactory,
+               const com::sun::star::uno::Reference< com::sun::star::io::XInputStream >&               xInputStream,
+               const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XDocumentHandler >& xDocumentHandler );
+
+	sal_Bool parseAndConvert();
+};
+
+} // namespace svgi
+
+#endif
diff --git a/filter/source/svgimport/test/anarchist.svg b/filter/source/svgimport/test/anarchist.svg
new file mode 100644
index 0000000..1d93d06
--- /dev/null
+++ filter/source/svgimport/test/anarchist.svg
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
+"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
+<!-- Created with Sodipodi ("http://www.sodipodi.com/") -->
+<svg
+   width="21cm"
+   height="14cm"
+   id="svg548"
+   sodipodi:version="0.33"
+   sodipodi:docname="/home/gatonegro/Desktop/cartafol sen título/anarquista.svg"
+   sodipodi:docbase="/home/gatonegro/Desktop/cartafol sen título/"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:xlink="http://www.w3.org/1999/xlink">
+  <sodipodi:namedview
+     id="base" />
+  <defs
+     id="defs549">
+    <marker
+       id="ArrowEnd"
+       viewBox="0 0 10 10"
+       refX="0"
+       refY="5"
+       markerUnits="strokeWidth"
+       markerWidth="4"
+       markerHeight="3"
+       orient="auto">
+      <path
+         d="M 0 0 L 10 5 L 0 10 z"
+         id="path551" />
+    </marker>
+    <marker
+       id="ArrowStart"
+       viewBox="0 0 10 10"
+       refX="10"
+       refY="5"
+       markerUnits="strokeWidth"
+       markerWidth="4"
+       markerHeight="3"
+       orient="auto">
+      <path
+         d="M 10 0 L 0 5 L 10 10 z"
+         id="path553" />
+    </marker>
+  </defs>
+  <path
+     transform="matrix(0.423313,0,0,0.423313,232.8362,12.92915)"
+     style="font-size:12.000;fill-rule:evenodd;"
+     d="M -547.8279 -27.98275 L -547.8279 1143.389 L 1209.230 1143.389 L 1209.230 -27.98275 L -547.8279 -27.98275 z "
+     id="path581" />
+  <g
+     id="g644"
+     transform="matrix(0.867839,0,0,0.867839,181.5250,-46.36001)"
+     style="font-size:12.000;fill:#ffffff;">
+    <g
+       id="g625"
+       transform="matrix(1.013292,0.000000,0.000000,1.013292,-68.80601,-358.7903)"
+       style="fill:#ffffff;fill-opacity:1;">
+      <path
+         style="font-size:48;font-weight:bold;stroke-width:1pt;font-family:Bad Seed;stroke:none;stroke-opacity:1;fill:#ffffff;fill-opacity:1;"
+         d="M 329.221 577.955 L 247.549 727.637 L 240.566 732.798 L 247.549 706.687 L 191.684 789.877 L 165.574 806.576 L 280.036 582.51 L 291.573 577.348 L 281.858 598.905 L 303.718 569.454 L 317.077 561.56 L 304.629 581.599 L 331.65 558.524 L 329.221 577.955 z "
+         id="path622" />
+      <path
+         style="font-size:48;font-weight:bold;stroke-width:1pt;font-family:Bad Seed;stroke:none;stroke-opacity:1;fill:#ffffff;fill-opacity:1;"
+         d="M 367.476 812.648 L 310.701 669.95 L 322.238 679.666 L 294.002 595.565 L 294.913 567.633 L 411.5 812.648 L 394.802 801.415 L 380.835 782.894 L 383.264 794.128 L 371.12 784.716 L 378.103 801.415 L 367.476 812.648 z "
+         id="path623" />
+      <path
+         style="font-size:48;font-weight:bold;stroke-width:1pt;font-family:Bad Seed;stroke:none;stroke-opacity:1;fill:#ffffff;fill-opacity:1;"
+         d="M 420.002 691.81 L 404.214 689.989 L 411.5 695.454 L 439.433 699.704 L 389.64 710.027 L 409.679 715.492 L 405.428 718.832 L 208.383 679.666 L 216.277 672.683 L 199.578 664.789 L 428.806 685.738 L 420.002 691.81 z "
+         id="path624"
+         transform="translate(-23.31184,0.832565)" />
+    </g>
+    <path
+       style="font-size:48;font-weight:bold;stroke-width:1pt;font-family:Bad Seed;fill:#ffffff;fill-opacity:1;"
+       d="M 193.943 430.211 C 186.187 425.848 177.826 420.759 168.857 414.941 C 155.285 406.216 146.68 396.884 143.045 386.948 C 129.23 362.952 122.322 339.321 122.322 316.053 C 123.534 312.66 125.837 306.359 129.23 297.148 C 134.319 284.302 141.469 274.366 150.68 267.337 L 178.309 257.157 C 193.337 251.582 207.273 248.796 220.119 248.796 C 227.148 248.796 232.601 249.402 236.479 250.613 C 254.172 256.188 267.26 261.399 275.744 266.246 C 285.438 271.82 295.497 280.667 305.919 292.786 L 316.826 322.961 C 319.249 329.747 320.461 339.442 320.461 352.046 C 320.461 355.681 320.34 359.681 320.097 364.043 C 317.19 374.949 314.765 382.342 312.826 386.22 C 309.917 392.037 304.707 398.218 297.194 404.762 C 277.077 421.97 256.475 430.574 235.389 430.574 C 217.937 430.574 202.305 425.485 188.49 415.304 L 193.943 430.211 z M 333.273 386.441 C 333.475 379.964 333.577 373.993 333.577 368.528 C 333.577 339.988 327.605 311.246 315.663 282.302 C 303.924 265.3 292.589 253.054 281.659 245.565 C 272.146 239.088 254.941 230.789 230.044 220.669 C 221.543 220.061 213.953 219.758 207.274 219.758 C 189.259 219.758 174.888 222.085 164.16 226.741 C 160.922 228.158 147.563 234.331 124.084 245.261 C 112.141 255.989 104.247 267.02 100.402 278.355 C 99.3896 281.189 95.5439 293.839 88.8644 316.307 C 89.0668 336.548 91.0909 353.651 94.9367 367.617 C 97.7704 378.345 104.247 395.651 114.368 419.535 C 119.833 428.846 126.715 436.942 135.014 443.824 C 138.657 446.658 145.235 452.022 154.748 459.916 L 168.715 462.345 C 176.811 463.761 184.604 464.47 192.093 464.47 C 203.833 464.47 215.572 462.952 227.312 459.916 C 237.432 459.916 249.577 457.588 263.746 452.933 L 298.965 441.395 C 310.097 432.287 317.283 423.887 320.521 416.195 L 333.273 386.441 z "
+       id="path633"
+       transform="matrix(0.758753,-0.651378,0.651378,0.758753,-164.8980,224.7287)" />
+  </g>
+</svg>
diff --git a/filter/source/svgimport/test/andorra.svg b/filter/source/svgimport/test/andorra.svg
new file mode 100644
index 0000000..0fdaa62
--- /dev/null
+++ filter/source/svgimport/test/andorra.svg
@@ -0,0 +1,636 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
+"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
+<!-- Created with Sodipodi ("http://www.sodipodi.com/") -->
+<svg
+   id="svg548"
+   sodipodi:version="0.32"
+   width="200mm"
+   height="140mm"
+   sodipodi:docbase="/home/scarlet/"
+   sodipodi:docname="/home/scarlet/andorra-normal.svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:xlink="http://www.w3.org/1999/xlink">
+  <defs
+     id="defs550" />
+  <sodipodi:namedview
+     id="base"
+     snaptogrid="false"
+     showgrid="false" />
+  <rect
+     style="font-size:12;fill:#0000bd;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+     id="rect895"
+     width="237.401566"
+     height="496.062970"
+     x="0.000000"
+     y="-0.000133" />
+  <rect
+     style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+     id="rect896"
+     width="237.401566"
+     height="496.062958"
+     x="471.259827"
+     y="0.000027" />
+  <rect
+     style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+     id="rect897"
+     width="233.858252"
+     height="496.062958"
+     x="237.401581"
+     y="0.000016" />
+  <g
+     id="g793"
+     transform="matrix(0.389251,0.000000,0.000000,0.373936,199.2400,54.57217)">
+    <g
+       id="g745">
+      <path
+         style="font-size:12;fill:#cba323;fill-rule:evenodd;stroke:#000000;stroke-width:1pt;fill-opacity:1;"
+         d="M 398.538 290.221 C 446.361 291.039 443.053 261.072 460.512 258.095 C 477.97 255.118 494.44 270.584 493.814 288.067 C 495.687 308.881 464.1 309.03 462.177 326.365 C 460.254 343.701 477.555 348.993 495.479 346.347 C 513.403 343.701 526.125 325.984 535.283 317.658 C 521.962 325.151 511.065 322.436 510.073 309.1 C 510.746 291.603 528.176 285.253 536.418 291.14 C 542.894 285.842 542.508 283.717 549.627 284.894 C 554.455 287.838 555.77 287.755 558.626 292.312 C 562.343 289.957 563.895 288.772 570.83 291.715 C 575.136 293.482 578.011 296.676 580.671 301.523 C 583.817 299.037 588.757 298.11 594.433 301.326 C 598.043 303.163 602.541 308.508 603.153 314.321 C 611.604 316.017 614.534 317.975 617.187 322.274 C 632.952 344.049 614.752 380.747 615.755 399.479 C 616.759 418.21 632.406 419.46 632.406 419.46 C 617.689 410.04 632.205 403.56 639.151 402.91 C 661.403 405.202 657.659 438.045 633.971 432.276 C 614.993 427.096 672.892 435.557 671.496 494.913 C 670.1 555.934 638.681 543.923 638.681 543.923 C 638.681 543.923 665.519 554.032 660.327 574.013 C 655.136 587.52 627.394 596.469 629.749 570.565 C 621.507 581.751 619.141 586.478 619.169 603.481 C 618.021 625.194 619.825 635.112 626.014 645.782 C 627.494 635.847 634.22 635.421 639.966 636.682 C 648.067 636.766 652.573 643.124 649.529 651.366 C 653.608 650.331 657.33 653.123 658.931 656.487 C 660.186 662.693 662.968 665.443 656.492 667.798 C 662.968 668.976 666.102 669.822 666.869 678.847 C 667.049 686.108 654.273 690.093 640.733 687.738 C 647.798 691.271 672.637 707.762 669.576 761.18 C 667.457 809.084 583.538 804.819 546.049 803.485 C 508.561 802.152 473.537 804.26 458.916 816.536 C 470.163 823.719 457.614 846.079 448.052 835.6 C 448.052 843.843 438.603 856.579 425.555 848.319 C 426.089 863.204 411.317 873.647 398.434 873.646 C 385.551 873.647 370.779 863.204 371.313 848.319 C 358.265 856.579 348.816 843.843 348.816 835.6 C 339.254 846.079 326.705 823.719 337.952 816.536 C 323.331 804.26 288.307 802.152 250.819 803.485 C 213.33 804.819 129.411 809.084 127.292 761.18 C 124.231 707.762 149.07 691.271 156.135 687.738 C 142.595 690.093 129.819 686.108 129.999 678.847 C 130.766 669.822 133.9 668.976 140.376 667.798 C 133.9 665.443 136.682 662.693 137.937 656.487 C 139.538 653.123 143.26 650.331 147.339 651.366 C 144.295 643.124 148.801 636.766 156.902 636.682 C 162.648 635.421 169.374 635.847 170.854 645.782 C 177.043 635.112 178.847 625.194 177.699 603.481 C 177.727 586.478 175.361 581.751 167.119 570.565 C 169.474 596.469 141.732 587.52 136.541 574.013 C 131.349 554.032 158.187 543.923 158.187 543.923 C 158.187 543.923 126.768 555.934 125.372 494.913 C 123.976 435.557 181.875 427.096 162.897 432.276 C 139.209 438.045 135.465 405.202 157.717 402.91 C 164.663 403.56 179.179 410.04 164.462 419.46 C 164.462 419.46 180.109 418.21 181.113 399.479 C 182.116 380.747 163.916 344.049 179.681 322.274 C 182.334 317.975 185.264 316.017 193.715 314.321 C 194.327 308.508 198.825 303.163 202.435 301.326 C 208.111 298.11 213.051 299.037 216.197 301.523 C 218.857 296.676 221.732 293.482 226.038 291.715 C 232.973 288.772 234.525 289.957 238.242 292.312 C 241.098 287.755 242.413 287.838 247.241 284.894 C 254.36 283.717 253.974 285.842 260.45 291.14 C 268.692 285.253 286.122 291.603 286.795 309.1 C 285.803 322.436 274.906 325.151 261.585 317.658 C 270.743 325.984 283.465 343.701 301.389 346.347 C 319.313 348.993 336.614 343.701 334.691 326.365 C 332.768 309.03 301.181 308.881 303.054 288.067 C 302.428 270.584 318.898 255.118 336.356 258.095 C 353.815 261.072 350.507 291.039 398.538 290.221 z "
+         id="path738"
+         sodipodi:nodetypes="ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 356.435 346.62 C 355.86 364.581 325.177 361.448 304.921 360.479 C 278.595 359.248 227.331 314.399 260.658 290.591 "
+         id="path619"
+         sodipodi:nodetypes="csc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 164.84 449.519 C 148.356 467.181 193.531 463.016 174.259 440.1 C 166.389 431.28 133.049 458.939 133.049 489.552 C 133.049 520.165 143.646 534.294 149.533 535.471 C 155.42 536.649 164.84 531.939 164.84 527.23 C 164.84 521.343 160.13 511.923 153.066 513.1 C 141.291 513.1 147.178 523.697 153.065 523.697 "
+         id="path625"
+         sodipodi:nodetypes="csccccc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 163.389 451.386 C 163.389 451.386 138.936 461.294 138.936 490.729 C 138.936 520.165 146.001 518.988 146.001 518.988 "
+         id="path626"
+         sodipodi:nodetypes="ccc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 166.017 430.681 C 166.017 430.681 190.743 427.148 189.566 449.519 C 188.388 471.89 180.146 473.068 167.195 471.89 C 154.243 470.713 161.308 455.407 161.308 455.407 "
+         id="path627" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 156.598 543.714 C 156.598 543.714 175.437 542.536 174.259 522.52 C 173.082 502.504 158.953 501.326 150.711 502.504 C 142.469 503.681 139.971 508.307 142.469 515.384 "
+         id="path628"
+         sodipodi:nodetypes="cccc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 150.711 567.262 C 150.711 567.262 154.647 559.104 167.598 559.104 C 180.55 559.104 186.58 589.49 185.403 622.458 C 184.225 655.426 151.888 683.828 144.823 681.473 C 137.759 679.118 134.226 677.94 140.113 673.231 "
+         id="path630"
+         sodipodi:nodetypes="ccccc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 172.392 643.307 L 149.533 681.473 "
+         id="path633"
+         sodipodi:nodetypes="cc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 141.291 667.343 C 141.291 667.759 146.345 666.238 149.878 668.592 C 153.41 670.947 154.243 674.408 154.243 674.408 "
+         id="path634"
+         sodipodi:nodetypes="ccc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 144.824 650.86 C 144.824 650.86 149.341 649.041 155.228 651.396 C 161.115 653.751 160.923 659.058 160.923 659.058 "
+         id="path635"
+         sodipodi:nodetypes="ccc"
+         transform="matrix(0.911613,0.000000,0.000000,0.716141,16.13082,185.6733)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 172.796 757.761 C 170.442 757.761 184.511 743.187 168.372 739.167 C 151.484 738.477 144.722 757.131 147.077 768.905 C 149.432 780.68 165.673 809.955 196.286 812.31 C 226.899 814.665 274.737 807.209 304.585 810.787 C 334.025 814.22 366.525 825.059 378.299 836.834 C 390.073 848.608 397.411 848.726 397.411 860.501 C 397.411 872.275 380.596 878.317 373.935 871.241 "
+         id="path636"
+         sodipodi:nodetypes="ccccssss"
+         transform="translate(0.975418,-27.81978)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 369.843 876.925 C 374.148 874.011 384.399 856.5 374.565 846.11 C 359.371 830.709 348.4 824.631 340.907 822.133 "
+         id="path637"
+         sodipodi:nodetypes="csc"
+         transform="translate(0.975418,-27.81978)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 347.55 863.28 C 353.378 859.748 354.234 847.982 348.144 839.006 C 342.053 830.031 326.203 822.841 295.071 820.207 C 271.488 818.225 207.227 828.651 183.679 821.586 C 160.13 814.522 131.872 790.973 134.227 760.36 C 135.748 739.738 146.144 725.894 166.505 723.254 C 189.363 723.111 191.921 739.756 191.921 758.594 C 191.921 768.275 179.171 776.886 166.85 774.532 C 154.528 771.344 147.987 750.579 168.801 738.923 "
+         id="path638"
+         sodipodi:nodetypes="csscccccc"
+         transform="translate(0.975418,-27.81978)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 337.411 844.588 C 337.411 844.588 347.176 850.273 344.821 854.983 C 342.467 859.692 336.163 857.683 340.325 852.687 "
+         id="path642"
+         sodipodi:nodetypes="ccc"
+         transform="translate(0.975418,-27.81978)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 238.947 291.395 C 238.947 291.395 232.287 298.055 235.617 313.874 C 238.947 329.693 245.608 328.861 245.608 328.861 "
+         id="path643" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 216.468 300.553 C 215.635 302.218 206.762 312.411 211.758 323.234 C 216.753 334.058 220.714 336.211 220.714 336.211 "
+         id="path644"
+         sodipodi:nodetypes="ccc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 193.988 313.874 C 193.988 313.874 186.793 324.496 185.421 343.429 C 184.049 362.362 193.21 388.429 192.954 398.127 C 192.373 418.736 168.942 428.966 168.942 428.966 "
+         id="path645"
+         sodipodi:nodetypes="cssc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 159.854 543.661 C 161.519 543.661 193.989 513.689 193.989 620.258 C 191.491 681.868 155.691 687.696 155.691 687.696 "
+         id="path652"
+         sodipodi:nodetypes="ccc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 162.486 689.712 C 175.634 686.376 202.911 700.702 193.099 725.036 "
+         id="path653"
+         sodipodi:nodetypes="cc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 167.784 681.47 C 176.223 682.255 183.103 688.374 186.242 696.813 "
+         id="path654"
+         sodipodi:nodetypes="cc" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 148.198 477.055 C 148.198 477.055 158.189 491.209 173.175 491.209 C 188.161 491.209 193.157 475.39 193.157 475.39 "
+         id="path655" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 146.533 484.548 C 146.533 484.548 155.691 501.2 171.51 502.032 C 187.329 502.865 193.157 491.209 193.157 491.209 "
+         id="path656" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 179.835 509.525 C 179.835 509.525 191.492 514.521 191.492 528.675 C 191.492 542.828 180.668 539.498 180.668 539.498 "
+         id="path657" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 356.435 346.62 C 355.86 364.581 325.177 361.448 304.921 360.479 C 278.595 359.248 227.331 314.399 260.658 290.591 "
+         id="path712"
+         sodipodi:nodetypes="csc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 164.84 449.519 C 148.356 467.181 193.531 463.016 174.259 440.1 C 166.389 431.28 133.049 458.939 133.049 489.552 C 133.049 520.165 143.646 534.294 149.533 535.471 C 155.42 536.649 164.84 531.939 164.84 527.23 C 164.84 521.343 160.13 511.923 153.066 513.1 C 141.291 513.1 147.178 523.697 153.065 523.697 "
+         id="path713"
+         sodipodi:nodetypes="csccccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 163.389 451.386 C 163.389 451.386 138.936 461.294 138.936 490.729 C 138.936 520.165 146.001 518.988 146.001 518.988 "
+         id="path714"
+         sodipodi:nodetypes="ccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 166.017 430.681 C 166.017 430.681 190.743 427.148 189.566 449.519 C 188.388 471.89 180.146 473.068 167.195 471.89 C 154.243 470.713 161.308 455.407 161.308 455.407 "
+         id="path715"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 156.598 543.714 C 156.598 543.714 175.437 542.536 174.259 522.52 C 173.082 502.504 158.953 501.326 150.711 502.504 C 142.469 503.681 139.971 508.307 142.469 515.384 "
+         id="path716"
+         sodipodi:nodetypes="cccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 150.711 567.262 C 150.711 567.262 154.647 559.104 167.598 559.104 C 180.55 559.104 186.58 589.49 185.403 622.458 C 184.225 655.426 151.888 683.828 144.823 681.473 C 137.759 679.118 134.226 677.94 140.113 673.231 "
+         id="path717"
+         sodipodi:nodetypes="ccccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 172.392 643.307 L 149.533 681.473 "
+         id="path718"
+         sodipodi:nodetypes="cc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 141.291 667.343 C 141.291 667.759 146.345 666.238 149.878 668.592 C 153.41 670.947 154.243 674.408 154.243 674.408 "
+         id="path719"
+         sodipodi:nodetypes="ccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 144.824 650.86 C 144.824 650.86 149.341 649.041 155.228 651.396 C 161.115 653.751 160.923 659.058 160.923 659.058 "
+         id="path720"
+         sodipodi:nodetypes="ccc"
+         transform="matrix(-0.911613,0.000000,0.000000,0.716141,780.7370,185.6733)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 172.796 757.761 C 170.442 757.761 184.511 743.187 168.372 739.167 C 151.484 738.477 144.722 757.131 147.077 768.905 C 149.432 780.68 165.673 809.955 196.286 812.31 C 226.899 814.665 274.737 807.209 304.585 810.787 C 334.025 814.22 366.525 825.059 378.299 836.834 C 390.073 848.608 397.411 848.726 397.411 860.501 C 397.411 872.275 380.596 878.317 373.935 871.241 "
+         id="path721"
+         sodipodi:nodetypes="ccccssss"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,795.8925,-27.81978)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 369.843 876.925 C 374.148 874.011 384.399 856.5 374.565 846.11 C 359.371 830.709 348.4 824.631 340.907 822.133 "
+         id="path722"
+         sodipodi:nodetypes="csc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,795.8925,-27.81978)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 347.55 863.28 C 353.378 859.748 354.234 847.982 348.144 839.006 C 342.053 830.031 326.203 822.841 295.071 820.207 C 271.488 818.225 207.227 828.651 183.679 821.586 C 160.13 814.522 131.872 790.973 134.227 760.36 C 135.748 739.738 146.144 725.894 166.505 723.254 C 189.363 723.111 191.921 739.756 191.921 758.594 C 191.921 768.275 179.171 776.886 166.85 774.532 C 154.528 771.344 147.987 750.579 168.801 738.923 "
+         id="path723"
+         sodipodi:nodetypes="csscccccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,795.8925,-27.81978)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 337.411 844.588 C 337.411 844.588 347.176 850.273 344.821 854.983 C 342.467 859.692 336.163 857.683 340.325 852.687 "
+         id="path724"
+         sodipodi:nodetypes="ccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,795.8925,-27.81978)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 238.947 291.395 C 238.947 291.395 232.287 298.055 235.617 313.874 C 238.947 329.693 245.608 328.861 245.608 328.861 "
+         id="path725"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 216.468 300.553 C 215.635 302.218 206.762 312.411 211.758 323.234 C 216.753 334.058 220.714 336.211 220.714 336.211 "
+         id="path726"
+         sodipodi:nodetypes="ccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 193.988 313.874 C 193.988 313.874 186.793 324.496 185.421 343.429 C 184.049 362.362 193.21 388.429 192.954 398.127 C 192.373 418.736 168.942 428.966 168.942 428.966 "
+         id="path727"
+         sodipodi:nodetypes="cssc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 159.854 543.661 C 161.519 543.661 193.989 513.689 193.989 620.258 C 191.491 681.868 155.691 687.696 155.691 687.696 "
+         id="path730"
+         sodipodi:nodetypes="ccc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 162.486 689.712 C 175.634 686.376 202.911 700.702 193.099 725.036 "
+         id="path731"
+         sodipodi:nodetypes="cc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 167.784 681.47 C 176.223 682.255 183.103 688.374 186.242 696.813 "
+         id="path732"
+         sodipodi:nodetypes="cc"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 148.198 477.055 C 148.198 477.055 158.189 491.209 173.175 491.209 C 188.161 491.209 193.157 475.39 193.157 475.39 "
+         id="path733"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 146.533 484.548 C 146.533 484.548 155.691 501.2 171.51 502.032 C 187.329 502.865 193.157 491.209 193.157 491.209 "
+         id="path734"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 179.835 509.525 C 179.835 509.525 191.492 514.521 191.492 528.675 C 191.492 542.828 180.668 539.498 180.668 539.498 "
+         id="path735"
+         transform="matrix(-1.000000,0.000000,0.000000,1.000000,796.8677,-3.051758e-5)" />
+      <path
+         style="font-size:12;fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:1pt;"
+         d="M 353.01 313.456 C 353.426 313.04 351.345 304.297 361.336 304.714 C 371.326 305.13 367.58 314.288 375.906 317.618 C 383.815 319.7 397.969 321.782 398.434 321.782 C 398.899 321.782 413.053 319.7 420.962 317.618 C 429.288 314.288 425.542 305.13 435.532 304.714 C 445.523 304.297 443.442 313.04 443.858 313.456 "
+         id="path741"
+         sodipodi:nodetypes="ccccccc" />
+      <path
+         style="font-size:12;fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:1pt;"
+         d="M 373.275 349.419 C 372.981 345.298 372.026 339.869 366.404 339.453 C 355.879 339.108 347.548 360.058 370.848 360.206 C 387.903 360.317 388.046 327.851 371.652 327.375 C 348.103 326.708 344.864 340.764 345.25 343.518 C 351.207 293.121 312.004 303.312 313.877 283.748 C 314.084 273.142 324.726 271.926 336.356 273.891 C 353.815 276.69 350.507 304.858 398.434 304.089 C 446.361 304.858 443.053 276.69 460.512 273.891 C 472.142 271.926 482.784 273.142 482.991 283.748 C 484.864 303.312 445.661 293.121 451.618 343.518 C 452.004 340.764 448.765 326.708 425.216 327.375 C 408.822 327.851 408.965 360.317 426.02 360.206 C 449.32 360.058 440.989 339.108 430.464 339.453 C 424.842 339.869 423.887 345.298 423.593 349.419 "
+         id="path744"
+         sodipodi:nodetypes="ccccccccccccccc" />
+    </g>
+    <g
+       id="g658">
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect584"
+         width="177.165350"
+         height="177.165405"
+         x="407.480377"
+         y="556.299164" />
+      <rect
+         style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect565"
+         width="25.309335"
+         height="177.165405"
+         x="432.789635"
+         y="379.133698" />
+      <rect
+         style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect566"
+         width="25.309335"
+         height="177.165405"
+         x="483.408349"
+         y="379.133698" />
+      <rect
+         style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect567"
+         width="25.309379"
+         height="177.165405"
+         x="534.027018"
+         y="379.133698" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect570"
+         width="25.309335"
+         height="177.165405"
+         x="407.480344"
+         y="379.133667" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect571"
+         width="25.309335"
+         height="177.165405"
+         x="458.099057"
+         y="379.133667" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect572"
+         width="25.309379"
+         height="177.165405"
+         x="508.717727"
+         y="379.133667" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect573"
+         width="25.309291"
+         height="177.165405"
+         x="559.336397"
+         y="379.133667" />
+      <rect
+         style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect574"
+         width="19.685045"
+         height="159.448765"
+         x="271.653473"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect575"
+         width="19.685045"
+         height="159.448765"
+         x="311.023590"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect576"
+         width="19.685080"
+         height="159.448765"
+         x="350.393677"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect577"
+         width="19.685045"
+         height="159.448765"
+         x="251.968460"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect578"
+         width="19.685045"
+         height="159.448765"
+         x="291.338562"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect579"
+         width="19.685080"
+         height="159.448765"
+         x="330.708649"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect580"
+         width="19.685011"
+         height="159.448765"
+         x="370.078766"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect581"
+         width="19.685045"
+         height="159.448765"
+         x="232.283447"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect582"
+         width="19.685045"
+         height="159.448765"
+         x="212.598419"
+         y="574.015741" />
+      <rect
+         style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+         id="rect583"
+         width="177.165283"
+         height="177.165405"
+         x="212.598423"
+         y="379.133759" />
+      <path
+         style="font-size:12;fill:#fff600;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+         d="M 274.916 206.707 C 283.829 202.405 283.465 187.618 283.465 175.394 C 283.465 150.945 263.622 131.102 239.173 131.102 C 214.724 131.102 194.882 148.59 194.882 173.039 L 177.165 184.252 L 203.685 184.252 L 177.165 201.969 L 212.598 201.969 L -35.4331 520.866 L -17.7165 538.583 L 230.315 219.685 C 236.864 211.265 230.315 201.969 221.157 194.892 C 210.352 186.543 212.598 184.252 212.598 173.313 C 212.598 157.377 224.504 148.819 239.173 148.819 C 253.842 148.819 265.748 160.724 265.748 175.394 C 265.748 182.729 264.246 191.578 257.961 194.182 C 248.031 201.969 265.748 219.685 274.916 206.707 z "
+         id="path597"
+         sodipodi:nodetypes="ccccccccccssccccc"
+         transform="matrix(0.385553,5.080432e-2,-4.544009e-2,0.344844,277.4395,345.9474)" />
+      <path
+         style="font-size:12;fill:#cba323;fill-rule:evenodd;stroke:#000000;stroke-width:1pt;fill-opacity:1;"
+         d="M 194.882 361.417 L 194.882 698.031 C 194.882 733.465 211.86 751.181 245.816 751.181 L 364.665 751.181 C 398.622 751.181 398.622 786.614 398.622 786.614 C 398.622 786.614 398.622 751.181 432.578 751.181 L 551.427 751.181 C 585.384 751.181 602.362 733.465 602.362 698.031 L 602.362 361.417 L 194.882 361.417 z M 212.598 379.134 L 212.598 556.299 L 389.764 556.299 L 389.764 379.134 L 212.598 379.134 z M 407.48 379.134 L 407.48 556.299 L 584.646 556.299 L 584.646 379.134 L 407.48 379.134 z M 212.599 574.016 L 212.599 680.315 C 212.599 715.749 229.577 733.465 263.533 733.465 L 336.614 733.465 C 370.57 733.465 372.047 733.465 389.764 733.465 L 389.764 574.016 L 212.599 574.016 z M 584.645 574.016 L 584.645 680.315 C 584.645 715.749 567.668 733.465 533.711 733.465 L 460.63 733.465 C 426.674 733.465 425.197 733.465 407.48 733.465 L 407.48 574.016 L 584.645 574.016 z "
+         id="path564" />
+      <path
+         style="fill:#ffffff;fill-rule:evenodd;stroke:none;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 283.464 396.85 L 230.315 447.469 L 246.669 538.583 L 320.26 538.583 L 336.614 447.469 L 283.464 396.85 z "
+         id="path585"
+         sodipodi:nodetypes="cccccc"
+         transform="matrix(0.666668,0.000000,0.000000,0.749996,112.2044,99.21460)" />
+      <path
+         style="fill:#fff600;fill-rule:evenodd;stroke:none;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 283.464 406.974 L 239.173 447.469 L 256.89 528.459 L 283.464 528.459 L 283.464 406.974 z M 292.323 406.974 L 292.323 528.459 L 318.898 528.459 L 336.614 447.469 L 292.323 406.974 z "
+         id="path586"
+         sodipodi:nodetypes="cccccccccccc"
+         transform="matrix(0.615386,0.000000,0.000000,0.699996,124.0154,126.1432)" />
+      <path
+         style="fill:#fffbff;fill-rule:evenodd;stroke:none;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 212.598 201.969 L 194.882 201.969 C 194.882 201.969 203.74 237.402 212.598 237.402 C 248.031 237.402 319.083 185.723 318.898 201.969 C 318.898 237.402 301.181 219.685 301.181 237.402 C 301.181 255.118 336.614 237.402 336.614 219.685 C 336.614 201.969 336.614 184.252 318.898 184.252 C 301.181 184.252 249.669 219.923 230.315 219.685 C 212.598 219.685 212.598 201.969 212.598 201.969 z "
+         id="path587"
+         sodipodi:nodetypes="csccccccc"
+         transform="matrix(0.500000,0.000000,0.000000,0.414212,203.7402,419.4919)" />
+      <path
+         style="fill:#fffbff;fill-rule:evenodd;stroke:none;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;"
+         d="M 212.598 201.969 L 194.882 201.969 C 194.882 201.969 203.74 237.402 212.598 237.402 C 248.031 237.402 319.083 185.723 318.898 201.969 C 318.898 237.402 301.181 219.685 301.181 237.402 C 301.181 255.118 336.614 237.402 336.614 219.685 C 336.614 201.969 336.614 184.252 318.898 184.252 C 301.181 184.252 249.669 219.923 230.315 219.685 C 212.598 219.685 212.598 201.969 212.598 201.969 z "
+         id="path588"
+         sodipodi:nodetypes="csccccccc"
+         transform="matrix(-0.500001,0.000000,0.000000,0.414212,398.6224,419.4918)" />
+      <g
+         id="g657"
+         transform="matrix(0.380477,0.000000,0.000000,0.321697,515.5089,448.8240)">
+        <g
+           id="g616"
+           transform="translate(-2.505819,-84.93567)"
+           style="font-size:12;">
+          <path
+             style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:5;fill-opacity:1;stroke:#fff600;stroke-opacity:1;stroke-dasharray:none;"
+             d="M 70.8661 574.016 C 70.8661 609.449 99.57 610.684 88.5827 627.165 L 53.1496 680.315 L 35.4331 680.315 L 53.1496 627.165 C 59.0551 609.449 70.8661 561.792 70.8661 574.016 z "
+             id="path612"
+             sodipodi:nodetypes="csccsc"
+             transform="matrix(0.977786,0.209607,-0.209607,0.977786,72.51972,-7.586670e-2)" />
+          <path
+             style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:7.9903;stroke:#fff600;stroke-opacity:1;stroke-dasharray:none;fill-opacity:1;"
+             d="M 35.4331 423.425 C 35.4331 427.092 37.6753 455.313 35.4331 458.492 C 33.1908 461.671 26.4641 439.808 22.4557 442.213 C 18.4474 444.618 14.8524 466.371 9.55405 467.717 C 4.25569 469.062 -2.74605 450 -8.85827 450 C -14.9705 450 -20.7948 469.062 -26.0931 467.717 C -31.3915 466.371 -36.1639 444.618 -40.1722 442.213 C -44.1806 439.808 -50.9074 461.671 -53.1496 458.492 C -55.3918 455.313 -53.1496 427.092 -53.1496 423.425 C -53.1496 408.756 -33.3071 396.85 -8.85827 396.85 C 15.5906 396.85 35.4331 408.756 35.4331 423.425 z "
+             id="path607"
+             sodipodi:nodetypes="cssscsssccc"
+             transform="matrix(0.782396,0.000000,0.000000,0.500480,24.64721,401.2906)" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path605"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(0.714472,-0.395507,0.699664,0.403878,-390.9118,291.3525)" />
+          <path
+             style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:5;fill-opacity:1;stroke:#fff600;stroke-opacity:1;stroke-dasharray:none;"
+             d="M -70.8661 414.567 L -70.8661 467.717 L -17.7165 467.717 L -17.7165 450 L -53.1496 450 L -53.1496 414.567 L -70.8661 414.567 z "
+             id="path602"
+             sodipodi:nodetypes="ccccccc"
+             transform="matrix(0.534606,0.845101,-0.845101,0.534606,273.7048,427.5263)" />
+          <path
+             style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:5;fill-opacity:1;stroke:#fff600;stroke-opacity:1;stroke-dasharray:none;"
+             d="M 70.8661 574.016 C 70.8661 609.449 99.57 610.684 88.5827 627.165 L 53.1496 680.315 L 35.4331 680.315 L 53.1496 627.165 C 59.0551 609.449 35.4331 591.732 -17.7165 627.165 C -29.9409 627.165 -88.5827 618.202 -88.5827 627.165 L -88.5827 680.315 L -106.299 680.315 L -106.299 627.165 C -106.299 620.224 -141.732 574.016 -141.732 556.299 C -141.732 544.075 -194.882 556.299 -194.882 538.583 C -194.882 529.724 -159.449 520.866 -159.449 503.15 C -159.449 485.433 -124.016 503.15 -106.299 503.15 C -106.299 520.866 -124.016 538.583 -88.5827 538.583 C -64.1339 538.583 88.5827 538.583 88.5827 556.299 C 88.5827 574.016 70.8661 561.792 70.8661 574.016 z "
+             id="path599"
+             sodipodi:nodetypes="csccscsccscssccsc" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path608"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(0.338499,-0.702087,0.655623,-4.558480e-3,-354.0250,632.4913)" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path609"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(0.338499,-0.702087,0.655623,-4.558480e-3,-212.2926,632.4913)" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path610"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(-0.131125,-0.768319,0.531607,-0.383740,-357.1788,763.6009)" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path613"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(0.319609,-0.710886,0.655267,-2.208355e-2,-282.4062,624.6342)" />
+          <rect
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+             id="rect614"
+             width="53.149579"
+             height="17.716512"
+             x="-458.486837"
+             y="354.098948"
+             transform="matrix(0.793682,-0.608332,0.608332,0.793682,0.000000,0.000000)" />
+          <path
+             sodipodi:type="arc"
+             style="fill-rule:evenodd;stroke:none;fill:#008d00;fill-opacity:1;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;"
+             id="path615"
+             d="M -17.716537 503.149597 A 26.574802 70.866150 0 1 0 -70.866142,503.149597 A 26.5748 70.8661 0 1 0 -17.7165 503.15 L -44.291340 503.149597 z"
+             sodipodi:cx="-44.291340"
+             sodipodi:cy="503.149597"
+             sodipodi:rx="26.574802"
+             sodipodi:ry="70.866150"
+             transform="matrix(0.202490,0.000000,0.000000,0.125000,-127.3826,519.9803)" />
+        </g>
+        <path
+           style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke:#fff600;stroke-width:5.05463;"
+           d="M 47.995 681.847 C 82.0807 681.867 82.0807 694.748 67.8297 694.748 C 47.995 694.748 -2.77556e-15 699.134 -2.77556e-15 698.031 C -2.77556e-15 696.928 -16.484 683.828 -16.484 683.828 C -17.7165 680.315 -15.3066 697.956 -17.7165 698.031 C -20.1265 698.105 -34.1454 682.65 -34.1454 682.65 C -34.1454 682.65 -32.8577 697.882 -34.1454 697.957 C -35.4331 698.031 -51.8068 688.537 -51.8068 688.537 L -52.9842 696.779 L -68.2907 706.199 L -52.9842 716.796 L -52.9842 725.038 L -37.6777 716.796 L -36.5002 732.102 L -17.6614 716.796 C -17.6614 716.796 -12.8966 733.095 -15.3065 733.28 C -17.7165 733.465 1.17743 716.796 1.17743 716.796 C -2.77556e-15 715.748 55.2288 716.795 88.5827 715.748 C 121.937 714.7 121.329 663.811 106.299 662.598 C 91.2679 661.385 47.995 665.928 47.995 662.395 "
+           id="path629"
+           sodipodi:nodetypes="ccccccccccccccccccccc"
+           transform="matrix(0.519765,0.000000,0.000000,0.747197,25.69753,-30.03348)" />
+      </g>
+      <g
+         id="g671"
+         transform="matrix(0.380477,0.000000,0.000000,0.321697,515.5089,519.6901)">
+        <g
+           id="g672"
+           transform="translate(-2.505819,-84.93567)"
+           style="font-size:12;">
+          <path
+             style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:5;fill-opacity:1;stroke:#fff600;stroke-opacity:1;stroke-dasharray:none;"
+             d="M 70.8661 574.016 C 70.8661 609.449 99.57 610.684 88.5827 627.165 L 53.1496 680.315 L 35.4331 680.315 L 53.1496 627.165 C 59.0551 609.449 70.8661 561.792 70.8661 574.016 z "
+             id="path673"
+             sodipodi:nodetypes="csccsc"
+             transform="matrix(0.977786,0.209607,-0.209607,0.977786,72.51972,-7.586670e-2)" />
+          <path
+             style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:7.9903;stroke:#fff600;stroke-opacity:1;stroke-dasharray:none;fill-opacity:1;"
+             d="M 35.4331 423.425 C 35.4331 427.092 37.6753 455.313 35.4331 458.492 C 33.1908 461.671 26.4641 439.808 22.4557 442.213 C 18.4474 444.618 14.8524 466.371 9.55405 467.717 C 4.25569 469.062 -2.74605 450 -8.85827 450 C -14.9705 450 -20.7948 469.062 -26.0931 467.717 C -31.3915 466.371 -36.1639 444.618 -40.1722 442.213 C -44.1806 439.808 -50.9074 461.671 -53.1496 458.492 C -55.3918 455.313 -53.1496 427.092 -53.1496 423.425 C -53.1496 408.756 -33.3071 396.85 -8.85827 396.85 C 15.5906 396.85 35.4331 408.756 35.4331 423.425 z "
+             id="path674"
+             sodipodi:nodetypes="cssscsssccc"
+             transform="matrix(0.782396,0.000000,0.000000,0.500480,24.64721,401.2906)" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path675"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(0.714472,-0.395507,0.699664,0.403878,-390.9118,291.3525)" />
+          <path
+             style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:5;fill-opacity:1;stroke:#fff600;stroke-opacity:1;stroke-dasharray:none;"
+             d="M -70.8661 414.567 L -70.8661 467.717 L -17.7165 467.717 L -17.7165 450 L -53.1496 450 L -53.1496 414.567 L -70.8661 414.567 z "
+             id="path676"
+             sodipodi:nodetypes="ccccccc"
+             transform="matrix(0.534606,0.845101,-0.845101,0.534606,273.7048,427.5263)" />
+          <path
+             style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke-width:5;fill-opacity:1;stroke:#fff600;stroke-opacity:1;stroke-dasharray:none;"
+             d="M 70.8661 574.016 C 70.8661 609.449 99.57 610.684 88.5827 627.165 L 53.1496 680.315 L 35.4331 680.315 L 53.1496 627.165 C 59.0551 609.449 35.4331 591.732 -17.7165 627.165 C -29.9409 627.165 -88.5827 618.202 -88.5827 627.165 L -88.5827 680.315 L -106.299 680.315 L -106.299 627.165 C -106.299 620.224 -141.732 574.016 -141.732 556.299 C -141.732 544.075 -194.882 556.299 -194.882 538.583 C -194.882 529.724 -159.449 520.866 -159.449 503.15 C -159.449 485.433 -124.016 503.15 -106.299 503.15 C -106.299 520.866 -124.016 538.583 -88.5827 538.583 C -64.1339 538.583 88.5827 538.583 88.5827 556.299 C 88.5827 574.016 70.8661 561.792 70.8661 574.016 z "
+             id="path677"
+             sodipodi:nodetypes="csccscsccscssccsc" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path678"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(0.338499,-0.702087,0.655623,-4.558480e-3,-354.0250,632.4913)" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path679"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(0.338499,-0.702087,0.655623,-4.558480e-3,-212.2926,632.4913)" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path680"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(-0.131125,-0.768319,0.531607,-0.383740,-357.1788,763.6009)" />
+          <path
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;fill-opacity:1;"
+             d="M -70.8661 423.425 C -70.8661 438.094 -83.6929 450 -88.5827 450 C -93.4725 450 -88.5827 438.094 -88.5827 423.425 C -88.5827 408.756 -93.4725 396.85 -88.5827 396.85 C -83.6929 396.85 -70.8661 408.756 -70.8661 423.425 z "
+             id="path681"
+             sodipodi:nodetypes="ccccc"
+             transform="matrix(0.319609,-0.710886,0.655267,-2.208355e-2,-282.4062,624.6342)" />
+          <rect
+             style="font-size:12;fill:#008d00;fill-rule:evenodd;stroke-width:1pt;stroke:none;stroke-opacity:1;fill-opacity:1;"
+             id="rect682"
+             width="53.149579"
+             height="17.716512"
+             x="-458.486837"
+             y="354.098948"
+             transform="matrix(0.793682,-0.608332,0.608332,0.793682,0.000000,0.000000)" />
+          <path
+             sodipodi:type="arc"
+             style="fill-rule:evenodd;stroke:none;fill:#008d00;fill-opacity:1;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;"
+             id="path683"
+             d="M -17.716537 503.149597 A 26.574802 70.866150 0 1 0 -70.866142,503.149597 A 26.5748 70.8661 0 1 0 -17.7165 503.15 L -44.291340 503.149597 z"
+             sodipodi:cx="-44.291340"
+             sodipodi:cy="503.149597"
+             sodipodi:rx="26.574802"
+             sodipodi:ry="70.866150"
+             transform="matrix(0.202490,0.000000,0.000000,0.125000,-127.3826,519.9803)" />
+        </g>
+        <path
+           style="font-size:12;fill:#cc1900;fill-rule:evenodd;stroke:#fff600;stroke-width:5.05463;"
+           d="M 47.995 681.847 C 82.0807 681.867 82.0807 694.748 67.8297 694.748 C 47.995 694.748 -2.77556e-15 699.134 -2.77556e-15 698.031 C -2.77556e-15 696.928 -16.484 683.828 -16.484 683.828 C -17.7165 680.315 -15.3066 697.956 -17.7165 698.031 C -20.1265 698.105 -34.1454 682.65 -34.1454 682.65 C -34.1454 682.65 -32.8577 697.882 -34.1454 697.957 C -35.4331 698.031 -51.8068 688.537 -51.8068 688.537 L -52.9842 696.779 L -68.2907 706.199 L -52.9842 716.796 L -52.9842 725.038 L -37.6777 716.796 L -36.5002 732.102 L -17.6614 716.796 C -17.6614 716.796 -12.8966 733.095 -15.3065 733.28 C -17.7165 733.465 1.17743 716.796 1.17743 716.796 C -2.77556e-15 715.748 55.2288 716.795 88.5827 715.748 C 121.937 714.7 121.329 663.811 106.299 662.598 C 91.2679 661.385 47.995 665.928 47.995 662.395 "
+           id="path684"
+           sodipodi:nodetypes="ccccccccccccccccccccc"
+           transform="matrix(0.519765,0.000000,0.000000,0.747197,25.69753,-30.03348)" />
+      </g>
+    </g>
+  </g>
+</svg>
diff --git a/filter/source/svgimport/test/daisies.svg b/filter/source/svgimport/test/daisies.svg
new file mode 100644
index 0000000..711db83
--- /dev/null
+++ filter/source/svgimport/test/daisies.svg
@@ -0,0 +1,155 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<!-- Created with wpg2svg/libwpg 0.1.2 -->
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="349.98" height="485.16">
+  <ellipse cx="156" cy="339.54" rx="72.78" ry="14.22" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(170,0,0); "/>
+  <polyline points="216.6 366.96, 201.42 439.74, 199.56 443.58, 194.82 448.32, 187.26 452.04, 178.8 454.92, 163.62 456.78, 141 456.78, 127.74 454.92, 119.16 451.08, 114.48 447.3, 111.66 443.58, 94.62 371.7, 173.1 368.82, 201.42 366.06" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,85); "/>
+  <polyline points="217.5 368.82, 210.9 393.42, 206.16 396.3, 200.52 398.16, 191.04 400.98, 174.06 401.94, 173.1 384.9, 176.88 374.52, 203.4 370.74, 216.6 366.96" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="82.5 339.66, 85.8 343.26, 90.48 345.42, 103.08 349.74, 116.7 351.9, 135.78 353.7, 156.96 354.06, 179.22 353.34, 195.42 351.54, 210.78 348.66, 219.48 346.56, 224.82 344.34, 227.04 342.24, 228.78 339, 221.64 371.34, 215.88 374.94, 201.84 380.28, 182.1 384.6, 163.38 385.62, 146.16 385.62, 132.84 384.6, 117.06 382.02, 106.68 379.92, 96.54 376.02, 93 373.86, 91.2 372.72, 90.48 371.34" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,85); "/>
+  <polyline points="88.32 344.34, 90.84 342.24, 98.76 339, 115.62 335.34, 132.18 333.24, 153.3 331.74, 177.42 332.52, 195.72 334.26, 210.12 337.2, 217.68 339, 221.64 340.74, 223.44 341.88, 224.46 342.96, 224.1 344.34, 223.8 344.7, 218.04 347.28, 206.52 349.74, 189.66 352.62, 165.18 354.42, 151.14 354.42, 138.66 354.06, 125.7 352.98, 114.18 351.54, 105.54 350.1, 95.46 347.58, 90.12 345.42, 87.96 344.7" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="130.56 405.72, 130.56 424.62, 134.34 438.84, 139.98 455.82, 147.6 467.16, 151.38 470.94, 151.38 461.52, 155.1 452.04, 161.76 456.78, 175.92 461.52, 163.62 453, 153.24 438.84, 146.64 422.76, 139.98 401.94" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="139.02 403.86, 133.38 417.12, 129.6 432.18, 128.64 440.7, 128.64 451.08, 131.52 458.7, 120.18 446.4, 114.48 438.84, 107.82 444.48, 101.22 450.18, 90.84 455.82, 98.4 442.56, 111.66 423.72, 123.9 404.76, 132.42 397.26" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="131.52 384.9, 117.3 378.3, 103.14 369.78, 98.4 366.96, 93.66 366.06, 90.84 366.06, 87.96 366.96, 86.1 369.78, 85.2 373.56, 85.2 379.26, 88.98 385.92, 92.7 390.6, 94.62 395.28, 95.58 401.94, 96.54 407.64, 98.4 413.28, 101.22 417.12, 105.06 419.88, 108.78 419.88, 114.48 419.88, 119.16 418.02, 123 415.2, 126.78 410.46, 129.6 404.76, 134.34 398.16" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="136.26 385.92, 153.24 378.3, 166.44 371.7, 173.1 369.78, 176.88 368.82, 182.58 370.74, 184.44 374.52, 186.3 379.26, 186.3 384, 183.48 388.68, 181.56 395.28, 180.66 400.98, 182.58 406.68, 183.48 411.36, 183.48 417.12, 180.66 422.76, 176.88 425.58, 174.06 426.48, 170.22 426.48, 165.54 424.62, 161.76 419.88, 154.2 414.24, 151.38 409.5, 141.9 399.12" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="139.98 393.42, 159.84 386.82, 172.2 383.04, 174.96 384.9, 172.2 386.82, 168.36 389.64, 163.62 390.6, 159.84 392.52, 158.94 394.38, 165.54 399.12, 172.2 403.86, 174.96 406.68, 171.18 407.64, 163.62 406.68, 159.84 404.76, 155.1 402.9, 149.46 401.94, 141 400.02" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="134.34 390.6, 124.86 390.6, 111.66 387.78, 104.04 385.92, 103.14 387.78, 107.82 391.56, 114.48 393.42, 118.26 396.3, 114.48 400.02, 110.7 403.86, 108.78 406.68, 108.78 409.5, 116.4 405.72, 122.04 402.9, 131.52 399.12, 135.24 397.26" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="106.92 376.44, 101.22 373.56, 96.54 371.7, 92.7 370.74, 90.84 373.56, 89.88 377.34, 91.8 381.18, 91.8 382.08, 91.8 377.34, 93.66 375.48, 97.44 375.48" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(255,255,255); "/>
+  <polyline points="152.28 383.04, 169.32 374.52, 174.96 372.66, 179.7 373.56, 181.56 375.48, 180.66 377.34, 177.84 377.34, 174.06 376.44, 159.84 381.18" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(255,255,255); "/>
+  <polyline points="146.64 382.08, 143.76 381.18, 138.12 379.26, 131.52 381.18, 128.64 382.08, 125.82 383.04, 123.9 384.9, 121.08 388.68, 121.08 392.52, 123 401.94, 124.86 405.72, 130.56 408.54, 135.24 408.54, 141.9 407.64, 145.68 406.68, 148.5 404.76, 149.46 402.9, 148.5 400.98, 147.6 399.12, 145.68 396.3, 143.76 394.38, 142.86 389.64, 142.86 386.82, 143.76 384" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="133.38 384, 131.52 384.9, 129.6 385.92, 127.74 385.92, 124.86 386.82, 123.9 389.64, 123.9 391.56, 125.82 399.12, 126.78 401.94, 125.82 394.38, 125.82 391.56, 129.6 387.78" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(255,255,255); "/>
+  <polyline points="133.38 266.76, 126.78 233.64, 118.26 201.48, 110.7 175.98, 101.22 162.78, 86.1 147.66, 69.12 133.44, 60.6 124.92, 56.76 123.06, 62.46 122.1, 73.86 124.92, 88.98 134.4, 97.44 141, 104.04 148.56, 95.58 124.92, 88.98 109.8, 82.32 98.46, 87.06 99.36, 93.66 114.48, 99.36 126.84, 106.92 148.56, 115.44 179.76, 128.64 227.04, 136.26 269.58" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="143.76 346.14, 138.12 319.68, 133.38 283.74, 128.64 267.72, 123 259.2, 115.44 252.54, 100.32 244.02, 78.6 235.56, 58.68 233.64, 44.52 233.64, 60.6 228, 79.5 225.18, 98.4 228, 111.66 233.64, 122.04 241.26, 129.6 250.68, 135.24 258.24, 137.16 262.98, 138.12 249.72, 141 234.6, 146.64 218.52, 149.46 219.48, 143.76 234.6, 139.02 266.76, 139.02 283.74, 141.9 311.16, 145.68 339.54, 147.6 342.36, 148.5 344.28, 148.5 345.24, 148.5 346.14, 149.46 346.14, 148.5 347.1, 146.64 347.1, 142.86 348.96" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="144.72 175.02, 136.26 167.52, 131.52 160.86, 128.64 153.3, 126.78 142.92, 125.82 124.92, 128.64 103.2, 131.52 90.9, 118.26 116.46, 114.48 136.32, 113.52 152.34, 116.4 162.78, 122.04 173.16, 132.42 181.62, 144.72 186.36" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="153.24 346.14, 152.28 344.28, 154.2 329.16, 161.76 287.58, 162.72 287.58, 166.44 292.32, 163.62 300.78, 157.02 337.62, 157.02 342.36, 157.98 343.32, 157.98 346.14, 156.06 346.14" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="165.54 346.14, 164.58 344.28, 162.72 287.58, 168.36 289.44, 166.44 302.7, 167.46 329.16, 169.32 341.46, 169.32 344.28, 169.32 346.14, 167.46 346.14" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="187.26 155.16, 192.96 133.44, 193.92 109.8, 192.96 97.5, 191.04 92.76, 189.18 89.94, 187.26 88.02, 179.7 89.94, 185.4 86.16, 191.04 86.16, 197.64 88.02, 200.52 94.68, 201.42 112.62, 197.64 134.4, 188.22 158.04" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="188.22 155.16, 197.64 138.18, 209.04 126.84, 218.46 121.14, 225.12 121.14, 216.6 125.88, 204.3 142.92, 196.74 160.86, 189.18 167.52" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="217.5 97.5, 200.52 128.7, 186.3 169.38, 204.3 127.74, 221.34 95.64" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="195.78 185.46, 208.08 168.42, 216.6 155.16, 221.34 144.78, 224.16 127.74, 226.02 133.44, 226.02 146.7, 230.76 141.96, 247.8 138.18, 244.98 141.96, 237.36 143.82, 227.94 148.56, 221.34 154.26, 210 173.16, 203.4 182.58" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+  <polyline points="45.42 47.4, 35.04 41.7, 31.26 41.7, 27.48 41.7, 26.58 42.72, 26.58 45.48, 28.44 48.36, 33.18 53.1, 36.96 56.82, 42.66 58.74, 49.26 62.52" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="70.02 60.66, 63.42 43.62, 61.5 33.24, 60.6 25.62, 64.38 19.98, 67.2 18.12, 70.02 18.12, 72.84 20.88, 74.76 23.76, 76.62 29.46, 77.58 37.98, 79.5 53.1, 78.6 67.26" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="76.62 65.34, 80.46 38.88, 82.32 23.76, 83.28 19.98, 85.2 17.16, 88.98 14.28, 89.88 14.28, 91.8 15.24, 93.66 18.12, 93.66 35.1, 89.88 59.7, 84.24 65.34" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="72.84 64.44, 68.16 51.18, 61.5 40.8, 53.04 31.32, 45.42 27.54, 39.78 26.58, 37.92 27.54, 37.92 29.46, 37.92 32.28, 40.74 42.72, 44.52 53.1, 52.08 63.48, 64.38 71.04, 68.16 72" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="85.2 65.34, 90.84 51.18, 103.14 28.5, 108.78 20.88, 115.44 16.2, 117.3 16.2, 119.16 17.16, 119.16 19.98, 113.52 36.96, 105.96 51.18, 100.32 59.7, 94.62 64.44, 87.06 68.16" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="89.88 69.18, 99.36 58.74, 107.82 46.44, 115.44 39.84, 121.08 34.14, 123.9 31.32, 127.74 31.32, 128.64 34.14, 127.74 41.7, 121.08 51.18, 117.3 57.78, 114.48 61.56, 108.78 66.3, 95.58 71.04" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="89.88 72.9, 102.18 67.26, 115.44 58.74, 127.74 52.08, 132.42 51.18, 135.24 51.18, 138.12 51.18, 139.02 53.1, 139.02 54.96, 137.16 58.74, 134.34 61.56, 128.64 66.3, 122.04 71.04, 116.4 73.92, 111.66 75.78, 107.82 76.68, 99.36 79.56" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="91.8 75.78, 94.62 82.38, 98.4 90.9, 98.4 99.36, 95.58 105.12, 93.66 107.88, 90.84 109.8, 87.96 109.8, 85.2 109.8, 83.28 107.88, 79.5 106.98, 78.6 103.2, 76.62 90.9, 76.62 80.52" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="88.98 73.92, 96.54 73.92, 106.92 74.82, 111.66 76.68, 113.52 79.56, 115.44 83.28, 114.48 88.98, 112.56 90.9, 108.78 92.76, 105.06 92.76, 101.22 91.86, 98.4 89.94, 93.66 85.26, 89.88 80.52" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="59.64 82.38, 41.64 88.98, 30.3 93.72, 23.7 96.54, 18.96 101.28, 18.06 103.2, 18.06 106.02, 20.88 106.98, 24.66 107.88, 37.92 104.1, 44.52 101.28, 54.9 92.76" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="72.84 77.64, 66.24 89.94, 60.6 101.28, 58.68 107.88, 58.68 113.58, 60.6 115.5, 65.34 116.46, 69.12 115.5, 72.84 113.58, 76.62 108.84, 79.5 105.12, 82.32 99.36, 83.28 92.76, 84.24 87.12, 84.24 81.42, 83.28 72.9" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="67.2 79.56, 56.76 86.16, 48.3 93.72, 43.56 98.46, 38.82 104.1, 36.96 107.88, 35.04 112.62, 35.04 115.5, 36.96 117.36, 39.78 117.36, 45.42 115.5, 52.08 111.72, 58.68 106.02, 64.38 96.54, 68.16 89.94, 70.98 82.38" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="69.12 72.9, 58.68 65.34, 51.12 61.56, 44.52 57.78, 38.82 54.96, 33.18 54.06, 28.44 54.06, 21.84 54.96, 17.1 56.82, 14.22 58.74, 14.22 61.56, 14.22 65.34, 18.06 68.16, 20.88 71.04, 25.56 73.92, 31.26 75.78, 40.74 78.6, 65.34 78.6" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="69.12 76.68, 55.86 75.78, 35.04 75.78, 22.8 77.64, 18.96 79.56, 17.1 81.42, 16.2 84.3, 18.06 87.12, 20.88 88.98, 25.56 89.94, 36.96 89.94, 52.08 85.26, 67.2 81.42, 74.76 76.68" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="69.12 64.44, 65.34 57.78, 59.64 46.44, 54 38.88, 49.26 34.14, 45.42 31.32, 53.04 39.84, 56.76 48.36, 59.64 54.06, 62.46 61.56, 60.6 61.56, 58.68 60.66, 59.64 63.48, 62.46 65.34, 64.38 67.26, 65.34 67.26" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="62.46 71.04, 58.68 68.16, 48.3 65.34, 43.56 62.52, 40.74 62.52, 36 62.52, 41.64 65.34, 45.42 68.16, 42.66 71.04, 46.38 71.04, 52.08 72, 58.68 73.92, 65.34 73.92" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="40.74 50.22, 40.74 49.32, 36 46.44, 33.18 44.58, 31.26 44.58, 34.14 47.4, 38.82 49.32, 41.64 53.1, 42.66 54.96" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="54 78.6, 46.38 79.56, 39.78 82.38, 37.92 83.28, 46.38 83.28, 54.9 81.42, 61.5 79.56" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="63.42 85.26, 60.6 87.12, 57.78 89.94, 54 96.54, 49.26 103.2, 45.42 108.84, 54 104.1, 58.68 95.64, 59.64 95.64, 61.5 92.76, 63.42 89.94, 65.34 88.02" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="78.6 79.56, 79.5 80.52, 79.5 84.3, 79.5 86.16, 73.86 86.16, 71.94 88.98, 71.94 86.16, 72.84 82.38" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="78.6 84.3, 79.5 87.12, 80.46 91.86, 78.6 98.46, 76.62 99.36, 77.58 92.76, 78.6 82.38" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="87.06 81.42, 89.88 84.3, 91.8 85.26, 91.8 89.94, 89.88 89.94, 87.06 86.16, 86.1 82.38" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="94.62 77.64, 93.66 75.78, 94.62 81.42, 96.54 82.38, 99.36 82.38, 101.22 80.52, 105.06 80.52, 106.92 80.52, 104.04 78.6, 98.4 76.68" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="101.22 72, 106.92 69.18, 114.48 65.34, 117.3 63.48, 121.08 63.48, 114.48 69.18, 110.7 70.08, 102.18 71.04" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="95.58 67.26, 103.14 58.74, 106.92 54.96, 110.7 51.18, 115.44 48.36, 115.44 51.18, 115.44 53.1, 111.66 56.82, 106.92 60.66, 104.04 63.48" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="89.88 61.56, 94.62 51.18, 99.36 44.58, 101.22 41.7, 105.06 39.84, 104.04 44.58, 101.22 48.36, 101.22 52.08, 96.54 58.74, 92.7 62.52, 90.84 63.48" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="83.28 62.52, 86.1 54.96, 87.96 49.32, 88.98 43.62, 88.98 36.96, 89.88 31.32, 89.88 27.54, 88.98 24.72, 87.96 29.46, 87.96 35.1, 86.1 42.72, 84.24 48.36, 83.28 48.36, 82.32 50.22, 82.32 55.92, 81.36 61.56, 81.36 63.48" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="73.86 59.7, 74.76 49.32, 75.72 43.62, 73.86 36.96, 72.84 31.32, 71.94 25.62, 71.94 32.28, 72.84 40.8, 72.84 44.58, 70.98 47.4, 70.02 47.4, 70.02 50.22, 73.86 53.1, 73.86 57.78, 73.86 60.66" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="78.6 57.78, 75.72 58.74, 72.84 59.7, 69.12 61.56, 64.38 65.34, 59.64 72, 57.78 75.78, 57.78 79.56, 58.68 82.38, 60.6 83.28, 64.38 85.26, 70.98 84.3, 78.6 83.28, 86.1 80.52, 90.84 75.78, 96.54 69.18, 96.54 65.34, 95.58 59.7, 92.7 57.78, 87.96 55.92, 80.46 56.82" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="86.1 64.44, 81.36 63.48, 75.72 65.34, 72.84 67.26, 69.12 69.18, 65.34 72, 64.38 75.78, 64.38 76.68, 66.24 77.64, 68.16 77.64, 67.2 76.68, 66.24 75.78, 68.16 72.9, 70.98 71.04, 72.84 69.18, 75.72 67.26, 79.5 65.34, 82.32 65.34, 83.28 65.34" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="93.66 63.48, 93.66 68.16, 88.98 73.92, 83.28 78.6, 78.6 80.52, 72.84 82.38, 64.38 82.38, 61.5 81.42, 69.12 81.42, 79.5 77.64, 86.1 73.92, 90.84 70.08, 91.8 66.3, 92.7 63.48" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="200.52 59.7, 194.82 54.06, 190.14 50.22, 186.3 48.36, 183.48 47.4, 180.66 48.36, 180.66 51.18, 183.48 58.74, 193.92 71.04, 202.38 75.78, 207.12 69.18" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="216.6 83.28, 207.12 75.78, 197.64 70.08, 188.22 64.44, 183.48 59.7, 176.88 56.82, 171.18 55.92, 170.22 57.78, 170.22 60.66, 174.06 68.16, 184.44 74.82, 200.52 82.38, 221.34 88.02" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="218.46 86.16, 198.66 79.56, 183.48 72, 176.88 69.18, 172.2 69.18, 171.18 72, 174.06 76.68, 180.66 80.52, 189.18 85.26, 195.78 88.02, 208.08 89.94, 217.5 89.94, 225.12 89.94" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="219.42 87.12, 206.16 87.12, 193.92 87.12, 192 89.94, 192 93.72, 193.92 96.54, 196.74 99.36, 202.38 100.38, 205.26 101.28, 208.08 100.38, 211.86 98.46, 216.6 95.64, 221.34 92.76" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="210 78.6, 202.38 66.3, 200.52 58.74, 198.66 51.18, 196.74 40.8, 197.64 36.96, 200.52 34.14, 203.4 36.06, 209.04 44.58, 216.6 61.56, 218.46 76.68, 220.38 82.38, 218.46 83.28" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="218.46 82.38, 214.68 59.7, 219.42 36.96, 221.34 28.5, 224.16 26.58, 225.12 26.58, 226.98 27.54, 228.84 40.8, 228.84 62.52, 226.02 79.56, 225.12 82.38" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="225.12 82.38, 229.86 59.7, 233.58 45.48, 235.5 39.84, 239.28 35.1, 242.1 35.1, 243.96 36.06, 242.1 58.74, 239.28 72, 235.5 80.52, 233.58 82.38" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="235.5 80.52, 243.06 65.34, 248.7 56.82, 255.36 51.18, 260.04 49.32, 262.92 51.18, 262.92 54.06, 261.96 60.66, 259.14 66.3, 253.44 73.92, 250.62 80.52, 245.88 86.16" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="244.98 86.16, 252.54 78.6, 265.8 72, 276.18 69.18, 280.86 69.18, 285.6 71.04, 286.56 72.9, 285.6 76.68, 282.78 79.56, 280.86 81.42, 276.18 84.3, 272.4 86.16, 267.66 88.02, 262.92 89.94, 257.22 92.76, 253.44 92.76, 247.8 93.72" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="266.7 136.32, 253.44 134.4, 250.62 132.48, 247.8 131.58, 244.98 128.7, 243.06 126.84, 242.1 123.06, 242.1 119.22, 247.8 117.36, 253.44 118.32, 257.22 121.14, 262.92 125.88, 267.66 128.7, 271.44 132.48, 271.44 133.44" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="269.52 133.44, 262.92 124.92, 259.14 123.06, 257.22 121.14, 256.32 117.36, 256.32 113.58, 257.22 107.88, 261.06 106.98, 265.8 109.8, 269.52 114.48, 272.4 122.1, 274.26 129.66, 275.16 133.44" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="273.3 131.58, 270.48 123.96, 270.48 117.36, 269.52 111.72, 269.52 106.02, 270.48 101.28, 273.3 99.36, 277.08 100.38, 279 104.1, 280.86 114.48, 280.86 122.1, 279.9 129.66" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="279 129.66, 280.86 106.02, 283.74 95.64, 286.56 95.64, 288.42 98.46, 288.42 109.8, 285.6 124.92, 283.74 127.74" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="282.78 126.84, 287.52 107.88, 289.38 98.46, 289.38 92.76, 292.26 90.9, 295.02 90.9, 298.86 94.68, 299.76 100.38, 299.76 106.98, 297 115.5, 292.26 121.14, 290.34 125.88" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="289.38 126.84, 297.9 106.02, 304.5 94.68, 310.2 87.12, 313.02 85.26, 315.84 85.26, 317.76 88.02, 317.76 92.76, 314.94 100.38, 312.06 107.88, 309.24 113.58, 304.5 121.14, 299.76 125.88, 294.12 129.66, 290.34 131.58" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="291.24 127.74, 302.64 119.22, 315.84 112.62, 324.36 108.84, 330.96 106.98, 334.8 106.98, 335.7 110.76, 335.7 113.58, 329.1 119.22, 319.62 126.84, 314.94 128.7, 305.46 132.48, 300.72 134.4, 295.02 134.4, 291.24 134.4" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="291.24 131.58, 305.46 131.58, 313.98 129.66, 322.44 128.7, 329.1 127.74, 332.88 128.7, 335.7 131.58, 335.7 134.4, 332.88 138.18, 328.2 141, 324.36 142.92, 318.72 144.78, 315.84 144.78, 308.28 144.78, 298.86 144.78, 294.12 142.92" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="291.24 140.04, 302.64 141.96, 311.1 141.96, 315.84 143.82, 321.54 146.7, 324.36 149.52, 325.32 152.34, 326.22 156.12, 326.22 158.04, 324.36 160.86, 321.54 160.86, 316.8 160.86, 312.06 158.94, 307.38 157.08, 303.6 154.26, 300.72 152.34, 297 150.42, 294.12 145.68" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="292.26 143.82, 297.9 149.52, 304.5 153.3, 310.2 157.08, 312.06 159.9, 313.98 163.68, 314.94 167.52, 314.94 172.2, 314.94 175.98, 313.02 179.76, 310.2 179.76, 307.38 178.86, 304.5 175.98, 301.68 173.16, 298.86 170.28, 297.9 166.5, 295.98 161.76, 294.12 158.04, 291.24 152.34" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="290.34 143.82, 295.02 152.34, 297.9 161.76, 298.86 165.6, 298.86 174.12, 297 181.62, 295.02 184.5, 293.16 185.46, 290.34 183.54, 287.52 181.62, 284.64 175.02, 283.74 167.52, 282.78 153.3" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="285.6 149.52, 286.56 158.04, 286.56 165.6, 284.64 176.88, 282.78 185.46, 280.86 191.1, 278.04 193.98, 276.18 193.98, 274.26 193.98, 271.44 186.36, 270.48 182.58, 269.52 175.02, 270.48 161.76, 271.44 153.3, 275.16 147.66" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="279.9 144.78, 276.18 157.08, 273.3 166.5, 272.4 173.16, 270.48 177.9, 268.56 181.62, 266.7 184.5, 264.78 188.28, 262.92 190.14, 260.04 192.96, 257.22 193.98, 252.54 194.88, 246.84 193.98, 245.88 189.24, 247.8 182.58, 251.58 171.24, 256.32 163.68, 259.14 158.04, 264.78 152.34, 269.52 148.56" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="270.48 148.56, 266.7 152.34, 262.92 158.04, 258.18 165.6, 256.32 169.38, 253.44 173.16, 249.66 175.98, 246.84 178.86, 243.06 178.86, 242.1 175.98, 242.1 170.28, 245.88 162.78, 249.66 158.04, 256.32 149.52, 262.92 145.68, 267.66 143.82, 275.16 141" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="268.56 144.78, 262.92 147.66, 256.32 152.34, 250.62 158.04, 245.88 161.76, 241.2 163.68, 238.32 163.68, 236.46 160.86, 238.32 156.12, 243.96 152.34, 248.7 148.56, 258.18 143.82, 266.7 141, 275.16 140.04" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="264.78 143.82, 252.54 145.68, 245.88 149.52, 240.24 152.34, 229.86 153.3, 226.98 153.3, 226.02 149.52, 228.84 145.68, 238.32 141, 244.98 139.08, 253.44 139.08, 261.06 139.08, 270.48 139.08" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="271.44 139.08, 258.18 140.04, 246.84 141, 239.28 141, 235.5 141, 230.76 139.08, 228.84 138.18, 228.84 134.4, 235.5 131.58, 242.1 131.58, 249.66 131.58, 260.04 133.44, 268.56 135.3, 279.9 138.18" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="221.34 92.76, 217.5 94.68, 210 99.36, 208.08 102.24, 208.08 105.12, 208.08 109.8, 210.9 110.76, 213.78 110.76, 218.46 106.98, 221.34 103.2, 224.16 98.46, 226.98 92.76" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="222.24 94.68, 220.38 100.38, 217.5 107.88, 217.5 116.46, 218.46 118.32, 221.34 122.1, 226.02 122.1, 228.84 121.14, 232.62 115.5, 232.62 106.02, 232.62 100.38, 231.72 92.76, 230.76 89.94" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="229.86 90.9, 229.86 100.38, 229.86 111.72, 232.62 117.36, 235.5 122.1, 237.36 125.88, 241.2 127.74, 243.96 127.74, 247.8 127.74, 249.66 123.96, 249.66 120.18, 248.7 115.5, 246.84 109.8, 244.98 103.2, 242.1 98.46, 239.28 93.72" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="239.28 93.72, 243.06 103.2, 245.88 111.72, 249.66 119.22, 251.58 121.14, 256.32 124.92, 260.04 125.88, 262.92 126.84, 266.7 126.84, 269.52 123.96, 268.56 120.18, 265.8 114.48, 262.92 109.8, 257.22 104.1, 254.4 102.24, 249.66 99.36, 244.98 97.5" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="239.28 94.68, 245.88 99.36, 252.54 103.2, 256.32 106.98, 261.06 109.8, 269.52 110.76, 274.26 111.72, 278.04 112.62, 281.82 112.62, 283.74 110.76, 283.74 107.88, 280.86 105.12, 275.16 101.28, 270.48 98.46, 254.4 94.68, 247.8 94.68, 242.1 94.68" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="239.28 90.9, 244.98 88.98, 252.54 87.12, 258.18 86.16, 262.92 86.16, 269.52 86.16, 275.16 86.16, 279.9 88.02, 282.78 89.94, 284.64 91.86, 288.42 95.64, 290.34 98.46, 288.42 100.38, 284.64 101.28, 280.86 100.38, 273.3 99.36, 270.48 98.46, 266.7 96.54, 259.14 95.64, 252.54 95.64, 247.8 95.64, 242.1 94.68" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="223.2 80.52, 226.02 63.48, 226.02 43.62, 225.12 42.72, 223.2 61.56, 221.34 65.34, 221.34 66.3, 221.34 75.78, 219.42 79.56, 220.38 81.42" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="216.6 79.56, 213.78 75.78, 211.86 65.34, 210 58.74, 209.04 67.26, 211.86 75.78, 212.76 79.56" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="200.52 68.16, 198.66 65.34, 195.78 62.52, 191.04 58.74, 192.96 65.34, 203.4 70.08" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="208.08 80.52, 197.64 73.92, 190.14 71.04, 187.26 70.08, 192 72, 200.52 74.82, 203.4 77.64" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="200.52 85.26, 195.78 83.28, 185.4 81.42, 183.48 78.6, 185.4 77.64, 203.4 83.28, 208.08 84.3" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="218.46 88.98, 208.08 91.86, 201.42 92.76, 208.08 93.72, 211.86 93.72, 220.38 90.9, 222.24 89.94, 218.46 94.68, 223.2 95.64, 226.02 92.76, 226.98 97.5, 226.98 99.36, 228.84 100.38, 228.84 93.72" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="231.72 93.72, 231.72 97.5, 235.5 100.38, 237.36 107.88, 239.28 112.62, 239.28 104.1, 241.2 100.38, 239.28 96.54" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="246.84 100.38, 246.84 103.2, 249.66 108.84, 251.58 112.62, 255.36 115.5, 261.06 118.32, 259.14 114.48, 255.36 109.8, 250.62 106.02, 249.66 103.2" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="249.66 97.5, 253.44 97.5, 256.32 101.28, 264.78 104.1, 272.4 106.98, 268.56 103.2, 264.78 101.28, 261.06 100.38, 258.18 98.46" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="244.98 92.76, 245.88 91.86, 251.58 91.86, 257.22 89.94, 261.06 89.94, 270.48 90.9, 275.16 94.68, 268.56 92.76, 264.78 92.76, 257.22 91.86, 249.66 92.76" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="250.62 85.26, 255.36 83.28, 261.96 80.52, 271.44 77.64, 272.4 78.6, 265.8 80.52, 266.7 82.38, 261.96 82.38, 256.32 85.26" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="241.2 79.56, 243.96 74.82, 247.8 72, 250.62 68.16, 247.8 75.78, 244.98 79.56, 245.88 83.28, 248.7 84.3, 251.58 84.3, 248.7 86.16, 246.84 87.12, 244.98 82.38, 241.2 82.38" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="234.6 78.6, 235.5 74.82, 238.32 66.3, 238.32 60.66, 237.36 61.56, 234.6 66.3, 234.6 69.18, 232.62 71.04, 230.76 72.9, 228.84 76.68, 228.84 79.56" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="266.7 135.3, 262.92 135.3, 260.04 135.3, 253.44 135.3, 250.62 136.32, 249.66 137.22, 260.04 137.22, 261.96 137.22, 266.7 137.22" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="261.06 141.96, 256.32 141.96, 245.88 141.96, 243.96 145.68, 250.62 145.68, 260.04 143.82, 262.92 141.96" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="261.06 144.78, 267.66 142.92, 271.44 141.96, 268.56 143.82, 267.66 146.7, 272.4 147.66, 270.48 150.42, 271.44 150.42, 266.7 157.08, 261.06 163.68, 260.04 168.42, 261.96 170.28, 266.7 162.78, 271.44 159.9, 272.4 159.9, 274.26 154.26, 275.16 152.34" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="265.8 147.66, 260.04 150.42, 257.22 154.26, 257.22 156.12, 262.92 149.52" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="279.9 152.34, 279 156.12, 277.08 165.6, 277.08 169.38, 277.08 174.12, 277.08 178.86, 277.08 179.76, 278.04 169.38, 279.9 163.68, 280.86 161.76, 282.78 161.76, 284.64 158.94, 283.74 153.3, 282.78 151.38" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="287.52 152.34, 287.52 155.16, 290.34 159.9, 290.34 163.68, 291.24 158.94, 292.26 160.86, 294.12 164.64, 294.12 163.68, 294.12 155.16, 293.16 151.38, 291.24 150.42" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="297.9 153.3, 303.6 157.08, 308.28 161.76, 310.2 165.6, 309.24 166.5, 306.36 165.6, 303.6 159.9, 301.68 158.04, 300.72 161.76, 299.76 158.94" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="297.9 143.82, 301.68 144.78, 310.2 144.78, 312.06 147.66, 314.94 150.42, 311.1 151.38, 306.36 148.56, 308.28 150.42, 304.5 150.42, 300.72 148.56" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="295.02 135.3, 302.64 135.3, 308.28 135.3, 313.98 133.44, 321.54 133.44, 313.02 134.4, 313.02 138.18, 310.2 138.18, 304.5 141, 298.86 140.04, 295.98 139.08" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="295.98 128.7, 300.72 127.74, 305.46 123.96, 310.2 121.14, 315.84 120.18, 309.24 124.92, 308.28 126.84, 303.6 129.66, 297.9 131.58" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="291.24 125.88, 295.02 121.14, 297.9 115.5, 299.76 110.76, 301.68 108.84, 301.68 113.58, 302.64 113.58, 298.86 120.18, 295.98 123.06, 291.24 125.88" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="287.52 122.1, 288.42 115.5, 291.24 111.72, 293.16 109.8, 290.34 120.18, 285.6 125.88, 284.64 127.74, 284.64 125.88" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="280.86 130.56, 283.74 126.84, 283.74 120.18, 279 123.96, 279 125.88, 277.08 125.88, 277.08 123.06, 275.16 127.74, 272.4 128.7, 270.48 128.7, 269.52 128.7, 266.7 131.58, 261.96 128.7, 259.14 131.58, 267.66 132.48" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="235.5 75.78, 226.98 73.92, 219.42 74.82, 214.68 77.64, 211.86 80.52, 211.86 83.28, 214.68 88.02, 218.46 92.76, 223.2 96.54, 228.84 100.38, 232.62 101.28, 239.28 103.2, 247.8 102.24, 251.58 100.38, 254.4 96.54, 254.4 89.94, 249.66 83.28, 244.98 79.56, 239.28 75.78" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="291.24 123.06, 284.64 122.1, 278.04 123.96, 271.44 128.7, 267.66 134.4, 267.66 138.18, 267.66 144.78, 270.48 151.38, 274.26 155.16, 279.9 155.16, 288.42 153.3, 294.12 150.42, 297.9 144.78, 299.76 139.08, 297.9 131.58, 294.12 125.88" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="244.98 86.16, 241.2 82.38, 235.5 79.56, 226.98 78.6, 221.34 79.56, 218.46 82.38, 218.46 86.16, 221.34 87.12, 220.38 85.26, 224.16 81.42, 232.62 81.42, 241.2 83.28, 243.96 86.16" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="250.62 90.9, 250.62 95.64, 247.8 97.5, 239.28 99.36, 232.62 98.46, 226.98 95.64, 222.24 91.86, 234.6 96.54, 241.2 96.54, 246.84 94.68, 249.66 92.76, 250.62 89.94" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="292.26 136.32, 291.24 131.58, 287.52 127.74, 282.78 127.74, 278.04 131.58, 274.26 134.4, 273.3 138.18, 273.3 142.92, 274.26 145.68, 274.26 140.04, 277.08 134.4, 280.86 131.58, 283.74 130.56, 287.52 131.58, 291.24 134.4" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="295.98 136.32, 295.02 141, 293.16 146.7, 289.38 150.42, 283.74 152.34, 277.08 153.3, 274.26 150.42, 280.86 151.38, 288.42 147.66, 293.16 143.82, 295.02 138.18" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="154.2 180.72, 147.6 174.12, 141.9 169.38, 138.12 165.6, 134.34 162.78, 131.52 160.86, 124.86 159.9, 117.3 159.9, 116.4 161.76, 116.4 166.5, 117.3 169.38, 122.04 174.12, 131.52 179.76, 144.72 183.54" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="161.76 192.96, 153.24 187.32, 148.5 183.54, 142.86 179.76, 138.12 178.86, 131.52 177.9, 123.9 175.98, 121.08 175.98, 117.3 177.9, 117.3 179.76, 119.16 184.5, 124.86 186.36, 131.52 190.14, 139.02 192.06, 150.36 196.8, 156.06 197.7, 166.44 198.72" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="158.94 196.8, 155.1 193.98, 150.36 192.06, 147.6 191.1, 141 189.24, 132.42 189.24, 123.9 189.24, 122.04 191.1, 120.18 192.96, 120.18 194.88, 124.86 199.62, 130.56 200.58, 135.24 200.58, 141.9 200.58, 153.24 201.48, 157.98 201.48" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="154.2 199.62, 147.6 199.62, 141 199.62, 134.34 202.44, 130.56 204.36, 127.74 206.22, 126.78 208.08, 126.78 210.96, 131.52 212.82, 133.38 213.78, 136.26 213.78, 146.64 210.96, 152.28 207.18, 158.94 206.22" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="162.72 204.36, 156.06 204.36, 151.38 207.18, 147.6 209.1, 141.9 210.96, 139.98 214.74, 139.02 218.52, 139.02 221.34, 139.02 224.16, 141 225.18, 144.72 225.18, 150.36 223.26, 156.06 221.34, 158.94 217.56, 162.72 213.78, 165.54 210.96, 167.46 208.08" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="162.72 196.8, 145.68 180.72, 138.12 171.24, 133.38 163.68, 131.52 158.94, 130.56 152.34, 132.42 148.56, 137.16 146.7, 144.72 148.56, 147.6 151.38, 152.28 155.16, 156.06 160.86, 158.94 166.5, 159.84 175.98, 163.62 184.5, 165.54 190.14, 165.54 195.84" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="165.54 193.98, 154.2 165.6, 152.28 155.16, 150.36 149.52, 151.38 145.68, 153.24 143.82, 155.1 142.92, 159.84 143.82, 163.62 147.66, 165.54 152.34, 166.44 159.9, 168.36 165.6, 169.32 174.12, 169.32 187.32, 169.32 196.8, 169.32 197.7" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="168.36 197.7, 168.36 182.58, 169.32 167.52, 170.22 159.9, 171.18 155.16, 173.1 151.38, 174.06 147.66, 176.88 144.78, 178.8 141.96, 181.56 141.96, 184.44 143.82, 186.3 146.7, 187.26 150.42, 187.26 155.16, 187.26 161.76, 187.26 169.38, 182.58 185.46, 175.92 197.7, 173.1 201.48" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="170.22 203.4, 183.48 173.16, 186.3 167.52, 187.26 163.68, 190.14 158.94, 192 156.12, 195.78 152.34, 200.52 150.42, 203.4 150.42, 205.26 153.3, 206.16 156.12, 206.16 161.76, 203.4 169.38, 199.56 175.02, 193.92 183.54, 187.26 192.06, 179.7 200.58, 176.88 204.36" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="177.84 202.44, 197.64 178.86, 201.42 172.2, 208.08 165.6, 210.9 163.68, 214.68 162.78, 219.42 162.78, 220.38 164.64, 220.38 168.42, 219.42 172.2, 218.46 175.02, 214.68 178.86, 211.86 182.58, 208.08 186.36, 203.4 191.1, 199.56 194.88, 191.04 199.62, 184.44 204.36" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="183.48 204.36, 192.96 195.84, 195.78 192.06, 201.42 188.28, 204.3 185.46, 209.04 182.58, 213.78 179.76, 217.5 176.88, 220.38 175.98, 224.16 175.98, 226.98 175.98, 228.84 178.86, 228.84 182.58, 225.12 186.36, 221.34 189.24, 218.46 191.1, 214.68 193.98, 210.9 196.8, 203.4 200.58, 198.66 203.4, 193.92 205.32, 189.18 206.22" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="181.56 208.08, 188.22 204.36, 197.64 199.62, 202.38 196.8, 210 195.84, 214.68 194.88, 219.42 194.88, 222.24 194.88, 223.2 196.8, 223.2 199.62, 221.34 203.4, 217.5 206.22, 212.76 209.1, 205.26 210.96, 194.82 212.82, 191.04 213.78, 183.48 213.78, 177.84 213.78" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,85,255); "/>
+  <polyline points="156.06 180.72, 151.38 169.38, 149.46 164.64, 146.64 158.04, 142.86 155.16, 141.9 158.94, 143.76 162.78, 144.72 165.6, 141.9 166.5, 141.9 168.42, 143.76 172.2, 150.36 180.72, 155.1 186.36, 161.76 191.1, 162.72 190.14, 157.02 181.62" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="155.1 190.14, 152.28 189.24, 147.6 186.36, 141.9 180.72, 137.16 181.62, 143.76 185.46, 149.46 189.24, 153.24 192.96, 158.94 194.88" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="136.26 174.12, 134.34 170.28, 133.38 167.52, 129.6 165.6, 126.78 165.6, 124.86 165.6, 126.78 169.38, 132.42 173.16, 139.02 175.98" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="155.1 196.8, 151.38 196.8, 145.68 193.98, 141 193.98, 137.16 193.98, 141.9 194.88, 145.68 196.8, 153.24 199.62, 156.06 199.62" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="152.28 201.48, 147.6 202.44, 142.86 204.36, 141.9 207.18, 146.64 208.08, 151.38 205.32, 155.1 205.32" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="161.76 205.32, 156.06 206.22, 151.38 210.96, 148.5 213.78, 153.24 215.7, 156.06 210.96, 157.98 212.82, 161.76 212.82, 162.72 210.96" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="183.48 211.92, 190.14 209.1, 197.64 205.32, 204.3 204.36, 210.9 202.44, 206.16 207.18, 201.42 209.1, 197.64 210.06" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="194.82 196.8, 203.4 191.1, 209.04 186.36, 216.6 181.62, 212.76 187.32, 208.08 191.1, 200.52 194.88, 195.78 198.72" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="183.48 199.62, 191.04 190.14, 196.74 186.36, 202.38 179.76, 206.16 175.02, 210.9 172.2, 205.26 178.86, 203.4 183.54, 199.56 188.28, 194.82 193.98, 187.26 200.58" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="176.88 198.72, 182.58 186.36, 185.4 181.62, 190.14 176.88, 192 173.16, 193.92 169.38, 197.64 166.5, 200.52 161.76, 197.64 170.28, 191.04 180.72, 188.22 184.5, 183.48 193.98, 178.8 200.58" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="171.18 191.1, 174.06 178.86, 179.7 173.16, 180.66 165.6, 180.66 158.94, 181.56 164.64, 180.66 177.9, 175.92 185.46, 173.1 192.96" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="164.58 181.62, 163.62 173.16, 164.58 161.76, 161.76 155.16, 159.84 160.86, 161.76 172.2, 162.72 179.76, 162.72 187.32" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,0,170); "/>
+  <polyline points="184.44 211.92, 189.18 210.06, 190.14 208.08, 192 206.22, 192 204.36, 192 202.44, 190.14 200.58, 189.18 198.72, 187.26 196.8, 183.48 194.88, 181.56 192.96, 177.84 192.06, 174.06 191.1, 171.18 190.14, 167.46 190.14, 163.62 190.14, 159.84 190.14, 156.06 191.1, 155.1 192.96, 152.28 193.98, 151.38 195.84, 149.46 197.7, 149.46 199.62, 149.46 201.48, 150.36 204.36, 153.24 207.18, 156.06 208.08, 157.02 210.96, 159.84 211.92, 162.72 213.78, 166.44 213.78, 172.2 214.74, 176.88 214.74, 179.7 214.74" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="180.66 198.72, 175.92 195.84, 168.36 193.98, 160.8 194.88, 157.02 196.8, 155.1 199.62, 155.1 202.44, 156.06 203.4, 156.06 201.48, 158.94 198.72, 165.54 196.8, 170.22 196.8, 176.88 198.72" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="187.26 201.48, 187.26 203.4, 185.4 206.22, 183.48 208.08, 181.56 209.1, 179.7 210.06, 176.88 210.96, 174.06 210.96, 173.1 210.96, 176.88 210.96, 183.48 209.1, 185.4 207.18, 188.22 205.32, 188.22 203.4" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; stroke-dasharray: ; fill-rule: evenodd; fill: rgb(170,85,0); "/>
+  <polyline points="196.74 296.04, 207.12 296.04, 207.12 347.1, 196.74 347.1" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,85); "/>
+  <polyline points="146.64 210.06, 262.92 210.06, 262.92 300.78, 146.64 300.78" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(255,255,255); "/>
+  <polyline points="148.5 211.92, 260.04 211.92, 260.04 298.92, 148.5 298.92" style="stroke-width: 0.06; stroke: rgb(255,85,85); stroke-opacity: 0.996094; fill: none; fill-rule: evenodd; "/>
+  <polyline points="167.46 330.12, 171.18 320.64, 177.84 311.16, 183.48 302.7, 187.26 297.96, 192 294.18, 196.74 290.4, 203.4 288.48, 207.12 288.48, 210.9 290.4, 214.68 293.22, 217.5 297, 214.68 297, 208.08 295.08, 203.4 297, 200.52 299.82, 194.82 304.56, 187.26 313.08, 179.7 323.52, 175.92 330.12, 173.1 335.76, 172.2 339.54, 171.18 342.36, 169.32 345.24, 166.44 346.14, 164.58 345.24, 163.62 342.36, 165.54 335.76" style="stroke-width: 0.06; stroke: rgb(0,0,0); stroke-opacity: 0.996094; fill-rule: evenodd; fill: rgb(85,255,85); "/>
+</svg>
diff --git a/filter/source/svgimport/test/ellipticarcs.svg b/filter/source/svgimport/test/ellipticarcs.svg
new file mode 100644
index 0000000..163d4aa
--- /dev/null
+++ filter/source/svgimport/test/ellipticarcs.svg
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?> 
+<svg xmlns="http://www.w3.org/2000/svg" width="180" height="60">
+    <path d="M10,42 a8,8 0 0,1 8,-8 c32,0 32,2 64,2 a8,8 0 0,0 8,-8 a8,8 0 0,0 8,8 c32,0 32,-2 64,-2 a8,8 0 0,1 8,8" stroke="black" fill="none" stroke-width="0.5" /> 
+</svg>
\ No newline at end of file
diff --git a/filter/source/svgimport/test/firewall_denco_01.svg b/filter/source/svgimport/test/firewall_denco_01.svg
new file mode 100644
index 0000000..146ed48
--- /dev/null
+++ filter/source/svgimport/test/firewall_denco_01.svg
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) --><svg height="209.76378pt" id="svg28384" inkscape:version="0.40+cvs" sodipodi:docbase="C:\Documents and Settings\denco\Desktop" sodipodi:docname="firewall.svg" sodipodi:version="0.32" width="147.40157pt" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:sodipodi="http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xml="http://www.w3.org/XML/1998/namespace">
+  <metadata>
+    <rdf:RDF xmlns:cc="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
+      <cc:Work rdf:about="">
+        <dc:title>Firewall</dc:title>
+        <dc:description></dc:description>
+        <dc:subject>
+          <rdf:Bag>
+            <rdf:li>software</rdf:li>
+            <rdf:li>firewall</rdf:li>
+            <rdf:li>hardware</rdf:li>
+            <rdf:li>computer</rdf:li>
+          </rdf:Bag>
+        </dc:subject>
+        <dc:publisher>
+          <cc:Agent rdf:about="http://www.openclipart.org/">
+            <dc:title>Open Clip Art Library</dc:title>
+          </cc:Agent>
+        </dc:publisher>
+        <dc:creator>
+          <cc:Agent>
+            <dc:title>denco</dc:title>
+          </cc:Agent>
+        </dc:creator>
+        <dc:rights>
+          <cc:Agent>
+            <dc:title>denco</dc:title>
+          </cc:Agent>
+        </dc:rights>
+        <dc:date>2005/04/11</dc:date>
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
+        <cc:license rdf:resource="http://creativecommons.org/licenses/GPL/2.0/"/>
+        <dc:language>en</dc:language>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <defs id="defs3">
+    <linearGradient gradientTransform="scale(0.688245,1.452971)" gradientUnits="userSpaceOnUse" id="linearGradient897" x1="469.85454" x2="436.90248" xlink:href="#linearGradient6508" y1="245.17311" y2="186.03951"/>
+    <linearGradient gradientTransform="scale(0.688245,1.452971)" gradientUnits="userSpaceOnUse" id="linearGradient612" x1="497.27309" x2="438.40750" xlink:href="#linearGradient6508" y1="244.14597" y2="174.45950"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient665" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14054" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14052" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14050" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14048" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14046" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14044" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14042" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14040" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14038" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14036" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14034" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14032" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14030" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14028" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14026" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14024" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14022" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14020" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14018" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14016" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14014" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14012" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14010" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14008" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14006" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14004" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient14002" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient14000" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient13998" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+    <linearGradient gradientTransform="scale(1.460717,0.684595)" gradientUnits="userSpaceOnUse" id="linearGradient13996" inkscape:collect="always" x1="-224.73973" x2="-224.64251" xlink:href="#linearGradient6508" y1="-377.94208" y2="-349.36030"/>
+    <linearGradient id="linearGradient6508">
+      <stop id="stop6509" offset="0.0000000" style="stop-color:#ff0000;stop-opacity:1.0000000;"/>
+      <stop id="stop6511" offset="0.64370060" style="stop-color:#ffb900;stop-opacity:1.0000000;"/>
+      <stop id="stop6512" offset="0.79038113" style="stop-color:#ffff00;stop-opacity:0.84102565;"/>
+      <stop id="stop6510" offset="1.0000000" style="stop-color:#ffffff;stop-opacity:0.21568628;"/>
+    </linearGradient>
+    <linearGradient gradientTransform="scale(1.187820,0.841878)" gradientUnits="userSpaceOnUse" id="linearGradient13994" inkscape:collect="always" x1="-259.81807" x2="-259.74080" xlink:href="#linearGradient6508" y1="-307.19340" y2="-284.47438"/>
+  </defs>
+  <sodipodi:namedview bordercolor="#666666" borderopacity="1.0" id="base" inkscape:current-layer="layer1" inkscape:cx="209.30161" inkscape:cy="139.30080" inkscape:document-units="px" inkscape:pageopacity="0.0" inkscape:pageshadow="2" inkscape:window-height="597" inkscape:window-width="712" inkscape:window-x="229" inkscape:window-y="188" inkscape:zoom="1.4000000" pagecolor="#ffffff" showgrid="true"/>
+  <g id="layer1" inkscape:groupmode="layer" inkscape:label="Layer 1">
+    <g id="Firewall" inkscape:label="Firewall" transform="translate(-220.5885,-178.3663)">
+      <g id="Wall" inkscape:label="Wall" transform="translate(-0.747098,-1.721314)">
+        <rect height="182.62634" id="rect8373" rx="3.0537825" ry="2.0864239" sodipodi:fill-cmyk="(0.0000000 0.0083682006 0.0000000 0.54393303)" sodipodi:stroke-cmyk="(0.0000000 0.0000000 0.0000000 1.0000000)" style="fill:#747374;fill-opacity:1.0000000;fill-rule:evenodd;stroke:#000000;stroke-width:0.99926577pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" width="41.849327" x="289.89532" y="193.01767"/>
+        <g id="g8340" transform="translate(-10.00000,-1.136868e-13)">
+          <rect height="9.9311152" id="rect7908" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient13994);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,-53.02380)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7909" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient13996);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,-53.02380)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7911" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient13998);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,-41.84268)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7912" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14000);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,-41.84268)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7922" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14002);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,-30.66156)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7923" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14004);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,-30.66156)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7925" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14006);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,-19.48044)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7926" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14008);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,-19.48044)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7945" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14010);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,-8.299320)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7946" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14012);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,-8.299320)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7948" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14014);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,2.881800)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7949" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14016);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,2.881800)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7952" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14018);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,14.06291)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7953" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14020);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,14.06291)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7955" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14022);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,25.24403)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7956" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14024);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,25.24403)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7992" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14026);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,36.42515)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7993" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14028);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,36.42515)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7995" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14030);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,47.60627)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7996" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14032);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,47.60627)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect7999" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14034);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,58.78738)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8000" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14036);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,58.78738)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8002" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14038);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,69.96850)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8003" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14040);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,69.96850)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8007" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14042);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,81.14961)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8008" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14044);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,81.14961)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8010" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14046);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,92.33073)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8011" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14048);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,92.33073)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8014" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14050);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,103.5118)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8015" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient14052);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(-1.000000,0.000000,0.000000,-1.000000,0.320159,103.5118)" width="22.607079" x="-339.51367" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8017" rx="2.5448186" ry="2.0864239" style="fill:url(#linearGradient14054);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:0.79871912pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,114.6930)" width="14.422236" x="-315.78238" y="-258.46179"/>
+          <rect height="9.9311152" id="rect8018" rx="3.0537825" ry="2.0864239" style="fill:url(#linearGradient665);fill-opacity:1.0000000;fill-rule:evenodd;stroke:#4d4d4d;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000" transform="matrix(1.000000,0.000000,0.000000,-1.000000,641.3198,114.6930)" width="22.607079" x="-339.51367" y="-258.46179"/>
+        </g>
+      </g>
+      <path d="M 305.89581,374.14246 C 324.30470,373.63350 343.53161,333.40974 343.02265,313.54876 C 339.96887,321.63859 336.36371,325.18309 325.67356,334.34444 C 349.93060,283.44807 326.41484,296.73552 319.28935,234.07910 C 299.14939,270.21552 293.43818,275.49145 302.59952,321.81854 C 298.01885,309.38785 296.47574,306.82984 286.71923,299.19538 C 292.82680,316.07738 294.71236,320.44446 288.09583,336.65185 C 288.60479,327.99451 275.83495,315.64999 277.21807,319.18151 C 282.15910,331.79747 280.20894,340.00800 284.72541,356.76015 C 288.37808,370.30835 298.63226,373.63348 305.89581,374.14246 z " id="Fire" inkscape:label="Fire" sodipodi:nodetypes="cccccccssc" sodipodi:stroke-cmyk="(0.00000000 0.00000000 0.00000000 0.73640168)" style="fill:url(#linearGradient612);fill-opacity:1;fill-rule:evenodd;stroke:url(#linearGradient897);stroke-width:0.64764762pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.72803348"/>
+    </g><text id="Text" inkscape:label="Text" sodipodi:linespacing="100%" style="font-size:16.000000;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans;text-anchor:start;writing-mode:lr-tb" x="53.5313" xml:space="preserve" y="211.97818"><tspan id="tspan1404">Firewall</tspan></text>
+  </g>
+</svg>
diff --git a/filter/source/svgimport/test/makefile.mk b/filter/source/svgimport/test/makefile.mk
new file mode 100644
index 0000000..b7427a5
--- /dev/null
+++ filter/source/svgimport/test/makefile.mk
@@ -0,0 +1,90 @@
+#*************************************************************************
+#
+#    OpenOffice.org - a multi-platform office productivity suite
+#
+#    Author:
+#      Fridrich Strba  <fridrich.strba@bluewin.ch>
+#      Thorsten Behrens <tbehrens@novell.com>	   	
+#
+#      Copyright (C) 2008, Novell Inc.
+#      Parts copyright 2005 by Sun Microsystems, Inc.
+#
+#   The Contents of this file are made available subject to
+#   the terms of GNU Lesser General Public License Version 2.1.
+#
+#*************************************************************************
+
+PRJ=..$/..$/..
+PRJNAME=filter
+TARGET=tests
+TARGETTYPE=CUI
+ENABLE_EXCEPTIONS=TRUE
+
+# --- Settings -----------------------------------------------------
+
+.INCLUDE: settings.mk
+
+# --- svg2xml binary ------------------------------------------------------
+
+TARGET2=svg2odf
+
+APP1TARGET=$(TARGET2)
+APP1LIBSALCPPRT=
+APP1OBJS=$(SLO)$/svg2odf.obj
+
+APP1LIBS=\
+	$(SLB)$/svgimport.lib
+
+APP1STDLIBS=\
+	$(BASEGFXLIB)		\
+	$(UNOTOOLSLIB)		\
+	$(COMPHELPERLIB)	\
+	$(CPPUHELPERLIB)	\
+	$(CPPULIB)			\
+	$(SALLIB)
+
+# --- Targets ------------------------------------------------------
+
+.INCLUDE : target.mk
+
+# --- Special ------------------------------------------------------
+
+TESTFILES=\
+	anarchist.svg \
+	andorra.svg \
+	daisies.svg \
+	ellipticarcs.svg \
+	firewall_denco_01.svg \
+	mediatrice.svg \
+	mouse_the_structorr.svg \
+	network_could_nicolas_cl.svg \
+	otto_01.svg \
+	roundingerrors.svg \
+	test.svg
+
+$(MISC)$/%_svgi_unittest_succeeded : $(BIN)$/svg2odf
+    rm -f $(MISC)$/$(@:s/_succeeded/.xml/:f)
+	$(BIN)$/svg2odf $(@:s/_svgi_unittest_succeeded/.svg/:f) $(MISC)$/$(@:s/_succeeded/.xml/:f) $(BIN)$/svgi_unittest_test.ini
+	$(TOUCH) $@
+
+.IF "$(GUI)" == "WNT"
+SAXPARSERLIB=$(SOLARBINDIR)$/sax.uno$(DLLPOST)
+UNOXMLLIB=$(SOLARBINDIR)$/$(DLLPRE)unoxml$(OFFICEUPD)$(DLLPOSTFIX)$(DLLPOST)
+.ELSE
+SAXPARSERLIB=$(SOLARLIBDIR)$/sax.uno$(DLLPOST)
+UNOXMLLIB=$(SOLARLIBDIR)$/$(DLLPRE)unoxml$(OFFICEUPD)$(DLLPOSTFIX)$(DLLPOST)
+.ENDIF
+
+$(BIN)$/unittestservices.rdb : makefile.mk $(SAXPARSERLIB) $(UNOXMLLIB)
+    rm -f $@
+	$(REGCOMP) -register -r $@ -c $(SAXPARSERLIB)
+	$(REGCOMP) -register -r $@ -c $(UNOXMLLIB)
+
+$(BIN)$/svgi_unittest_test.ini : makefile.mk
+	rm -f $@
+	@echo UNO_SERVICES=$(BIN)$/unittestservices.rdb > $@
+	@echo UNO_TYPES=$(UNOUCRRDB:s/\/\\/) >> $@
+
+ALLTAR : $(BIN)$/svgi_unittest_test.ini \
+		 $(BIN)$/unittestservices.rdb \
+         $(foreach,i,$(TESTFILES:s/.svg/_svgi_unittest_succeeded/:f) $(MISC)$/$i)
diff --git a/filter/source/svgimport/test/mediatrice.svg b/filter/source/svgimport/test/mediatrice.svg
new file mode 100644
index 0000000..4e4cef8
--- /dev/null
+++ filter/source/svgimport/test/mediatrice.svg
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN' 'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'>
+<svg fill-opacity="1" xmlns:xlink="http://www.w3.org/1999/xlink" color-rendering="auto" color-interpolation="auto" text-rendering="auto" stroke="black" stroke-linecap="square" width="915" stroke-miterlimit="10" shape-rendering="auto" stroke-opacity="1" fill="black" stroke-dasharray="none" font-weight="normal" stroke-width="1" height="544" xmlns="http://www.w3.org/2000/svg" font-family="&apos;Dialog&apos;" font-style="normal" stroke-linejoin="miter" font-size="12" stroke-dashoffset="0" image-rendering="auto">
+  <!--Generated by the Batik Graphics2D SVG Generator-->
+  <defs id="genericDefs" />
+  <g>
+    <g fill="blue" text-rendering="geometricPrecision" stroke-width="1.4" stroke="blue">
+      <line y2="277" fill="none" x1="375" x2="480" y1="298" />
+    </g>
+    <g font-size="15" fill-opacity="0" fill="rgb(0,0,0)" text-rendering="geometricPrecision" stroke="rgb(0,0,0)" stroke-width="0.7" stroke-opacity="0">
+      <text xml:space="preserve" x="420" y="288" stroke="none">a</text>
+      <circle fill="rgb(0,255,0)" r="107" cx="375" cy="298" stroke="none" stroke-width="1.4" />
+    </g>
+    <g fill="blue" text-rendering="geometricPrecision" font-size="15" stroke-width="1.4" stroke="blue">
+      <circle fill="none" r="107" cx="375" cy="298" />
+    </g>
+    <g font-size="15" fill-opacity="0" fill="rgb(0,0,0)" text-rendering="geometricPrecision" stroke="rgb(0,0,0)" stroke-width="0.7" stroke-opacity="0">
+      <text xml:space="preserve" x="281" y="317" stroke="none">k</text>
+      <text xml:space="preserve" x="290" font-size="13" y="321" stroke="none">a</text>
+    </g>
+    <g font-size="13" fill-opacity="0" fill="rgb(0,255,0)" text-rendering="geometricPrecision" stroke="rgb(0,255,0)" stroke-width="1.4" stroke-opacity="0">
+      <circle r="107" cx="480" cy="277" stroke="none" />
+    </g>
+    <g fill="blue" text-rendering="geometricPrecision" font-size="13" stroke-width="1.4" stroke="blue">
+      <circle fill="none" r="107" cx="480" cy="277" />
+    </g>
+    <g font-size="15" fill-opacity="0" fill="rgb(0,0,0)" text-rendering="geometricPrecision" stroke="rgb(0,0,0)" stroke-width="0.7" stroke-opacity="0">
+      <text xml:space="preserve" x="575" y="258" stroke="none">k</text>
+      <text xml:space="preserve" x="584" font-size="13" y="262" stroke="none">b</text>
+    </g>
+    <g fill="blue" text-rendering="geometricPrecision" font-size="13" stroke-width="1.4" stroke="blue">
+      <line y2="554" fill="none" x1="368" x2="481" y1="-10" />
+    </g>
+    <g font-size="15" fill-opacity="0" fill="rgb(0,0,0)" text-rendering="geometricPrecision" stroke="rgb(0,0,0)" stroke-width="0.7" stroke-opacity="0">
+      <text xml:space="preserve" x="378" y="16" stroke="none">b</text>
+    </g>
+    <g fill="red" text-rendering="geometricPrecision" font-size="15" stroke-width="2.1" stroke="red">
+      <line y2="301" fill="none" x1="372" x2="378" y1="295" />
+      <line y2="301" fill="none" x1="378" x2="372" y1="295" />
+      <text x="375" y="288" fill="black" stroke="none" stroke-width="0.7" xml:space="preserve">A</text>
+      <line y2="280" fill="none" x1="477" x2="483" y1="274" />
+      <line y2="280" fill="none" x1="483" x2="477" y1="274" />
+      <text x="480" y="267" fill="black" stroke="none" stroke-width="0.7" xml:space="preserve">B</text>
+      <line fill="none" x1="443" x2="449" y1="375" y2="381" stroke="gray" />
+      <line fill="none" x1="449" x2="443" y1="375" y2="381" stroke="gray" />
+      <text x="446" y="368" fill="black" stroke="none" stroke-width="0.7" xml:space="preserve">C</text>
+      <line fill="none" x1="406" x2="412" y1="194" y2="200" stroke="gray" />
+      <line fill="none" x1="412" x2="406" y1="194" y2="200" stroke="gray" />
+      <text x="409" y="187" fill="black" stroke="none" stroke-width="0.7" xml:space="preserve">D</text>
+    </g>
+  </g>
+</svg>
diff --git a/filter/source/svgimport/test/mouse_the_structorr.svg b/filter/source/svgimport/test/mouse_the_structorr.svg
new file mode 100644
index 0000000..db3e332
--- /dev/null
+++ filter/source/svgimport/test/mouse_the_structorr.svg
@@ -0,0 +1,130 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) --><svg height="512.00000pt" id="svg1" inkscape:version="0.41+cvs" sodipodi:docbase="/home/the_structorr/Grafika/svg/moje" sodipodi:docname="mouse.svg" sodipodi:version="0.32" width="512.00000pt" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:sodipodi="http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+  <metadata>
+    <rdf:RDF xmlns:cc="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
+      <cc:Work rdf:about="">
+        <dc:title>mouse</dc:title>
+        <dc:description></dc:description>
+        <dc:subject>
+          <rdf:Bag>
+            <rdf:li>computer</rdf:li>
+          </rdf:Bag>
+        </dc:subject>
+        <dc:publisher>
+          <cc:Agent rdf:about="http://www.openclipart.org">
+            <dc:title>The Structorr</dc:title>
+          </cc:Agent>
+        </dc:publisher>
+        <dc:creator>
+          <cc:Agent>
+            <dc:title>The Structorr</dc:title>
+          </cc:Agent>
+        </dc:creator>
+        <dc:rights>
+          <cc:Agent>
+            <dc:title>The Structorr</dc:title>
+          </cc:Agent>
+        </dc:rights>
+        <dc:date></dc:date>
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
+        <cc:license rdf:resource="http://web.resource.org/cc/PublicDomain"/>
+        <dc:language>en</dc:language>
+      </cc:Work>
+      <cc:License rdf:about="http://web.resource.org/cc/PublicDomain">
+        <cc:permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
+        <cc:permits rdf:resource="http://web.resource.org/cc/Distribution"/>
+        <cc:permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
+      </cc:License>
+    </rdf:RDF>
+  </metadata>
+  <defs id="defs3">
+    <linearGradient id="linearGradient2124">
+      <stop id="stop2126" offset="0.0000000" style="stop-color:#000000;stop-opacity:0.0000000;"/>
+      <stop id="stop2130" offset="0.70253164" style="stop-color:#000000;stop-opacity:0.0000000;"/>
+      <stop id="stop2128" offset="1.0000000" style="stop-color:#000000;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient2417">
+      <stop id="stop2418" offset="0.0000000" style="stop-color:#c2c2c2;stop-opacity:1.0000000;"/>
+      <stop id="stop2419" offset="1.0000000" style="stop-color:#c2c2c2;stop-opacity:0.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient1740">
+      <stop id="stop1741" offset="0.0000000" style="stop-color:#cd0000;stop-opacity:1.0000000;"/>
+      <stop id="stop1742" offset="1.0000000" style="stop-color:#920000;stop-opacity:0.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient6820">
+      <stop id="stop6821" offset="0.0000000" style="stop-color:#484848;stop-opacity:1.0000000;"/>
+      <stop id="stop6822" offset="1.0000000" style="stop-color:#777777;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient3674" inkscape:collect="always">
+      <stop id="stop3675" offset="0" style="stop-color:#ffffff;stop-opacity:1;"/>
+      <stop id="stop3676" offset="1" style="stop-color:#ffffff;stop-opacity:0;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient3045">
+      <stop id="stop3046" offset="0.0000000" style="stop-color:#2d2d2d;stop-opacity:1.0000000;"/>
+      <stop id="stop3047" offset="1.0000000" style="stop-color:#616161;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient3020" inkscape:collect="always">
+      <stop id="stop3021" offset="0" style="stop-color:#000000;stop-opacity:1;"/>
+      <stop id="stop3022" offset="1" style="stop-color:#000000;stop-opacity:0;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient2385">
+      <stop id="stop2386" offset="0.0000000" style="stop-color:#9c9c9c;stop-opacity:1.0000000;"/>
+      <stop id="stop2387" offset="1.0000000" style="stop-color:#dedede;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient2377">
+      <stop id="stop2378" offset="0.0000000" style="stop-color:#c2c2c2;stop-opacity:1.0000000;"/>
+      <stop id="stop2379" offset="1.0000000" style="stop-color:#f1f1f1;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient gradientTransform="scale(1.215900,0.822436)" gradientUnits="userSpaceOnUse" id="linearGradient6838" inkscape:collect="always" x1="118.09048" x2="536.41888" xlink:href="#linearGradient2377" y1="279.16809" y2="602.04541"/>
+    <linearGradient gradientTransform="scale(1.740336,0.574602)" gradientUnits="userSpaceOnUse" id="linearGradient6841" inkscape:collect="always" x1="103.86275" x2="167.31712" xlink:href="#linearGradient2385" y1="317.50235" y2="368.55423"/>
+    <linearGradient gradientTransform="scale(1.740336,0.574602)" gradientUnits="userSpaceOnUse" id="linearGradient6842" inkscape:collect="always" x1="173.89206" x2="110.60033" xlink:href="#linearGradient3020" y1="391.79187" y2="343.91684"/>
+    <radialGradient cx="117.94682" cy="748.44360" fx="118.87074" fy="748.44360" gradientTransform="scale(1.658853,0.602826)" gradientUnits="userSpaceOnUse" id="radialGradient6845" inkscape:collect="always" r="213.01237" spreadMethod="pad" xlink:href="#linearGradient3045"/>
+    <linearGradient gradientTransform="scale(2.323171,0.430446)" gradientUnits="userSpaceOnUse" id="linearGradient6846" inkscape:collect="always" x1="-12.486679" x2="-52.210167" xlink:href="#linearGradient2377" y1="522.85260" y2="353.79712"/>
+    <linearGradient gradientTransform="scale(2.323171,0.430446)" gradientUnits="userSpaceOnUse" id="linearGradient6847" inkscape:collect="always" x1="-67.858932" x2="-14.979056" xlink:href="#linearGradient3020" y1="135.86407" y2="481.17953"/>
+    <linearGradient gradientTransform="scale(1.861667,0.537153)" gradientUnits="userSpaceOnUse" id="linearGradient6848" inkscape:collect="always" x1="113.17354" x2="131.75044" xlink:href="#linearGradient2377" y1="338.25638" y2="360.77921"/>
+    <linearGradient gradientTransform="scale(2.007714,0.498079)" gradientUnits="userSpaceOnUse" id="linearGradient6849" inkscape:collect="always" x1="114.79115" x2="111.93388" xlink:href="#linearGradient2377" y1="401.97250" y2="389.84668"/>
+    <radialGradient cx="300.16311" cy="452.26079" fx="300.16311" fy="452.26079" gradientTransform="scale(1.401620,0.713460)" gradientUnits="userSpaceOnUse" id="radialGradient6850" inkscape:collect="always" r="64.007071" xlink:href="#linearGradient3674"/>
+    <radialGradient cx="300.16311" cy="452.26079" fx="300.16311" fy="452.26079" gradientTransform="scale(1.401620,0.713460)" gradientUnits="userSpaceOnUse" id="radialGradient6851" inkscape:collect="always" r="64.007071" xlink:href="#linearGradient3674"/>
+    <linearGradient gradientTransform="scale(1.256311,0.795981)" gradientUnits="userSpaceOnUse" id="linearGradient2424" inkscape:collect="always" x1="203.89647" x2="193.35457" xlink:href="#linearGradient3674" y1="286.48941" y2="402.45096"/>
+    <radialGradient cx="320.72992" cy="524.59882" fx="317.51675" fy="524.43011" gradientTransform="scale(1.632994,0.612372)" gradientUnits="userSpaceOnUse" id="radialGradient3070" inkscape:collect="always" r="18.371164" xlink:href="#linearGradient1740"/>
+    <linearGradient gradientTransform="scale(1.411507,0.708463)" gradientUnits="userSpaceOnUse" id="linearGradient4331" inkscape:collect="always" x1="65.683945" x2="229.75044" xlink:href="#linearGradient2377" y1="214.97580" y2="267.18515"/>
+    <linearGradient gradientTransform="scale(1.411507,0.708463)" gradientUnits="userSpaceOnUse" id="linearGradient4333" inkscape:collect="always" x1="232.23514" x2="92.202301" xlink:href="#linearGradient3020" y1="395.16873" y2="237.03510"/>
+    <linearGradient gradientTransform="scale(1.314590,0.760694)" gradientUnits="userSpaceOnUse" id="linearGradient4350" inkscape:collect="always" x1="391.57797" x2="161.34436" xlink:href="#linearGradient3674" y1="638.37341" y2="602.75360"/>
+    <radialGradient cx="-139.55151" cy="595.69843" fx="-139.55151" fy="599.36938" gradientTransform="scale(1.314590,0.760694)" gradientUnits="userSpaceOnUse" id="radialGradient4353" inkscape:collect="always" r="290.26886" xlink:href="#linearGradient3674"/>
+    <linearGradient gradientTransform="scale(1.256311,0.795981)" gradientUnits="userSpaceOnUse" id="linearGradient4355" inkscape:collect="always" x1="127.29832" x2="290.02972" xlink:href="#linearGradient6820" y1="399.59625" y2="303.52344"/>
+    <linearGradient gradientTransform="scale(1.620770,0.616991)" gradientUnits="userSpaceOnUse" id="linearGradient4378" inkscape:collect="always" x1="440.02200" x2="111.57190" xlink:href="#linearGradient3020" y1="245.11510" y2="782.87585"/>
+    <radialGradient cx="25.571758" cy="373.96060" fx="39.947800" fy="412.63611" gradientTransform="matrix(2.003237,4.796098e-2,-1.888816e-2,0.693580,-15.56366,73.17592)" gradientUnits="userSpaceOnUse" id="radialGradient1767" inkscape:collect="always" r="71.151245" xlink:href="#linearGradient3020"/>
+    <radialGradient cx="214.22075" cy="672.35938" fx="63.133293" fy="760.19360" gradientTransform="matrix(1.807735,0.628006,-0.190131,0.547309,142.3510,-60.07358)" gradientUnits="userSpaceOnUse" id="radialGradient1340" inkscape:collect="always" r="225.34037" xlink:href="#linearGradient2417"/>
+    <radialGradient cx="366.84415" cy="355.69946" fx="362.00076" fy="529.43463" gradientTransform="matrix(1.341011,0.301032,-0.207223,0.923123,-51.81156,-102.9699)" gradientUnits="userSpaceOnUse" id="radialGradient2122" inkscape:collect="always" r="247.49643" xlink:href="#linearGradient2124"/>
+  </defs>
+  <sodipodi:namedview bordercolor="#666666" borderopacity="1.0" id="base" inkscape:current-layer="svg1" inkscape:cx="389.62463" inkscape:cy="287.10675" inkscape:guide-bbox="true" inkscape:pageopacity="0.0" inkscape:pageshadow="2" inkscape:window-height="688" inkscape:window-width="1014" inkscape:window-x="0" inkscape:window-y="27" inkscape:zoom="1.0000000" pagecolor="#ffffff" showguides="true"/>
+  <g id="layer1" inkscape:groupmode="layer" inkscape:label="Layer 1"/>
+  <g id="g2132">
+    <path d="M 265.60158,567.69249 C 160.87689,537.51447 71.681105,468.32449 42.746090,385.43338 C 34.563453,361.99233 31.912331,339.27103 34.031481,317.86455 C 56.715552,304.70326 119.63719,296.82573 186.99803,293.40492 C 270.51241,289.16378 298.04734,241.36162 376.11361,231.37724 C 446.30772,222.39971 513.33087,253.78599 549.59452,286.30753 C 571.15513,310.06386 587.68320,336.29106 597.38350,364.07987 C 637.64090,479.40662 546.06885,577.79300 392.98972,583.68521 C 349.93620,585.34240 306.58079,579.50128 265.60158,567.69249 z " id="path1745" style="opacity:0.75000000;display:block;visibility:visible;marker-end:none;marker-mid:none;marker-start:none;marker:none;stroke-opacity:1.0000000;stroke-dashoffset:0.0000000;stroke-miterlimit:4.0000000;stroke-linejoin:miter;stroke-linecap:round;stroke-width:1.4597397;stroke:none;fill-rule:evenodd;fill-opacity:1.0;fill:url(#radialGradient1340);color:#000000"/>
+    <path d="M 144.12500 331.56250 C 136.26584 331.47952 128.35677 332.22761 120.46875 333.90625 C 107.23558 339.16492 93.067228 338.11880 84.343750 350.68750 C 82.679746 357.18179 87.183941 364.49557 95.656250 372.28125 C 95.547498 372.24883 95.392612 372.11754 95.312500 372.12500 C 82.890867 373.59023 75.812502 379.67069 75.812500 390.78125 C 75.812500 391.04916 75.837441 391.27201 75.843750 391.50000 C 75.838936 391.66225 75.986702 391.90433 76.218750 392.15625 C 76.450794 392.40816 76.763069 392.65491 77.062500 392.81250 C 77.822557 393.21372 78.539866 393.58180 79.312500 394.00000 C 115.15819 420.67269 156.38618 449.68084 200.90625 479.34375 C 200.93154 479.36386 200.97471 479.38613 201.00000 479.40625 C 205.37829 482.88798 209.77793 486.43496 214.21875 490.03125 L 214.43750 490.28125 C 214.57937 490.44122 214.74732 490.61233 214.93750 490.75000 C 215.14582 490.90233 215.36933 491.02088 215.56250 491.09375 C 234.78870 498.38693 250.34294 501.17127 260.15625 498.34375 C 275.33136 493.97134 274.02802 476.86544 259.81250 452.43750 C 274.65265 457.94249 287.87971 463.72890 298.31250 471.21875 C 326.73561 491.62411 345.58716 496.92540 363.96875 510.12500 C 384.21397 519.63307 405.32813 526.16795 427.71875 530.34375 C 450.10937 534.51954 475.96273 534.56718 499.68750 530.53125 C 519.47873 527.16449 543.70392 510.15656 569.90625 512.37500 C 591.03538 488.70352 603.78419 460.40000 606.34375 429.34375 C 605.55599 422.05524 605.18963 414.81940 605.96875 407.75000 C 607.17919 388.83986 551.65616 353.49451 528.71875 355.12500 C 473.92522 362.20665 420.05675 375.32876 364.93750 380.09375 C 339.49712 383.07541 314.54589 389.76802 289.15625 392.62500 C 269.40545 392.90303 251.19362 382.63799 237.68750 368.87500 C 211.30657 347.69029 178.18135 331.92209 144.12500 331.56250 z " id="path4359" style="fill:url(#linearGradient4378);fill-opacity:1.0;fill-rule:evenodd;stroke:none;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;opacity:0.90000000"/>
+    <path d="M 308.20366,168.92745 C 218.08651,167.79199 141.33221,204.24597 116.43320,268.08624 C 109.39192,286.13985 100.80478,305.57771 113.04407,322.80051 C 125.47724,340.29612 182.59913,364.23485 240.56414,384.61236 C 312.42950,409.87652 336.12372,458.13739 403.30090,486.93365 C 463.70397,512.82609 521.37839,503.16419 552.58380,484.56442 C 571.13702,469.70191 585.35967,451.41069 593.70693,430.00857 C 628.34902,341.18733 549.54991,232.82435 417.82304,188.13517 C 380.77485,175.56633 343.46688,169.37176 308.20366,168.92745 z " id="path1062" sodipodi:nodetypes="cczcccccc" style="color:#000000;fill:url(#linearGradient6838);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.4597397;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block;" transform="matrix(1.162095,0.000000,0.000000,1.162095,-92.56035,-54.37491)"/>
+    <path d="M 35.218750 277.84375 C 30.727355 292.45859 29.181186 307.19707 38.812500 320.75000 C 46.743504 331.91029 70.575880 345.34422 101.37500 359.09375 C 103.80961 353.16784 105.18750 346.89780 105.18750 340.37500 C 105.18750 309.07211 74.930721 283.14289 35.218750 277.84375 z " id="path1141" style="opacity:0.42325577;color:#000000;fill:url(#radialGradient1767);fill-opacity:1.0000000;fill-rule:nonzero;stroke:none;stroke-width:9.3750000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block"/>
+    <path d="M 255.82991,141.93484 C 155.36042,143.29017 70.776890,185.29670 42.746090,257.16677 C 42.491916,257.81845 42.289003,258.47990 42.045486,259.13339 C 42.623419,268.56778 48.092377,276.21476 58.995327,281.34396 C 64.330156,283.85368 70.735612,285.64198 78.022425,286.75217 C 113.92954,278.85083 155.28978,272.84799 199.95317,269.44588 C 204.42704,268.04278 208.92477,266.58031 213.46144,265.03327 L 332.31933,148.54761 C 309.68241,144.41824 287.30343,142.20828 265.60158,141.93484 C 262.32894,141.89359 259.07086,141.89111 255.82991,141.93484 z " id="path1688" style="color:#000000;fill:url(#linearGradient4333);fill-opacity:1.0;fill-rule:evenodd;stroke:none;stroke-width:1.2561275;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block;"/>
+    <path d="M 255.84375,142.87500 C 155.62414,144.22696 71.440540,186.10173 43.593750,257.50000 C 43.370682,258.07192 43.194922,258.66492 42.968750,259.28125 C 43.597534,268.28646 48.802787,275.51169 59.406250,280.50000 C 64.595912,282.94143 70.848422,284.71062 78.000000,285.81250 C 113.86128,277.92989 155.13332,271.96582 199.68750,268.56250 C 199.70623,268.55663 199.73127,268.56838 199.75000,268.56250 C 204.13720,267.18618 208.52406,265.73238 212.96875,264.21875 L 330.34375,149.18750 C 308.37364,145.27651 286.66098,143.14044 265.59375,142.87500 C 262.32829,142.83384 259.07595,142.83139 255.84375,142.87500 z " id="path4332" inkscape:href="#path1688" inkscape:original="M 255.84375 141.93750 C 155.37426 143.29283 70.780800 185.28618 42.750000 257.15625 C 42.495826 257.80792 42.274767 258.47151 42.031250 259.12500 C 42.609183 268.55939 48.097050 276.21455 59.000000 281.34375 C 64.334829 283.85347 70.744437 285.63981 78.031250 286.75000 C 113.93837 278.84866 155.30536 272.83961 199.96875 269.43750 C 204.44262 268.03439 208.93208 266.57829 213.46875 265.03125 L 332.31250 148.56250 C 309.67557 144.43313 287.29560 142.21094 265.59375 141.93750 C 262.32110 141.89625 259.08470 141.89377 255.84375 141.93750 z " inkscape:radius="-0.92205435" sodipodi:type="inkscape:offset" style="color:#000000;fill:url(#linearGradient4331);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.2561275;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block" transform="translate(3.547797e-7,-1.844109)" xlink:href="#path1688"/>
+    <path d="M 187.03426,339.02576 C 177.08624,338.74523 168.39197,339.92104 161.30057,342.62191 C 161.23714,342.53516 161.18387,342.44438 161.12076,342.35749 C 156.89186,344.78139 153.68632,347.23900 151.21017,348.79885 C 176.04955,360.56267 207.56488,373.01152 240.56414,384.61236 C 312.42950,409.87652 336.12372,458.13739 403.30090,486.93365 C 463.70397,512.82609 521.37839,503.16419 552.58380,484.56442 C 571.13702,469.70191 585.35967,451.41069 593.70693,430.00857 C 599.70106,414.63984 602.23052,398.67879 601.74540,382.57101 C 599.52682,383.39710 597.00172,384.47454 593.81270,386.12486 C 574.44410,396.14813 565.76087,449.77751 554.41361,465.70572 C 542.54560,482.36492 529.23082,488.72266 493.74429,494.85576 C 458.11731,501.01320 416.35687,493.01375 388.15473,471.21632 C 359.07827,448.74311 326.75711,396.36498 301.05365,379.82100 C 298.96709,378.47800 296.75782,377.08412 294.58056,375.69600 C 253.96736,352.56236 215.40302,339.82575 187.03426,339.02576 z " id="path1733" sodipodi:nodetypes="cccccccccczccccc" style="fill:url(#radialGradient6845);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:0.60822493;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-opacity:1.0000000;" transform="matrix(1.162095,0.000000,0.000000,1.162095,-92.56035,-54.37491)"/>
+    <g id="g4342">
+      <path d="M 262.31032,171.75149 C 261.67782,171.83945 261.03670,171.91335 260.40648,172.00534 C 257.86494,172.37631 255.33648,172.77492 252.83339,173.21111 C 250.33030,173.64729 247.84973,174.11702 245.38722,174.61784 C 242.92472,175.11866 240.48777,175.65006 238.06798,176.21496 C 235.64819,176.77985 233.25060,177.37406 230.87567,178.00246 C 228.50073,178.63086 226.14879,179.29958 223.82085,179.99092 C 221.49290,180.68226 219.18235,181.39491 216.90353,182.14862 C 214.62471,182.90233 212.37243,183.69176 210.14487,184.50728 C 207.91731,185.32279 205.71902,186.16898 203.54486,187.04574 C 201.37070,187.92250 199.22213,188.82658 197.10350,189.76401 C 194.98488,190.70145 192.89234,191.67513 190.83138,192.67267 C 188.77042,193.67021 186.74021,194.69348 184.73906,195.75056 C 182.73791,196.80764 180.76576,197.89221 178.82656,199.00826 C 176.88735,200.12431 174.97956,201.27130 173.10443,202.44576 C 171.22930,203.62022 169.39219,204.83078 167.58327,206.06307 C 165.77435,207.29537 163.99306,208.54947 162.25250,209.83904 C 160.51193,211.12862 158.80334,212.44854 157.13326,213.79482 C 156.37346,214.40730 155.64641,215.04280 154.90152,215.66693 C 169.03051,217.76615 185.26478,218.97752 202.56120,218.97752 C 256.89027,218.97752 300.97961,207.17741 300.97961,192.64094 C 300.97961,184.12278 285.77908,176.56599 262.31032,171.75149 z " id="path1699" style="color:#000000;fill:url(#linearGradient6841);fill-opacity:1.0000000;fill-rule:evenodd;stroke:url(#linearGradient6842);stroke-width:1.2899783;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block;" transform="matrix(1.162095,0.000000,0.000000,1.162095,-92.56035,-54.37491)"/>
+      <g id="g4337">
+        <path d="M 50.052280 192.16135 A 109.99862 18.624105 0 1 1  -169.94496,192.16135 A 109.99862 18.624105 0 1 1  50.052280 192.16135 z" id="path1725" sodipodi:cx="-59.946339" sodipodi:cy="192.16135" sodipodi:rx="109.99862" sodipodi:ry="18.624105" sodipodi:type="arc" style="color:#000000;fill:url(#linearGradient6846);fill-opacity:1.0000000;fill-rule:evenodd;stroke:url(#linearGradient6847);stroke-width:3.4133351;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block;" transform="matrix(0.461292,-3.270981e-2,5.849814e-2,0.392326,195.6873,93.15247)"/>
+        <g id="g4334">
+          <path d="M 236.15732,182.13470 C 220.60969,181.46638 207.62734,188.72008 204.25727,199.02984 C 204.83112,199.07728 205.44542,199.10724 206.03420,199.14853 C 210.71464,193.30370 218.37286,189.65197 227.09288,190.02680 C 234.19706,190.33217 240.63251,193.23298 245.30637,197.67415 C 252.44669,196.66299 258.57436,195.31024 263.37178,193.75453 C 257.48012,187.20253 247.49310,182.62197 236.15732,182.13470 z " id="path1701" style="color:#000000;fill:url(#linearGradient6848);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.5178545;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block;" transform="matrix(1.162095,0.000000,0.000000,1.162095,-92.56035,-54.37491)"/>
+          <path d="M 227.02942,190.08754 C 218.54349,189.72277 211.04616,193.34498 206.47843,199.17821 C 213.19589,199.62872 220.72439,199.72659 228.78519,199.29090 C 234.47374,198.98345 239.82539,198.42830 244.80925,197.73739 C 240.25025,193.28476 233.96869,190.38583 227.02942,190.08754 z " id="path1721" style="color:#000000;fill:url(#linearGradient6849);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.4131460;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block;" transform="matrix(1.162095,0.000000,0.000000,1.162095,-92.56035,-54.37491)"/>
+        </g>
+      </g>
+    </g>
+    <path d="M 510.42826 322.67001 A 89.713600 45.666489 0 1 1  331.00106,322.67001 A 89.713600 45.666489 0 1 1  510.42826 322.67001 z" id="path4317" sodipodi:cx="420.71466" sodipodi:cy="322.67001" sodipodi:rx="89.713600" sodipodi:ry="45.666489" sodipodi:type="arc" style="opacity:0.50934577;color:#000000;fill:url(#radialGradient6851);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.4597397;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block;" transform="matrix(1.183253,-0.148920,0.307196,0.856665,-440.3349,25.15791)"/>
+    <path d="M 308.20366,168.92745 C 218.08651,167.79199 141.33221,204.24597 116.43320,268.08624 C 109.39192,286.13985 100.80478,305.57771 113.04407,322.80051 C 125.47724,340.29612 182.59913,364.23485 240.56414,384.61236 C 312.42950,409.87652 336.12372,458.13739 403.30090,486.93365 C 463.70397,512.82609 521.37839,503.16419 552.58380,484.56442 C 571.13702,469.70191 585.35967,451.41069 593.70693,430.00857 C 628.34902,341.18733 549.54991,232.82435 417.82304,188.13517 C 380.77485,175.56633 343.46688,169.37176 308.20366,168.92745 z " id="path1360" sodipodi:nodetypes="cczcccccc" style="opacity:0.22429907;display:block;visibility:visible;marker-end:none;marker-mid:none;marker-start:none;marker:none;stroke-opacity:1.0000000;stroke-dashoffset:0.0000000;stroke-miterlimit:4.0000000;stroke-linejoin:miter;stroke-linecap:round;stroke-width:1.4597397;stroke:none;fill-rule:evenodd;fill-opacity:1.0;fill:url(#radialGradient2122);color:#000000" transform="matrix(1.162095,0.000000,0.000000,1.162095,-92.56035,-54.37491)"/>
+    <path d="M 124.65625 344.28125 C 113.54197 343.96784 104.03428 345.34176 96.562500 348.18750 C 96.269154 348.30243 95.966632 348.38340 95.656250 348.43750 C 95.646509 348.44342 95.634727 348.43157 95.625000 348.43750 C 94.582110 349.07341 93.846222 349.59326 92.906250 350.21875 C 120.29818 362.75589 153.55564 375.84964 188.56250 388.15625 C 231.05054 403.09283 259.41941 424.92567 286.56250 446.84375 C 307.49601 463.74758 327.75757 480.62791 353.50000 495.03125 C 336.57052 481.32966 319.44306 460.55841 302.81250 440.53125 C 285.47992 419.65867 268.53983 399.84454 254.75000 390.96875 C 252.34784 389.42262 249.79044 387.77592 247.25000 386.15625 C 200.60120 359.61790 156.29083 345.17333 124.65625 344.28125 z " id="path2428" style="fill:url(#linearGradient4350);fill-opacity:1.0;fill-rule:evenodd;stroke:none;stroke-width:0.60822493;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-opacity:1.0000000;"/>
+    <path d="M 553.75000 321.25000 A 30.000000 11.250000 0 1 1  493.75000,321.25000 A 30.000000 11.250000 0 1 1  553.75000 321.25000 z" id="path2445" sodipodi:cx="523.75000" sodipodi:cy="321.25000" sodipodi:rx="30.000000" sodipodi:ry="11.250000" sodipodi:type="arc" style="color:#000000;fill:url(#radialGradient3070);fill-opacity:1.0000000;fill-rule:nonzero;stroke:none;stroke-width:1.1250000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block" transform="matrix(0.445513,-1.183394,1.183394,0.445513,-27.25273,909.1815)"/>
+    <path d="M 124.65625 344.28125 C 113.54197 343.96784 104.03428 345.34176 96.562500 348.18750 C 96.269154 348.30243 95.966632 348.38340 95.656250 348.43750 C 95.646509 348.44342 95.634727 348.43157 95.625000 348.43750 C 94.582110 349.07341 93.846222 349.59326 92.906250 350.21875 C 120.29818 362.75589 153.55564 375.84964 188.56250 388.15625 C 231.05054 403.09283 259.41941 424.92567 286.56250 446.84375 C 307.49601 463.74758 327.75757 480.62791 353.50000 495.03125 C 336.57052 481.32966 319.44306 460.55841 302.81250 440.53125 C 285.47992 419.65867 268.53983 399.84454 254.75000 390.96875 C 252.34784 389.42262 249.79044 387.77592 247.25000 386.15625 C 200.60120 359.61790 156.29083 345.17333 124.65625 344.28125 z " id="path4351" style="fill:url(#radialGradient4353);fill-opacity:1.0;fill-rule:evenodd;stroke:none;stroke-width:0.60822493;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-opacity:1.0000000;"/>
+    <path d="M 510.42826 322.67001 A 89.713600 45.666489 0 1 1  331.00106,322.67001 A 89.713600 45.666489 0 1 1  510.42826 322.67001 z" id="path3052" sodipodi:cx="420.71466" sodipodi:cy="322.67001" sodipodi:rx="89.713600" sodipodi:ry="45.666489" sodipodi:type="arc" style="color:#000000;fill:url(#radialGradient6850);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.4597397;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block;" transform="matrix(1.698475,1.124623,-0.915452,2.523711,-29.23244,-947.7955)"/>
+    <path d="M 263.53125,273.65625 C 263.36759,273.68610 263.21583,273.76198 263.09375,273.87500 L 262.90625,274.06250 C 259.08486,275.36438 255.29883,276.59899 251.53125,277.78125 C 251.50949,277.78808 251.49051,277.80567 251.46875,277.81250 C 213.15857,280.73877 177.65825,285.88071 146.81250,292.65625 C 146.14764,292.55399 145.52904,292.42920 144.87500,292.31250 C 144.61733,292.26578 144.35228,292.33688 144.15261,292.50631 C 143.95293,292.67573 143.83961,292.92566 143.84375,293.18750 C 143.83832,293.54248 143.81250,293.88802 143.81250,294.31250 C 143.81250,311.91600 149.90475,328.53827 160.59375,343.15625 C 160.83368,343.47341 161.25727,343.58894 161.62500,343.43750 C 175.52163,338.14474 195.98960,338.78154 220.09375,345.03125 C 244.19790,351.28096 271.94208,363.11344 300.50000,380.06250 C 300.70593,380.18422 300.95270,380.21635 301.18293,380.15142 C 301.41316,380.08648 301.60678,379.93014 301.71875,379.71875 C 314.39759,354.80425 315.66329,328.57493 302.43750,306.34375 C 293.99299,292.14942 280.60693,281.19595 264.06250,273.71875 C 263.89628,273.64299 263.71052,273.62113 263.53125,273.65625 z " id="path4354" inkscape:original="M 263.68750 274.53125 L 263.34375 274.84375 C 259.43987 276.17501 255.56858 277.44886 251.71875 278.65625 C 213.28524 281.58382 177.67986 286.73203 146.78125 293.53125 C 146.07219 293.42322 145.40817 293.31051 144.71875 293.18750 C 144.71286 293.57269 144.68750 293.92633 144.68750 294.31250 C 144.68750 311.71388 150.71606 328.13361 161.31250 342.62500 C 189.67810 331.82149 243.70147 345.34305 300.93750 379.31250 C 313.51488 354.59737 314.74649 328.73205 301.68750 306.78125 C 293.35009 292.76694 280.10203 281.94974 263.68750 274.53125 z " inkscape:radius="0.87511271" sodipodi:type="inkscape:offset" style="color:#000000;fill:url(#linearGradient4355);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.2561275;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block" transform="matrix(1.162095,0.000000,0.000000,1.162095,-92.56035,-54.37491)"/>
+    <path d="M 263.65625,277.40625 C 259.90457,278.68179 256.17667,279.93087 252.46875,281.09375 C 252.28656,281.15649 252.09786,281.19842 251.90625,281.21875 C 213.57979,284.13817 178.10437,289.26239 147.34375,296.03125 C 147.33333,296.03131 147.32292,296.03131 147.31250,296.03125 C 147.68280,311.62694 153.11064,326.36211 162.43750,339.62500 C 177.29951,334.68745 197.48598,335.63825 220.93750,341.71875 C 244.72664,347.88679 271.84292,359.44972 299.75000,375.75000 C 310.90350,352.38059 311.65422,328.52373 299.50000,308.09375 C 291.65568,294.90827 279.18800,284.63291 263.65625,277.40625 z " id="path2423" inkscape:original="M 263.68750 274.53125 L 263.34375 274.84375 C 259.43987 276.17501 255.56858 277.44886 251.71875 278.65625 C 213.28524 281.58382 177.67986 286.73203 146.78125 293.53125 C 146.07219 293.42322 145.40817 293.31051 144.71875 293.18750 C 144.71286 293.57269 144.68750 293.92633 144.68750 294.31250 C 144.68750 311.71388 150.71606 328.13361 161.31250 342.62500 C 189.67810 331.82149 243.70147 345.34305 300.93750 379.31250 C 313.51488 354.59737 314.74649 328.73205 301.68750 306.78125 C 293.35009 292.76694 280.10203 281.94974 263.68750 274.53125 z " inkscape:radius="-2.5553646" sodipodi:type="inkscape:offset" style="color:#000000;fill:url(#linearGradient2424);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.2561275;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dashoffset:0.0000000;stroke-opacity:1.0000000;marker:none;marker-start:none;marker-mid:none;marker-end:none;visibility:visible;display:block" transform="matrix(1.162095,0.000000,0.000000,1.162095,-92.56035,-54.37491)"/>
+  </g>
+</svg>
diff --git a/filter/source/svgimport/test/network_could_nicolas_cl.svg b/filter/source/svgimport/test/network_could_nicolas_cl.svg
new file mode 100644
index 0000000..435c760
--- /dev/null
+++ filter/source/svgimport/test/network_could_nicolas_cl.svg
@@ -0,0 +1,292 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN"
+"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
+<!-- Created with Inkscape (http://www.inkscape.org/) --><svg height="216.14172" id="svg5846" version="1.0" width="311.81100" x="0.0000000" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0.0000000">
+  <metadata>
+    <rdf:RDF xmlns:cc="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
+      <cc:Work rdf:about="">
+        <dc:title>Network_could</dc:title>
+        <dc:description></dc:description>
+        <dc:subject>
+          <rdf:Bag>
+            <rdf:li>networksym</rdf:li>
+          </rdf:Bag>
+        </dc:subject>
+        <dc:publisher>
+          <cc:Agent rdf:about="http://www.openclipart.org/">
+            <dc:title>Open Clip Art Library</dc:title>
+          </cc:Agent>
+        </dc:publisher>
+        <dc:creator>
+          <cc:Agent>
+            <dc:title>Nicolas Clementz</dc:title>
+          </cc:Agent>
+        </dc:creator>
+        <dc:rights>
+          <cc:Agent>
+            <dc:title>Nicolas Clementz</dc:title>
+          </cc:Agent>
+        </dc:rights>
+        <dc:date></dc:date>
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
+        <cc:license rdf:resource="http://web.resource.org/cc/PublicDomain"/>
+        <dc:language>en</dc:language>
+      </cc:Work>
+      <cc:License rdf:about="http://web.resource.org/cc/PublicDomain">
+        <cc:permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
+        <cc:permits rdf:resource="http://web.resource.org/cc/Distribution"/>
+        <cc:permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
+      </cc:License>
+    </rdf:RDF>
+  </metadata>
+  <defs id="defs3">
+    <linearGradient gradientTransform="matrix(0.946240,0.000000,0.000000,0.787936,85.07267,87.02490)" gradientUnits="userSpaceOnUse" id="linearGradient11961" x1="1548.1980" x2="1364.8582" xlink:href="#linearGradient30627" y1="287.40033" y2="139.19989"/>
+    <linearGradient gradientTransform="matrix(0.785270,-0.527941,0.439618,0.653896,84.45543,816.9971)" gradientUnits="userSpaceOnUse" id="linearGradient11959" x1="1548.1980" x2="1364.8582" xlink:href="#linearGradient30627" y1="287.40033" y2="139.19989"/>
+    <linearGradient id="linearGradient30627">
+      <stop id="stop30629" offset="0.0000000" style="stop-color:#ffffff;stop-opacity:1.0000000;"/>
+      <stop id="stop30631" offset="0.0000000" style="stop-color:#bcbcbc;stop-opacity:1.0000000;"/>
+      <stop id="stop30633" offset="1.0000000" style="stop-color:#ffffff;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient gradientTransform="scale(1.084951,0.921700)" gradientUnits="userSpaceOnUse" id="linearGradient11957" x1="1095.9062" x2="1346.9496" xlink:href="#linearGradient30627" y1="124.00463" y2="339.65750"/>
+    <linearGradient gradientTransform="matrix(0.209690,0.000000,0.000000,0.172315,-239.8874,94.10730)" gradientUnits="userSpaceOnUse" id="linearGradient11571" x1="-101.59290" x2="-58.510258" xlink:href="#linearGradient4111" y1="659.33423" y2="770.11176"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-336.9261,188.7534)" gradientUnits="userSpaceOnUse" id="radialGradient11569" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-336.9066,190.1401)" gradientUnits="userSpaceOnUse" id="radialGradient11567" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="matrix(2.778844,0.000000,0.000000,0.359862,-115.4323,-5.506541)" gradientUnits="userSpaceOnUse" id="linearGradient11565" x1="-74.835861" x2="-89.652527" xlink:href="#linearGradient4111" y1="595.17773" y2="595.17810"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-336.9261,188.7534)" gradientUnits="userSpaceOnUse" id="radialGradient11563" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-336.9066,190.1401)" gradientUnits="userSpaceOnUse" id="radialGradient11561" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="matrix(2.778844,0.000000,0.000000,0.359862,-115.4323,-5.506541)" gradientUnits="userSpaceOnUse" id="linearGradient11559" x1="-74.835861" x2="-89.652527" xlink:href="#linearGradient4111" y1="595.17773" y2="595.17810"/>
+    <linearGradient gradientTransform="matrix(0.733262,0.000000,0.000000,1.363769,-4.417961,-55.61675)" gradientUnits="userSpaceOnUse" id="linearGradient11557" x1="-198.86636" x2="-180.58980" xlink:href="#linearGradient3295" y1="193.11913" y2="188.08046"/>
+    <linearGradient gradientTransform="matrix(2.505549,0.000000,0.000000,0.350818,-58.72875,122.3804)" gradientUnits="userSpaceOnUse" id="linearGradient11555" x1="-35.945030" x2="8.3977861" xlink:href="#linearGradient3295" y1="233.36613" y2="275.81308"/>
+    <linearGradient gradientTransform="matrix(2.500039,0.000000,0.000000,0.399114,-171.4660,95.21187)" gradientUnits="userSpaceOnUse" id="linearGradient11553" x1="-35.945030" x2="8.3977861" xlink:href="#linearGradient3295" y1="233.36613" y2="275.81308"/>
+    <linearGradient gradientTransform="matrix(2.505549,0.000000,0.000000,0.399114,-171.6992,111.2083)" gradientUnits="userSpaceOnUse" id="linearGradient11551" x1="-35.945030" x2="8.3977861" xlink:href="#linearGradient3295" y1="233.36613" y2="275.81308"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.568547,0.000000,0.000000,0.305562,-135.8407,237.4403)" gradientUnits="userSpaceOnUse" id="radialGradient11549" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.568547,0.000000,0.000000,0.305562,-132.2782,237.4403)" gradientUnits="userSpaceOnUse" id="radialGradient11547" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.568547,0.000000,0.000000,0.305562,-128.7157,237.4403)" gradientUnits="userSpaceOnUse" id="radialGradient11545" r="2.0070677" xlink:href="#linearGradient21273"/>
+    <linearGradient gradientTransform="matrix(5.014935,0.000000,0.000000,0.156769,48.73715,-5.798806)" gradientUnits="userSpaceOnUse" id="linearGradient11543" x1="-49.572033" x2="-48.254314" xlink:href="#linearGradient3295" y1="1763.8121" y2="1714.2539"/>
+    <linearGradient gradientTransform="matrix(0.275575,0.000000,0.000000,0.363307,-130.5556,24.72617)" gradientUnits="userSpaceOnUse" id="linearGradient11541" x1="-101.59290" x2="-58.510258" xlink:href="#linearGradient4111" y1="659.33423" y2="770.11176"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-288.0521,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11539" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-288.0521,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11537" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-291.4896,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11535" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-291.4896,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11533" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="matrix(-1.241124,0.000000,0.000000,0.712359,-658.9087,27.99962)" gradientUnits="userSpaceOnUse" id="linearGradient11531" x1="-288.64960" x2="-278.50552" xlink:href="#linearGradient4308" y1="305.17078" y2="305.33087"/>
+    <linearGradient gradientTransform="matrix(-1.972449,0.000000,0.000000,0.448238,-658.9087,27.99962)" gradientUnits="userSpaceOnUse" id="linearGradient11529" x1="-181.37831" x2="-177.43524" xlink:href="#linearGradient4111" y1="485.23007" y2="484.91132"/>
+    <linearGradient gradientTransform="matrix(1.241124,0.000000,0.000000,0.712359,-0.593828,28.16598)" gradientUnits="userSpaceOnUse" id="linearGradient11527" x1="-288.64960" x2="-278.50552" xlink:href="#linearGradient4308" y1="305.17078" y2="305.33087"/>
+    <linearGradient gradientTransform="matrix(1.972449,0.000000,0.000000,0.448238,-0.593828,28.16598)" gradientUnits="userSpaceOnUse" id="linearGradient11525" x1="-181.37831" x2="-177.43524" xlink:href="#linearGradient4111" y1="485.23007" y2="484.91132"/>
+    <linearGradient gradientTransform="matrix(1.345844,0.000000,0.000000,7.240708e-2,-221.4116,194.1461)" gradientUnits="userSpaceOnUse" id="linearGradient11523" x1="-101.59290" x2="-58.510258" xlink:href="#linearGradient3295" y1="659.33423" y2="770.11176"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-289.4896,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11521" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-289.4896,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11519" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-288.0521,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11517" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-288.0521,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11515" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-291.4896,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11513" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-291.4896,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11511" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="matrix(-1.241124,0.000000,0.000000,0.712359,-658.9087,27.99962)" gradientUnits="userSpaceOnUse" id="linearGradient11509" x1="-288.64960" x2="-278.50552" xlink:href="#linearGradient4308" y1="305.17078" y2="305.33087"/>
+    <linearGradient gradientTransform="matrix(-1.972449,0.000000,0.000000,0.448238,-658.9087,27.99962)" gradientUnits="userSpaceOnUse" id="linearGradient11507" x1="-181.37831" x2="-177.43524" xlink:href="#linearGradient4111" y1="485.23007" y2="484.91132"/>
+    <linearGradient gradientTransform="matrix(1.241124,0.000000,0.000000,0.712359,-0.593828,28.16598)" gradientUnits="userSpaceOnUse" id="linearGradient11505" x1="-288.64960" x2="-278.50552" xlink:href="#linearGradient4308" y1="305.17078" y2="305.33087"/>
+    <linearGradient gradientTransform="matrix(1.972449,0.000000,0.000000,0.448238,-0.593828,28.16598)" gradientUnits="userSpaceOnUse" id="linearGradient11503" x1="-181.37831" x2="-177.43524" xlink:href="#linearGradient4111" y1="485.23007" y2="484.91132"/>
+    <linearGradient gradientTransform="matrix(1.345844,0.000000,0.000000,7.240708e-2,-221.4116,194.1461)" gradientUnits="userSpaceOnUse" id="linearGradient11501" x1="-101.59290" x2="-58.510258" xlink:href="#linearGradient3295" y1="659.33423" y2="770.11176"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-289.4896,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11499" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-289.4896,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11497" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="matrix(0.275575,0.000000,0.000000,0.363307,-228.5878,24.72617)" gradientUnits="userSpaceOnUse" id="linearGradient11495" x1="-101.59290" x2="-58.510258" xlink:href="#linearGradient4111" y1="659.33423" y2="770.11176"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-288.0521,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11493" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-288.0521,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11491" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-291.4896,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11489" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-291.4896,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11487" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="matrix(-1.241124,0.000000,0.000000,0.712359,-658.9087,27.99962)" gradientUnits="userSpaceOnUse" id="linearGradient11485" x1="-288.64960" x2="-278.50552" xlink:href="#linearGradient4308" y1="305.17078" y2="305.33087"/>
+    <linearGradient gradientTransform="matrix(-1.972449,0.000000,0.000000,0.448238,-658.9087,27.99962)" gradientUnits="userSpaceOnUse" id="linearGradient11483" x1="-181.37831" x2="-177.43524" xlink:href="#linearGradient4111" y1="485.23007" y2="484.91132"/>
+    <linearGradient id="linearGradient4308">
+      <stop id="stop4310" offset="0.0000000" style="stop-color:#4a4a4a;stop-opacity:1.0000000;"/>
+      <stop id="stop4312" offset="1.0000000" style="stop-color:#4a4a4a;stop-opacity:0.0000000;"/>
+    </linearGradient>
+    <linearGradient gradientTransform="matrix(1.241124,0.000000,0.000000,0.712359,-0.593828,28.16598)" gradientUnits="userSpaceOnUse" id="linearGradient11481" x1="-288.64960" x2="-278.50552" xlink:href="#linearGradient4308" y1="305.17078" y2="305.33087"/>
+    <linearGradient id="linearGradient4111">
+      <stop id="stop4113" offset="0.0000000" style="stop-color:#5a5a5a;stop-opacity:1.0000000;"/>
+      <stop id="stop4115" offset="1.0000000" style="stop-color:#656575;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient gradientTransform="matrix(1.972449,0.000000,0.000000,0.448238,-0.593828,28.16598)" gradientUnits="userSpaceOnUse" id="linearGradient11479" x1="-181.37831" x2="-177.43524" xlink:href="#linearGradient4111" y1="485.23007" y2="484.91132"/>
+    <linearGradient gradientTransform="matrix(1.345844,0.000000,0.000000,7.240708e-2,-221.4116,194.1461)" gradientUnits="userSpaceOnUse" id="linearGradient11477" x1="-101.59290" x2="-58.510258" xlink:href="#linearGradient3295" y1="659.33423" y2="770.11176"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-289.4896,225.0640)" gradientUnits="userSpaceOnUse" id="radialGradient11475" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.389249,0.000000,0.000000,0.194625,-289.4896,226.7437)" gradientUnits="userSpaceOnUse" id="radialGradient11473" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="scale(0.733262,1.363769)" gradientUnits="userSpaceOnUse" id="linearGradient11471" x1="-198.86636" x2="-180.58980" xlink:href="#linearGradient3295" y1="193.11913" y2="188.08046"/>
+    <linearGradient gradientTransform="scale(2.672454,0.374188)" gradientUnits="userSpaceOnUse" id="linearGradient11469" x1="-53.541817" x2="-50.502445" xlink:href="#linearGradient3295" y1="679.70557" y2="820.64380"/>
+    <linearGradient gradientTransform="matrix(2.500039,0.000000,0.000000,0.399114,-167.0480,150.8286)" gradientUnits="userSpaceOnUse" id="linearGradient11467" x1="-35.945030" x2="8.3977861" xlink:href="#linearGradient3295" y1="233.36613" y2="275.81308"/>
+    <linearGradient id="linearGradient3295">
+      <stop id="stop3297" offset="0.0000000" style="stop-color:#8c8a96;stop-opacity:1.0000000;"/>
+      <stop id="stop3299" offset="1.0000000" style="stop-color:#505066;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient gradientTransform="scale(2.505549,0.399114)" gradientUnits="userSpaceOnUse" id="linearGradient11465" x1="-101.59290" x2="-58.510258" xlink:href="#linearGradient3295" y1="659.33423" y2="770.11176"/>
+    <radialGradient cx="-19.261518" cy="253.63734" fx="-19.038713" fy="254.35735" gradientTransform="matrix(2.202270,0.000000,0.000000,0.454077,-162.8863,268.0193)" gradientUnits="userSpaceOnUse" id="radialGradient11463" r="31.620827" xlink:href="#linearGradient13376"/>
+    <linearGradient gradientTransform="matrix(1.571171,0.000000,0.000000,2.437066,-335.1418,-84.06520)" gradientUnits="userSpaceOnUse" id="linearGradient11579" x1="131.22572" x2="70.516754" xlink:href="#linearGradient18048" y1="299.69070" y2="241.59059"/>
+    <linearGradient gradientTransform="matrix(1.571171,0.000000,0.000000,0.636468,-281.1061,356.8714)" gradientUnits="userSpaceOnUse" id="linearGradient11577" x1="115.38940" x2="139.05852" xlink:href="#linearGradient26628" y1="187.84824" y2="276.58850"/>
+    <linearGradient id="linearGradient26628">
+      <stop id="stop26630" offset="0.0000000" style="stop-color:#a5a5a5;stop-opacity:1.0000000;"/>
+      <stop id="stop26632" offset="1.0000000" style="stop-color:#616161;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient gradientTransform="matrix(1.571171,0.000000,0.000000,0.636468,-309.2295,332.9294)" gradientUnits="userSpaceOnUse" id="linearGradient11575" x1="134.21162" x2="53.468502" xlink:href="#linearGradient26628" y1="252.74458" y2="190.52753"/>
+    <radialGradient cx="-19.261518" cy="253.63734" fx="-19.038713" fy="254.35735" gradientTransform="matrix(2.965293,0.000000,0.000000,0.657921,-97.61525,495.8618)" gradientUnits="userSpaceOnUse" id="radialGradient11573" r="31.620827" xlink:href="#linearGradient13376"/>
+    <linearGradient gradientTransform="scale(0.999994,1.000006)" gradientUnits="userSpaceOnUse" id="linearGradient12149" x1="135.16179" x2="133.79468" xlink:href="#linearGradient22975" y1="157.65474" y2="156.36469"/>
+    <linearGradient gradientTransform="scale(0.999994,1.000006)" gradientUnits="userSpaceOnUse" id="linearGradient12147" x1="135.16179" x2="133.79468" xlink:href="#linearGradient22975" y1="157.65474" y2="156.36469"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-112.0667,265.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12145" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-112.0667,262.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12143" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-115.0667,265.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12141" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-118.0667,265.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12139" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-121.0667,265.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12137" r="2.0070677" xlink:href="#linearGradient21273"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-124.0667,265.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12135" r="2.0070677" xlink:href="#linearGradient21273"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-115.0667,262.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12133" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-118.0667,262.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12131" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-121.0667,262.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12129" r="2.0070677" xlink:href="#linearGradient21273"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-124.0667,262.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12127" r="2.0070677" xlink:href="#linearGradient21273"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-70.06670,264.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12125" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-70.06670,261.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12123" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023791e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12121" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12119" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023860e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12117" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12115" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023759e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12113" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12111" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023836e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12109" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12107" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.024043e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12105" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12103" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023976e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12101" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12099" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.021565e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12097" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12095" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.021642e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12093" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12091" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.021849e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12089" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12087" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.021782e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12085" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12083" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027064e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12081" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12079" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027141e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12077" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12075" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027348e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12073" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12071" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027281e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12069" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12067" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.024084e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12065" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12063" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.024161e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12061" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12059" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.024368e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12057" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12055" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.024301e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12053" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12051" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027030e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12049" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12047" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027107e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12045" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12043" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027314e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12041" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12039" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027247e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12037" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12035" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023009e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12033" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12031" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023086e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12029" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12027" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023293e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12025" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12023" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.023226e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12021" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient12019" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-73.06670,264.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12017" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-76.06670,264.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12015" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-79.06670,264.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12013" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-82.06670,264.9528)" gradientUnits="userSpaceOnUse" id="radialGradient12011" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-73.06670,261.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12009" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-76.06670,261.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12007" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-79.06670,261.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12005" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <radialGradient cx="-66.099426" cy="99.988457" fx="-66.099426" fy="99.988457" gradientTransform="matrix(0.498238,0.000000,0.000000,0.249121,-82.06670,261.9529)" gradientUnits="userSpaceOnUse" id="radialGradient12003" r="2.0070677" xlink:href="#linearGradient14160"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027504e-10)" gradientUnits="userSpaceOnUse" id="linearGradient12001" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient11999" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027581e-10)" gradientUnits="userSpaceOnUse" id="linearGradient11997" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient11995" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027788e-10)" gradientUnits="userSpaceOnUse" id="linearGradient11993" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient11991" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.027721e-10)" gradientUnits="userSpaceOnUse" id="linearGradient11989" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient11987" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.021821e-10)" gradientUnits="userSpaceOnUse" id="linearGradient11985" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient11983" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.021898e-10)" gradientUnits="userSpaceOnUse" id="linearGradient11981" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient11979" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.022105e-10)" gradientUnits="userSpaceOnUse" id="linearGradient11977" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient11975" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.372284,0.000000,0.000000,0.916806,6.735873,-1.022038e-10)" gradientUnits="userSpaceOnUse" id="linearGradient11973" x1="-64.000694" x2="-63.953007" xlink:href="#linearGradient11442" y1="83.947449" y2="80.317116"/>
+    <linearGradient gradientTransform="matrix(1.731264,0.000000,0.000000,1.388554,183.0968,-38.74554)" gradientUnits="userSpaceOnUse" id="linearGradient11971" x1="-156.03067" x2="-152.33473" xlink:href="#linearGradient10810" y1="80.490494" y2="84.271248"/>
+    <linearGradient gradientTransform="matrix(1.571171,0.000000,0.000000,0.636468,-330.0357,121.5000)" gradientUnits="userSpaceOnUse" id="linearGradient11969" x1="131.22572" x2="70.516754" xlink:href="#linearGradient18048" y1="299.69070" y2="241.59059"/>
+    <linearGradient gradientTransform="matrix(1.571171,0.000000,0.000000,0.636468,-276.0000,136.0000)" gradientUnits="userSpaceOnUse" id="linearGradient11967" x1="115.38940" x2="139.05852" xlink:href="#linearGradient1133" y1="187.84824" y2="276.58850"/>
+    <linearGradient gradientTransform="matrix(1.571171,0.000000,0.000000,0.636468,-304.1234,112.0580)" gradientUnits="userSpaceOnUse" id="linearGradient11965" x1="134.21162" x2="53.468502" xlink:href="#linearGradient1133" y1="252.74458" y2="190.52753"/>
+    <radialGradient cx="-19.261518" cy="253.63734" fx="-19.038713" fy="254.35735" gradientTransform="matrix(2.455634,0.000000,0.000000,0.557959,-108.8844,175.9701)" gradientUnits="userSpaceOnUse" id="radialGradient11963" r="31.620827" xlink:href="#linearGradient13376"/>
+    <linearGradient id="linearGradient22975">
+      <stop id="stop22977" offset="0.0000000" style="stop-color:#bababa;stop-opacity:1.0000000;"/>
+      <stop id="stop22979" offset="1.0000000" style="stop-color:#bababa;stop-opacity:0.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient21273">
+      <stop id="stop21275" offset="0.0000000" style="stop-color:#f84a5a;stop-opacity:1.0000000;"/>
+      <stop id="stop21277" offset="1.0000000" style="stop-color:#b96869;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient18048">
+      <stop id="stop18049" offset="0.0000000" style="stop-color:#ffffff;stop-opacity:1.0000000;"/>
+      <stop id="stop9702" offset="0.0000000" style="stop-color:#eeeeee;stop-opacity:1.0000000;"/>
+      <stop id="stop18052" offset="1.0000000" style="stop-color:#ffffff;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient1133">
+      <stop id="stop1134" offset="0.0000000" style="stop-color:#6e6e6e;stop-opacity:1.0000000;"/>
+      <stop id="stop1135" offset="1.0000000" style="stop-color:#000000;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient21825">
+      <stop id="stop21827" offset="0.0000000" style="stop-color:#808080;stop-opacity:1.0000000;"/>
+      <stop id="stop21829" offset="1.0000000" style="stop-color:#5e5e5e;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient12759">
+      <stop id="stop12761" offset="0.0000000" style="stop-color:#b4b4b4;stop-opacity:1.0000000;"/>
+      <stop id="stop12763" offset="1.0000000" style="stop-color:#d7d8de;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient41493">
+      <stop id="stop41495" offset="0.0000000" style="stop-color:#181818;stop-opacity:1.0000000;"/>
+      <stop id="stop41497" offset="1.0000000" style="stop-color:#5e5e5e;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient6658">
+      <stop id="stop6659" offset="0.0000000" style="stop-color:#677883;stop-opacity:1.0000000;"/>
+      <stop id="stop6660" offset="1.0000000" style="stop-color:#677883;stop-opacity:0.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient29203">
+      <stop id="stop29205" offset="0.0000000" style="stop-color:#d3d3d3;stop-opacity:1.0000000;"/>
+      <stop id="stop29207" offset="1.0000000" style="stop-color:#ffffff;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient14835">
+      <stop id="stop14836" offset="0.0000000" style="stop-color:#bed1d0;stop-opacity:1.0000000;"/>
+      <stop id="stop14837" offset="1.0000000" style="stop-color:#52727b;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient14160">
+      <stop id="stop14161" offset="0.0000000" style="stop-color:#4af853;stop-opacity:1.0000000;"/>
+      <stop id="stop14162" offset="1.0000000" style="stop-color:#68b96d;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient11442">
+      <stop id="stop11443" offset="0.0000000" style="stop-color:#6e6e6e;stop-opacity:1.0000000;"/>
+      <stop id="stop11444" offset="1.0000000" style="stop-color:#000000;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient10810">
+      <stop id="stop10811" offset="0.0000000" style="stop-color:#0e0000;stop-opacity:1.0000000;"/>
+      <stop id="stop10814" offset="0.50000000" style="stop-color:#ffffff;stop-opacity:1.0000000;"/>
+      <stop id="stop10812" offset="1.0000000" style="stop-color:#000000;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient12744">
+      <stop id="stop12745" offset="0.0000000" style="stop-color:#839da4;stop-opacity:1.0000000;"/>
+      <stop id="stop12746" offset="1.0000000" style="stop-color:#496d77;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <linearGradient id="linearGradient13376">
+      <stop id="stop13377" offset="0.0000000" style="stop-color:#d4d4d4;stop-opacity:1.0000000;"/>
+      <stop id="stop13380" offset="0.50000000" style="stop-color:#ffffff;stop-opacity:0.49803922;"/>
+      <stop id="stop13378" offset="1.0000000" style="stop-color:#ffffff;stop-opacity:0.0000000;"/>
+    </linearGradient>
+  </defs>
+  <g id="layer1">
+    <g id="g30675" transform="matrix(0.886633,0.000000,0.000000,0.876648,-1056.899,-88.16762)">
+      <path d="M 1303.4911,141.12052 C 1307.5949,129.77417 1313.3510,119.77473 1324.6575,116.60078 C 1334.2238,113.91536 1358.3413,115.16926 1363.9972,135.15353 C 1366.5930,118.10234 1406.4379,102.83432 1418.7638,104.04889 C 1430.3443,105.19002 1454.0804,113.06115 1455.4946,132.24185 C 1472.4652,105.32887 1505.9080,119.94847 1516.4530,146.11277 C 1528.2341,175.34428 1523.5546,193.54377 1507.2130,200.60581 C 1525.8689,208.76569 1514.2767,241.04388 1512.4408,253.35454 C 1510.1570,268.66920 1488.9347,284.47054 1454.1801,276.07026 C 1460.5512,283.88743 1452.7811,297.23494 1442.1042,303.66923 C 1435.7763,307.48266 1420.6833,302.23309 1409.7926,295.89870 C 1411.0020,307.27234 1389.5670,328.47881 1376.2735,327.36561 C 1362.9800,326.25241 1350.1529,321.70744 1346.9677,312.78599 C 1341.3706,329.95398 1279.1953,343.89377 1262.5621,334.20317 C 1244.8845,323.90406 1243.9093,293.20870 1249.9174,276.91951 C 1239.3544,275.06009 1217.6706,258.45216 1218.2692,238.96114 C 1218.8680,219.46226 1234.8946,198.96278 1249.6626,196.50530 C 1233.9596,187.44537 1240.5948,159.62097 1253.5119,146.77737 C 1266.0276,134.33287 1296.1271,134.77073 1303.4911,141.12052 z " id="path29857" style="fill:url(#linearGradient11957);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.0000000pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000"/>
+      <path d="M 1287.7859,229.50409 C 1281.3163,232.90997 1269.5823,233.31088 1263.5405,227.52573 C 1257.4689,221.71220 1254.6010,208.67658 1260.7128,200.56380 C 1251.4959,198.07447 1240.8346,182.20649 1251.3732,169.72417 C 1263.1471,155.77864 1292.0050,147.75211 1299.4480,148.10569 C 1306.6314,148.44695 1320.0284,165.24568 1314.2053,170.71696 C 1321.6338,171.14367 1343.0521,164.09880 1350.2719,173.79166 C 1357.7360,183.81259 1357.9228,198.43833 1351.3874,200.67728 C 1356.5978,206.10879 1363.3281,220.27211 1353.5014,227.29748 C 1343.6747,234.32278 1337.1136,235.54858 1330.1120,224.73505 C 1330.9947,235.79798 1312.9056,246.72268 1303.4446,246.47205 C 1294.2776,246.22937 1281.7723,235.01635 1287.7859,229.50409 z " id="path30643" style="fill:url(#linearGradient11959);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:0.58486547pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000"/>
+      <path d="M 1349.2556,272.26904 C 1339.1578,272.90010 1323.5395,266.68602 1321.7532,254.27141 C 1320.1660,243.24053 1329.0937,235.05537 1338.6922,231.73270 C 1332.4321,224.52439 1340.9231,205.40750 1356.6332,200.92845 C 1374.1849,195.92436 1406.3258,197.87426 1410.5661,210.22160 C 1414.6165,198.09256 1443.3318,195.48885 1466.2800,200.51129 C 1487.8806,205.23881 1496.9840,214.03114 1496.8899,225.25773 C 1501.3276,221.96684 1508.7632,224.96726 1514.7428,229.41343 C 1520.5138,233.70453 1520.8734,258.44882 1512.9883,259.74045 C 1518.9150,264.23919 1520.7027,274.09412 1516.0936,284.27833 C 1511.6079,294.18973 1486.2483,297.82024 1480.9897,287.54671 C 1482.2833,294.96131 1469.4236,309.58367 1457.3489,309.93126 C 1445.2742,310.27877 1399.3929,303.27631 1399.6156,290.39587 C 1394.1757,300.06928 1364.7378,299.15946 1357.0261,293.67283 C 1349.5539,288.35680 1341.1895,277.73100 1349.2556,272.26904 z " id="path29859" style="fill:url(#linearGradient11961);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:0.58486547pt;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000"/>
+    </g>
+  </g>
+</svg>
diff --git a/filter/source/svgimport/test/otto_01.svg b/filter/source/svgimport/test/otto_01.svg
new file mode 100644
index 0000000..c909be0
--- /dev/null
+++ filter/source/svgimport/test/otto_01.svg
@@ -0,0 +1,186 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
+"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
+<!-- Created with Inkscape (http://www.inkscape.org/) --><svg height="297mm" id="svg1" inkscape:version="0.39cvs" sodipodi:docbase="F:\Jza" sodipodi:docname="otto.svg" sodipodi:version="0.32" width="210mm" xmlns="http://www.w3.org/2000/svg" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:xlink="http://www.w3.org/1999/xlink">
+  <metadata>
+    <rdf:RDF xmlns:cc="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
+      <cc:Work rdf:about="">
+        <dc:title>Otto</dc:title>
+        <dc:description>Official Mascott of OpenOffice.org Educational project</dc:description>
+        <dc:subject>
+          <rdf:Bag>
+            <rdf:li></rdf:li>
+            <rdf:li>openoffice</rdf:li>
+            <rdf:li>education</rdf:li>
+            <rdf:li>jza</rdf:li>
+            <rdf:li>hash</rdf:li>
+            <rdf:li>otto</rdf:li>
+            <rdf:li>computer</rdf:li>
+            <rdf:li>education_mascot</rdf:li>
+            <rdf:li>alexandro</rdf:li>
+          </rdf:Bag>
+        </dc:subject>
+        <dc:publisher>
+          <cc:Agent rdf:about="http://www.openclipart.org">
+            <dc:title>Alexandro Colorado</dc:title>
+          </cc:Agent>
+        </dc:publisher>
+        <dc:creator>
+          <cc:Agent>
+            <dc:title>Alexandro Colorado</dc:title>
+          </cc:Agent>
+        </dc:creator>
+        <dc:rights>
+          <cc:Agent>
+            <dc:title>Alexandro Colorado</dc:title>
+          </cc:Agent>
+        </dc:rights>
+        <dc:date></dc:date>
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
+        <cc:license rdf:resource="http://web.resource.org/cc/PublicDomain"/>
+        <dc:language>en</dc:language>
+      </cc:Work>
+      <cc:License rdf:about="http://web.resource.org/cc/PublicDomain">
+        <cc:permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
+        <cc:permits rdf:resource="http://web.resource.org/cc/Distribution"/>
+        <cc:permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
+      </cc:License>
+    </rdf:RDF>
+  </metadata>
+  <author date="28-08-2004" id="author987" name="Alexandro Colorado" nick="JZA"/>
+  <defs id="defs3">
+    <linearGradient id="linearGradient981">
+      <stop id="stop982" offset="0.00000000" style="stop-color:#854900;stop-opacity:1.0000000;"/>
+      <stop id="stop986" offset="0.50000000" style="stop-color:#c2a47f;stop-opacity:1.0000000;"/>
+      <stop id="stop983" offset="1.0000000" style="stop-color:#ffffff;stop-opacity:1.0000000;"/>
+    </linearGradient>
+    <pattern height="501.00000" id="pattern828" patternTransform="translate(61.57441,279.5503)" width="640.00000">
+      <image height="501.00000" id="image829" sodipodi:absref="F:\JZA\My Pictures\otto_wing.jpg" width="640.00000" xlink:href="F:\JZA\My Pictures\otto_wing.jpg"/>
+    </pattern>
+    <linearGradient id="linearGradient984" x1="0.50181818" x2="1.0000000" xlink:href="#linearGradient981" y1="0.50000000" y2="0.50000000"/>
+    <radialGradient cx="0.50000000" cy="0.50000000" fx="0.50000000" fy="0.50000000" id="radialGradient985" r="0.50000000" xlink:href="#linearGradient981"/>
+  </defs>
+  <sodipodi:namedview bordercolor="#666666" borderopacity="1.0" id="base" inkscape:cx="337.56676" inkscape:cy="196.71025" inkscape:pageopacity="0.0" inkscape:pageshadow="2" inkscape:window-height="496" inkscape:window-width="640" inkscape:window-x="213" inkscape:window-y="150" inkscape:zoom="1.3018996" pagecolor="#ffffff"/>
+  <path d="M 629.84888 755.20026 A 228.99231 33.124676 0 1 0 171.86426,755.20026 A 228.99231 33.124676 0 1 0 629.84888 755.20026 z" id="ground" sodipodi:cx="400.85657" sodipodi:cy="755.20026" sodipodi:rx="228.99231" sodipodi:ry="33.124676" sodipodi:type="arc" style="fill:url(#radialGradient985);fill-opacity:1;fill-rule:evenodd;stroke-width:1.0000000pt;stroke-opacity:0.00000000;" transform="translate(-14.40203,-34.56488)"/>
+  <path d="M 335.60321,543.19595 L 303.19517,572.36318 C 303.19517,572.36318 284.83062,530.23273 304.27544,577.76452 C 323.72026,625.29630 325.88080,630.69764 325.88080,630.69764 L 343.16508,641.50032 L 365.85070,649.06219 L 377.73365,649.06219 L 384.21526,646.90166 L 481.43936,562.64077 L 496.56311,529.15246 L 498.72365,521.59059 L 478.19856,534.55380 L 461.99454,542.11568 L 453.35240,545.35648 L 436.06811,547.51702 L 414.46276,546.43675 L 397.17847,542.11568 L 391.77713,538.87487 L 335.60321,543.19595 z " id="body_f" style="fill:#d9dae6;fill-rule:evenodd;stroke:none;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1.0000000;"/>
+  <path d="M 358.46887,339.49794 C 395.13046,339.49794 395.13046,363.93900 395.13046,363.93900 C 395.13046,363.93900 407.35099,351.71847 395.13046,388.38006 C 388.31127,414.23897 395.13046,424.70407 397.04343,441.33569 C 396.45829,455.22163 386.98344,473.92377 362.54238,490.21781 C 344.92051,496.20429 331.03458,480.99052 326.71351,475.58918 C 321.31217,469.10757 316.90107,447.32217 305.51325,429.11516 C 302.76757,417.38975 304.18542,391.86842 309.58676,384.30655 L 334.02782,355.79198 L 358.46887,339.49794 z " id="head" sodipodi:nodetypes="cccccccccc" style="fill:#d9dae6;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1.0000000;"/>
+  <path d="M 194.81486,611.53110 C 202.93215,604.66263 214.79588,604.66263 214.79588,604.66263 C 214.79588,604.66263 212.29825,603.41382 209.80062,602.78941 C 205.42977,601.54060 200.43452,603.41382 200.43452,603.41382 L 194.19046,605.91144 C 194.19046,605.91144 196.68808,606.53585 189.19520,604.66263 C 181.70232,602.78941 172.96063,607.78466 172.96063,607.78466 C 172.96063,607.78466 170.46300,607.78466 172.96063,607.78466 C 175.45826,607.78466 182.95114,606.53585 182.95114,606.53585 C 182.95114,606.53585 185.44876,606.53585 189.81961,608.40907 C 194.19046,610.28229 194.81486,611.53110 194.81486,611.53110 z " id="path834" sodipodi:nodetypes="ccccccccccc" style="fill-rule:evenodd;stroke-width:1.0000000pt;"/>
+  <path d="M 217.48196,599.33246 C 223.58234,595.27660 231.96930,595.94880 231.96930,595.94880 C 231.96930,595.94880 230.26943,594.98624 228.53666,594.43420 C 225.51253,593.36549 221.88247,594.31403 221.88247,594.31403 L 217.33667,595.60235 C 217.33667,595.60235 219.06944,596.15439 213.87112,594.49826 C 208.67281,592.84214 202.22972,595.63103 202.22972,595.63103 C 202.22972,595.63103 200.46404,595.48951 202.22972,595.63103 C 203.99540,595.77255 209.35823,595.37605 209.35823,595.37605 C 209.35823,595.37605 211.12389,595.51756 214.11513,596.99680 C 217.10635,598.47603 217.48196,599.33246 217.48196,599.33246 z " id="path847" sodipodi:nodetypes="ccccccccccc" style="fill-rule:evenodd;stroke-width:1.0000000pt;"/>
+  <path d="M 386.93459 415.31229 A 21.603048 18.722643 0 1 0 343.72849,415.31229 A 21.603048 18.722643 0 1 0 386.93459 415.31229 z" id="eye_r" sodipodi:cx="365.33154" sodipodi:cy="415.31229" sodipodi:rx="21.603048" sodipodi:ry="18.722643" sodipodi:type="arc" style="fill:#ffffff;fill-opacity:0.75000000;fill-rule:evenodd;stroke:#000000;stroke-width:1.0000000pt;" transform="matrix(0.935208,0.000000,0.000000,1.000000,25.11082,0.000000)"/>
+  <path d="M 386.93459 415.31229 A 21.603048 18.722643 0 1 0 343.72849,415.31229 A 21.603048 18.722643 0 1 0 386.93459 415.31229 z" id="eye_l" sodipodi:cx="365.33154" sodipodi:cy="415.31229" sodipodi:rx="21.603048" sodipodi:ry="18.722643" sodipodi:type="arc" style="fill:#ffffff;fill-opacity:0.75000000;fill-rule:evenodd;stroke:#000000;stroke-width:1.0000000pt;" transform="matrix(0.805767,0.000000,0.000000,0.828956,33.93607,76.79742)"/>
+  <path d="M 340.84809 419.63290 A 5.7608128 5.7608128 0 1 0 329.32647,419.63290 A 5.7608128 5.7608128 0 1 0 340.84809 419.63290 z" id="path836" sodipodi:cx="335.08728" sodipodi:cy="419.63290" sodipodi:rx="5.7608128" sodipodi:ry="5.7608128" sodipodi:type="arc" style="fill:#282828;fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.0000000pt;" transform="translate(5.091887,0.000000)"/>
+  <path d="M 340.84809 419.63290 A 5.7608128 5.7608128 0 1 0 329.32647,419.63290 A 5.7608128 5.7608128 0 1 0 340.84809 419.63290 z" id="path837" sodipodi:cx="335.08728" sodipodi:cy="419.63290" sodipodi:rx="5.7608128" sodipodi:ry="5.7608128" sodipodi:type="arc" style="fill:#303030;fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.0000000pt;" transform="translate(18.28970,-1.719883)"/>
+  <path d="M 319.26135,412.74833 C 311.49467,416.30772 320.35050,418.29125 315.22974,418.29125 C 315.22974,419.86144 320.67175,422.91035 317.24555,422.91035 C 315.45276,422.91035 319.26135,425.16448 319.26135,427.52945 C 315.08010,427.52945 323.29293,428.37132 323.29293,431.22473" id="path850" style="fill:none;fill-opacity:0.75000000;fill-rule:evenodd;stroke:#000000;stroke-width:1.3400108pt;stroke-opacity:0.73033708;"/>
+  <path d="M 377.81804,407.72925 C 377.81804,415.08170 374.76291,413.09107 374.76291,414.85789 C 377.79375,414.85789 378.83642,409.13701 378.83642,415.87627 C 374.94663,415.87627 378.83642,418.09860 378.83642,415.87627 C 378.83642,410.59205 377.81804,421.32444 377.81804,418.93140 C 377.81804,409.27138 378.83642,420.34899 378.83642,418.93140 C 378.83642,415.10456 381.93098,420.96815 378.83642,420.96815 C 376.85705,420.96815 371.76516,424.02329 373.74453,424.02329" id="path851" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 377.81804,413.83951 C 380.63379,413.83951 381.89155,410.27853 381.89155,414.85789 C 381.89155,422.36112 379.85479,414.79608 379.85479,414.85789 C 379.85479,419.02536 379.08434,413.83951 380.87317,413.83951" id="path852" style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-opacity:0.79775280;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 316.71539,375.82009 C 309.72577,375.82009 291.81270,397.38927 287.18245,404.33466 C 284.18986,407.32724 276.99867,415.36326 276.99867,419.61032" id="path853" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 331.99105,379.89360 C 324.86353,374.54795 299.40298,359.42762 299.40298,350.36065 C 297.55568,346.66606 289.29446,328.97472 291.25596,328.97472 C 291.93487,328.97472 292.61379,328.97472 293.29271,328.97472" id="path854" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 333.00943,370.72820 C 315.90935,359.32814 303.45211,336.57599 292.27433,319.80933 C 289.24446,318.29439 290.23758,319.40845 290.23758,321.84608" id="path855" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 323.84403,367.67307 C 313.05322,367.67307 301.49832,374.74312 294.31109,381.93035 C 287.98848,384.03789 275.98029,390.48661 275.98029,398.22439" id="path856" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 326.89917,368.69144 C 314.55328,368.69144 306.04867,381.93035 292.27433,381.93035 C 289.12537,381.93035 275.98029,384.93929 275.98029,389.05899" id="path857" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 326.89917,372.76495 C 315.98389,372.76495 296.85914,386.51094 289.21920,394.15088 C 282.17331,397.67382 280.01348,403.31628 288.20082,403.31628 C 293.01662,403.31628 298.23348,401.27952 302.45811,401.27952 C 302.45811,399.78108 302.21807,400.50118 303.47648,399.24277" id="path858" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 333.00943,369.70982 C 326.43550,369.70982 278.01705,360.91185 278.01705,373.78333 C 278.01705,378.50714 291.78168,376.83846 296.34784,376.83846 C 297.70568,376.83846 299.06352,376.83846 300.42135,376.83846" id="path859" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 331.99105,360.54442 C 314.65154,360.54442 298.52641,352.39740 281.07218,352.39740 C 275.36385,352.39740 267.83327,345.90700 267.83327,341.19525" id="path860" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 337.08294,366.65469 C 314.50375,366.65469 289.63269,373.48089 267.83327,362.58118 C 266.44587,362.58118 262.74139,357.69157 262.74139,356.47091" id="path861" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 325.88079,367.67307 C 325.88079,357.11800 311.58909,345.16551 308.56837,336.10336 C 307.57348,333.11869 307.54999,331.01000 307.54999,327.95635" id="path862" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 328.93592,363.59956 C 322.11802,356.78166 315.93781,342.84322 308.56837,339.15850 C 304.15145,334.74157 295.59736,329.99310 289.21920,329.99310 C 289.21920,331.35094 289.21920,332.70877 289.21920,334.06661" id="path863" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 327.91754,365.63631 C 316.63609,365.63631 302.03369,355.62208 297.36622,346.28714 C 294.56518,343.48610 281.82940,333.04823 279.03543,333.04823" id="path864" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 282.09056,340.17687 C 282.09056,348.16901 282.63797,350.90806 288.20082,356.47091 C 290.45864,358.72873 300.31212,361.56280 303.47648,361.56280 C 306.50704,364.59335 315.47999,370.72820 319.77052,370.72820 C 321.80728,370.72820 323.84403,370.72820 325.88079,370.72820" id="path865" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 286.16407,350.36065 C 292.14343,350.36065 307.54999,357.94329 307.54999,363.59956 C 307.54999,365.60045 311.55710,376.83846 312.64188,376.83846" id="path866" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 333.00943,351.37903 C 320.77751,351.37903 314.91398,350.75216 305.51324,355.45254 C 298.46697,355.45254 292.13384,377.99734 288.20082,381.93035" id="path867" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 314.67864,324.90121 C 322.57252,332.79509 329.95430,340.64819 329.95430,352.39740 C 329.95430,356.57664 333.00943,362.87435 333.00943,365.63631" id="path869" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 299.40298,318.79095 C 299.40298,328.62125 305.55164,335.20020 308.56837,344.25038 C 310.61242,348.33847 315.28793,359.52605 319.77052,359.52605 C 322.42934,362.18487 327.25704,364.61793 330.97268,364.61793" id="path870" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 308.56837,323.88284 C 308.56837,331.88980 316.12795,341.46969 318.75215,349.34227 C 322.83231,353.42244 321.80728,361.99583 321.80728,367.67307" id="path871" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 268.85165,357.48929 C 282.19499,357.48929 289.14906,360.00017 300.42135,365.63631 C 301.69926,366.91422 308.70627,374.80171 309.58675,374.80171" id="path872" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 330.97268,357.48929 C 327.17549,349.89492 316.72261,349.34227 308.56837,349.34227 C 302.06039,349.34227 295.79253,350.91596 291.25596,355.45254 C 287.83752,362.28942 278.01705,366.16630 278.01705,374.80171 C 278.01705,378.07790 275.98029,381.28766 275.98029,383.96711" id="path873" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 321.80728,318.79095 C 321.80728,327.43703 328.93592,334.82171 328.93592,342.21363 C 332.79095,346.06866 334.77558,354.43416 341.15645,354.43416" id="path874" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 327.91754,319.80933 C 327.91754,330.85862 349.30347,340.86255 349.30347,353.41578 C 349.30347,356.14743 348.35066,360.60999 350.32185,362.58118" id="path875" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 389.02019,348.32389 C 389.02019,330.89580 386.08792,332.15272 375.78128,321.84608 C 365.35861,321.84608 366.90853,324.31594 362.54238,333.04823 C 362.54238,344.94353 353.37698,356.48586 353.37698,368.69144" id="path876" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 347.26672,366.65469 C 347.26672,351.89032 350.05803,340.44069 360.50562,329.99310 C 361.76303,328.73569 379.85479,315.16939 379.85479,326.93797" id="path877" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 351.34023,349.34227 C 351.34023,337.51305 366.89928,330.36059 375.78128,325.91959 C 384.50883,325.91959 389.43527,321.24278 396.14883,327.95635 C 397.77768,329.58519 403.16737,334.06661 404.29585,334.06661" id="path878" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 411.42450,340.17687 C 401.89881,340.17687 393.61214,334.06661 382.90993,334.06661 C 375.81101,334.06661 369.73015,343.23201 365.59751,343.23201 C 365.59751,346.86378 363.56076,351.13123 363.56076,353.41578" id="path879" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 344.21158,319.80933 C 344.21158,329.65364 344.21158,339.49796 344.21158,349.34227 C 344.21158,353.30049 346.24834,359.08803 346.24834,361.56280" id="path880" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 340.13807,364.61793 C 340.13807,355.11308 340.13807,345.60822 340.13807,336.10336 C 340.13807,329.46423 341.15645,333.89562 341.15645,337.12174" id="path881" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 338.10132,360.54442 C 338.10132,353.40136 333.02113,339.18190 329.95430,333.04823 C 329.95430,328.31440 330.97268,320.10989 330.97268,327.95635" id="path882" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 357.45049,361.56280 C 357.45049,355.64280 363.79896,346.04894 367.63427,342.21363 C 367.63427,339.38967 376.79966,334.24669 376.79966,329.99310 C 378.17863,328.61414 393.09370,314.90525 393.09370,325.91959" id="path883" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 367.63427,353.41578 C 370.98905,348.38361 377.82921,341.19525 383.92830,341.19525 C 385.94483,339.17872 388.25925,338.14012 391.05695,338.14012" id="path884" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 411.42450,319.80933 L 361.52400,346.28714" id="path885" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 352.35860,367.67307 C 352.35860,355.60217 374.87533,345.19381 383.92830,339.15850 C 385.82949,338.52477 402.25910,331.43439 402.25910,335.08499" id="path886" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 367.63427,362.58118 C 372.60219,357.61325 388.00181,343.13737 388.00181,335.08499 C 389.36000,332.36862 388.46380,322.86446 391.05695,322.86446" id="path887" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 361.52400,362.58118 C 388.23155,364.48886 402.24321,363.58367 419.57152,380.91197 C 421.75218,384.18297 423.64503,386.13579 423.64503,390.07737" id="path888" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 367.63427,386.00386 C 379.81733,386.00386 391.25183,380.91197 402.25910,380.91197 C 403.45266,380.91197 407.35099,378.45695 407.35099,377.85684" id="path889" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 369.67102,369.70982 C 385.68087,369.70982 399.53754,369.82101 414.47963,374.80171 C 420.87815,381.20023 419.57152,385.79693 419.57152,395.16926" id="path890" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 375.78128,374.80171 C 384.15954,374.80171 402.89539,375.43800 408.36936,380.91197 C 414.85389,383.07348 415.49801,383.63818 415.49801,390.07737" id="path891" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 376.79966,377.85684 C 390.03857,377.85684 403.27748,377.85684 416.51638,377.85684" id="path892" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 388.00181,359.52605 C 396.07335,359.52605 403.29415,360.04357 410.40612,363.59956 C 411.90456,363.59956 412.44287,364.13787 412.44287,365.63631" id="path893" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 422.62665,366.65469 C 411.27852,366.65469 403.66972,347.30552 392.07532,347.30552 C 385.46933,347.30552 378.83642,346.65955 378.83642,354.43416" id="path894" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 377.81804,358.50767 C 386.76349,354.03494 398.33814,351.37903 408.36936,351.37903 C 412.83310,351.37903 414.47963,354.28334 414.47963,358.50767" id="path895" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 381.89155,376.83846 C 402.23903,387.01220 406.00583,393.86216 411.42450,415.53681 C 411.42450,418.59194 411.42450,421.64707 411.42450,424.70220" id="path896" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 423.64503,407.38979 C 415.49739,407.38979 397.30877,398.36595 391.05695,392.11413 C 391.05695,390.75629 391.39641,391.09575 390.03857,391.09575" id="path897" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 415.49801,414.51843 C 415.49801,401.52314 411.25292,394.15088 399.20397,394.15088 C 395.04336,394.15088 386.98344,388.85213 386.98344,384.98548" id="path898" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 355.41374,370.72820 C 372.39252,370.72820 373.37497,359.89561 383.92830,349.34227 C 388.92991,349.34227 390.77160,341.19525 395.13046,341.19525" id="path899" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 347.26672,370.72820 C 352.10765,363.46679 369.50466,338.14012 377.81804,338.14012" id="path900" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 339.56419,495.66416 C 328.76151,514.02871 341.72472,523.75112 341.72472,523.75112 C 341.72472,523.75112 338.48392,525.91166 348.20633,525.91166 C 357.92874,525.91166 369.81169,520.51032 369.81169,520.51032 L 389.25651,504.30630 C 389.25651,504.30630 388.17624,505.38657 394.65785,499.98523 C 395.73811,493.50362 391.41704,492.42336 391.41704,492.42336 L 386.01570,498.90496 C 386.01570,498.90496 386.01570,502.14577 376.29329,507.54711 C 366.57088,512.94845 354.68794,507.54711 354.68794,507.54711 L 339.56419,495.66416 z " id="path910" sodipodi:nodetypes="ccccccccccc" style="fill:#79a9d4;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75000000;"/>
+  <path d="M 389.25651,463.25613 C 396.81838,477.29961 392.49731,489.18255 392.49731,489.18255 C 392.49731,489.18255 389.25651,496.74443 382.77490,502.14577 C 376.29329,507.54711 377.37356,507.54711 368.73142,509.70764 C 360.08928,511.86818 346.04579,502.14577 346.04579,502.14577 L 339.56419,494.58389 C 339.56419,494.58389 342.80499,499.98523 339.56419,494.58389 C 336.32338,489.18255 340.64446,489.18255 340.64446,489.18255 L 352.52740,492.42336 L 356.84847,492.42336 L 367.65115,487.02202 L 374.13276,481.62068 L 383.85517,470.81800 L 389.25651,463.25613 z " id="path903" style="fill:#4758d4;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.74901962;"/>
+  <path d="M 387.09597,477.29961 C 387.09597,481.26059 387.09597,485.22157 387.09597,489.18255" id="path904" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 388.17624,477.29961 C 388.17624,480.51108 387.10379,487.02202 390.33678,487.02202" id="path905" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 389.25651,476.21934 C 389.25651,481.31884 394.94959,483.78122 389.25651,483.78122" id="path906" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 371.97222,492.42336 C 377.99356,492.42336 380.16390,489.63302 383.85517,485.94175 C 387.45285,482.34407 391.41704,481.18084 391.41704,476.21934" id="path908" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 391.41704,481.62068 C 391.41704,484.50433 381.93949,492.98030 379.53410,494.58389 C 378.15170,494.58389 373.05249,498.92144 373.05249,495.66416" id="path909" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 338.48392,501.06550 C 338.48392,504.45120 336.73352,516.18925 338.48392,516.18925 C 338.48392,518.68809 340.64446,517.55701 340.64446,519.43005" id="path911" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 344.96553,511.86818 C 342.08254,511.86818 338.41428,512.94845 334.16285,512.94845" id="path912" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 335.24312,508.62738 C 340.76935,508.62738 339.57996,511.86818 342.80499,511.86818" id="path913" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 337.40365,512.94845 C 338.70862,512.94845 344.96553,517.21242 344.96553,517.26952" id="path914" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 394.65785,499.98523 C 397.89865,504.30630 392.49731,512.94845 392.49731,512.94845 L 376.29329,531.31300 C 376.29329,531.31300 365.49062,537.79461 356.84847,541.03541 C 348.20633,544.27621 336.32338,543.19595 336.32338,543.19595 C 336.32338,543.19595 336.32338,543.19594 336.32338,543.19595 C 330.92205,525.91166 341.72472,523.75112 341.72472,523.75112 C 341.72472,523.75112 340.64446,524.83139 349.28660,524.83139 C 357.92874,524.83139 371.97222,519.43005 371.97222,519.43005 L 394.65785,499.98523 z " id="path915" sodipodi:nodetypes="cccccccccc" style="fill:#4758d4;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.74901962;"/>
+  <path d="M 336.32338,537.79461 C 336.32338,528.97609 342.80499,529.41859 342.80499,537.79461 C 342.80499,540.05802 342.70211,539.95514 344.96553,539.95514" id="path916" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 335.24312,533.47354 C 338.78090,533.47354 347.12606,535.28315 347.12606,531.31300" id="path917" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 336.32338,535.63407 C 341.50239,535.63407 348.20633,533.11346 348.20633,537.79461" id="path918" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 352.52740,543.55603 C 354.68794,564.08112 342.80499,579.20487 342.80499,587.84702 C 342.80499,588.92729 386.01570,582.44568 386.01570,582.44568 C 386.01570,582.44568 386.01570,575.96407 389.25651,564.08112 C 392.49731,552.19818 392.49731,526.27175 392.49731,526.27175 L 390.33678,515.46907 L 377.37356,530.59282 L 352.52740,543.55603 z " id="path919" sodipodi:nodetypes="cccccccc" style="fill:#79a9d4;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.74901962;"/>
+  <path d="M 395.73811,505.74666 C 408.70133,505.74666 409.78160,521.95068 409.78160,521.95068 C 409.78160,521.95068 409.78160,521.95068 409.78160,528.43229 C 409.78160,534.91389 402.21972,539.23496 403.29999,541.39550 C 404.38026,543.55603 406.54079,544.63630 406.54079,544.63630 C 406.54079,544.63630 407.62106,546.79684 400.05919,543.55603 C 392.49731,540.31523 392.49731,537.07443 392.49731,537.07443 L 391.41704,525.19148 L 390.33678,516.54934 L 394.65785,507.90720 L 395.73811,505.74666 z " id="path920" style="fill:#4767d4;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.74901962;"/>
+  <path d="M 402.21972,513.30854 C 402.21972,514.16237 405.01601,523.66670 406.54079,525.19148 C 406.54079,526.95808 408.94283,531.67309 406.54079,531.67309" id="path921" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 391.41704,538.15470 C 413.02240,552.19818 440.02910,546.79684 440.02910,546.79684 C 440.02910,546.79684 437.86856,546.79684 442.18963,546.79684 C 475.67793,543.55603 497.28329,520.87041 497.28329,520.87041 C 497.28329,520.87041 501.60436,514.38880 501.60436,513.30854 C 501.60436,512.22827 496.20302,528.43228 496.20302,528.43228 C 494.04249,539.23496 486.48061,553.27845 484.32008,556.51925" id="path922" sodipodi:nodetypes="ccccccc" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 335.96329,543.19595 C 312.19740,562.64077 303.55526,572.36318 303.55526,572.36318 L 302.47499,574.52371 L 311.11713,589.64746 L 330.56196,608.01202 C 330.56196,608.01202 331.64222,608.01201 330.56196,608.01202 C 343.52517,617.73443 347.84624,614.49362 351.08704,619.89496 C 354.32785,625.29630 342.44490,629.61737 342.44490,629.61737 C 342.44490,629.61737 339.20410,630.69764 329.48169,631.77791 C 319.75928,632.85818 308.95660,630.69764 308.95660,630.69764 C 308.95660,630.69764 294.91312,623.13576 288.43151,617.73443 C 273.30776,606.93175 273.30776,593.96854 273.30776,593.96854 C 273.30776,593.96854 268.98669,578.84478 276.54856,568.04211 C 283.03017,556.15916 288.43151,555.07889 295.99339,552.91836 C 302.47500,550.75782 311.11713,550.75782 317.59874,550.75782 C 324.08035,550.75782 325.16062,551.83809 325.16062,551.83809" id="wing_l" sodipodi:nodetypes="cccccccccccccccc" style="fill:#d9dae6;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.98314607;"/>
+  <path d="M 327.32115,632.85818 C 353.24758,649.06219 377.01347,650.14246 377.01347,650.14246" id="path924" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 343.16508,589.28737 C 339.92428,608.73219 339.92428,608.73219 339.92428,608.73219 L 345.32562,591.44791 L 345.32562,596.84925 L 346.40588,591.44791 C 346.40588,591.44791 343.16508,603.33085 346.40588,596.84925 C 349.64669,590.36764 349.64669,590.36764 349.64669,590.36764 L 345.32562,608.73219 L 353.96776,589.28737 L 353.96776,600.09005 L 357.20856,593.60844 C 357.20856,593.60844 355.04803,606.57166 358.28883,597.92952 C 361.52963,589.28737 361.52963,589.28737 361.52963,589.28737 L 361.52963,597.92952 C 361.52963,597.92952 362.60990,599.00978 363.69017,595.76898 C 364.77044,592.52818 364.77044,590.36764 364.77044,590.36764 L 365.85070,595.76898 C 365.85070,595.76898 369.09151,586.04657 369.09151,587.12684 C 369.09151,588.20711 370.17178,593.60844 370.17178,593.60844 L 373.41258,586.04657 C 373.41258,586.04657 373.41258,592.52818 375.57312,591.44791 C 377.73365,590.36764 377.73365,586.04657 377.73365,586.04657 L 380.97445,591.44791 L 385.29553,582.80577 L 343.16508,589.28737 z " id="path926" style="fill:#ffffff;fill-rule:evenodd;stroke:#282828;stroke-opacity:1.0000000;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.71348315;"/>
+  <path d="M 274.36044,676.94951 C 285.10319,667.97377 300.80412,667.97377 300.80412,667.97377 C 300.80412,667.97377 297.49866,666.34182 294.19320,665.52583 C 288.40864,663.89388 281.79772,666.34182 281.79772,666.34182 L 273.53408,669.60572 C 273.53408,669.60572 276.83953,670.42170 266.92315,667.97377 C 257.00677,665.52583 245.43767,672.05365 245.43767,672.05365 C 245.43767,672.05365 242.13220,672.05365 245.43767,672.05365 C 248.74313,672.05365 258.65951,670.42170 258.65951,670.42170 C 258.65951,670.42170 261.96496,670.42170 267.74952,672.86963 C 273.53408,675.31756 274.36044,676.94951 274.36044,676.94951 z " id="path927" sodipodi:nodetypes="ccccccccccc" style="fill-rule:evenodd;stroke-width:1.0000000pt;"/>
+  <path d="M 304.35899,661.00828 C 312.43248,655.70806 323.53212,656.58650 323.53212,656.58650 C 323.53212,656.58650 321.28244,655.32862 318.98923,654.60721 C 314.98697,653.21062 310.18280,654.45017 310.18280,654.45017 L 304.16671,656.13375 C 304.16671,656.13375 306.45993,656.85516 299.58026,654.69092 C 292.70061,652.52670 284.17356,656.17123 284.17356,656.17123 C 284.17356,656.17123 281.83679,655.98629 284.17356,656.17123 C 286.51033,656.35617 293.60772,655.83802 293.60772,655.83802 C 293.60772,655.83802 295.94446,656.02295 299.90319,657.95603 C 303.86189,659.88909 304.35899,661.00828 304.35899,661.00828 z " id="path928" sodipodi:nodetypes="ccccccccccc" style="fill-rule:evenodd;stroke-width:1.0000000pt;"/>
+  <path d="M 552.84375,666.14683 C 560.96104,659.27836 572.82477,659.27836 572.82477,659.27836 C 572.82477,659.27836 570.32714,658.02955 567.82951,657.40514 C 563.45866,656.15633 558.46341,658.02955 558.46341,658.02955 L 552.21935,660.52717 C 552.21935,660.52717 554.71697,661.15158 547.22409,659.27836 C 539.73121,657.40514 530.98952,662.40039 530.98952,662.40039 C 530.98952,662.40039 528.49189,662.40039 530.98952,662.40039 C 533.48715,662.40039 540.98003,661.15158 540.98003,661.15158 C 540.98003,661.15158 543.47765,661.15158 547.84850,663.02480 C 552.21935,664.89802 552.84375,666.14683 552.84375,666.14683 z " id="path929" sodipodi:nodetypes="ccccccccccc" style="fill-rule:evenodd;stroke-width:1.0000000pt;"/>
+  <path d="M 575.51085,653.94819 C 581.61123,649.89233 589.99819,650.56453 589.99819,650.56453 C 589.99819,650.56453 588.29832,649.60197 586.56555,649.04993 C 583.54142,647.98122 579.91136,648.92976 579.91136,648.92976 L 575.36556,650.21808 C 575.36556,650.21808 577.09833,650.77012 571.90001,649.11399 C 566.70170,647.45787 560.25861,650.24676 560.25861,650.24676 C 560.25861,650.24676 558.49293,650.10524 560.25861,650.24676 C 562.02429,650.38828 567.38712,649.99178 567.38712,649.99178 C 567.38712,649.99178 569.15278,650.13329 572.14402,651.61253 C 575.13524,653.09176 575.51085,653.94819 575.51085,653.94819 z " id="path930" sodipodi:nodetypes="ccccccccccc" style="fill-rule:evenodd;stroke-width:1.0000000pt;"/>
+  <path d="M 369.57955,576.77914 C 372.83882,572.00244 378.85948,570.33532 378.85948,570.33532 C 378.85948,570.33532 377.43558,570.02519 376.08988,570.04561 C 373.71535,569.99871 371.41492,571.69231 371.41492,571.69231 L 368.55893,573.89193 C 368.55893,573.89193 369.90463,573.87151 365.86753,573.93278 C 361.83043,573.99405 358.01971,577.86684 358.01971,577.86684 C 358.01971,577.86684 356.75221,578.21781 358.01971,577.86684 C 359.28722,577.51588 362.93335,575.80186 362.93335,575.80186 C 362.93335,575.80186 364.20085,575.45088 366.65357,575.82834 C 369.10629,576.20580 369.57955,576.77914 369.57955,576.77914 z " id="path931" sodipodi:nodetypes="ccccccccccc" style="fill-rule:evenodd;stroke-width:1.0000000pt;fill:#ffffff;fill-opacity:1.0000000;"/>
+  <path d="M 379.55513,567.13616 C 382.14306,564.13182 386.48349,563.30910 386.48349,563.30910 C 386.48349,563.30910 385.50029,563.03841 384.55181,562.98967 C 382.88327,562.84886 381.15986,563.86111 381.15986,563.86111 L 379.01428,565.18192 C 379.01428,565.18192 379.96276,565.23065 377.11730,565.08442 C 374.27185,564.93817 371.35133,567.31996 371.35133,567.31996 C 371.35133,567.31996 370.43755,567.49316 371.35133,567.31996 C 372.26511,567.14676 374.93700,566.18326 374.93700,566.18326 C 374.93700,566.18326 375.85077,566.01006 377.55402,566.37281 C 379.25726,566.73555 379.55513,567.13616 379.55513,567.13616 z " id="path932" sodipodi:nodetypes="ccccccccccc" style="fill-rule:evenodd;stroke-width:1.0000000pt;fill:#ffffff;fill-opacity:1.0000000;"/>
+  <path d="M 390.69686,444.89158 C 391.77713,450.29291 380.97446,448.13238 375.57312,453.53372 L 371.25204,456.77452 C 371.25204,456.77452 370.17178,456.77452 366.93097,465.41666 C 363.69017,474.05880 352.88749,479.46014 352.88749,479.46014 C 352.88749,479.46014 352.88749,479.46014 352.88749,479.46014 C 343.16508,482.70095 330.20187,476.21934 330.20187,476.21934 L 320.47946,472.97854 C 320.47946,472.97854 320.47946,472.97854 320.47946,472.97854 C 302.11490,472.97854 270.78714,472.97854 270.78714,472.97854 C 270.78714,472.97854 269.70687,472.97854 269.70687,472.97854 C 261.06473,468.65747 265.38580,465.41666 263.22526,465.41666 C 265.38580,465.41666 247.02125,466.49693 244.86071,466.49693 C 228.65669,467.57720 211.37241,471.89827 211.37241,471.89827 L 198.40919,472.97854 C 198.40919,472.97854 199.48946,472.97854 198.40919,472.97854 C 197.32892,458.93505 236.21857,447.05211 236.21857,447.05211 C 236.21857,447.05211 217.85401,453.53372 236.21857,447.05211 C 252.42258,443.81130 278.34901,442.73104 278.34901,442.73104 L 306.43597,442.73104 C 306.43597,442.73104 315.07812,441.65077 320.47946,440.57050 C 335.60320,440.57050 337.76375,431.92836 346.40589,430.84809 C 355.04803,429.76782 365.85070,435.16916 365.85070,435.16916 C 365.85070,435.16916 374.49285,439.49024 388.53633,440.57051 L 390.69686,444.89158 z " id="path933" sodipodi:nodetypes="ccccccccccccccccccccccccc" style="fill:#ffae1e;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1.0000000;"/>
+  <path d="M 263.22526,465.41666 C 318.31892,468.65747 339.92428,466.49693 339.92428,466.49693 C 339.92428,466.49693 339.92428,466.49693 339.92428,466.49693 C 360.44937,460.01533 364.77043,451.37318 364.77043,451.37318 L 363.69017,450.29291 C 363.69017,450.29291 363.69017,450.29291 366.93097,450.29291 C 370.17177,450.29291 370.17178,452.45345 370.17178,452.45345" id="path934" sodipodi:nodetypes="ccccccc" style="fill:none;fill-opacity:0.75000000;fill-rule:evenodd;stroke:#000000;stroke-width:1.0000000pt;"/>
+  <path d="M 388.53633 617.01422 A 12.423080 11.882946 0 1 0 363.69017,617.01422 A 12.423080 11.882946 0 1 0 388.53633 617.01422 z" id="path938" sodipodi:cx="376.11325" sodipodi:cy="617.01422" sodipodi:rx="12.423080" sodipodi:ry="11.882946" sodipodi:type="arc" style="fill:#ffffff;fill-opacity:0.75000000;fill-rule:evenodd;stroke:#000000;stroke-width:1.0000000pt;" transform="translate(3.240803,0.000000)"/>
+  <path d="M 389.61660,591.08782 C 368.01124,618.09452 372.33231,640.78014 372.33231,640.78014 C 372.33231,640.78014 372.33231,640.78014 372.33231,640.78014 C 385.29553,639.69988 396.09820,632.13800 396.09820,632.13800 L 387.45606,641.86041 L 383.13499,646.18148 L 377.73365,648.34201 L 388.53633,654.82362 L 396.09820,655.90389 L 405.82061,653.74335 L 418.78383,646.18148 L 429.58651,634.29853 L 466.31561,617.01425 L 479.27883,602.97077 C 479.27883,602.97077 479.27883,602.97077 479.27883,604.05103 C 485.76043,615.93398 493.32231,632.13799 498.72365,634.29853 L 511.68686,613.77345 L 520.32901,590.00755 L 504.12499,584.60621 L 513.84740,583.52594 L 523.56980,580.28514 L 536.53302,533.83362 C 536.53302,533.83362 514.92767,537.07443 500.88418,546.79684 C 486.84070,553.27845 482.51963,564.08112 482.51963,564.08112 C 482.51963,564.08112 483.59990,565.16139 482.51963,564.08112 C 471.71695,554.35871 459.83401,559.76005 459.83401,559.76005 L 389.61660,591.08782 z " id="fish_b" sodipodi:nodetypes="ccccccccccccccccccccccccccc" style="fill:#f70000;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1.0000000;"/>
+  <path d="M 410.14168 618.63464 A 13.503347 12.423080 0 1 0 383.13499,618.63464 A 13.503347 12.423080 0 1 0 410.14168 618.63464 z" id="path937" sodipodi:cx="396.63834" sodipodi:cy="618.63464" sodipodi:rx="13.503347" sodipodi:ry="12.423080" sodipodi:type="arc" style="fill:#ffffff;fill-opacity:1.0000000;fill-rule:evenodd;stroke:#000000;stroke-width:1.0000000pt;"/>
+  <path d="M 392.85741 618.81470 A 2.7006695 3.2408035 0 1 0 387.45607,618.81470 A 2.7006695 3.2408035 0 1 0 392.85741 618.81470 z" id="path939" sodipodi:cx="390.15674" sodipodi:cy="618.81470" sodipodi:rx="2.7006695" sodipodi:ry="3.2408035" sodipodi:type="arc" style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0000000pt;" transform="translate(0.000000,-5.000000)"/>
+  <path d="M 392.85741 618.81470 A 2.7006695 3.2408035 0 1 0 387.45607,618.81470 A 2.7006695 3.2408035 0 1 0 392.85741 618.81470 z" id="path940" sodipodi:cx="390.15674" sodipodi:cy="618.81470" sodipodi:rx="2.7006695" sodipodi:ry="3.2408035" sodipodi:type="arc" style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0000000pt;" transform="matrix(0.675173,0.000000,0.000000,0.720558,108.1683,165.0215)"/>
+  <path d="M 390.69687,582.80576 C 402.57981,556.87934 432.82731,551.47800 432.82731,551.47800 C 432.82731,551.47800 426.34570,551.47800 443.62999,551.47800 C 460.91427,551.47800 466.31561,568.76228 466.31561,568.76228 L 465.23535,580.64523 C 465.23535,580.64523 465.23535,578.48469 464.15508,582.80577 C 463.07481,587.12684 457.67347,594.68871 457.67347,594.68871 C 457.67347,594.68871 456.59320,594.68871 453.35240,604.41112 C 450.11160,614.13353 459.83401,617.37434 459.83401,617.37434 L 465.23535,617.37434 L 466.31561,617.37434 L 464.15508,620.61514 C 464.15508,620.61514 469.55642,615.21380 460.91427,626.01648 C 452.27213,636.81916 441.46945,636.81916 441.46945,636.81916 L 430.66677,633.57835 C 430.66677,633.57835 426.34570,630.33755 423.10490,623.85594 C 419.86410,617.37434 426.34570,604.41112 426.34570,604.41112 L 425.26544,599.00978 C 425.26544,599.00978 419.86410,602.25059 425.26544,599.00978 C 430.66677,595.76898 436.06811,591.44791 436.06811,591.44791 C 436.06811,591.44791 440.38919,587.12684 443.62999,583.88603 C 446.87079,580.64523 439.30892,589.28737 439.30892,589.28737 L 425.26544,599.00978 L 416.62329,599.00978 L 428.50624,588.20711 L 433.90758,581.72550 L 427.42597,589.28737 L 416.62329,597.92952 C 416.62329,597.92952 423.10490,593.60844 411.22195,601.17032 C 399.33901,608.73219 390.69686,594.68871 390.69686,594.68871 L 390.69687,582.80576 z " id="wing_r" sodipodi:nodetypes="ccccccccccccccccccccccccccccccc" style="fill:#d9dae6;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1.0000000;"/>
+  <path d="M 357.56865,647.26175 C 357.56865,681.83032 365.13053,702.35541 365.13053,702.35541 L 365.13053,713.15808 L 362.96999,715.31862 C 362.96999,715.31862 357.56865,715.31862 331.64222,715.31862 C 305.71580,715.31862 257.10374,729.36210 257.10374,729.36210 C 257.10374,729.36210 257.10374,729.36210 257.10374,729.36210 C 246.30107,729.36210 241.97999,726.12130 241.97999,726.12130 L 240.89973,722.88049 C 240.89973,722.88049 245.22080,718.55943 247.38133,716.39889 C 261.42481,705.59621 329.48169,701.27514 329.48169,701.27514 L 358.64892,700.19487 L 359.72919,699.11460 L 356.48839,686.15139 L 352.16731,662.38550 L 351.08704,645.10121 L 357.56865,647.26175 z " id="path942" sodipodi:nodetypes="ccccccccccccccccc" style="fill:#ffae1e;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1.0000000;"/>
+  <path d="M 407.62106,652.66309 C 408.70133,668.86711 386.01570,708.83701 386.01570,708.83701 L 387.09597,715.31862 C 387.09597,715.31862 388.17624,718.55942 397.89865,717.47916 C 407.62106,716.39889 457.31338,712.07782 457.31338,712.07782 L 508.08597,712.07782 C 508.08597,712.07782 492.96222,712.07782 508.08597,712.07782 C 523.20972,712.07782 524.28999,700.19487 524.28999,700.19487 C 524.28999,700.19487 524.28998,699.11461 517.80838,696.95407 C 504.84517,691.55273 492.96222,691.55273 476.75820,692.63300 L 432.46723,698.03434 L 409.78160,702.35541 L 398.97892,703.43567 C 398.97892,703.43567 400.05918,702.35540 403.29999,693.71326 C 415.18294,664.54603 417.34348,651.58282 416.26321,648.34201 L 407.62106,652.66309 z " id="leg_r" sodipodi:nodetypes="cccccccccccccccc" style="fill:#ffae1e;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1.0000000;"/>
+  <path d="M 483.23981,568.76228 C 477.83847,576.32416 486.48061,577.40443 486.48061,577.40443" id="path944" sodipodi:nodetypes="cc" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 475.67793,569.84255 C 473.51740,578.48469 477.83847,579.56496 477.83847,579.56496 L 481.07927,579.56496 L 481.07927,579.56496" id="path945" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 474.59767,579.56496 C 470.27660,587.12684 479.99901,588.20711 479.99901,588.20711" id="path946" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 471.35686,583.88603 C 464.87526,594.68871 475.67793,595.76898 475.67793,595.76898 L 475.67793,595.76898 L 475.67793,595.76898" id="path947" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 470.27660,570.92282 C 465.95552,577.40443 471.35686,579.56496 471.35686,579.56496" id="path948" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 415.18294,624.93621 C 416.26320,634.65862 422.74481,628.17701 422.74481,628.17701" id="path949" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 417.34347,611.97300 C 417.34347,619.53487 420.58427,617.37434 420.58427,617.37434" id="path950" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 419.50401,602.25059 C 415.18294,608.73219 422.74481,608.73219 422.74481,608.73219" id="path951" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 488.64115,596.84925 C 488.64115,601.60730 496.20302,604.60608 496.20302,607.65193" id="path952" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 490.80168,592.52818 C 495.93893,597.66542 502.68463,600.35197 502.68463,608.73219 C 502.68463,610.94700 501.60436,612.31219 501.60436,614.13353" id="path953" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 494.04249,589.28737 C 498.02437,593.26926 501.60436,595.42953 501.60436,601.17032" id="path954" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 497.28329,577.40443 C 501.96445,577.40443 506.64561,577.40443 511.32677,577.40443" id="path955" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 491.88195,572.00309 C 497.90708,572.00309 504.02044,568.76228 508.08597,568.76228 C 510.03404,568.76228 510.69512,567.68202 512.40704,567.68202" id="path956" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 494.04249,566.60175 C 500.74808,566.60175 505.61324,557.95961 511.32677,557.95961" id="path957" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <path d="M 495.12276,559.03987 C 499.35899,559.03987 509.88878,548.59492 512.40704,546.07666 C 514.35511,546.07666 515.01620,544.99639 516.72811,544.99639" id="path958" style="fill:none;fill-rule:evenodd;stroke:black;stroke-opacity:1;stroke-width:1pt;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:0.75;"/>
+  <text id="text959" sodipodi:linespacing="100%" space="preserve" style="font-size:12.000000;stroke-width:1.0000000pt;font-family:Bitstream Vera Sans;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal;text-anchor:start;writing-mode:lr;" transform="scale(3.001897,3.479685)" x="121.09216" y="59.492283">
+    <tspan id="tspan960">Open</tspan>
+  </text>
+  <text id="text962" sodipodi:linespacing="100%" space="preserve" style="font-size:26.000000;stroke-width:1.0000000pt;font-family:Glamourgirl;" transform="matrix(3.574981,1.820910,-1.894910,3.720264,0.000000,0.000000)" x="139.11159" y="23.679712">
+    <tspan id="tspan963">Otto</tspan>
+  </text>
+  <text id="text965" sodipodi:linespacing="100%" space="preserve" style="font-size:12.000000;font-weight:bold;stroke-width:1.0000000pt;font-family:Bitstream Vera Sans;fill:#0c009c;fill-opacity:1.0000000;" transform="scale(3.001897,3.479685)" x="155.78687" y="59.508331">
+    <tspan id="tspan966" style="fill:#0c009c;fill-opacity:1.0000000;">Office.org</tspan>
+  </text>
+</svg>
diff --git a/filter/source/svgimport/test/roundingerrors.svg b/filter/source/svgimport/test/roundingerrors.svg
new file mode 100644
index 0000000..0576c09
--- /dev/null
+++ filter/source/svgimport/test/roundingerrors.svg
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd" [ <!ENTITY ns_svg "http://www.w3.org/2000/svg"> ]>
+<svg width="400" height="100" viewBox="0 0 400 100" overflow="visible" enable-background="new 0 0 400 100" xml:space="preserve">
+<path fill="none" stroke="#000000" stroke-miterlimit="10" d="M10.000,5.000v80.000h77.60V5.000H10.000"/>
+<path fill="none" stroke="#000000" stroke-miterlimit="10" d="M10.000,40.000
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617
+l0.776,0.200l0.776-0.200l0.776,2.432l0.776,3.070l0.776,4.663
+l0.776-5.669l0.776-5.786l0.776-0.143l0.776-1.883l0.776,1.617"/>
+</svg>
\ No newline at end of file
diff --git a/filter/source/svgimport/test/svg2odf.cxx b/filter/source/svgimport/test/svg2odf.cxx
new file mode 100644
index 0000000..3361c40
--- /dev/null
+++ filter/source/svgimport/test/svg2odf.cxx
@@ -0,0 +1,121 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "../svgreader.hxx" 
+#include "../odfserializer.hxx" 
+
+#include <sal/main.h>
+#include <osl/file.hxx>
+#include <osl/process.h>
+#include <rtl/bootstrap.hxx>
+
+#include <cppuhelper/implbase1.hxx>
+#include <cppuhelper/bootstrap.hxx>
+#include <cppuhelper/servicefactory.hxx>
+#include <comphelper/processfactory.hxx>
+#include <comphelper/oslfile2streamwrap.hxx>
+
+using namespace ::com::sun::star;
+
+namespace
+{
+    class OutputWrap : public cppu::WeakImplHelper1<
+        io::XOutputStream>
+    {
+        osl::File maFile;
+
+    public:
+
+        explicit OutputWrap( const rtl::OUString& rURL ) : maFile(rURL) 
+        {
+            maFile.open(osl_File_OpenFlag_Create|OpenFlag_Write);
+        }
+
+		virtual void SAL_CALL writeBytes( const com::sun::star::uno::Sequence< ::sal_Int8 >& aData ) throw (com::sun::star::io::NotConnectedException,com::sun::star::io::BufferSizeExceededException, com::sun::star::io::IOException, com::sun::star::uno::RuntimeException)
+
+        {
+            sal_uInt64 nBytesWritten(0);
+            maFile.write(aData.getConstArray(),aData.getLength(),nBytesWritten);
+        }
+
+        virtual void SAL_CALL flush() throw (com::sun::star::io::NotConnectedException, com::sun::star::io::BufferSizeExceededException, com::sun::star::io::IOException, com::sun::star::uno::RuntimeException)
+        {
+        }
+
+        virtual void SAL_CALL closeOutput() throw (com::sun::star::io::NotConnectedException, com::sun::star::io::BufferSizeExceededException, com::sun::star::io::IOException, com::sun::star::uno::RuntimeException)
+        {
+            maFile.close();
+        }
+    };
+}
+
+SAL_IMPLEMENT_MAIN_WITH_ARGS(argc, argv)
+{
+	if( argc != 4 )
+		return 1;
+
+	::rtl::OUString aBaseURL, aTmpURL, aSrcURL, aDstURL, aIniUrl;
+    
+    osl_getProcessWorkingDir(&aBaseURL.pData);
+    osl_getFileURLFromSystemPath( rtl::OUString::createFromAscii(argv[1]).pData,
+                                  &aTmpURL.pData );
+    osl_getAbsoluteFileURL(aBaseURL.pData,aTmpURL.pData,&aSrcURL.pData);
+
+    osl_getFileURLFromSystemPath( rtl::OUString::createFromAscii(argv[2]).pData,
+                                  &aTmpURL.pData );
+    osl_getAbsoluteFileURL(aBaseURL.pData,aTmpURL.pData,&aDstURL.pData);
+
+	osl_getFileURLFromSystemPath( rtl::OUString::createFromAscii(argv[3]).pData, 
+								&aTmpURL.pData );
+    osl_getAbsoluteFileURL(aBaseURL.pData,aTmpURL.pData,&aIniUrl.pData);
+
+    // bootstrap UNO
+    uno::Reference< lang::XMultiServiceFactory > xFactory;
+    uno::Reference< uno::XComponentContext > xCtx;
+    try
+    {
+        xCtx = ::cppu::defaultBootstrap_InitialComponentContext(aIniUrl);
+        xFactory = uno::Reference< lang::XMultiServiceFactory >(xCtx->getServiceManager(), 
+                                                                uno::UNO_QUERY);
+        if( xFactory.is() )
+            ::comphelper::setProcessServiceFactory( xFactory );
+    }
+    catch( uno::Exception& )
+    {
+    }
+
+    if( !xFactory.is() )
+    {
+        OSL_TRACE( "Could not bootstrap UNO, installation must be in disorder. Exiting." );
+        return 1;
+    }
+
+    osl::File aInputFile(aSrcURL);
+    if( osl::FileBase::E_None!=aInputFile.open(OpenFlag_Read) )
+    {
+        OSL_TRACE( "Cannot open input file" );
+        return 1;
+    }
+
+    svgi::SVGReader aReader(xCtx, 
+                            uno::Reference<io::XInputStream>(
+                                new comphelper::OSLInputStreamWrapper(aInputFile)),
+                            svgi::createSerializer(new OutputWrap(aDstURL)));
+    return aReader.parseAndConvert() ? 0 : 1;
+}
diff --git a/filter/source/svgimport/test/test.svg b/filter/source/svgimport/test/test.svg
new file mode 100644
index 0000000..5098f9f
--- /dev/null
+++ filter/source/svgimport/test/test.svg
@@ -0,0 +1,3279 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://web.resource.org/cc/"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:xlink="http://www.w3.org/1999/xlink"
+   xmlns:sodipodi="http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   id="svg2"
+   sodipodi:version="0.32"
+   inkscape:version="0.42.2"
+   width="841.88976pt"
+   height="1190.5512pt"
+   sodipodi:docname="test.svg"
+   sodipodi:docbase="">
+  <metadata
+     id="metadata1089">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <defs
+     id="defs1087" />
+  <sodipodi:namedview
+     inkscape:cy="434.53580"
+     inkscape:cx="526.18109"
+     inkscape:zoom="0.52009524"
+     inkscape:window-height="946"
+     inkscape:window-width="1168"
+     inkscape:pageshadow="2"
+     inkscape:pageopacity="0.0"
+     borderopacity="1.0"
+     bordercolor="#666666"
+     pagecolor="#ffffff"
+     id="base"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:current-layer="svg2" />
+  <polyline
+     points="1.0,0.0 73.75,0.0 73.75,3.0 751.0,3.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline4"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="149.01515"
+     y="-91.481773"
+     id="text6"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,15.0 326.5,15.0 326.5,12.0 751.0,12.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline8"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,24.0 570.0,24.0 570.0,27.0 751.0,27.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline10"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="716.49561"
+     y="-64.036827"
+     id="text12"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <line
+	   x1="1.0" y1="39.0" x2="751.0" y2="39.0  "
+     style="fill:none;stroke:#00ff00;stroke-opacity:1.0000000"
+     id="polyline14"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,51.0 70.5,51.0 70.5,48.0 751.0,48.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline16"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,60.0 368.75,60.0 368.75,63.0 751.0,63.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline18"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="486.35922"
+     y="-22.869547"
+     id="text20"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,75.0 623.25,75.0 623.25,72.0 751.0,72.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline22"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,84.0 751.0,84.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline24"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,96.0 125.25,96.0 125.25,99.0 751.0,99.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline26"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="207.90726"
+     y="18.298038"
+     id="text28"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,111.0 417.25,111.0 417.25,108.0 751.0,108.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline30"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,120.0 670.5,120.0 670.5,123.0 751.0,123.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline32"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="831.42188"
+     y="45.74276"
+     id="text34"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,135.0 751.0,135.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline36"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,147.0 170.5,147.0 170.5,144.0 751.0,144.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline38"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,156.0 444.25,156.0 444.25,159.0 751.0,159.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline40"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="572.69629"
+     y="86.90976"
+     id="text42"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,171.0 719.5,171.0 719.5,168.0 751.0,168.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline44"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,180.0 751.0,180.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline46"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,192.0 227.75,192.0 227.75,195.0 751.0,195.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline48"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="325.1199"
+     y="128.07805"
+     id="text50"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,207.0 477.0,207.0 477.0,204.0 751.0,204.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline52"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,216.0 720.25,216.0 720.25,219.0 751.0,219.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline54"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="888.31195"
+     y="155.52252"
+     id="text56"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,231.0 751.0,231.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline58"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,243.0 220.75,243.0 220.75,240.0 751.0,240.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline60"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,252.0 470.25,252.0 470.25,255.0 751.0,255.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline62"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="602.42889"
+     y="196.68929"
+     id="text64"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,267.0 724.25,267.0 724.25,264.0 751.0,264.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline66"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,276.0 751.0,276.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline68"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,288.0 273.25,288.0 273.25,291.0 751.0,291.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline70"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="377.15009"
+     y="237.85622"
+     id="text72"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,303.0 519.25,303.0 519.25,300.0 751.0,300.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline74"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,312.0 751.0,312.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline76"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,324.0 20.5,324.0 20.5,327.0 751.0,327.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline78"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="88.121635"
+     y="279.02344"
+     id="text80"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,339.0 270.25,339.0 270.25,336.0 751.0,336.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline82"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,348.0 520.0,348.0 520.0,351.0 751.0,351.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline84"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="659.31958"
+     y="306.47119"
+     id="text86"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,363.0 751.0,363.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline88"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,375.0 50.5,375.0 50.5,372.0 751.0,372.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline90"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,384.0 321.75,384.0 321.75,387.0 751.0,387.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline92"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="432.61285"
+     y="347.63803"
+     id="text94"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,399.0 595.5,399.0 595.5,396.0 751.0,396.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline96"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,408.0 751.0,408.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline98"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,420.0 123.25,420.0 123.25,423.0 751.0,423.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline100"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="205.62021"
+     y="388.80475"
+     id="text102"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,435.0 392.5,435.0 392.5,432.0 751.0,432.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline104"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,444.0 669.25,444.0 669.25,447.0 751.0,447.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline106"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="829.99243"
+     y="416.24924"
+     id="text108"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,459.0 751.0,459.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline110"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,471.0 206.5,471.0 206.5,468.0 751.0,468.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline112"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,480.0 487.0,480.0 487.0,483.0 751.0,483.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline114"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="621.58344"
+     y="457.41595"
+     id="text116"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,495.0 751.0,495.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline118"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,507.0 55.25,507.0 55.25,504.0 751.0,504.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline120"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,516.0 319.5,516.0 319.5,519.0 751.0,519.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline122"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="430.03986"
+     y="498.58264"
+     id="text124"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,531.0 702.5,531.0 702.5,528.0 751.0,528.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline126"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,540.0 751.0,540.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline128"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,552.0 220.0,552.0 220.0,555.0 751.0,555.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline130"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="316.25748"
+     y="539.74939"
+     id="text132"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,567.0 555.0,567.0 555.0,564.0 751.0,564.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline134"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,576.0 751.0,576.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline136"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,588.0 75.5,588.0 75.5,591.0 751.0,591.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline138"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="151.01631"
+     y="580.91614"
+     id="text140"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,603.0 319.75,603.0 319.75,600.0 751.0,600.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline142"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,612.0 619.5,612.0 619.5,615.0 751.0,615.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline144"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="773.09985"
+     y="608.3606"
+     id="text146"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,627.0 751.0,627.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline148"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,639.0 123.75,639.0 123.75,636.0 751.0,636.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline150"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,648.0 369.25,648.0 369.25,651.0 751.0,651.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline152"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="486.931"
+     y="649.52832"
+     id="text154"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,663.0 619.0,663.0 619.0,660.0 751.0,660.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline156"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,672.0 751.0,672.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline158"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,684.0 124.75,684.0 124.75,687.0 751.0,687.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline160"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="207.33551"
+     y="690.70197"
+     id="text162"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,699.0 420.0,699.0 420.0,696.0 751.0,696.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline164"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,708.0 169.5,708.0 169.5,711.0 751.0,711.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline166"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="258.50845"
+     y="718.14679"
+     id="text168"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,723.0 127.25,723.0 127.25,720.0 667.25,720.0 667.25,723.0 751.0,723.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline170"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="827.70538"
+     y="731.86902"
+     id="text172"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,735.0 470.75,735.0 470.75,732.0 751.0,732.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline174"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,744.0 234.25,744.0 234.25,747.0 238.5,747.0 238.5,744.0 751.0,744.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline176"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="332.5528"
+     y="755.883"
+     id="text178"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">fe</text>
+  <polyline
+     points="1.0,756.0 751.0,756.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline180"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,768.0 751.0,768.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline182"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,780.0 751.0,780.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline184"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,792.0 751.0,792.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline186"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,804.0 618.5,804.0 618.5,807.0 629.0,807.0 629.0,804.0 631.0,804.0 631.0,807.0 637.25,807.0 637.25,804.0 690.0,804.0 690.0,807.0 696.25,807.0 696.25,804.0 698.5,804.0 698.5,807.0 709.0,807.0 709.0,804.0 751.0,804.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline188"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="771.9563"
+     y="824.49414"
+     id="text190"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="853.72052"
+     y="824.49414"
+     id="text192"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">4</text>
+  <polyline
+     points="1.0,816.0 751.0,816.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline194"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,828.0 751.0,828.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline196"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,840.0 751.0,840.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline198"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,852.0 751.0,852.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline200"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,864.0 751.0,864.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline202"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,876.0 751.0,876.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline204"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,888.0 751.0,888.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline206"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,900.0 751.0,900.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline208"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,912.0 751.0,912.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline210"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,924.0 751.0,924.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline212"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,936.0 751.0,936.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline214"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,948.0 751.0,948.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline216"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,960.0 751.0,960.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline218"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,972.0 751.0,972.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline220"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,984.0 751.0,984.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline222"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,996.0 751.0,996.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline224"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1008.0 751.0,1008.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline226"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1020.0 751.0,1020.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline228"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1032.0 751.0,1032.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline230"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1044.0 751.0,1044.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline232"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1056.0 751.0,1056.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline234"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1068.0 751.0,1068.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline236"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1080.0 751.0,1080.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline238"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1092.0 751.0,1092.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline240"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1104.0 751.0,1104.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline242"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1116.0 751.0,1116.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline244"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1128.0 138.25,1128.0 138.25,1131.0 148.75,1131.0 148.75,1128.0 151.0,1128.0 151.0,1131.0 157.25,1131.0 157.25,1128.0 210.0,1128.0 210.0,1131.0 216.25,1131.0 216.25,1128.0 218.5,1128.0 218.5,1131.0 228.75,1131.0 228.75,1128.0 751.0,1128.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline246"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="222.77316"
+     y="1194.9972"
+     id="text248"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="304.82205"
+     y="1194.9972"
+     id="text250"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">4</text>
+  <polyline
+     points="1.0,1140.0 751.0,1140.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline252"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1152.0 751.0,1152.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline254"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1164.0 709.25,1164.0 709.25,1167.0 719.5,1167.0 719.5,1164.0 721.75,1164.0 721.75,1167.0 728.0,1167.0 728.0,1164.0 751.0,1164.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline256"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="875.73328"
+     y="1236.1638"
+     id="text258"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <polyline
+     points="1.0,1176.0 30.75,1176.0 30.75,1179.0 35.0,1179.0 35.0,1176.0 37.0,1176.0 37.0,1179.0 49.5,1179.0 49.5,1176.0 102.5,1176.0 102.5,1179.0 119.25,1179.0 119.25,1176.0 174.0,1176.0 174.0,1179.0 192.75,1179.0 192.75,1176.0 245.5,1176.0 245.5,1179.0 258.25,1179.0 258.25,1176.0 260.25,1176.0 260.25,1179.0 264.5,1179.0 264.5,1176.0 317.25,1176.0 317.25,1179.0 319.25,1179.0 319.25,1176.0 325.75,1176.0 325.75,1179.0 336.0,1179.0 336.0,1176.0 388.75,1176.0 388.75,1179.0 393.0,1179.0 393.0,1176.0 395.25,1176.0 395.25,1179.0 397.25,1179.0 397.25,1176.0 399.25,1176.0 399.25,1179.0 407.75,1179.0 407.75,1176.0 460.5,1176.0 460.5,1179.0 464.75,1179.0 464.75,1176.0 466.75,1176.0 466.75,1179.0 468.75,1179.0 468.75,1176.0 471.0,1176.0 471.0,1179.0 479.25,1179.0 479.25,1176.0 532.0,1176.0 532.0,1179.0 534.25,1179.0 534.25,1176.0 536.25,1176.0 536.25,1179.0 538.25,1179.0 538.25,1176.0 540.5,1176.0 540.5,1179.0 551.0,1179.0 551.0,1176.0 603.75,1176.0 603.75,1179.0 605.75,1179.0 605.75,1176.0 608.0,1176.0 608.0,1179.0 618.25,1179.0 618.25,1176.0 620.5,1176.0 620.5,1179.0 622.5,1179.0 622.5,1176.0 675.25,1176.0 675.25,1179.0 679.5,1179.0 679.5,1176.0 681.5,1176.0 681.5,1179.0 690.0,1179.0 690.0,1176.0 692.0,1176.0 692.0,1179.0 694.0,1179.0 694.0,1176.0 747.0,1176.0 747.0,1179.0 749.0,1179.0 749.0,1176.0 751.0,1176.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline260"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="99.843254"
+     y="1249.8861"
+     id="text262"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="181.89142"
+     y="1249.8861"
+     id="text264"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">80</text>
+  <text
+     font-size="6"
+     x="263.65436"
+     y="1249.8861"
+     id="text266"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="345.41742"
+     y="1249.8861"
+     id="text268"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">20</text>
+  <text
+     font-size="6"
+     x="427.46692"
+     y="1249.8861"
+     id="text270"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">7</text>
+  <text
+     font-size="6"
+     x="509.22968"
+     y="1249.8861"
+     id="text272"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a</text>
+  <text
+     font-size="6"
+     x="591.27911"
+     y="1249.8861"
+     id="text274"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a</text>
+  <text
+     font-size="6"
+     x="673.04181"
+     y="1249.8861"
+     id="text276"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">5</text>
+  <text
+     font-size="6"
+     x="755.08942"
+     y="1249.8861"
+     id="text278"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">41</text>
+  <text
+     font-size="6"
+     x="836.85358"
+     y="1249.8861"
+     id="text280"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">42</text>
+  <polyline
+     points="1.0,1188.0 1.25,1188.0 1.25,1191.0 5.25,1191.0 5.25,1188.0 9.5,1188.0 9.5,1191.0 15.75,1191.0 15.75,1188.0 68.5,1188.0 68.5,1191.0 74.75,1191.0 74.75,1188.0 77.0,1188.0 77.0,1191.0 87.25,1191.0 87.25,1188.0 140.25,1188.0 140.25,1191.0 142.25,1191.0 142.25,1188.0 146.5,1188.0 146.5,1191.0 148.5,1191.0 148.5,1188.0 152.75,1188.0 152.75,1191.0 157.0,1191.0 157.0,1188.0 211.75,1188.0 211.75,1191.0 213.75,1191.0 213.75,1188.0 216.0,1188.0 216.0,1191.0 218.0,1191.0 218.0,1188.0 220.25,1188.0 220.25,1191.0 226.5,1191.0 226.5,1188.0 228.5,1188.0 228.5,1191.0 230.5,1191.0 230.5,1188.0 283.5,1188.0 283.5,1191.0 294.0,1191.0 294.0,1188.0 296.0,1188.0 296.0,1191.0 302.25,1191.0 302.25,1188.0 355.0,1188.0 355.0,1191.0 365.5,1191.0 365.5,1188.0 367.5,1188.0 367.5,1191.0 373.75,1191.0 373.75,1188.0 426.75,1188.0 426.75,1191.0 428.75,1191.0 428.75,1188.0 435.0,1188.0 435.0,1191.0 439.25,1191.0 439.25,1188.0 443.5,1188.0 443.5,1191.0 445.5,1191.0 445.5,1188.0 498.25,1188.0 498.25,1191.0 502.5,1191.0 502.5,1188.0 504.5,1188.0 504.5,1191.0 508.75,1191.0 508.75,1188.0 510.75,1188.0 510.75,1191.0 517.0,1191.0 517.0,1188.0 569.75,1188.0 569.75,1191.0 572.0,1191.0 572.0,1188.0 578.25,1188.0 578.25,1191.0 580.25,1191.0 580.25,1188.0 641.5,1188.0 641.5,1191.0 652.0,1191.0 652.0,1188.0 654.0,1188.0 654.0,1191.0 660.25,1191.0 660.25,1188.0 713.0,1188.0 713.0,1191.0 723.5,1191.0 723.5,1188.0 725.75,1188.0 725.75,1191.0 732.0,1191.0 732.0,1188.0 751.0,1188.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline282"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="61.248474"
+     y="1263.6084"
+     id="text284"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">19</text>
+  <text
+     font-size="6"
+     x="143.01163"
+     y="1263.6084"
+     id="text286"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">4</text>
+  <text
+     font-size="6"
+     x="225.06021"
+     y="1263.6084"
+     id="text288"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">9b</text>
+  <text
+     font-size="6"
+     x="306.82324"
+     y="1263.6084"
+     id="text290"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">45</text>
+  <text
+     font-size="6"
+     x="388.87119"
+     y="1263.6084"
+     id="text292"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="470.63556"
+     y="1263.6084"
+     id="text294"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="552.68396"
+     y="1263.6084"
+     id="text296"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">67</text>
+  <text
+     font-size="6"
+     x="634.44806"
+     y="1263.6084"
+     id="text298"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="716.20972"
+     y="1263.6084"
+     id="text300"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">f7</text>
+  <text
+     font-size="6"
+     x="798.25977"
+     y="1263.6084"
+     id="text302"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="880.02142"
+     y="1263.6084"
+     id="text304"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <polyline
+     points="1.0,1200.0 34.75,1200.0 34.75,1203.0 36.75,1203.0 36.75,1200.0 43.0,1200.0 43.0,1203.0 45.25,1203.0 45.25,1200.0 47.25,1200.0 47.25,1203.0 51.5,1203.0 51.5,1200.0 106.25,1200.0 106.25,1203.0 108.5,1203.0 108.5,1200.0 110.5,1200.0 110.5,1203.0 125.25,1203.0 125.25,1200.0 178.0,1200.0 178.0,1203.0 182.0,1203.0 182.0,1200.0 184.25,1200.0 184.25,1203.0 190.5,1203.0 190.5,1200.0 192.5,1200.0 192.5,1203.0 196.75,1203.0 196.75,1200.0 249.5,1200.0 249.5,1203.0 262.0,1203.0 262.0,1200.0 266.25,1200.0 266.25,1203.0 268.25,1203.0 268.25,1200.0 321.25,1200.0 321.25,1203.0 329.5,1203.0 329.5,1200.0 331.75,1200.0 331.75,1203.0 340.0,1203.0 340.0,1200.0 392.75,1200.0 392.75,1203.0 394.75,1203.0 394.75,1200.0 405.25,1200.0 405.25,1203.0 407.5,1203.0 407.5,1200.0 409.5,1200.0 409.5,1203.0 411.5,1203.0 411.5,1200.0 464.25,1200.0 464.25,1203.0 468.5,1203.0 468.5,1200.0 474.75,1200.0 474.75,1203.0 481.0,1203.0 481.0,1200.0 536.0,1200.0 536.0,1203.0 546.5,1203.0 546.5,1200.0 548.75,1200.0 548.75,1203.0 555.0,1203.0 555.0,1200.0 607.75,1200.0 607.75,1203.0 609.75,1203.0 609.75,1200.0 614.0,1200.0 614.0,1203.0 626.5,1203.0 626.5,1200.0 751.0,1200.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline306"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="104.41736"
+     y="1277.3306"
+     id="text308"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">97</text>
+  <text
+     font-size="6"
+     x="186.17963"
+     y="1277.3306"
+     id="text310"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="268.22852"
+     y="1277.3306"
+     id="text312"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">22</text>
+  <text
+     font-size="6"
+     x="349.99149"
+     y="1277.3306"
+     id="text314"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">60</text>
+  <text
+     font-size="6"
+     x="432.04105"
+     y="1277.3306"
+     id="text316"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">8</text>
+  <text
+     font-size="6"
+     x="513.80371"
+     y="1277.3306"
+     id="text318"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">5f</text>
+  <text
+     font-size="6"
+     x="595.5675"
+     y="1277.3306"
+     id="text320"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">8e</text>
+  <text
+     font-size="6"
+     x="677.61591"
+     y="1277.3306"
+     id="text322"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="759.66345"
+     y="1277.3306"
+     id="text324"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1212.0 751.0,1212.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline326"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1224.0 751.0,1224.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline328"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1236.0 508.5,1236.0 508.5,1239.0 519.0,1239.0 519.0,1236.0 521.0,1236.0 521.0,1239.0 527.25,1239.0 527.25,1236.0 580.0,1236.0 580.0,1239.0 586.5,1239.0 586.5,1236.0 588.5,1236.0 588.5,1239.0 599.0,1239.0 599.0,1236.0 751.0,1236.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline330"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="646.16913"
+     y="1318.4973"
+     id="text332"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="727.93079"
+     y="1318.4973"
+     id="text334"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">4</text>
+  <polyline
+     points="1.0,1248.0 751.0,1248.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline336"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1260.0 751.0,1260.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline338"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1272.0 751.0,1272.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline340"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1284.0 751.0,1284.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline342"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1296.0 65.0,1296.0 65.0,1299.0 75.5,1299.0 75.5,1296.0 77.75,1296.0 77.75,1299.0 84.0,1299.0 84.0,1296.0 136.75,1296.0 136.75,1299.0 140.75,1299.0 140.75,1296.0 143.0,1296.0 143.0,1299.0 155.5,1299.0 155.5,1296.0 208.25,1296.0 208.25,1299.0 210.25,1299.0 210.25,1296.0 212.5,1296.0 212.5,1299.0 214.5,1299.0 214.5,1296.0 216.75,1296.0 216.75,1299.0 225.0,1299.0 225.0,1296.0 279.75,1296.0 279.75,1299.0 286.25,1299.0 286.25,1296.0 288.25,1296.0 288.25,1299.0 298.75,1299.0 298.75,1296.0 351.5,1296.0 351.5,1299.0 355.75,1299.0 355.75,1296.0 364.0,1296.0 364.0,1299.0 370.25,1299.0 370.25,1296.0 423.25,1296.0 423.25,1299.0 427.25,1299.0 427.25,1296.0 429.5,1296.0 429.5,1299.0 433.5,1299.0 433.5,1296.0 435.75,1296.0 435.75,1299.0 442.0,1299.0 442.0,1296.0 494.75,1296.0 494.75,1299.0 505.25,1299.0 505.25,1296.0 507.5,1296.0 507.5,1299.0 513.75,1299.0 513.75,1296.0 566.5,1296.0 566.5,1299.0 568.5,1299.0 568.5,1296.0 572.75,1296.0 572.75,1299.0 585.25,1299.0 585.25,1296.0 751.0,1296.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline344"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="139.00929"
+     y="1387.1085"
+     id="text346"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="221.05786"
+     y="1387.1085"
+     id="text348"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="302.82086"
+     y="1387.1085"
+     id="text350"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">85</text>
+  <text
+     font-size="6"
+     x="384.58298"
+     y="1387.1085"
+     id="text352"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">4</text>
+  <text
+     font-size="6"
+     x="466.63312"
+     y="1387.1085"
+     id="text354"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1e</text>
+  <text
+     font-size="6"
+     x="548.68158"
+     y="1387.1085"
+     id="text356"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="630.44574"
+     y="1387.1085"
+     id="text358"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="712.49329"
+     y="1387.1085"
+     id="text360"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1308.0 751.0,1308.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline362"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1320.0 751.0,1320.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline364"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1332.0 468.0,1332.0 468.0,1335.0 478.5,1335.0 478.5,1332.0 480.5,1332.0 480.5,1335.0 486.75,1335.0 486.75,1332.0 539.5,1332.0 539.5,1335.0 545.75,1335.0 545.75,1332.0 548.0,1332.0 548.0,1335.0 558.5,1335.0 558.5,1332.0 751.0,1332.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline366"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="599.85583"
+     y="1428.2753"
+     id="text368"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="681.61823"
+     y="1428.2753"
+     id="text370"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">4</text>
+  <polyline
+     points="1.0,1344.0 751.0,1344.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline372"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1356.0 751.0,1356.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline374"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1368.0 751.0,1368.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline376"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1380.0 724.25,1380.0 724.25,1383.0 734.75,1383.0 734.75,1380.0 736.75,1380.0 736.75,1383.0 743.0,1383.0 743.0,1380.0 751.0,1380.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline378"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="892.88605"
+     y="1483.1758"
+     id="text380"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <polyline
+     points="1.0,1392.0 45.75,1392.0 45.75,1395.0 50.0,1395.0 50.0,1392.0 52.25,1392.0 52.25,1395.0 64.75,1395.0 64.75,1392.0 117.5,1392.0 117.5,1395.0 128.0,1395.0 128.0,1392.0 130.0,1392.0 130.0,1395.0 134.25,1395.0 134.25,1392.0 189.0,1392.0 189.0,1395.0 207.75,1395.0 207.75,1392.0 260.75,1392.0 260.75,1395.0 269.0,1395.0 269.0,1392.0 275.25,1392.0 275.25,1395.0 277.5,1395.0 277.5,1392.0 332.25,1392.0 332.25,1395.0 334.5,1395.0 334.5,1392.0 338.5,1392.0 338.5,1395.0 344.75,1395.0 344.75,1392.0 347.0,1392.0 347.0,1395.0 351.25,1395.0 351.25,1392.0 404.0,1392.0 404.0,1395.0 406.0,1395.0 406.0,1392.0 410.25,1392.0 410.25,1395.0 412.25,1395.0 412.25,1392.0 414.5,1392.0 414.5,1395.0 422.75,1395.0 422.75,1392.0 475.5,1392.0 475.5,1395.0 486.0,1395.0 486.0,1392.0 490.25,1392.0 490.25,1395.0 494.25,1395.0 494.25,1392.0 547.0,1392.0 547.0,1395.0 549.25,1395.0 549.25,1392.0 551.25,1392.0 551.25,1395.0 566.0,1395.0 566.0,1392.0 618.75,1392.0 618.75,1395.0 635.5,1395.0 635.5,1392.0 690.25,1392.0 690.25,1395.0 692.5,1395.0 692.5,1392.0 696.75,1392.0 696.75,1395.0 709.25,1395.0 709.25,1392.0 751.0,1392.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline382"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="116.99624"
+     y="1496.8981"
+     id="text384"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="199.04489"
+     y="1496.8981"
+     id="text386"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">90</text>
+  <text
+     font-size="6"
+     x="280.80759"
+     y="1496.8981"
+     id="text388"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="362.85608"
+     y="1496.8981"
+     id="text390"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b8</text>
+  <text
+     font-size="6"
+     x="444.62003"
+     y="1496.8981"
+     id="text392"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">23</text>
+  <text
+     font-size="6"
+     x="526.6684"
+     y="1496.8981"
+     id="text394"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b</text>
+  <text
+     font-size="6"
+     x="608.43256"
+     y="1496.8981"
+     id="text396"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="690.19464"
+     y="1496.8981"
+     id="text398"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="772.24219"
+     y="1496.8981"
+     id="text400"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">80</text>
+  <text
+     font-size="6"
+     x="854.00635"
+     y="1496.8981"
+     id="text402"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1404.0 12.0,1404.0 12.0,1407.0 26.75,1407.0 26.75,1404.0 83.5,1404.0 83.5,1407.0 92.0,1407.0 92.0,1404.0 94.0,1404.0 94.0,1407.0 100.25,1407.0 100.25,1404.0 155.25,1404.0 155.25,1407.0 159.25,1407.0 159.25,1404.0 161.5,1404.0 161.5,1407.0 165.75,1407.0 165.75,1404.0 167.75,1404.0 167.75,1407.0 174.0,1407.0 174.0,1404.0 226.75,1404.0 226.75,1407.0 229.0,1407.0 229.0,1404.0 233.0,1404.0 233.0,1407.0 245.5,1407.0 245.5,1404.0 298.5,1404.0 298.5,1407.0 308.75,1407.0 308.75,1404.0 313.0,1404.0 313.0,1407.0 317.25,1407.0 317.25,1404.0 370.0,1404.0 370.0,1407.0 372.0,1407.0 372.0,1404.0 374.25,1404.0 374.25,1407.0 378.5,1407.0 378.5,1404.0 380.5,1404.0 380.5,1407.0 388.75,1407.0 388.75,1404.0 441.75,1404.0 441.75,1407.0 454.25,1407.0 454.25,1404.0 456.25,1404.0 456.25,1407.0 458.5,1407.0 458.5,1404.0 513.25,1404.0 513.25,1407.0 515.25,1407.0 515.25,1404.0 519.5,1404.0 519.5,1407.0 532.0,1407.0 532.0,1404.0 584.75,1404.0 584.75,1407.0 599.5,1407.0 599.5,1404.0 656.5,1404.0 656.5,1407.0 664.75,1407.0 664.75,1404.0 667.0,1404.0 667.0,1407.0 673.25,1407.0 673.25,1404.0 728.0,1404.0 728.0,1407.0 732.25,1407.0 732.25,1404.0 734.5,1404.0 734.5,1407.0 738.5,1407.0 738.5,1404.0 740.75,1404.0 740.75,1407.0 747.0,1407.0 747.0,1404.0 751.0,1404.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline404"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="78.401543"
+     y="1510.6202"
+     id="text406"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="160.16451"
+     y="1510.6202"
+     id="text408"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">88</text>
+  <text
+     font-size="6"
+     x="242.21317"
+     y="1510.6202"
+     id="text410"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="323.97635"
+     y="1510.6202"
+     id="text412"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="406.02554"
+     y="1510.6202"
+     id="text414"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="487.78864"
+     y="1510.6202"
+     id="text416"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">9</text>
+  <text
+     font-size="6"
+     x="569.8374"
+     y="1510.6202"
+     id="text418"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <text
+     font-size="6"
+     x="651.60083"
+     y="1510.6202"
+     id="text420"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="733.36249"
+     y="1510.6202"
+     id="text422"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="815.4126"
+     y="1510.6202"
+     id="text424"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">88</text>
+  <text
+     font-size="6"
+     x="897.17426"
+     y="1510.6202"
+     id="text426"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <polyline
+     points="1.0,1416.0 49.75,1416.0 49.75,1419.0 51.75,1419.0 51.75,1416.0 56.0,1416.0 56.0,1419.0 58.0,1419.0 58.0,1416.0 60.25,1416.0 60.25,1419.0 68.5,1419.0 68.5,1416.0 121.25,1416.0 121.25,1419.0 131.75,1419.0 131.75,1416.0 136.0,1416.0 136.0,1419.0 140.25,1419.0 140.25,1416.0 193.0,1416.0 193.0,1419.0 195.0,1419.0 195.0,1416.0 197.25,1416.0 197.25,1419.0 211.75,1419.0 211.75,1416.0 264.5,1416.0 264.5,1419.0 277.0,1419.0 277.0,1416.0 279.25,1416.0 279.25,1419.0 281.25,1419.0 281.25,1416.0 336.25,1416.0 336.25,1419.0 338.25,1419.0 338.25,1416.0 342.5,1416.0 342.5,1419.0 355.0,1419.0 355.0,1416.0 407.75,1416.0 407.75,1419.0 422.5,1419.0 422.5,1416.0 479.25,1416.0 479.25,1419.0 496.0,1419.0 496.0,1416.0 551.0,1416.0 551.0,1419.0 555.25,1419.0 555.25,1416.0 557.25,1416.0 557.25,1419.0 561.5,1419.0 561.5,1416.0 563.5,1416.0 563.5,1419.0 569.75,1419.0 569.75,1416.0 622.5,1416.0 622.5,1419.0 624.75,1419.0 624.75,1416.0 629.0,1416.0 629.0,1419.0 641.5,1419.0 641.5,1416.0 694.25,1416.0 694.25,1419.0 704.75,1419.0 704.75,1416.0 709.0,1416.0 709.0,1419.0 713.0,1419.0 713.0,1416.0 751.0,1416.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline428"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="121.57037"
+     y="1524.3425"
+     id="text430"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b</text>
+  <text
+     font-size="6"
+     x="203.33313"
+     y="1524.3425"
+     id="text432"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="285.38177"
+     y="1524.3425"
+     id="text434"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="367.14429"
+     y="1524.3425"
+     id="text436"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <text
+     font-size="6"
+     x="449.19415"
+     y="1524.3425"
+     id="text438"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="530.95673"
+     y="1524.3425"
+     id="text440"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="612.72089"
+     y="1524.3425"
+     id="text442"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">80</text>
+  <text
+     font-size="6"
+     x="694.76874"
+     y="1524.3425"
+     id="text444"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="776.5304"
+     y="1524.3425"
+     id="text446"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="858.58044"
+     y="1524.3425"
+     id="text448"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <polyline
+     points="1.0,1428.0 15.75,1428.0 15.75,1431.0 18.0,1431.0 18.0,1428.0 20.0,1428.0 20.0,1431.0 34.75,1431.0 34.75,1428.0 87.5,1428.0 87.5,1431.0 100.0,1431.0 100.0,1428.0 102.0,1428.0 102.0,1431.0 104.25,1431.0 104.25,1428.0 159.0,1428.0 159.0,1431.0 161.0,1431.0 161.0,1428.0 165.25,1428.0 165.25,1431.0 167.5,1431.0 167.5,1428.0 169.5,1428.0 169.5,1431.0 177.75,1431.0 177.75,1428.0 230.75,1428.0 230.75,1431.0 245.25,1431.0 245.25,1428.0 302.25,1428.0 302.25,1431.0 310.75,1431.0 310.75,1428.0 312.75,1428.0 312.75,1431.0 319.0,1431.0 319.0,1428.0 374.0,1428.0 374.0,1431.0 378.0,1431.0 378.0,1428.0 380.25,1428.0 380.25,1431.0 384.25,1431.0 384.25,1428.0 386.5,1428.0 386.5,1431.0 392.75,1431.0 392.75,1428.0 445.5,1428.0 445.5,1431.0 447.5,1431.0 447.5,1428.0 451.75,1428.0 451.75,1431.0 464.25,1431.0 464.25,1428.0 517.0,1428.0 517.0,1431.0 527.5,1431.0 527.5,1428.0 531.75,1428.0 531.75,1431.0 536.0,1431.0 536.0,1428.0 588.75,1428.0 588.75,1431.0 590.75,1431.0 590.75,1428.0 593.0,1428.0 593.0,1431.0 597.0,1431.0 597.0,1428.0 599.25,1428.0 599.25,1431.0 607.5,1431.0 607.5,1428.0 660.25,1428.0 660.25,1431.0 673.0,1431.0 673.0,1428.0 675.0,1428.0 675.0,1431.0 677.0,1431.0 677.0,1428.0 732.0,1428.0 732.0,1431.0 734.0,1431.0 734.0,1428.0 738.25,1428.0 738.25,1431.0 750.75,1431.0 750.75,1428.0 751.0,1428.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline450"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="82.689827"
+     y="1538.0647"
+     id="text452"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="164.73862"
+     y="1538.0647"
+     id="text454"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <text
+     font-size="6"
+     x="246.5014"
+     y="1538.0647"
+     id="text456"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b</text>
+  <text
+     font-size="6"
+     x="328.55048"
+     y="1538.0647"
+     id="text458"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="410.31381"
+     y="1538.0647"
+     id="text460"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">88</text>
+  <text
+     font-size="6"
+     x="492.36273"
+     y="1538.0647"
+     id="text462"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="574.12579"
+     y="1538.0647"
+     id="text464"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="655.88904"
+     y="1538.0647"
+     id="text466"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="737.93658"
+     y="1538.0647"
+     id="text468"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">9</text>
+  <text
+     font-size="6"
+     x="819.70074"
+     y="1538.0647"
+     id="text470"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <polyline
+     points="1.0,1440.0 53.5,1440.0 53.5,1443.0 68.25,1443.0 68.25,1440.0 125.25,1440.0 125.25,1443.0 133.5,1443.0 133.5,1440.0 135.75,1440.0 135.75,1443.0 142.0,1443.0 142.0,1440.0 196.75,1440.0 196.75,1443.0 201.0,1443.0 201.0,1440.0 203.0,1440.0 203.0,1443.0 207.25,1443.0 207.25,1440.0 209.25,1440.0 209.25,1443.0 215.5,1443.0 215.5,1440.0 268.25,1440.0 268.25,1443.0 270.5,1443.0 270.5,1440.0 274.75,1440.0 274.75,1443.0 276.75,1443.0 276.75,1440.0 278.75,1440.0 278.75,1443.0 287.25,1443.0 287.25,1440.0 340.0,1440.0 340.0,1443.0 350.5,1443.0 350.5,1440.0 354.75,1440.0 354.75,1443.0 358.75,1443.0 358.75,1440.0 411.75,1440.0 411.75,1443.0 413.75,1443.0 413.75,1440.0 415.75,1440.0 415.75,1443.0 430.5,1443.0 430.5,1440.0 483.25,1440.0 483.25,1443.0 495.75,1443.0 495.75,1440.0 498.0,1440.0 498.0,1443.0 500.0,1443.0 500.0,1440.0 554.75,1440.0 554.75,1443.0 557.0,1443.0 557.0,1440.0 561.25,1440.0 561.25,1443.0 573.75,1443.0 573.75,1440.0 626.5,1440.0 626.5,1443.0 641.0,1443.0 641.0,1440.0 698.0,1440.0 698.0,1443.0 714.75,1443.0 714.75,1440.0 751.0,1440.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline472"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="44.095314"
+     y="1551.787"
+     id="text474"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="125.85864"
+     y="1551.787"
+     id="text476"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="207.90726"
+     y="1551.787"
+     id="text478"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">88</text>
+  <text
+     font-size="6"
+     x="289.67007"
+     y="1551.787"
+     id="text480"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="371.4325"
+     y="1551.787"
+     id="text482"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b</text>
+  <text
+     font-size="6"
+     x="453.48242"
+     y="1551.787"
+     id="text484"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="535.53094"
+     y="1551.787"
+     id="text486"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="617.2951"
+     y="1551.787"
+     id="text488"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <text
+     font-size="6"
+     x="699.05688"
+     y="1551.787"
+     id="text490"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="781.10699"
+     y="1551.787"
+     id="text492"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="862.86865"
+     y="1551.787"
+     id="text494"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">80</text>
+  <polyline
+     points="1.0,1452.0 19.75,1452.0 19.75,1455.0 24.0,1455.0 24.0,1452.0 26.0,1452.0 26.0,1455.0 30.25,1455.0 30.25,1452.0 32.25,1452.0 32.25,1455.0 38.5,1455.0 38.5,1452.0 91.25,1452.0 91.25,1455.0 93.5,1455.0 93.5,1452.0 97.5,1452.0 97.5,1455.0 110.25,1455.0 110.25,1452.0 163.0,1452.0 163.0,1455.0 169.25,1455.0 169.25,1452.0 171.25,1452.0 171.25,1455.0 173.5,1455.0 173.5,1452.0 175.5,1452.0 175.5,1455.0 177.5,1455.0 177.5,1452.0 234.5,1452.0 234.5,1455.0 238.75,1455.0 238.75,1452.0 240.75,1452.0 240.75,1455.0 245.0,1455.0 245.0,1452.0 247.0,1452.0 247.0,1455.0 253.25,1455.0 253.25,1452.0 306.25,1452.0 306.25,1455.0 316.75,1455.0 316.75,1452.0 318.75,1452.0 318.75,1455.0 325.0,1455.0 325.0,1452.0 377.75,1452.0 377.75,1455.0 380.0,1455.0 380.0,1452.0 384.0,1452.0 384.0,1455.0 396.5,1455.0 396.5,1452.0 751.0,1452.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline496"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="87.264"
+     y="1565.5092"
+     id="text498"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="169.02682"
+     y="1565.5092"
+     id="text500"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="251.07553"
+     y="1565.5092"
+     id="text502"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">d4</text>
+  <text
+     font-size="6"
+     x="332.83868"
+     y="1565.5092"
+     id="text504"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="414.888"
+     y="1565.5092"
+     id="text506"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="496.65097"
+     y="1565.5092"
+     id="text508"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1464.0 751.0,1464.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline510"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1476.0 751.0,1476.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline512"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1488.0 279.25,1488.0 279.25,1491.0 289.75,1491.0 289.75,1488.0 292.0,1488.0 292.0,1491.0 298.25,1491.0 298.25,1488.0 351.0,1488.0 351.0,1491.0 357.25,1491.0 357.25,1488.0 359.25,1488.0 359.25,1491.0 369.75,1491.0 369.75,1488.0 751.0,1488.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline514"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="384.0112"
+     y="1606.6759"
+     id="text516"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="466.06137"
+     y="1606.6759"
+     id="text518"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">4</text>
+  <polyline
+     points="1.0,1500.0 751.0,1500.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline520"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1512.0 751.0,1512.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline522"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1524.0 751.0,1524.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline524"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1536.0 751.0,1536.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline526"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1548.0 81.5,1548.0 81.5,1551.0 92.0,1551.0 92.0,1548.0 94.0,1548.0 94.0,1551.0 100.25,1551.0 100.25,1548.0 153.0,1548.0 153.0,1551.0 157.25,1551.0 157.25,1548.0 159.25,1548.0 159.25,1551.0 172.0,1551.0 172.0,1548.0 224.75,1548.0 224.75,1551.0 226.75,1551.0 226.75,1548.0 229.0,1548.0 229.0,1551.0 231.0,1551.0 231.0,1548.0 233.0,1548.0 233.0,1551.0 235.0,1551.0 235.0,1548.0 237.25,1548.0 237.25,1551.0 241.5,1551.0 241.5,1548.0 296.25,1548.0 296.25,1551.0 315.0,1551.0 315.0,1548.0 368.0,1548.0 368.0,1551.0 376.25,1551.0 376.25,1548.0 382.5,1548.0 382.5,1551.0 384.5,1551.0 384.5,1548.0 439.5,1548.0 439.5,1551.0 443.75,1551.0 443.75,1548.0 448.0,1548.0 448.0,1551.0 458.25,1551.0 458.25,1548.0 511.25,1548.0 511.25,1551.0 513.25,1551.0 513.25,1548.0 517.5,1548.0 517.5,1551.0 530.0,1551.0 530.0,1548.0 582.75,1548.0 582.75,1551.0 589.0,1551.0 589.0,1548.0 591.25,1548.0 591.25,1551.0 593.25,1551.0 593.25,1548.0 597.5,1548.0 597.5,1551.0 601.5,1551.0 601.5,1548.0 654.25,1548.0 654.25,1551.0 656.5,1551.0 656.5,1548.0 658.5,1548.0 658.5,1551.0 673.25,1551.0 673.25,1548.0 726.0,1548.0 726.0,1551.0 738.5,1551.0 738.5,1548.0 740.5,1548.0 740.5,1551.0 742.75,1551.0 742.75,1548.0 751.0,1548.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline528"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="157.87746"
+     y="1675.2871"
+     id="text530"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="239.64023"
+     y="1675.2871"
+     id="text532"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="321.68927"
+     y="1675.2871"
+     id="text534"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">95</text>
+  <text
+     font-size="6"
+     x="403.45258"
+     y="1675.2871"
+     id="text536"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="485.50153"
+     y="1675.2871"
+     id="text538"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b8</text>
+  <text
+     font-size="6"
+     x="567.2644"
+     y="1675.2871"
+     id="text540"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">6</text>
+  <text
+     font-size="6"
+     x="649.31378"
+     y="1675.2871"
+     id="text542"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="731.0755"
+     y="1675.2871"
+     id="text544"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">34</text>
+  <text
+     font-size="6"
+     x="812.83966"
+     y="1675.2871"
+     id="text546"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="894.88721"
+     y="1675.2871"
+     id="text548"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <polyline
+     points="1.0,1560.0 47.5,1560.0 47.5,1563.0 49.75,1563.0 49.75,1560.0 53.75,1560.0 53.75,1563.0 66.5,1563.0 66.5,1560.0 119.25,1560.0 119.25,1563.0 133.75,1563.0 133.75,1560.0 190.75,1560.0 190.75,1563.0 199.25,1563.0 199.25,1560.0 201.25,1560.0 201.25,1563.0 207.5,1563.0 207.5,1560.0 262.5,1560.0 262.5,1563.0 266.5,1563.0 266.5,1560.0 268.75,1560.0 268.75,1563.0 273.0,1563.0 273.0,1560.0 275.0,1560.0 275.0,1563.0 281.25,1563.0 281.25,1560.0 334.0,1560.0 334.0,1563.0 336.0,1563.0 336.0,1560.0 340.25,1560.0 340.25,1563.0 352.75,1563.0 352.75,1560.0 405.75,1560.0 405.75,1563.0 416.0,1563.0 416.0,1560.0 420.25,1560.0 420.25,1563.0 424.5,1563.0 424.5,1560.0 477.25,1560.0 477.25,1563.0 479.25,1563.0 479.25,1560.0 481.5,1560.0 481.5,1563.0 496.0,1563.0 496.0,1560.0 549.0,1560.0 549.0,1563.0 561.5,1563.0 561.5,1560.0 563.5,1560.0 563.5,1563.0 565.5,1563.0 565.5,1560.0 620.5,1560.0 620.5,1563.0 622.5,1563.0 622.5,1560.0 626.75,1560.0 626.75,1563.0 639.25,1563.0 639.25,1560.0 692.0,1560.0 692.0,1563.0 706.75,1563.0 706.75,1560.0 751.0,1560.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline550"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="118.99743"
+     y="1689.0094"
+     id="text552"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="201.04608"
+     y="1689.0094"
+     id="text554"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="282.80878"
+     y="1689.0094"
+     id="text556"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">88</text>
+  <text
+     font-size="6"
+     x="364.85724"
+     y="1689.0094"
+     id="text558"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="446.62122"
+     y="1689.0094"
+     id="text560"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="528.66968"
+     y="1689.0094"
+     id="text562"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="610.43378"
+     y="1689.0094"
+     id="text564"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="692.48169"
+     y="1689.0094"
+     id="text566"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <text
+     font-size="6"
+     x="774.24335"
+     y="1689.0094"
+     id="text568"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="856.00751"
+     y="1689.0094"
+     id="text570"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <polyline
+     points="1.0,1572.0 13.75,1572.0 13.75,1575.0 22.0,1575.0 22.0,1572.0 24.25,1572.0 24.25,1575.0 30.5,1575.0 30.5,1572.0 85.25,1572.0 85.25,1575.0 89.5,1575.0 89.5,1572.0 91.5,1572.0 91.5,1575.0 95.75,1575.0 95.75,1572.0 98.0,1572.0 98.0,1575.0 104.25,1575.0 104.25,1572.0 157.0,1572.0 157.0,1575.0 159.0,1575.0 159.0,1572.0 163.25,1572.0 163.25,1575.0 175.75,1575.0 175.75,1572.0 228.5,1572.0 228.5,1575.0 239.0,1575.0 239.0,1572.0 243.25,1572.0 243.25,1575.0 247.5,1575.0 247.5,1572.0 300.25,1572.0 300.25,1575.0 302.25,1575.0 302.25,1572.0 304.25,1572.0 304.25,1575.0 319.0,1575.0 319.0,1572.0 371.75,1572.0 371.75,1575.0 384.25,1575.0 384.25,1572.0 386.5,1572.0 386.5,1575.0 388.5,1575.0 388.5,1572.0 443.5,1572.0 443.5,1575.0 445.5,1575.0 445.5,1572.0 453.75,1572.0 453.75,1575.0 456.0,1575.0 456.0,1572.0 458.0,1572.0 458.0,1575.0 460.0,1575.0 460.0,1572.0 515.0,1572.0 515.0,1575.0 519.25,1575.0 519.25,1572.0 521.25,1572.0 521.25,1575.0 525.5,1575.0 525.5,1572.0 527.5,1572.0 527.5,1575.0 533.75,1575.0 533.75,1572.0 586.75,1572.0 586.75,1575.0 597.25,1575.0 597.25,1572.0 599.25,1572.0 599.25,1575.0 605.5,1575.0 605.5,1572.0 658.25,1572.0 658.25,1575.0 660.5,1575.0 660.5,1572.0 664.75,1572.0 664.75,1575.0 677.25,1575.0 677.25,1572.0 751.0,1572.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline572"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="80.402733"
+     y="1702.7316"
+     id="text574"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">88</text>
+  <text
+     font-size="6"
+     x="162.16568"
+     y="1702.7316"
+     id="text576"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="244.21436"
+     y="1702.7316"
+     id="text578"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="325.97754"
+     y="1702.7316"
+     id="text580"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="408.02673"
+     y="1702.7316"
+     id="text582"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="489.78983"
+     y="1702.7316"
+     id="text584"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <text
+     font-size="6"
+     x="571.83862"
+     y="1702.7316"
+     id="text586"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">af</text>
+  <text
+     font-size="6"
+     x="653.60199"
+     y="1702.7316"
+     id="text588"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="735.64954"
+     y="1702.7316"
+     id="text590"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="817.41376"
+     y="1702.7316"
+     id="text592"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1584.0 751.0,1584.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline594"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1596.0 751.0,1596.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline596"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1608.0 559.75,1608.0 559.75,1611.0 570.25,1611.0 570.25,1608.0 572.5,1608.0 572.5,1611.0 578.75,1611.0 578.75,1608.0 631.5,1608.0 631.5,1611.0 637.75,1611.0 637.75,1608.0 639.75,1608.0 639.75,1611.0 650.25,1611.0 650.25,1608.0 751.0,1608.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline598"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="704.77454"
+     y="1743.8983"
+     id="text600"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="786.82458"
+     y="1743.8983"
+     id="text602"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">4</text>
+  <polyline
+     points="1.0,1620.0 751.0,1620.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline604"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1632.0 751.0,1632.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline606"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1644.0 751.0,1644.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline608"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1656.0 751.0,1656.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline610"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1668.0 194.0,1668.0 194.0,1671.0 204.5,1671.0 204.5,1668.0 206.5,1668.0 206.5,1671.0 212.75,1671.0 212.75,1668.0 265.5,1668.0 265.5,1671.0 269.75,1671.0 269.75,1668.0 271.75,1668.0 271.75,1671.0 284.5,1671.0 284.5,1668.0 337.25,1668.0 337.25,1671.0 347.75,1671.0 347.75,1668.0 349.75,1668.0 349.75,1671.0 354.0,1671.0 354.0,1668.0 408.75,1668.0 408.75,1671.0 427.5,1671.0 427.5,1668.0 480.25,1668.0 480.25,1671.0 488.75,1671.0 488.75,1668.0 495.0,1668.0 495.0,1671.0 497.0,1671.0 497.0,1668.0 552.0,1668.0 552.0,1671.0 556.25,1671.0 556.25,1668.0 560.5,1668.0 560.5,1671.0 570.75,1671.0 570.75,1668.0 623.5,1668.0 623.5,1671.0 625.75,1671.0 625.75,1668.0 630.0,1668.0 630.0,1671.0 642.5,1671.0 642.5,1668.0 695.25,1668.0 695.25,1671.0 701.5,1671.0 701.5,1668.0 703.5,1668.0 703.5,1671.0 705.75,1671.0 705.75,1668.0 710.0,1668.0 710.0,1671.0 714.0,1671.0 714.0,1668.0 751.0,1668.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline612"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="286.52533"
+     y="1812.5095"
+     id="text614"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="368.28781"
+     y="1812.5095"
+     id="text616"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="450.33771"
+     y="1812.5095"
+     id="text618"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">90</text>
+  <text
+     font-size="6"
+     x="532.10028"
+     y="1812.5095"
+     id="text620"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="613.86444"
+     y="1812.5095"
+     id="text622"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b8</text>
+  <text
+     font-size="6"
+     x="695.91223"
+     y="1812.5095"
+     id="text624"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">6</text>
+  <text
+     font-size="6"
+     x="777.67389"
+     y="1812.5095"
+     id="text626"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="859.724"
+     y="1812.5095"
+     id="text628"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">34</text>
+  <polyline
+     points="1.0,1680.0 16.75,1680.0 16.75,1683.0 19.0,1683.0 19.0,1680.0 21.0,1680.0 21.0,1683.0 35.75,1683.0 35.75,1680.0 88.5,1680.0 88.5,1683.0 101.0,1683.0 101.0,1680.0 103.0,1680.0 103.0,1683.0 105.25,1683.0 105.25,1680.0 160.0,1680.0 160.0,1683.0 162.25,1683.0 162.25,1680.0 166.25,1680.0 166.25,1683.0 178.75,1683.0 178.75,1680.0 231.75,1680.0 231.75,1683.0 246.25,1683.0 246.25,1680.0 303.25,1680.0 303.25,1683.0 311.75,1683.0 311.75,1680.0 313.75,1680.0 313.75,1683.0 320.0,1683.0 320.0,1680.0 375.0,1680.0 375.0,1683.0 379.0,1683.0 379.0,1680.0 381.25,1680.0 381.25,1683.0 385.25,1683.0 385.25,1680.0 387.5,1680.0 387.5,1683.0 393.75,1683.0 393.75,1680.0 446.5,1680.0 446.5,1683.0 448.5,1683.0 448.5,1680.0 452.75,1680.0 452.75,1683.0 465.25,1683.0 465.25,1680.0 518.0,1680.0 518.0,1683.0 528.5,1683.0 528.5,1680.0 532.75,1680.0 532.75,1683.0 537.0,1683.0 537.0,1680.0 589.75,1680.0 589.75,1683.0 591.75,1683.0 591.75,1680.0 594.0,1680.0 594.0,1683.0 608.5,1683.0 608.5,1680.0 661.25,1680.0 661.25,1683.0 674.0,1683.0 674.0,1680.0 676.0,1680.0 676.0,1683.0 678.0,1683.0 678.0,1680.0 733.0,1680.0 733.0,1683.0 735.0,1683.0 735.0,1680.0 739.25,1680.0 739.25,1683.0 751.0,1683.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline630"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="83.833366"
+     y="1826.2318"
+     id="text632"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="165.88214"
+     y="1826.2318"
+     id="text634"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <text
+     font-size="6"
+     x="247.64493"
+     y="1826.2318"
+     id="text636"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="329.694"
+     y="1826.2318"
+     id="text638"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="411.45737"
+     y="1826.2318"
+     id="text640"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">88</text>
+  <text
+     font-size="6"
+     x="493.50626"
+     y="1826.2318"
+     id="text642"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="575.26929"
+     y="1826.2318"
+     id="text644"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="657.03253"
+     y="1826.2318"
+     id="text646"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="739.08014"
+     y="1826.2318"
+     id="text648"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="820.8443"
+     y="1826.2318"
+     id="text650"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <polyline
+     points="1.0,1695.0 1.75,1695.0 1.75,1692.0 54.5,1692.0 54.5,1695.0 69.25,1695.0 69.25,1692.0 126.25,1692.0 126.25,1695.0 134.5,1695.0 134.5,1692.0 136.75,1692.0 136.75,1695.0 143.0,1695.0 143.0,1692.0 197.75,1692.0 197.75,1695.0 202.0,1695.0 202.0,1692.0 204.0,1692.0 204.0,1695.0 208.25,1695.0 208.25,1692.0 210.25,1692.0 210.25,1695.0 216.5,1695.0 216.5,1692.0 269.5,1692.0 269.5,1695.0 271.5,1695.0 271.5,1692.0 275.75,1692.0 275.75,1695.0 288.25,1695.0 288.25,1692.0 341.0,1692.0 341.0,1695.0 351.5,1695.0 351.5,1692.0 355.75,1692.0 355.75,1695.0 359.75,1695.0 359.75,1692.0 412.75,1692.0 412.75,1695.0 414.75,1695.0 414.75,1692.0 416.75,1692.0 416.75,1695.0 431.5,1695.0 431.5,1692.0 484.25,1692.0 484.25,1695.0 496.75,1695.0 496.75,1692.0 499.0,1692.0 499.0,1695.0 501.0,1695.0 501.0,1692.0 555.75,1692.0 555.75,1695.0 566.25,1695.0 566.25,1692.0 568.5,1692.0 568.5,1695.0 570.5,1695.0 570.5,1692.0 627.5,1692.0 627.5,1695.0 629.5,1695.0 629.5,1692.0 633.75,1692.0 633.75,1695.0 638.0,1695.0 638.0,1692.0 642.0,1692.0 642.0,1695.0 644.25,1695.0 644.25,1692.0 699.0,1692.0 699.0,1695.0 709.5,1695.0 709.5,1692.0 711.75,1692.0 711.75,1695.0 718.0,1695.0 718.0,1692.0 751.0,1692.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline652"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="45.238834"
+     y="1839.954"
+     id="text654"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="127.00217"
+     y="1839.954"
+     id="text656"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c0</text>
+  <text
+     font-size="6"
+     x="209.05078"
+     y="1839.954"
+     id="text658"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">88</text>
+  <text
+     font-size="6"
+     x="290.81363"
+     y="1839.954"
+     id="text660"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">12</text>
+  <text
+     font-size="6"
+     x="372.86188"
+     y="1839.954"
+     id="text662"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <text
+     font-size="6"
+     x="454.62595"
+     y="1839.954"
+     id="text664"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">30</text>
+  <text
+     font-size="6"
+     x="536.67438"
+     y="1839.954"
+     id="text666"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="618.43872"
+     y="1839.954"
+     id="text668"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">a0</text>
+  <text
+     font-size="6"
+     x="700.20044"
+     y="1839.954"
+     id="text670"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">d0</text>
+  <text
+     font-size="6"
+     x="782.25049"
+     y="1839.954"
+     id="text672"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b3</text>
+  <text
+     font-size="6"
+     x="864.01215"
+     y="1839.954"
+     id="text674"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <polyline
+     points="1.0,1704.0 20.75,1704.0 20.75,1707.0 22.75,1707.0 22.75,1704.0 27.0,1704.0 27.0,1707.0 39.5,1707.0 39.5,1704.0 636.5,1704.0  "
+     style="fill:none;stroke:#000000;stroke-opacity:1.0000000"
+     id="polyline676"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="88.407532"
+     y="1853.6763"
+     id="text678"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,6.0 751.0,6.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline680"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,18.0 751.0,18.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline682"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,30.0 751.0,30.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline684"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,42.0 751.0,42.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline686"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,54.0 751.0,54.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline688"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,66.0 751.0,66.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline690"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,78.0 751.0,78.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline692"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,90.0 751.0,90.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline694"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,102.0 751.0,102.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline696"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,114.0 751.0,114.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline698"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,126.0 751.0,126.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline700"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,138.0 751.0,138.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline702"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,150.0 751.0,150.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline704"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,162.0 751.0,162.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline706"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,174.0 751.0,174.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline708"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,186.0 751.0,186.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline710"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,198.0 751.0,198.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline712"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,210.0 751.0,210.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline714"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,222.0 751.0,222.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline716"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,234.0 751.0,234.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline718"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,246.0 751.0,246.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline720"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,258.0 751.0,258.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline722"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,270.0 751.0,270.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline724"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,282.0 751.0,282.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline726"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,294.0 751.0,294.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline728"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,306.0 751.0,306.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline730"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,318.0 751.0,318.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline732"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,330.0 751.0,330.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline734"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,342.0 751.0,342.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline736"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,354.0 751.0,354.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline738"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,366.0 751.0,366.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline740"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,378.0 751.0,378.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline742"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,390.0 751.0,390.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline744"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,402.0 751.0,402.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline746"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,414.0 751.0,414.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline748"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,426.0 751.0,426.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline750"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,438.0 751.0,438.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline752"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,450.0 751.0,450.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline754"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,462.0 751.0,462.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline756"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,474.0 751.0,474.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline758"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,486.0 751.0,486.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline760"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,498.0 751.0,498.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline762"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,510.0 751.0,510.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline764"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,522.0 751.0,522.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline766"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,534.0 751.0,534.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline768"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,546.0 751.0,546.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline770"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,558.0 751.0,558.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline772"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,570.0 751.0,570.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline774"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,582.0 751.0,582.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline776"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,594.0 751.0,594.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline778"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,606.0 751.0,606.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline780"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,618.0 751.0,618.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline782"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,630.0 751.0,630.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline784"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,642.0 751.0,642.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline786"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,654.0 751.0,654.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline788"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,666.0 751.0,666.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline790"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,678.0 751.0,678.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline792"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,690.0 751.0,690.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline794"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,702.0 97.25,702.0 97.25,705.0 751.0,705.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline796"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="175.88794"
+     y="711.28571"
+     id="text798"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <polyline
+     points="1.0,717.0 751.0,717.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline800"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,729.0 751.0,729.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline802"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,741.0 751.0,741.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline804"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,753.0 751.0,753.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline806"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,765.0 751.0,765.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline808"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,777.0 751.0,777.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline810"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,789.0 751.0,789.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline812"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,801.0 751.0,801.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline814"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,813.0 751.0,813.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline816"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,825.0 751.0,825.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline818"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,837.0 751.0,837.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline820"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,849.0 751.0,849.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline822"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,861.0 751.0,861.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline824"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,873.0 751.0,873.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline826"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,885.0 751.0,885.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline828"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,897.0 751.0,897.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline830"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,909.0 751.0,909.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline832"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,921.0 624.5,921.0 624.5,918.0 751.0,918.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline834"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,930.0 751.0,930.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline836"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,942.0 751.0,942.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline838"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,954.0 751.0,954.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline840"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,966.0 751.0,966.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline842"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,978.0 751.0,978.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline844"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,990.0 751.0,990.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline846"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1002.0 751.0,1002.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline848"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1014.0 751.0,1014.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline850"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1026.0 751.0,1026.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline852"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1038.0 751.0,1038.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline854"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1050.0 751.0,1050.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline856"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1062.0 751.0,1062.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline858"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1074.0 751.0,1074.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline860"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1086.0 751.0,1086.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline862"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1098.0 751.0,1098.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline864"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1110.0 751.0,1110.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline866"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1122.0 751.0,1122.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline868"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1134.0 751.0,1134.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline870"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1146.0 751.0,1146.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline872"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1158.0 751.0,1158.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline874"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1170.0 353.0,1170.0 353.0,1173.0 363.5,1173.0 363.5,1170.0 365.5,1170.0 365.5,1173.0 371.75,1173.0 371.75,1170.0 375.75,1170.0 375.75,1173.0 380.0,1173.0 380.0,1170.0 382.0,1170.0 382.0,1173.0 394.5,1173.0 394.5,1170.0 398.75,1170.0 398.75,1173.0 400.75,1173.0 400.75,1170.0 403.0,1170.0 403.0,1173.0 405.0,1173.0 405.0,1170.0 407.0,1170.0 407.0,1173.0 415.5,1173.0 415.5,1170.0 421.5,1170.0 421.5,1173.0 423.75,1173.0 423.75,1170.0 427.75,1170.0 427.75,1173.0 438.25,1173.0 438.25,1170.0 444.5,1170.0 444.5,1173.0 446.5,1173.0 446.5,1170.0 448.75,1170.0 448.75,1173.0 450.75,1173.0 450.75,1170.0 457.0,1170.0 457.0,1173.0 463.25,1173.0 463.25,1170.0 467.25,1170.0 467.25,1173.0 477.75,1173.0 477.75,1170.0 479.75,1170.0 479.75,1173.0 486.0,1173.0 486.0,1170.0 490.25,1170.0 490.25,1173.0 492.25,1173.0 492.25,1170.0 496.5,1170.0 496.5,1173.0 509.0,1173.0 509.0,1170.0 751.0,1170.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline876"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="468.34842"
+     y="1243.025"
+     id="text878"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="494.36392"
+     y="1243.025"
+     id="text880"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="520.66486"
+     y="1243.025"
+     id="text882"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">85</text>
+  <text
+     font-size="6"
+     x="546.68042"
+     y="1243.025"
+     id="text884"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">83</text>
+  <text
+     font-size="6"
+     x="572.98218"
+     y="1243.025"
+     id="text886"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1d</text>
+  <text
+     font-size="6"
+     x="598.99817"
+     y="1243.025"
+     id="text888"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="625.29987"
+     y="1243.025"
+     id="text890"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1182.0 751.0,1182.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline892"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1194.0 751.0,1194.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline894"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1206.0 751.0,1206.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline896"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1218.0 751.0,1218.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline898"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1230.0 751.0,1230.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline900"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1242.0 751.0,1242.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline902"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1254.0 751.0,1254.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline904"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1266.0 751.0,1266.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline906"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1278.0 751.0,1278.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline908"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1290.0 353.25,1290.0 353.25,1293.0 363.75,1293.0 363.75,1290.0 365.75,1290.0 365.75,1293.0 372.0,1293.0 372.0,1290.0 376.25,1290.0 376.25,1293.0 380.25,1293.0 380.25,1290.0 382.5,1290.0 382.5,1293.0 395.0,1293.0 395.0,1290.0 399.0,1290.0 399.0,1293.0 405.25,1293.0 405.25,1290.0 407.25,1290.0 407.25,1293.0 415.75,1293.0 415.75,1290.0 422.0,1290.0 422.0,1293.0 440.75,1293.0 440.75,1290.0 444.75,1290.0 444.75,1293.0 457.25,1293.0 457.25,1290.0 459.25,1290.0 459.25,1293.0 463.5,1293.0 463.5,1290.0 467.75,1290.0 467.75,1293.0 480.25,1293.0 480.25,1290.0 482.25,1290.0 482.25,1293.0 486.5,1293.0 486.5,1290.0 490.5,1290.0 490.5,1293.0 501.0,1293.0 501.0,1290.0 503.0,1290.0 503.0,1293.0 505.0,1293.0 505.0,1290.0 507.25,1290.0 507.25,1293.0 509.25,1293.0 509.25,1290.0 513.5,1290.0 513.5,1293.0 519.75,1293.0 519.75,1290.0 523.75,1290.0 523.75,1293.0 526.0,1293.0 526.0,1290.0 530.0,1290.0 530.0,1293.0 532.25,1293.0 532.25,1290.0 536.25,1290.0 536.25,1293.0 553.0,1293.0 553.0,1290.0 559.25,1290.0 559.25,1293.0 565.5,1293.0 565.5,1290.0 567.5,1290.0 567.5,1293.0 571.75,1293.0 571.75,1290.0 573.75,1290.0 573.75,1293.0 578.0,1293.0 578.0,1290.0 582.0,1290.0 582.0,1293.0 600.75,1293.0 600.75,1290.0 605.0,1290.0 605.0,1293.0 611.25,1293.0 611.25,1290.0 615.25,1290.0 615.25,1293.0 617.5,1293.0 617.5,1290.0 621.5,1290.0 621.5,1293.0 623.75,1293.0 623.75,1290.0 627.75,1290.0 627.75,1293.0 646.5,1293.0 646.5,1290.0 650.75,1290.0 650.75,1293.0 659.0,1293.0 659.0,1290.0 661.0,1290.0 661.0,1293.0 665.25,1293.0 665.25,1290.0 673.5,1290.0 673.5,1293.0 684.0,1293.0 684.0,1290.0 686.0,1290.0 686.0,1293.0 690.25,1293.0 690.25,1290.0 696.5,1290.0 696.5,1293.0 706.75,1293.0 706.75,1290.0 709.0,1290.0 709.0,1293.0 715.25,1293.0 715.25,1290.0 719.25,1290.0 719.25,1293.0 721.5,1293.0 721.5,1290.0 725.5,1290.0 725.5,1293.0 738.0,1293.0 738.0,1290.0 751.0,1290.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline910"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="468.63431"
+     y="1380.2474"
+     id="text912"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="494.93567"
+     y="1380.2474"
+     id="text914"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="520.95074"
+     y="1380.2474"
+     id="text916"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">84</text>
+  <text
+     font-size="6"
+     x="547.25214"
+     y="1380.2474"
+     id="text918"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="573.26807"
+     y="1380.2474"
+     id="text920"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">20</text>
+  <text
+     font-size="6"
+     x="599.56995"
+     y="1380.2474"
+     id="text922"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">20</text>
+  <text
+     font-size="6"
+     x="625.58575"
+     y="1380.2474"
+     id="text924"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">50</text>
+  <text
+     font-size="6"
+     x="651.88672"
+     y="1380.2474"
+     id="text926"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">6c</text>
+  <text
+     font-size="6"
+     x="677.90179"
+     y="1380.2474"
+     id="text928"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">80</text>
+  <text
+     font-size="6"
+     x="704.20276"
+     y="1380.2474"
+     id="text930"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">24</text>
+  <text
+     font-size="6"
+     x="730.21783"
+     y="1380.2474"
+     id="text932"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="756.5188"
+     y="1380.2474"
+     id="text934"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">6c</text>
+  <text
+     font-size="6"
+     x="782.53638"
+     y="1380.2474"
+     id="text936"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="808.83734"
+     y="1380.2474"
+     id="text938"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">c8</text>
+  <text
+     font-size="6"
+     x="834.85242"
+     y="1380.2474"
+     id="text940"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">90</text>
+  <text
+     font-size="6"
+     x="861.15338"
+     y="1380.2474"
+     id="text942"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="887.16846"
+     y="1380.2474"
+     id="text944"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1302.0 751.0,1302.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline946"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1314.0 751.0,1314.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline948"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1326.0 751.0,1326.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline950"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1338.0 751.0,1338.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline952"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1350.0 751.0,1350.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline954"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1362.0 751.0,1362.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline956"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1374.0 751.0,1374.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline958"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1386.0 291.5,1386.0 291.5,1389.0 302.0,1389.0 302.0,1386.0 304.0,1386.0 304.0,1389.0 310.25,1389.0 310.25,1386.0 314.5,1386.0 314.5,1389.0 318.5,1389.0 318.5,1386.0 320.75,1386.0 320.75,1389.0 333.25,1389.0 333.25,1386.0 337.25,1386.0 337.25,1389.0 343.5,1389.0 343.5,1386.0 345.5,1386.0 345.5,1389.0 354.0,1389.0 354.0,1386.0 360.25,1386.0 360.25,1389.0 379.0,1389.0 379.0,1386.0 383.0,1386.0 383.0,1389.0 389.25,1389.0 389.25,1386.0 393.5,1386.0 393.5,1389.0 395.5,1389.0 395.5,1386.0 397.5,1386.0 397.5,1389.0 401.75,1389.0 401.75,1386.0 406.0,1386.0 406.0,1389.0 408.0,1389.0 408.0,1386.0 410.0,1386.0 410.0,1389.0 424.75,1389.0 424.75,1386.0 428.75,1386.0 428.75,1389.0 431.0,1389.0 431.0,1386.0 433.0,1386.0 433.0,1389.0 435.0,1389.0 435.0,1386.0 437.25,1386.0 437.25,1389.0 443.5,1389.0 443.5,1386.0 445.5,1386.0 445.5,1389.0 447.5,1389.0 447.5,1386.0 451.75,1386.0 451.75,1389.0 460.0,1389.0 460.0,1386.0 466.25,1386.0 466.25,1389.0 468.25,1389.0 468.25,1386.0 474.5,1386.0 474.5,1389.0 476.75,1389.0 476.75,1386.0 478.75,1386.0 478.75,1389.0 480.75,1389.0 480.75,1386.0 485.0,1386.0 485.0,1389.0 493.25,1389.0 493.25,1386.0 497.5,1386.0 497.5,1389.0 507.75,1389.0 507.75,1386.0 510.0,1386.0 510.0,1389.0 516.25,1389.0 516.25,1386.0 520.25,1386.0 520.25,1389.0 522.5,1389.0 522.5,1386.0 526.5,1386.0 526.5,1389.0 539.0,1389.0 539.0,1386.0 751.0,1386.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline960"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="398.02075"
+     y="1490.0369"
+     id="text962"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="424.32217"
+     y="1490.0369"
+     id="text964"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="450.33771"
+     y="1490.0369"
+     id="text966"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">84</text>
+  <text
+     font-size="6"
+     x="476.63913"
+     y="1490.0369"
+     id="text968"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="502.65442"
+     y="1490.0369"
+     id="text970"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2c</text>
+  <text
+     font-size="6"
+     x="528.95557"
+     y="1490.0369"
+     id="text972"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="554.97113"
+     y="1490.0369"
+     id="text974"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">45</text>
+  <text
+     font-size="6"
+     x="581.27301"
+     y="1490.0369"
+     id="text976"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">b8</text>
+  <text
+     font-size="6"
+     x="607.289"
+     y="1490.0369"
+     id="text978"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">d</text>
+  <text
+     font-size="6"
+     x="633.59039"
+     y="1490.0369"
+     id="text980"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="659.60547"
+     y="1490.0369"
+     id="text982"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1398.0 751.0,1398.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline984"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1410.0 751.0,1410.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline986"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1422.0 751.0,1422.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline988"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1434.0 751.0,1434.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline990"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1446.0 751.0,1446.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline992"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1458.0 751.0,1458.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline994"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1470.0 751.0,1470.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline996"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1482.0 751.0,1482.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline998"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1494.0 751.0,1494.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1000"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1506.0 751.0,1506.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1002"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1518.0 751.0,1518.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1004"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1530.0 751.0,1530.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1006"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1542.0 454.5,1542.0 454.5,1545.0 465.0,1545.0 465.0,1542.0 467.0,1542.0 467.0,1545.0 473.25,1545.0 473.25,1542.0 477.5,1542.0 477.5,1545.0 481.75,1545.0 481.75,1542.0 483.75,1542.0 483.75,1545.0 496.25,1545.0 496.25,1542.0 500.25,1542.0 500.25,1545.0 502.5,1545.0 502.5,1542.0 504.5,1542.0 504.5,1545.0 517.0,1545.0 517.0,1542.0 523.25,1542.0 523.25,1545.0 542.0,1545.0 542.0,1542.0 546.0,1542.0 546.0,1545.0 552.25,1545.0 552.25,1542.0 556.5,1542.0 556.5,1545.0 558.5,1545.0 558.5,1542.0 560.75,1542.0 560.75,1545.0 564.75,1545.0 564.75,1542.0 569.0,1542.0 569.0,1545.0 571.0,1545.0 571.0,1542.0 573.25,1542.0 573.25,1545.0 587.75,1545.0 587.75,1542.0 591.75,1542.0 591.75,1545.0 594.0,1545.0 594.0,1542.0 598.0,1542.0 598.0,1545.0 606.5,1545.0 606.5,1542.0 608.5,1542.0 608.5,1545.0 610.5,1545.0 610.5,1542.0 614.75,1542.0 614.75,1545.0 619.0,1545.0 619.0,1542.0 621.0,1542.0 621.0,1545.0 633.5,1545.0 633.5,1542.0 637.5,1542.0 637.5,1545.0 641.75,1545.0 641.75,1542.0 643.75,1542.0 643.75,1545.0 654.25,1545.0 654.25,1542.0 660.5,1542.0 660.5,1545.0 664.75,1545.0 664.75,1542.0 666.75,1542.0 666.75,1545.0 668.75,1545.0 668.75,1542.0 673.0,1542.0 673.0,1545.0 677.25,1545.0 677.25,1542.0 683.5,1542.0 683.5,1545.0 693.75,1545.0 693.75,1542.0 695.75,1542.0 695.75,1545.0 702.0,1545.0 702.0,1542.0 706.25,1542.0 706.25,1545.0 708.25,1545.0 708.25,1542.0 712.5,1542.0 712.5,1545.0 725.0,1545.0 725.0,1542.0 751.0,1542.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1008"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="584.41772"
+     y="1668.426"
+     id="text1010"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="610.71967"
+     y="1668.426"
+     id="text1012"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="636.73505"
+     y="1668.426"
+     id="text1014"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">81</text>
+  <text
+     font-size="6"
+     x="663.03601"
+     y="1668.426"
+     id="text1016"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="689.05109"
+     y="1668.426"
+     id="text1018"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2c</text>
+  <text
+     font-size="6"
+     x="715.35205"
+     y="1668.426"
+     id="text1020"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="741.36713"
+     y="1668.426"
+     id="text1022"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">43</text>
+  <text
+     font-size="6"
+     x="767.66809"
+     y="1668.426"
+     id="text1024"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="793.68567"
+     y="1668.426"
+     id="text1026"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">82</text>
+  <text
+     font-size="6"
+     x="819.98663"
+     y="1668.426"
+     id="text1028"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">9a</text>
+  <text
+     font-size="6"
+     x="846.2876"
+     y="1668.426"
+     id="text1030"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="872.30267"
+     y="1668.426"
+     id="text1032"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1554.0 751.0,1554.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1034"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1566.0 751.0,1566.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1036"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1578.0 751.0,1578.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1038"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1590.0 751.0,1590.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1040"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1602.0 751.0,1602.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1042"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1614.0 751.0,1614.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1044"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1626.0 751.0,1626.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1046"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1638.0 751.0,1638.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1048"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1650.0 751.0,1650.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1050"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1662.0 567.25,1662.0 567.25,1665.0 577.5,1665.0 577.5,1662.0 579.75,1662.0 579.75,1665.0 586.0,1665.0 586.0,1662.0 590.0,1662.0 590.0,1665.0 594.25,1665.0 594.25,1662.0 596.25,1662.0 596.25,1665.0 608.75,1665.0 608.75,1662.0 613.0,1662.0 613.0,1665.0 619.25,1665.0 619.25,1662.0 621.25,1662.0 621.25,1665.0 629.5,1665.0 629.5,1662.0 635.75,1662.0 635.75,1665.0 654.5,1665.0 654.5,1662.0 658.75,1662.0 658.75,1665.0 665.0,1665.0 665.0,1662.0 669.25,1662.0 669.25,1665.0 671.25,1665.0 671.25,1662.0 673.25,1662.0 673.25,1665.0 677.5,1665.0 677.5,1662.0 681.5,1662.0 681.5,1665.0 683.75,1665.0 683.75,1662.0 685.75,1662.0 685.75,1665.0 700.25,1665.0 700.25,1662.0 704.5,1662.0 704.5,1665.0 706.5,1665.0 706.5,1662.0 710.75,1662.0 710.75,1665.0 719.0,1665.0 719.0,1662.0 721.25,1662.0 721.25,1665.0 723.25,1665.0 723.25,1662.0 727.25,1662.0 727.25,1665.0 731.5,1665.0 731.5,1662.0 735.75,1662.0 735.75,1665.0 746.0,1665.0 746.0,1662.0 750.25,1662.0 750.25,1665.0 751.0,1665.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1052"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="713.35089"
+     y="1805.6484"
+     id="text1054"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="739.36597"
+     y="1805.6484"
+     id="text1056"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2</text>
+  <text
+     font-size="6"
+     x="765.66693"
+     y="1805.6484"
+     id="text1058"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">84</text>
+  <text
+     font-size="6"
+     x="791.68451"
+     y="1805.6484"
+     id="text1060"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">0</text>
+  <text
+     font-size="6"
+     x="817.98547"
+     y="1805.6484"
+     id="text1062"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">2c</text>
+  <text
+     font-size="6"
+     x="844.00055"
+     y="1805.6484"
+     id="text1064"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1</text>
+  <text
+     font-size="6"
+     x="870.30151"
+     y="1805.6484"
+     id="text1066"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">43</text>
+  <text
+     font-size="6"
+     x="896.31659"
+     y="1805.6484"
+     id="text1068"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">6</text>
+  <polyline
+     points="1.0,1677.0 4.5,1677.0 4.5,1674.0 6.5,1674.0 6.5,1677.0 8.5,1677.0 8.5,1674.0 12.75,1674.0 12.75,1677.0 19.0,1677.0 19.0,1674.0 23.25,1674.0 23.25,1677.0 29.25,1677.0 29.25,1674.0 31.5,1674.0 31.5,1677.0 39.75,1677.0 39.75,1674.0 46.0,1674.0 46.0,1677.0 56.5,1677.0 56.5,1674.0 58.5,1674.0 58.5,1677.0 64.75,1677.0 64.75,1674.0 69.0,1674.0 69.0,1677.0 71.0,1677.0 71.0,1674.0 75.0,1674.0 75.0,1677.0 87.5,1677.0 87.5,1674.0 751.0,1674.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1070"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <text
+     font-size="6"
+     x="64.964958"
+     y="1819.3706"
+     id="text1072"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">1a</text>
+  <text
+     font-size="6"
+     x="91.266388"
+     y="1819.3706"
+     id="text1074"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">84</text>
+  <text
+     font-size="6"
+     x="117.28213"
+     y="1819.3706"
+     id="text1076"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">10</text>
+  <text
+     font-size="6"
+     x="143.58339"
+     y="1819.3706"
+     id="text1078"
+     transform="scale(1.143520,0.874493)"
+     style="font-size:6.8612494px">3</text>
+  <polyline
+     points="1.0,1686.0 751.0,1686.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1080"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1698.0 751.0,1698.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1082"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <polyline
+     points="1.0,1710.0 636.5,1710.0  "
+     style="fill:none;stroke:#900000;stroke-opacity:1.0000000"
+     id="polyline1084"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <path
+     sodipodi:type="arc"
+     style="fill:#2ae719;fill-opacity:0.23137255;stroke:#27e022;stroke-width:0.50000000;stroke-linecap:square;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-dasharray:none;stroke-opacity:1.0000000"
+     id="path2387"
+     sodipodi:cx="97.333336"
+     sodipodi:cy="703.02887"
+     sodipodi:rx="12.000000"
+     sodipodi:ry="11.333333"
+     d="M 109.33334 703.02887 A 12.000000 11.333333 0 1 1  85.333336,703.02887 A 12.000000 11.333333 0 1 1  109.33334 703.02887 z"
+     transform="matrix(1.307638,0.000000,0.000000,1.000000,45.84620,-82.00000)" />
+  <use
+     x="0.0000000"
+     y="0.0000000"
+     xlink:href="#path2387"
+     id="use3115"
+     transform="translate(689.5610,214.6667)"
+     width="744.09448"
+     height="1052.3622" />
+</svg>
diff --git a/filter/source/svgimport/tokenmap.cxx b/filter/source/svgimport/tokenmap.cxx
new file mode 100644
index 0000000..d9fb57a
--- /dev/null
+++ filter/source/svgimport/tokenmap.cxx
@@ -0,0 +1,62 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *      Parts copyright 2005 by Sun Microsystems, Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "tokenmap.hxx"
+#include <string.h>
+
+namespace svgi 
+{
+
+#include "tokens.cxx"
+
+sal_Int32 getTokenId( const char* sIdent, sal_Int32 nLen )
+{
+	const struct xmltoken* t = Perfect_Hash::in_word_set( sIdent, nLen );
+	if( t )
+		return t->nToken;
+	else
+		return XML_TOKEN_INVALID;
+}
+
+sal_Int32 getTokenId( const rtl::OUString& sIdent )
+{
+	rtl::OString aUTF8( sIdent.getStr(), 
+                        sIdent.getLength(), 
+                        RTL_TEXTENCODING_UTF8 );
+    return getTokenId( aUTF8.getStr(), aUTF8.getLength() );
+}
+
+const char* getTokenName( sal_Int32 nTokenId )
+{
+	if( nTokenId >= XML_TOKEN_COUNT )
+		return NULL;
+
+    const xmltoken* pCurr=wordlist;
+    const xmltoken* pEnd=wordlist+sizeof(wordlist)/sizeof(*wordlist);
+    while( pCurr != pEnd )
+    {
+        if(pCurr->nToken == nTokenId)
+            return pCurr->name;
+        ++pCurr;
+    }
+
+    return NULL;
+}
+
+} // namespace svgi
diff --git a/filter/source/svgimport/tokenmap.hxx b/filter/source/svgimport/tokenmap.hxx
new file mode 100644
index 0000000..c77def6
--- /dev/null
+++ filter/source/svgimport/tokenmap.hxx
@@ -0,0 +1,32 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Fridrich Strba  <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_TOKENMAP_HXX
+#define INCLUDED_TOKENMAP_HXX
+
+#include "tokens.hxx"
+
+#include <rtl/string.hxx>
+#include <rtl/ustring.hxx>
+
+namespace svgi
+{
+    sal_Int32   getTokenId( const char* sIdent, sal_Int32 nLen );
+    sal_Int32   getTokenId( const rtl::OUString& sIdent );
+    const char* getTokenName( sal_Int32 nTokenId );
+
+} // namespace svgi
+
+#endif
diff --git a/filter/source/svgimport/tokens.txt b/filter/source/svgimport/tokens.txt
new file mode 100644
index 0000000..72b3870
--- /dev/null
+++ filter/source/svgimport/tokens.txt
@@ -0,0 +1,246 @@
+#######################################
+#
+# elements (SVG Tiny 1.2)
+#
+#######################################
+a
+animate
+animateColor
+animateMotion
+animateTransform
+animation
+audio
+circle
+defs
+desc
+discard
+ellipse
+font
+font-face
+font-face-src
+font-face-uri
+foreignObject
+g
+glyph
+handler
+hkern
+image
+line
+linearGradient
+listener
+metadata
+missing-glyph
+mpath
+path
+polygon
+polyline
+prefetch
+radialGradient
+rect
+script
+set
+solidColor
+stop
+svg
+switch
+tbreak
+text
+textArea
+title
+tspan
+use
+video
+#######################################
+#
+# properties (SVG Tiny 1.2)
+#
+#######################################
+audio-level
+color
+color-rendering
+display
+display-align
+fill
+fill-opacity
+fill-rule
+font-family
+font-size
+font-style
+font-variant
+font-weight
+image-rendering
+line-increment
+opacity
+pointer-events
+shape-rendering
+solid-color
+solid-opacity
+stop-color
+stop-opacity
+stroke
+stroke-dasharray
+stroke-dashoffset
+stroke-linecap
+stroke-linejoin
+stroke-miterlimit
+stroke-opacity
+stroke-width
+text-align
+text-anchor
+text-rendering
+vector-effect
+viewport-fill
+viewport-fill-opacity
+visibility
+#######################################
+#
+# attributes (SVG Tiny 1.2)
+#
+#######################################
+accent-height
+accumulate
+additive
+alphabetic
+arabic-form
+ascent
+attributeName
+attributeType
+bandwidth
+baseProfile
+bbox
+begin
+by
+calcMode
+cap-height
+class
+contentScriptType
+cx
+cy
+d
+defaultAction
+descent
+dur
+editable
+end
+ev:event
+event
+externalResourcesRequired
+fill
+focusHighlight
+focusable
+font-family
+font-stretch
+font-style
+font-variant
+font-weight
+from
+g1
+g2
+glyph-name
+gradientUnits
+handler
+hanging
+height
+height
+horiz-adv-x
+horiz-origin-x
+id
+ideographic
+initialVisibility
+k
+keyPoints
+keySplines
+keyTimes
+lang
+mathematical
+max
+mediaCharacterEncoding
+mediaContentEncodings
+mediaSize
+mediaTime
+min
+nav-down
+nav-down-left
+nav-down-right
+nav-left
+nav-next
+nav-prev
+nav-right
+nav-up
+nav-up-left
+nav-up-right
+observer
+offset
+origin
+overlay
+overline-position
+overline-thickness
+panose-1
+path
+pathLength
+phase
+playbackOrder
+points
+preserveAspectRatio
+propagate
+r
+repeatCount
+repeatDur
+requiredExtensions
+requiredFeatures
+requiredFonts
+requiredFormats
+restart
+rotate
+rx
+ry
+slope
+snapshotTime
+stemh
+stemv
+strikethrough-position
+strikethrough-thickness
+style
+syncBehavior
+syncBehaviorDefault
+syncMaster
+syncTolerance
+syncToleranceDefault
+systemLanguage
+target
+timelineBegin
+to
+transform
+transformBehavior
+type
+u1
+u2
+underline-position
+underline-thickness
+unicode
+unicode-range
+units-per-em
+values
+version
+viewBox
+width
+widths
+x
+x-height
+x1
+x2
+xlink:actuate
+xlink:arcrole
+xlink:href
+xlink:role
+xlink:show
+xlink:title
+xlink:type
+xml:base
+xml:id
+xml:lang
+xml:space
+y
+y1
+y2
+zoomAndPan
\ No newline at end of file
diff --git a/filter/source/svgimport/units.cxx b/filter/source/svgimport/units.cxx
new file mode 100644
index 0000000..ebafca5
--- /dev/null
+++ filter/source/svgimport/units.cxx
@@ -0,0 +1,82 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Jan Holesovsky   <kendy@suse.cz>
+ *      Fridrich Strba   <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_filter.hxx"
+
+#include "units.hxx"
+#include <rtl/ustring.hxx>
+#include <boost/spirit.hpp>
+
+namespace svgi
+{
+
+double convLength( double value, SvgUnit unit )
+{
+    // convert svg unit to internal coordinates ("pixel"). Since the
+    // OOo drawing layer is still largely integer-based, the initial
+    // viewport transformation includes a certain scale factor
+    switch ( unit )
+    {
+        case SVG_LENGTH_UNIT_CM: return value * 1000.0;
+        case SVG_LENGTH_UNIT_EM: fprintf( stderr, "TODO: legth type EM not implemented.\n" ); return 1000.0;
+        case SVG_LENGTH_UNIT_EX: fprintf( stderr, "TODO: legth type EX not implemented.\n" ); return 1000.0;
+        case SVG_LENGTH_UNIT_IN: return value * 2540.0;
+        case SVG_LENGTH_UNIT_MM: return value * 100.0;
+        case SVG_LENGTH_UNIT_PC: return value * 2540.0/6.0;
+        case SVG_LENGTH_UNIT_PCT: fprintf( stderr, "TODO: legth type PCT not implemented.\n" ); return 1000.0;
+        case SVG_LENGTH_UNIT_PT: return value * 35.277778;
+        case SVG_LENGTH_UNIT_PX: return value;
+        default: fprintf( stderr, "Unknown length type\n" );
+    }
+
+    return 0.0;
+}
+
+double convLength( const rtl::OUString& sValue )
+{
+    using namespace ::boost::spirit;
+
+    rtl::OString aUTF8 = rtl::OUStringToOString( sValue, 
+                                                 RTL_TEXTENCODING_UTF8 );  
+
+    double  nVal=0.0;
+    SvgUnit eUnit=SVG_LENGTH_UNIT_PX;
+    const bool bRes = parse(aUTF8.getStr(),
+        //  Begin grammar
+        (
+            real_p[assign_a(nVal)] 
+            >> (  str_p("cm") [assign_a(eUnit,SVG_LENGTH_UNIT_CM)]
+                | str_p("em") [assign_a(eUnit,SVG_LENGTH_UNIT_EM)]
+                | str_p("ex") [assign_a(eUnit,SVG_LENGTH_UNIT_EX)]
+                | str_p("in") [assign_a(eUnit,SVG_LENGTH_UNIT_IN)]
+                | str_p("mm") [assign_a(eUnit,SVG_LENGTH_UNIT_MM)]
+                | str_p("pc") [assign_a(eUnit,SVG_LENGTH_UNIT_PC)]
+                | str_p("pct")[assign_a(eUnit,SVG_LENGTH_UNIT_PCT)]
+                | str_p("pt") [assign_a(eUnit,SVG_LENGTH_UNIT_PT)]
+                | str_p("px") [assign_a(eUnit,SVG_LENGTH_UNIT_PX)]
+                | end_p)
+        ),
+        //  End grammar
+        space_p).full;
+
+    if( !bRes )
+        return 0.0;
+
+    return convLength(nVal,eUnit);
+}
+
+} // namespace svgi
diff --git a/filter/source/svgimport/units.hxx b/filter/source/svgimport/units.hxx
new file mode 100644
index 0000000..c430f73
--- /dev/null
+++ filter/source/svgimport/units.hxx
@@ -0,0 +1,43 @@
+/*************************************************************************
+ *
+ *    OpenOffice.org - a multi-platform office productivity suite
+ *
+ *    Author:
+ *      Jan Holesovsky   <kendy@suse.cz>
+ *      Fridrich Strba   <fridrich.strba@bluewin.ch>
+ *      Thorsten Behrens <tbehrens@novell.com>	   	
+ *
+ *      Copyright (C) 2008, Novell Inc.
+ *
+ *   The Contents of this file are made available subject to
+ *   the terms of GNU Lesser General Public License Version 2.1.
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_UNITS_HXX
+#define INCLUDED_UNITS_HXX
+
+#include <sal/config.h>
+
+namespace rtl{ class OUString; }
+namespace svgi
+{
+    enum SvgUnit
+    {
+        SVG_LENGTH_UNIT_CM,
+        SVG_LENGTH_UNIT_EM,
+        SVG_LENGTH_UNIT_EX,
+        SVG_LENGTH_UNIT_IN,
+        SVG_LENGTH_UNIT_MM,
+        SVG_LENGTH_UNIT_PC,
+        SVG_LENGTH_UNIT_PCT,
+        SVG_LENGTH_UNIT_PT,
+        SVG_LENGTH_UNIT_PX
+    };
+
+    /// return svg_length_t in 100th's of mm
+    double convLength( double fVal, SvgUnit unit );
+    double convLength( const rtl::OUString& sValue );
+} // namespace svgi
+
+#endif
