diff --git a/basegfx/inc/basegfx/polygon/b2dpolypolygontools.hxx b/basegfx/inc/basegfx/polygon/b2dpolypolygontools.hxx
index a84ad15..14ac14f 100644
--- basegfx/inc/basegfx/polygon/b2dpolypolygontools.hxx
+++ basegfx/inc/basegfx/polygon/b2dpolypolygontools.hxx
@@ -127,19 +127,37 @@ namespace basegfx
         /** Read poly-polygon from SVG.
 
         	This function imports a poly-polygon from an SVG-D
-        	statement. Currently, elliptical arc elements are not yet
+        	attribute. Currently, elliptical arc elements are not yet
         	supported (and ignored during parsing).
 
             @param o_rPolyPoly
             The output poly-polygon
 
-            @param rSvgDStatement
-            A valid SVG-D statement
+            @param rSvgDAttribute
+            A valid SVG-D attribute string
 
             @return true, if the string was successfully parsed
          */
-        bool importFromSvgD( B2DPolyPolygon& o_rPolyPoly,
-                             const ::rtl::OUString& 	rSvgDStatement );
+        bool importFromSvgD( B2DPolyPolygon&        o_rPolyPoly,
+                             const ::rtl::OUString& rSvgDAttribute );
+
+        /** Read poly-polygon from SVG.
+
+        	This function imports a poly-polygon from an SVG points
+        	attribute (a plain list of coordinate pairs).
+
+            @param o_rPoly
+            The output polygon. Note that svg:points can only define a
+            single polygon
+
+            @param rSvgPointsAttribute
+            A valid SVG points attribute string
+
+            @return true, if the string was successfully parsed
+         */
+        bool importFromSvgPoints( B2DPolygon&            o_rPoly,
+                                  const ::rtl::OUString& rSvgPointsAttribute );
+
 
 		// create 3d PolyPolygon from given 2d PolyPolygon. The given fZCoordinate is used to expand the
 		// third coordinate.
diff --git a/basegfx/source/polygon/b2dsvgpolypolygon.cxx b/basegfx/source/polygon/b2dsvgpolypolygon.cxx
index 8965007..170d453 100644
--- basegfx/source/polygon/b2dsvgpolypolygon.cxx
+++ basegfx/source/polygon/b2dsvgpolypolygon.cxx
@@ -665,6 +665,32 @@ namespace basegfx
             return true;
         }
 
+        bool importFromSvgPoints( B2DPolygon&            o_rPoly,
+                                  const ::rtl::OUString& rSvgPointsAttribute )
+        {
+            o_rPoly.clear();
+            const sal_Int32 nLen(rSvgPointsAttribute.getLength());
+            sal_Int32 nPos(0);
+            double nX, nY;
+
+            // skip initial whitespace
+            lcl_skipSpaces(nPos, rSvgPointsAttribute, nLen);
+
+            while(nPos < nLen)
+            {
+                if(!lcl_importDoubleAndSpaces(nX, nPos, rSvgPointsAttribute, nLen)) return false;
+                if(!lcl_importDoubleAndSpaces(nY, nPos, rSvgPointsAttribute, nLen)) return false;
+                
+                // add point        
+                o_rPoly.append(B2DPoint(nX, nY));
+
+                // skip to next number, or finish
+                lcl_skipSpaces(nPos, rSvgPointsAttribute, nLen);
+            }
+
+            return true;
+        }
+
         ::rtl::OUString exportToSvgD(
 			const B2DPolyPolygon& rPolyPolygon,
 			bool bUseRelativeCoordinates, 
