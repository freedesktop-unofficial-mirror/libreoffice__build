diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/oovbaapi/org/openoffice/excel/makefile.mk oovbaapi/org/openoffice/excel/makefile.mk
--- backup/oovbaapi/org/openoffice/excel/makefile.mk	2008-07-21 15:56:41.000000000 +0800
+++ oovbaapi/org/openoffice/excel/makefile.mk	2008-07-21 21:47:23.000000000 +0800
@@ -95,6 +95,9 @@ IDLFILES= XApplication.idl\
  	XHyperlink.idl \
  	Hyperlink.idl \
  	XPageSetup.idl \
+ 	XPageBreak.idl \
+ 	XHPageBreak.idl \
+ 	XHPageBreaks.idl \
 
 
 # ------------------------------------------------------------------
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/oovbaapi/org/openoffice/excel/XHPageBreak.idl oovbaapi/org/openoffice/excel/XHPageBreak.idl
--- backup/oovbaapi/org/openoffice/excel/XHPageBreak.idl	1970-01-01 08:00:00.000000000 +0800
+++ oovbaapi/org/openoffice/excel/XHPageBreak.idl	2008-07-21 21:47:23.000000000 +0800
@@ -0,0 +1,55 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+#ifndef __org_openoffice_excel_XHPageBreak_idl__
+#define __org_openoffice_excel_XHPageBreak_idl__
+
+#ifndef __org_openoffice_excel_XPageBreak_idl__
+#include <org/openoffice/excel/XPageBreak.idl>
+#endif
+
+
+//=============================================================================
+
+module org {  module openoffice {  module excel { 
+
+//=============================================================================
+
+interface XHPageBreak
+{
+	interface ::org::openoffice::excel::XPageBreak;
+};
+
+//=============================================================================
+
+}; }; };
+
+#endif
+
+
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/oovbaapi/org/openoffice/excel/XHPageBreaks.idl oovbaapi/org/openoffice/excel/XHPageBreaks.idl
--- backup/oovbaapi/org/openoffice/excel/XHPageBreaks.idl	1970-01-01 08:00:00.000000000 +0800
+++ oovbaapi/org/openoffice/excel/XHPageBreaks.idl	2008-07-24 16:59:30.000000000 +0800
@@ -0,0 +1,70 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+#ifndef __org_openoffice_excel_XHPageBreaks_idl__
+#define __org_openoffice_excel_XHPageBreaks_idl__
+
+#ifndef __com_sun_star_uno_XInterface_idl__
+#include <com/sun/star/uno/XInterface.idl>
+#endif
+
+#ifndef __org_openoffice_vba_XHelperInterface_idl__
+#include <org/openoffice/vba/XHelperInterface.idl>
+#endif
+
+#ifndef __com_sun_star_helper_script_BasicErrorException_idl__
+#include <com/sun/star/script/BasicErrorException.idl>
+#endif
+#ifndef  __org_openoffice_vba_XCollection_idl__
+#include <org/openoffice/vba/XCollection.idl>
+#endif
+
+//=============================================================================
+
+module org {  module openoffice {  module excel { 
+
+//=============================================================================
+
+interface XHPageBreak;
+
+interface XHPageBreaks
+{
+
+	interface org::openoffice::vba::XCollection;
+	//Methods	
+    any Add([in] any Before) raises(com::sun::star::script::BasicErrorException);
+};
+
+//=============================================================================
+
+}; }; };
+
+#endif
+
+
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/oovbaapi/org/openoffice/excel/XPageBreak.idl oovbaapi/org/openoffice/excel/XPageBreak.idl
--- backup/oovbaapi/org/openoffice/excel/XPageBreak.idl	1970-01-01 08:00:00.000000000 +0800
+++ oovbaapi/org/openoffice/excel/XPageBreak.idl	2008-07-21 21:47:23.000000000 +0800
@@ -0,0 +1,73 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+#ifndef __org_openoffice_excel_XPageBreak_idl__
+#define __org_openoffice_excel_XPageBreak_idl__
+
+#ifndef __com_sun_star_uno_XInterface_idl__
+#include <com/sun/star/uno/XInterface.idl>
+#endif
+
+#ifndef __org_openoffice_vba_XHelperInterface_idl__
+#include <org/openoffice/vba/XHelperInterface.idl>
+#endif
+
+#ifndef __com_sun_star_helper_script_BasicErrorException_idl__
+#include <com/sun/star/script/BasicErrorException.idl>
+#endif
+
+//=============================================================================
+
+module org {  module openoffice {  module excel { 
+
+//=============================================================================
+
+interface XRange;
+
+interface XPageBreak
+{
+
+	interface ::org::openoffice::vba::XHelperInterface;
+
+    // Attributes
+    [attribute] long Type;
+    
+	//Methods	
+	void Delete() raises(com::sun::star::script::BasicErrorException);
+    XRange Location()raises(com::sun::star::script::BasicErrorException);
+
+};
+
+//=============================================================================
+
+}; }; };
+
+#endif
+
+
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/oovbaapi/org/openoffice/excel/XWorksheet.idl oovbaapi/org/openoffice/excel/XWorksheet.idl
--- backup/oovbaapi/org/openoffice/excel/XWorksheet.idl	2008-07-21 15:56:41.000000000 +0800
+++ oovbaapi/org/openoffice/excel/XWorksheet.idl	2008-07-21 21:48:51.000000000 +0800
@@ -52,6 +52,7 @@ interface XComments;
 interface XRange;
 interface XOutline;
 interface XPageSetup;
+interface XHPageBreaks;
 interface XWorksheet
 {
 	interface ::org::openoffice::vba::XHelperInterface;
@@ -85,6 +86,7 @@ interface XWorksheet
 	any Comments([in] any Index);
 	XOutline Outline();
 	XPageSetup PageSetup();
+	any HPageBreaks([in] any Index);
 	any OLEObjects([in] any Index);
 	void ShowDataForm();
 	any Shapes([in] any Index);
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/sc/source/ui/vba/makefile.mk sc/source/ui/vba/makefile.mk
--- backup/sc/source/ui/vba/makefile.mk	2008-07-21 15:56:13.000000000 +0800
+++ sc/source/ui/vba/makefile.mk	2008-07-21 21:47:23.000000000 +0800
@@ -127,6 +127,8 @@ SLOFILES= \
                 $(SLO)$/vbacommandbars.obj \
         $(SLO)$/vbahyperlink.obj \
         $(SLO)$/vbapagesetup.obj \
+        $(SLO)$/vbapagebreak.obj \
+        $(SLO)$/vbapagebreaks.obj \
         $(SLO)$/vbaspinbutton.obj \
 		$(SLO)$/service.obj \
         $(SLO)$/vbaeventshelper.obj \
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/sc/source/ui/vba/vbapagebreak.cxx sc/source/ui/vba/vbapagebreak.cxx
--- backup/sc/source/ui/vba/vbapagebreak.cxx	1970-01-01 08:00:00.000000000 +0800
+++ sc/source/ui/vba/vbapagebreak.cxx	2008-07-23 11:48:30.000000000 +0800
@@ -0,0 +1,141 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+#include "vbapagebreak.hxx"
+#include "vbarange.hxx"
+#include <org/openoffice/excel/XlPageBreak.hpp>
+using namespace ::com::sun::star;
+using namespace ::org::openoffice;
+
+template< typename Ifc1 >
+ScVbaPageBreak<Ifc1>::ScVbaPageBreak( const uno::Reference< vba::XHelperInterface >& xParent, 
+                    const uno::Reference< uno::XComponentContext >& xContext,
+            		uno::Reference< beans::XPropertySet >& xProps,
+                    sheet::TablePageBreakData aTablePageBreakData) throw (uno::RuntimeException):
+            ScVbaPageBreak_BASE( xParent, xContext ),
+            mxRowColPropertySet( xProps ),
+            maTablePageBreakData( aTablePageBreakData )
+{
+}
+
+template< typename Ifc1 >
+sal_Int32 ScVbaPageBreak<Ifc1>::getType() throw (uno::RuntimeException) 
+{
+    uno::Any aValue = mxRowColPropertySet->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsStartOfNewPage" )));
+    sal_Bool hasPageBreak = sal_False;
+    aValue >>= hasPageBreak;
+
+    if( !hasPageBreak )
+        return excel::XlPageBreak::xlPageBreakNone;
+    
+    if( maTablePageBreakData.ManualBreak )
+        return excel::XlPageBreak::xlPageBreakManual;
+    
+    return excel::XlPageBreak::xlPageBreakAutomatic;
+}
+
+template< typename Ifc1 >
+void ScVbaPageBreak<Ifc1>::setType(sal_Int32 type) throw (uno::RuntimeException) 
+{
+    if( (type != excel::XlPageBreak::xlPageBreakNone) && 
+        (type != excel::XlPageBreak::xlPageBreakManual) &&
+        (type != excel::XlPageBreak::xlPageBreakAutomatic) )
+    {
+        DebugHelper::exception(SbERR_BAD_PARAMETER, rtl::OUString() );
+    }
+
+    if( type == excel::XlPageBreak::xlPageBreakNone )
+    {
+        mxRowColPropertySet->setPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsStartOfNewPage" )), uno::makeAny(sal_False));
+        return;
+    }
+
+    mxRowColPropertySet->setPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsStartOfNewPage" )), uno::makeAny(sal_True));
+    if( type == excel::XlPageBreak::xlPageBreakManual )
+        maTablePageBreakData.ManualBreak = sal_True;
+    else
+        maTablePageBreakData.ManualBreak = sal_False;
+}
+
+template< typename Ifc1 >
+void ScVbaPageBreak<Ifc1>::Delete() throw ( script::BasicErrorException, uno::RuntimeException)
+{
+    mxRowColPropertySet->setPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsStartOfNewPage" )), uno::makeAny(sal_False));
+}
+
+template< typename Ifc1 >
+uno::Reference< excel::XRange> ScVbaPageBreak<Ifc1>::Location() throw ( script::BasicErrorException, uno::RuntimeException)
+{
+    uno::Reference< table::XCellRange > xRange( mxRowColPropertySet, uno::UNO_QUERY_THROW );
+    return new ScVbaRange( ScVbaPageBreak_BASE::getParent(), ScVbaPageBreak_BASE::mxContext, xRange);
+}
+
+template< typename Ifc1 >
+rtl::OUString& 
+ScVbaPageBreak<Ifc1>::getServiceImplName()
+{
+	static rtl::OUString sImplName( RTL_CONSTASCII_USTRINGPARAM("ScVbaPageBreak") );
+	return sImplName;
+}
+
+template< typename Ifc1 >
+uno::Sequence< rtl::OUString > 
+ScVbaPageBreak<Ifc1>::getServiceNames()
+{
+	static uno::Sequence< rtl::OUString > aServiceNames;
+	if ( aServiceNames.getLength() == 0 )
+	{
+		aServiceNames.realloc( 1 );
+		aServiceNames[ 0 ] = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("org.openoffice.excel.PageBreak" ) );
+	}
+	return aServiceNames;
+}
+
+template class ScVbaPageBreak< excel::XHPageBreak >;
+
+/* class ScVbaHPageBreak */
+rtl::OUString& 
+ScVbaHPageBreak::getServiceImplName()
+{
+	static rtl::OUString sImplName( RTL_CONSTASCII_USTRINGPARAM("ScVbaHPageBreak") );
+	return sImplName;
+}
+
+uno::Sequence< rtl::OUString > 
+ScVbaHPageBreak::getServiceNames()
+{
+	static uno::Sequence< rtl::OUString > aServiceNames;
+	if ( aServiceNames.getLength() == 0 )
+	{
+		aServiceNames.realloc( 1 );
+		aServiceNames[ 0 ] = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("org.openoffice.excel.HPageBreak" ) );
+	}
+	return aServiceNames;
+}
+
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/sc/source/ui/vba/vbapagebreak.hxx sc/source/ui/vba/vbapagebreak.hxx
--- backup/sc/source/ui/vba/vbapagebreak.hxx	1970-01-01 08:00:00.000000000 +0800
+++ sc/source/ui/vba/vbapagebreak.hxx	2008-07-21 22:10:57.000000000 +0800
@@ -0,0 +1,87 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+#ifndef SC_VBA_PAGEBREAK_HXX
+#define SC_VBA_PAGEBREAK_HXX
+
+#include <cppuhelper/implbase1.hxx>
+#include <org/openoffice/excel/XPageBreak.hpp>
+#include <org/openoffice/excel/XHPageBreak.hpp>
+#include <org/openoffice/excel/XRange.hpp>
+#include <com/sun/star/uno/XComponentContext.hpp>
+#include <com/sun/star/script/BasicErrorException.hpp>
+#include <com/sun/star/sheet/TablePageBreakData.hpp>
+#include <com/sun/star/beans/XPropertySet.hpp>
+#include "vbahelperinterface.hxx"
+
+template< typename Ifc1 >
+class ScVbaPageBreak : public InheritedHelperInterfaceImpl1< Ifc1 >
+{
+typedef InheritedHelperInterfaceImpl1< Ifc1 > ScVbaPageBreak_BASE;
+protected:
+    css::sheet::TablePageBreakData maTablePageBreakData;
+	css::uno::Reference< css::beans::XPropertySet > mxRowColPropertySet;
+public:
+	ScVbaPageBreak( const css::uno::Reference< oo::vba::XHelperInterface >& xParent, 
+                    const css::uno::Reference< css::uno::XComponentContext >& xContext,
+            		css::uno::Reference< css::beans::XPropertySet >& xProps,
+                    css::sheet::TablePageBreakData aTablePageBreakData) throw (css::uno::RuntimeException);
+	virtual ~ScVbaPageBreak(){}
+	
+	virtual sal_Int32 SAL_CALL getType( ) throw (css::uno::RuntimeException);
+    virtual void SAL_CALL setType(sal_Int32 type) throw (css::uno::RuntimeException);
+
+    virtual void SAL_CALL Delete() throw ( css::script::BasicErrorException, css::uno::RuntimeException);
+    virtual css::uno::Reference< oo::excel::XRange> SAL_CALL Location() throw ( css::script::BasicErrorException, css::uno::RuntimeException);
+
+	// XHelperInterface
+	virtual rtl::OUString& getServiceImplName();
+	virtual css::uno::Sequence<rtl::OUString> getServiceNames();
+};
+
+
+typedef ScVbaPageBreak < oo::excel::XHPageBreak > ScVbaHPageBreak_BASE;
+
+class ScVbaHPageBreak :  public ScVbaHPageBreak_BASE
+{
+public:
+	ScVbaHPageBreak( const css::uno::Reference< oo::vba::XHelperInterface >& xParent, 
+                    const css::uno::Reference< css::uno::XComponentContext >& xContext,
+            		css::uno::Reference< css::beans::XPropertySet >& xProps,
+                    css::sheet::TablePageBreakData aTablePageBreakData) throw (css::uno::RuntimeException):
+              ScVbaHPageBreak_BASE( xParent,xContext,xProps,aTablePageBreakData ){}
+            
+	virtual ~ScVbaHPageBreak(){}
+	
+	// XHelperInterface
+	virtual rtl::OUString& getServiceImplName();
+	virtual css::uno::Sequence<rtl::OUString> getServiceNames();
+};
+
+#endif
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/sc/source/ui/vba/vbapagebreaks.cxx sc/source/ui/vba/vbapagebreaks.cxx
--- backup/sc/source/ui/vba/vbapagebreaks.cxx	1970-01-01 08:00:00.000000000 +0800
+++ sc/source/ui/vba/vbapagebreaks.cxx	2008-07-24 17:04:15.000000000 +0800
@@ -0,0 +1,269 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+#include "vbapagebreaks.hxx"
+#include "vbapagebreak.hxx"
+#include <org/openoffice/excel/XWorksheet.hpp>
+using namespace ::com::sun::star;
+using namespace ::org::openoffice;
+
+typedef ::cppu::WeakImplHelper1<container::XIndexAccess > RangePageBreaks_Base;
+class RangePageBreaks : public RangePageBreaks_Base
+{
+private:
+	uno::Reference< vba::XHelperInterface > mxParent;
+	uno::Reference< uno::XComponentContext > mxContext;
+	uno::Reference< sheet::XSheetPageBreak > mxSheetPageBreak;
+	sal_Bool m_bColumn;
+
+public:
+	RangePageBreaks( const uno::Reference< vba::XHelperInterface >& xParent,
+					 const uno::Reference< uno::XComponentContext >& xContext,
+					 uno::Reference< sheet::XSheetPageBreak >& xSheetPageBreak,
+					 sal_Bool bColumn ) : mxParent( xParent ), mxContext( xContext ), mxSheetPageBreak( xSheetPageBreak ), m_bColumn( bColumn )
+	{
+	}
+
+	sal_Int32 getAPIStartofRange( const uno::Reference< excel::XRange >& xRange ) throw (css::uno::RuntimeException)
+	{
+		if( m_bColumn )
+			return xRange->getColumn() - 1;
+		return xRange->getRow() - 1;
+	}
+
+	sal_Int32 getAPIEndIndexofRange( const uno::Reference< excel::XRange >& xRange, sal_Int32 nUsedStart ) throw (uno::RuntimeException)
+	{
+		if( m_bColumn )
+			return nUsedStart + xRange->Columns( uno::Any() )->getCount();
+	    return nUsedStart + xRange->Rows( uno::Any() )->getCount();
+	}
+
+	uno::Sequence<sheet::TablePageBreakData> getAllPageBreaks() throw (uno::RuntimeException)
+	{
+		if( m_bColumn )
+			return mxSheetPageBreak->getColumnPageBreaks();
+    	return mxSheetPageBreak->getRowPageBreaks();
+	}
+
+	uno::Reference<container::XIndexAccess> getRowColContainer() throw (uno::RuntimeException)
+	{
+		uno::Reference< table::XColumnRowRange > xColumnRowRange( mxSheetPageBreak, uno::UNO_QUERY_THROW );
+    	uno::Reference<container::XIndexAccess> xIndexAccess;
+		if( m_bColumn )
+			xIndexAccess.set( xColumnRowRange->getColumns(), uno::UNO_QUERY_THROW );
+		else
+			xIndexAccess.set( xColumnRowRange->getRows(), uno::UNO_QUERY_THROW );
+    	return xIndexAccess;
+	}
+
+	sheet::TablePageBreakData getTablePageBreakData( sal_Int32 nAPIItemIndex ) throw ( script::BasicErrorException, uno::RuntimeException);
+	uno::Any Add( const css::uno::Any& Before ) throw ( css::script::BasicErrorException, css::uno::RuntimeException);
+
+	// XIndexAccess
+	virtual sal_Int32 SAL_CALL getCount(  ) throw (uno::RuntimeException);
+	virtual uno::Any SAL_CALL getByIndex( sal_Int32 Index ) throw (lang::IndexOutOfBoundsException, lang::WrappedTargetException, uno::RuntimeException);
+	virtual uno::Type SAL_CALL getElementType(  ) throw (uno::RuntimeException)
+	{
+		//if( m_bColumn )
+			// return excel::XVPageBreak::static_type(0);
+		return  excel::XHPageBreak::static_type(0);
+	}
+	virtual sal_Bool SAL_CALL hasElements(  ) throw (uno::RuntimeException)
+	{
+		return sal_True;
+	}
+};
+
+/** @TODO Unlike MS Excel this method only considers the pagebreaks that intersect the used range
+*  To become completely compatible the print area has to be considered. As far as I found out this printarea
+*  also considers the position and sizes of shapes and manually inserted page breaks
+*  Note: In MS  there is a limit of 1026 horizontal page breaks per sheet.
+*/    
+sal_Int32 SAL_CALL RangePageBreaks::getCount(  ) throw (uno::RuntimeException)
+{
+    sal_Int32 nCount = 0;
+    uno::Reference< excel::XWorksheet > xWorksheet( mxParent, uno::UNO_QUERY_THROW );
+    uno::Reference< excel::XRange > xRange = xWorksheet->getUsedRange();
+    sal_Int32 nUsedStart = getAPIStartofRange( xRange );
+    sal_Int32 nUsedEnd = getAPIEndIndexofRange( xRange, nUsedStart );
+    uno::Sequence<sheet::TablePageBreakData> aTablePageBreakData = getAllPageBreaks();
+
+    sal_Int32 nLength = aTablePageBreakData.getLength();
+    for( sal_Int32 i=0; i<nLength; i++ )
+    {
+        sal_Int32 nPos = aTablePageBreakData[i].Position;
+        if( nPos > nUsedEnd )
+            return nCount;
+        if( nPos >= nUsedStart )
+            nCount++;
+    }
+
+    return nCount;
+}
+
+uno::Any SAL_CALL RangePageBreaks::getByIndex( sal_Int32 Index ) throw (lang::IndexOutOfBoundsException, lang::WrappedTargetException, uno::RuntimeException)
+{
+    if( (Index < getCount()) && ( Index >= 0 ))
+    {
+        sheet::TablePageBreakData aTablePageBreakData = getTablePageBreakData( Index );
+        uno::Reference< container::XIndexAccess > xIndexAccess = getRowColContainer();
+        sal_Int32 nPos = aTablePageBreakData.Position;
+        if( (nPos < xIndexAccess->getCount()) && (nPos > -1) )
+        {
+            uno::Reference< beans::XPropertySet > xRowColPropertySet( xIndexAccess->getByIndex(nPos), uno::UNO_QUERY_THROW );
+			//if( m_bColumn )
+			//	return uno::makeAny( uno::Reference< excel::XVPageBreak >( new ScVbaVPageBreak( mxParent, mxContext, xRowColPropertySet, aTablePageBreakData) ));
+			return uno::makeAny( uno::Reference< excel::XHPageBreak >( new ScVbaHPageBreak( mxParent, mxContext, xRowColPropertySet, aTablePageBreakData) ));
+        }
+    }
+	throw lang::IndexOutOfBoundsException();
+}
+
+sheet::TablePageBreakData RangePageBreaks::getTablePageBreakData( sal_Int32 nAPIItemIndex ) throw ( script::BasicErrorException, uno::RuntimeException)
+{
+    sal_Int32 index = -1;
+    sheet::TablePageBreakData aTablePageBreakData;
+    uno::Reference< excel::XWorksheet > xWorksheet( mxParent, uno::UNO_QUERY_THROW );
+    uno::Reference< excel::XRange > xRange = xWorksheet->getUsedRange();
+    sal_Int32 nUsedStart = getAPIStartofRange( xRange );
+    sal_Int32 nUsedEnd = getAPIEndIndexofRange( xRange, nUsedStart );
+    uno::Sequence<sheet::TablePageBreakData> aTablePageBreakDataList = getAllPageBreaks();
+
+    sal_Int32 nLength = aTablePageBreakDataList.getLength();
+    for( sal_Int32 i=0; i<nLength; i++ )
+    {
+        aTablePageBreakData = aTablePageBreakDataList[i];
+        sal_Int32 nPos = aTablePageBreakData.Position;
+        if( nPos >= nUsedStart )
+            index++;
+        if( nPos > nUsedEnd )
+            DebugHelper::exception(SbERR_METHOD_FAILED, rtl::OUString());
+        if( index == nAPIItemIndex )
+            return aTablePageBreakData;
+    }
+
+    return aTablePageBreakData;
+}
+
+uno::Any RangePageBreaks::Add( const css::uno::Any& Before ) throw ( css::script::BasicErrorException, css::uno::RuntimeException)
+{
+    uno::Reference< excel::XRange > xRange;
+    Before >>= xRange;
+    if( !xRange.is() )
+    {
+		DebugHelper::exception(SbERR_BAD_ARGUMENT, rtl::OUString());
+	}
+
+	sal_Int32 nAPIRowColIndex = getAPIStartofRange( xRange );
+	uno::Reference< container::XIndexAccess > xIndexAccess = getRowColContainer();
+	uno::Reference< beans::XPropertySet > xRowColPropertySet( xIndexAccess->getByIndex(nAPIRowColIndex), uno::UNO_QUERY_THROW );
+	xRowColPropertySet->setPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsStartOfNewPage" )), uno::makeAny(sal_True));
+	sheet::TablePageBreakData aTablePageBreakData;
+	aTablePageBreakData.ManualBreak = sal_True;
+	aTablePageBreakData.Position = nAPIRowColIndex;
+	//if( m_bColumn )
+	//	return uno::makeAny( uno::Reference< excel::XVPageBreak >( new ScVbaVPageBreak( mxParent, mxContext, xRowColPropertySet, aTablePageBreakData) ));
+	return uno::makeAny( uno::Reference< excel::XHPageBreak >( new ScVbaHPageBreak( mxParent, mxContext, xRowColPropertySet, aTablePageBreakData) ));
+}
+
+
+class RangePageBreaksEnumWrapper : public EnumerationHelper_BASE
+{
+	uno::Reference<container::XIndexAccess > m_xIndexAccess;
+	sal_Int32 nIndex;
+public:
+	RangePageBreaksEnumWrapper( const uno::Reference< container::XIndexAccess >& xIndexAccess ) : m_xIndexAccess( xIndexAccess ), nIndex( 0 ) {}
+	virtual ::sal_Bool SAL_CALL hasMoreElements(  ) throw (uno::RuntimeException)
+	{
+		return ( nIndex < m_xIndexAccess->getCount() );
+	}
+
+	virtual uno::Any SAL_CALL nextElement(  ) throw (container::NoSuchElementException, lang::WrappedTargetException, uno::RuntimeException)
+	{
+		if ( nIndex < m_xIndexAccess->getCount() )
+			return m_xIndexAccess->getByIndex( nIndex++ );
+		throw container::NoSuchElementException();
+	}
+};
+
+ScVbaHPageBreaks::ScVbaHPageBreaks( const uno::Reference< vba::XHelperInterface >& xParent, 
+                                    const uno::Reference< uno::XComponentContext >& xContext,
+            		                uno::Reference< sheet::XSheetPageBreak >& xSheetPageBreak) throw (uno::RuntimeException):
+                          ScVbaHPageBreaks_BASE( xParent,xContext, new RangePageBreaks( xParent, xContext, xSheetPageBreak, sal_False )), 
+						  mxSheetPageBreak( xSheetPageBreak )
+{
+}
+
+uno::Any SAL_CALL ScVbaHPageBreaks::Add( const uno::Any& Before) throw ( script::BasicErrorException, uno::RuntimeException)
+{
+	RangePageBreaks* pPageBreaks = dynamic_cast< RangePageBreaks* >( m_xIndexAccess.get() );
+	if( pPageBreaks )
+	{
+		return pPageBreaks->Add( Before );
+	}
+	return uno::Any();
+}
+
+uno::Reference< container::XEnumeration >
+ScVbaHPageBreaks::createEnumeration() throw (uno::RuntimeException)
+{
+	return new RangePageBreaksEnumWrapper( m_xIndexAccess );
+}
+
+uno::Any
+ScVbaHPageBreaks::createCollectionObject( const css::uno::Any& aSource )
+{
+	return aSource; // its already a pagebreak object
+}
+
+uno::Type 
+ScVbaHPageBreaks::getElementType() throw (uno::RuntimeException)
+{
+	return excel::XHPageBreak::static_type(0);
+}
+
+rtl::OUString& 
+ScVbaHPageBreaks::getServiceImplName()
+{
+	static rtl::OUString sImplName( RTL_CONSTASCII_USTRINGPARAM("ScVbaHPageBreaks") );
+	return sImplName;
+}
+
+uno::Sequence< rtl::OUString > 
+ScVbaHPageBreaks::getServiceNames()
+{
+	static uno::Sequence< rtl::OUString > aServiceNames;
+	if ( aServiceNames.getLength() == 0 )
+	{
+		aServiceNames.realloc( 1 );
+		aServiceNames[ 0 ] = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("org.openoffice.excel.HPageBreaks" ) );
+	}
+	return aServiceNames;
+}
+
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/sc/source/ui/vba/vbapagebreaks.hxx sc/source/ui/vba/vbapagebreaks.hxx
--- backup/sc/source/ui/vba/vbapagebreaks.hxx	1970-01-01 08:00:00.000000000 +0800
+++ sc/source/ui/vba/vbapagebreaks.hxx	2008-07-24 16:55:43.000000000 +0800
@@ -0,0 +1,71 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+#ifndef SC_VBA_PAGEBREAKS_HXX
+#define SC_VBA_PAGEBREAKS_HXX
+
+#include <cppuhelper/implbase1.hxx>
+#include <org/openoffice/excel/XHPageBreaks.hpp>
+#include <org/openoffice/excel/XHPageBreak.hpp>
+#include <org/openoffice/excel/XRange.hpp>
+#include <com/sun/star/uno/XComponentContext.hpp>
+#include <com/sun/star/script/BasicErrorException.hpp>
+#include <com/sun/star/sheet/XSheetPageBreak.hpp>
+#include <com/sun/star/sheet/TablePageBreakData.hpp>
+#include <com/sun/star/beans/XPropertySet.hpp>
+#include <com/sun/star/container/XIndexAccess.hpp>
+#include <com/sun/star/table/XColumnRowRange.hpp>
+#include "vbahelperinterface.hxx"
+#include "vbacollectionimpl.hxx"
+
+typedef CollTestImplHelper< oo::excel::XHPageBreaks > ScVbaHPageBreaks_BASE;
+
+class ScVbaHPageBreaks : public ScVbaHPageBreaks_BASE
+{
+	css::uno::Reference< css::sheet::XSheetPageBreak > mxSheetPageBreak;
+public:
+	ScVbaHPageBreaks( const css::uno::Reference< oo::vba::XHelperInterface >& xParent, 
+                    const css::uno::Reference< css::uno::XComponentContext >& xContext,
+            		css::uno::Reference< css::sheet::XSheetPageBreak >& xSheetPageBreak) throw (css::uno::RuntimeException);
+	virtual ~ScVbaHPageBreaks(){}
+
+    // XHPageBreaks 
+    virtual css::uno::Any SAL_CALL Add( const css::uno::Any& Before) throw ( css::script::BasicErrorException, css::uno::RuntimeException);
+
+	// XEnumerationAccess
+	virtual css::uno::Type SAL_CALL getElementType() throw (css::uno::RuntimeException);
+	virtual css::uno::Reference< css::container::XEnumeration > SAL_CALL createEnumeration() throw (css::uno::RuntimeException);	
+	virtual css::uno::Any createCollectionObject(const css::uno::Any&);
+
+	// XHelperInterface
+	virtual rtl::OUString& getServiceImplName();
+	virtual css::uno::Sequence<rtl::OUString> getServiceNames();
+};
+
+#endif
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/sc/source/ui/vba/vbaworksheet.cxx sc/source/ui/vba/vbaworksheet.cxx
--- backup/sc/source/ui/vba/vbaworksheet.cxx	2008-07-21 15:56:13.000000000 +0800
+++ sc/source/ui/vba/vbaworksheet.cxx	2008-07-24 16:15:39.000000000 +0800
@@ -47,6 +47,7 @@
 #include <com/sun/star/sheet/XSheetPastable.hpp>
 #include <com/sun/star/sheet/XCellAddressable.hpp>
 #include <com/sun/star/sheet/XSheetOutline.hpp>
+#include <com/sun/star/sheet/XSheetPageBreak.hpp>
 #include <com/sun/star/sheet/XDataPilotTablesSupplier.hpp>
 #include <com/sun/star/util/XURLTransformer.hpp>
 #include <com/sun/star/frame/XDispatchProvider.hpp>
@@ -86,6 +87,7 @@
 #include "vbaoleobjects.hxx"
 #include "vbashapes.hxx"
 #include "vbapagesetup.hxx"
+#include "vbapagebreaks.hxx"
 
 #define STANDARDWIDTH 2267
 #define STANDARDHEIGHT 427
@@ -274,6 +276,16 @@ ScVbaWorksheet::PageSetup( ) throw (uno:
 	return new ScVbaPageSetup( this, mxContext, getSheet(), getModel() );
 }
 
+uno::Any
+ScVbaWorksheet::HPageBreaks( const uno::Any& aIndex ) throw (uno::RuntimeException)
+{
+    uno::Reference< sheet::XSheetPageBreak > xSheetPageBreak(getSheet(),uno::UNO_QUERY_THROW);
+    uno::Reference< excel::XHPageBreaks > xHPageBreaks( new ScVbaHPageBreaks( this, mxContext, xSheetPageBreak)); 
+   if ( aIndex.hasValue() )
+      return xHPageBreaks->Item( aIndex, uno::Any()); 
+   return uno::makeAny( xHPageBreaks );
+}
+
 sal_Int32 
 ScVbaWorksheet::getStandardWidth() throw (uno::RuntimeException)
 {
diff -urNp --exclude=CVS --exclude=unxlngi6.pro backup/sc/source/ui/vba/vbaworksheet.hxx sc/source/ui/vba/vbaworksheet.hxx
--- backup/sc/source/ui/vba/vbaworksheet.hxx	2008-07-21 15:56:13.000000000 +0800
+++ sc/source/ui/vba/vbaworksheet.hxx	2008-07-21 21:51:35.000000000 +0800
@@ -43,6 +43,7 @@
 #include <com/sun/star/frame/XModel.hpp>
 #include <org/openoffice/excel/XOutline.hpp>
 #include <org/openoffice/excel/XPageSetup.hpp>
+#include <org/openoffice/excel/XHPageBreaks.hpp>
 #include <org/openoffice/excel/XChartObjects.hpp>
 
 #include "vbahelperinterface.hxx"
@@ -91,6 +92,7 @@ public:
 	virtual css::uno::Any SAL_CALL ChartObjects( const css::uno::Any& Index ) throw (css::uno::RuntimeException);
 	virtual css::uno::Reference< oo::excel::XOutline > SAL_CALL Outline( ) throw (css::uno::RuntimeException);
 	virtual css::uno::Reference< oo::excel::XPageSetup > SAL_CALL PageSetup( ) throw (css::uno::RuntimeException);
+	virtual css::uno::Any SAL_CALL HPageBreaks( const css::uno::Any& aIndex ) throw (css::uno::RuntimeException);
 	virtual css::uno::Reference< oo::excel::XWorksheet > SAL_CALL getNext() throw (css::uno::RuntimeException);
 	virtual css::uno::Reference< oo::excel::XWorksheet > SAL_CALL getPrevious() throw (css::uno::RuntimeException);
 
