Index: sc/source/ui/vba/vbafont.cxx
===================================================================
--- sc/source/ui/vba/vbafont.cxx	(revision 276354)
+++ sc/source/ui/vba/vbafont.cxx	(working copy)
@@ -250,7 +250,6 @@
 uno::Any SAL_CALL
 ScVbaFont::getColorIndex() throw ( uno::RuntimeException )
 {
-	sal_Int32 nColor = 0;
 	if ( GetDataSet() )
 		if (  GetDataSet()->GetItemState( ATTR_FONT_COLOR, TRUE, NULL) == SFX_ITEM_DONTCARE )
 			return aNULL();
Index: basic/source/classes/sbxmod.cxx
===================================================================
--- basic/source/classes/sbxmod.cxx	(revision 276381)
+++ basic/source/classes/sbxmod.cxx	(working copy)
@@ -113,7 +113,7 @@
     DECL_LINK( OnAsyncQuit, void* );
 };
 
-IMPL_LINK( AsyncQuitHandler, OnAsyncQuit, void*, pNull )
+IMPL_LINK( AsyncQuitHandler, OnAsyncQuit, void*, /*pNull*/ )
 {
     QuitApplication();
     return 0L;
Index: sw/source/ui/vba/vbaselection.cxx
===================================================================
--- sw/source/ui/vba/vbaselection.cxx	(revision 276294)
+++ sw/source/ui/vba/vbaselection.cxx	(working copy)
@@ -188,7 +188,7 @@
 }
 
 void SAL_CALL
-SwVbaSelection::Delete( const uno::Any& _unit, const uno::Any& _count ) throw ( uno::RuntimeException )
+SwVbaSelection::Delete( const uno::Any& /*_unit*/, const uno::Any& /*_count*/ ) throw ( uno::RuntimeException )
 {
     // FIXME: handle the arguments: _unit and _count 
     rtl::OUString url = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:Delete"));
Index: sw/source/ui/vba/vbatable.cxx
===================================================================
--- sw/source/ui/vba/vbatable.cxx	(revision 276294)
+++ sw/source/ui/vba/vbatable.cxx	(working copy)
@@ -50,7 +50,7 @@
 }
 
 uno::Reference< word::XRange > SAL_CALL 
-SwVbaTable::ConvertToText( const uno::Any& Separator, const uno::Any& NestedTables ) throw (script::BasicErrorException, uno::RuntimeException)
+SwVbaTable::ConvertToText( const uno::Any& /*Separator*/, const uno::Any& /*NestedTables*/ ) throw (script::BasicErrorException, uno::RuntimeException)
 {
     // #FIXME the helper api uses the dreaded dispatch mechanism, holding off 
     // implementation while I look for alternative solution
Index: sw/source/ui/vba/vbaoptions.cxx
===================================================================
--- sw/source/ui/vba/vbaoptions.cxx	(revision 276294)
+++ sw/source/ui/vba/vbaoptions.cxx	(working copy)
@@ -141,7 +141,7 @@
     return word::WdLineStyle::wdLineStyleSingle;
 }
 
-void SAL_CALL SwVbaOptions::setDefaultBorderLineStyle( ::sal_Int32 _defaultborderlinestyle ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setDefaultBorderLineStyle( ::sal_Int32 /*_defaultborderlinestyle*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -151,7 +151,7 @@
     return word::WdLineWidth::wdLineWidth050pt;
 }
 
-void SAL_CALL SwVbaOptions::setDefaultBorderLineWidth( ::sal_Int32 _defaultborderlinewidth ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setDefaultBorderLineWidth( ::sal_Int32 /*_defaultborderlinewidth*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -161,7 +161,7 @@
     return word::WdColorIndex::wdAuto;
 }
 
-void SAL_CALL SwVbaOptions::setDefaultBorderColorIndex( ::sal_Int32 _defaultbordercolorindex ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setDefaultBorderColorIndex( ::sal_Int32 /*_defaultbordercolorindex*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -171,7 +171,7 @@
     return sal_True;
 }
 
-void SAL_CALL SwVbaOptions::setReplaceSelection( ::sal_Bool _replaceselection ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setReplaceSelection( ::sal_Bool /*_replaceselection*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -181,7 +181,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setMapPaperSize( ::sal_Bool _mappapersize ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setMapPaperSize( ::sal_Bool /*_mappapersize*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -191,7 +191,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeApplyHeadings( ::sal_Bool _autoformatasyoutypeapplyheadings ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeApplyHeadings( ::sal_Bool /*_autoformatasyoutypeapplyheadings*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -201,7 +201,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeApplyBulletedLists( ::sal_Bool _autoformatasyoutypeapplybulletedlists ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeApplyBulletedLists( ::sal_Bool /*_autoformatasyoutypeapplybulletedlists*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -211,7 +211,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeApplyNumberedLists( ::sal_Bool _autoformatasyoutypeapplynumberedlists ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeApplyNumberedLists( ::sal_Bool /*_autoformatasyoutypeapplynumberedlists*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -221,7 +221,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeFormatListItemBeginning( ::sal_Bool _autoformatasyoutypeformatlistitembeginning ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeFormatListItemBeginning( ::sal_Bool /*_autoformatasyoutypeformatlistitembeginning*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -231,7 +231,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeDefineStyles( ::sal_Bool _autoformatasyoutypedefinestyles ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setAutoFormatAsYouTypeDefineStyles( ::sal_Bool /*_autoformatasyoutypedefinestyles*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -241,7 +241,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setAutoFormatApplyHeadings( ::sal_Bool _autoformatapplyheadings ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setAutoFormatApplyHeadings( ::sal_Bool /*_autoformatapplyheadings*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -251,7 +251,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setAutoFormatApplyLists( ::sal_Bool _autoformatapplylists ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setAutoFormatApplyLists( ::sal_Bool /*_autoformatapplylists*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -261,7 +261,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaOptions::setAutoFormatApplyBulletedLists( ::sal_Bool _autoformatapplybulletedlists ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaOptions::setAutoFormatApplyBulletedLists( ::sal_Bool /*_autoformatapplybulletedlists*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
Index: sw/source/ui/vba/vbatables.cxx
===================================================================
--- sw/source/ui/vba/vbatables.cxx	(revision 276294)
+++ sw/source/ui/vba/vbatables.cxx	(working copy)
@@ -58,7 +58,7 @@
 
 
 uno::Reference< word::XTable > SAL_CALL 
-SwVbaTables::Add( const uno::Reference< word::XRange >& Range, const uno::Any& NumRows, const uno::Any& NumColumns, const uno::Any& DefaultTableBehavior, const uno::Any& AutoFitBehavior ) throw (script::BasicErrorException, uno::RuntimeException)
+SwVbaTables::Add( const uno::Reference< word::XRange >& Range, const uno::Any& NumRows, const uno::Any& NumColumns, const uno::Any& /*DefaultTableBehavior*/, const uno::Any& /*AutoFitBehavior*/ ) throw (script::BasicErrorException, uno::RuntimeException)
 {
     sal_Int32 nCols = 0;
     sal_Int32 nRows = 0;
Index: sw/source/ui/vba/vbapagesetup.cxx
===================================================================
--- sw/source/ui/vba/vbapagesetup.cxx	(revision 276294)
+++ sw/source/ui/vba/vbapagesetup.cxx	(working copy)
@@ -249,7 +249,7 @@
     return wdSectionStart;    
 }
 
-void SAL_CALL SwVbaPageSetup::setSectionStart( ::sal_Int32 _sectionstart ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaPageSetup::setSectionStart( ::sal_Int32 /*_sectionstart*/ ) throw (uno::RuntimeException)
 {
     // fail to find corresponding feature in Writer
     // #FIXME:
Index: sw/source/ui/vba/vbaborders.cxx
===================================================================
--- sw/source/ui/vba/vbaborders.cxx	(revision 276294)
+++ sw/source/ui/vba/vbaborders.cxx	(working copy)
@@ -356,7 +356,7 @@
     return ( aShadowFormat.Location != table::ShadowLocation_NONE );
 }
 
-void SAL_CALL SwVbaBorders::setShadow( sal_Bool _shadow ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaBorders::setShadow( sal_Bool /*_shadow*/ ) throw (uno::RuntimeException)
 {
     throw uno::RuntimeException( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("Not implemented") ), uno::Reference< uno::XInterface >() );
 }
Index: sw/source/ui/vba/vbaheaderfooter.cxx
===================================================================
--- sw/source/ui/vba/vbaheaderfooter.cxx	(revision 276294)
+++ sw/source/ui/vba/vbaheaderfooter.cxx	(working copy)
@@ -55,7 +55,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaHeaderFooter::setLinkToPrevious( ::sal_Bool _linktoprevious ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaHeaderFooter::setLinkToPrevious( ::sal_Bool /*_linktoprevious*/ ) throw (uno::RuntimeException)
 {
     // not support in Writer
 }
@@ -71,7 +71,7 @@
     {
         sPropsNameText = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("FooterText") );
     }
-    if( mnIndex = word::WdHeaderFooterIndex::wdHeaderFooterEvenPages )
+    if( mnIndex == word::WdHeaderFooterIndex::wdHeaderFooterEvenPages )
     {
         sPropsNameText.concat( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("Left") ) );
     }
Index: sw/source/ui/vba/vbastyles.cxx
===================================================================
--- sw/source/ui/vba/vbastyles.cxx	(revision 276294)
+++ sw/source/ui/vba/vbastyles.cxx	(working copy)
@@ -315,7 +315,7 @@
     sal_Int32 nIndex = 0;
     if( ( Index1 >>= nIndex ) && ( nIndex < 0 ) )
     {
-        for( const BuiltinStyleTable* pTable = aBuiltinStyleTable; pTable->wdBuiltinStyle != NULL; pTable++ )
+        for( const BuiltinStyleTable* pTable = aBuiltinStyleTable; pTable != NULL; pTable++ )
         {
             if( nIndex == pTable->wdBuiltinStyle )
             {
Index: sw/source/ui/vba/vbadocuments.cxx
===================================================================
--- sw/source/ui/vba/vbadocuments.cxx	(revision 276294)
+++ sw/source/ui/vba/vbadocuments.cxx	(working copy)
@@ -116,7 +116,7 @@
 }
 
 uno::Any SAL_CALL
-SwVbaDocuments::Add( const uno::Any& Template, const uno::Any& NewTemplate, const uno::Any& DocumentType, const uno::Any& Visible ) throw (uno::RuntimeException)
+SwVbaDocuments::Add( const uno::Any& Template, const uno::Any& /*NewTemplate*/, const uno::Any& /*DocumentType*/, const uno::Any& /*Visible*/ ) throw (uno::RuntimeException)
 {
     rtl::OUString sFileName;
     if( Template.hasValue() && ( Template >>= sFileName ) )
@@ -132,14 +132,14 @@
 
 // #TODO# #FIXME# can any of the unused params below be used?
 void SAL_CALL
-SwVbaDocuments::Close( const uno::Any& SaveChanges, const uno::Any& OriginalFormat, const uno::Any& RouteDocument ) throw (uno::RuntimeException)
+SwVbaDocuments::Close( const uno::Any& /*SaveChanges*/, const uno::Any& /*OriginalFormat*/, const uno::Any& /*RouteDocument*/ ) throw (uno::RuntimeException)
 {
     VbaDocumentsBase::Close();
 }
 
 // #TODO# #FIXME# can any of the unused params below be used?
 uno::Any SAL_CALL
-SwVbaDocuments::Open( const ::rtl::OUString& Filename, const uno::Any& ConfirmConversions, const uno::Any& ReadOnly, const uno::Any& AddToRecentFiles, const uno::Any& PasswordDocument, const uno::Any& PasswordTemplate, const uno::Any& Revert, const uno::Any& WritePasswordDocument, const uno::Any& WritePasswordTemplate, const uno::Any& Format, const uno::Any& Encoding, const uno::Any& Visible, const uno::Any& OpenAndRepair, const uno::Any& DocumentDirection, const uno::Any& NoEncodingDialog, const uno::Any& XMLTransform ) throw (uno::RuntimeException)
+SwVbaDocuments::Open( const ::rtl::OUString& Filename, const uno::Any& /*ConfirmConversions*/, const uno::Any& ReadOnly, const uno::Any& /*AddToRecentFiles*/, const uno::Any& /*PasswordDocument*/, const uno::Any& /*PasswordTemplate*/, const uno::Any& /*Revert*/, const uno::Any& /*WritePasswordDocument*/, const uno::Any& /*WritePasswordTemplate*/, const uno::Any& /*Format*/, const uno::Any& /*Encoding*/, const uno::Any& /*Visible*/, const uno::Any& /*OpenAndRepair*/, const uno::Any& /*DocumentDirection*/, const uno::Any& /*NoEncodingDialog*/, const uno::Any& /*XMLTransform*/ ) throw (uno::RuntimeException)
 {
 	// we need to detect if this is a URL, if not then assume its a file path
     rtl::OUString aURL;
Index: sw/source/ui/vba/vbasection.cxx
===================================================================
--- sw/source/ui/vba/vbasection.cxx	(revision 276294)
+++ sw/source/ui/vba/vbasection.cxx	(working copy)
@@ -49,7 +49,7 @@
     return sal_False;
 }
 
-void SAL_CALL SwVbaSection::setProtectedForForms( ::sal_Bool _protectedforforms ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaSection::setProtectedForForms( ::sal_Bool /*_protectedforforms*/ ) throw (uno::RuntimeException)
 {
 }
 
Index: sw/source/ui/vba/vbadocument.cxx
===================================================================
--- sw/source/ui/vba/vbadocument.cxx	(revision 276294)
+++ sw/source/ui/vba/vbadocument.cxx	(working copy)
@@ -238,7 +238,6 @@
 uno::Any SAL_CALL 
 SwVbaDocument::getAttachedTemplate() throw (uno::RuntimeException)
 {
-    SwDocShell* pDocShell = word::getDocShell( getModel() );
     uno::Reference< word::XTemplate > xTemplate;
     uno::Reference< document::XDocumentInfoSupplier > xDocInfoSupp( getModel(), uno::UNO_QUERY_THROW );
     uno::Reference< document::XDocumentPropertiesSupplier > xDocPropSupp( xDocInfoSupp->getDocumentInfo(), uno::UNO_QUERY_THROW );
@@ -250,7 +249,7 @@
 }
 
 void SAL_CALL 
-SwVbaDocument::setAttachedTemplate( const css::uno::Any& _attachedtemplate ) throw (uno::RuntimeException)
+SwVbaDocument::setAttachedTemplate( const css::uno::Any& /*_attachedtemplate*/ ) throw (uno::RuntimeException)
 {
     throw uno::RuntimeException();
 }
Index: sw/source/ui/vba/vbafind.cxx
===================================================================
--- sw/source/ui/vba/vbafind.cxx	(revision 276294)
+++ sw/source/ui/vba/vbafind.cxx	(working copy)
@@ -84,7 +84,7 @@
     mbReplace = sal_True;
 }
 
-rtl::OUString SwVbaFind::ReplaceWildcards( const rtl::OUString& rText ) throw ( uno::RuntimeException )
+rtl::OUString SwVbaFind::ReplaceWildcards( const rtl::OUString& /*rText*/ ) throw ( uno::RuntimeException )
 {
     // TODO:
     return rtl::OUString();
@@ -177,7 +177,7 @@
                 }
                 break;
             }
-            defalut:
+            default:
             {
                 result = sal_False;
             }
@@ -393,7 +393,7 @@
 
     if( Replace.hasValue() )
     {
-        sal_Int32 nValue;
+        sal_Int32 nValue(0);
         Replace >>= nValue;
         SetReplace( nValue );
     }
Index: sw/source/ui/vba/vbarange.cxx
===================================================================
--- sw/source/ui/vba/vbarange.cxx	(revision 276294)
+++ sw/source/ui/vba/vbarange.cxx	(working copy)
@@ -56,7 +56,7 @@
     initialize( rStart, rEnd );
 }
 
-SwVbaRange::SwVbaRange( const uno::Reference< ooo::vba::XHelperInterface >& rParent, const uno::Reference< uno::XComponentContext >& rContext, const uno::Reference< text::XTextDocument >& rTextDocument, const uno::Reference< text::XTextRange >& rStart, const uno::Reference< text::XTextRange >& rEnd, const uno::Reference< text::XText >& rText, sal_Bool _bMaySpanEndOfDocument ) throw (uno::RuntimeException) : SwVbaRange_BASE( rParent, rContext ),mxTextDocument( rTextDocument ), mbMaySpanEndOfDocument( _bMaySpanEndOfDocument ), mxText( rText )
+SwVbaRange::SwVbaRange( const uno::Reference< ooo::vba::XHelperInterface >& rParent, const uno::Reference< uno::XComponentContext >& rContext, const uno::Reference< text::XTextDocument >& rTextDocument, const uno::Reference< text::XTextRange >& rStart, const uno::Reference< text::XTextRange >& rEnd, const uno::Reference< text::XText >& rText, sal_Bool _bMaySpanEndOfDocument ) throw (uno::RuntimeException) : SwVbaRange_BASE( rParent, rContext ),mxTextDocument( rTextDocument ), mxText( rText ), mbMaySpanEndOfDocument( _bMaySpanEndOfDocument )
 {
     initialize( rStart, rEnd );
 }
Index: sw/source/ui/vba/vbaautotextentry.cxx
===================================================================
--- sw/source/ui/vba/vbaautotextentry.cxx	(revision 276294)
+++ sw/source/ui/vba/vbaautotextentry.cxx	(working copy)
@@ -44,7 +44,7 @@
 {
 }
 
-uno::Reference< word::XRange > SAL_CALL SwVbaAutoTextEntry::Insert( const uno::Reference< word::XRange >& _where, const uno::Any& _richtext ) throw ( uno::RuntimeException )
+uno::Reference< word::XRange > SAL_CALL SwVbaAutoTextEntry::Insert( const uno::Reference< word::XRange >& _where, const uno::Any& /*_richtext*/ ) throw ( uno::RuntimeException )
 {
     SwVbaRange* pWhere = dynamic_cast<SwVbaRange*>( _where.get() );
     if( pWhere )
Index: sw/source/ui/vba/vbadialog.cxx
===================================================================
--- sw/source/ui/vba/vbadialog.cxx	(revision 276294)
+++ sw/source/ui/vba/vbadialog.cxx	(working copy)
@@ -51,7 +51,7 @@
 rtl::OUString 
 SwVbaDialog::mapIndexToName( sal_Int32 nIndex )
 {
-    for( const WordDialogTable* pTable = aWordDialogTable; pTable->wdDialog != NULL; pTable++ )
+    for( const WordDialogTable* pTable = aWordDialogTable; pTable != NULL; pTable++ )
     {
         if( nIndex == pTable->wdDialog )
         {
Index: sw/source/ui/vba/vbatemplate.cxx
===================================================================
--- sw/source/ui/vba/vbatemplate.cxx	(revision 276294)
+++ sw/source/ui/vba/vbatemplate.cxx	(working copy)
@@ -61,7 +61,8 @@
 
     // the default template is "Normal.dot" in Word.
     rtl::OUString sGroup( RTL_CONSTASCII_USTRINGPARAM("Normal") );
-    if( sal_Int32 nIndex = msName.lastIndexOf( sal_Unicode('.') ) > 0 )
+    sal_Int32 nIndex = msName.lastIndexOf( sal_Unicode('.') );
+    if( nIndex > 0 )
     {
         sGroup = msName.copy( 0, msName.lastIndexOf( sal_Unicode('.') ) );
        // OSL_TRACE("SwVbaTemplate::AutoTextEntries: %s", rtl::OUStringToOString( sGroup, RTL_TEXTENCODING_UTF8 ).getStr() );
Index: sw/source/ui/vba/vbaparagraphformat.cxx
===================================================================
--- sw/source/ui/vba/vbaparagraphformat.cxx	(revision 276294)
+++ sw/source/ui/vba/vbaparagraphformat.cxx	(working copy)
@@ -203,7 +203,7 @@
     return nLevel;
 }
 
-void SAL_CALL SwVbaParagraphFormat::setOutlineLevel( sal_Int32 _outlinelevel ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaParagraphFormat::setOutlineLevel( sal_Int32 /*_outlinelevel*/ ) throw (uno::RuntimeException)
 {
     throw uno::RuntimeException( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("Not implemented") ), uno::Reference< uno::XInterface >() );
 }
@@ -247,7 +247,7 @@
 
 float SAL_CALL SwVbaParagraphFormat::getSpaceBefore() throw (uno::RuntimeException)
 {
-    sal_Int32 nSpace;
+    sal_Int32 nSpace = 0;
     mxParaProps->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("ParaTopMargin") ) ) >>= nSpace;
     return (float)( Millimeter::getInPoints( nSpace ) );
 }
@@ -302,7 +302,7 @@
     throw uno::RuntimeException( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("Not implemented") ), uno::Reference< uno::XInterface >() );
 }
 
-void SAL_CALL SwVbaParagraphFormat::setTabStops( const uno::Any& _tabstops ) throw (uno::RuntimeException)
+void SAL_CALL SwVbaParagraphFormat::setTabStops( const uno::Any& /*_tabstops*/ ) throw (uno::RuntimeException)
 {
     throw uno::RuntimeException( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("Not implemented") ), uno::Reference< uno::XInterface >() );
 }
@@ -484,7 +484,7 @@
 
 sal_Int16 SwVbaParagraphFormat::getCharHeight() throw (uno::RuntimeException)
 {
-    float fCharHeight;
+    float fCharHeight = 0.0;
     mxParaProps->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("CharHeight") ) ) >>= fCharHeight;
     return (sal_Int16)( Millimeter::getInHundredthsOfOneMillimeter( fCharHeight ) );
 }
Index: vbahelper/source/vbahelper/vbahelper.cxx
===================================================================
--- vbahelper/source/vbahelper/vbahelper.cxx	(revision 276294)
+++ vbahelper/source/vbahelper/vbahelper.cxx	(working copy)
@@ -856,7 +856,7 @@
 	return (fPixels/fConvertFactor)/POINTTO100THMILLIMETERFACTOR;
 }
 
-ConcreteXShapeGeometryAttributes::ConcreteXShapeGeometryAttributes( const css::uno::Reference< css::uno::XComponentContext >& xContext, const css::uno::Reference< css::drawing::XShape >& xShape )
+ConcreteXShapeGeometryAttributes::ConcreteXShapeGeometryAttributes( const css::uno::Reference< css::uno::XComponentContext >& /*xContext*/, const css::uno::Reference< css::drawing::XShape >& xShape )
 {
     m_pShapeHelper.reset( new ShapeHelper( xShape ) );
 }
@@ -901,7 +901,6 @@
     }
     else
     {
-        const uno::Reference< frame::XModel > xModel( xModel2, uno::UNO_QUERY );
         if ( xModel.is() )
         {
             const uno::Reference< frame::XController > xController( xModel->getCurrentController(), uno::UNO_SET_THROW );
Index: vbahelper/source/vbahelper/vbashapes.cxx
===================================================================
--- vbahelper/source/vbahelper/vbashapes.cxx	(revision 276294)
+++ vbahelper/source/vbahelper/vbashapes.cxx	(working copy)
@@ -373,7 +373,7 @@
 }
 
 uno::Any
-ScVbaShapes::AddTextboxInWriter( sal_Int32 _nOrientation, sal_Int32 _nLeft, sal_Int32 _nTop, sal_Int32 _nWidth, sal_Int32 _nHeight ) throw (uno::RuntimeException)
+ScVbaShapes::AddTextboxInWriter( sal_Int32 /*_nOrientation*/, sal_Int32 _nLeft, sal_Int32 _nTop, sal_Int32 _nWidth, sal_Int32 _nHeight ) throw (uno::RuntimeException)
 {
     rtl::OUString sCreateShapeName( rtl::OUString::createFromAscii( "com.sun.star.drawing.TextShape" ) );
     sal_Int32 nXPos = Millimeter::getInHundredthsOfOneMillimeter( _nLeft );
Index: vbahelper/source/vbahelper/vbafontbase.cxx
===================================================================
--- vbahelper/source/vbahelper/vbafontbase.cxx	(revision 276294)
+++ vbahelper/source/vbahelper/vbafontbase.cxx	(working copy)
@@ -246,7 +246,7 @@
 }
 
 void SAL_CALL
-VbaFontBase::setUnderline( const uno::Any& aValue ) throw ( uno::RuntimeException )
+VbaFontBase::setUnderline( const uno::Any& /*aValue*/ ) throw ( uno::RuntimeException )
 {
 /*
 	// default
