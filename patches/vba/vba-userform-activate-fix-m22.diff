--- basic/source/classes/sbxmod.cxx.bak	2008-07-03 15:35:16.000000000 +0800
+++ basic/source/classes/sbxmod.cxx	2008-07-03 15:48:45.000000000 +0800
@@ -2296,10 +2296,12 @@ class FormObjEventListenerImpl : public 
     SbUserFormModule* mpUserForm;
     uno::Reference< lang::XComponent > mxComponent;
     bool mbDisposed;
+    sal_Bool mbOpened;
+    sal_Bool mbActivated;
     FormObjEventListenerImpl(); // not defined
     FormObjEventListenerImpl(const FormObjEventListenerImpl&); // not defined
 public:
-    FormObjEventListenerImpl( SbUserFormModule* pUserForm, const uno::Reference< lang::XComponent >& xComponent ) : mpUserForm( pUserForm ), mxComponent( xComponent) , mbDisposed( false )
+    FormObjEventListenerImpl( SbUserFormModule* pUserForm, const uno::Reference< lang::XComponent >& xComponent ) : mpUserForm( pUserForm ), mxComponent( xComponent) , mbDisposed( false ), mbOpened( sal_False ), mbActivated( sal_False )
     {
         if ( mxComponent.is() );
         {
@@ -2328,7 +2330,18 @@ public:
         }
         catch( uno::Exception& ) {}
     } 
-    virtual void SAL_CALL windowOpened( const lang::EventObject& /*e*/ ) throw (uno::RuntimeException) {}
+    virtual void SAL_CALL windowOpened( const lang::EventObject& /*e*/ ) throw (uno::RuntimeException)
+    {
+        if ( mpUserForm  )
+        {
+            mbOpened = sal_True;
+            if ( mbActivated )
+            {
+                mbOpened = mbActivated = sal_False;
+                mpUserForm->triggerActivateEvent();
+            }
+        }
+    }
     virtual void SAL_CALL windowClosing( const lang::EventObject& /*e*/ ) throw (uno::RuntimeException) {}
     virtual void SAL_CALL windowClosed( const lang::EventObject& /*e*/ ) throw (uno::RuntimeException) {}
     virtual void SAL_CALL windowMinimized( const lang::EventObject& /*e*/ ) throw (uno::RuntimeException) {}
@@ -2336,7 +2349,14 @@ public:
     virtual void SAL_CALL windowActivated( const lang::EventObject& /*e*/ ) throw (uno::RuntimeException)
     {
         if ( mpUserForm  )
-            mpUserForm->triggerActivateEvent();
+        {
+            mbActivated = sal_True;
+            if ( mbOpened )
+            {
+                mbOpened = mbActivated = sal_False;
+                mpUserForm->triggerActivateEvent();
+            }
+        }
     }
    
     virtual void SAL_CALL windowDeactivated( const lang::EventObject& /*e*/ ) throw (uno::RuntimeException)
