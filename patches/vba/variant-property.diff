diff --git basic/source/classes/sb.cxx basic/source/classes/sb.cxx
index e47234f..349c2cc 100644
--- basic/source/classes/sb.cxx
+++ basic/source/classes/sb.cxx
@@ -433,7 +433,8 @@ SbClassModuleObject::SbClassModuleObject( SbModule* pClassModule )
 			SbProcedureProperty* pNewProp = new SbProcedureProperty
 				( pProcedureProp->GetName(), pProcedureProp->GetType() );
 				// ( pProcedureProp->GetName(), pProcedureProp->GetType(), this );
-			pNewProp->ResetFlag( SBX_NO_BROADCAST );
+			pNewProp->SetFlags( nFlags_ ); // Copy flags
+			pNewProp->ResetFlag( SBX_NO_BROADCAST ); // except the Broadcast if it was set
 			pProcedureProp->SetFlags( nFlags_ );
 			pProps->PutDirect( pNewProp, i );
 			StartListening( pNewProp->GetBroadcaster(), TRUE );
diff --git basic/source/comp/dim.cxx basic/source/comp/dim.cxx
index e0c93fa..d2dc366 100644
--- basic/source/comp/dim.cxx
+++ basic/source/comp/dim.cxx
@@ -745,6 +745,7 @@ void SbiParser::DefEnum( BOOL bPrivate )
 SbiProcDef* SbiParser::ProcDecl( BOOL bDecl )
 {
 	BOOL bFunc = BOOL( eCurTok == FUNCTION );
+	BOOL bProp = BOOL( eCurTok == GET || eCurTok == SET || eCurTok == LET );
 	if( !TestSymbol() ) return NULL;
 	String aName( aSym );
 	SbxDataType eType = eScanType;
@@ -865,7 +866,7 @@ SbiProcDef* SbiParser::ProcDecl( BOOL bDecl )
 //	if( pDef->GetType() == SbxOBJECT )
 //		pDef->SetType( SbxVARIANT ),
 //		Error( SbERR_SYNTAX );
-	if( pDef->GetType() == SbxVARIANT && !bFunc )
+	if( pDef->GetType() == SbxVARIANT && !( bFunc || bProp ) )
 		pDef->SetType( SbxEMPTY );
 	return pDef;
 }
