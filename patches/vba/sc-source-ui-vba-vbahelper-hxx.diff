--- sc/source/ui/vba/vbahelper.hxx	
+++ sc/source/ui/vba/vbahelper.hxx
@@ -37,6 +37,9 @@
 
 #include <com/sun/star/drawing/XShape.hpp>
 #include <com/sun/star/script/BasicErrorException.hpp>
+#include <com/sun/star/script/XTypeConverter.hpp>
+#include <com/sun/star/lang/IllegalArgumentException.hpp>
+
 #include <basic/sberrors.hxx>
 #include <cppuhelper/implbase1.hxx>
 #include <com/sun/star/frame/XModel.hpp>
@@ -48,6 +51,17 @@ namespace org 
 {
 	namespace openoffice 
 	{
+		template < class T > 
+		css::uno::Reference< T > getXSomethingFromArgs( css::uno::Sequence< css::uno::Any > const & args, sal_Int32 nPos, bool bCanBeNull = true ) throw (css::lang::IllegalArgumentException)
+		{
+			if ( args.getLength() < ( nPos + 1) )
+				throw css::lang::IllegalArgumentException();
+			css::uno::Reference< T > aSomething( args[ nPos ], css::uno::UNO_QUERY );
+			if ( !bCanBeNull && !aSomething.is() )
+				throw css::lang::IllegalArgumentException();
+			return aSomething;
+		}
+		css::uno::Reference< css::script::XTypeConverter > getTypeConverter( const css::uno::Reference< css::uno::XComponentContext >& xContext ) throw (css::uno::RuntimeException);
 
 		void dispatchRequests (css::uno::Reference< css::frame::XModel>& xModel,rtl::OUString & aUrl) ;
 		void dispatchRequests (css::uno::Reference< css::frame::XModel>& xModel,rtl::OUString & aUrl, css::uno::Sequence< css::beans::PropertyValue >& sProps ) ;
@@ -113,15 +127,15 @@ public:
 		return m_nMillimeter * 2.834645669; // 72 / 25.4mm
 	}    
 
-	static int getInHundredthsOfOneMillimeter(double points)
+	static sal_Int32 getInHundredthsOfOneMillimeter(double points)
 	{
-		int mm = static_cast<int>(double(points * factor));
+		sal_Int32 mm = static_cast<sal_Int32>(points * factor);
 		return mm;
 	}
     
 	static double getInPoints(int _hmm)
 	{
-		float points = static_cast<float>(double(_hmm / factor));
+		double points = double( static_cast<double>(_hmm) / factor);
 		return points;
 	}
 };
