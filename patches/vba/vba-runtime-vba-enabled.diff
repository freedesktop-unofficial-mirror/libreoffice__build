Index: basic/source/inc/runtime.hxx
===================================================================
RCS file: /cvs/script/basic/source/inc/runtime.hxx,v
retrieving revision 1.25
diff -u -p -r1.25 runtime.hxx
--- basic/source/inc/runtime.hxx	29 Sep 2005 18:41:20 -0000	1.25
+++ basic/source/inc/runtime.hxx	1 Dec 2005 13:24:13 -0000
@@ -491,6 +491,8 @@ public:
 	SbxArray* GetParams();
 
 	SbxBase* FindElementExtern( const String& rName );
+	static bool isVBAEnabled();
+
 };
 
 inline void checkArithmeticOverflow( double d )
Index: basic/source/runtime/runtime.cxx
===================================================================
RCS file: /cvs/script/basic/source/runtime/runtime.cxx,v
retrieving revision 1.24
diff -u -p -r1.24 runtime.cxx
--- basic/source/runtime/runtime.cxx	29 Sep 2005 18:42:01 -0000	1.24
+++ basic/source/runtime/runtime.cxx	1 Dec 2005 13:24:22 -0000
@@ -66,6 +66,17 @@
 // Makro MEMBER()
 #include <macfix.hxx>
 
+#include <svtools/fltrcfg.hxx>
+bool SbiRuntime::isVBAEnabled()
+{
+	bool result = false;
+#ifdef ENABLE_VBA
+	SbiInstance* pInst = pINST;
+	if ( pInst && pINST->pRun )
+		result = pInst->pRun->GetImageFlag( SBIMG_VBASUPPORT );
+#endif //ENABLE_VB
+	return result; 
+}
 
 // #91147 Global reschedule flag
 static BOOL bStaticGlobalEnableReschedule = TRUE;
diff -rup basic.orig/source/comp/codegen.cxx basic/source/comp/codegen.cxx
--- basic.orig/source/comp/codegen.cxx	2006-02-03 17:39:00.000000000 +0000
+++ basic/source/comp/codegen.cxx	2006-02-10 14:49:58.000000000 +0000
@@ -139,6 +139,8 @@ void SbiCodeGen::Save()
 #ifdef ENABLE_VBA
 	if( pParser->bOptionBaseOne )
 		p->SetFlag( SBIMG_OPTIONBASEONE );
+	if( pParser->bVBASupportOn )
+		p->SetFlag( SBIMG_VBASUPPORT );
 #endif //ENABLE_VBA
 	
 	int nIfaceCount = 0;
diff -rup basic.orig/source/comp/parser.cxx basic/source/comp/parser.cxx
--- basic.orig/source/comp/parser.cxx	2006-02-03 17:39:00.000000000 +0000
+++ basic/source/comp/parser.cxx	2006-02-10 14:43:27.000000000 +0000
@@ -153,6 +153,7 @@ SbiParser::SbiParser( StarBASIC* pb, SbM
 	bClassModule = FALSE;
 #ifdef ENABLE_VBA
 	bOptionBaseOne = FALSE;
+	bVBASupportOn = FALSE;
 #endif //ENABLE_VBA
 	pPool	 = &aPublics;
 	for( short i = 0; i < 26; i++ )
@@ -717,7 +718,19 @@ void SbiParser::Option()
 		case CLASSMODULE:
 			bClassModule = TRUE; 
 			break;
-
+#ifdef ENABLE_VBA
+		case VBASUPPORT:
+			if( Next() == NUMBER )
+			{
+				if ( nVal == 1 || nVal == 0 )
+				{
+					bVBASupportOn = ( nVal == 1 );
+					break;
+				}
+			}
+			Error( SbERR_EXPECTED, "0/1" );
+			break;
+#endif //ENABLE_VBA
 		default:
 			Error( SbERR_BAD_OPTION, eCurTok );
 	}
diff -rup basic.orig/source/comp/token.cxx basic/source/comp/token.cxx
--- basic.orig/source/comp/token.cxx	2006-02-03 17:39:00.000000000 +0000
+++ basic/source/comp/token.cxx	2006-02-10 14:52:41.000000000 +0000
@@ -185,6 +185,9 @@ static TokenTable aTokTable_Basic [] = {
 	{ TYPEOF,	"TypeOf" },
 	{ UNTIL,	"Until" },
 	{ TVARIANT,	"Variant" },
+#ifdef ENABLE_VBA
+	{ VBASUPPORT,	"VbaSupport" },
+#endif //ENABLE_VBA
 	{ WEND,		"Wend" },
 	{ WHILE,	"While" },
 	{ WITH,		"With" },
diff -rup basic.orig/source/inc/image.hxx basic/source/inc/image.hxx
--- basic.orig/source/inc/image.hxx	2006-02-03 17:39:00.000000000 +0000
+++ basic/source/inc/image.hxx	2006-02-10 14:49:31.000000000 +0000
@@ -105,6 +105,7 @@ public:
 #define	SBIMG_CLASSMODULE	0x0008	// OPTION ClassModule is active
 #ifdef ENABLE_VBA
 #define	SBIMG_OPTIONBASEONE	0x0010	// OPTION Base is 1
+#define	SBIMG_VBASUPPORT	0x0020	// OPTION VBASupport is 1
 #endif //ENABLE_VBA
 
 #endif
diff -rup basic.orig/source/inc/parser.hxx basic/source/inc/parser.hxx
--- basic.orig/source/inc/parser.hxx	2006-02-03 17:39:00.000000000 +0000
+++ basic/source/inc/parser.hxx	2006-02-10 14:46:50.000000000 +0000
@@ -96,6 +96,7 @@ public:
 	BOOL          bClassModule;		// TRUE: OPTION ClassModule
 #ifdef ENABLE_VBA
 	BOOL          bOptionBaseOne;		// TRUE: OPTION Base 1 otherwise default Base 0
+	BOOL          bVBASupportOn;		// TRUE: OPTION VBASupport 1 otherwise default False
 #endif //ENABLE_VBA
 	IfaceVector   aIfaceVector;		// Holds all interfaces implemented by a class module
 	SbxDataType   eDefTypes[26];	// DEFxxx-Datentypen
diff -rup basic.orig/source/inc/token.hxx basic/source/inc/token.hxx
--- basic.orig/source/inc/token.hxx	2006-02-03 17:39:00.000000000 +0000
+++ basic/source/inc/token.hxx	2006-02-10 14:42:13.000000000 +0000
@@ -122,5 +122,8 @@ enum SbiToken {
 	JS_GT, JS_GE, JS_LSHIFT, JS_RSHIFT, JS_RSHIFT_Z,
 	JS_PLUS, JS_MINUS, JS_MUL, JS_DIV, JS_MOD, JS_LOG_NOT, JS_BIT_NOT,
 	JS_INC, JS_DEC, JS_LPAREN, JS_RPAREN, JS_LINDEX, JS_RINDEX
+#ifdef ENABLE_VBA
+	, VBASUPPORT
+#endif //ENABLE_VBA
 };
 
 #ifdef SbiTokenSHAREDTMPUNDEFIndex: svx/source/msfilter/svxmsbas.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/msfilter/svxmsbas.cxx,v
retrieving revision 1.14
diff -u -p -r1.14 svxmsbas.cxx
--- svx/source/msfilter/svxmsbas.cxx	11 Nov 2005 09:11:46 -0000	1.14
+++ svx/source/msfilter/svxmsbas.cxx	13 Feb 2006 12:48:41 -0000
@@ -345,7 +346,10 @@ BOOL SvxImportMSVBasic::ImportCode_Impl(
                         DBG_ERRORFILE( "SvxImportMSVBasic::ImportCode_Impl - unknown module type" );
                         break;
                 }
+#ifdef ENABLE_VBA
+				modeTypeComment = modeTypeComment + ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Option VBASupport 1\n" ) );
 
+#endif //ENABLE_VBA
 				String sModule(sBasicModule); //#i52606# no need to split Macros in 64KB blocks any more!
 				String sTemp;
 				if (bAsComment)
