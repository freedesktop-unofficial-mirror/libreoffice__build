--- oovbaapi/org/openoffice/msforms/XListBox.idl.bak	2008-07-07 14:13:05.000000000 +0800
+++ oovbaapi/org/openoffice/msforms/XListBox.idl	2008-07-07 14:14:20.000000000 +0800
@@ -51,6 +51,7 @@ interface XListBox: com::sun::star::uno:
 	[attribute] boolean MultiSelect;
 	//[attribute] sequence< boolean > Selected;
 	void AddItem( [in] any pvargItem, [in] any pvargIndex );
+	void removeItem( [in] any index );
 	void Clear();
     any Selected( [in] long index );
 };
--- sc/source/ui/vba/vbalistbox.hxx.bak	2008-07-07 14:13:20.000000000 +0800
+++ sc/source/ui/vba/vbalistbox.hxx	2008-07-07 14:14:20.000000000 +0800
@@ -72,6 +72,7 @@ public:
 
 	// Methods
 	virtual void SAL_CALL AddItem( const css::uno::Any& pvargItem, const css::uno::Any& pvargIndex ) throw (css::uno::RuntimeException);
+    virtual void SAL_CALL removeItem( const css::uno::Any& index ) throw (css::uno::RuntimeException);
 	virtual void SAL_CALL Clear(  ) throw (css::uno::RuntimeException);
 
 
--- sc/source/ui/vba/vbalistbox.cxx.bak	2008-07-07 14:13:28.000000000 +0800
+++ sc/source/ui/vba/vbalistbox.cxx	2008-07-08 10:41:33.000000000 +0800
@@ -224,6 +224,35 @@ ScVbaListBox::AddItem( const uno::Any& p
 }
 
 void SAL_CALL 
+ScVbaListBox::removeItem( const uno::Any& index ) throw (uno::RuntimeException)
+{
+    sal_Int32 nIndex = 0;
+    // for int index
+	if ( index >>= nIndex  )
+	{
+		uno::Sequence< rtl::OUString > sList;
+		m_xProps->getPropertyValue( ITEMS ) >>= sList;
+        if( nIndex < 0 || nIndex > ( sList.getLength() - 1 ) )
+            throw uno::RuntimeException( rtl::OUString::createFromAscii( "Invalid index" ), uno::Reference< uno::XInterface > () );
+        if( sList.hasElements() )
+        {
+            if( sList.getLength() == 1 )
+            {
+                Clear();
+                return;
+            }
+            for( sal_Int32 i = nIndex; i < ( sList.getLength()-1 ); i++ )
+            {
+                sList[i] = sList[i+1];
+            }
+			sList.realloc(  sList.getLength() - 1 );
+		}
+
+		m_xProps->setPropertyValue( ITEMS, uno::makeAny( sList ) );
+	}
+}
+
+void SAL_CALL 
 ScVbaListBox::Clear(  ) throw (uno::RuntimeException)
 {
 	// urk, setValue doesn't seem to work !!
