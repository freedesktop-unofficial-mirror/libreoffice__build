--- sc/source/ui/vba/vbalineformat.cxx	
+++ sc/source/ui/vba/vbalineformat.cxx
@@ -292,7 +292,7 @@ ScVbaLineFormat::getStyle() throw (uno::
 {
     //OpenOffice.org only supports one LineStyle (other than the DashStyles)
     //Therefore we can only return the SingleLine
-    return sal_Int16(0);
+    return 1;
 }
 
 void SAL_CALL 
@@ -366,65 +366,65 @@ ScVbaLineFormat::setDashStyle( sal_Int32
     else
     {
         m_xPropertySet->setPropertyValue( rtl::OUString::createFromAscii( "LineStyle" ), uno::makeAny( drawing::LineStyle_DASH ) );
-        drawing::LineDash  *pLineDash = new drawing::LineDash();
+        drawing::LineDash  pLineDash;
         Millimeter aMillimeter( m_nLineWeight );
         sal_Int32 nPixel = static_cast< sal_Int32 >( aMillimeter.getInHundredthsOfOneMillimeter() );
         switch( _dashstyle )
         {
         case office::MsoLineDashStyle::msoLineDashDot:
-            pLineDash->Dots = 1;
-            pLineDash->DotLen = nPixel;
-            pLineDash->Dashes = 1;
-            pLineDash->DashLen = 5 * nPixel;
-            pLineDash->Distance = 4 * nPixel;
+            pLineDash.Dots = 1;
+            pLineDash.DotLen = nPixel;
+            pLineDash.Dashes = 1;
+            pLineDash.DashLen = 5 * nPixel;
+            pLineDash.Distance = 4 * nPixel;
             break;
         case office::MsoLineDashStyle::msoLineLongDashDot:
-            pLineDash->Dots = 1;
-            pLineDash->DotLen = nPixel;
-            pLineDash->Dashes = 1;
-            pLineDash->DashLen = 10 * nPixel;
-            pLineDash->Distance = 4 * nPixel;
+            pLineDash.Dots = 1;
+            pLineDash.DotLen = nPixel;
+            pLineDash.Dashes = 1;
+            pLineDash.DashLen = 10 * nPixel;
+            pLineDash.Distance = 4 * nPixel;
             break;
         case office::MsoLineDashStyle::msoLineDash:
-            pLineDash->Dots = 0;
-            pLineDash->DotLen = 0;
-            pLineDash->Dashes = 1;
-            pLineDash->DashLen = 6 * nPixel;
-            pLineDash->Distance = 4 * nPixel;
+            pLineDash.Dots = 0;
+            pLineDash.DotLen = 0;
+            pLineDash.Dashes = 1;
+            pLineDash.DashLen = 6 * nPixel;
+            pLineDash.Distance = 4 * nPixel;
             break;
         case office::MsoLineDashStyle::msoLineDashDotDot:
-            pLineDash->Dots = 2;
-            pLineDash->DotLen = nPixel;
-            pLineDash->Dashes = 1;
-            pLineDash->DashLen = 10 * nPixel;
-            pLineDash->Distance = 3 * nPixel;
+            pLineDash.Dots = 2;
+            pLineDash.DotLen = nPixel;
+            pLineDash.Dashes = 1;
+            pLineDash.DashLen = 10 * nPixel;
+            pLineDash.Distance = 3 * nPixel;
             break;
         case office::MsoLineDashStyle::msoLineLongDash:
-            pLineDash->Dots = 0;
-            pLineDash->DotLen = 0;
-            pLineDash->Dashes = 1;
-            pLineDash->DashLen = 10 * nPixel;
-            pLineDash->Distance = 4 * nPixel;
+            pLineDash.Dots = 0;
+            pLineDash.DotLen = 0;
+            pLineDash.Dashes = 1;
+            pLineDash.DashLen = 10 * nPixel;
+            pLineDash.Distance = 4 * nPixel;
             break;
         case office::MsoLineDashStyle::msoLineSquareDot:
-            pLineDash->Dots = 1;
-            pLineDash->DotLen = nPixel;
-            pLineDash->Dashes = 0;
-            pLineDash->DashLen = 0;
-            pLineDash->Distance = nPixel;
+            pLineDash.Dots = 1;
+            pLineDash.DotLen = nPixel;
+            pLineDash.Dashes = 0;
+            pLineDash.DashLen = 0;
+            pLineDash.Distance = nPixel;
             break;
         case office::MsoLineDashStyle::msoLineRoundDot:
-            pLineDash->Dots = 1;
-            pLineDash->DotLen = nPixel;
-            pLineDash->Dashes = 0;
-            pLineDash->DashLen = 0;
-            pLineDash->Distance = nPixel;
+            pLineDash.Dots = 1;
+            pLineDash.DotLen = nPixel;
+            pLineDash.Dashes = 0;
+            pLineDash.DashLen = 0;
+            pLineDash.Distance = nPixel;
             break;
         default:
             throw uno::RuntimeException( rtl::OUString::createFromAscii("this MsoLineDashStyle is not supported."), uno::Reference< uno::XInterface >() );
             break; 
         }
-        m_xPropertySet->setPropertyValue( rtl::OUString::createFromAscii( "LineDash" ), uno::makeAny( *pLineDash ) );
+        m_xPropertySet->setPropertyValue( rtl::OUString::createFromAscii( "LineDash" ), uno::makeAny( pLineDash ) );
     }
 }
 
