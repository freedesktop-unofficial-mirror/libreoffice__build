diff --git sc/source/ui/vba/vbarange.cxx sc/source/ui/vba/vbarange.cxx
index 3b62d7b..c149923 100644
--- sc/source/ui/vba/vbarange.cxx
+++ sc/source/ui/vba/vbarange.cxx
@@ -5330,6 +5338,34 @@ uno::Reference< excel::XRange > 
 ScVbaRange::intersect( const css::uno::Reference< oo::excel::XRange >& xRange ) throw (script::BasicErrorException, uno::RuntimeException)
 {
 	uno::Reference< excel::XRange > xResult;
+	sal_Int32 nLen = m_Areas->getCount();
+	if ( nLen > 1 ) 
+	{
+		ScRangeList aCellRanges;
+		for ( sal_Int32 index = 1; index != nLen; ++index )
+		{
+			uno::Reference< excel::XRange > xAreaRange( getArea( index ), uno::UNO_QUERY_THROW );
+			ScVbaRange* pRange = dynamic_cast< ScVbaRange * >( xAreaRange.get());
+			if ( pRange ) 
+			{
+				uno::Reference< excel::XRange > xResultRange = pRange->intersect( xAreaRange );
+				if ( xResultRange.is() )
+				{
+					ScRange refRange;
+					RangeHelper aRange( xResultRange->getCellRange() );
+					ScUnoConversion::FillScRange( refRange, aRange.getCellRangeAddressable()->getRangeAddress() );
+					aCellRanges.Append( refRange );
+				}	 	
+			}
+		}
+		if ( aCellRanges.First() != aCellRanges.Last() )
+		{
+			uno::Reference< sheet::XSheetCellRangeContainer > xRanges( new ScCellRangesObj( getScDocShell(), aCellRanges ) );
+			xResult = new ScVbaRange( getParent(), mxContext, xRanges );
+		}
+		return xResult;
+	}
+
 	try
 	{
 		uno::Reference< sheet::XCellRangesQuery > xQuery( mxRange, uno::UNO_QUERY_THROW );
