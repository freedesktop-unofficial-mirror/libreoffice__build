--- sc/source/ui/vba/vbarange.cxx	
+++ sc/source/ui/vba/vbarange.cxx
@@ -201,8 +201,6 @@ uno::Any lcl_makeRange( uno::Reference< 
 
 SfxItemSet*  ScVbaRange::getCurrentDataSet( ) throw ( uno::RuntimeException )
 {
-	// REQUIRES_CORE_CHANGE
-	/*
 	uno::Reference< uno::XInterface > xIf( mxRange, uno::UNO_QUERY_THROW );
 	ScCellRangeObj* pUnoCellRange = dynamic_cast< ScCellRangeObj* >( xIf.get() );
 	SfxItemSet* pDataSet = 	pUnoCellRange->GetCurrentDataSet( true );
@@ -210,8 +208,6 @@ SfxItemSet*  ScVbaRange::getCurrentDataS
 	if ( !pDataSet )
 		throw uno::RuntimeException( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Can't access Itemset for range" ) ), uno::Reference< uno::XInterface >() );
 	return pDataSet;	
-	*/
-	return NULL;
 }
 
 class SingleRangeEnumeration : public EnumerationHelper_BASE
@@ -377,7 +373,6 @@ public:
 
 	rtl::OUString getNumberFormatString()
 	{
-		/* REQUIRES_CORE_CHANGE
 		uno::Reference< uno::XInterface > xIf( mxRangeProps, uno::UNO_QUERY_THROW );
 		ScCellRangeObj* pUnoCellRange = dynamic_cast<  ScCellRangeObj* >( xIf.get() );
 		if ( pUnoCellRange )
@@ -390,7 +385,6 @@ public:
 			if ( eState == SFX_ITEM_DONTCARE )
 				return rtl::OUString();
 		}
-		*/
 		
 	
 		uno::Reference< beans::XPropertySet > xNumberProps( getNumberProps(), uno::UNO_QUERY_THROW );
@@ -2179,8 +2173,7 @@ getPasteFlags (sal_Int32 Paste)
 		nFlags = IDF_FORMULA;break;
         case excel::XlPasteType::xlPasteFormulasAndNumberFormats : 
         case excel::XlPasteType::xlPasteValues: 
-		// REQUIRES_CORE_CHANGE
-		//nFlags = ( IDF_VALUE | IDF_DATETIME | IDF_STRING | IDF_SPECIAL_BOOLEAN ); break;
+		nFlags = ( IDF_VALUE | IDF_DATETIME | IDF_STRING | IDF_SPECIAL_BOOLEAN ); break;
 		nFlags = ( IDF_VALUE | IDF_DATETIME | IDF_STRING ); break;
         case excel::XlPasteType::xlPasteValuesAndNumberFormats:
 		nFlags = IDF_VALUE | IDF_ATTRIB; break;
@@ -2561,11 +2554,10 @@ ScVbaRange::Sort( const uno::Any& Key1, 
 
 	RangeHelper thisRange( mxRange );
 	table::CellRangeAddress thisRangeAddress = thisRange.getCellRangeAddressable()->getRangeAddress();
+	SCTAB nTab = thisRangeAddress.Sheet;
 
 	ScSortParam aSortParam;
-	//  REQUIRES_CORE_CHANGE
-	//SCTAB nTab = thisRangeAddress.Sheet;
-	//pDoc->GetSortParam( aSortParam, nTab );
+	pDoc->GetSortParam( aSortParam, nTab );
 
 	if ( DataOption1.hasValue() )
 		DataOption1 >>= nDataOption1;
@@ -2619,16 +2611,13 @@ ScVbaRange::Sort( const uno::Any& Key1, 
 	if ( nOrientation == excel::XlSortOrientation::xlSortRows )
 		bIsSortColumns = sal_True;
 
-	// REQUIRES_CORE_CHANGE
-	//sal_Int16 nHeader = aSortParam.nCompatHeader;
-	sal_Int16 nHeader = 0;
+	sal_Int16 nHeader = aSortParam.nCompatHeader;
 	sal_Bool bContainsHeader = sal_False;
 
 	if ( Header.hasValue() )
 	{
 		nHeader = ::comphelper::getINT16( Header );
-		// REQUIRES_CORE_CHANGE
-		//aSortParam.nCompatHeader = nHeader;
+		aSortParam.nCompatHeader = nHeader;
 	}			
 
 	if ( nHeader == excel::XlYesNoGuess::xlGuess )
@@ -2640,8 +2629,7 @@ ScVbaRange::Sort( const uno::Any& Key1, 
 		else
 			nHeader =  excel::XlYesNoGuess::xlNo; 
 		// save set param as default
-		// REQUIRES_CORE_CHANGE
-		//aSortParam.nCompatHeader = nHeader;
+		aSortParam.nCompatHeader = nHeader;
 	}
 
 	if ( nHeader == excel::XlYesNoGuess::xlYes )
@@ -2730,8 +2718,7 @@ ScVbaRange::Sort( const uno::Any& Key1, 
 	nIndex = 	findSortPropertyIndex( sortDescriptor, CONTS_HEADER );
 	sortDescriptor[ nIndex ].Value <<= bContainsHeader;
 
-	//  REQUIRES_CORE_CHANGE
-	//pDoc->SetSortParam( aSortParam, nTab );
+	pDoc->SetSortParam( aSortParam, nTab );
 	xSort->sort( sortDescriptor );
 
 	// #FIXME #TODO
@@ -3685,12 +3672,8 @@ ScVbaRange::PrintOut( const uno::Any& Fr
 }
 
 void SAL_CALL
-ScVbaRange::AutoFill(  const uno::Reference< excel::XRange >& /*Destination*/, const uno::Any& /*Type*/ ) throw (uno::RuntimeException) 
+ScVbaRange::AutoFill(  const uno::Reference< excel::XRange >& Destination, const uno::Any& Type ) throw (uno::RuntimeException) 
 {
-	// REQUIRES_CORE_CHANGE
-	if ( true )
-		throw uno::RuntimeException( rtl::OUString::createFromAscii("Not Supported, needs core change" ), uno::Reference< uno::XInterface >() );
-/*
 	uno::Reference< excel::XRange > xDest( Destination, uno::UNO_QUERY_THROW );
 	ScVbaRange* pRange = dynamic_cast< ScVbaRange* >( xDest.get() );
 	RangeHelper destRangeHelper( pRange->mxRange );
@@ -3810,9 +3793,7 @@ ScVbaRange::AutoFill(  const uno::Refere
 	ScDocFunc aFunc(*pDocSh);
 		aFunc.FillAuto( aSourceRange, NULL, eDir, eCmd, eDateCmd,
 									nCount, fStep, fEndValue, TRUE, TRUE );
-*/
 }
-
 sal_Bool SAL_CALL
 ScVbaRange::GoalSeek( const uno::Any& Goal, const uno::Reference< excel::XRange >& ChangingCell ) throw (uno::RuntimeException)
 {
