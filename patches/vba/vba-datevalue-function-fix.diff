--- basic/source/runtime/methods.cxx.orig	2008-09-05 10:23:14.000000000 +0800
+++ basic/source/runtime/methods.cxx	2008-09-05 10:43:33.000000000 +0800
@@ -1991,15 +1991,14 @@ RTLFUNC(DateValue)
 		// It seems that both locale number formatter and English number formatter 
 		// are supported in Visual Basic.
 		LanguageType eLangType = GetpApp()->GetSettings().GetLanguage();
-		if( !bSuccess && !(eLangType & LANGUAGE_ENGLISH))
+		if( !bSuccess && ( eLangType != LANGUAGE_ENGLISH_US ) )
 		{
 			// Create a new SvNumberFormatter by using LANGUAGE_ENGLISH to get the date value;
 			com::sun::star::uno::Reference< com::sun::star::lang::XMultiServiceFactory > 
 				xFactory = comphelper::getProcessServiceFactory();
-			SvNumberFormatter* pFormatterEn = new SvNumberFormatter( xFactory, LANGUAGE_ENGLISH );
-			bSuccess = pFormatterEn->IsNumberFormat( aStr, nIndex, fResult );
-			nType = pFormatterEn->GetType( nIndex );
-			delete pFormatterEn;
+			SvNumberFormatter aFormatter( xFactory, LANGUAGE_ENGLISH_US );
+			bSuccess = aFormatter.IsNumberFormat( aStr, nIndex, fResult );
+			nType = aFormatter.GetType( nIndex );
 		}
 
 		if(bSuccess && (nType==NUMBERFORMAT_DATE || nType==NUMBERFORMAT_DATETIME))
