--- sc/source/ui/vba/vbaworksheet.cxx	2007-03-02 14:56:07.000000000 +0000
+++ sc/source/ui/vba/vbaworksheet.cxx	2007-02-13 18:05:42.000000000 +0000
@@ -75,6 +41,8 @@
 #include "vbachartobjects.hxx"
 #include "vbapivottables.hxx"
 #include "vbacombobox.hxx"
+#include "vbaoleobject.hxx"
+#include "vbaoleobjects.hxx"
 
 #define STANDARDWIDTH 2267 
 #define STANDARDHEIGHT 427
@@ -548,6 +516,25 @@ ScVbaWorksheet::Comments( const uno::Any
 	return makeAny( xColl );
 }
 
+uno::Any SAL_CALL
+ScVbaWorksheet::OLEObjects( const uno::Any& Index ) throw (uno::RuntimeException)
+{
+    ScVbaOLEObjects* aOleObjects;
+    uno::Reference< sheet::XSpreadsheet > xSpreadsheet( getSheet(), uno::UNO_QUERY_THROW );
+    uno::Reference< drawing::XDrawPageSupplier > xDrawPageSupplier( xSpreadsheet, uno::UNO_QUERY_THROW );
+    uno::Reference< drawing::XDrawPage > xDrawPage( xDrawPageSupplier->getDrawPage(), uno::UNO_QUERY_THROW );
+    uno::Reference< container::XIndexAccess > xIndexAccess( xDrawPage, uno::UNO_QUERY_THROW );
+    aOleObjects = new ScVbaOLEObjects( m_xContext, xIndexAccess );
+
+    if( Index.hasValue() )
+    {
+            return aOleObjects->Item( Index );
+    }
+    else
+    {
+        return makeAny( uno::Reference< excel::XOLEObjects> ( aOleObjects ) );
+    }
+}
 uno::Any SAL_CALL 
 ScVbaWorksheet::Evaluate( const ::rtl::OUString& Name ) throw (uno::RuntimeException)
 {
@@ -582,7 +569,8 @@ ScVbaWorksheet::setValue( const ::rtl::O
 uno::Any SAL_CALL 
 ScVbaWorksheet::getValue( const ::rtl::OUString& aPropertyName ) throw (beans::UnknownPropertyException, uno::RuntimeException)
 {
-	uno::Any aProp = getControl( aPropertyName );
+/*	uno::Any aProp = getControl( aPropertyName );
+
 	if ( !aProp.hasValue() )
 		throw beans::UnknownPropertyException(); // unsupported operation
 	// #TODO we need a factory here when we support
@@ -591,13 +579,19 @@ ScVbaWorksheet::getValue( const ::rtl::O
 	uno::Reference< beans::XPropertySet > xProps( aProp, uno::UNO_QUERY_THROW );	
 	const static rtl::OUString sClassId( RTL_CONSTASCII_USTRINGPARAM("ClassId") );
 	xProps->getPropertyValue( sClassId ) >>= nClassId;
+    ScVbaControlFactory controlFactory( m_xContext, xProps, xControlShape );
+    uno::Reference< vba::XControl > xControl( controlFactory.createControl( nClassId ) );
 	if ( nClassId == form::FormComponentType::COMBOBOX )
 	{
 		uno::Reference< msforms::XComboBox > xCbx( new ScVbaComboBox( m_xContext, xProps ) ); 
 		return uno::makeAny( xCbx );
 	}
-
-	return aProp;
+*/
+    uno::Reference< drawing::XControlShape > xControlShape( getControlShape( aPropertyName ), uno::UNO_QUERY_THROW );
+    ScVbaControlFactory controlFactory( m_xContext, xControlShape );
+    uno::Reference< msforms::XControl > xControl( controlFactory.createControl() );
+	return uno::makeAny( xControl );
+//	return aProp;
 }
 
 ::sal_Bool SAL_CALL 
@@ -655,6 +649,28 @@ ScVbaWorksheet::getControl( const ::rtl:
 	return uno::Any();
 }
 
+uno::Any
+ScVbaWorksheet::getControlShape( const ::rtl::OUString& sName )
+{
+	//uno::Reference< sheet::XScenarioEnhanced > xIf( getSheet(), uno::UNO_QUERY_THROW );
+    uno::Reference< sheet::XSpreadsheet > xSpreadsheet( getSheet(), uno::UNO_QUERY_THROW );
+    uno::Reference< drawing::XDrawPageSupplier > xDrawPageSupplier( xSpreadsheet, uno::UNO_QUERY_THROW );
+    uno::Reference< drawing::XDrawPage > xDrawPage( xDrawPageSupplier->getDrawPage(), uno::UNO_QUERY_THROW );
+    uno::Reference< container::XIndexAccess > xIndexAccess( xDrawPage, uno::UNO_QUERY_THROW );
+    sal_uInt16 nCount = xIndexAccess->getCount();
+    for( int index = 0; index < nCount; index++ )
+    {
+        uno::Any aUnoObj =  xIndexAccess->getByIndex( index );
+        uno::Reference< drawing::XControlShape > xControlShape( aUnoObj, uno::UNO_QUERY_THROW );
+        uno::Reference< awt::XControlModel > xControlModel( xControlShape->getControl() );
+        uno::Reference< container::XNamed > xNamed( xControlModel, uno::UNO_QUERY_THROW );
+        if( sName.equals( xNamed->getName() ))
+        {
+            return aUnoObj;
+        }
 
+    }
+    return uno::Any();
+}
 
 
