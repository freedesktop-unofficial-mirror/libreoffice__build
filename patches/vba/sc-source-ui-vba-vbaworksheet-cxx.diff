--- sc/source/ui/vba/vbaworksheet.cxx	
+++ sc/source/ui/vba/vbaworksheet.cxx
@@ -32,6 +32,7 @@
  *    MA  02111-1307  USA
  *
  ************************************************************************/
+#include "helperdecl.hxx"
 #include <cppuhelper/queryinterface.hxx>
 
 #include <com/sun/star/beans/XPropertySet.hpp>
@@ -186,6 +187,15 @@ openNewDoc(rtl::OUString aSheetName )
 	return xModel;
 }
 
+namespace worksheet 
+{
+uno::Reference< vba::XHelperInterface >
+lcl_getParentFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException );
+rtl::OUString
+lcl_getSheetNameFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException );
+uno::Reference< frame::XModel > 
+lcl_getModelFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException );
+};
 
 ScVbaWorksheet::ScVbaWorksheet( const uno::Reference< vba::XHelperInterface >& xParent, const uno::Reference< uno::XComponentContext >& xContext ) : WorksheetImpl_BASE( xParent, xContext )
 {
@@ -196,6 +206,15 @@ ScVbaWorksheet::ScVbaWorksheet(const uno
 {
 }
 
+ScVbaWorksheet::ScVbaWorksheet( uno::Sequence< uno::Any> const & args,
+    uno::Reference< uno::XComponentContext> const & xContext ) throw ( lang::IllegalArgumentException ) :  WorksheetImpl_BASE( worksheet::lcl_getParentFromArgs( args ), xContext ), mxModel( worksheet::lcl_getModelFromArgs( args ) )
+{
+	rtl::OUString sSheetName = worksheet::lcl_getSheetNameFromArgs( args );
+	uno::Reference< sheet::XSpreadsheetDocument > xSpreadDoc( mxModel, uno::UNO_QUERY_THROW );
+	uno::Reference< container::XNameAccess > xNameAccess( xSpreadDoc->getSheets(), uno::UNO_QUERY_THROW );			
+	mxSheet.set( xNameAccess->getByName( sSheetName ), uno::UNO_QUERY_THROW );
+}
+
 ::rtl::OUString
 ScVbaWorksheet::getName() throw (uno::RuntimeException)
 {
@@ -757,4 +776,43 @@ ScVbaWorksheet::getServiceNames()
 	}
 	return aServiceNames;
 }
+namespace worksheet
+{
+
+uno::Reference< vba::XHelperInterface >
+lcl_getParentFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException )
+{
+        boost::optional< uno::Reference< vba::XHelperInterface >  >xParent;
+        uno::Reference< frame::XModel > xModel;
+	rtl::OUString sSheetName;
+        comphelper::unwrapArgs( args, xParent, xModel, sSheetName );
+        return *xParent;
+}
 
+rtl::OUString
+lcl_getSheetNameFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException )
+{
+        boost::optional< uno::Reference< vba::XHelperInterface >  >xParent;
+        uno::Reference< frame::XModel > xModel;
+	rtl::OUString sSheetName;
+        comphelper::unwrapArgs( args, xParent, xModel, sSheetName );
+        return sSheetName;
+}
+
+uno::Reference< frame::XModel > 
+lcl_getModelFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException )
+{
+        boost::optional< uno::Reference< vba::XHelperInterface >  >xParent;
+        uno::Reference< frame::XModel > xModel;
+	rtl::OUString sSheetName;
+        comphelper::unwrapArgs( args, xParent, xModel, sSheetName );
+        return xModel;
+}
+
+namespace sdecl = comphelper::service_decl;
+sdecl::vba_service_class_<ScVbaWorksheet, sdecl::with_args<true> > serviceImpl;
+extern sdecl::ServiceDecl const serviceDecl(
+    serviceImpl,
+    "ScVbaWorksheet",
+    "org.openoffice.excel.Worksheet" );
+}
