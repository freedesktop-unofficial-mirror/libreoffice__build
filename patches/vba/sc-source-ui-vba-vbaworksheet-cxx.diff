--- sc/source/ui/vba/vbaworksheet.cxx	
+++ sc/source/ui/vba/vbaworksheet.cxx
@@ -53,7 +53,6 @@
 #include <com/sun/star/sheet/XCellAddressable.hpp>
 #include <com/sun/star/sheet/XSheetOutline.hpp>
 #include <com/sun/star/sheet/XDataPilotTablesSupplier.hpp>
-#include <cppuhelper/bootstrap.hxx>
 #include <com/sun/star/util/XURLTransformer.hpp>
 #include <com/sun/star/frame/XDispatchProvider.hpp>
 #include <com/sun/star/frame/XComponentLoader.hpp>
@@ -62,8 +61,11 @@
 #include <com/sun/star/drawing/XDrawPageSupplier.hpp>
 #include <com/sun/star/drawing/XControlShape.hpp>
 #include <com/sun/star/form/FormComponentType.hpp>
+
+#include <comphelper/processfactory.hxx>
+
 #include <tools/string.hxx>
 
 #include <svx/svdouno.hxx>
 
 #include "cellsuno.hxx"
@@ -158,7 +166,8 @@ openNewDoc(rtl::OUString aSheetName )
 	uno::Reference<frame::XModel> xModel;
 	try
 	{
-		uno::Reference<uno::XComponentContext > xContext(  ::cppu::defaultBootstrap_InitialComponentContext(), uno::UNO_QUERY_THROW );
+		uno::Reference< beans::XPropertySet > xProps( ::comphelper::getProcessServiceFactory(), uno::UNO_QUERY_THROW );	
+		uno::Reference< uno::XComponentContext > xContext(  xProps->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultContext" ))), uno::UNO_QUERY_THROW );
 		uno::Reference<lang::XMultiComponentFactory > xServiceManager(
 										xContext->getServiceManager(), uno::UNO_QUERY_THROW );
 
@@ -178,25 +187,12 @@ openNewDoc(rtl::OUString aSheetName )
 		}
 		xModel.set(xSpreadDoc,uno::UNO_QUERY_THROW);
 	}
-	catch ( ::cppu::BootstrapException & /*e*/ )    
-	{
-	}
 	catch ( uno::Exception & /*e*/ )
 	{
 	}
 	return xModel;
 }
 
-namespace worksheet 
-{
-uno::Reference< vba::XHelperInterface >
-lcl_getParentFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException );
-rtl::OUString
-lcl_getSheetNameFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException );
-uno::Reference< frame::XModel > 
-lcl_getModelFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException );
-};
-
 ScVbaWorksheet::ScVbaWorksheet( const uno::Reference< vba::XHelperInterface >& xParent, const uno::Reference< uno::XComponentContext >& xContext ) : WorksheetImpl_BASE( xParent, xContext )
 {
 }
@@ -207,9 +203,14 @@ ScVbaWorksheet::ScVbaWorksheet(const uno
 }
 
 ScVbaWorksheet::ScVbaWorksheet( uno::Sequence< uno::Any> const & args,
-    uno::Reference< uno::XComponentContext> const & xContext ) throw ( lang::IllegalArgumentException ) :  WorksheetImpl_BASE( worksheet::lcl_getParentFromArgs( args ), xContext ), mxModel( worksheet::lcl_getModelFromArgs( args ) )
+    uno::Reference< uno::XComponentContext> const & xContext ) throw ( lang::IllegalArgumentException ) :  WorksheetImpl_BASE( getXSomethingFromArgs< vba::XHelperInterface >( args, 0 ), xContext ), mxModel( getXSomethingFromArgs< frame::XModel >( args, 1 ) )
 {
-	rtl::OUString sSheetName = worksheet::lcl_getSheetNameFromArgs( args );
+	if ( args.getLength() < 2 )
+		throw lang::IllegalArgumentException();
+
+	rtl::OUString sSheetName;
+	args[2] >>= sSheetName;
+
 	uno::Reference< sheet::XSpreadsheetDocument > xSpreadDoc( mxModel, uno::UNO_QUERY_THROW );
 	uno::Reference< container::XNameAccess > xNameAccess( xSpreadDoc->getSheets(), uno::UNO_QUERY_THROW );			
 	mxSheet.set( xNameAccess->getByName( sSheetName ), uno::UNO_QUERY_THROW );
@@ -604,6 +605,7 @@ ScVbaWorksheet::Shapes( const uno::Any& 
       return xVbaShapes->Item( aIndex, uno::Any() ); 
    return uno::makeAny( xVbaShapes );
 }
+
 uno::Any SAL_CALL 
 ScVbaWorksheet::Evaluate( const ::rtl::OUString& Name ) throw (uno::RuntimeException)
 {
@@ -779,39 +781,17 @@ ScVbaWorksheet::getServiceNames()
 	}
 	return aServiceNames;
 }
-namespace worksheet
-{
 
-uno::Reference< vba::XHelperInterface >
-lcl_getParentFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException )
+sal_Int16
+ScVbaWorksheet::getSheetID() throw (uno::RuntimeException)
 {
-        boost::optional< uno::Reference< vba::XHelperInterface >  >xParent;
-        uno::Reference< frame::XModel > xModel;
-	rtl::OUString sSheetName;
-        comphelper::unwrapArgs( args, xParent, xModel, sSheetName );
-        return *xParent;
+	uno::Reference< sheet::XCellRangeAddressable > xAddressable( mxSheet, uno::UNO_QUERY_THROW );
+	return xAddressable->getRangeAddress().Sheet;
 }
 
-rtl::OUString
-lcl_getSheetNameFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException )
-{
-        boost::optional< uno::Reference< vba::XHelperInterface >  >xParent;
-        uno::Reference< frame::XModel > xModel;
-	rtl::OUString sSheetName;
-        comphelper::unwrapArgs( args, xParent, xModel, sSheetName );
-        return sSheetName;
-}
 
-uno::Reference< frame::XModel > 
-lcl_getModelFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException )
+namespace worksheet
 {
-        boost::optional< uno::Reference< vba::XHelperInterface >  >xParent;
-        uno::Reference< frame::XModel > xModel;
-	rtl::OUString sSheetName;
-        comphelper::unwrapArgs( args, xParent, xModel, sSheetName );
-        return xModel;
-}
-
 namespace sdecl = comphelper::service_decl;
 sdecl::vba_service_class_<ScVbaWorksheet, sdecl::with_args<true> > serviceImpl;
 extern sdecl::ServiceDecl const serviceDecl(
