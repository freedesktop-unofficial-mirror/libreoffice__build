diff --git sc/source/ui/vba/vbaeventshelper.cxx sc/source/ui/vba/vbaeventshelper.cxx
index eba8a1f..78b3ede 100644
--- sc/source/ui/vba/vbaeventshelper.cxx
+++ sc/source/ui/vba/vbaeventshelper.cxx
@@ -384,7 +384,7 @@ protected:
     static ImplVbaEventNameInfo* pImplVbaEventNameInfo;
     ImplVbaEventNameInfo() { InitImplVbaEventNameInfo(); }
 private:
-    void insert( const sal_Int32 nId, const rtl::OUString sEventName )
+    void insert( const sal_Int32 nId, const rtl::OUString& sEventName )
     {
         m_aEventNameMap.insert( make_pair( nId, sEventName ) );
     }
@@ -450,6 +450,7 @@ void ImplVbaEventNameInfo::InitImplVbaEventNameInfo()
     INSERT_WORKBOOK_EVENT_INFO( DEACTIVATE, "Deactivate" );
     INSERT_WORKBOOK_EVENT_INFO( OPEN, "Open" );
     // AUTOOPEN doesn't be used. TODO, this should be "auto_open"
+    insert( VBAEVENT_WORKBOOK_AUTOOPEN, CREATEOUSTRING("Auto_Open") );                       
     INSERT_WORKBOOK_EVENT_INFO( BEFORECLOSE, "BeforeClose" );
     INSERT_WORKBOOK_EVENT_INFO( BEFOREPRINT, "BeforePrint" );
     INSERT_WORKBOOK_EVENT_INFO( BEFORESAVE, "BeforeSave" );
@@ -638,7 +639,6 @@ ScVbaEventsHelper::getMacroPath( const sal_Int32 nEventId, const SCTAB nTab )
     	case VBAEVENT_WORKBOOK_ACTIVATE                       :
     	case VBAEVENT_WORKBOOK_DEACTIVATE                     :
     	case VBAEVENT_WORKBOOK_OPEN                           :
-    	case VBAEVENT_WORKBOOK_AUTOOPEN                       :
     	case VBAEVENT_WORKBOOK_BEFORECLOSE                    :
     	case VBAEVENT_WORKBOOK_BEFOREPRINT                    :
     	case VBAEVENT_WORKBOOK_BEFORESAVE                     :
@@ -669,6 +669,11 @@ ScVbaEventsHelper::getMacroPath( const sal_Int32 nEventId, const SCTAB nTab )
             sMacroResolvedInfo = resolveVBAMacro( pShell, sMacroName );
             break;
         }
+        case VBAEVENT_WORKBOOK_AUTOOPEN                       :
+        {
+            sMacroResolvedInfo = resolveVBAMacro( pShell, sMacroName );
+            break;
+        }
         default:
             break;
     }
@@ -698,6 +703,7 @@ sal_Bool ScVbaEventsHelper::processVbaEvent( const sal_Int32 nEventId, const uno
             case VBAEVENT_WORKBOOK_ACTIVATE:
             case VBAEVENT_WORKBOOK_DEACTIVATE:
             case VBAEVENT_WORKBOOK_OPEN:
+            case VBAEVENT_WORKBOOK_AUTOOPEN:
 			{
 				// no arguments
 				break;
@@ -992,6 +998,7 @@ ScVbaEventsHelper::ProcessCompatibleVbaEvent( sal_Int32 nEventId, const uno::Seq
             if( !mbOpened )
             {
                 processVbaEvent( nEventId, aArgs );
+                processVbaEvent( VBAEVENT_WORKBOOK_AUTOOPEN, aArgs );
                 mbOpened = sal_True;
                 ProcessCompatibleVbaEvent( VBAEVENT_WORKBOOK_ACTIVATE, aArgs );
             }
@@ -1004,9 +1011,6 @@ ScVbaEventsHelper::ProcessCompatibleVbaEvent( sal_Int32 nEventId, const uno::Seq
             }
             break;
         }
-		case VBAEVENT_WORKBOOK_AUTOOPEN:
-            // TODO
-            break;
 		case VBAEVENT_WORKBOOK_BEFORECLOSE:
         {
             sal_Bool bCancel = processVbaEvent( nEventId, aArgs ); 
