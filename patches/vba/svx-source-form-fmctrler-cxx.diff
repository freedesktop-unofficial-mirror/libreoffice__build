Index: svx/source/form/fmctrler.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/form/fmctrler.cxx,v
retrieving revision 1.51
diff -u -p -r1.51 fmctrler.cxx
--- svx/source/form/fmctrler.cxx	13 Apr 2005 08:28:58 -0000	1.51
+++ svx/source/form/fmctrler.cxx	12 Sep 2005 19:57:08 -0000
@@ -232,6 +232,7 @@
 #ifndef _TOOLKIT_UNOHLP_HXX
 #include <toolkit/helper/vclunohelper.hxx>
 #endif
+
 #ifndef _COMPHELPER_SEQUENCE_HXX_
 #include <comphelper/sequence.hxx>
 #endif
@@ -244,6 +245,10 @@
 
 #include <algorithm>
 #include <functional>
+//#undef ENABLE_VBA
+#ifdef ENABLE_VBA
+#include "formControlVBAHandler.hxx"
+#endif
 
 using namespace ::com::sun::star;
 using namespace ::com::sun::star::uno;
@@ -265,6 +270,7 @@ using namespace ::connectivity;
 using namespace ::svxform;
 using namespace ::connectivity::simple;
 
+
 //==================================================================
 // FmXAutoControl
 //==================================================================
@@ -1279,7 +1285,7 @@ void FmXFormController::onModify( const 
 sal_Bool FmXFormController::determineLockState() const
 {
     OSL_ENSURE(!FmXFormController_BASE1::rBHelper.bDisposed,"FmXFormController: Object already disposed!");
-    // a.) in filter mode we are always locked
+    // a.) in filter mode we arealways locked
     // b.) if we have no valid model or our model (a result set) is not alive -> we're locked
     // c.) if we are inserting everything is OK and we are not locked
     // d.) if are not updatable or on invalid position
@@ -1619,6 +1625,10 @@ void FmXFormController::addToEventAttach
             {
                 Reference< XInterface >  xIfc(xControl, UNO_QUERY);
                 m_xModelAsManager->attach( nPos, xIfc, makeAny(xControl) );
+#ifdef ENABLE_VBA
+                FormControlVBAHandler handler( m_xModelAsManager, xControl );
+                handler.createEventBindings(nPos);
+#endif
                 break;
             }
         }
@@ -2054,6 +2064,7 @@ Reference< XControl >  FmXFormController
     return Reference< XControl > ();
 }
 
+
 //------------------------------------------------------------------------------
 void FmXFormController::implControlInserted( const Reference< XControl>& _rxControl, bool _bAddToEventAttacher )
 {
