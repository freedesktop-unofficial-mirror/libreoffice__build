diff -urp --exclude=CVS --exclude=unxlngx6.pro sc.bak/source/ui/docshell/docsh.cxx sc/source/ui/docshell/docsh.cxx
--- sc.bak/source/ui/docshell/docsh.cxx	2008-05-22 14:38:07.000000000 +0800
+++ sc/source/ui/docshell/docsh.cxx	2008-05-22 12:08:27.000000000 +0800
@@ -140,6 +140,7 @@
 #include "compiler.hxx"
 #include "cfgids.hxx"
 #include "warnpassword.hxx"
+#include "cellsuno.hxx"
 
 #include "docsh.hxx"
 #include "docshimp.hxx"
@@ -2490,6 +2491,70 @@ void ScDocShell::SetModified( BOOL bModi
 	}
 }
 
+void ScDocShell::PostContentChanged( const ScRange& rRange )
+{
+    ScRangeList aList;
+    aList.Append(rRange);
+    PostContentChanged(aList);
+}
+uno::Any createRange( const uno::Any& aRange );
+uno::Any createWorkSheet( ScDocShell* pShell, SCTAB nTab );
+
+void ScDocShell::PostContentChanged( const ScRangeList& rList )
+{
+#if 0		
+    String aStr;
+    rList.Format(aStr, SCR_ABS, &aDocument, ScAddress::CONV_XL_A1);
+    fprintf(stdout, "ScDocShell::PostContentChanged:   range = '%s'\n",
+            rtl::OUStringToOString(aStr, RTL_TEXTENCODING_UTF8).getStr());
+#endif
+    ScCellRangesBase* pObj = NULL;
+	const ScRange& rRange = *(rList.GetObject(0));
+	SCTAB nTab = rRange.aStart.Tab();
+
+	if( rList.Count() == 1 )
+		pObj = new ScCellRangeObj( this, rRange );
+	else
+		pObj = new ScCellRangesObj( this, rList );
+
+	ScExtDocOptions* pExtOptions = aDocument.GetExtDocOptions();
+	String sSheetModuleName;
+	// Use code name if that exists, blank to force a full search otherwise
+	if ( pExtOptions )
+		sSheetModuleName = pExtOptions->GetCodeName( nTab );
+			
+	String sSheetChangeScript( RTL_CONSTASCII_USTRINGPARAM("Worksheet_Change") );
+	String sWorkBookSheetChangeScript( RTL_CONSTASCII_USTRINGPARAM("Workbook_SheetChange") );
+	String sSheetChangeMacro = docMacroExists( this, sSheetModuleName, sSheetChangeScript );
+	String sWorkBookSheetChangeMacro = docMacroExists( this, String(), sWorkBookSheetChangeScript );
+	if( sSheetChangeMacro.Len() > 0 || sWorkBookSheetChangeMacro.Len() > 0 )
+	{
+		try
+		{	
+			uno::Any aRet;
+			uno::Any aArg =  uno::makeAny(uno::Reference<uno::XInterface>(static_cast<cppu::OWeakObject*>(pObj)));;
+			uno::Any aRange = createRange( aArg );
+			// Worksheet_Change
+			if( sSheetChangeMacro.Len() > 0 )
+			{
+				uno::Sequence< uno::Any > aArgs(1);
+				aArgs[0] = aRange;
+				executeWorkBookMacro( this, sSheetChangeMacro, aArgs, aRet );
+			}
+			// Workbook_SheetChanged
+			if( sWorkBookSheetChangeMacro.Len() > 0 )
+			{
+				uno::Sequence< uno::Any > aArgs(2);	
+				aArgs[0] = createWorkSheet( this, nTab );
+				aArgs[1] = aRange;
+				executeWorkBookMacro( this, sWorkBookSheetChangeMacro, aArgs, aRet );
+			}
+		}
+		catch( uno::Exception& /*e*/ )
+		{
+		}
+	}
+}
 
 void ScDocShell::SetDocumentModified( BOOL bIsModified /* = TRUE */ )
 {
diff -urp --exclude=CVS --exclude=unxlngx6.pro sc.bak/source/ui/inc/docsh.hxx sc/source/ui/inc/docsh.hxx
--- sc.bak/source/ui/inc/docsh.hxx	2008-05-22 14:38:07.000000000 +0800
+++ sc/source/ui/inc/docsh.hxx	2008-05-19 10:23:38.000000000 +0800
@@ -343,6 +343,8 @@ public:
 	void            PostPaintExtras();
 
 	void            PostDataChanged();
+	void			PostContentChanged( const ScRange& rRange ); // for worsheet/workbook changed event
+    void            PostContentChanged( const ScRangeList& rList );
 
 	void			UpdatePaintExt( USHORT& rExtFlags, SCCOL nStartCol, SCROW nStartRow, SCTAB nStartTab,
 													   SCCOL nEndCol, SCROW nEndRow, SCTAB nEndTab );
diff -urp --exclude=CVS --exclude=unxlngx6.pro sc.bak/source/ui/undo/undoblk3.cxx sc/source/ui/undo/undoblk3.cxx
--- sc.bak/source/ui/undo/undoblk3.cxx	2008-05-22 14:38:07.000000000 +0800
+++ sc/source/ui/undo/undoblk3.cxx	2008-05-22 14:16:18.000000000 +0800
@@ -84,7 +84,17 @@ TYPEINIT1(ScUndoInsertAreaLink,		SfxUndo
 TYPEINIT1(ScUndoRemoveAreaLink,		SfxUndoAction);
 TYPEINIT1(ScUndoUpdateAreaLink,		SfxUndoAction);
 
-
+void lcl_PostContentChanged( ScDocShell* pDocShell, const ScMarkData& rMark, const ScRange& rRange )
+{
+    if (rMark.IsMarked() || rMark.IsMultiMarked())
+    {
+        ScRangeList aList;
+        rMark.FillRangeListWithMarks(&aList, false);
+        pDocShell->PostContentChanged(aList);
+    }
+    else
+        pDocShell->PostContentChanged( rRange );
+}
 // To Do:
 /*A*/	// SetOptimalHeight auf Dokument, wenn keine View
 
@@ -118,6 +128,8 @@ ScUndoDeleteContents::ScUndoDeleteConten
 		aMarkData.SetMarkArea( aRange );							// Zelle unter Cursor markieren
 
 	SetChangeTrack();
+
+	lcl_PostContentChanged( pDocShell, aMarkData, aRange );
 }
 
 
@@ -222,6 +234,7 @@ void __EXPORT ScUndoDeleteContents::Undo
 	BeginUndo();
 	DoChange( TRUE );
 	EndUndo();
+	lcl_PostContentChanged( pDocShell, aMarkData, aRange );
 }
 
 
@@ -232,6 +245,7 @@ void __EXPORT ScUndoDeleteContents::Redo
 	BeginRedo();
 	DoChange( FALSE );
 	EndRedo();
+	lcl_PostContentChanged( pDocShell, aMarkData, aRange );
 }
 
 
diff -urp --exclude=CVS --exclude=unxlngx6.pro sc.bak/source/ui/undo/undoblk.cxx sc/source/ui/undo/undoblk.cxx
--- sc.bak/source/ui/undo/undoblk.cxx	2008-05-22 14:38:07.000000000 +0800
+++ sc/source/ui/undo/undoblk.cxx	2008-05-22 12:27:58.000000000 +0800
@@ -130,6 +130,7 @@ ScUndoInsertCells::ScUndoInsertCells( Sc
 	}
 
 	SetChangeTrack();
+	pDocShell->PostContentChanged( aEffRange );
 }
 
 __EXPORT ScUndoInsertCells::~ScUndoInsertCells()
@@ -276,6 +277,7 @@ void __EXPORT ScUndoInsertCells::Undo()
 	BeginUndo();
 	DoChange( TRUE );
 	EndUndo();
+	pDocShell->PostContentChanged( aEffRange );
 }
 
 void __EXPORT ScUndoInsertCells::Redo()
@@ -284,6 +286,7 @@ void __EXPORT ScUndoInsertCells::Redo()
 	BeginRedo();
 	DoChange( FALSE );
 	EndRedo();
+	pDocShell->PostContentChanged( aEffRange );
 
 	if ( pPasteUndo )
 		pPasteUndo->Redo();		// redo paste last
@@ -338,6 +341,7 @@ ScUndoDeleteCells::ScUndoDeleteCells( Sc
 	}
 
 	SetChangeTrack();
+	pDocShell->PostContentChanged( aEffRange );
 }
 
 __EXPORT ScUndoDeleteCells::~ScUndoDeleteCells()
@@ -479,6 +483,7 @@ void __EXPORT ScUndoDeleteCells::Undo()
 	BeginUndo();
 	DoChange( TRUE );
 	EndUndo();
+	pDocShell->PostContentChanged( aEffRange );
     SFX_APP()->Broadcast( SfxSimpleHint( SC_HINT_AREALINKS_CHANGED ) );
 
 	// Markierung erst nach EndUndo
@@ -493,6 +498,7 @@ void __EXPORT ScUndoDeleteCells::Redo()
 	BeginRedo();
 	DoChange( FALSE);
 	EndRedo();
+	pDocShell->PostContentChanged( aEffRange );
     SFX_APP()->Broadcast( SfxSimpleHint( SC_HINT_AREALINKS_CHANGED ) );
 
 	ScTabViewShell* pViewShell = ScTabViewShell::GetActiveViewShell();
@@ -719,6 +725,7 @@ ScUndoCut::ScUndoCut( ScDocShell* pNewDo
 	aExtendedRange( aRange )
 {
 	SetChangeTrack();
+	pDocShell->PostContentChanged( aExtendedRange );
 }
 
 __EXPORT ScUndoCut::~ScUndoCut()
@@ -783,6 +790,7 @@ void __EXPORT ScUndoCut::Undo()
 	BeginUndo();
 	DoChange( TRUE );
 	EndUndo();
+	pDocShell->PostContentChanged( aExtendedRange );
 }
 
 void __EXPORT ScUndoCut::Redo()
@@ -793,6 +801,7 @@ void __EXPORT ScUndoCut::Redo()
 	DoChange( FALSE );
 	EnableDrawAdjust( pDoc, TRUE );					//! include in ScBlockUndo?
 	EndRedo();
+	pDocShell->PostContentChanged( aExtendedRange );
 }
 
 void __EXPORT ScUndoCut::Repeat(SfxRepeatTarget& rTarget)
@@ -844,6 +853,7 @@ ScUndoPaste::ScUndoPaste( ScDocShell* pN
 		aPasteOptions = *pOptions;		// used only for Repeat
 
 	SetChangeTrack();
+	pDocShell->PostContentChanged( aBlockRange );
 }
 
 __EXPORT ScUndoPaste::~ScUndoPaste()
@@ -1025,6 +1035,7 @@ void __EXPORT ScUndoPaste::Undo()
 	DoChange( TRUE );
 	ShowTable( aBlockRange );
 	EndUndo();
+	pDocShell->PostContentChanged( aBlockRange );
     SFX_APP()->Broadcast( SfxSimpleHint( SC_HINT_AREALINKS_CHANGED ) );
 }
 
@@ -1036,6 +1047,7 @@ void __EXPORT ScUndoPaste::Redo()
 	DoChange( FALSE );
 	EnableDrawAdjust( pDoc, TRUE );					//! include in ScBlockUndo?
 	EndRedo();
+	pDocShell->PostContentChanged( aBlockRange );
     SFX_APP()->Broadcast( SfxSimpleHint( SC_HINT_AREALINKS_CHANGED ) );
 }
 
diff -urp --exclude=CVS --exclude=unxlngx6.pro sc.bak/source/ui/undo/undocell.cxx sc/source/ui/undo/undocell.cxx
--- sc.bak/source/ui/undo/undocell.cxx	2008-05-22 14:38:07.000000000 +0800
+++ sc/source/ui/undo/undocell.cxx	2008-05-22 12:11:55.000000000 +0800
@@ -219,6 +219,7 @@ ScUndoEnterData::ScUndoEnterData( ScDocS
 	nCount( nNewCount )
 {
 	SetChangeTrack();
+	pDocShell->PostContentChanged( ScRange( ScAddress( nCol, nRow, nTab ) ) );
 }
 
 __EXPORT ScUndoEnterData::~ScUndoEnterData()
@@ -324,6 +325,7 @@ void __EXPORT ScUndoEnterData::Undo()
 
 	DoChange();
 	EndUndo();
+	pDocShell->PostContentChanged( ScRange( ScAddress( nCol, nRow, nTab ) ) );
 }
 
 void __EXPORT ScUndoEnterData::Redo()
@@ -345,6 +347,7 @@ void __EXPORT ScUndoEnterData::Redo()
 
 	DoChange();
 	EndRedo();
+	pDocShell->PostContentChanged( ScRange( ScAddress( nCol, nRow, nTab ) ) );
 }
 
 void __EXPORT ScUndoEnterData::Repeat(SfxRepeatTarget& rTarget)
@@ -376,6 +379,7 @@ ScUndoEnterValue::ScUndoEnterValue( ScDo
 	bNeedHeight	( bHeight )
 {
 	SetChangeTrack();
+	pDocShell->PostContentChanged( ScRange( aPos ) );
 }
 
 __EXPORT ScUndoEnterValue::~ScUndoEnterValue()
@@ -430,6 +434,7 @@ void __EXPORT ScUndoEnterValue::Undo()
 		pChangeTrack->Undo( nEndChangeAction, nEndChangeAction );
 
 	EndUndo();
+	pDocShell->PostContentChanged( ScRange( aPos ) );
 }
 
 void __EXPORT ScUndoEnterValue::Redo()
@@ -443,6 +448,7 @@ void __EXPORT ScUndoEnterValue::Redo()
 	SetChangeTrack();
 
 	EndRedo();
+	pDocShell->PostContentChanged( ScRange( aPos ) );
 }
 
 void __EXPORT ScUndoEnterValue::Repeat(SfxRepeatTarget& /* rTarget */)
@@ -470,6 +476,7 @@ ScUndoPutCell::ScUndoPutCell( ScDocShell
 	bNeedHeight	( bHeight )
 {
 	SetChangeTrack();
+	pDocShell->PostContentChanged( ScRange( aPos ) );
 }
 
 __EXPORT ScUndoPutCell::~ScUndoPutCell()
@@ -526,6 +533,7 @@ void __EXPORT ScUndoPutCell::Undo()
 		pChangeTrack->Undo( nEndChangeAction, nEndChangeAction );
 
 	EndUndo();
+	pDocShell->PostContentChanged( ScRange( aPos ) );
 }
 
 void __EXPORT ScUndoPutCell::Redo()
@@ -554,6 +562,7 @@ void __EXPORT ScUndoPutCell::Redo()
 	SetChangeTrack();
 
 	EndRedo();
+	pDocShell->PostContentChanged( ScRange( aPos ) );
 }
 
 void __EXPORT ScUndoPutCell::Repeat(SfxRepeatTarget& /* rTarget */)
