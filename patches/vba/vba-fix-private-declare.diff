diff --git basic/source/comp/dim.cxx basic/source/comp/dim.cxx
index 01c23e8..3e46579 100644
--- basic/source/comp/dim.cxx
+++ basic/source/comp/dim.cxx
@@ -214,7 +214,7 @@ void SbiParser::DefVar( SbiOpcode eOp, BOOL bStatic )
 		Next(), bConst = TRUE;
 
 	// #110004 It can also be a sub/function
-	if( !bConst && (eCurTok == SUB || eCurTok == FUNCTION || eCurTok == PROPERTY ||
+    if( !bConst && (eCurTok == DECLARE || eCurTok == SUB || eCurTok == FUNCTION || eCurTok == PROPERTY ||
 					eCurTok == STATIC || eCurTok == ENUM ) )
 	{
 		// Next token is read here, because !bConst
@@ -225,6 +225,12 @@ void SbiParser::DefVar( SbiOpcode eOp, BOOL bStatic )
 			Next();
 			DefStatic( bPrivate );
 		}
+        else if( eCurTok == DECLARE )
+                {
+            Next();
+                        DefDeclare( bPrivate ); 
+                        return;
+                }
 		else if( eCurTok == SUB || eCurTok == FUNCTION || eCurTok == PROPERTY )
 		{
 			// End global chain if necessary (not done in 
@@ -875,6 +881,11 @@ SbiProcDef* SbiParser::ProcDecl( BOOL bDecl )
 
 void SbiParser::Declare()
 {
+    DefDeclare( FALSE );
+}
+
+void SbiParser::DefDeclare( BOOL bPrivate )
+{
 	Next();
 	if( eCurTok != SUB && eCurTok != FUNCTION )
 	  Error( SbERR_UNEXPECTED, eCurTok );
@@ -901,6 +912,9 @@ void SbiParser::Declare()
 			}
 			else
 				aPublics.Add( pDef );
+            if ( pDef )
+                pDef->SetPublic( !bPrivate );
+            
 		}
 	}
 }
diff --git basic/source/inc/parser.hxx basic/source/inc/parser.hxx
index d13b8ac..d5afbea 100644
--- basic/source/inc/parser.hxx
+++ basic/source/inc/parser.hxx
@@ -68,6 +68,7 @@ class SbiParser : public SbiTokenizer
 	void StmntBlock( SbiToken ); 	// Statement-Block abarbeiten
 	void DefType( BOOL bPrivate );	// Parse type declaration
 	void DefEnum( BOOL bPrivate );	// Parse enum declaration
+    void DefDeclare( BOOL bPrivate );
 	void EnableCompatibility();	
 public:
 	SbxArrayRef	  rTypeArray;		// das Type-Array
