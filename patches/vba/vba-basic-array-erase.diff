diff -upr /data4/sles/ooo-build-SVN-Latest/ooo-build/build/OOE680_m6/basic/inc/sbx.hxx basic/inc/sbx.hxx
--- /data4/sles/ooo-build-SVN-Latest/ooo-build/build/OOE680_m6/basic/inc/sbx.hxx	2006-12-01 17:51:41.000000000 +0000
+++ basic/inc/sbx.hxx	2007-01-25 14:58:39.000000000 +0000
@@ -265,6 +265,7 @@ class SbxDimArray : public SbxArray
 	SbxDim* pFirst, *pLast;         // Links fuer Dimension-Tabelle
 	short   nDim;                   // Anzahl Dimensionen
 	void   AddDimImpl32( INT32, INT32, BOOL bAllowSize0 );
+	bool mbHasFixedSize;
 protected:
 	USHORT  Offset( const short* );
 	UINT32  Offset32( const INT32* );
@@ -304,6 +305,8 @@ public:
 	void   AddDim32( INT32, INT32 );
 	void   unoAddDim32( INT32, INT32 );
 	BOOL   GetDim32( INT32, INT32&, INT32& ) const;
+	bool hasFixedSize() { return mbHasFixedSize; };
+	void setHasFixedSize( bool bHasFixedSize ) {mbHasFixedSize = bHasFixedSize; };
 };
 
 #endif
diff -upr /data4/sles/ooo-build-SVN-Latest/ooo-build/build/OOE680_m6/basic/source/runtime/step0.cxx basic/source/runtime/step0.cxx
--- /data4/sles/ooo-build-SVN-Latest/ooo-build/build/OOE680_m6/basic/source/runtime/step0.cxx	2007-01-25 09:10:45.000000000 +0000
+++ basic/source/runtime/step0.cxx	2007-01-25 14:58:39.000000000 +0000
@@ -524,6 +524,8 @@ void SbiRuntime::DimImpl( SbxVariableRef
 				if( ub < lb )
 					Error( SbERR_OUT_OF_RANGE ), ub = lb;
 				pArray->AddDim32( lb, ub );
+				if ( lb != ub )
+					pArray->setHasFixedSize( true );
 			}
 		}
 		else
@@ -702,17 +704,28 @@ void SbiRuntime::StepERASE()
 	SbxDataType eType = refVar->GetType();
 	if( eType & SbxARRAY )
 	{
-		// AB 2.4.1996
-		// Arrays haben bei Erase nach VB ein recht komplexes Verhalten. Hier
-		// werden zunaechst nur die Typ-Probleme bei REDIM (#26295) beseitigt:
-		// Typ hart auf den Array-Typ setzen, da eine Variable mit Array
-		// SbxOBJECT ist. Bei REDIM entsteht dann ein SbxOBJECT-Array und
-		// der ursruengliche Typ geht verloren -> Laufzeitfehler
-		USHORT nSavFlags = refVar->GetFlags();
-		refVar->ResetFlag( SBX_FIXED );
-		refVar->SetType( SbxDataType(eType & 0x0FFF) );
-		refVar->SetFlags( nSavFlags );
-		refVar->Clear();
+		SbxBase* pElemObj = refVar->GetObject();
+		SbxDimArray* pDimArray = PTR_CAST(SbxDimArray,pElemObj);
+		bool bClearValues = true;
+		if( pDimArray )
+		{
+			if ( pDimArray->hasFixedSize() )
+			{
+				// Clear all Value(s)
+				pDimArray->SbxArray::Clear();
+				bClearValues = false;
+			}
+			else
+				pDimArray->Clear(); // clear Dims
+		}
+		if ( bClearValues )
+		{
+			SbxArray* pArray = PTR_CAST(SbxArray,pElemObj);
+			if ( pArray )
+				pArray->Clear();
+		}	
+		
+
 	}
 	else
 	if( refVar->IsFixed() )
--- /data4/sles/ooo-build-SVN-Latest/ooo-build/build/OOE680_m6/basic/source/sbx/sbxarray.cxx	2006-12-01 17:51:42.000000000 +0000
+++ basic/source/sbx/sbxarray.cxx	2007-01-25 16:41:50.000000000 +0000
@@ -593,7 +593,7 @@ void SbxArray::PutDirect( SbxVariable* p
 //
 //////////////////////////////////////////////////////////////////////////
 
-SbxDimArray::SbxDimArray( SbxDataType t ) : SbxArray( t )
+SbxDimArray::SbxDimArray( SbxDataType t ) : SbxArray( t ), mbHasFixedSize( false )
 {
 	pFirst = pLast = NULL;
 	nDim = 0;
@@ -618,6 +618,7 @@ SbxDimArray& SbxDimArray::operator=( con
 			AddDim32( p->nLbound, p->nUbound );
 			p = p->pNext;
 		}
+		this->mbHasFixedSize = rArray.mbHasFixedSize;
 	}
 	return *this;
 }
@@ -793,7 +794,7 @@ void SbxDimArray::Put32( SbxVariable* p,
 
 UINT32 SbxDimArray::Offset32( SbxArray* pPar )
 {
-	if( nDim == 0 || !pPar )
+	if( nDim == 0 || !pPar || nDim != ( pPar->Count() - 1 ) )
 	{
 		SetError( SbxERR_BOUNDS ); return 0;
 	}
