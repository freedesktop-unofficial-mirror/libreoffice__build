--- sc/source/ui/vba/vbaworkbook.cxx	
+++ sc/source/ui/vba/vbaworkbook.cxx
@@ -32,7 +32,9 @@
  *    MA  02111-1307  USA
  *
  ************************************************************************/
+#include "helperdecl.hxx"
 #include <tools/urlobj.hxx>
+#include <comphelper/unwrapargs.hxx>
 
 #include <com/sun/star/util/XModifiable.hpp>
 #include <com/sun/star/util/XProtectable.hpp>
@@ -61,6 +63,15 @@
 using namespace ::org::openoffice;
 using namespace ::com::sun::star;
 
+namespace workbook
+{
+uno::Reference< vba::XHelperInterface >
+lcl_getParentFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException );
+uno::Reference< frame::XModel > 
+lcl_getModelFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException );
+};
+
+
 class ActiveSheet : public ScVbaWorksheet
 {
 protected:
@@ -188,6 +199,12 @@ ScVbaWorkbook::FileFormat(  ) throw (::s
         return aFileFormat;
 }
 
+void 
+ScVbaWorkbook::init()
+{
+	if ( !ColorData.getLength() )
+		ResetColors();
+}
 ScVbaWorkbook::ScVbaWorkbook( 	const css::uno::Reference< oo::vba::XHelperInterface >& xParent, const css::uno::Reference< css::uno::XComponentContext >& xContext) :ScVbaWorkbook_BASE( xParent, xContext ), mxModel(NULL)
 {
 	//#FIXME this persists the color data per office instance and
@@ -196,14 +213,19 @@ ScVbaWorkbook::ScVbaWorkbook( 	const css
 	// so we should,
 	// a) make the class that does that a service
 	// b) make that service implement XIndexContainer
-	if ( !ColorData.getLength() )
-		ResetColors();
+	init();
 }
 
 ScVbaWorkbook::ScVbaWorkbook( 	const css::uno::Reference< oo::vba::XHelperInterface >& xParent, const css::uno::Reference< css::uno::XComponentContext >& xContext, css::uno::Reference< css::frame::XModel > xModel ) : ScVbaWorkbook_BASE( xParent, xContext ),  mxModel( xModel ) 
 { 
-	if ( !ColorData.getLength() )
-		ResetColors();
+	init();
+}
+
+ScVbaWorkbook::ScVbaWorkbook( uno::Sequence< uno::Any> const & args,
+    uno::Reference< uno::XComponentContext> const & xContext ) : ScVbaWorkbook_BASE( workbook::lcl_getParentFromArgs( args ), xContext ),  mxModel( workbook::lcl_getModelFromArgs( args ) ) 
+
+{
+	init();
 }
 
 ::rtl::OUString
@@ -447,3 +469,29 @@ ScVbaWorkbook::getServiceNames()
 	}
 	return aServiceNames;
 }
+namespace workbook
+{
+uno::Reference< vba::XHelperInterface >
+lcl_getParentFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException )
+{
+        boost::optional< uno::Reference< vba::XHelperInterface >  >xParent;
+        uno::Reference< frame::XModel > xModel;
+        comphelper::unwrapArgs( args, xParent, xModel );
+        return *xParent;
+}
+
+uno::Reference< frame::XModel > 
+lcl_getModelFromArgs( uno::Sequence< uno::Any > const& args ) throw ( lang::IllegalArgumentException )
+{
+        boost::optional< uno::Reference< vba::XHelperInterface >  >xParent;
+        uno::Reference< frame::XModel > xModel;
+        comphelper::unwrapArgs( args, xParent, xModel );
+        return xModel;
+}
+namespace sdecl = comphelper::service_decl;
+sdecl::vba_service_class_<ScVbaWorkbook, sdecl::with_args<true> > serviceImpl;
+extern sdecl::ServiceDecl const serviceDecl(
+    serviceImpl,
+    "ScVbaWorkbook",
+    "org.openoffice.excel.Workbook" );
+}
