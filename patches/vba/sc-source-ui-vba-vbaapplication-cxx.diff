--- sc/source/ui/vba/vbaapplication.cxx	
+++ sc/source/ui/vba/vbaapplication.cxx
@@ -62,10 +62,11 @@
 #include "gridwin.hxx"
 #include "vbanames.hxx"
 #include "vbashape.hxx"
+#include "sc.hrc"
 
 #include <osl/file.hxx>
 
-//start test includes
+#include <sfx2/request.hxx>
 #include <sfx2/objsh.hxx>
 #include <sfx2/viewfrm.hxx>
 #include <sfx2/app.hxx>
@@ -79,7 +80,6 @@
 #include <basic/sbstar.hxx>
 #include <basic/sbuno.hxx>
 #include <basic/sbmeth.hxx>
-//end test includes
 
 using namespace ::org::openoffice;
 using namespace ::com::sun::star;
@@ -824,6 +824,61 @@ ScVbaApplication::Intersect( const uno::
 	return xRefRange;
 }
 
+void
+ScVbaApplication::Volatile( const uno::Any& aVolatile )  throw ( uno::RuntimeException )
+{
+	sal_Bool bVolatile = sal_True;
+	aVolatile >>= bVolatile;
+	if ( true ) // getCalculation tries to get the active doc which... will barf ( on document load )
+		return; 
+	if ( bVolatile )
+		throw uno::RuntimeException( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("Volatile - not supported" ) ), uno::Reference< uno::XInterface >() );
+	// bVoloatile is false - currently this only would make sense if 
+	// the autocalculate mode is set to be true.
+
+	// so really this is crap, #TODO try and understand how ( or if ) 
+	// the calculation mode and volatile interoperate
+	if ( ! getCalculation() == excel::XlCalculation::xlCalculationAutomatic )
+		setCalculation(  excel::XlCalculation::xlCalculationAutomatic );
+}
+
+void SAL_CALL
+ScVbaApplication::DoEvents() throw ( uno::RuntimeException )
+{
+}
+
+::sal_Bool SAL_CALL 
+ScVbaApplication::getDisplayFormulaBar() throw ( css::uno::RuntimeException )
+{
+	sal_Bool bRes = sal_False;
+	ScTabViewShell* pViewShell = getCurrentBestViewShell();
+	if ( pViewShell )
+	{
+		SfxBoolItem sfxFormBar( FID_TOGGLEINPUTLINE);
+		SfxAllItemSet reqList(  SFX_APP()->GetPool() );
+		reqList.Put( sfxFormBar );
+
+		pViewShell->GetState( reqList );
+		const SfxPoolItem *pItem=0;
+		if ( reqList.GetItemState( FID_TOGGLEINPUTLINE, sal_False, &pItem ) == SFX_ITEM_SET )
+			bRes =   ((SfxBoolItem*)pItem)->GetValue();
+	}
+	return bRes;
+}
+
+void SAL_CALL 
+ScVbaApplication::setDisplayFormulaBar( ::sal_Bool _displayformulabar ) throw ( css::uno::RuntimeException )
+{
+	ScTabViewShell* pViewShell = getCurrentBestViewShell();
+	if ( pViewShell )
+	{
+		SfxBoolItem sfxFormBar( FID_TOGGLEINPUTLINE, _displayformulabar);
+		SfxAllItemSet reqList(  SFX_APP()->GetPool() );
+		SfxRequest aReq( FID_TOGGLEINPUTLINE, 0, reqList );
+		pViewShell->Execute( aReq );
+	}	
+}
+
 rtl::OUString& 
 ScVbaApplication::getServiceImplName()
 {
