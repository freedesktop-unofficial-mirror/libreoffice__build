--- sc/source/ui/vba/vbaworkbooks.cxx	
+++ sc/source/ui/vba/vbaworkbooks.cxx
@@ -343,18 +343,15 @@ ScVbaWorkbooks::Open( const rtl::OUStrin
 {
 	// we need to detect if this is a URL, if not then assume its a file path
         rtl::OUString aURL;
+        INetURLObject aObj;
+	aObj.SetURL( rFileName );
+	bool bIsURL = aObj.GetProtocol() != INET_PROT_NOT_VALID;
+	if ( bIsURL )
+		aURL = rFileName;
+	else
+		osl::FileBase::getFileURLFromSystemPath( rFileName, aURL );
 	uno::Reference< lang::XMultiComponentFactory > xSMgr(
-        	mxContext->getServiceManager(), uno::UNO_QUERY_THROW );
-	uno::Reference< uri::XUriReferenceFactory > xFac ( xSMgr->createInstanceWithContext( rtl::OUString::createFromAscii( "com.sun.star.uri.UriReferenceFactory"), mxContext ) , uno::UNO_QUERY_THROW );
-	uno::Reference<  uri::XUriReference > uriRef( xFac->parse( rFileName ), uno::UNO_QUERY );
-	if ( uriRef.is() )
-	{
-		if ( uriRef->getScheme().getLength() ) // already a 'proper' url
-			aURL = rFileName;
-		else
-        		osl::FileBase::getFileURLFromSystemPath( rFileName, aURL );
-	}	
-
+		mxContext->getServiceManager(), uno::UNO_QUERY_THROW );
 	uno::Reference< frame::XDesktop > xDesktop
 		(xSMgr->createInstanceWithContext(::rtl::OUString::createFromAscii("com.sun.star.frame.Desktop")                    , mxContext),
 		uno::UNO_QUERY_THROW );
@@ -446,7 +443,11 @@ ScVbaWorkbooks::Open( const rtl::OUStrin
 		frame::FrameSearchFlag::CREATE,
 		sProps);
 	uno::Reference <sheet::XSpreadsheetDocument> xSpreadDoc( xComponent, uno::UNO_QUERY_THROW );
-	return getWorkbook( mxContext, xSpreadDoc );
+	uno::Any aRet = getWorkbook( mxContext, xSpreadDoc );
+	uno::Reference< excel::XWorkbook > xWBook( aRet, uno::UNO_QUERY );
+	if ( xWBook.is() )
+		xWBook->Activate();
+	return aRet;
 }
 
 rtl::OUString& 
