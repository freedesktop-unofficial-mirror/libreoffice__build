--- sc/source/ui/vba/vbafillformat.cxx	
+++ sc/source/ui/vba/vbafillformat.cxx
@@ -58,23 +58,23 @@ ScVbaFillFormat::setFillStyle( drawing::
     if( m_nFillStyle == drawing::FillStyle_GRADIENT )
     {
         m_xPropertySet->setPropertyValue( rtl::OUString::createFromAscii("FillStyle"), uno::makeAny( drawing::FillStyle_GRADIENT ) );
-        awt::Gradient *aGradient = new awt::Gradient();
+        awt::Gradient aGradient;
         // AXIAL
         // RADIAL
         // ELLIPTICAL
         // SQUARE
         // RECT
-        aGradient->Style = awt::GradientStyle_LINEAR;
-        aGradient->StartColor = ForeColor()->getRGB();
-        aGradient->EndColor = BackColor()->getRGB();
-        aGradient->Angle = m_nGradientAngle;
-        aGradient->Border = 0;
-        aGradient->XOffset = 0;
-        aGradient->YOffset = 0;
-        aGradient->StartIntensity = 100;
-        aGradient->EndIntensity = 100;
-        aGradient->StepCount = 1;
-        m_xPropertySet->setPropertyValue( rtl::OUString::createFromAscii("FillGradient"), uno::makeAny( *aGradient ) );
+        aGradient.Style = awt::GradientStyle_LINEAR;
+        aGradient.StartColor = ForeColor()->getRGB();
+        aGradient.EndColor = BackColor()->getRGB();
+        aGradient.Angle = m_nGradientAngle;
+        aGradient.Border = 0;
+        aGradient.XOffset = 0;
+        aGradient.YOffset = 0;
+        aGradient.StartIntensity = 100;
+        aGradient.EndIntensity = 100;
+        aGradient.StepCount = 1;
+        m_xPropertySet->setPropertyValue( rtl::OUString::createFromAscii("FillGradient"), uno::makeAny( aGradient ) );
     }
     else if( m_nFillStyle == drawing::FillStyle_SOLID )
     {
@@ -181,7 +181,7 @@ uno::Reference< msforms::XColorFormat > 
 ScVbaFillFormat::ForeColor() throw (uno::RuntimeException)
 {
     if( !m_xColorFormat.is() )
-        m_xColorFormat.set( new ScVbaColorFormat( getParent(), mxContext, this, m_xShape, ColorFormatType::FILLFORMAT_BACKCOLOR ) );
+        m_xColorFormat.set( new ScVbaColorFormat( getParent(), mxContext, this, m_xShape, ColorFormatType::FILLFORMAT_FORECOLOR ) );
     return m_xColorFormat;
 }
 
