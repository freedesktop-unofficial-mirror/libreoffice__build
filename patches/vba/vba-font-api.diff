--- oovbaapi/org/openoffice/excel/XFont.idl.orig	2008-04-11 17:51:41.000000000 +0800
+++ oovbaapi/org/openoffice/excel/XFont.idl	2008-10-09 13:45:55.000000000 +0800
@@ -63,6 +63,7 @@ interface XFont
 	[attribute] any Subscript;
 	[attribute] any Superscript;
 	[attribute] any  Name;
+	[attribute] any  OutlineFont;
 };
 
 //=============================================================================
--- sc/source/ui/vba/vbafont.hxx.orig	2008-10-09 13:41:00.000000000 +0800
+++ sc/source/ui/vba/vbafont.hxx	2008-10-09 13:45:55.000000000 +0800
@@ -81,6 +81,8 @@ public:
     virtual void SAL_CALL setName( const css::uno::Any& _name ) throw (css::uno::RuntimeException);
     virtual css::uno::Any SAL_CALL getColor() throw (css::uno::RuntimeException) ;
     virtual void SAL_CALL setColor( const css::uno::Any& _color ) throw (css::uno::RuntimeException) ;
+    virtual css::uno::Any SAL_CALL getOutlineFont() throw (css::uno::RuntimeException) ;
+    virtual void SAL_CALL setOutlineFont( const css::uno::Any& _outlinefont ) throw (css::uno::RuntimeException) ;
     // XHelperInterface
     virtual rtl::OUString& getServiceImplName();
     virtual css::uno::Sequence<rtl::OUString> getServiceNames();
--- sc/source/ui/vba/vbafont.cxx.orig	2008-10-09 13:41:00.000000000 +0800
+++ sc/source/ui/vba/vbafont.cxx	2008-10-09 13:45:55.000000000 +0800
@@ -346,22 +346,54 @@ ScVbaFont::getStandardFont() throw ( uno
 }
 
 void SAL_CALL
-ScVbaFont::setFontStyle( const uno::Any& /*aValue*/ ) throw( uno::RuntimeException )
+ScVbaFont::setFontStyle( const uno::Any& aValue ) throw( uno::RuntimeException )
 {
-//XXX #TODO# #FIXME#
-	//mxFont->setPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CharSize" ) ), ( uno::Any )aValue );
-	throw uno::RuntimeException(
-		rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("setFontStyle not supported") ), uno::Reference< uno::XInterface >() );
+    sal_Bool bBold = sal_False;
+    sal_Bool bItalic = sal_False;
+
+    rtl::OUString aStyles;
+    aValue >>= aStyles;
+
+    std::vector< rtl::OUString > aTokens;
+    sal_Int32 nIndex = 0;
+    do
+    {
+        rtl::OUString aToken = aStyles.getToken( 0, ' ', nIndex );
+        aTokens.push_back( aToken );
+    }while( nIndex >= 0 );
+    
+    std::vector< rtl::OUString >::iterator it;
+    for( it = aTokens.begin(); it != aTokens.end(); ++it )
+    {
+        if( (*it).equalsIgnoreAsciiCaseAscii( "Bold" ) )
+            bBold = sal_True;
+
+        if( (*it).equalsIgnoreAsciiCaseAscii( "Italic" ) )
+            bItalic = sal_True;
+    }
+
+    setBold( uno::makeAny( bBold ) );
+    setItalic( uno::makeAny( bItalic ) );
 }
 
 
 uno::Any SAL_CALL
 ScVbaFont::getFontStyle() throw ( uno::RuntimeException )
 {
-//XXX
-	throw uno::RuntimeException(
-		rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("getFontStyle not supported") ), uno::Reference< uno::XInterface >() );
-	// return uno::Any();
+    rtl::OUStringBuffer aStyles;
+    sal_Bool bValue = sal_False;
+    getBold() >>= bValue;
+    if( bValue )
+        aStyles.appendAscii("Bold");
+    
+    getItalic() >>= bValue;
+    if( bValue )
+    {
+        if( aStyles.getLength() )
+            aStyles.appendAscii(" ");
+        aStyles.appendAscii("Italic");
+    }
+    return uno::makeAny( aStyles.makeStringAndClear() );
 }
 
 void SAL_CALL
@@ -504,9 +536,9 @@ ScVbaFont::getItalic() throw ( uno::Runt
 		if (  GetDataSet()->GetItemState( ATTR_FONT_POSTURE, TRUE, NULL) == SFX_ITEM_DONTCARE )
 			return aNULL();
 
-	short nValue = 0;
-	mxFont->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CharPosture" ) ) ) >>= nValue;
-	return uno::makeAny( nValue == awt::FontSlant_ITALIC );
+    awt::FontSlant aFS;
+	mxFont->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CharPosture" ) ) ) >>= aFS;
+	return uno::makeAny( aFS == awt::FontSlant_ITALIC );
 }
 
 void  SAL_CALL
@@ -538,6 +570,22 @@ ScVbaFont::setColor( const uno::Any& _co
 {
 	mxFont->setPropertyValue(  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CharColor" ) ) , XLRGBToOORGB(_color));
 }
+
+void  SAL_CALL
+ScVbaFont::setOutlineFont( const uno::Any& aValue ) throw ( uno::RuntimeException )
+{
+	mxFont->setPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CharContoured" ) ), aValue );
+}
+
+uno::Any SAL_CALL
+ScVbaFont::getOutlineFont() throw (uno::RuntimeException)
+{
+	if ( GetDataSet() )
+		if (  GetDataSet()->GetItemState( ATTR_FONT_CONTOUR, TRUE, NULL) == SFX_ITEM_DONTCARE )
+			return aNULL();
+	return mxFont->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CharContoured" ) ) );
+}
+
 rtl::OUString&
 ScVbaFont::getServiceImplName()
 {
