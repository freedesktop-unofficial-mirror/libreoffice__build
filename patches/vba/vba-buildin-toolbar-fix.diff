diff --git vbahelper/source/vbahelper/vbacommandbarhelper.cxx vbahelper/source/vbahelper/vbacommandbarhelper.cxx
index 7c59107..b4515b6 100644
--- vbahelper/source/vbahelper/vbacommandbarhelper.cxx
+++ vbahelper/source/vbahelper/vbacommandbarhelper.cxx
@@ -44,10 +44,63 @@
 #include <comphelper/processfactory.hxx>
 #include <vbahelper/vbahelper.hxx>
 #include <time.h>
+#include <map>
 
 using namespace com::sun::star;
 using namespace ooo::vba;
 
+#define CREATEOUSTRING(asciistr) rtl::OUString::createFromAscii(asciistr)
+
+typedef std::map< rtl::OUString, rtl::OUString > MSO2OOCommandbarMap;
+
+class MSO2OOCommandbarHelper
+{
+private:
+    static MSO2OOCommandbarHelper* pMSO2OOCommandbarHelper;
+    MSO2OOCommandbarMap maBuildinToolbarMap;
+
+    MSO2OOCommandbarHelper()
+    {
+        // Buildin toolbars
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Standard"),CREATEOUSTRING("private:resource/toolbar/standardbar") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Formatting"),CREATEOUSTRING("private:resource/toolbar/formatobjectbar") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Drawing"),CREATEOUSTRING("private:resource/toolbar/drawbar") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Toolbar List"),CREATEOUSTRING("private:resource/toolbar/toolbar") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Forms"),CREATEOUSTRING("private:resource/toolbar/formcontrols") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Form Controls"),CREATEOUSTRING("private:resource/toolbar/formcontrols") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Full Screen"),CREATEOUSTRING("private:resource/toolbar/fullscreenbar") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Chart"),CREATEOUSTRING("private:resource/toolbar/flowchartshapes") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("Picture"),CREATEOUSTRING("private:resource/toolbar/graphicobjectbar") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("WordArt"),CREATEOUSTRING("private:resource/toolbar/fontworkobjectbar") ) );
+        maBuildinToolbarMap.insert( std::make_pair( CREATEOUSTRING("3-D Settings"),CREATEOUSTRING("private:resource/toolbar/extrusionobjectbar") ) );
+    }
+
+public:
+    virtual ~MSO2OOCommandbarHelper() {};
+    static MSO2OOCommandbarHelper* getMSO2OOCommandbarHelper()
+    {
+        if( pMSO2OOCommandbarHelper == NULL )
+        {
+            pMSO2OOCommandbarHelper = new MSO2OOCommandbarHelper();
+        }
+        return pMSO2OOCommandbarHelper;
+    }
+
+    rtl::OUString findBuildinToolbar( const rtl::OUString& sToolbarName )
+    {
+        MSO2OOCommandbarMap::iterator it = maBuildinToolbarMap.begin();
+        for(; it != maBuildinToolbarMap.end(); it++ )
+        {
+            rtl::OUString sName = it->first;
+            if( sName.equalsIgnoreAsciiCase( sToolbarName ) )
+                return it->second;
+        }
+        return rtl::OUString();
+    }
+};
+
+MSO2OOCommandbarHelper* MSO2OOCommandbarHelper::pMSO2OOCommandbarHelper = NULL;
+
 
 VbaCommandBarHelper::VbaCommandBarHelper( const css::uno::Reference< css::uno::XComponentContext >& xContext, const css::uno::Reference< css::frame::XModel >& xModel ) throw (css::uno::RuntimeException) : mxContext( xContext ), mxModel( xModel )
 {
@@ -113,6 +166,12 @@ rtl::OUString VbaCommandBarHelper::findToolbarByName( const css::uno::Reference<
 {
     rtl::OUString sUIName;
     rtl::OUString sResourceUrl;
+
+    // check if it is an buildin toolbar
+    sResourceUrl = MSO2OOCommandbarHelper::getMSO2OOCommandbarHelper()->findBuildinToolbar( sName );
+    if( sResourceUrl.getLength() > 0 )
+        return sResourceUrl;
+
     uno::Sequence< ::rtl::OUString > allNames = xNameAccess->getElementNames();
     for( sal_Int32 i = 0; i < allNames.getLength(); i++ )
     {
