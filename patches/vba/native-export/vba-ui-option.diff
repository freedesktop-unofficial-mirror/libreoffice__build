diff --git basctl/sdi/baside.sdi basctl/sdi/baside.sdi
index fbdef2d..aa52897 100644
--- basctl/sdi/baside.sdi
+++ basctl/sdi/baside.sdi
@@ -126,6 +126,12 @@ shell BasicIDEShell
 		StateMethod = GetState;
 	]
 
+	SID_BASICIDE_VBAENABLED
+	[
+		ExecMethod	= ExecuteCurrent;
+		StateMethod = GetState;
+	]
+	
 	// ========================================================
 	// Global: Egal, welches Fenster gerade aktiv ist:
 	// ========================================================
diff --git basctl/source/basicide/basides1.cxx basctl/source/basicide/basides1.cxx
index 3d79067..d1c759a 100644
--- basctl/source/basicide/basides1.cxx
+++ basctl/source/basicide/basides1.cxx
@@ -74,6 +74,8 @@
 #include <com/sun/star/script/XLibraryContainerPassword.hpp>
 #include <com/sun/star/frame/XDispatchProvider.hpp>
 #include <com/sun/star/frame/XLayoutManager.hpp>
+#include <com/sun/star/script/XBasicLibraryInfo.hpp>
+#include <com/sun/star/lang/XServiceInfo.hpp>
 
 #include <algorithm>
 #include <memory>
@@ -260,6 +262,28 @@ void __EXPORT BasicIDEShell::ExecuteCurrent( SfxRequest& rReq )
 			}
 		}
 		break;
+		case SID_BASICIDE_VBAENABLED:
+		{
+			if( pCurWin )
+			{
+				ScriptDocument aDocument( pCurWin->GetDocument() );
+				if( aDocument.isDocument() )
+				{
+		            Reference< script::XLibraryContainer > xModLibContainer( aDocument.getLibraryContainer( E_SCRIPTS ) );
+        		    if( xModLibContainer.is() && xModLibContainer->hasByName( m_aCurLibName ) )
+					{
+                        Reference< script::XBasicLibraryInfo >  xLib;
+                        xModLibContainer->getByName( m_aCurLibName ) >>= xLib;
+						if( xLib.is() )
+						{
+							sal_Bool bVBAEnabled = xLib->getVBACompatMode();
+							xLib->setVBACompatMode( !bVBAEnabled );
+						}
+					}
+				}
+			}
+		}
+		break;
 		default:
 		{
 			pCurWin->ExecuteCommand( rReq );
@@ -1011,6 +1035,37 @@ void __EXPORT BasicIDEShell::GetState(SfxItemSet &rSet)
 					rSet.DisableItem( nWh );
 			}
 			break;
+			case SID_BASICIDE_VBAENABLED:
+			{
+				BOOL bDisable = TRUE;
+				//Reference< XModel > xModel( GetCurrentDocument(), UNO_QUERY );
+				Reference< lang::XServiceInfo > xServiceInfo( GetCurrentDocument(), UNO_QUERY );
+				if( xServiceInfo.is() )
+				{
+					sal_Bool bSupports  = xServiceInfo->supportsService( ::rtl::OUString::createFromAscii("com.sun.star.sheet.SpreadsheetDocument") );
+					bDisable = !bSupports;
+				}
+
+				if( bDisable )
+				{
+					rSet.DisableItem( nWh );
+				}
+				else
+				{
+					ScriptDocument aDocument( pCurWin->GetDocument() );
+		            Reference< script::XLibraryContainer > xModLibContainer( aDocument.getLibraryContainer( E_SCRIPTS ) );
+        		    if( xModLibContainer.is() && xModLibContainer->hasByName( m_aCurLibName ) )
+					{
+                        Reference< script::XBasicLibraryInfo >  xLib;
+                        xModLibContainer->getByName( m_aCurLibName ) >>= xLib;
+						if( xLib.is() )
+						{
+							rSet.Put( SfxBoolItem( nWh, xLib->getVBACompatMode() ) );
+						}
+					}	
+				}
+			}
+			break;
 		}
 	}
 	if ( pCurWin )
diff --git basctl/uiconfig/basicide/menubar/menubar.xml basctl/uiconfig/basicide/menubar/menubar.xml
index 8093ae4..d634dc1 100644
--- basctl/uiconfig/basicide/menubar/menubar.xml
+++ basctl/uiconfig/basicide/menubar/menubar.xml
@@ -59,6 +59,7 @@
 					<menu:menuitem menu:id=".uno:MacroRecorder"/>
 					<menu:menuitem menu:id=".uno:RunMacro"/>
 					<menu:menu menu:id=".uno:ScriptOrganizer"/>
+					<menu:menuitem menu:id=".uno:VBAEnabled"/>
 					<menu:menuseparator/>
 					<menu:menuitem menu:id=".uno:MacroOrganizer?TabId:short=1"/>
 				</menu:menupopup>
diff --git officecfg/registry/data/org/openoffice/Office/UI/GenericCommands.xcu officecfg/registry/data/org/openoffice/Office/UI/GenericCommands.xcu
index ff2fa98..6d796ab 100644
--- officecfg/registry/data/org/openoffice/Office/UI/GenericCommands.xcu
+++ officecfg/registry/data/org/openoffice/Office/UI/GenericCommands.xcu
@@ -4198,6 +4198,11 @@
 					<value xml:lang="en-US">R~un Macro...</value>
 				</prop>
 			</node>
+			<node oor:name=".uno:VBAEnabled" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="en-US">VBA Enabled</value>
+				</prop>
+			</node>
 			<node oor:name=".uno:Gallery" oor:op="replace">
 				<prop oor:name="Label" oor:type="xs:string">
 					<value xml:lang="en-US">~Gallery</value>
diff --git sfx2/inc/sfx2/sfxsids.hrc sfx2/inc/sfx2/sfxsids.hrc
index 0b61bb6..672a667 100644
--- sfx2/inc/sfx2/sfxsids.hrc
+++ sfx2/inc/sfx2/sfxsids.hrc
@@ -1197,6 +1197,7 @@
 #define SID_BASICIDE_ARG_DOCUMENT_MODEL     ( SID_BASICIDE_START + 51 )
 #define SID_BASICIDE_MANAGE_LANG        	( SID_BASICIDE_START + 52 )
 #define SID_BASICIDE_CURRENT_LANG			( SID_BASICIDE_START + 53 )
+#define SID_BASICIDE_VBAENABLED				( SID_BASICIDE_START + 54 )
 
 // SlotIds f"ur Apps --------------------------------------------------------
 #define FN_PARAM                            (SID_SW_START + 1100)
diff --git sfx2/sdi/sfx.sdi sfx2/sdi/sfx.sdi
index e5c5be8..55fe3fb 100644
--- sfx2/sdi/sfx.sdi
+++ sfx2/sdi/sfx.sdi
@@ -1036,6 +1036,33 @@ SfxStringItem ChooseMacro SID_BASICIDE_CHOOSEMACRO
 ]
 
 //--------------------------------------------------------------------------
+SfxBoolItem VBAEnabled SID_BASICIDE_VBAENABLED
+
+[
+	/* flags: */
+	AutoUpdate = TRUE,
+	Cachable = Cachable,
+	FastCall = FALSE,
+	HasCoreId = FALSE,
+	HasDialog = FALSE,
+	ReadOnlyDoc = TRUE,
+	Toggle = FALSE,
+	Container = TRUE,
+	RecordAbsolute = FALSE,
+	NoRecord;
+	Synchron;
+
+	Readonly = FALSE,
+
+	/* config: */
+	AccelConfig = TRUE,
+	MenuConfig = TRUE,
+	StatusBarConfig = FALSE,
+	ToolBoxConfig = TRUE,
+	GroupId = GID_MACRO;
+]
+
+//--------------------------------------------------------------------------
 SfxVoidItem ClearHistory SID_CLEARHISTORY
 ()
 [
