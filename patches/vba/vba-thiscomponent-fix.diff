diff --git sc/source/ui/unoobj/docuno.cxx sc/source/ui/unoobj/docuno.cxx
index b621d90..9570e22 100644
--- sc/source/ui/unoobj/docuno.cxx
+++ sc/source/ui/unoobj/docuno.cxx
@@ -105,6 +105,8 @@
 using namespace com::sun::star;
 using namespace com::sun::star::document::VbaEventId;
 
+#define SC_UNO_VBADOCOBJ "ThisVBADocObj" // perhaps we want to actually make this ThisWorkbook ?
+
 //------------------------------------------------------------------------
 
 //	alles ohne Which-ID, Map nur fuer PropertySetInfo
@@ -119,6 +121,7 @@ const SfxItemPropertyMapEntry* lcl_GetDocOptPropertyMap()
         {MAP_CHAR_LEN(SC_UNO_AUTOCONTFOC),       0, &getBooleanCppuType(),                                    0, 0},
         {MAP_CHAR_LEN(SC_UNO_BASICLIBRARIES),    0, &getCppuType((uno::Reference< script::XLibraryContainer >*)0), beans::PropertyAttribute::READONLY, 0},
         {MAP_CHAR_LEN(SC_UNO_DIALOGLIBRARIES),   0, &getCppuType((uno::Reference< script::XLibraryContainer >*)0), beans::PropertyAttribute::READONLY, 0},
+        {MAP_CHAR_LEN(SC_UNO_VBADOCOBJ),   0, &getCppuType((beans::PropertyValue*)0), beans::PropertyAttribute::READONLY, 0},
         {MAP_CHAR_LEN(SC_UNO_CALCASSHOWN),       PROP_UNO_CALCASSHOWN, &getBooleanCppuType(),                                    0, 0},
         {MAP_CHAR_LEN(SC_UNONAME_CLOCAL),        0, &getCppuType((lang::Locale*)0),                           0, 0},
         {MAP_CHAR_LEN(SC_UNO_CJK_CLOCAL),        0, &getCppuType((lang::Locale*)0),                           0, 0},
@@ -1581,6 +1584,18 @@ uno::Any SAL_CALL ScModelObj::getPropertyValue( const rtl::OUString& aPropertyNa
         {
             aRet <<= pDocShell->GetDialogContainer();
         }
+        else if ( aString.EqualsAscii( SC_UNO_VBADOCOBJ ) )
+        {
+            // PropertyValue seems extreme because we store
+            // the model ( as the value member ) of the PropertyValue that is
+            // itself a property of the model ( the intention however is to 
+            // store something like a Workbook object... but we don't do that )
+            // yet
+            beans::PropertyValue aProp;
+            aProp.Name = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("ThisExcelDoc") );
+            aProp.Value <<= pDocShell->GetModel();
+            aRet <<= aProp;
+        }
         else if ( aString.EqualsAscii( SC_UNO_RUNTIMEUID ) )
         {
             aRet <<= getRuntimeUID();
diff --git sfx2/source/doc/objxtor.cxx sfx2/source/doc/objxtor.cxx
index e267793..fb43eaf 100644
--- sfx2/source/doc/objxtor.cxx
+++ sfx2/source/doc/objxtor.cxx
@@ -147,6 +147,13 @@ void lcl_UpdateAppBasicDocVars(  const Reference< XInterface >& _rxComponent, bo
         {
             try
             {
+                // ThisVBADocObj contains a PropertyValue
+                // Name  is ( the name of the VBA global to insert )
+                // Value is the Object to insert.
+                // ( note: at the moment the Value is actually the model so
+                // it strictly is not necessary, however we do intend to store
+                // not the model in basic but a custom object, so we keep this
+                // level of indirection for future proofing )
                 beans::PropertyValue aProp;
                 xProps->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("ThisVBADocObj") ) ) >>= aProp;
                 rtl::OString sTmp( rtl::OUStringToOString( aProp.Name, RTL_TEXTENCODING_UTF8 ) );
