--- basic/source/runtime/methods.cxx.orig	2008-07-22 22:11:52.000000000 +0800
+++ basic/source/runtime/methods.cxx	2008-07-23 10:27:43.000000000 +0800
@@ -1401,26 +1401,33 @@ RTLFUNC(Replace)
 		if ( nArgCount == 6 )
 			bTextMode = rPar.Get(6)->GetInteger();
 
-		USHORT nStrLen = aExpStr.Len();
+        USHORT nExpStrLen = aExpStr.Len();
+        USHORT nFindStrLen = aFindStr.Len();
+        USHORT nReplaceStrLen = aReplaceStr.Len();
 
-		if( lStartPos <= nStrLen )
+        if( lStartPos <= nExpStrLen )
 		{
-			String aSrcStr( aExpStr );
-			if( bTextMode )
+            USHORT nPos = static_cast<USHORT>( lStartPos - 1 );
+            USHORT nCounts = 0;
+            while( lCount == -1 || lCount > nCounts )
 			{
+                String aSrcStr( aExpStr );
+                if( bTextMode )
+                {
 					aSrcStr.ToUpperAscii();
 					aFindStr.ToUpperAscii();
-			}
-			
-			USHORT nPos = aSrcStr.Search( aFindStr, static_cast<USHORT>( lStartPos - 1 ) );
-			USHORT nCounts = 0;
-			USHORT nReplaceLength = aReplaceStr.Len() ? aReplaceStr.Len():1;
-			while( nPos != STRING_NOTFOUND && (lCount == -1 || lCount > nCounts) )
-			{
-				aExpStr.Replace( nPos, aFindStr.Len(), aReplaceStr );
-				nPos = nPos + nReplaceLength;
+                }
 				nPos = aSrcStr.Search( aFindStr, nPos );
-				nCounts++;
+                if( nPos != STRING_NOTFOUND )
+                {
+                    aExpStr.Replace( nPos, nFindStrLen, aReplaceStr );
+                    nPos = nPos - nFindStrLen + nReplaceStrLen + 1;
+                    nCounts++;
+                }
+                else
+                {
+                    break;
+                }
 			}
 		}
 		rPar.Get(0)->PutString( aExpStr.Copy( static_cast<USHORT>(lStartPos - 1) )  );
