diff --git basic/inc/basic/sbstar.hxx basic/inc/basic/sbstar.hxx
index 5f2d594..ea7e75e 100644
--- basic/inc/basic/sbstar.hxx
+++ basic/inc/basic/sbstar.hxx
@@ -204,6 +204,7 @@ public:
 	SbxObjectRef getRTL( void ) { return pRtl; }
 	BOOL IsDocBasic() { return bDocBasic; }
 	SbxVariable* VBAFind( const String& rName, SbxClassType t );
+    bool GetUNOConstant( const sal_Char* _pAsciiName, ::com::sun::star::uno::Any& aOut );
 };
 
 #ifndef __SB_SBSTARBASICREF_HXX
diff --git basic/source/basmgr/basmgr.cxx basic/source/basmgr/basmgr.cxx
index 63c4376..1b25f42 100644
--- basic/source/basmgr/basmgr.cxx
+++ basic/source/basmgr/basmgr.cxx
@@ -1840,15 +1840,7 @@ bool BasicManager::GetGlobalUNOConstant( const sal_Char* _pAsciiName, ::com::sun
     StarBASIC* pStandardLib = GetStdLib();
     OSL_PRECOND( pStandardLib, "BasicManager::SetGlobalUNOConstant: no lib to insert into!" );
     if ( pStandardLib )
-    {
-        ::rtl::OUString sVarName( ::rtl::OUString::createFromAscii( _pAsciiName ) );
-        SbUnoObject* pGlobs = dynamic_cast<SbUnoObject*>( pStandardLib->Find( sVarName, SbxCLASS_DONTCARE ) );
-        if ( pGlobs )
-        {
-            aOut = pGlobs->getUnoAny(); 
-            bRes = true;
-        } 
-    }
+        bRes = pStandardLib->GetUNOConstant( _pAsciiName, aOut );
     return bRes;
 }
 
diff --git basic/source/classes/sb.cxx basic/source/classes/sb.cxx
index 302a2ed..de99045 100644
--- basic/source/classes/sb.cxx
+++ basic/source/classes/sb.cxx
@@ -1547,6 +1547,18 @@ BOOL StarBASIC::LoadOldModules( SvStream& )
 	return FALSE;
 }
 
+bool StarBASIC::GetUNOConstant( const sal_Char* _pAsciiName, ::com::sun::star::uno::Any& aOut )
+{
+    bool bRes = false;
+    ::rtl::OUString sVarName( ::rtl::OUString::createFromAscii( _pAsciiName ) );
+    SbUnoObject* pGlobs = dynamic_cast<SbUnoObject*>( Find( sVarName, SbxCLASS_DONTCARE ) );
+    if ( pGlobs )
+    {
+        aOut = pGlobs->getUnoAny();
+        bRes = true;
+    }
+    return bRes;
+}
 
 //========================================================================
 // #118116 Implementation Collection object
diff --git sc/source/ui/vba/vbarange.cxx sc/source/ui/vba/vbarange.cxx
index 5f62736..6f303f0 100644
--- sc/source/ui/vba/vbarange.cxx
+++ sc/source/ui/vba/vbarange.cxx
@@ -1976,8 +1976,7 @@ ScVbaRange::Select() throw (uno::RuntimeException)
 		// ThisComponent.CurrentController.Frame.getContainerWindow.SetFocus
 		try
 		{
-			// #FIXME don't use current document
-			uno::Reference< frame::XController > xController( getCurrentDocument()->getCurrentController(), uno::UNO_QUERY_THROW );
+            uno::Reference< frame::XController > xController( xModel->getCurrentController(), uno::UNO_QUERY_THROW );
 			uno::Reference< frame::XFrame > xFrame( xController->getFrame(), uno::UNO_QUERY_THROW );
 			uno::Reference< awt::XWindow > xWin( xFrame->getContainerWindow(), uno::UNO_QUERY_THROW );
 			xWin->setFocus();
@@ -2547,8 +2546,7 @@ ScVbaRange::PasteSpecial( const uno::Any& Paste, const uno::Any& Operation, cons
 	// #FIXME doen't use current document
 	uno::Reference< view::XSelectionSupplier > xSelection( getCurrentDocument()->getCurrentController(), uno::UNO_QUERY_THROW );
 	// save old selection
-	// #FIXME doen't use current document
-	uno::Reference< uno::XInterface > xSel(  getCurrentDocument()->getCurrentSelection() );
+    uno::Reference< uno::XInterface > xSel( getScDocShell()->GetModel()->getCurrentSelection() );
 	// select this range
 	xSelection->select( uno::makeAny( mxRange ) );
 	// set up defaults	
@@ -3905,7 +3903,6 @@ ScVbaRange::ApplicationRange( const uno::Reference< uno::XComponentContext >& xC
 			}
 		}
 	}
-	// #FIXME don't use current document
 	uno::Reference< sheet::XSpreadsheetView > xView( getCurrentDocument()->getCurrentController(), uno::UNO_QUERY );
 	uno::Reference< table::XCellRange > xSheetRange( xView->getActiveSheet(), uno::UNO_QUERY_THROW ); 
 	ScVbaRange* pRange = new ScVbaRange( uno::Reference< XHelperInterface >(), xContext, xSheetRange );
diff --git vbahelper/inc/vbahelper/vbahelper.hxx vbahelper/inc/vbahelper/vbahelper.hxx
index cfc8ee0..29e8236 100644
--- vbahelper/inc/vbahelper/vbahelper.hxx
+++ vbahelper/inc/vbahelper/vbahelper.hxx
@@ -65,6 +65,8 @@ namespace ooo
         VBAHELPER_DLLPUBLIC css::uno::Reference< css::uno::XInterface > createVBAUnoAPIService( SfxObjectShell* pShell,  const sal_Char* _pAsciiName ) throw (css::uno::RuntimeException);
         VBAHELPER_DLLPUBLIC css::uno::Reference< css::uno::XInterface > createVBAUnoAPIServiceWithArgs( SfxObjectShell* pShell,  const sal_Char* _pAsciiName, const css::uno::Sequence< css::uno::Any >& aArgs ) throw (css::uno::RuntimeException);
         VBAHELPER_DLLPUBLIC css::uno::Reference< css::frame::XModel > getCurrentDocument() throw (css::uno::RuntimeException);
+        VBAHELPER_DLLPUBLIC css::uno::Reference< css::frame::XModel > getDocumentContext() throw (css::uno::RuntimeException);
+
 		VBAHELPER_DLLPUBLIC css::uno::Reference< css::beans::XIntrospectionAccess > getIntrospectionAccess( const css::uno::Any& aObject ) throw (css::uno::RuntimeException);
 		VBAHELPER_DLLPUBLIC css::uno::Reference< css::script::XTypeConverter > getTypeConverter( const css::uno::Reference< css::uno::XComponentContext >& xContext ) throw (css::uno::RuntimeException);
 
