Index: basic/source/runtime/runtime.cxx
===================================================================
RCS file: /cvs/script/basic/source/runtime/runtime.cxx,v
retrieving revision 1.25
diff -u -p -r1.25 runtime.cxx
--- basic/source/runtime/runtime.cxx	4 Nov 2005 15:33:49 -0000	1.25
+++ basic/source/runtime/runtime.cxx	21 Dec 2005 10:27:06 -0000
@@ -1116,4 +1271,10 @@ void SbiRuntime::DllCall
 		Error( nErr );
 	PushVar( pRes );
 }
-
+#ifdef ENABLE_VBA
+USHORT
+SbiRuntime::GetImageFlag( USHORT n ) const
+{ 
+	return pImg->GetFlag( n ); 
+}
+#endif //ENABLE_VBA
Index: basic/source/inc/runtime.hxx
===================================================================
RCS file: /cvs/script/basic/source/inc/runtime.hxx,v
retrieving revision 1.26
diff -u -p -r1.26 runtime.hxx
--- basic/source/inc/runtime.hxx	4 Nov 2005 15:33:21 -0000	1.26
+++ basic/source/inc/runtime.hxx	21 Dec 2005 10:47:23 -0000
@@ -467,6 +467,9 @@ class SbiRuntime
 	void StepDCREATE_REDIMP(USHORT,USHORT), StepDCREATE_IMPL(USHORT,USHORT,BOOL);
 	void StepFIND_CM( USHORT, USHORT );
 public:
+#ifdef ENABLE_VBA
+	USHORT		GetImageFlag( USHORT n ) const;
+#endif //ENABLE_VBA
 	xub_StrLen  nLine,nCol1,nCol2;	// aktuelle Zeile, Spaltenbereich
 	SbiRuntime* pNext;               // Stack-Chain
 
Index: basic/source/comp/parser.cxx
===================================================================
RCS file: /cvs/script/basic/source/comp/parser.cxx,v
retrieving revision 1.13
diff -u -p -r1.13 parser.cxx
--- basic/source/comp/parser.cxx	29 Sep 2005 16:17:04 -0000	1.13
+++ basic/source/comp/parser.cxx	21 Dec 2005 10:27:07 -0000
@@ -150,6 +151,9 @@ SbiParser::SbiParser( StarBASIC* pb, SbM
 	bSingleLineIf =
 	bExplicit = FALSE;
 	bClassModule = FALSE;
+#ifdef ENABLE_VBA
+	bOptionBaseOne = FALSE;
+#endif //ENABLE_VBA
 	pPool	 = &aPublics;
 	for( short i = 0; i < 26; i++ )
 		eDefTypes[ i ] = SbxVARIANT;    // Kein expliziter Defaulttyp
@@ -678,6 +685,10 @@ void SbiParser::Option()
 				if( nVal == 0 || nVal == 1 )
 				{
 					nBase = (short) nVal;
+#ifdef ENABLE_VBA
+					if ( nBase )
+						bOptionBaseOne = TRUE;
+#endif //ENABLE_VBA
 					break;
 				}
 			}

--- basic/source/inc/parser.hxx	29 Sep 2005 16:31:38 -0000	1.8
+++ basic/source/inc/parser.hxx	21 Dec 2005 11:19:01 -0000
@@ -94,6 +94,9 @@ public:
 	BOOL		  bText;			// OPTION COMPARE TEXT
 	BOOL          bExplicit; 		// TRUE: OPTION EXPLICIT
 	BOOL          bClassModule;		// TRUE: OPTION ClassModule
+#ifdef ENABLE_VBA
+	BOOL          bOptionBaseOne;		// TRUE: OPTION Base 1 otherwise default Base 0
+#endif //ENABLE_VBA
 	IfaceVector   aIfaceVector;		// Holds all interfaces implemented by a class module
 	SbxDataType   eDefTypes[26];	// DEFxxx-Datentypen
 
Index: basic/source/comp/codegen.cxx
===================================================================
RCS file: /cvs/script/basic/source/comp/codegen.cxx,v
retrieving revision 1.11
diff -u -p -r1.11 codegen.cxx
--- basic/source/comp/codegen.cxx	29 Sep 2005 16:17:04 -0000	1.11
+++ basic/source/comp/codegen.cxx	21 Dec 2005 10:27:07 -0000
@@ -136,6 +136,10 @@ void SbiCodeGen::Save()
 	// OPTION EXPLICIT-Flag uebernehmen
 	if( pParser->bExplicit )
 		p->SetFlag( SBIMG_EXPLICIT );
+#ifdef ENABLE_VBA
+	if( pParser->bOptionBaseOne )
+		p->SetFlag( SBIMG_OPTIONBASEONE );
+#endif //ENABLE_VBA
 	
 	int nIfaceCount = 0;
 	if( pParser->bClassModule )
Index: basic/source/inc/image.hxx
===================================================================
RCS file: /cvs/script/basic/source/inc/image.hxx,v
retrieving revision 1.8
diff -u -p -r1.8 image.hxx
--- basic/source/inc/image.hxx	29 Sep 2005 16:31:38 -0000	1.8
+++ basic/source/inc/image.hxx	21 Dec 2005 10:27:07 -0000
@@ -103,5 +103,8 @@ public:
 #define	SBIMG_COMPARETEXT	0x0002	// OPTION COMPARE TEXT ist aktiv
 #define	SBIMG_INITCODE		0x0004	// Init-Code vorhanden
 #define	SBIMG_CLASSMODULE	0x0008	// OPTION ClassModule is active
+#ifdef ENABLE_VBA
+#define	SBIMG_OPTIONBASEONE	0x0010	// OPTION Base is 1
+#endif //ENABLE_VBA
 
 #endif
Index: basic/source/classes/sbunoobj.cxx
===================================================================
RCS file: /cvs/script/basic/source/classes/sbunoobj.cxx,v
retrieving revision 1.35
diff -u -p -r1.35 sbunoobj.cxx
--- basic/source/classes/sbunoobj.cxx	29 Sep 2005 16:10:51 -0000	1.35
+++ basic/source/classes/sbunoobj.cxx	21 Dec 2005 10:27:09 -0000
@@ -97,6 +97,10 @@ using namespace com::sun::star::bridge;
 using namespace cppu;
 using namespace rtl;
 
+#ifdef ENABLE_VBA 
+// Honour Option Base 1 
+bool IsBaseIndexOne();
+#endif //ENABLE_VBA
 
 #include<sbstar.hxx>
 #include<sbuno.hxx>
@@ -566,7 +667,6 @@ void unoToSbxValue( SbxVariable* pVar, c
 		case TypeClass_EXCEPTION:		break;
 		case TypeClass_ARRAY:			break;
 		*/
-
 		case TypeClass_ENUM:
 		{
 			sal_Int32 nEnum = 0;
@@ -574,7 +674,6 @@ void unoToSbxValue( SbxVariable* pVar, c
 			pVar->PutLong( nEnum );
 		}
 			break;
-
 		case TypeClass_SEQUENCE:
 		{
 			Reference< XIdlClass > xIdlTargetClass = TypeToIdlClass( aType );
@@ -593,18 +692,29 @@ void unoToSbxValue( SbxVariable* pVar, c
     		xArray = new SbxDimArray( eSbxElementType );
 			if( nLen > 0 )
             {
-				xArray->unoAddDim32( 0, nLen - 1 );
+#ifdef ENABLE_VBA
+// Honour Option Base 1
+				if ( IsBaseIndexOne() && SbiRuntime::isVBAEnabled() )	
+					xArray->unoAddDim32( 1, nLen );
+				else
+#endif //ENABLE_VBA
+					xArray->unoAddDim32( 0, nLen - 1 );
 
 			    // Elemente als Variablen eintragen
 			    for( i = 0 ; i < nLen ; i++ )
 			    {
+					sal_Int32 index = i;	
 				    // Elemente wandeln
 				    Any aElementAny = xIdlArray->get( aValue, (UINT32)i );
 				    SbxVariableRef xVar = new SbxVariable( eSbxElementType );
 				    unoToSbxValue( (SbxVariable*)xVar, aElementAny );
-
+#ifdef ENABLE_VBA
+// Honour Option Base 1
+				if ( IsBaseIndexOne() && SbiRuntime::isVBAEnabled() )	
+					index++;
+#endif //ENABLE_VBA
 				    // Ins Array braten
-				    xArray->Put32( (SbxVariable*)xVar, &i );
+				    xArray->Put32( (SbxVariable*)xVar, &index );
 			    }
             }
             else

 

Index: basic/source/runtime/methods1.cxx
===================================================================
RCS file: /cvs/script/basic/source/runtime/methods1.cxx,v
retrieving revision 1.23
diff -u -p -r1.23 methods1.cxx
--- basic/source/runtime/methods1.cxx	7 Sep 2005 21:40:12 -0000	1.23
+++ basic/source/runtime/methods1.cxx	21 Dec 2005 11:29:20 -0000
@@ -100,6 +100,10 @@
 #include "sbunoobj.hxx"
 #endif
 #include "propacc.hxx"
+#ifdef ENABLE_VBA
+#include <image.hxx>
+
+#endif //ENABLE_VBA
 
 
 #ifndef _COMPHELPER_PROCESSFACTORY_HXX_
@@ -590,6 +594,20 @@ RTLFUNC(FreeLibrary)
 	ByteString aByteDLLName( rPar.Get(1)->GetString(), gsl_getSystemTextEncoding() );
 	pINST->GetDllMgr()->FreeDll( aByteDLLName );
 }
+#ifdef ENABLE_VBA
+bool IsBaseIndexOne()
+{
+	bool result = false;
+	if ( pINST )
+		if ( pINST->pRun )
+		{
+			USHORT res = pINST->pRun->GetImageFlag( SBIMG_OPTIONBASEONE );
+			if ( res )
+				result = true;
+		}	
+	return result;
+}
+#endif //ENABLE_VBA
 
 RTLFUNC(Array)
 {
@@ -598,7 +598,12 @@ RTLFUNC(Array)
 
 	// Option Base zunaechst ignorieren (kennt leider nur der Compiler)
 	if( nArraySize )
-		pArray->AddDim( 0, nArraySize-1 );
+#ifdef ENABLE_VBA
+		if ( IsBaseIndexOne() && SbiRuntime::isVBAEnabled() )	
+			pArray->AddDim( 1, nArraySize );
+		else
+#endif //ENABLE_VBA
+			pArray->AddDim( 0, nArraySize-1 );
 	else
 		pArray->unoAddDim( 0, -1 );
 
@@ -608,7 +613,12 @@ RTLFUNC(Array)
 		SbxVariable* pVar = rPar.Get(i+1);
 		SbxVariable* pNew = new SbxVariable( *pVar );
 		pNew->SetFlag( SBX_WRITE );
-		pArray->Put( pNew, &i );
+		short index = i;
+#ifdef ENABLE_VBA
+		if ( IsBaseIndexOne() && SbiRuntime::isVBAEnabled() )
+			++index; 
+#endif //ENABLE_VBA			
+		pArray->Put( pNew, &index );
 	}
 
 	// Array zurueckliefern
@@ -637,7 +669,12 @@ RTLFUNC(DimArray)
 				StarBASIC::Error( SbERR_OUT_OF_RANGE );
 				ub = 0;
 			}
-			pArray->AddDim32( 0, ub );
+#ifdef ENABLE_VBA
+			if (  IsBaseIndexOne() && SbiRuntime::isVBAEnabled() )
+				pArray->AddDim32( 1, ub+1 );
+			else
+#endif //ENABLE_VBA
+				pArray->AddDim32( 0, ub );
 		}
 	}
 	else
