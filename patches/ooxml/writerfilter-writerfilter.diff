--- writerfilter/inc/ooxml/OOXMLDocument.hxx	4 Jun 2007 08:15:11 -0000	1.9
+++ writerfilter/inc/ooxml/OOXMLDocument.hxx	16 Jul 2007 20:07:34 -0000	1.9.4.2
@@ -54,6 +54,39 @@
 #include <com/sun/star/xml/sax/XParser.hpp>
 #endif
 
+/**
+   @file OOXMLDocument.hxx
+
+   <h1>Import of OOXML WordprocessingML Documents</h1>
+
+   The following picture shows the classes involved in importing OOXML
+   WordprocessingML documents.
+
+   @image html ooxmlimportchain.png
+
+   The DOCX consists of parts. Each part is an XML document.  The
+   OOXMLDocument opens the DOCX and creates a SAX parser for the part
+   containing the main document content. The OOXMLDocument creates a
+   SAX handler, too. This handler is set as the handler for the events
+   created by the parser. Finally the OOXMLDocument initiates the
+   parsing process.
+
+   The SAX handler hosts a stack of contexts. Each context is an
+   instance of a class derived from OOXMLContext. There is a context
+   class for each <define> in the model.xml.
+
+   For a detailed information about how the contexts are handled see
+   the documentation for OOXMLContext.
+
+   The contexts know how to convert an element in OOXML to the
+   intermediate format that the domain mapper understands. They
+   enumerate the according entity in OOXML by sending the according
+   events to the domain mapper.
+
+   The domain mapper knows how to convert the intermediate format to
+   API calls. It takes the events sent by the contexts and uses the
+   core API to insert the according elements to the core.
+ */
 
 namespace ooxml
 {
@@ -64,13 +97,24 @@
 class WRITERFILTER_DLLPUBLIC OOXMLStream 
 {
 public:
-    enum StreamType_t { UNKNOWN, DOCUMENT, STYLES, FONTTABLE, NUMBERING, FOOTNOTES, ENDNOTES, COMMENTS };
+    enum StreamType_t { UNKNOWN, DOCUMENT, STYLES, FONTTABLE, NUMBERING, FOOTNOTES, ENDNOTES, COMMENTS, THEME };
     typedef boost::shared_ptr<OOXMLStream> Pointer_t;
 
     virtual ~OOXMLStream() {}
 
+    /**
+       Returns parser for this stream.
+     */
     virtual uno::Reference<xml::sax::XParser> getParser() = 0;
+
+    /**
+       Returns input stream for this stream.
+     */
     virtual uno::Reference<io::XInputStream> getInputStream() = 0;
+
+    /**
+       Returns component context for this stream.
+     */
     virtual uno::Reference<uno::XComponentContext> getContext() = 0;
 };
 
@@ -84,19 +128,73 @@
 
     virtual ~OOXMLDocument() {}
 
-    virtual void resolve(Stream &) = 0;
+    /**
+       Resolves this document to a stream handler.
+
+       @param rStream     stream handler to resolve this document to
+     */
+    virtual void resolve(Stream & rStream) = 0;
     
+    /**
+       Returns string representation of the type of this reference.
+
+       DEBUGGING PURPOSE ONLY.
+     */
     virtual string getType() const = 0;
+    
+    /**
+       Resolves a footnote to a stream handler.
 
+       @param rStream       stream handler to resolve to
+       @param rNoteId       id of the footnote to resolve
+     */
     virtual void resolveFootnote(Stream & rStream, 
                                  const rtl::OUString & rNoteId) = 0;
+
+    /**
+       Resolves an endnote to a stream handler.
+
+       @param rStream       stream handler to resolve to
+       @param rNoteId       id of the endnote to resolve
+     */
     virtual void resolveEndnote(Stream & rStream, 
                                 const rtl::OUString & rNoteId) = 0;
+
+    /**
+       Resolves a comment to a stream handler.
+
+       @param rStream       stream handler to resolve to
+       @param rComment      id of the comment to resolve
+     */
     virtual void resolveComment(Stream & rStream, 
-                                const rtl::OUString & rNoteId) = 0;
+                                const rtl::OUString & rCommentId) = 0;
+
+    /**
+       Resolves a header to a stream handler.
+
+       @param rStream       stream handler to resolve to
+       @param type          type of header to resolve:
+                            NS_ooxml::LN_Value_ST_HrdFtr_even     header on even page
+                            NS_ooxml::LN_Value_ST_HrdFtr_default  header on right page
+                            NS_ooxml::LN_Value_ST_HrdFtr_first    header on first page
+       
+       @param rId           id of the header
+     */
     virtual void resolveHeader(Stream & rStream,
                                const sal_Int32 type,
                                const rtl::OUString & rId) = 0;
+
+    /**
+       Resolves a footer to a stream handler.
+
+       @param rStream       stream handler to resolve to
+       @param type          type of footer to resolve:
+                            NS_ooxml::LN_Value_ST_HrdFtr_even     header on even page
+                            NS_ooxml::LN_Value_ST_HrdFtr_default  header on right page
+                            NS_ooxml::LN_Value_ST_HrdFtr_first    header on first page
+                            
+       @param rId           id of the header
+    */
     virtual void resolveFooter(Stream & rStream,
                                const sal_Int32 type,
                                const rtl::OUString & rId) = 0;
--- writerfilter/inc/ooxml/resourceids.hxx	27 Jun 2007 08:42:39 -0000	1.59
+++ writerfilter/inc/ooxml/resourceids.hxx	16 Jul 2007 10:51:06 -0000	1.59.4.4
@@ -136,408 +136,425 @@
     const QName_t LN_CT_Markup_id = 90391;
     const QName_t LN_CT_TrackChange_author = 90392;
     const QName_t LN_CT_TrackChange_date = 90393;
-    const QName_t LN_CT_Comment_initials = 90395;
-    const QName_t LN_CT_SectPrChange_sectPr = 90396;
-    const QName_t LN_CT_NumPr_numberingChange = 90399;
-    const QName_t LN_CT_NumPr_ins = 90400;
-    const QName_t LN_CT_Tabs_tab = 90407;
-    const QName_t LN_CT_PPrBase_pStyle = 90408;
-    const QName_t LN_CT_PPrBase_framePr = 90412;
-    const QName_t LN_CT_PPrBase_windowControl = 90413;
-    const QName_t LN_CT_PPrBase_numPr = 90414;
-    const QName_t LN_CT_PrBase_pBdr = 90416;
-    const QName_t LN_CT_PPrBase_tabs = 90418;
-    const QName_t LN_CT_PPrBase_kinsoku = 90420;
-    const QName_t LN_CT_PPrBase_wordWrap = 90421;
-    const QName_t LN_CT_PPrBase_adjustRightInd = 90427;
-    const QName_t LN_CT_PPrBase_snapToGrid = 90428;
-    const QName_t LN_CT_PPrBase_spacing = 90429;
-    const QName_t LN_CT_PPrBase_ind = 90430;
-    const QName_t LN_CT_PPrBase_divId = 90439;
-    const QName_t LN_CT_PPrBase_cnfStyle = 90440;
-    const QName_t LN_CT_PPr_rPr = 90441;
-    const QName_t LN_CT_PPr_sectPr = 90442;
-    const QName_t LN_CT_PPr_pPrChange = 90443;
-    const QName_t LN_CT_Rel_id = 90444;
-    const QName_t LN_Value_ST_NumberFormat_decimal = 90450;
-    const QName_t LN_Value_ST_NumberFormat_upperRoman = 90451;
-    const QName_t LN_Value_ST_NumberFormat_lowerRoman = 90452;
-    const QName_t LN_Value_ST_NumberFormat_upperLetter = 90453;
-    const QName_t LN_Value_ST_NumberFormat_lowerLetter = 90454;
-    const QName_t LN_Value_ST_NumberFormat_ordinal = 90455;
-    const QName_t LN_Value_ST_NumberFormat_cardinalText = 90456;
-    const QName_t LN_Value_ST_NumberFormat_ordinalText = 90457;
-    const QName_t LN_Value_ST_NumberFormat_hex = 90458;
-    const QName_t LN_Value_ST_NumberFormat_chicago = 90459;
-    const QName_t LN_Value_ST_NumberFormat_ideographDigital = 90460;
-    const QName_t LN_Value_ST_NumberFormat_japaneseCounting = 90461;
-    const QName_t LN_Value_ST_NumberFormat_aiueo = 90462;
-    const QName_t LN_Value_ST_NumberFormat_iroha = 90463;
-    const QName_t LN_Value_ST_NumberFormat_decimalFullWidth = 90464;
-    const QName_t LN_Value_ST_NumberFormat_decimalHalfWidth = 90465;
-    const QName_t LN_Value_ST_NumberFormat_japaneseLegal = 90466;
-    const QName_t LN_Value_ST_NumberFormat_japaneseDigitalTenThousand = 90467;
-    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedCircle = 90468;
-    const QName_t LN_Value_ST_NumberFormat_decimalFullWidth2 = 90469;
-    const QName_t LN_Value_ST_NumberFormat_aiueoFullWidth = 90470;
-    const QName_t LN_Value_ST_NumberFormat_irohaFullWidth = 90471;
-    const QName_t LN_Value_ST_NumberFormat_decimalZero = 90472;
-    const QName_t LN_Value_ST_NumberFormat_bullet = 90473;
-    const QName_t LN_Value_ST_NumberFormat_ganada = 90474;
-    const QName_t LN_Value_ST_NumberFormat_chosung = 90475;
-    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedFullstop = 90476;
-    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedParen = 90477;
-    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedCircleChinese = 90478;
-    const QName_t LN_Value_ST_NumberFormat_ideographEnclosedCircle = 90479;
-    const QName_t LN_Value_ST_NumberFormat_ideographTraditional = 90480;
-    const QName_t LN_Value_ST_NumberFormat_ideographZodiac = 90481;
-    const QName_t LN_Value_ST_NumberFormat_ideographZodiacTraditional = 90482;
-    const QName_t LN_Value_ST_NumberFormat_taiwaneseCounting = 90483;
-    const QName_t LN_Value_ST_NumberFormat_ideographLegalTraditional = 90484;
-    const QName_t LN_Value_ST_NumberFormat_taiwaneseCountingThousand = 90485;
-    const QName_t LN_Value_ST_NumberFormat_taiwaneseDigital = 90486;
-    const QName_t LN_Value_ST_NumberFormat_chineseCounting = 90487;
-    const QName_t LN_Value_ST_NumberFormat_chineseLegalSimplified = 90488;
-    const QName_t LN_Value_ST_NumberFormat_chineseCountingThousand = 90489;
-    const QName_t LN_Value_ST_NumberFormat_koreanDigital = 90490;
-    const QName_t LN_Value_ST_NumberFormat_koreanCounting = 90491;
-    const QName_t LN_Value_ST_NumberFormat_koreanLegal = 90492;
-    const QName_t LN_Value_ST_NumberFormat_koreanDigital2 = 90493;
-    const QName_t LN_Value_ST_NumberFormat_vietnameseCounting = 90494;
-    const QName_t LN_Value_ST_NumberFormat_russianLower = 90495;
-    const QName_t LN_Value_ST_NumberFormat_russianUpper = 90496;
-    const QName_t LN_Value_ST_NumberFormat_none = 90497;
-    const QName_t LN_Value_ST_NumberFormat_numberInDash = 90498;
-    const QName_t LN_Value_ST_NumberFormat_hebrew1 = 90499;
-    const QName_t LN_Value_ST_NumberFormat_hebrew2 = 90500;
-    const QName_t LN_Value_ST_NumberFormat_arabicAlpha = 90501;
-    const QName_t LN_Value_ST_NumberFormat_arabicAbjad = 90502;
-    const QName_t LN_Value_ST_NumberFormat_hindiVowels = 90503;
-    const QName_t LN_Value_ST_NumberFormat_hindiConsonants = 90504;
-    const QName_t LN_Value_ST_NumberFormat_hindiNumbers = 90505;
-    const QName_t LN_Value_ST_NumberFormat_hindiCounting = 90506;
-    const QName_t LN_Value_ST_NumberFormat_thaiLetters = 90507;
-    const QName_t LN_Value_ST_NumberFormat_thaiNumbers = 90508;
-    const QName_t LN_Value_ST_NumberFormat_thaiCounting = 90509;
-    const QName_t LN_CT_PageSz_w = 90512;
-    const QName_t LN_CT_PageSz_h = 90513;
-    const QName_t LN_CT_PageSz_orient = 90514;
-    const QName_t LN_CT_PageSz_code = 90515;
-    const QName_t LN_CT_PageMar_top = 90516;
-    const QName_t LN_CT_PageMar_right = 90517;
-    const QName_t LN_CT_PageMar_bottom = 90518;
-    const QName_t LN_CT_PageMar_left = 90519;
-    const QName_t LN_CT_PageMar_header = 90520;
-    const QName_t LN_CT_PageMar_footer = 90521;
-    const QName_t LN_CT_PageMar_gutter = 90522;
-    const QName_t LN_Value_ST_ChapterSep_hyphen = 90523;
-    const QName_t LN_Value_ST_ChapterSep_period = 90524;
-    const QName_t LN_Value_ST_ChapterSep_colon = 90525;
-    const QName_t LN_Value_ST_ChapterSep_emDash = 90526;
-    const QName_t LN_Value_ST_ChapterSep_enDash = 90527;
-    const QName_t LN_CT_LineNumber_countBy = 90531;
-    const QName_t LN_CT_LineNumber_start = 90532;
-    const QName_t LN_CT_LineNumber_distance = 90533;
-    const QName_t LN_CT_LineNumber_restart = 90534;
-    const QName_t LN_CT_PageNumber_fmt = 90535;
-    const QName_t LN_CT_PageNumber_start = 90536;
-    const QName_t LN_CT_PageNumber_chapStyle = 90537;
-    const QName_t LN_CT_PageNumber_chapSep = 90538;
-    const QName_t LN_CT_Column_space = 90539;
-    const QName_t LN_CT_Column_w = 90540;
-    const QName_t LN_CT_Columns_equalWidth = 90541;
-    const QName_t LN_CT_Columns_space = 90542;
-    const QName_t LN_CT_Columns_num = 90543;
-    const QName_t LN_CT_Columns_sep = 90544;
-    const QName_t LN_CT_Columns_col = 90545;
-    const QName_t LN_Value_ST_HrdFtr_even = 90550;
-    const QName_t LN_Value_ST_HrdFtr_default = 90551;
-    const QName_t LN_Value_ST_HrdFtr_first = 90552;
-    const QName_t LN_CT_HdrFtrRef_type = 90553;
-    const QName_t LN_CT_HdrFtrRef_id = 90554;
-    const QName_t LN_EG_HdrFtrReferences_headerReference = 90555;
-    const QName_t LN_EG_HdrFtrReferences_footerReference = 90556;
-    const QName_t LN_EG_SectPrContents_bidi = 90557;
-    const QName_t LN_EG_SectPrContents_cols = 90558;
-    const QName_t LN_EG_SectPrContents_docGrid = 90559;
-    const QName_t LN_EG_SectPrContents_endnotePr = 90560;
-    const QName_t LN_EG_SectPrContents_footnotePr = 90561;
-    const QName_t LN_EG_SectPrContents_formProt = 90562;
-    const QName_t LN_EG_SectPrContents_lnNumType = 90563;
-    const QName_t LN_EG_SectPrContents_noEndnote = 90564;
-    const QName_t LN_EG_SectPrContents_paperSrc = 90565;
-    const QName_t LN_EG_SectPrContents_pgBorders = 90566;
-    const QName_t LN_EG_SectPrContents_pgMar = 90567;
-    const QName_t LN_EG_SectPrContents_pgNumType = 90568;
-    const QName_t LN_EG_SectPrContents_pgSz = 90569;
-    const QName_t LN_EG_SectPrContents_printerSettings = 90570;
-    const QName_t LN_EG_SectPrContents_rtlGutter = 90571;
-    const QName_t LN_EG_SectPrContents_textDirection = 90572;
-    const QName_t LN_EG_SectPrContents_titlePg = 90573;
-    const QName_t LN_EG_SectPrContents_vAlign = 90575;
-    const QName_t LN_CT_SectPr_sectPrChange = 90576;
-    const QName_t LN_Value_ST_BrType_column = 90577;
-    const QName_t LN_Value_ST_BrType_page = 90578;
-    const QName_t LN_Value_ST_BrType_textWrapping = 90579;
-    const QName_t LN_Value_ST_BrClear_none = 90580;
-    const QName_t LN_Value_ST_BrClear_left = 90581;
-    const QName_t LN_Value_ST_BrClear_right = 90582;
-    const QName_t LN_Value_ST_BrClear_all = 90583;
-    const QName_t LN_CT_Br_type = 90584;
-    const QName_t LN_CT_Br_clear = 90585;
-    const QName_t LN_Value_ST_PTabAlignment_left = 90586;
-    const QName_t LN_Value_ST_PTabAlignment_center = 90587;
-    const QName_t LN_Value_ST_PTabAlignment_right = 90588;
-    const QName_t LN_Value_ST_PTabRelativeTo_margin = 90589;
-    const QName_t LN_Value_ST_PTabRelativeTo_indent = 90590;
-    const QName_t LN_Value_ST_PTabLeader_none = 90591;
-    const QName_t LN_Value_ST_PTabLeader_dot = 90592;
-    const QName_t LN_Value_ST_PTabLeader_hyphen = 90593;
-    const QName_t LN_Value_ST_PTabLeader_underscore = 90594;
-    const QName_t LN_Value_ST_PTabLeader_middleDot = 90595;
-    const QName_t LN_CT_PTab_alignment = 90596;
-    const QName_t LN_CT_PTab_relativeTo = 90597;
-    const QName_t LN_CT_PTab_leader = 90598;
-    const QName_t LN_CT_Sym_font = 90599;
-    const QName_t LN_CT_Sym_char = 90600;
-    const QName_t LN_Value_ST_Hint_default = 90601;
-    const QName_t LN_Value_ST_Hint_eastAsia = 90602;
-    const QName_t LN_Value_ST_Hint_cs = 90603;
-    const QName_t LN_Value_ST_Theme_majorEastAsia = 90604;
-    const QName_t LN_Value_ST_Theme_majorBidi = 90605;
-    const QName_t LN_Value_ST_Theme_majorAscii = 90606;
-    const QName_t LN_Value_ST_Theme_majorHAnsi = 90607;
-    const QName_t LN_Value_ST_Theme_minorEastAsia = 90608;
-    const QName_t LN_Value_ST_Theme_minorBidi = 90609;
-    const QName_t LN_Value_ST_Theme_minorAscii = 90610;
-    const QName_t LN_Value_ST_Theme_minorHAnsi = 90611;
-    const QName_t LN_CT_Fonts_hint = 90612;
-    const QName_t LN_CT_Fonts_ascii = 90613;
-    const QName_t LN_CT_Fonts_hAnsi = 90614;
-    const QName_t LN_CT_Fonts_eastAsia = 90615;
-    const QName_t LN_CT_Fonts_cs = 90616;
-    const QName_t LN_CT_Fonts_asciiTheme = 90617;
-    const QName_t LN_CT_Fonts_hAnsiTheme = 90618;
-    const QName_t LN_CT_Fonts_eastAsiaTheme = 90619;
-    const QName_t LN_CT_Fonts_cstheme = 90620;
-    const QName_t LN_EG_RPrBase_rStyle = 90621;
-    const QName_t LN_EG_RPrBase_rFonts = 90622;
-    const QName_t LN_EG_RPrBase_snapToGrid = 90636;
-    const QName_t LN_EG_RPrBase_color = 90639;
-    const QName_t LN_EG_RPrBase_u = 90647;
-    const QName_t LN_EG_RPrBase_bdr = 90649;
-    const QName_t LN_EG_RPrBase_shd = 90650;
-    const QName_t LN_EG_RPrBase_fitText = 90651;
-    const QName_t LN_EG_RPrBase_vertAlign = 90652;
-    const QName_t LN_EG_RPrBase_rtl = 90653;
-    const QName_t LN_EG_RPrBase_lang = 90656;
-    const QName_t LN_EG_RPrBase_eastAsianLayout = 90657;
-    const QName_t LN_EG_RPrBase_oMath = 90659;
-    const QName_t LN_CT_ParaRPr_rPrChange = 90660;
-    const QName_t LN_Value_ST_TblWidth_nil = 90661;
-    const QName_t LN_Value_ST_TblWidth_pct = 90662;
-    const QName_t LN_Value_ST_TblWidth_dxa = 90663;
-    const QName_t LN_Value_ST_TblWidth_auto = 90664;
-    const QName_t LN_CT_Height_val = 90665;
-    const QName_t LN_CT_Height_hRule = 90666;
-    const QName_t LN_CT_TblWidth_w = 90667;
-    const QName_t LN_CT_TblWidth_type = 90668;
-    const QName_t LN_CT_TblGridBase_gridCol = 90669;
-    const QName_t LN_CT_TblGrid_tblGridChange = 90670;
-    const QName_t LN_CT_TcBorders_top = 90671;
-    const QName_t LN_CT_TcBorders_left = 90672;
-    const QName_t LN_CT_TcBorders_bottom = 90673;
-    const QName_t LN_CT_TcBorders_right = 90674;
-    const QName_t LN_CT_TcBorders_insideH = 90675;
-    const QName_t LN_CT_TcBorders_insideV = 90676;
-    const QName_t LN_CT_TcBorders_tl2br = 90677;
-    const QName_t LN_CT_TcBorders_tr2bl = 90678;
-    const QName_t LN_CT_TcMar_top = 90679;
-    const QName_t LN_CT_TcMar_left = 90680;
-    const QName_t LN_CT_TcMar_bottom = 90681;
-    const QName_t LN_CT_TcMar_right = 90682;
-    const QName_t LN_Value_ST_Merge_continue = 90683;
-    const QName_t LN_Value_ST_Merge_restart = 90684;
-    const QName_t LN_CT_TcPrBase_cnfStyle = 90685;
-    const QName_t LN_CT_TcPrBase_tcW = 90686;
-    const QName_t LN_CT_TcPrBase_gridSpan = 90687;
-    const QName_t LN_CT_TcPrBase_hMerge = 90688;
-    const QName_t LN_CT_TcPrBase_vMerge = 90689;
-    const QName_t LN_CT_TcPrBase_tcBorders = 90690;
-    const QName_t LN_CT_TcPrBase_shd = 90691;
-    const QName_t LN_CT_TcPrBase_noWrap = 90692;
-    const QName_t LN_CT_TcPrBase_tcMar = 90693;
-    const QName_t LN_CT_TcPrBase_textDirection = 90694;
-    const QName_t LN_CT_TcPrBase_tcFitText = 90695;
-    const QName_t LN_CT_TcPrBase_vAlign = 90696;
-    const QName_t LN_CT_TcPrBase_hideMark = 90697;
-    const QName_t LN_CT_TrPrBase_cnfStyle = 90698;
-    const QName_t LN_CT_TrPrBase_divId = 90699;
-    const QName_t LN_CT_TrPrBase_gridBefore = 90700;
-    const QName_t LN_CT_TrPrBase_gridAfter = 90701;
-    const QName_t LN_CT_TrPrBase_wBefore = 90702;
-    const QName_t LN_CT_TrPrBase_wAfter = 90703;
-    const QName_t LN_CT_TrPrBase_trHeight = 90705;
-    const QName_t LN_CT_TrPrBase_tblHeader = 90706;
-    const QName_t LN_CT_TrPrBase_tblCellSpacing = 90707;
-    const QName_t LN_CT_TrPrBase_jc = 90708;
-    const QName_t LN_CT_TrPrBase_hidden = 90709;
-    const QName_t LN_Value_ST_TblOverlap_never = 90710;
-    const QName_t LN_Value_ST_TblOverlap_overlap = 90711;
-    const QName_t LN_CT_TblBorders_top = 90712;
-    const QName_t LN_CT_TblBorders_left = 90713;
-    const QName_t LN_CT_TblBorders_bottom = 90714;
-    const QName_t LN_CT_TblBorders_right = 90715;
-    const QName_t LN_CT_TblBorders_insideH = 90716;
-    const QName_t LN_CT_TblBorders_insideV = 90717;
-    const QName_t LN_CT_TblPrBase_tblStyle = 90718;
-    const QName_t LN_CT_TblPrBase_tblpPr = 90719;
-    const QName_t LN_CT_TblPrBase_tblOverlap = 90720;
-    const QName_t LN_CT_TblPrBase_bidiVisual = 90721;
-    const QName_t LN_CT_TblPrBase_tblStyleRowBandSize = 90722;
-    const QName_t LN_CT_TblPrBase_tblStyleColBandSize = 90723;
-    const QName_t LN_CT_TblPrBase_tblW = 90724;
-    const QName_t LN_CT_TblPrBase_jc = 90725;
-    const QName_t LN_CT_TblPrBase_tblCellSpacing = 90726;
-    const QName_t LN_CT_TblPrBase_tblInd = 90727;
-    const QName_t LN_CT_TblPrBase_tblBorders = 90728;
-    const QName_t LN_CT_TblPrBase_shd = 90729;
-    const QName_t LN_CT_TblPrBase_tblLayout = 90730;
-    const QName_t LN_CT_TblPrBase_tblCellMar = 90731;
-    const QName_t LN_CT_TblPrBase_tblLook = 90732;
-    const QName_t LN_CT_TblPr_tblPrChange = 90733;
-    const QName_t LN_Value_ST_FtnPos_pageBottom = 90734;
-    const QName_t LN_Value_ST_FtnPos_beneathText = 90735;
-    const QName_t LN_Value_ST_FtnPos_sectEnd = 90736;
-    const QName_t LN_Value_ST_FtnPos_docEnd = 90737;
-    const QName_t LN_CT_FtnPos_val = 90738;
-    const QName_t LN_Value_ST_EdnPos_sectEnd = 90739;
-    const QName_t LN_Value_ST_EdnPos_docEnd = 90740;
-    const QName_t LN_CT_EdnPos_val = 90741;
-    const QName_t LN_CT_NumFmt_val = 90742;
-    const QName_t LN_Value_ST_RestartNumber_continuous = 90743;
-    const QName_t LN_Value_ST_RestartNumber_eachSect = 90744;
-    const QName_t LN_Value_ST_RestartNumber_eachPage = 90745;
-    const QName_t LN_CT_NumRestart_val = 90746;
-    const QName_t LN_CT_FtnEdnRef_customMarkFollows = 90747;
-    const QName_t LN_CT_FtnEdnRef_id = 90748;
-    const QName_t LN_EG_FtnEdnNumProps_numStart = 90750;
-    const QName_t LN_EG_FtnEdnNumProps_numRestart = 90751;
-    const QName_t LN_CT_FtnProps_pos = 90752;
-    const QName_t LN_CT_FtnProps_numFmt = 90753;
-    const QName_t LN_CT_EdnProps_pos = 90754;
-    const QName_t LN_CT_EdnProps_numFmt = 90755;
-    const QName_t LN_CT_RPrDefault_rPr = 90756;
-    const QName_t LN_CT_PPrDefault_pPr = 90757;
-    const QName_t LN_CT_DocDefaults_pPrDefault = 90758;
-    const QName_t LN_CT_DocDefaults_rPrDefault = 90759;
-    const QName_t LN_CT_LevelText_val = 90760;
-    const QName_t LN_CT_LevelText_null = 90761;
-    const QName_t LN_CT_LvlLegacy_legacy = 90762;
-    const QName_t LN_CT_LvlLegacy_legacySpace = 90763;
-    const QName_t LN_CT_LvlLegacy_legacyIndent = 90764;
-    const QName_t LN_CT_Lvl_lvlRestart = 90767;
-    const QName_t LN_CT_Lvl_pStyle = 90768;
-    const QName_t LN_CT_Lvl_suff = 90770;
-    const QName_t LN_CT_Lvl_lvlText = 90771;
-    const QName_t LN_CT_Lvl_lvlPicBulletId = 90772;
-    const QName_t LN_CT_Lvl_lvlJc = 90774;
-    const QName_t LN_CT_Lvl_pPr = 90775;
-    const QName_t LN_CT_Lvl_rPr = 90776;
-    const QName_t LN_CT_Lvl_ilvl = 90777;
-    const QName_t LN_CT_Lvl_tplc = 90778;
-    const QName_t LN_CT_Lvl_tentative = 90779;
-    const QName_t LN_Value_ST_MultiLevelType_singleLevel = 90780;
-    const QName_t LN_Value_ST_MultiLevelType_multilevel = 90781;
-    const QName_t LN_Value_ST_MultiLevelType_hybridMultilevel = 90782;
-    const QName_t LN_CT_AbstractNum_multiLevelType = 90784;
-    const QName_t LN_CT_AbstractNum_name = 90786;
-    const QName_t LN_CT_AbstractNum_styleLink = 90787;
-    const QName_t LN_CT_AbstractNum_numStyleLink = 90788;
-    const QName_t LN_CT_AbstractNum_lvl = 90789;
-    const QName_t LN_CT_AbstractNum_abstractNumId = 90790;
-    const QName_t LN_CT_NumLvl_startOverride = 90791;
-    const QName_t LN_CT_NumLvl_lvl = 90792;
-    const QName_t LN_CT_NumLvl_ilvl = 90793;
-    const QName_t LN_CT_Num_abstractNumId = 90794;
-    const QName_t LN_CT_Num_lvlOverride = 90795;
-    const QName_t LN_CT_Num_numId = 90796;
-    const QName_t LN_CT_Numbering_numPicBullet = 90797;
-    const QName_t LN_CT_Numbering_abstractNum = 90798;
-    const QName_t LN_CT_Numbering_num = 90799;
-    const QName_t LN_CT_Numbering_numIdMacAtCleanup = 90800;
-    const QName_t LN_CT_Style_name = 90805;
-    const QName_t LN_CT_Style_aliases = 90806;
-    const QName_t LN_CT_Style_basedOn = 90807;
-    const QName_t LN_CT_Style_next = 90808;
-    const QName_t LN_CT_Style_link = 90809;
-    const QName_t LN_CT_Style_autoRedefine = 90810;
-    const QName_t LN_CT_Style_hidden = 90811;
-    const QName_t LN_CT_Style_uiPriority = 90812;
-    const QName_t LN_CT_Style_semiHidden = 90813;
-    const QName_t LN_CT_Style_unhideWhenUsed = 90814;
-    const QName_t LN_CT_Style_qFormat = 90815;
-    const QName_t LN_CT_Style_locked = 90816;
-    const QName_t LN_CT_Style_personal = 90817;
-    const QName_t LN_CT_Style_personalCompose = 90818;
-    const QName_t LN_CT_Style_personalReply = 90819;
-    const QName_t LN_CT_Style_rsid = 90820;
-    const QName_t LN_CT_Style_pPr = 90821;
-    const QName_t LN_CT_Style_rPr = 90822;
-    const QName_t LN_CT_Style_tblPr = 90823;
-    const QName_t LN_CT_Style_trPr = 90824;
-    const QName_t LN_CT_Style_tcPr = 90825;
-    const QName_t LN_CT_Style_tblStylePr = 90826;
-    const QName_t LN_CT_Style_type = 90827;
-    const QName_t LN_CT_Style_styleId = 90828;
-    const QName_t LN_CT_Style_default = 90829;
-    const QName_t LN_CT_Style_customStyle = 90830;
-    const QName_t LN_Value_ST_FontFamily_decorative = 90831;
-    const QName_t LN_Value_ST_FontFamily_modern = 90832;
-    const QName_t LN_Value_ST_FontFamily_roman = 90833;
-    const QName_t LN_Value_ST_FontFamily_script = 90834;
-    const QName_t LN_Value_ST_FontFamily_swiss = 90835;
-    const QName_t LN_Value_ST_FontFamily_auto = 90836;
-    const QName_t LN_Value_ST_Pitch_fixed = 90837;
-    const QName_t LN_Value_ST_Pitch_variable = 90838;
-    const QName_t LN_Value_ST_Pitch_default = 90839;
-    const QName_t LN_CT_FontSig_usb0 = 90840;
-    const QName_t LN_CT_FontSig_usb1 = 90841;
-    const QName_t LN_CT_FontSig_usb2 = 90842;
-    const QName_t LN_CT_FontSig_usb3 = 90843;
-    const QName_t LN_CT_FontSig_csb0 = 90844;
-    const QName_t LN_CT_FontSig_csb1 = 90845;
-    const QName_t LN_CT_FontRel_fontKey = 90846;
-    const QName_t LN_CT_FontRel_subsetted = 90847;
-    const QName_t LN_CT_Font_altName = 90848;
-    const QName_t LN_CT_Font_panose1 = 90849;
-    const QName_t LN_CT_Font_charset = 90850;
-    const QName_t LN_CT_Font_family = 90851;
-    const QName_t LN_CT_Font_notTrueType = 90852;
-    const QName_t LN_CT_Font_pitch = 90853;
-    const QName_t LN_CT_Font_sig = 90854;
-    const QName_t LN_CT_Font_embedRegular = 90855;
-    const QName_t LN_CT_Font_embedBold = 90856;
-    const QName_t LN_CT_Font_embedItalic = 90857;
-    const QName_t LN_CT_Font_embedBoldItalic = 90858;
-    const QName_t LN_CT_Font_name = 90859;
-    const QName_t LN_Value_St_ThemeColor_dark1 = 90860;
-    const QName_t LN_Value_St_ThemeColor_light1 = 90861;
-    const QName_t LN_Value_St_ThemeColor_dark2 = 90862;
-    const QName_t LN_Value_St_ThemeColor_light2 = 90863;
-    const QName_t LN_Value_St_ThemeColor_accent1 = 90864;
-    const QName_t LN_Value_St_ThemeColor_accent2 = 90865;
-    const QName_t LN_Value_St_ThemeColor_accent3 = 90866;
-    const QName_t LN_Value_St_ThemeColor_accent4 = 90867;
-    const QName_t LN_Value_St_ThemeColor_accent5 = 90868;
-    const QName_t LN_Value_St_ThemeColor_accent6 = 90869;
-    const QName_t LN_Value_St_ThemeColor_hyperlink = 90870;
-    const QName_t LN_Value_St_ThemeColor_followedHyperlink = 90871;
-    const QName_t LN_Value_St_ThemeColor_none = 90872;
-    const QName_t LN_Value_St_ThemeColor_background1 = 90873;
-    const QName_t LN_Value_St_ThemeColor_text1 = 90874;
-    const QName_t LN_Value_St_ThemeColor_background2 = 90875;
-    const QName_t LN_Value_St_ThemeColor_text2 = 90876;
+    const QName_t LN_CT_MarkupRange_displacedByCustomXml = 90394;
+    const QName_t LN_CT_BookmarkRange_colFirst = 90396;
+    const QName_t LN_CT_BookmarkRange_colLast = 90397;
+    const QName_t LN_CT_Comment_initials = 90400;
+    const QName_t LN_CT_SectPrChange_sectPr = 90401;
+    const QName_t LN_CT_NumPr_numberingChange = 90404;
+    const QName_t LN_CT_NumPr_ins = 90405;
+    const QName_t LN_CT_Tabs_tab = 90412;
+    const QName_t LN_CT_PPrBase_pStyle = 90413;
+    const QName_t LN_CT_PPrBase_framePr = 90417;
+    const QName_t LN_CT_PPrBase_windowControl = 90418;
+    const QName_t LN_CT_PPrBase_numPr = 90419;
+    const QName_t LN_CT_PrBase_pBdr = 90421;
+    const QName_t LN_CT_PPrBase_tabs = 90423;
+    const QName_t LN_CT_PPrBase_kinsoku = 90425;
+    const QName_t LN_CT_PPrBase_wordWrap = 90426;
+    const QName_t LN_CT_PPrBase_adjustRightInd = 90432;
+    const QName_t LN_CT_PPrBase_snapToGrid = 90433;
+    const QName_t LN_CT_PPrBase_spacing = 90434;
+    const QName_t LN_CT_PPrBase_ind = 90435;
+    const QName_t LN_CT_PPrBase_divId = 90444;
+    const QName_t LN_CT_PPrBase_cnfStyle = 90445;
+    const QName_t LN_CT_PPr_rPr = 90446;
+    const QName_t LN_CT_PPr_sectPr = 90447;
+    const QName_t LN_CT_PPr_pPrChange = 90448;
+    const QName_t LN_CT_Rel_id = 90449;
+    const QName_t LN_CT_SimpleField_fldData = 90450;
+    const QName_t LN_CT_SimpleField_instr = 90451;
+    const QName_t LN_CT_SimpleField_fldLock = 90452;
+    const QName_t LN_CT_SimpleField_dirty = 90453;
+    const QName_t LN_Value_ST_FldCharType_begin = 90454;
+    const QName_t LN_Value_ST_FldCharType_separate = 90455;
+    const QName_t LN_Value_ST_FldCharType_end = 90456;
+    const QName_t LN_CT_FldChar_fldData = 90457;
+    const QName_t LN_CT_FldChar_ffData = 90458;
+    const QName_t LN_CT_FldChar_numberingChange = 90459;
+    const QName_t LN_CT_FldChar_fldCharType = 90460;
+    const QName_t LN_CT_FldChar_fldLock = 90461;
+    const QName_t LN_CT_FldChar_dirty = 90462;
+    const QName_t LN_Value_ST_NumberFormat_decimal = 90468;
+    const QName_t LN_Value_ST_NumberFormat_upperRoman = 90469;
+    const QName_t LN_Value_ST_NumberFormat_lowerRoman = 90470;
+    const QName_t LN_Value_ST_NumberFormat_upperLetter = 90471;
+    const QName_t LN_Value_ST_NumberFormat_lowerLetter = 90472;
+    const QName_t LN_Value_ST_NumberFormat_ordinal = 90473;
+    const QName_t LN_Value_ST_NumberFormat_cardinalText = 90474;
+    const QName_t LN_Value_ST_NumberFormat_ordinalText = 90475;
+    const QName_t LN_Value_ST_NumberFormat_hex = 90476;
+    const QName_t LN_Value_ST_NumberFormat_chicago = 90477;
+    const QName_t LN_Value_ST_NumberFormat_ideographDigital = 90478;
+    const QName_t LN_Value_ST_NumberFormat_japaneseCounting = 90479;
+    const QName_t LN_Value_ST_NumberFormat_aiueo = 90480;
+    const QName_t LN_Value_ST_NumberFormat_iroha = 90481;
+    const QName_t LN_Value_ST_NumberFormat_decimalFullWidth = 90482;
+    const QName_t LN_Value_ST_NumberFormat_decimalHalfWidth = 90483;
+    const QName_t LN_Value_ST_NumberFormat_japaneseLegal = 90484;
+    const QName_t LN_Value_ST_NumberFormat_japaneseDigitalTenThousand = 90485;
+    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedCircle = 90486;
+    const QName_t LN_Value_ST_NumberFormat_decimalFullWidth2 = 90487;
+    const QName_t LN_Value_ST_NumberFormat_aiueoFullWidth = 90488;
+    const QName_t LN_Value_ST_NumberFormat_irohaFullWidth = 90489;
+    const QName_t LN_Value_ST_NumberFormat_decimalZero = 90490;
+    const QName_t LN_Value_ST_NumberFormat_bullet = 90491;
+    const QName_t LN_Value_ST_NumberFormat_ganada = 90492;
+    const QName_t LN_Value_ST_NumberFormat_chosung = 90493;
+    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedFullstop = 90494;
+    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedParen = 90495;
+    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedCircleChinese = 90496;
+    const QName_t LN_Value_ST_NumberFormat_ideographEnclosedCircle = 90497;
+    const QName_t LN_Value_ST_NumberFormat_ideographTraditional = 90498;
+    const QName_t LN_Value_ST_NumberFormat_ideographZodiac = 90499;
+    const QName_t LN_Value_ST_NumberFormat_ideographZodiacTraditional = 90500;
+    const QName_t LN_Value_ST_NumberFormat_taiwaneseCounting = 90501;
+    const QName_t LN_Value_ST_NumberFormat_ideographLegalTraditional = 90502;
+    const QName_t LN_Value_ST_NumberFormat_taiwaneseCountingThousand = 90503;
+    const QName_t LN_Value_ST_NumberFormat_taiwaneseDigital = 90504;
+    const QName_t LN_Value_ST_NumberFormat_chineseCounting = 90505;
+    const QName_t LN_Value_ST_NumberFormat_chineseLegalSimplified = 90506;
+    const QName_t LN_Value_ST_NumberFormat_chineseCountingThousand = 90507;
+    const QName_t LN_Value_ST_NumberFormat_koreanDigital = 90508;
+    const QName_t LN_Value_ST_NumberFormat_koreanCounting = 90509;
+    const QName_t LN_Value_ST_NumberFormat_koreanLegal = 90510;
+    const QName_t LN_Value_ST_NumberFormat_koreanDigital2 = 90511;
+    const QName_t LN_Value_ST_NumberFormat_vietnameseCounting = 90512;
+    const QName_t LN_Value_ST_NumberFormat_russianLower = 90513;
+    const QName_t LN_Value_ST_NumberFormat_russianUpper = 90514;
+    const QName_t LN_Value_ST_NumberFormat_none = 90515;
+    const QName_t LN_Value_ST_NumberFormat_numberInDash = 90516;
+    const QName_t LN_Value_ST_NumberFormat_hebrew1 = 90517;
+    const QName_t LN_Value_ST_NumberFormat_hebrew2 = 90518;
+    const QName_t LN_Value_ST_NumberFormat_arabicAlpha = 90519;
+    const QName_t LN_Value_ST_NumberFormat_arabicAbjad = 90520;
+    const QName_t LN_Value_ST_NumberFormat_hindiVowels = 90521;
+    const QName_t LN_Value_ST_NumberFormat_hindiConsonants = 90522;
+    const QName_t LN_Value_ST_NumberFormat_hindiNumbers = 90523;
+    const QName_t LN_Value_ST_NumberFormat_hindiCounting = 90524;
+    const QName_t LN_Value_ST_NumberFormat_thaiLetters = 90525;
+    const QName_t LN_Value_ST_NumberFormat_thaiNumbers = 90526;
+    const QName_t LN_Value_ST_NumberFormat_thaiCounting = 90527;
+    const QName_t LN_CT_PageSz_w = 90530;
+    const QName_t LN_CT_PageSz_h = 90531;
+    const QName_t LN_CT_PageSz_orient = 90532;
+    const QName_t LN_CT_PageSz_code = 90533;
+    const QName_t LN_CT_PageMar_top = 90534;
+    const QName_t LN_CT_PageMar_right = 90535;
+    const QName_t LN_CT_PageMar_bottom = 90536;
+    const QName_t LN_CT_PageMar_left = 90537;
+    const QName_t LN_CT_PageMar_header = 90538;
+    const QName_t LN_CT_PageMar_footer = 90539;
+    const QName_t LN_CT_PageMar_gutter = 90540;
+    const QName_t LN_Value_ST_ChapterSep_hyphen = 90541;
+    const QName_t LN_Value_ST_ChapterSep_period = 90542;
+    const QName_t LN_Value_ST_ChapterSep_colon = 90543;
+    const QName_t LN_Value_ST_ChapterSep_emDash = 90544;
+    const QName_t LN_Value_ST_ChapterSep_enDash = 90545;
+    const QName_t LN_CT_LineNumber_countBy = 90549;
+    const QName_t LN_CT_LineNumber_start = 90550;
+    const QName_t LN_CT_LineNumber_distance = 90551;
+    const QName_t LN_CT_LineNumber_restart = 90552;
+    const QName_t LN_CT_PageNumber_fmt = 90553;
+    const QName_t LN_CT_PageNumber_start = 90554;
+    const QName_t LN_CT_PageNumber_chapStyle = 90555;
+    const QName_t LN_CT_PageNumber_chapSep = 90556;
+    const QName_t LN_CT_Column_space = 90557;
+    const QName_t LN_CT_Column_w = 90558;
+    const QName_t LN_CT_Columns_equalWidth = 90559;
+    const QName_t LN_CT_Columns_space = 90560;
+    const QName_t LN_CT_Columns_num = 90561;
+    const QName_t LN_CT_Columns_sep = 90562;
+    const QName_t LN_CT_Columns_col = 90563;
+    const QName_t LN_Value_ST_HrdFtr_even = 90568;
+    const QName_t LN_Value_ST_HrdFtr_default = 90569;
+    const QName_t LN_Value_ST_HrdFtr_first = 90570;
+    const QName_t LN_CT_HdrFtrRef_type = 90571;
+    const QName_t LN_CT_HdrFtrRef_id = 90572;
+    const QName_t LN_EG_HdrFtrReferences_headerReference = 90573;
+    const QName_t LN_EG_HdrFtrReferences_footerReference = 90574;
+    const QName_t LN_EG_SectPrContents_bidi = 90575;
+    const QName_t LN_EG_SectPrContents_cols = 90576;
+    const QName_t LN_EG_SectPrContents_docGrid = 90577;
+    const QName_t LN_EG_SectPrContents_endnotePr = 90578;
+    const QName_t LN_EG_SectPrContents_footnotePr = 90579;
+    const QName_t LN_EG_SectPrContents_formProt = 90580;
+    const QName_t LN_EG_SectPrContents_lnNumType = 90581;
+    const QName_t LN_EG_SectPrContents_noEndnote = 90582;
+    const QName_t LN_EG_SectPrContents_paperSrc = 90583;
+    const QName_t LN_EG_SectPrContents_pgBorders = 90584;
+    const QName_t LN_EG_SectPrContents_pgMar = 90585;
+    const QName_t LN_EG_SectPrContents_pgNumType = 90586;
+    const QName_t LN_EG_SectPrContents_pgSz = 90587;
+    const QName_t LN_EG_SectPrContents_printerSettings = 90588;
+    const QName_t LN_EG_SectPrContents_rtlGutter = 90589;
+    const QName_t LN_EG_SectPrContents_textDirection = 90590;
+    const QName_t LN_EG_SectPrContents_titlePg = 90591;
+    const QName_t LN_EG_SectPrContents_vAlign = 90593;
+    const QName_t LN_CT_SectPr_sectPrChange = 90594;
+    const QName_t LN_Value_ST_BrType_column = 90595;
+    const QName_t LN_Value_ST_BrType_page = 90596;
+    const QName_t LN_Value_ST_BrType_textWrapping = 90597;
+    const QName_t LN_Value_ST_BrClear_none = 90598;
+    const QName_t LN_Value_ST_BrClear_left = 90599;
+    const QName_t LN_Value_ST_BrClear_right = 90600;
+    const QName_t LN_Value_ST_BrClear_all = 90601;
+    const QName_t LN_CT_Br_type = 90602;
+    const QName_t LN_CT_Br_clear = 90603;
+    const QName_t LN_Value_ST_PTabAlignment_left = 90604;
+    const QName_t LN_Value_ST_PTabAlignment_center = 90605;
+    const QName_t LN_Value_ST_PTabAlignment_right = 90606;
+    const QName_t LN_Value_ST_PTabRelativeTo_margin = 90607;
+    const QName_t LN_Value_ST_PTabRelativeTo_indent = 90608;
+    const QName_t LN_Value_ST_PTabLeader_none = 90609;
+    const QName_t LN_Value_ST_PTabLeader_dot = 90610;
+    const QName_t LN_Value_ST_PTabLeader_hyphen = 90611;
+    const QName_t LN_Value_ST_PTabLeader_underscore = 90612;
+    const QName_t LN_Value_ST_PTabLeader_middleDot = 90613;
+    const QName_t LN_CT_PTab_alignment = 90614;
+    const QName_t LN_CT_PTab_relativeTo = 90615;
+    const QName_t LN_CT_PTab_leader = 90616;
+    const QName_t LN_CT_Sym_font = 90617;
+    const QName_t LN_CT_Sym_char = 90618;
+    const QName_t LN_CT_Text_space = 90619;
+    const QName_t LN_Value_ST_Hint_default = 90620;
+    const QName_t LN_Value_ST_Hint_eastAsia = 90621;
+    const QName_t LN_Value_ST_Hint_cs = 90622;
+    const QName_t LN_Value_ST_Theme_majorEastAsia = 90623;
+    const QName_t LN_Value_ST_Theme_majorBidi = 90624;
+    const QName_t LN_Value_ST_Theme_majorAscii = 90625;
+    const QName_t LN_Value_ST_Theme_majorHAnsi = 90626;
+    const QName_t LN_Value_ST_Theme_minorEastAsia = 90627;
+    const QName_t LN_Value_ST_Theme_minorBidi = 90628;
+    const QName_t LN_Value_ST_Theme_minorAscii = 90629;
+    const QName_t LN_Value_ST_Theme_minorHAnsi = 90630;
+    const QName_t LN_CT_Fonts_hint = 90631;
+    const QName_t LN_CT_Fonts_ascii = 90632;
+    const QName_t LN_CT_Fonts_hAnsi = 90633;
+    const QName_t LN_CT_Fonts_eastAsia = 90634;
+    const QName_t LN_CT_Fonts_cs = 90635;
+    const QName_t LN_CT_Fonts_asciiTheme = 90636;
+    const QName_t LN_CT_Fonts_hAnsiTheme = 90637;
+    const QName_t LN_CT_Fonts_eastAsiaTheme = 90638;
+    const QName_t LN_CT_Fonts_cstheme = 90639;
+    const QName_t LN_EG_RPrBase_rStyle = 90640;
+    const QName_t LN_EG_RPrBase_rFonts = 90641;
+    const QName_t LN_EG_RPrBase_snapToGrid = 90655;
+    const QName_t LN_EG_RPrBase_color = 90658;
+    const QName_t LN_EG_RPrBase_u = 90666;
+    const QName_t LN_EG_RPrBase_bdr = 90668;
+    const QName_t LN_EG_RPrBase_shd = 90669;
+    const QName_t LN_EG_RPrBase_fitText = 90670;
+    const QName_t LN_EG_RPrBase_vertAlign = 90671;
+    const QName_t LN_EG_RPrBase_rtl = 90672;
+    const QName_t LN_EG_RPrBase_lang = 90675;
+    const QName_t LN_EG_RPrBase_eastAsianLayout = 90676;
+    const QName_t LN_EG_RPrBase_oMath = 90678;
+    const QName_t LN_CT_ParaRPr_rPrChange = 90679;
+    const QName_t LN_Value_ST_TblWidth_nil = 90680;
+    const QName_t LN_Value_ST_TblWidth_pct = 90681;
+    const QName_t LN_Value_ST_TblWidth_dxa = 90682;
+    const QName_t LN_Value_ST_TblWidth_auto = 90683;
+    const QName_t LN_CT_Height_val = 90684;
+    const QName_t LN_CT_Height_hRule = 90685;
+    const QName_t LN_CT_TblWidth_w = 90686;
+    const QName_t LN_CT_TblWidth_type = 90687;
+    const QName_t LN_CT_TblGridBase_gridCol = 90688;
+    const QName_t LN_CT_TblGrid_tblGridChange = 90689;
+    const QName_t LN_CT_TcBorders_top = 90690;
+    const QName_t LN_CT_TcBorders_left = 90691;
+    const QName_t LN_CT_TcBorders_bottom = 90692;
+    const QName_t LN_CT_TcBorders_right = 90693;
+    const QName_t LN_CT_TcBorders_insideH = 90694;
+    const QName_t LN_CT_TcBorders_insideV = 90695;
+    const QName_t LN_CT_TcBorders_tl2br = 90696;
+    const QName_t LN_CT_TcBorders_tr2bl = 90697;
+    const QName_t LN_CT_TcMar_top = 90698;
+    const QName_t LN_CT_TcMar_left = 90699;
+    const QName_t LN_CT_TcMar_bottom = 90700;
+    const QName_t LN_CT_TcMar_right = 90701;
+    const QName_t LN_Value_ST_Merge_continue = 90702;
+    const QName_t LN_Value_ST_Merge_restart = 90703;
+    const QName_t LN_CT_TcPrBase_cnfStyle = 90704;
+    const QName_t LN_CT_TcPrBase_tcW = 90705;
+    const QName_t LN_CT_TcPrBase_gridSpan = 90706;
+    const QName_t LN_CT_TcPrBase_hMerge = 90707;
+    const QName_t LN_CT_TcPrBase_vMerge = 90708;
+    const QName_t LN_CT_TcPrBase_tcBorders = 90709;
+    const QName_t LN_CT_TcPrBase_shd = 90710;
+    const QName_t LN_CT_TcPrBase_noWrap = 90711;
+    const QName_t LN_CT_TcPrBase_tcMar = 90712;
+    const QName_t LN_CT_TcPrBase_textDirection = 90713;
+    const QName_t LN_CT_TcPrBase_tcFitText = 90714;
+    const QName_t LN_CT_TcPrBase_vAlign = 90715;
+    const QName_t LN_CT_TcPrBase_hideMark = 90716;
+    const QName_t LN_CT_TrPrBase_cnfStyle = 90717;
+    const QName_t LN_CT_TrPrBase_divId = 90718;
+    const QName_t LN_CT_TrPrBase_gridBefore = 90719;
+    const QName_t LN_CT_TrPrBase_gridAfter = 90720;
+    const QName_t LN_CT_TrPrBase_wBefore = 90721;
+    const QName_t LN_CT_TrPrBase_wAfter = 90722;
+    const QName_t LN_CT_TrPrBase_trHeight = 90724;
+    const QName_t LN_CT_TrPrBase_tblHeader = 90725;
+    const QName_t LN_CT_TrPrBase_tblCellSpacing = 90726;
+    const QName_t LN_CT_TrPrBase_jc = 90727;
+    const QName_t LN_CT_TrPrBase_hidden = 90728;
+    const QName_t LN_Value_ST_TblOverlap_never = 90729;
+    const QName_t LN_Value_ST_TblOverlap_overlap = 90730;
+    const QName_t LN_CT_TblBorders_top = 90731;
+    const QName_t LN_CT_TblBorders_left = 90732;
+    const QName_t LN_CT_TblBorders_bottom = 90733;
+    const QName_t LN_CT_TblBorders_right = 90734;
+    const QName_t LN_CT_TblBorders_insideH = 90735;
+    const QName_t LN_CT_TblBorders_insideV = 90736;
+    const QName_t LN_CT_TblPrBase_tblStyle = 90737;
+    const QName_t LN_CT_TblPrBase_tblpPr = 90738;
+    const QName_t LN_CT_TblPrBase_tblOverlap = 90739;
+    const QName_t LN_CT_TblPrBase_bidiVisual = 90740;
+    const QName_t LN_CT_TblPrBase_tblStyleRowBandSize = 90741;
+    const QName_t LN_CT_TblPrBase_tblStyleColBandSize = 90742;
+    const QName_t LN_CT_TblPrBase_tblW = 90743;
+    const QName_t LN_CT_TblPrBase_jc = 90744;
+    const QName_t LN_CT_TblPrBase_tblCellSpacing = 90745;
+    const QName_t LN_CT_TblPrBase_tblInd = 90746;
+    const QName_t LN_CT_TblPrBase_tblBorders = 90747;
+    const QName_t LN_CT_TblPrBase_shd = 90748;
+    const QName_t LN_CT_TblPrBase_tblLayout = 90749;
+    const QName_t LN_CT_TblPrBase_tblCellMar = 90750;
+    const QName_t LN_CT_TblPrBase_tblLook = 90751;
+    const QName_t LN_CT_TblPr_tblPrChange = 90752;
+    const QName_t LN_Value_ST_FtnPos_pageBottom = 90753;
+    const QName_t LN_Value_ST_FtnPos_beneathText = 90754;
+    const QName_t LN_Value_ST_FtnPos_sectEnd = 90755;
+    const QName_t LN_Value_ST_FtnPos_docEnd = 90756;
+    const QName_t LN_CT_FtnPos_val = 90757;
+    const QName_t LN_Value_ST_EdnPos_sectEnd = 90758;
+    const QName_t LN_Value_ST_EdnPos_docEnd = 90759;
+    const QName_t LN_CT_EdnPos_val = 90760;
+    const QName_t LN_CT_NumFmt_val = 90761;
+    const QName_t LN_Value_ST_RestartNumber_continuous = 90762;
+    const QName_t LN_Value_ST_RestartNumber_eachSect = 90763;
+    const QName_t LN_Value_ST_RestartNumber_eachPage = 90764;
+    const QName_t LN_CT_NumRestart_val = 90765;
+    const QName_t LN_CT_FtnEdnRef_customMarkFollows = 90766;
+    const QName_t LN_CT_FtnEdnRef_id = 90767;
+    const QName_t LN_EG_FtnEdnNumProps_numStart = 90769;
+    const QName_t LN_EG_FtnEdnNumProps_numRestart = 90770;
+    const QName_t LN_CT_FtnProps_pos = 90771;
+    const QName_t LN_CT_FtnProps_numFmt = 90772;
+    const QName_t LN_CT_EdnProps_pos = 90773;
+    const QName_t LN_CT_EdnProps_numFmt = 90774;
+    const QName_t LN_CT_RPrDefault_rPr = 90775;
+    const QName_t LN_CT_PPrDefault_pPr = 90776;
+    const QName_t LN_CT_DocDefaults_pPrDefault = 90777;
+    const QName_t LN_CT_DocDefaults_rPrDefault = 90778;
+    const QName_t LN_CT_LevelText_val = 90779;
+    const QName_t LN_CT_LevelText_null = 90780;
+    const QName_t LN_CT_LvlLegacy_legacy = 90781;
+    const QName_t LN_CT_LvlLegacy_legacySpace = 90782;
+    const QName_t LN_CT_LvlLegacy_legacyIndent = 90783;
+    const QName_t LN_CT_Lvl_lvlRestart = 90786;
+    const QName_t LN_CT_Lvl_pStyle = 90787;
+    const QName_t LN_CT_Lvl_suff = 90789;
+    const QName_t LN_CT_Lvl_lvlText = 90790;
+    const QName_t LN_CT_Lvl_lvlPicBulletId = 90791;
+    const QName_t LN_CT_Lvl_lvlJc = 90793;
+    const QName_t LN_CT_Lvl_pPr = 90794;
+    const QName_t LN_CT_Lvl_rPr = 90795;
+    const QName_t LN_CT_Lvl_ilvl = 90796;
+    const QName_t LN_CT_Lvl_tplc = 90797;
+    const QName_t LN_CT_Lvl_tentative = 90798;
+    const QName_t LN_Value_ST_MultiLevelType_singleLevel = 90799;
+    const QName_t LN_Value_ST_MultiLevelType_multilevel = 90800;
+    const QName_t LN_Value_ST_MultiLevelType_hybridMultilevel = 90801;
+    const QName_t LN_CT_AbstractNum_multiLevelType = 90803;
+    const QName_t LN_CT_AbstractNum_name = 90805;
+    const QName_t LN_CT_AbstractNum_styleLink = 90806;
+    const QName_t LN_CT_AbstractNum_numStyleLink = 90807;
+    const QName_t LN_CT_AbstractNum_lvl = 90808;
+    const QName_t LN_CT_AbstractNum_abstractNumId = 90809;
+    const QName_t LN_CT_NumLvl_startOverride = 90810;
+    const QName_t LN_CT_NumLvl_lvl = 90811;
+    const QName_t LN_CT_NumLvl_ilvl = 90812;
+    const QName_t LN_CT_Num_abstractNumId = 90813;
+    const QName_t LN_CT_Num_lvlOverride = 90814;
+    const QName_t LN_CT_Num_numId = 90815;
+    const QName_t LN_CT_Numbering_numPicBullet = 90816;
+    const QName_t LN_CT_Numbering_abstractNum = 90817;
+    const QName_t LN_CT_Numbering_num = 90818;
+    const QName_t LN_CT_Numbering_numIdMacAtCleanup = 90819;
+    const QName_t LN_CT_Style_name = 90824;
+    const QName_t LN_CT_Style_aliases = 90825;
+    const QName_t LN_CT_Style_basedOn = 90826;
+    const QName_t LN_CT_Style_next = 90827;
+    const QName_t LN_CT_Style_link = 90828;
+    const QName_t LN_CT_Style_autoRedefine = 90829;
+    const QName_t LN_CT_Style_hidden = 90830;
+    const QName_t LN_CT_Style_uiPriority = 90831;
+    const QName_t LN_CT_Style_semiHidden = 90832;
+    const QName_t LN_CT_Style_unhideWhenUsed = 90833;
+    const QName_t LN_CT_Style_qFormat = 90834;
+    const QName_t LN_CT_Style_locked = 90835;
+    const QName_t LN_CT_Style_personal = 90836;
+    const QName_t LN_CT_Style_personalCompose = 90837;
+    const QName_t LN_CT_Style_personalReply = 90838;
+    const QName_t LN_CT_Style_rsid = 90839;
+    const QName_t LN_CT_Style_pPr = 90840;
+    const QName_t LN_CT_Style_rPr = 90841;
+    const QName_t LN_CT_Style_tblPr = 90842;
+    const QName_t LN_CT_Style_trPr = 90843;
+    const QName_t LN_CT_Style_tcPr = 90844;
+    const QName_t LN_CT_Style_tblStylePr = 90845;
+    const QName_t LN_CT_Style_type = 90846;
+    const QName_t LN_CT_Style_styleId = 90847;
+    const QName_t LN_CT_Style_default = 90848;
+    const QName_t LN_CT_Style_customStyle = 90849;
+    const QName_t LN_Value_ST_FontFamily_decorative = 90850;
+    const QName_t LN_Value_ST_FontFamily_modern = 90851;
+    const QName_t LN_Value_ST_FontFamily_roman = 90852;
+    const QName_t LN_Value_ST_FontFamily_script = 90853;
+    const QName_t LN_Value_ST_FontFamily_swiss = 90854;
+    const QName_t LN_Value_ST_FontFamily_auto = 90855;
+    const QName_t LN_Value_ST_Pitch_fixed = 90856;
+    const QName_t LN_Value_ST_Pitch_variable = 90857;
+    const QName_t LN_Value_ST_Pitch_default = 90858;
+    const QName_t LN_CT_FontSig_usb0 = 90859;
+    const QName_t LN_CT_FontSig_usb1 = 90860;
+    const QName_t LN_CT_FontSig_usb2 = 90861;
+    const QName_t LN_CT_FontSig_usb3 = 90862;
+    const QName_t LN_CT_FontSig_csb0 = 90863;
+    const QName_t LN_CT_FontSig_csb1 = 90864;
+    const QName_t LN_CT_FontRel_fontKey = 90865;
+    const QName_t LN_CT_FontRel_subsetted = 90866;
+    const QName_t LN_CT_Font_altName = 90867;
+    const QName_t LN_CT_Font_panose1 = 90868;
+    const QName_t LN_CT_Font_charset = 90869;
+    const QName_t LN_CT_Font_family = 90870;
+    const QName_t LN_CT_Font_notTrueType = 90871;
+    const QName_t LN_CT_Font_pitch = 90872;
+    const QName_t LN_CT_Font_sig = 90873;
+    const QName_t LN_CT_Font_embedRegular = 90874;
+    const QName_t LN_CT_Font_embedBold = 90875;
+    const QName_t LN_CT_Font_embedItalic = 90876;
+    const QName_t LN_CT_Font_embedBoldItalic = 90877;
+    const QName_t LN_CT_Font_name = 90878;
+    const QName_t LN_Value_St_ThemeColor_dark1 = 90879;
+    const QName_t LN_Value_St_ThemeColor_light1 = 90880;
+    const QName_t LN_Value_St_ThemeColor_dark2 = 90881;
+    const QName_t LN_Value_St_ThemeColor_light2 = 90882;
+    const QName_t LN_Value_St_ThemeColor_accent1 = 90883;
+    const QName_t LN_Value_St_ThemeColor_accent2 = 90884;
+    const QName_t LN_Value_St_ThemeColor_accent3 = 90885;
+    const QName_t LN_Value_St_ThemeColor_accent4 = 90886;
+    const QName_t LN_Value_St_ThemeColor_accent5 = 90887;
+    const QName_t LN_Value_St_ThemeColor_accent6 = 90888;
+    const QName_t LN_Value_St_ThemeColor_hyperlink = 90889;
+    const QName_t LN_Value_St_ThemeColor_followedHyperlink = 90890;
+    const QName_t LN_Value_St_ThemeColor_none = 90891;
+    const QName_t LN_Value_St_ThemeColor_background1 = 90892;
+    const QName_t LN_Value_St_ThemeColor_text1 = 90893;
+    const QName_t LN_Value_St_ThemeColor_background2 = 90894;
+    const QName_t LN_Value_St_ThemeColor_text2 = 90895;
 }
   
 
diff -u -r1.7 -r1.7.4.1
--- writerfilter/source/dmapper/ConversionHelper.cxx	25 Apr 2007 11:30:51 -0000	1.7
+++ writerfilter/source/dmapper/ConversionHelper.cxx	2 Jul 2007 17:16:53 -0000	1.7.4.1
@@ -35,12 +35,9 @@
 #ifndef INCLUDED_DMAPPER_CONVERSIONHELPER_HXX
 #include <ConversionHelper.hxx>
 #endif
-#ifndef _COM_SUN_STAR_TABLE_BORDERLINE_HPP_
 #include <com/sun/star/table/BorderLine.hpp>
-#endif
-#ifndef _COM_SUN_STAR_LANG_LOCALE_HPP_
 #include <com/sun/star/lang/Locale.hpp>
-#endif
+#include <com/sun/star/text/HoriOrientation.hpp>
 #ifndef _TOOLS_COLOR_HXX
 #include <tools/color.hxx>
 #endif
@@ -528,6 +525,22 @@
 
     return nVal;
 }
+/*-- 27.06.2007 13:42:32---------------------------------------------------
+
+  -----------------------------------------------------------------------*/
+sal_Int16 convertTableJustification( sal_Int32 nIntValue )
+{
+    sal_Int16 nOrient = text::HoriOrientation::LEFT_AND_WIDTH;
+    switch( nIntValue )
+    {
+        case 1 : nOrient = text::HoriOrientation::CENTER; break;
+        case 2 : nOrient = text::HoriOrientation::RIGHT; break;
+        case 0 :
+        //no break
+        default:;
 
+    }
+    return nOrient;
+}
 } // namespace ConversionHelper
 } //namespace dmapper
--- writerfilter/source/dmapper/ConversionHelper.hxx	25 Apr 2007 11:30:51 -0000	1.7
+++ writerfilter/source/dmapper/ConversionHelper.hxx	2 Jul 2007 17:16:53 -0000	1.7.4.1
@@ -65,6 +65,7 @@
     sal_Int32 convertToMM100(sal_Int32 _t);
     sal_Int32 ConvertColor(sal_Int32 nWordColor );
     sal_Int32 SnapPageDimension( sal_Int32 nVal );
+    sal_Int16 convertTableJustification( sal_Int32 nIntValue );
 
 } // namespace ConversionHelper
 } //namespace dmapper
--- writerfilter/source/dmapper/DomainMapper.cxx	27 Jun 2007 08:54:24 -0000	1.61
+++ writerfilter/source/dmapper/DomainMapper.cxx	13 Jul 2007 09:14:07 -0000	1.61.4.3
@@ -1589,6 +1589,7 @@
         case NS_ooxml::LN_CT_Fonts_ascii:
             m_pImpl->GetTopContext()->Insert(PROP_CHAR_FONT_NAME, true, uno::makeAny( sStringValue ));
             break;
+        case NS_ooxml::LN_CT_Fonts_hAnsi: break;//unsupported
         case NS_ooxml::LN_CT_Fonts_eastAsia:
             m_pImpl->GetTopContext()->Insert(PROP_CHAR_FONT_NAME_ASIAN, true, uno::makeAny( sStringValue ));
             break;
@@ -1715,13 +1716,21 @@
             CT_Column.space = ConversionHelper::convertToMM100( nIntValue );
             break;
 
-        case NS_ooxml::LN_CT_PPrBase_pStyle:
-            m_pImpl->GetTopContext()->Insert( PROP_PARA_STYLE_NAME, true, uno::makeAny( m_pImpl->GetStyleSheetTable()->ConvertStyleName( sStringValue )));
-            break;
         case NS_ooxml::LN_EG_RPrBase_rStyle:
             m_pImpl->GetTopContext()->Insert( PROP_CHAR_STYLE_NAME, true, uno::makeAny( m_pImpl->GetStyleSheetTable()->ConvertStyleName( sStringValue )));
             break;
-
+        case NS_ooxml::LN_CT_Language_val: //90314
+        case NS_ooxml::LN_CT_Language_eastAsia: //90315
+        case NS_ooxml::LN_CT_Language_bidi: //90316
+        {
+            LanguageType eLang = MsLangId::convertIsoStringToLanguage( sStringValue );
+            lang::Locale aLocale = MsLangId::convertLanguageToLocale( eLang );
+            m_pImpl->GetTopContext()->Insert(NS_ooxml::LN_CT_Language_val== nName ? PROP_CHAR_LOCALE :
+                             NS_ooxml::LN_CT_Language_eastAsia == nName ? PROP_CHAR_LOCALE_ASIAN : PROP_CHAR_LOCALE_COMPLEX,
+                             true, 
+                             uno::makeAny( aLocale ) );
+        }        
+        break;
         default:
             {
                 OSL_ASSERT("unknown attribute");
@@ -3272,6 +3281,10 @@
         resolveSprmProps(rSprm);
         CT_Columns.cols.push_back(CT_Column);
         break;
+    case NS_ooxml::LN_CT_PPrBase_pStyle:
+        m_pImpl->GetTopContext()->Insert( PROP_PARA_STYLE_NAME, true, 
+            uno::makeAny( m_pImpl->GetStyleSheetTable()->ConvertStyleName( sStringValue )));
+    break;
 
     default:
         {
@@ -3349,6 +3362,7 @@
 /*-- 09.06.2006 09:52:14---------------------------------------------------
 
 -----------------------------------------------------------------------*/
+
 void DomainMapper::startCharacterGroup()
 {
     m_pImpl->PushProperties(CONTEXT_CHARACTER);
@@ -3356,17 +3370,7 @@
     if( rTableManager.getTableStyleName().getLength() )
     {
         PropertyMapPtr pTopContext = m_pImpl->GetTopContext();
-        const StyleSheetEntry* pStyleSheetEntry = m_pImpl->GetStyleSheetTable()->FindStyleSheetByISTD(
-                                                        rTableManager.getTableStyleName());
-        OSL_ENSURE( pStyleSheetEntry, "table style not found" );
-        PropertyMap::const_iterator aPropIter = pStyleSheetEntry->pProperties->begin();
-        while(aPropIter != pStyleSheetEntry->pProperties->end())
-        {
-            //copy all text properties form the table style to the current run attributes
-            if( aPropIter->first.bIsTextProperty )
-                pTopContext->insert(*aPropIter);
-            ++aPropIter;
-        }    
+        rTableManager.CopyTextProperties(pTopContext, m_pImpl->GetStyleSheetTable());
     }    
 }
 /*-- 09.06.2006 09:52:14---------------------------------------------------
@@ -3458,17 +3462,18 @@
 		{
             
             PropertyMapPtr pContext = m_pImpl->GetTopContext();
-
-            //-->debug
-            uno::Reference<text::XFootnote> xTest = pContext->GetFootnote();
-            //<--debug
-            if( xTest.is() )
-//            if( pContext->GetFootnote().is() )
+            if( pContext->GetFootnote().is() )
             {
                 if( !pContext->GetFootnoteSymbol() )
                     pContext->GetFootnote()->setLabel( sText );
                 //otherwise ignore sText
             }
+            else if( m_pImpl->IsOpenFieldCommand() )
+                m_pImpl->AppendFieldCommand(sText);
+            else if( m_pImpl->IsOpenField() && m_pImpl->IsFieldResultAsString())
+                /*depending on the success of the field insert operation this result will be
+                  set at the field or directly inserted into the text*/
+                m_pImpl->SetFieldResult( sText );
             else
                 m_pImpl->appendTextPortion( sText, pContext );
 		}
--- writerfilter/source/dmapper/DomainMapperTableHandler.cxx	27 Jun 2007 08:54:24 -0000	1.12
+++ writerfilter/source/dmapper/DomainMapperTableHandler.cxx	16 Jul 2007 15:30:37 -0000	1.12.4.1
@@ -49,6 +49,7 @@
 #ifdef DEBUG
 static void lcl_printHandle(const Handle_t rHandle)
 {
+    if (!rHandle.get()) return;
     rtl::OUString aOUStr = rHandle->getString();
     rtl::OString aOStr(aOUStr.getStr(), aOUStr.getLength(),  RTL_TEXTENCODING_ASCII_US );
 
@@ -374,6 +375,7 @@
 //        m_pCellProperties.push_back( RowProperties_t() );
 //    m_pCellProperties[m_nRowIndex].push_back( pProps );
     m_pCellSeq = CellSequencePointer_t(new CellSequence_t(2));
+    if (!start.get()) return;
     (*m_pCellSeq)[0] = start->getStart();
 }
 
@@ -384,6 +386,7 @@
     clog << "</table.cell>" << endl;
 #endif
 
+    if (!end.get()) return;
     (*m_pCellSeq)[1] = end->getEnd();
     (*m_pRowSeq)[m_nCellIndex] = *m_pCellSeq;
     ++m_nCellIndex;
--- writerfilter/source/dmapper/DomainMapperTableManager.cxx	27 Jun 2007 13:22:01 -0000	1.15
+++ writerfilter/source/dmapper/DomainMapperTableManager.cxx	16 Jul 2007 12:57:55 -0000	1.15.4.2
@@ -92,16 +92,7 @@
             {
                 /* WRITERFILTERSTATUS: done: 0, planned: 2, spent: 0 */
                 //table justification 0: left, 1: center, 2: right
-                sal_Int16 nOrient = text::HoriOrientation::LEFT_AND_WIDTH;
-                switch( nIntValue )
-                {
-                    case 1 : nOrient = text::HoriOrientation::CENTER; break;
-                    case 2 : nOrient = text::HoriOrientation::RIGHT; break;
-                    case 0 :
-                    //no break
-                    default:;
-
-                }
+                sal_Int16 nOrient = ConversionHelper::convertTableJustification( nIntValue );
                 PropertyMapPtr pTableMap( new PropertyMap );
                 pTableMap->Insert( PROP_HORI_ORIENT, false, uno::makeAny( nOrient ) );
                 insertTableProps( pTableMap );
@@ -379,6 +370,44 @@
     m_bFullWidth = false;
     m_aCellWidths.clear();
     m_sTableStyleName = ::rtl::OUString();
+    m_pTableStyleTextProperies.reset();
 }
+/*-- 27.06.2007 14:19:50---------------------------------------------------
 
+  -----------------------------------------------------------------------*/
+void lcl_CopyTextProperties(PropertyMapPtr pToFill,
+            const StyleSheetEntry* pStyleSheetEntry, StyleSheetTablePtr pStyleSheetTable)
+{
+    if( !pStyleSheetEntry )
+        return;
+    //fill base style properties first, recursively
+    if( pStyleSheetEntry->sBaseStyleIdentifier.getLength())
+    {
+        const StyleSheetEntry* pParentStyleSheet = 
+            pStyleSheetTable->FindStyleSheetByISTD(pStyleSheetEntry->sBaseStyleIdentifier);
+        OSL_ENSURE( pParentStyleSheet, "table style not found" );
+        lcl_CopyTextProperties( pToFill, pParentStyleSheet, pStyleSheetTable);
+    }
+
+    PropertyMap::const_iterator aPropIter = pStyleSheetEntry->pProperties->begin();
+    while(aPropIter != pStyleSheetEntry->pProperties->end())
+    {
+        //copy all text properties form the table style to the current run attributes
+        if( aPropIter->first.bIsTextProperty )
+            pToFill->insert(*aPropIter);
+        ++aPropIter;
+    }    
+}
+void DomainMapperTableManager::CopyTextProperties(PropertyMapPtr pContext, StyleSheetTablePtr pStyleSheetTable)
+{
+    if( !m_pTableStyleTextProperies.get())
+    {
+        m_pTableStyleTextProperies.reset( new PropertyMap );
+        const StyleSheetEntry* pStyleSheetEntry = pStyleSheetTable->FindStyleSheetByISTD(
+                                                        m_sTableStyleName);
+        OSL_ENSURE( pStyleSheetEntry, "table style not found" );
+        lcl_CopyTextProperties(m_pTableStyleTextProperies, pStyleSheetEntry, pStyleSheetTable);
+    }
+    pContext->insert( m_pTableStyleTextProperies );
+}
 }
--- writerfilter/source/dmapper/DomainMapperTableManager.hxx	27 Jun 2007 08:54:24 -0000	1.7
+++ writerfilter/source/dmapper/DomainMapperTableManager.hxx	2 Jul 2007 17:16:53 -0000	1.7.4.1
@@ -35,16 +35,10 @@
 #ifndef INCLUDED_DOMAIN_MAPPER_TABLE_MANAGER_HXX
 #define INCLUDED_DOMAIN_MAPPER_TABLE_MANAGER_HXX
 
-#ifndef INCLUDED_TABLE_MANAGER_HXX
 #include <doctok/TableManager.hxx>
-#endif
-#ifndef INCLUDED_DMAPPER_PROPERTYMAP_HXX
-#include "PropertyMap.hxx"
-#endif
-
-#ifndef _COM_SUN_STAR_TEXT_XTEXTRANGE_HPP_
+#include <PropertyMap.hxx>
+#include <StyleSheetTable.hxx>
 #include <com/sun/star/text/XTextRange.hpp>
-#endif
 #include <vector>
 
 namespace dmapper {
@@ -61,6 +55,8 @@
     sal_Int32       m_nTableWidth; //might be set directly or has to be calculated from the column positions
     bool            m_bFullWidth; //width is set to full, disable setting of different orientation values
     ::rtl::OUString m_sTableStyleName;    
+    PropertyMapPtr  m_pTableStyleTextProperies;
+
     ::std::vector<sal_Int32>  m_aCellWidths;
     
     virtual void clearData();
@@ -76,6 +72,9 @@
     virtual void endOfRowAction();
 
     const ::rtl::OUString& getTableStyleName() const { return m_sTableStyleName; }
+    /// copy the text properties of the table style and its parent into pContext
+    void    CopyTextProperties(PropertyMapPtr pContext, StyleSheetTablePtr pStyleSheetTable);
+
 };
 
 }
--- writerfilter/source/dmapper/DomainMapper_Impl.cxx	27 Jun 2007 08:54:24 -0000	1.19
+++ writerfilter/source/dmapper/DomainMapper_Impl.cxx	13 Jul 2007 13:14:53 -0000	1.19.4.2
@@ -314,6 +314,15 @@
      example: TOC "EntryText \f \l 2 \n
      */
     ,FIELD_TC
+    /* document statistic - number of characters
+     */
+    ,FIELD_NUMCHARS
+    /* document statistic - number of words
+     */
+    ,FIELD_NUMWORDS
+    /* document statistic - number of pages
+     */
+    ,FIELD_NUMPAGES
 };
 struct FieldConversion
 {
@@ -664,9 +673,11 @@
     {
         try
         {
+            uno::Sequence< beans::PropertyValue > aProperties;
+            if( pPropertyMap.get() )
+                aProperties = pPropertyMap->GetPropertyValues();
             uno::Reference< text::XTextRange > xTextRange =
-                xTextAppendAndConvert->finishParagraph
-                (pPropertyMap->GetPropertyValues());
+                xTextAppendAndConvert->finishParagraph( aProperties );
 
             m_TableManager.handle(xTextRange);
         }
@@ -1999,6 +2010,9 @@
     //            {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("USERNAME")),      "ExtendedUser",             "", FIELD_USERNAME     }
                 {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("TOC")), "com.sun.star.text.ContentIndex", "", FIELD_TOC},
                 {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("TC")), "com.sun.star.text.ContentIndexMark", "", FIELD_TC},
+                {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("NUMCHARS")), "CharacterCount", "", FIELD_NUMCHARS},
+                {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("NUMWORDS")), "WordCount", "", FIELD_NUMWORDS},
+                {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("NUMPAGES")), "PageCount", "", FIELD_NUMPAGES},
 
     //            {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("")), "", "", FIELD_},
 
@@ -2565,6 +2579,14 @@
                         pContext->SetTC( xTC );
                     }
                     break;
+                    case  FIELD_NUMCHARS:
+                    case  FIELD_NUMWORDS:
+                    case  FIELD_NUMPAGES:
+                        xFieldProperties->setPropertyValue(
+                            rPropNameSupplier.GetName(PROP_NUMBERING_TYPE),
+                            uno::makeAny( lcl_ParseNumberingType(pContext->GetCommand()) ));
+                        break;
+                        
                 }
             }
             //set the text field if there is any
--- writerfilter/source/dmapper/DomainMapper_Impl.hxx	27 Jun 2007 08:54:25 -0000	1.18
+++ writerfilter/source/dmapper/DomainMapper_Impl.hxx	2 Jul 2007 17:16:53 -0000	1.18.4.1
@@ -150,7 +150,6 @@
 
 typedef std::stack<ContextType>                 ContextStack;
 typedef std::stack<PropertyMapPtr>              PropertyStack;
-typedef boost::shared_ptr< StyleSheetTable >    StyleSheetTablePtr;
 typedef std::stack< ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextAppendAndConvert > >
                                                 TextAppendStack;
 typedef std::stack<FieldContextPtr>                FieldStack;
--- writerfilter/source/dmapper/StyleSheetTable.cxx	27 Jun 2007 08:54:25 -0000	1.27
+++ writerfilter/source/dmapper/StyleSheetTable.cxx	17 Jul 2007 08:47:48 -0000	1.27.4.6
@@ -32,41 +32,20 @@
  *    MA  02111-1307  USA
  *
  ************************************************************************/
-#ifndef INCLUDED_STYLESHEETTABLE_HXX
 #include <StyleSheetTable.hxx>
-#endif
-#ifndef INCLUDED_DOMAINMAPPER_HXX
 #include <dmapper/DomainMapper.hxx>
-#endif
-#ifndef INCLUDED_RESOURCESIDS
+#include <ConversionHelper.hxx>
 #include <doctok/resourceids.hxx>
 #include <ooxml/resourceids.hxx>
-#endif
 #include <vector>
-#ifndef _COM_SUN_STAR_BEANS_XMULTIPROPERTYSET_HPP_
 #include <com/sun/star/beans/XMultiPropertySet.hpp>
-#endif
-#ifndef _COM_SUN_STAR_BEANS_XPROPERTYVALUE_HPP_
 #include <com/sun/star/beans/PropertyValue.hpp>
-#endif
-#ifndef _COM_SUN_STAR_CONTAINER_XNAMECONTAINER_HPP_
 #include <com/sun/star/container/XNameContainer.hpp>
-#endif
-#ifndef _COM_SUN_STAR_TEXT_XTEXTDOCUMENT_HPP_
 #include <com/sun/star/text/XTextDocument.hpp>
-#endif
-#ifndef _COM_SUN_STAR_STYLE_XSTYLEFAMILIESSUPPLIER_HPP_
 #include <com/sun/star/style/XStyleFamiliesSupplier.hpp>
-#endif
-#ifndef _COM_SUN_STAR_STYLE_XSTYLE_HPP_
 #include <com/sun/star/style/XStyle.hpp>
-#endif
-#ifndef _COM_SUN_STAR_TEXT_WRITINGMODE_HPP_
 #include <com/sun/star/text/WritingMode.hpp>
-#endif
-#ifndef _COM_SUN_STAR_LANG_XMULTISERVICEFACTORY_HPP_
 #include <com/sun/star/lang/XMultiServiceFactory.hpp>
-#endif
 #include <map>
 #include <stdio.h>
 #include <rtl/ustrbuf.hxx>
@@ -634,10 +613,6 @@
     case NS_ooxml::LN_CT_Style_name:
     	m_pImpl->m_pCurrentEntry->sStyleName = sStringValue;
     	m_pImpl->m_pCurrentEntry->sStyleName1 = sStringValue;
-    	if (m_pImpl->m_pCurrentEntry->nStyleTypeCode == STYLE_TYPE_PARA)
-            m_pImpl->m_pCurrentEntry->pProperties->Insert(PROP_PARA_STYLE_NAME, true, uno::makeAny(sStringValue));
-    	else if (m_pImpl->m_pCurrentEntry->nStyleTypeCode == STYLE_TYPE_CHAR)
-            m_pImpl->m_pCurrentEntry->pProperties->Insert(PROP_CHAR_STYLE_NAME, true, uno::makeAny(sStringValue));
     	break;    	
     case NS_ooxml::LN_CT_Style_basedOn:
         m_pImpl->m_pCurrentEntry->sBaseStyleIdentifier = sStringValue;
@@ -680,7 +655,11 @@
         m_pImpl->m_rDMapper.sprm( rSprm );
         m_pImpl->m_rDMapper.PopStyleSheetProperties();
     break;
-    case NS_ooxml::LN_CT_TrPrBase_jc:     //table alignment
+    case NS_ooxml::LN_CT_TblPrBase_jc:     //table alignment - row properties!
+         m_pImpl->m_pCurrentEntry->pProperties->Insert( PROP_HORI_ORIENT, false, 
+            uno::makeAny( ConversionHelper::convertTableJustification( nIntValue )));
+    break;
+    case NS_ooxml::LN_CT_TrPrBase_jc:     //table alignment - row properties!
             dynamic_cast< StyleSheetPropertyMap* >( m_pImpl->m_pCurrentEntry->pProperties.get() )->SetCT_TrPrBase_jc(nIntValue);
         break;
     case NS_ooxml::LN_CT_Style_pPr:
@@ -803,16 +782,9 @@
                                     ::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("com.sun.star.style.CharacterStyle"))),
                                     uno::UNO_QUERY_THROW);
                 }
-                if(!(aIt->sBaseStyleIdentifier.getLength()) )
+                if( aIt->sBaseStyleIdentifier.getLength() )
                 {
-                    //find the name of the base style
-                    std::vector< StyleSheetEntry >::iterator aBaseStyleIt = m_pImpl->m_aStyleSheetEntries.begin();
-                    for( ; aBaseStyleIt !=  m_pImpl->m_aStyleSheetEntries.end(); ++aBaseStyleIt )
-                        if(aBaseStyleIt->sStyleIdentifierD == aIt->sBaseStyleIdentifier)
-                        {
-                            xStyle->setParentStyle(ConvertStyleName( aBaseStyleIt->sStyleName ));
-                            break;
-                        }
+                    xStyle->setParentStyle(ConvertStyleName( aIt->sBaseStyleIdentifier ));
                 }
                 else if( bParaStyle )
                 {
@@ -829,7 +801,14 @@
                         aIt->pProperties->Insert(PROP_CHAR_HEIGHT, true, aTwoHundredFortyTwip, false);
 //                      western font not already set -> apply first font
                         const FontEntry* pWesternFontEntry = rFontTable->getFontEntry( 0 );
-                        aIt->pProperties->Insert(PROP_CHAR_FONT_NAME, true, uno::makeAny( pWesternFontEntry->sFontName ), false);
+			rtl::OUString sWesternFontName = pWesternFontEntry->sFontName;
+
+			/* Temporary hackish ugly workaround starts here */
+			if (pWesternFontEntry->sFontName.equalsIgnoreAsciiCaseAsciiL("Symbol", 6))
+			    sWesternFontName = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("Times New Roman"));
+                        aIt->pProperties->Insert(PROP_CHAR_FONT_NAME, true, uno::makeAny( sWesternFontName ), false);
+			/* Temporary hackish ugly workaround stops here */
+
 //                      CJK  ... apply second font
                         const FontEntry* pCJKFontEntry  = rFontTable->getFontEntry( 2 );
                         aIt->pProperties->Insert(PROP_CHAR_FONT_NAME_ASIAN, true, uno::makeAny( pCJKFontEntry->sFontName ), false);
@@ -917,7 +896,9 @@
   -----------------------------------------------------------------------*/
 const StyleSheetEntry* StyleSheetTable::FindParentStyleSheet(::rtl::OUString sBaseStyle)
 {
-    if(sBaseStyle.getLength() && m_pImpl->m_pCurrentEntry)
+    if( !sBaseStyle.getLength() )
+        return 0;
+    if( m_pImpl->m_pCurrentEntry)
         sBaseStyle = m_pImpl->m_pCurrentEntry->sBaseStyleIdentifier;
 
     const StyleSheetEntry* pRet = 0;
--- writerfilter/source/dmapper/StyleSheetTable.hxx	30 May 2007 10:43:21 -0000	1.11
+++ writerfilter/source/dmapper/StyleSheetTable.hxx	2 Jul 2007 17:16:53 -0000	1.11.4.1
@@ -110,6 +110,8 @@
     void resolveAttributeProperties(doctok::Value & val);
     void resolveSprmProps(doctok::Sprm & sprm_);
 };
+typedef boost::shared_ptr< StyleSheetTable >    StyleSheetTablePtr;
+
 }
 
 #endif //
--- writerfilter/source/doctok/WW8ResourceModelImpl.cxx	25 Apr 2007 11:40:45 -0000	1.12
+++ writerfilter/source/doctok/WW8ResourceModelImpl.cxx	16 Jul 2007 10:53:48 -0000	1.12.4.1
@@ -60,7 +60,16 @@
         char c = *aIt;
 
         if (isprint(c) && c != '\"')
-            result += c;
+        {
+            if (c == '<')
+                result += "&lt;";
+            else if (c == '>')
+                result += "&gt;";
+            else if (c == '&')
+                result += "&amp;";
+            else
+                result += c;
+        }
         else
         {
             snprintf(sBuffer, sizeof(sBuffer), "\\%03d", c);
--- writerfilter/source/ooxml/OOXMLContext.cxx	27 Jun 2007 13:18:19 -0000	1.36
+++ writerfilter/source/ooxml/OOXMLContext.cxx	16 Jul 2007 10:55:30 -0000	1.36.4.3
@@ -377,6 +377,11 @@
 
 void OOXMLContext::startCharacterGroup()
 {
+    endCharacterGroup();
+
+    if (! mpParserState->isInParagraphGroup())
+        startParagraphGroup();
+
     if (isForwardEvents() && ! mpParserState->isInCharacterGroup())
     {
         mrStream.startCharacterGroup();    
@@ -395,7 +400,10 @@
 
 void OOXMLContext::startParagraphGroup()
 {
-    endCharacterGroup();
+    endParagraphGroup();
+
+    if (! mpParserState->isInSectionGroup())
+        startSectionGroup();
 
     if (isForwardEvents() && ! mpParserState->isInParagraphGroup())
     {
@@ -427,7 +435,7 @@
 
 void OOXMLContext::startSectionGroup()
 {
-    endParagraphGroup();
+    endSectionGroup();
 
     if (isForwardEvents() && ! mpParserState->isInSectionGroup())
     {
@@ -503,7 +511,7 @@
 void OOXMLContext::resolveFooter(const sal_Int32 type, const rtl::OUString & rId)
 {
     mpParserState->getDocument()->resolveFooter(mrStream, type, rId);
-}
+ }
 
 void OOXMLContext::setToken(TokenEnum_t eToken)
 {
@@ -539,9 +547,12 @@
 {
     doctok::Id nId = this->getId(nToken);
     
-    OOXMLPropertyImpl::Pointer_t pProperty
-        (new OOXMLPropertyImpl(nId, pVal, OOXMLPropertyImpl::ATTRIBUTE));
-    mpPropertySetAttrs->add(pProperty);    
+    if (nId != 0x0)
+    {
+        OOXMLPropertyImpl::Pointer_t pProperty
+            (new OOXMLPropertyImpl(nId, pVal, OOXMLPropertyImpl::ATTRIBUTE));
+        mpPropertySetAttrs->add(pProperty);    
+    }
 }
 
 void OOXMLContextStream::lcl_characters(const rtl::OUString & sText) 
@@ -617,9 +628,12 @@
 {
     doctok::Id nId = this->getId(nToken);
     
-    OOXMLPropertyImpl::Pointer_t pProperty
-        (new OOXMLPropertyImpl(nId, pVal, OOXMLPropertyImpl::ATTRIBUTE));
-    mpPropertySet->add(pProperty);    
+    if (nId != 0x0)
+    {
+        OOXMLPropertyImpl::Pointer_t pProperty
+            (new OOXMLPropertyImpl(nId, pVal, OOXMLPropertyImpl::ATTRIBUTE));
+        mpPropertySet->add(pProperty);    
+    }
 }
 
 void OOXMLContextProperties::setPropertySet(OOXMLPropertySet::Pointer_t 
@@ -1026,8 +1040,6 @@
 
 void OOXMLContextTextTableCell::endCell()
 {
-    startCharacterGroup();
-
     OOXMLPropertySet * pProps = new OOXMLPropertySetImpl();
     {
         OOXMLValue::Pointer_t pVal
@@ -1054,7 +1066,6 @@
     if (isForwardEvents())
         mrStream.props(doctok::Reference<Properties>::Pointer_t(pProps));
 
-    // no endCharacterGroup here
 }
 
 /*
@@ -1073,10 +1084,12 @@
     mbForwardEventsSaved = isForwardEvents();
     setForwardEvents(false);
 
+#ifdef DEBUG_NOTES
     clog << "OOXMLContextXNote:" <<  
         OUStringToOString(getXNoteId(), 
                           RTL_TEXTENCODING_ASCII_US).getStr()
          << endl;
+#endif
 }
 
 OOXMLContextXNote::~OOXMLContextXNote()
@@ -1088,8 +1101,9 @@
 {
     if (rId.compareTo(getXNoteId()) == 0)
         setForwardEvents(true);
-
+#ifdef DEBUG_NOTES
     clog << "OOXMLContextXNote::checkId: " << isForwardEvents() << endl;
+#endif
 }
 
 /*
--- writerfilter/source/ooxml/OOXMLDocumentImpl.cxx	4 Jun 2007 08:45:42 -0000	1.13
+++ writerfilter/source/ooxml/OOXMLDocumentImpl.cxx	16 Jul 2007 20:07:34 -0000	1.13.4.1
@@ -213,6 +213,7 @@
         oSaxParser->setDocumentHandler( xDocumentHandler );
         
         resolveSubStream(rStream, OOXMLStream::NUMBERING);
+        resolveSubStream(rStream, OOXMLStream::THEME);
         resolveSubStream(rStream, OOXMLStream::FONTTABLE);
         resolveSubStream(rStream, OOXMLStream::STYLES);
         
--- writerfilter/source/ooxml/OOXMLPropertySet.hxx	13 Apr 2007 10:20:13 -0000	1.4
+++ writerfilter/source/ooxml/OOXMLPropertySet.hxx	16 Jul 2007 10:56:11 -0000	1.4.4.1
@@ -71,6 +71,7 @@
     virtual string getType() const = 0;
     virtual void add(OOXMLProperty::Pointer_t pProperty) = 0;
     virtual OOXMLPropertySet * clone() const = 0;
+    virtual void setType(const string & rsType) = 0;
 };
 
 class OOXMLTable : public doctok::Reference<Table>
--- writerfilter/source/ooxml/OOXMLPropertySetImpl.cxx	10 May 2007 14:37:38 -0000	1.18
+++ writerfilter/source/ooxml/OOXMLPropertySetImpl.cxx	16 Jul 2007 10:56:52 -0000	1.18.4.4
@@ -347,7 +347,8 @@
    class OOXMLPropertySetImpl
 */
 
-OOXMLPropertySetImpl::OOXMLPropertySetImpl()
+OOXMLPropertySetImpl::OOXMLPropertySetImpl()    
+: msType("OOXMLPropertySetImpl")
 {
 }
 
@@ -370,13 +371,15 @@
 
 string OOXMLPropertySetImpl::getType() const
 {
-    return "OOXMLPropertySetImpl";
+    return msType;
 }
 
 void OOXMLPropertySetImpl::add(OOXMLProperty::Pointer_t pProperty)
 {
+#ifdef DEBUG_RESOLVE
     if (pProperty->getId() == 0x0)
         clog << "zero property" << endl;
+#endif
 
     mProperties.push_back(pProperty);
 }
@@ -386,6 +389,11 @@
     return new OOXMLPropertySetImpl(*this);
 }
 
+void OOXMLPropertySetImpl::setType(const string & rsType)
+{
+    msType = rsType;
+}
+
 /*
   class OOXMLPropertySetValue
 */
@@ -561,4 +569,56 @@
     return new OOXMLTableImpl(*this);
 }
 
+/*
+  class: OOXMLPropertySetEntryToString
+*/
+
+OOXMLPropertySetEntryToString::OOXMLPropertySetEntryToString(Id nId)
+: mnId(nId)
+{
+}
+
+OOXMLPropertySetEntryToString::~OOXMLPropertySetEntryToString()
+{
+}
+
+void OOXMLPropertySetEntryToString::sprm(Sprm & /*rSprm*/)
+{
+}
+
+void OOXMLPropertySetEntryToString::attribute(Id nId, Value & rValue)
+{
+    if (nId == mnId)
+        mStr = rValue.getString();
+}
+
+const ::rtl::OUString & OOXMLPropertySetEntryToString::getString() const
+{
+    return mStr;
+}
+
+OOXMLPropertySetEntryToInteger::OOXMLPropertySetEntryToInteger(Id nId)
+: mnId(nId)
+{
+}
+
+OOXMLPropertySetEntryToInteger::~OOXMLPropertySetEntryToInteger()
+{
+}
+
+void OOXMLPropertySetEntryToInteger::sprm(Sprm & /*rSprm*/)
+{    
+}
+
+void OOXMLPropertySetEntryToInteger::attribute(Id nId, Value & rValue)
+{
+    if (nId == mnId)
+        mnValue = rValue.getInt();
+}
+
+int OOXMLPropertySetEntryToInteger::getValue() const
+{
+    return mnValue;
+}
+
 }
--- writerfilter/source/ooxml/OOXMLPropertySetImpl.hxx	10 May 2007 14:37:38 -0000	1.17
+++ writerfilter/source/ooxml/OOXMLPropertySetImpl.hxx	16 Jul 2007 10:56:52 -0000	1.17.4.3
@@ -132,6 +132,7 @@
     typedef vector<OOXMLProperty::Pointer_t> OOXMLProperties_t;
 private:
     OOXMLProperties_t mProperties;
+    string msType;
 public:
     OOXMLPropertySetImpl();
     virtual ~OOXMLPropertySetImpl();
@@ -143,6 +144,8 @@
 
     OOXMLProperties_t::iterator begin();
     OOXMLProperties_t::iterator end();
+
+    virtual void setType(const string & rsType);
 };
 
 class OOXMLPropertySetValue : public OOXMLValue
@@ -212,6 +215,35 @@
     virtual OOXMLTable * clone() const;
 };
 
+class OOXMLPropertySetEntryToString : public Properties
+{
+    Id mnId;
+    ::rtl::OUString mStr;
+
+public:
+    OOXMLPropertySetEntryToString(Id nId);
+    virtual ~OOXMLPropertySetEntryToString();
+
+    virtual void sprm(Sprm & rSprm);
+    virtual void attribute(Id nId, Value & rValue);
+
+    const ::rtl::OUString & getString() const;
+};
+
+class OOXMLPropertySetEntryToInteger : public Properties
+{
+    Id mnId;
+    int mnValue;
+public:
+    OOXMLPropertySetEntryToInteger(Id nId);
+    virtual ~OOXMLPropertySetEntryToInteger();
+
+    virtual void sprm(Sprm & rSprm);
+    virtual void attribute(Id nId, Value & rValue);
+
+    int getValue() const;
+};
+
 Sprm::Kind SprmKind(sal_uInt32 nSprmCode);
 
 }  // namespace ooxml
--- writerfilter/source/ooxml/OOXMLSaxHandler.cxx	27 Jun 2007 09:16:33 -0000	1.22
+++ writerfilter/source/ooxml/OOXMLSaxHandler.cxx	16 Jul 2007 08:18:05 -0000	1.22.4.2
@@ -38,9 +38,9 @@
 
 #include <iostream>
 
-#define DEBUG_CONTEXT_STACK
-#define DEBUG_ATTRIBUTE
-#define DEBUG_ELEMENT
+// #define DEBUG_CONTEXT_STACK
+// #define DEBUG_ATTRIBUTE
+// #define DEBUG_ELEMENT
 
 namespace ooxml {
 
@@ -162,8 +162,8 @@
     {
         pContext->setParentResource(pTopContext->getResource());
         handleAttributes(pContext, attriblist);
-        pContext->resolvePropertySetAttrs();
         pContext->startAction();
+        pContext->resolvePropertySetAttrs();
         pContext->setToken(nToken);
     }
 }
--- writerfilter/source/ooxml/OOXMLStreamImpl.cxx	4 Jun 2007 08:46:56 -0000	1.8
+++ writerfilter/source/ooxml/OOXMLStreamImpl.cxx	16 Jul 2007 20:07:34 -0000	1.8.4.3
@@ -40,6 +40,8 @@
 #include <com/sun/star/embed/XHierarchicalStorageAccess.hpp>
 #endif
 
+#define DEBUG_STREAM
+
 namespace ooxml
 {
 
@@ -112,6 +114,7 @@
     static rtl::OUString sFootnotesType(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes"));
     static rtl::OUString sEndnotesType(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes"));
     static rtl::OUString sCommentsType(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments"));
+    static rtl::OUString sThemeType(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme"));
     static rtl::OUString sTarget(RTL_CONSTASCII_USTRINGPARAM("Target"));
 
     rtl::OUString sStreamType(sDocumentType);
@@ -136,6 +139,9 @@
     case COMMENTS:
         sStreamType = sCommentsType;
         break;
+    case THEME:
+        sStreamType = sThemeType;
+	break;
     default:
         break;
     }
@@ -169,6 +175,7 @@
                     sDocumentTarget += aPair.Second;
                 }
 
+#ifdef DEBUG_STREAM
                 clog << "\"" 
                      << OUStringToOString(aPair.First, 
                                           RTL_TEXTENCODING_ASCII_US).getStr() 
@@ -176,14 +183,17 @@
                      << OUStringToOString(aPair.Second, 
                                           RTL_TEXTENCODING_ASCII_US).getStr() 
                      << "\"" << endl;
+#endif
             }
 
             if (bFound)
                 break;
         }
 
+#ifdef DEBUG_STREAM
         clog << OUStringToOString(sDocumentTarget,
                                   RTL_TEXTENCODING_ASCII_US).getStr() << endl;
+#endif
 
         if (bFound)
         {
--- writerfilter/source/ooxml/OOXMLresources.cxx	27 Jun 2007 13:19:22 -0000	1.73
+++ writerfilter/source/ooxml/OOXMLresources.cxx	16 Jul 2007 12:13:21 -0000	1.73.4.4
@@ -48,6 +48,8 @@
 #include "OOXMLPropertySetImpl.hxx"
 #include "TokenMap.hxx"
 
+/// @cond GENERATED
+
 namespace ooxml {
 using namespace ::std;
 
@@ -57,6 +59,9 @@
 static const sal_uInt8 sFtnEdnCont[] = { 0x4, 0x0 }; 
 static const sal_uInt8 sTab[] = { 0x9, 0x0 }; 
 static const sal_uInt8 sPgNum[] = { 0x0, 0x0 }; 
+static const sal_uInt8 sFieldStart[] = { 0x13  }; 
+static const sal_uInt8 sFieldSep[] = { 0x14 }; 
+static const sal_uInt8 sFieldEnd[] = { 0x15 }; 
 
       
       
@@ -674,6 +679,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaBiLevelEffect::~OOXMLContext_drawingml_CT_AlphaBiLevelEffect()
 {
 }
@@ -737,6 +743,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaCeilingEffect::~OOXMLContext_drawingml_CT_AlphaCeilingEffect()
 {
 }
@@ -800,6 +807,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaFloorEffect::~OOXMLContext_drawingml_CT_AlphaFloorEffect()
 {
 }
@@ -863,6 +871,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaInverseEffect::~OOXMLContext_drawingml_CT_AlphaInverseEffect()
 {
 }
@@ -944,6 +953,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaModulateFixedEffect::~OOXMLContext_drawingml_CT_AlphaModulateFixedEffect()
 {
 }
@@ -1007,6 +1017,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaOutsetEffect::~OOXMLContext_drawingml_CT_AlphaOutsetEffect()
 {
 }
@@ -1070,6 +1081,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaReplaceEffect::~OOXMLContext_drawingml_CT_AlphaReplaceEffect()
 {
 }
@@ -1133,6 +1145,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_BiLevelEffect::~OOXMLContext_drawingml_CT_BiLevelEffect()
 {
 }
@@ -1196,6 +1209,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_BlurEffect::~OOXMLContext_drawingml_CT_BlurEffect()
 {
 }
@@ -1259,6 +1273,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ColorChangeEffect::~OOXMLContext_drawingml_CT_ColorChangeEffect()
 {
 }
@@ -1341,6 +1356,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ColorReplaceEffect::~OOXMLContext_drawingml_CT_ColorReplaceEffect()
 {
 }
@@ -1430,6 +1446,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_DuotoneEffect::~OOXMLContext_drawingml_CT_DuotoneEffect()
 {
 }
@@ -1511,6 +1528,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GlowEffect::~OOXMLContext_drawingml_CT_GlowEffect()
 {
 }
@@ -1600,6 +1618,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GrayscaleEffect::~OOXMLContext_drawingml_CT_GrayscaleEffect()
 {
 }
@@ -1663,6 +1682,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_HSLEffect::~OOXMLContext_drawingml_CT_HSLEffect()
 {
 }
@@ -1726,6 +1746,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_InnerShadowEffect::~OOXMLContext_drawingml_CT_InnerShadowEffect()
 {
 }
@@ -1815,6 +1836,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_LuminanceEffect::~OOXMLContext_drawingml_CT_LuminanceEffect()
 {
 }
@@ -1878,6 +1900,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_OuterShadowEffect::~OOXMLContext_drawingml_CT_OuterShadowEffect()
 {
 }
@@ -1967,6 +1990,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PresetShadowEffect::~OOXMLContext_drawingml_CT_PresetShadowEffect()
 {
 }
@@ -2056,6 +2080,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ReflectionEffect::~OOXMLContext_drawingml_CT_ReflectionEffect()
 {
 }
@@ -2119,6 +2144,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_RelativeOffsetEffect::~OOXMLContext_drawingml_CT_RelativeOffsetEffect()
 {
 }
@@ -2182,6 +2208,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SoftEdgesEffect::~OOXMLContext_drawingml_CT_SoftEdgesEffect()
 {
 }
@@ -2245,6 +2272,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_TintEffect::~OOXMLContext_drawingml_CT_TintEffect()
 {
 }
@@ -2308,6 +2336,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_TransformEffect::~OOXMLContext_drawingml_CT_TransformEffect()
 {
 }
@@ -2371,6 +2400,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NoFillProperties::~OOXMLContext_drawingml_CT_NoFillProperties()
 {
 }
@@ -2434,6 +2464,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SolidColorFillProperties::~OOXMLContext_drawingml_CT_SolidColorFillProperties()
 {
 }
@@ -2515,6 +2546,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_LinearShadeProperties::~OOXMLContext_drawingml_CT_LinearShadeProperties()
 {
 }
@@ -2578,6 +2610,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PathShadeProperties::~OOXMLContext_drawingml_CT_PathShadeProperties()
 {
 }
@@ -2654,6 +2687,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_ShadeProperties::~OOXMLContext_drawingml_EG_ShadeProperties()
 {
 }
@@ -2736,6 +2770,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GradientStop::~OOXMLContext_drawingml_CT_GradientStop()
 {
 }
@@ -2825,6 +2860,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GradientStopList::~OOXMLContext_drawingml_CT_GradientStopList()
 {
 }
@@ -2901,6 +2937,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GradientFillProperties::~OOXMLContext_drawingml_CT_GradientFillProperties()
 {
 }
@@ -3001,6 +3038,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_TileInfoProperties::~OOXMLContext_drawingml_CT_TileInfoProperties()
 {
 }
@@ -3064,6 +3102,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_StretchInfoProperties::~OOXMLContext_drawingml_CT_StretchInfoProperties()
 {
 }
@@ -3140,6 +3179,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_FillModeProperties::~OOXMLContext_drawingml_EG_FillModeProperties()
 {
 }
@@ -3222,6 +3262,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Blip::~OOXMLContext_drawingml_CT_Blip()
 {
 }
@@ -3400,6 +3441,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_BlipFillProperties::~OOXMLContext_drawingml_CT_BlipFillProperties()
 {
 }
@@ -3500,6 +3542,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PatternFillProperties::~OOXMLContext_drawingml_CT_PatternFillProperties()
 {
 }
@@ -3582,6 +3625,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GroupFillProperties::~OOXMLContext_drawingml_CT_GroupFillProperties()
 {
 }
@@ -3645,6 +3689,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_FillProperties::~OOXMLContext_drawingml_EG_FillProperties()
 {
 }
@@ -3751,6 +3796,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_FillProperties::~OOXMLContext_drawingml_CT_FillProperties()
 {
 }
@@ -3840,6 +3886,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_FillEffect::~OOXMLContext_drawingml_CT_FillEffect()
 {
 }
@@ -3929,6 +3976,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_FillOverlayEffect::~OOXMLContext_drawingml_CT_FillOverlayEffect()
 {
 }
@@ -4018,6 +4066,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EffectReference::~OOXMLContext_drawingml_CT_EffectReference()
 {
 }
@@ -4081,6 +4130,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_Effect::~OOXMLContext_drawingml_EG_Effect()
 {
 }
@@ -4331,6 +4381,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EffectContainer::~OOXMLContext_drawingml_CT_EffectContainer()
 {
 }
@@ -4412,6 +4463,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaModulateEffect::~OOXMLContext_drawingml_CT_AlphaModulateEffect()
 {
 }
@@ -4488,6 +4540,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_BlendEffect::~OOXMLContext_drawingml_CT_BlendEffect()
 {
 }
@@ -4564,6 +4617,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EffectList::~OOXMLContext_drawingml_CT_EffectList()
 {
 }
@@ -4682,6 +4736,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_EffectProperties::~OOXMLContext_drawingml_EG_EffectProperties()
 {
 }
@@ -4764,6 +4819,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EffectProperties::~OOXMLContext_drawingml_CT_EffectProperties()
 {
 }
@@ -4853,6 +4909,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_blip::~OOXMLContext_drawingml_blip()
 {
 }
@@ -4929,6 +4986,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ShapeProperties::~OOXMLContext_drawingml_CT_ShapeProperties()
 {
 }
@@ -5065,6 +5123,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GroupShapeProperties::~OOXMLContext_drawingml_CT_GroupShapeProperties()
 {
 }
@@ -5183,6 +5242,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_OfficeArtExtension::~OOXMLContext_drawingml_CT_OfficeArtExtension()
 {
 }
@@ -5246,6 +5306,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Angle::~OOXMLContext_drawingml_CT_Angle()
 {
 }
@@ -5318,6 +5379,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PositiveFixedAngle::~OOXMLContext_drawingml_CT_PositiveFixedAngle()
 {
 }
@@ -5390,6 +5452,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Percentage::~OOXMLContext_drawingml_CT_Percentage()
 {
 }
@@ -5462,6 +5525,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PositivePercentage::~OOXMLContext_drawingml_CT_PositivePercentage()
 {
 }
@@ -5534,6 +5598,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_FixedPercentage::~OOXMLContext_drawingml_CT_FixedPercentage()
 {
 }
@@ -5606,6 +5671,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PositiveFixedPercentage::~OOXMLContext_drawingml_CT_PositiveFixedPercentage()
 {
 }
@@ -5678,6 +5744,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Ratio::~OOXMLContext_drawingml_CT_Ratio()
 {
 }
@@ -5741,6 +5808,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Point2D::~OOXMLContext_drawingml_CT_Point2D()
 {
 }
@@ -5804,6 +5872,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PositiveSize2D::~OOXMLContext_drawingml_CT_PositiveSize2D()
 {
 }
@@ -5867,6 +5936,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ComplementTransform::~OOXMLContext_drawingml_CT_ComplementTransform()
 {
 }
@@ -5930,6 +6000,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_InverseTransform::~OOXMLContext_drawingml_CT_InverseTransform()
 {
 }
@@ -5993,6 +6064,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GrayscaleTransform::~OOXMLContext_drawingml_CT_GrayscaleTransform()
 {
 }
@@ -6056,6 +6128,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GammaTransform::~OOXMLContext_drawingml_CT_GammaTransform()
 {
 }
@@ -6119,6 +6192,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_InverseGammaTransform::~OOXMLContext_drawingml_CT_InverseGammaTransform()
 {
 }
@@ -6182,6 +6256,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_ColorTransform::~OOXMLContext_drawingml_EG_ColorTransform()
 {
 }
@@ -6420,6 +6495,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ScRgbColor::~OOXMLContext_drawingml_CT_ScRgbColor()
 {
 }
@@ -6501,6 +6577,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SRgbColor::~OOXMLContext_drawingml_CT_SRgbColor()
 {
 }
@@ -6591,6 +6668,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_HslColor::~OOXMLContext_drawingml_CT_HslColor()
 {
 }
@@ -6672,6 +6750,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SystemColor::~OOXMLContext_drawingml_CT_SystemColor()
 {
 }
@@ -6766,6 +6845,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SchemeColor::~OOXMLContext_drawingml_CT_SchemeColor()
 {
 }
@@ -6856,6 +6936,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PresetColor::~OOXMLContext_drawingml_CT_PresetColor()
 {
 }
@@ -6946,6 +7027,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_OfficeArtExtensionList::~OOXMLContext_drawingml_EG_OfficeArtExtensionList()
 {
 }
@@ -7022,6 +7104,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_OfficeArtExtensionList::~OOXMLContext_drawingml_CT_OfficeArtExtensionList()
 {
 }
@@ -7111,6 +7194,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Scale2D::~OOXMLContext_drawingml_CT_Scale2D()
 {
 }
@@ -7193,6 +7277,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Transform2D::~OOXMLContext_drawingml_CT_Transform2D()
 {
 }
@@ -7275,6 +7360,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GroupTransform2D::~OOXMLContext_drawingml_CT_GroupTransform2D()
 {
 }
@@ -7369,6 +7455,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Point3D::~OOXMLContext_drawingml_CT_Point3D()
 {
 }
@@ -7432,6 +7519,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Vector3D::~OOXMLContext_drawingml_CT_Vector3D()
 {
 }
@@ -7495,6 +7583,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SphereCoords::~OOXMLContext_drawingml_CT_SphereCoords()
 {
 }
@@ -7558,6 +7647,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_RelativeRect::~OOXMLContext_drawingml_CT_RelativeRect()
 {
 }
@@ -7621,6 +7711,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_ColorChoice::~OOXMLContext_drawingml_EG_ColorChoice()
 {
 }
@@ -7727,6 +7818,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Color::~OOXMLContext_drawingml_CT_Color()
 {
 }
@@ -7816,6 +7908,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ColorMRU::~OOXMLContext_drawingml_CT_ColorMRU()
 {
 }
@@ -7897,6 +7990,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile::~OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile()
 {
 }
@@ -7960,6 +8054,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Hyperlink::~OOXMLContext_drawingml_CT_Hyperlink()
 {
 }
@@ -8042,6 +8137,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ConnectorLocking::~OOXMLContext_drawingml_CT_ConnectorLocking()
 {
 }
@@ -8118,6 +8214,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ShapeLocking::~OOXMLContext_drawingml_CT_ShapeLocking()
 {
 }
@@ -8194,6 +8291,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PictureLocking::~OOXMLContext_drawingml_CT_PictureLocking()
 {
 }
@@ -8270,6 +8368,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GroupLocking::~OOXMLContext_drawingml_CT_GroupLocking()
 {
 }
@@ -8346,6 +8445,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking::~OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking()
 {
 }
@@ -8422,6 +8522,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualDrawingProps::~OOXMLContext_drawingml_CT_NonVisualDrawingProps()
 {
 }
@@ -8510,6 +8611,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualDrawingShapeProps::~OOXMLContext_drawingml_CT_NonVisualDrawingShapeProps()
 {
 }
@@ -8592,6 +8694,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualConnectorProperties::~OOXMLContext_drawingml_CT_NonVisualConnectorProperties()
 {
 }
@@ -8686,6 +8789,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualPictureProperties::~OOXMLContext_drawingml_CT_NonVisualPictureProperties()
 {
 }
@@ -8768,6 +8872,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualGroupDrawingShapeProps::~OOXMLContext_drawingml_CT_NonVisualGroupDrawingShapeProps()
 {
 }
@@ -8850,6 +8955,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties::~OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties()
 {
 }
@@ -8932,6 +9038,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GraphicalObjectData::~OOXMLContext_drawingml_CT_GraphicalObjectData()
 {
 }
@@ -9013,6 +9120,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GraphicalObject::~OOXMLContext_drawingml_CT_GraphicalObject()
 {
 }
@@ -9089,6 +9197,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_graphic::~OOXMLContext_drawingml_graphic()
 {
 }
@@ -9165,6 +9274,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GeomGuide::~OOXMLContext_drawingml_CT_GeomGuide()
 {
 }
@@ -9228,6 +9338,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GeomGuideList::~OOXMLContext_drawingml_CT_GeomGuideList()
 {
 }
@@ -9304,6 +9415,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AdjPoint2D::~OOXMLContext_drawingml_CT_AdjPoint2D()
 {
 }
@@ -9367,6 +9479,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GeomRect::~OOXMLContext_drawingml_CT_GeomRect()
 {
 }
@@ -9430,6 +9543,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_XYAdjustHandle::~OOXMLContext_drawingml_CT_XYAdjustHandle()
 {
 }
@@ -9506,6 +9620,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PolarAdjustHandle::~OOXMLContext_drawingml_CT_PolarAdjustHandle()
 {
 }
@@ -9582,6 +9697,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ConnectionSite::~OOXMLContext_drawingml_CT_ConnectionSite()
 {
 }
@@ -9658,6 +9774,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AdjustHandleList::~OOXMLContext_drawingml_CT_AdjustHandleList()
 {
 }
@@ -9740,6 +9857,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ConnectionSiteList::~OOXMLContext_drawingml_CT_ConnectionSiteList()
 {
 }
@@ -9816,6 +9934,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Connection::~OOXMLContext_drawingml_CT_Connection()
 {
 }
@@ -9879,6 +9998,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DMoveTo::~OOXMLContext_drawingml_CT_Path2DMoveTo()
 {
 }
@@ -9955,6 +10075,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DLineTo::~OOXMLContext_drawingml_CT_Path2DLineTo()
 {
 }
@@ -10031,6 +10152,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DArcTo::~OOXMLContext_drawingml_CT_Path2DArcTo()
 {
 }
@@ -10094,6 +10216,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DQuadBezierTo::~OOXMLContext_drawingml_CT_Path2DQuadBezierTo()
 {
 }
@@ -10170,6 +10293,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DCubicBezierTo::~OOXMLContext_drawingml_CT_Path2DCubicBezierTo()
 {
 }
@@ -10246,6 +10370,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DClose::~OOXMLContext_drawingml_CT_Path2DClose()
 {
 }
@@ -10309,6 +10434,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2D::~OOXMLContext_drawingml_CT_Path2D()
 {
 }
@@ -10415,6 +10541,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DList::~OOXMLContext_drawingml_CT_Path2DList()
 {
 }
@@ -10491,6 +10618,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PresetGeometry2D::~OOXMLContext_drawingml_CT_PresetGeometry2D()
 {
 }
@@ -10567,6 +10695,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PresetTextShape::~OOXMLContext_drawingml_CT_PresetTextShape()
 {
 }
@@ -10643,6 +10772,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_CustomGeometry2D::~OOXMLContext_drawingml_CT_CustomGeometry2D()
 {
 }
@@ -10749,6 +10879,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_Geometry::~OOXMLContext_drawingml_EG_Geometry()
 {
 }
@@ -10831,6 +10962,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_TextGeometry::~OOXMLContext_drawingml_EG_TextGeometry()
 {
 }
@@ -10913,6 +11045,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_EffectExtent::~OOXMLContext_wordprocessingDrawing_CT_EffectExtent()
 {
 }
@@ -10976,6 +11109,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_Inline::~OOXMLContext_wordprocessingDrawing_CT_Inline()
 {
 }
@@ -11070,6 +11204,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapPath::~OOXMLContext_wordprocessingDrawing_CT_WrapPath()
 {
 }
@@ -11152,6 +11287,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapNone::~OOXMLContext_wordprocessingDrawing_CT_WrapNone()
 {
 }
@@ -11215,6 +11351,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapSquare::~OOXMLContext_wordprocessingDrawing_CT_WrapSquare()
 {
 }
@@ -11291,6 +11428,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapTight::~OOXMLContext_wordprocessingDrawing_CT_WrapTight()
 {
 }
@@ -11367,6 +11505,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapThrough::~OOXMLContext_wordprocessingDrawing_CT_WrapThrough()
 {
 }
@@ -11443,6 +11582,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapTopBottom::~OOXMLContext_wordprocessingDrawing_CT_WrapTopBottom()
 {
 }
@@ -11519,6 +11659,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_EG_WrapType::~OOXMLContext_wordprocessingDrawing_EG_WrapType()
 {
 }
@@ -11619,6 +11760,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_PosH::~OOXMLContext_wordprocessingDrawing_CT_PosH()
 {
 }
@@ -11682,6 +11824,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_PosV::~OOXMLContext_wordprocessingDrawing_CT_PosV()
 {
 }
@@ -11745,6 +11888,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_Anchor::~OOXMLContext_wordprocessingDrawing_CT_Anchor()
 {
 }
@@ -11875,6 +12019,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_inline::~OOXMLContext_wordprocessingDrawing_inline()
 {
 }
@@ -11951,6 +12096,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_anchor::~OOXMLContext_wordprocessingDrawing_anchor()
 {
 }
@@ -12027,6 +12173,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_schemaLibrary_CT_Schema::~OOXMLContext_schemaLibrary_CT_Schema()
 {
 }
@@ -12090,6 +12237,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_schemaLibrary_CT_SchemaLibrary::~OOXMLContext_schemaLibrary_CT_SchemaLibrary()
 {
 }
@@ -12166,6 +12314,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_schemaLibrary_schemaLibrary::~OOXMLContext_schemaLibrary_schemaLibrary()
 {
 }
@@ -12242,6 +12391,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Integer255::~OOXMLContext_math_CT_Integer255()
 {
 }
@@ -12314,6 +12464,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Integer2::~OOXMLContext_math_CT_Integer2()
 {
 }
@@ -12386,6 +12537,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_SpacingRule::~OOXMLContext_math_CT_SpacingRule()
 {
 }
@@ -12458,6 +12610,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_UnSignedInteger::~OOXMLContext_math_CT_UnSignedInteger()
 {
 }
@@ -12530,6 +12683,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Char::~OOXMLContext_math_CT_Char()
 {
 }
@@ -12602,6 +12756,7 @@
 : OOXMLContextBooleanValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_OnOff::~OOXMLContext_math_CT_OnOff()
 {
 }
@@ -12676,6 +12831,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_String::~OOXMLContext_math_CT_String()
 {
 }
@@ -12748,6 +12904,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_XAlign::~OOXMLContext_math_CT_XAlign()
 {
 }
@@ -12820,6 +12977,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_YAlign::~OOXMLContext_math_CT_YAlign()
 {
 }
@@ -12892,6 +13050,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Shp::~OOXMLContext_math_CT_Shp()
 {
 }
@@ -12964,6 +13123,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_FType::~OOXMLContext_math_CT_FType()
 {
 }
@@ -13036,6 +13196,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimLoc::~OOXMLContext_math_CT_LimLoc()
 {
 }
@@ -13108,6 +13269,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_TopBot::~OOXMLContext_math_CT_TopBot()
 {
 }
@@ -13180,6 +13342,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Script::~OOXMLContext_math_CT_Script()
 {
 }
@@ -13252,6 +13415,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Style::~OOXMLContext_math_CT_Style()
 {
 }
@@ -13326,6 +13490,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_ManualBreak::~OOXMLContext_math_CT_ManualBreak()
 {
 }
@@ -13389,6 +13554,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_EG_ScriptStyle::~OOXMLContext_math_EG_ScriptStyle()
 {
 }
@@ -13471,6 +13637,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_RPR::~OOXMLContext_math_CT_RPR()
 {
 }
@@ -13583,6 +13750,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Text::~OOXMLContext_math_CT_Text()
 {
 }
@@ -13646,6 +13814,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_R::~OOXMLContext_math_CT_R()
 {
 }
@@ -13765,6 +13934,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_CtrlPr::~OOXMLContext_math_CT_CtrlPr()
 {
 }
@@ -13846,6 +14016,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_AccPr::~OOXMLContext_math_CT_AccPr()
 {
 }
@@ -13928,6 +14099,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Acc::~OOXMLContext_math_CT_Acc()
 {
 }
@@ -14010,6 +14182,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_BarPr::~OOXMLContext_math_CT_BarPr()
 {
 }
@@ -14092,6 +14265,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Bar::~OOXMLContext_math_CT_Bar()
 {
 }
@@ -14174,6 +14348,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_BoxPr::~OOXMLContext_math_CT_BoxPr()
 {
 }
@@ -14280,6 +14455,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Box::~OOXMLContext_math_CT_Box()
 {
 }
@@ -14362,6 +14538,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_BorderBoxPr::~OOXMLContext_math_CT_BorderBoxPr()
 {
 }
@@ -14486,6 +14663,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_BorderBox::~OOXMLContext_math_CT_BorderBox()
 {
 }
@@ -14568,6 +14746,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_DPr::~OOXMLContext_math_CT_DPr()
 {
 }
@@ -14674,6 +14853,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_D::~OOXMLContext_math_CT_D()
 {
 }
@@ -14756,6 +14936,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_EqArrPr::~OOXMLContext_math_CT_EqArrPr()
 {
 }
@@ -14862,6 +15043,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_EqArr::~OOXMLContext_math_CT_EqArr()
 {
 }
@@ -14944,6 +15126,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_FPr::~OOXMLContext_math_CT_FPr()
 {
 }
@@ -15026,6 +15209,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_F::~OOXMLContext_math_CT_F()
 {
 }
@@ -15114,6 +15298,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_FuncPr::~OOXMLContext_math_CT_FuncPr()
 {
 }
@@ -15190,6 +15375,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Func::~OOXMLContext_math_CT_Func()
 {
 }
@@ -15278,6 +15464,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_GroupChrPr::~OOXMLContext_math_CT_GroupChrPr()
 {
 }
@@ -15372,6 +15559,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_GroupChr::~OOXMLContext_math_CT_GroupChr()
 {
 }
@@ -15454,6 +15642,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimLowPr::~OOXMLContext_math_CT_LimLowPr()
 {
 }
@@ -15530,6 +15719,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimLow::~OOXMLContext_math_CT_LimLow()
 {
 }
@@ -15618,6 +15808,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimUppPr::~OOXMLContext_math_CT_LimUppPr()
 {
 }
@@ -15694,6 +15885,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimUpp::~OOXMLContext_math_CT_LimUpp()
 {
 }
@@ -15782,6 +15974,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MCPr::~OOXMLContext_math_CT_MCPr()
 {
 }
@@ -15864,6 +16057,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MC::~OOXMLContext_math_CT_MC()
 {
 }
@@ -15940,6 +16134,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MCS::~OOXMLContext_math_CT_MCS()
 {
 }
@@ -16016,6 +16211,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MPr::~OOXMLContext_math_CT_MPr()
 {
 }
@@ -16140,6 +16336,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MR::~OOXMLContext_math_CT_MR()
 {
 }
@@ -16216,6 +16413,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_M::~OOXMLContext_math_CT_M()
 {
 }
@@ -16298,6 +16496,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_NaryPr::~OOXMLContext_math_CT_NaryPr()
 {
 }
@@ -16404,6 +16603,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Nary::~OOXMLContext_math_CT_Nary()
 {
 }
@@ -16498,6 +16698,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_PhantPr::~OOXMLContext_math_CT_PhantPr()
 {
 }
@@ -16604,6 +16805,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Phant::~OOXMLContext_math_CT_Phant()
 {
 }
@@ -16686,6 +16888,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_RadPr::~OOXMLContext_math_CT_RadPr()
 {
 }
@@ -16768,6 +16971,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Rad::~OOXMLContext_math_CT_Rad()
 {
 }
@@ -16856,6 +17060,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SPrePr::~OOXMLContext_math_CT_SPrePr()
 {
 }
@@ -16932,6 +17137,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SPre::~OOXMLContext_math_CT_SPre()
 {
 }
@@ -17026,6 +17232,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSubPr::~OOXMLContext_math_CT_SSubPr()
 {
 }
@@ -17102,6 +17309,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSub::~OOXMLContext_math_CT_SSub()
 {
 }
@@ -17190,6 +17398,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSubSupPr::~OOXMLContext_math_CT_SSubSupPr()
 {
 }
@@ -17272,6 +17481,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSubSup::~OOXMLContext_math_CT_SSubSup()
 {
 }
@@ -17366,6 +17576,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSupPr::~OOXMLContext_math_CT_SSupPr()
 {
 }
@@ -17442,6 +17653,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSup::~OOXMLContext_math_CT_SSup()
 {
 }
@@ -17530,6 +17742,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_EG_OMathMathElements::~OOXMLContext_math_EG_OMathMathElements()
 {
 }
@@ -17720,6 +17933,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_EG_OMathElements::~OOXMLContext_math_EG_OMathElements()
 {
 }
@@ -17819,6 +18033,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathArgPr::~OOXMLContext_math_CT_OMathArgPr()
 {
 }
@@ -17895,6 +18110,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathArg::~OOXMLContext_math_CT_OMathArg()
 {
 }
@@ -17995,6 +18211,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathJc::~OOXMLContext_math_CT_OMathJc()
 {
 }
@@ -18067,6 +18284,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathParaPr::~OOXMLContext_math_CT_OMathParaPr()
 {
 }
@@ -18143,6 +18361,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_TwipsMeasure::~OOXMLContext_math_CT_TwipsMeasure()
 {
 }
@@ -18215,6 +18434,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_BreakBin::~OOXMLContext_math_CT_BreakBin()
 {
 }
@@ -18287,6 +18507,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_BreakBinSub::~OOXMLContext_math_CT_BreakBinSub()
 {
 }
@@ -18359,6 +18580,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MathPr::~OOXMLContext_math_CT_MathPr()
 {
 }
@@ -18525,6 +18747,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathPara::~OOXMLContext_math_CT_OMathPara()
 {
 }
@@ -18607,6 +18830,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMath::~OOXMLContext_math_CT_OMath()
 {
 }
@@ -18688,6 +18912,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_oMathPara::~OOXMLContext_math_oMathPara()
 {
 }
@@ -18764,6 +18989,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_oMath::~OOXMLContext_math_oMath()
 {
 }
@@ -18840,6 +19066,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_picture_CT_PictureNonVisual::~OOXMLContext_picture_CT_PictureNonVisual()
 {
 }
@@ -18922,6 +19149,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_picture_CT_Picture::~OOXMLContext_picture_CT_Picture()
 {
 }
@@ -19010,6 +19238,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_picture_pic::~OOXMLContext_picture_pic()
 {
 }
@@ -19086,6 +19315,7 @@
 : OOXMLContextSingleElement(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Empty::~OOXMLContext_wordprocessingml_CT_Empty()
 {
 }
@@ -19149,6 +19379,7 @@
 : OOXMLContextBooleanValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_OnOff::~OOXMLContext_wordprocessingml_CT_OnOff()
 {
 }
@@ -19223,6 +19454,7 @@
 : OOXMLContextHexValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LongHexNumber::~OOXMLContext_wordprocessingml_CT_LongHexNumber()
 {
 }
@@ -19295,6 +19527,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ShortHexNumber::~OOXMLContext_wordprocessingml_CT_ShortHexNumber()
 {
 }
@@ -19358,6 +19591,7 @@
 : OOXMLContextHexValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_UcharHexNumber::~OOXMLContext_wordprocessingml_CT_UcharHexNumber()
 {
 }
@@ -19430,6 +19664,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DecimalNumber::~OOXMLContext_wordprocessingml_CT_DecimalNumber()
 {
 }
@@ -19502,6 +19737,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TwipsMeasure::~OOXMLContext_wordprocessingml_CT_TwipsMeasure()
 {
 }
@@ -19574,6 +19810,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SignedTwipsMeasure::~OOXMLContext_wordprocessingml_CT_SignedTwipsMeasure()
 {
 }
@@ -19646,6 +19883,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PixelsMeasure::~OOXMLContext_wordprocessingml_CT_PixelsMeasure()
 {
 }
@@ -19709,6 +19947,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_HpsMeasure::~OOXMLContext_wordprocessingml_CT_HpsMeasure()
 {
 }
@@ -19781,6 +20020,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SignedHpsMeasure::~OOXMLContext_wordprocessingml_CT_SignedHpsMeasure()
 {
 }
@@ -19853,6 +20093,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MacroName::~OOXMLContext_wordprocessingml_CT_MacroName()
 {
 }
@@ -19925,6 +20166,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_String::~OOXMLContext_wordprocessingml_CT_String()
 {
 }
@@ -19997,6 +20239,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextScale::~OOXMLContext_wordprocessingml_CT_TextScale()
 {
 }
@@ -20069,6 +20312,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Highlight::~OOXMLContext_wordprocessingml_CT_Highlight()
 {
 }
@@ -20143,6 +20387,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Color::~OOXMLContext_wordprocessingml_CT_Color()
 {
 }
@@ -20266,6 +20511,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Lang::~OOXMLContext_wordprocessingml_CT_Lang()
 {
 }
@@ -20338,6 +20584,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Guid::~OOXMLContext_wordprocessingml_CT_Guid()
 {
 }
@@ -20410,6 +20657,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Underline::~OOXMLContext_wordprocessingml_CT_Underline()
 {
 }
@@ -20540,6 +20788,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextEffect::~OOXMLContext_wordprocessingml_CT_TextEffect()
 {
 }
@@ -20614,6 +20863,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Border::~OOXMLContext_wordprocessingml_CT_Border()
 {
 }
@@ -20797,6 +21047,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Shd::~OOXMLContext_wordprocessingml_CT_Shd()
 {
 }
@@ -20980,6 +21231,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_VerticalAlignRun::~OOXMLContext_wordprocessingml_CT_VerticalAlignRun()
 {
 }
@@ -21052,6 +21304,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FitText::~OOXMLContext_wordprocessingml_CT_FitText()
 {
 }
@@ -21128,6 +21381,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Em::~OOXMLContext_wordprocessingml_CT_Em()
 {
 }
@@ -21202,6 +21456,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Language::~OOXMLContext_wordprocessingml_CT_Language()
 {
 }
@@ -21313,6 +21568,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_EastAsianLayout::~OOXMLContext_wordprocessingml_CT_EastAsianLayout()
 {
 }
@@ -21448,6 +21704,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FramePr::~OOXMLContext_wordprocessingml_CT_FramePr()
 {
 }
@@ -21673,6 +21930,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TabStop::~OOXMLContext_wordprocessingml_CT_TabStop()
 {
 }
@@ -21784,6 +22042,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Spacing::~OOXMLContext_wordprocessingml_CT_Spacing()
 {
 }
@@ -21955,6 +22214,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Ind::~OOXMLContext_wordprocessingml_CT_Ind()
 {
 }
@@ -22126,6 +22386,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Jc::~OOXMLContext_wordprocessingml_CT_Jc()
 {
 }
@@ -22200,6 +22461,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_View::~OOXMLContext_wordprocessingml_CT_View()
 {
 }
@@ -22272,6 +22534,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Zoom::~OOXMLContext_wordprocessingml_CT_Zoom()
 {
 }
@@ -22335,6 +22598,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_WritingStyle::~OOXMLContext_wordprocessingml_CT_WritingStyle()
 {
 }
@@ -22398,6 +22662,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Proof::~OOXMLContext_wordprocessingml_CT_Proof()
 {
 }
@@ -22461,6 +22726,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocType::~OOXMLContext_wordprocessingml_CT_DocType()
 {
 }
@@ -22533,6 +22799,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocProtect::~OOXMLContext_wordprocessingml_CT_DocProtect()
 {
 }
@@ -22596,6 +22863,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeDocType::~OOXMLContext_wordprocessingml_CT_MailMergeDocType()
 {
 }
@@ -22668,6 +22936,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeDataType::~OOXMLContext_wordprocessingml_CT_MailMergeDataType()
 {
 }
@@ -22740,6 +23009,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeDest::~OOXMLContext_wordprocessingml_CT_MailMergeDest()
 {
 }
@@ -22812,6 +23082,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeOdsoFMDFieldType::~OOXMLContext_wordprocessingml_CT_MailMergeOdsoFMDFieldType()
 {
 }
@@ -22884,6 +23155,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrackChangesView::~OOXMLContext_wordprocessingml_CT_TrackChangesView()
 {
 }
@@ -22947,6 +23219,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Kinsoku::~OOXMLContext_wordprocessingml_CT_Kinsoku()
 {
 }
@@ -23023,6 +23296,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextDirection::~OOXMLContext_wordprocessingml_CT_TextDirection()
 {
 }
@@ -23097,6 +23371,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextAlignment::~OOXMLContext_wordprocessingml_CT_TextAlignment()
 {
 }
@@ -23169,6 +23444,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Markup::~OOXMLContext_wordprocessingml_CT_Markup()
 {
 }
@@ -23254,6 +23530,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrackChange::~OOXMLContext_wordprocessingml_CT_TrackChange()
 {
 }
@@ -23376,6 +23653,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CellMergeTrackChange::~OOXMLContext_wordprocessingml_CT_CellMergeTrackChange()
 {
 }
@@ -23465,6 +23743,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrackChangeRange::~OOXMLContext_wordprocessingml_CT_TrackChangeRange()
 {
 }
@@ -23551,9 +23830,10 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_MarkupRange*/
 OOXMLContext_wordprocessingml_CT_MarkupRange::OOXMLContext_wordprocessingml_CT_MarkupRange(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MarkupRange::~OOXMLContext_wordprocessingml_CT_MarkupRange()
 {
 }
@@ -23591,11 +23871,23 @@
 bool OOXMLContext_wordprocessingml_CT_MarkupRange::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_displacedByCustomXml:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     if (! bResult)
     {
         OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_Markup(*this));
         pRefContext->setParentResource(getResource());
         
+        pRefContext->setPropertySet(mpPropertySet);
         bResult = pRefContext->attribute(nToken, rValue);
         
     }
@@ -23607,7 +23899,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_MarkupRange : displacedByCustomXml
+     case OOXML_ATTRIBUTE_wordprocessingml_displacedByCustomXml:
+        nResult = NS_ooxml::LN_CT_MarkupRange_displacedByCustomXml;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -23629,7 +23932,7 @@
     
 void OOXMLContext_wordprocessingml_CT_MarkupRange::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_MarkupRange::startAction()
 {
@@ -23638,11 +23941,126 @@
 {
 }
 /* 
+    class: OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark*/
+OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(const OOXMLContext & rContext)
+: OOXMLContextProperties(rContext)
+{
+}
+
+OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::~OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
+{
+    bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_id:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
+    if (! bResult)
+    {
+        OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+        pRefContext->setParentResource(getResource());
+        
+        pRefContext->setPropertySet(mpPropertySet);
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    switch (nToken)
+    {
+        // CT_MarkupRangeBookmark : id
+     case OOXML_ATTRIBUTE_wordprocessingml_id:
+        nResult = NS_rtf::LN_IBKL;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
+    return 0x0;
+}
+    
+void OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContextProperties::lcl_characters(sText);
+}
+void OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::startAction()
+{
+}
+void OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::endAction()
+{
+}
+/* 
     class: OOXMLContext_wordprocessingml_CT_BookmarkRange*/
 OOXMLContext_wordprocessingml_CT_BookmarkRange::OOXMLContext_wordprocessingml_CT_BookmarkRange(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
+    mpPropertySet->setType("Bookmark");
 }
+
 OOXMLContext_wordprocessingml_CT_BookmarkRange::~OOXMLContext_wordprocessingml_CT_BookmarkRange()
 {
 }
@@ -23654,7 +24072,7 @@
     
     {       
         OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
-            ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+            ( new OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(*this));
         OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
 
         if (pContext.get() != NULL)
@@ -23680,11 +24098,29 @@
 bool OOXMLContext_wordprocessingml_CT_BookmarkRange::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_colFirst:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_colLast:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     if (! bResult)
     {
-        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+        OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(*this));
         pRefContext->setParentResource(getResource());
         
+        pRefContext->setPropertySet(mpPropertySet);
         bResult = pRefContext->attribute(nToken, rValue);
         
     }
@@ -23696,7 +24132,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_BookmarkRange : colFirst
+     case OOXML_ATTRIBUTE_wordprocessingml_colFirst:
+        nResult = NS_ooxml::LN_CT_BookmarkRange_colFirst;
+        break;
+        // CT_BookmarkRange : colLast
+     case OOXML_ATTRIBUTE_wordprocessingml_colLast:
+        nResult = NS_ooxml::LN_CT_BookmarkRange_colLast;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -23706,7 +24157,7 @@
     tmpToken = nToken; // prevent warning
     {       
         OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
-            ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+            ( new OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(*this));
         doctok::Id nId = pSubContext->getId(nToken);
 
         if (nId != 0x0)
@@ -23718,7 +24169,7 @@
     
 void OOXMLContext_wordprocessingml_CT_BookmarkRange::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_BookmarkRange::startAction()
 {
@@ -23729,9 +24180,11 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_Bookmark*/
 OOXMLContext_wordprocessingml_CT_Bookmark::OOXMLContext_wordprocessingml_CT_Bookmark(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
+    mpPropertySet->setType("Bookmark");
 }
+
 OOXMLContext_wordprocessingml_CT_Bookmark::~OOXMLContext_wordprocessingml_CT_Bookmark()
 {
 }
@@ -23769,11 +24222,23 @@
 bool OOXMLContext_wordprocessingml_CT_Bookmark::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_name:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     if (! bResult)
     {
-        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_BookmarkRange(*this));
+        OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_BookmarkRange(*this));
         pRefContext->setParentResource(getResource());
         
+        pRefContext->setPropertySet(mpPropertySet);
         bResult = pRefContext->attribute(nToken, rValue);
         
     }
@@ -23785,7 +24250,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_Bookmark : name
+     case OOXML_ATTRIBUTE_wordprocessingml_name:
+        nResult = NS_rtf::LN_BOOKMARKNAME;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -23807,7 +24283,7 @@
     
 void OOXMLContext_wordprocessingml_CT_Bookmark::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_Bookmark::startAction()
 {
@@ -23821,6 +24297,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MoveBookmark::~OOXMLContext_wordprocessingml_CT_MoveBookmark()
 {
 }
@@ -23860,7 +24337,7 @@
     bool bResult = false;
     if (! bResult)
     {
-        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_Bookmark(*this));
+        OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_Bookmark(*this));
         pRefContext->setParentResource(getResource());
         
         bResult = pRefContext->attribute(nToken, rValue);
@@ -23910,6 +24387,7 @@
 : OOXMLContextXNote(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Comment::~OOXMLContext_wordprocessingml_CT_Comment()
 {
 }
@@ -24038,6 +24516,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrackChangeNumbering::~OOXMLContext_wordprocessingml_CT_TrackChangeNumbering()
 {
 }
@@ -24127,6 +24606,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrExChange::~OOXMLContext_wordprocessingml_CT_TblPrExChange()
 {
 }
@@ -24229,6 +24709,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcPrChange::~OOXMLContext_wordprocessingml_CT_TcPrChange()
 {
 }
@@ -24331,6 +24812,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrPrChange::~OOXMLContext_wordprocessingml_CT_TrPrChange()
 {
 }
@@ -24433,6 +24915,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblGridChange::~OOXMLContext_wordprocessingml_CT_TblGridChange()
 {
 }
@@ -24535,6 +25018,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrChange::~OOXMLContext_wordprocessingml_CT_TblPrChange()
 {
 }
@@ -24637,6 +25121,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SectPrChange::~OOXMLContext_wordprocessingml_CT_SectPrChange()
 {
 }
@@ -24751,6 +25236,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PPrChange::~OOXMLContext_wordprocessingml_CT_PPrChange()
 {
 }
@@ -24853,6 +25339,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RPrChange::~OOXMLContext_wordprocessingml_CT_RPrChange()
 {
 }
@@ -24955,6 +25442,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ParaRPrChange::~OOXMLContext_wordprocessingml_CT_ParaRPrChange()
 {
 }
@@ -25057,6 +25545,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RunTrackChange::~OOXMLContext_wordprocessingml_CT_RunTrackChange()
 {
 }
@@ -25182,6 +25671,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_CellMarkupElements::~OOXMLContext_wordprocessingml_EG_CellMarkupElements()
 {
 }
@@ -25270,6 +25760,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RangeMarkupElements::~OOXMLContext_wordprocessingml_EG_RangeMarkupElements()
 {
 }
@@ -25298,7 +25789,7 @@
      case OOXML_ELEMENT_wordprocessingml_bookmarkEnd:
         {
             pResult = OOXMLContext::Pointer_t
-               ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+               ( new OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(*this));
          }
              break;
      case OOXML_ELEMENT_wordprocessingml_moveFromRangeStart:
@@ -25436,6 +25927,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumPr::~OOXMLContext_wordprocessingml_CT_NumPr()
 {
 }
@@ -25553,6 +26045,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PBdr::~OOXMLContext_wordprocessingml_CT_PBdr()
 {
 }
@@ -25690,6 +26183,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Tabs::~OOXMLContext_wordprocessingml_CT_Tabs()
 {
 }
@@ -25777,6 +26271,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextboxTightWrap::~OOXMLContext_wordprocessingml_CT_TextboxTightWrap()
 {
 }
@@ -25849,6 +26344,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PPrBase::~OOXMLContext_wordprocessingml_CT_PPrBase()
 {
 }
@@ -26256,6 +26752,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PPr::~OOXMLContext_wordprocessingml_CT_PPr()
 {
 }
@@ -26390,6 +26887,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Control::~OOXMLContext_wordprocessingml_CT_Control()
 {
 }
@@ -26453,6 +26951,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Background::~OOXMLContext_wordprocessingml_CT_Background()
 {
 }
@@ -26542,6 +27041,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Rel::~OOXMLContext_wordprocessingml_CT_Rel()
 {
 }
@@ -26629,6 +27129,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PictureBase::~OOXMLContext_wordprocessingml_CT_PictureBase()
 {
 }
@@ -26692,6 +27193,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Object::~OOXMLContext_wordprocessingml_CT_Object()
 {
 }
@@ -26794,6 +27296,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Picture::~OOXMLContext_wordprocessingml_CT_Picture()
 {
 }
@@ -26902,6 +27405,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Drawing::~OOXMLContext_wordprocessingml_CT_Drawing()
 {
 }
@@ -26998,9 +27502,10 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_SimpleField*/
 OOXMLContext_wordprocessingml_CT_SimpleField::OOXMLContext_wordprocessingml_CT_SimpleField(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SimpleField::~OOXMLContext_wordprocessingml_CT_SimpleField()
 {
 }
@@ -27048,9 +27553,32 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_SimpleField::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_SimpleField::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_instr:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_fldLock:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_dirty:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -27059,7 +27587,30 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_SimpleField : fldData
+     case OOXML_ELEMENT_wordprocessingml_fldData:
+        nResult = NS_ooxml::LN_CT_SimpleField_fldData;
+        break;
+        // CT_SimpleField : instr
+     case OOXML_ATTRIBUTE_wordprocessingml_instr:
+        nResult = NS_ooxml::LN_CT_SimpleField_instr;
+        break;
+        // CT_SimpleField : fldLock
+     case OOXML_ATTRIBUTE_wordprocessingml_fldLock:
+        nResult = NS_ooxml::LN_CT_SimpleField_fldLock;
+        break;
+        // CT_SimpleField : dirty
+     case OOXML_ATTRIBUTE_wordprocessingml_dirty:
+        nResult = NS_ooxml::LN_CT_SimpleField_dirty;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -27081,13 +27632,38 @@
     
 void OOXMLContext_wordprocessingml_CT_SimpleField::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextStream::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_SimpleField::startAction()
 {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldStart, 1);
+    endCharacterGroup();
+      
+    startCharacterGroup();
+    {
+        OOXMLPropertySetEntryToString aHandler(NS_ooxml::LN_CT_SimpleField_instr);
+        getPropertySetAttrs()->resolve(aHandler);
+        const ::rtl::OUString & sText = aHandler.getString();
+        mrStream.utext(reinterpret_cast < const sal_uInt8 * > 
+                   (sText.getStr()), 
+                   sText.getLength());        
+    }
+    endCharacterGroup();
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldSep, 1);
+    endCharacterGroup();
+      
 }
 void OOXMLContext_wordprocessingml_CT_SimpleField::endAction()
 {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldEnd, 1);
+    endCharacterGroup();
+      
 }
 /* 
     class: OOXMLContext_wordprocessingml_CT_FFTextType*/
@@ -27095,6 +27671,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFTextType::~OOXMLContext_wordprocessingml_CT_FFTextType()
 {
 }
@@ -27167,6 +27744,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFName::~OOXMLContext_wordprocessingml_CT_FFName()
 {
 }
@@ -27236,9 +27814,10 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_FldChar*/
 OOXMLContext_wordprocessingml_CT_FldChar::OOXMLContext_wordprocessingml_CT_FldChar(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FldChar::~OOXMLContext_wordprocessingml_CT_FldChar()
 {
 }
@@ -27289,9 +27868,34 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_FldChar::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_FldChar::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_fldCharType:
+        {
+          OOXMLValue::Pointer_t pVal(new OOXMLValue_wordprocessingml_ST_FldCharType(rValue));
+          newProperty(nToken, pVal);
+
+          bResult = true;
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_fldLock:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_dirty:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -27300,7 +27904,38 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_FldChar : fldData
+     case OOXML_ELEMENT_wordprocessingml_fldData:
+        nResult = NS_ooxml::LN_CT_FldChar_fldData;
+        break;
+        // CT_FldChar : ffData
+     case OOXML_ELEMENT_wordprocessingml_ffData:
+        nResult = NS_ooxml::LN_CT_FldChar_ffData;
+        break;
+        // CT_FldChar : numberingChange
+     case OOXML_ELEMENT_wordprocessingml_numberingChange:
+        nResult = NS_ooxml::LN_CT_FldChar_numberingChange;
+        break;
+        // CT_FldChar : fldCharType
+     case OOXML_ATTRIBUTE_wordprocessingml_fldCharType:
+        nResult = NS_ooxml::LN_CT_FldChar_fldCharType;
+        break;
+        // CT_FldChar : fldLock
+     case OOXML_ATTRIBUTE_wordprocessingml_fldLock:
+        nResult = NS_ooxml::LN_CT_FldChar_fldLock;
+        break;
+        // CT_FldChar : dirty
+     case OOXML_ATTRIBUTE_wordprocessingml_dirty:
+        nResult = NS_ooxml::LN_CT_FldChar_dirty;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -27313,10 +27948,49 @@
     
 void OOXMLContext_wordprocessingml_CT_FldChar::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextStream::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_FldChar::startAction()
 {
+    {
+        OOXMLPropertySetEntryToInteger aHandler(NS_ooxml::LN_CT_FldChar_fldCharType);
+        getPropertySetAttrs()->resolve(aHandler);
+        
+        if (aHandler.getValue() == NS_ooxml::LN_Value_ST_FldCharType_begin)
+        {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldStart, 1);
+    endCharacterGroup();
+      
+        }
+    }
+    {
+        OOXMLPropertySetEntryToInteger aHandler(NS_ooxml::LN_CT_FldChar_fldCharType);
+        getPropertySetAttrs()->resolve(aHandler);
+        
+        if (aHandler.getValue() == NS_ooxml::LN_Value_ST_FldCharType_separate)
+        {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldSep, 1);
+    endCharacterGroup();
+      
+        }
+    }
+    {
+        OOXMLPropertySetEntryToInteger aHandler(NS_ooxml::LN_CT_FldChar_fldCharType);
+        getPropertySetAttrs()->resolve(aHandler);
+        
+        if (aHandler.getValue() == NS_ooxml::LN_Value_ST_FldCharType_end)
+        {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldEnd, 1);
+    endCharacterGroup();
+      
+        }
+    }
 }
 void OOXMLContext_wordprocessingml_CT_FldChar::endAction()
 {
@@ -27327,6 +28001,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Hyperlink::~OOXMLContext_wordprocessingml_CT_Hyperlink()
 {
 }
@@ -27408,6 +28083,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFData::~OOXMLContext_wordprocessingml_CT_FFData()
 {
 }
@@ -27538,6 +28214,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFHelpText::~OOXMLContext_wordprocessingml_CT_FFHelpText()
 {
 }
@@ -27614,6 +28291,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFStatusText::~OOXMLContext_wordprocessingml_CT_FFStatusText()
 {
 }
@@ -27690,6 +28368,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFCheckBox::~OOXMLContext_wordprocessingml_CT_FFCheckBox()
 {
 }
@@ -27784,6 +28463,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFDDList::~OOXMLContext_wordprocessingml_CT_FFDDList()
 {
 }
@@ -27872,6 +28552,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFTextInput::~OOXMLContext_wordprocessingml_CT_FFTextInput()
 {
 }
@@ -27966,6 +28647,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SectType::~OOXMLContext_wordprocessingml_CT_SectType()
 {
 }
@@ -28040,6 +28722,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PaperSource::~OOXMLContext_wordprocessingml_CT_PaperSource()
 {
 }
@@ -28103,6 +28786,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PageSz::~OOXMLContext_wordprocessingml_CT_PageSz()
 {
 }
@@ -28226,6 +28910,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PageMar::~OOXMLContext_wordprocessingml_CT_PageMar()
 {
 }
@@ -28385,6 +29070,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PageBorders::~OOXMLContext_wordprocessingml_CT_PageBorders()
 {
 }
@@ -28479,6 +29165,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LineNumber::~OOXMLContext_wordprocessingml_CT_LineNumber()
 {
 }
@@ -28602,6 +29289,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PageNumber::~OOXMLContext_wordprocessingml_CT_PageNumber()
 {
 }
@@ -28725,6 +29413,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Column::~OOXMLContext_wordprocessingml_CT_Column()
 {
 }
@@ -28824,6 +29513,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Columns::~OOXMLContext_wordprocessingml_CT_Columns()
 {
 }
@@ -28964,6 +29654,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_VerticalJc::~OOXMLContext_wordprocessingml_CT_VerticalJc()
 {
 }
@@ -29038,6 +29729,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocGrid::~OOXMLContext_wordprocessingml_CT_DocGrid()
 {
 }
@@ -29101,6 +29793,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_HdrFtrRef::~OOXMLContext_wordprocessingml_CT_HdrFtrRef()
 {
 }
@@ -29244,6 +29937,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_HdrFtrReferences::~OOXMLContext_wordprocessingml_EG_HdrFtrReferences()
 {
 }
@@ -29341,6 +30035,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_HdrFtr::~OOXMLContext_wordprocessingml_CT_HdrFtr()
 {
 }
@@ -29412,9 +30107,13 @@
 }
 void OOXMLContext_wordprocessingml_CT_HdrFtr::startAction()
 {
+    startSectionGroup();
 }
 void OOXMLContext_wordprocessingml_CT_HdrFtr::endAction()
 {
+    endCharacterGroup();
+    endParagraphGroup();
+    endSectionGroup();
 }
 /* 
     class: OOXMLContext_wordprocessingml_EG_SectPrContents*/
@@ -29422,6 +30121,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_SectPrContents::~OOXMLContext_wordprocessingml_EG_SectPrContents()
 {
 }
@@ -29689,6 +30389,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SectPrBase::~OOXMLContext_wordprocessingml_CT_SectPrBase()
 {
 }
@@ -29770,6 +30471,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SectPr::~OOXMLContext_wordprocessingml_CT_SectPr()
 {
 }
@@ -29883,10 +30585,10 @@
 }
 void OOXMLContext_wordprocessingml_CT_SectPr::startAction()
 {
+    setLastParagraphInSection();
 }
 void OOXMLContext_wordprocessingml_CT_SectPr::endAction()
 {
-    setLastParagraphInSection();
 }
 /* 
     class: OOXMLContext_wordprocessingml_CT_Br*/
@@ -29894,6 +30596,7 @@
 : OOXMLContextSingleElement(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Br::~OOXMLContext_wordprocessingml_CT_Br()
 {
 }
@@ -29993,6 +30696,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PTab::~OOXMLContext_wordprocessingml_CT_PTab()
 {
 }
@@ -30104,6 +30808,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Sym::~OOXMLContext_wordprocessingml_CT_Sym()
 {
 }
@@ -30201,6 +30906,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ProofErr::~OOXMLContext_wordprocessingml_CT_ProofErr()
 {
 }
@@ -30264,6 +30970,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Perm::~OOXMLContext_wordprocessingml_CT_Perm()
 {
 }
@@ -30327,6 +31034,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PermStart::~OOXMLContext_wordprocessingml_CT_PermStart()
 {
 }
@@ -30416,6 +31124,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Text::~OOXMLContext_wordprocessingml_CT_Text()
 {
 }
@@ -30441,9 +31150,20 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_Text::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_Text::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_www_w3_org_XML_1998_namespace_space:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -30452,7 +31172,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_Text : xml:space
+     case OOXML_ATTRIBUTE_www_w3_org_XML_1998_namespace_space:
+        nResult = NS_ooxml::LN_CT_Text_space;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -30482,6 +31213,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnRefChar::~OOXMLContext_wordprocessingml_CT_FtnEdnRefChar()
 {
 }
@@ -30547,6 +31279,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnSep::~OOXMLContext_wordprocessingml_CT_FtnEdnSep()
 {
 }
@@ -30612,6 +31345,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnCont::~OOXMLContext_wordprocessingml_CT_FtnEdnCont()
 {
 }
@@ -30669,7 +31403,7 @@
 void OOXMLContext_wordprocessingml_CT_FtnEdnCont::endAction()
 {
     if (isForwardEvents())        
-        mrStream.utext(sFtnEdnCont, 1);
+        mrStream.text(sFtnEdnCont, 1);
 }
 /* 
     class: OOXMLContext_wordprocessingml_CT_PgNum*/
@@ -30677,6 +31411,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PgNum::~OOXMLContext_wordprocessingml_CT_PgNum()
 {
 }
@@ -30742,6 +31477,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Cr::~OOXMLContext_wordprocessingml_CT_Cr()
 {
 }
@@ -30798,6 +31534,8 @@
 }
 void OOXMLContext_wordprocessingml_CT_Cr::endAction()
 {
+    if (! mpParserState->isInCharacterGroup())
+       startCharacterGroup();
     if (isForwardEvents())        
         mrStream.utext(sCR, 1);
 }
@@ -30807,6 +31545,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Tab::~OOXMLContext_wordprocessingml_CT_Tab()
 {
 }
@@ -30872,6 +31611,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RunInnerContent::~OOXMLContext_wordprocessingml_EG_RunInnerContent()
 {
 }
@@ -31134,6 +31874,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_R::~OOXMLContext_wordprocessingml_CT_R()
 {
 }
@@ -31177,9 +31918,32 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_R::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_R::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidRPr:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidDel:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidR:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -31234,6 +31998,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Fonts::~OOXMLContext_wordprocessingml_CT_Fonts()
 {
 }
@@ -31417,6 +32182,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RPrBase::~OOXMLContext_wordprocessingml_EG_RPrBase()
 {
 }
@@ -31884,6 +32650,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RPrContent::~OOXMLContext_wordprocessingml_EG_RPrContent()
 {
 }
@@ -31978,6 +32745,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RPr::~OOXMLContext_wordprocessingml_CT_RPr()
 {
 }
@@ -32059,6 +32827,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RPr::~OOXMLContext_wordprocessingml_EG_RPr()
 {
 }
@@ -32135,6 +32904,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RPrMath::~OOXMLContext_wordprocessingml_EG_RPrMath()
 {
 }
@@ -32235,6 +33005,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RPrOriginal::~OOXMLContext_wordprocessingml_CT_RPrOriginal()
 {
 }
@@ -32316,6 +33087,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ParaRPrOriginal::~OOXMLContext_wordprocessingml_CT_ParaRPrOriginal()
 {
 }
@@ -32415,6 +33187,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ParaRPr::~OOXMLContext_wordprocessingml_CT_ParaRPr()
 {
 }
@@ -32538,6 +33311,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ParaRPrTrackChanges::~OOXMLContext_wordprocessingml_EG_ParaRPrTrackChanges()
 {
 }
@@ -32632,6 +33406,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AltChunk::~OOXMLContext_wordprocessingml_CT_AltChunk()
 {
 }
@@ -32708,6 +33483,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AltChunkPr::~OOXMLContext_wordprocessingml_CT_AltChunkPr()
 {
 }
@@ -32784,6 +33560,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RubyAlign::~OOXMLContext_wordprocessingml_CT_RubyAlign()
 {
 }
@@ -32856,6 +33633,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RubyPr::~OOXMLContext_wordprocessingml_CT_RubyPr()
 {
 }
@@ -32962,6 +33740,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RubyContent::~OOXMLContext_wordprocessingml_EG_RubyContent()
 {
 }
@@ -33056,6 +33835,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RubyContent::~OOXMLContext_wordprocessingml_CT_RubyContent()
 {
 }
@@ -33137,6 +33917,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Ruby::~OOXMLContext_wordprocessingml_CT_Ruby()
 {
 }
@@ -33225,6 +34006,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Lock::~OOXMLContext_wordprocessingml_CT_Lock()
 {
 }
@@ -33297,6 +34079,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtListItem::~OOXMLContext_wordprocessingml_CT_SdtListItem()
 {
 }
@@ -33360,6 +34143,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtDateMappingType::~OOXMLContext_wordprocessingml_CT_SdtDateMappingType()
 {
 }
@@ -33432,6 +34216,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CalendarType::~OOXMLContext_wordprocessingml_CT_CalendarType()
 {
 }
@@ -33504,6 +34289,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtDate::~OOXMLContext_wordprocessingml_CT_SdtDate()
 {
 }
@@ -33598,6 +34384,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtComboBox::~OOXMLContext_wordprocessingml_CT_SdtComboBox()
 {
 }
@@ -33674,6 +34461,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtDocPart::~OOXMLContext_wordprocessingml_CT_SdtDocPart()
 {
 }
@@ -33762,6 +34550,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtDropDownList::~OOXMLContext_wordprocessingml_CT_SdtDropDownList()
 {
 }
@@ -33838,6 +34627,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Placeholder::~OOXMLContext_wordprocessingml_CT_Placeholder()
 {
 }
@@ -33914,6 +34704,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtText::~OOXMLContext_wordprocessingml_CT_SdtText()
 {
 }
@@ -33977,6 +34768,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DataBinding::~OOXMLContext_wordprocessingml_CT_DataBinding()
 {
 }
@@ -34040,6 +34832,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtPr::~OOXMLContext_wordprocessingml_CT_SdtPr()
 {
 }
@@ -34236,6 +35029,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtEndPr::~OOXMLContext_wordprocessingml_CT_SdtEndPr()
 {
 }
@@ -34312,6 +35106,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ContentRunContent::~OOXMLContext_wordprocessingml_EG_ContentRunContent()
 {
 }
@@ -34424,6 +35219,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtContentRun::~OOXMLContext_wordprocessingml_CT_SdtContentRun()
 {
 }
@@ -34505,6 +35301,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ContentBlockContent::~OOXMLContext_wordprocessingml_EG_ContentBlockContent()
 {
 }
@@ -34617,6 +35414,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtContentBlock::~OOXMLContext_wordprocessingml_CT_SdtContentBlock()
 {
 }
@@ -34698,6 +35496,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ContentRowContent::~OOXMLContext_wordprocessingml_EG_ContentRowContent()
 {
 }
@@ -34804,6 +35603,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtContentRow::~OOXMLContext_wordprocessingml_CT_SdtContentRow()
 {
 }
@@ -34885,6 +35685,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ContentCellContent::~OOXMLContext_wordprocessingml_EG_ContentCellContent()
 {
 }
@@ -34991,6 +35792,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtContentCell::~OOXMLContext_wordprocessingml_CT_SdtContentCell()
 {
 }
@@ -35072,6 +35874,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtBlock::~OOXMLContext_wordprocessingml_CT_SdtBlock()
 {
 }
@@ -35160,6 +35963,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtRun::~OOXMLContext_wordprocessingml_CT_SdtRun()
 {
 }
@@ -35248,6 +36052,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtCell::~OOXMLContext_wordprocessingml_CT_SdtCell()
 {
 }
@@ -35336,6 +36141,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtRow::~OOXMLContext_wordprocessingml_CT_SdtRow()
 {
 }
@@ -35424,6 +36230,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Attr::~OOXMLContext_wordprocessingml_CT_Attr()
 {
 }
@@ -35504,6 +36311,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlRun::~OOXMLContext_wordprocessingml_CT_CustomXmlRun()
 {
 }
@@ -35598,6 +36406,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SmartTagRun::~OOXMLContext_wordprocessingml_CT_SmartTagRun()
 {
 }
@@ -35692,6 +36501,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlBlock::~OOXMLContext_wordprocessingml_CT_CustomXmlBlock()
 {
 }
@@ -35786,6 +36596,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlPr::~OOXMLContext_wordprocessingml_CT_CustomXmlPr()
 {
 }
@@ -35868,6 +36679,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlRow::~OOXMLContext_wordprocessingml_CT_CustomXmlRow()
 {
 }
@@ -35962,6 +36774,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlCell::~OOXMLContext_wordprocessingml_CT_CustomXmlCell()
 {
 }
@@ -36056,6 +36869,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SmartTagPr::~OOXMLContext_wordprocessingml_CT_SmartTagPr()
 {
 }
@@ -36132,6 +36946,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_PContent::~OOXMLContext_wordprocessingml_EG_PContent()
 {
 }
@@ -36238,6 +37053,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_P::~OOXMLContext_wordprocessingml_CT_P()
 {
 }
@@ -36285,9 +37101,44 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_P::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_P::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidRPr:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidR:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidDel:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidP:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidRDefault:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -36327,6 +37178,8 @@
 }
 void OOXMLContext_wordprocessingml_CT_P::endAction()
 {
+    if (! mpParserState->isInCharacterGroup())
+       startCharacterGroup();
     if (isForwardEvents())        
         mrStream.utext(sCR, 1);
 }
@@ -36336,6 +37189,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Height::~OOXMLContext_wordprocessingml_CT_Height()
 {
 }
@@ -36431,6 +37285,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblWidth::~OOXMLContext_wordprocessingml_CT_TblWidth()
 {
 }
@@ -36530,6 +37385,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblGridCol::~OOXMLContext_wordprocessingml_CT_TblGridCol()
 {
 }
@@ -36602,6 +37458,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblGridBase::~OOXMLContext_wordprocessingml_CT_TblGridBase()
 {
 }
@@ -36689,6 +37546,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblGrid::~OOXMLContext_wordprocessingml_CT_TblGrid()
 {
 }
@@ -36803,6 +37661,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcBorders::~OOXMLContext_wordprocessingml_CT_TcBorders()
 {
 }
@@ -36960,6 +37819,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcMar::~OOXMLContext_wordprocessingml_CT_TcMar()
 {
 }
@@ -37077,6 +37937,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_VMerge::~OOXMLContext_wordprocessingml_CT_VMerge()
 {
 }
@@ -37151,6 +38012,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_HMerge::~OOXMLContext_wordprocessingml_CT_HMerge()
 {
 }
@@ -37225,6 +38087,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcPrBase::~OOXMLContext_wordprocessingml_CT_TcPrBase()
 {
 }
@@ -37432,6 +38295,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcPr::~OOXMLContext_wordprocessingml_CT_TcPr()
 {
 }
@@ -37535,6 +38399,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcPrInner::~OOXMLContext_wordprocessingml_CT_TcPrInner()
 {
 }
@@ -37643,6 +38508,7 @@
 : OOXMLContextTextTableCell(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Tc::~OOXMLContext_wordprocessingml_CT_Tc()
 {
 }
@@ -37727,7 +38593,6 @@
 }
 void OOXMLContext_wordprocessingml_CT_Tc::startAction()
 {
-    startParagraphGroup();
     startCell();
 }
 void OOXMLContext_wordprocessingml_CT_Tc::endAction()
@@ -37741,6 +38606,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Cnf::~OOXMLContext_wordprocessingml_CT_Cnf()
 {
 }
@@ -37813,6 +38679,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrPrBase::~OOXMLContext_wordprocessingml_CT_TrPrBase()
 {
 }
@@ -38010,6 +38877,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrPr::~OOXMLContext_wordprocessingml_CT_TrPr()
 {
 }
@@ -38125,6 +38993,7 @@
 : OOXMLContextTextTableRow(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Row::~OOXMLContext_wordprocessingml_CT_Row()
 {
 }
@@ -38225,6 +39094,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblLayoutType::~OOXMLContext_wordprocessingml_CT_TblLayoutType()
 {
 }
@@ -38288,6 +39158,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblOverlap::~OOXMLContext_wordprocessingml_CT_TblOverlap()
 {
 }
@@ -38362,6 +39233,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPPr::~OOXMLContext_wordprocessingml_CT_TblPPr()
 {
 }
@@ -38425,6 +39297,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblCellMar::~OOXMLContext_wordprocessingml_CT_TblCellMar()
 {
 }
@@ -38519,6 +39392,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblBorders::~OOXMLContext_wordprocessingml_CT_TblBorders()
 {
 }
@@ -38656,6 +39530,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrBase::~OOXMLContext_wordprocessingml_CT_TblPrBase()
 {
 }
@@ -38883,6 +39758,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPr::~OOXMLContext_wordprocessingml_CT_TblPr()
 {
 }
@@ -38997,6 +39873,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrExBase::~OOXMLContext_wordprocessingml_CT_TblPrExBase()
 {
 }
@@ -39121,6 +39998,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrEx::~OOXMLContext_wordprocessingml_CT_TblPrEx()
 {
 }
@@ -39223,6 +40101,7 @@
 : OOXMLContextTextTable(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Tbl::~OOXMLContext_wordprocessingml_CT_Tbl()
 {
 }
@@ -39343,6 +40222,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnPos::~OOXMLContext_wordprocessingml_CT_FtnPos()
 {
 }
@@ -39417,6 +40297,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_EdnPos::~OOXMLContext_wordprocessingml_CT_EdnPos()
 {
 }
@@ -39491,6 +40372,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumFmt::~OOXMLContext_wordprocessingml_CT_NumFmt()
 {
 }
@@ -39565,6 +40447,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumRestart::~OOXMLContext_wordprocessingml_CT_NumRestart()
 {
 }
@@ -39639,6 +40522,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnRef::~OOXMLContext_wordprocessingml_CT_FtnEdnRef()
 {
 }
@@ -39751,6 +40635,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnSepRef::~OOXMLContext_wordprocessingml_CT_FtnEdnSepRef()
 {
 }
@@ -39814,6 +40699,7 @@
 : OOXMLContextXNote(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdn::~OOXMLContext_wordprocessingml_CT_FtnEdn()
 {
 }
@@ -39915,6 +40801,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CommentRef::~OOXMLContext_wordprocessingml_CT_CommentRef()
 {
 }
@@ -40010,6 +40897,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_FtnEdnNumProps::~OOXMLContext_wordprocessingml_EG_FtnEdnNumProps()
 {
 }
@@ -40107,6 +40995,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnProps::~OOXMLContext_wordprocessingml_CT_FtnProps()
 {
 }
@@ -40222,6 +41111,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_EdnProps::~OOXMLContext_wordprocessingml_CT_EdnProps()
 {
 }
@@ -40337,6 +41227,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnDocProps::~OOXMLContext_wordprocessingml_CT_FtnDocProps()
 {
 }
@@ -40440,6 +41331,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_EdnDocProps::~OOXMLContext_wordprocessingml_CT_EdnDocProps()
 {
 }
@@ -40543,6 +41435,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RecipientData::~OOXMLContext_wordprocessingml_CT_RecipientData()
 {
 }
@@ -40625,6 +41518,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Recipients::~OOXMLContext_wordprocessingml_CT_Recipients()
 {
 }
@@ -40701,6 +41595,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_recipients::~OOXMLContext_wordprocessingml_recipients()
 {
 }
@@ -40777,6 +41672,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_OdsoFieldMapData::~OOXMLContext_wordprocessingml_CT_OdsoFieldMapData()
 {
 }
@@ -40883,6 +41779,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeSourceType::~OOXMLContext_wordprocessingml_CT_MailMergeSourceType()
 {
 }
@@ -40955,6 +41852,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Odso::~OOXMLContext_wordprocessingml_CT_Odso()
 {
 }
@@ -41073,6 +41971,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMerge::~OOXMLContext_wordprocessingml_CT_MailMerge()
 {
 }
@@ -41239,6 +42138,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TargetScreenSz::~OOXMLContext_wordprocessingml_CT_TargetScreenSz()
 {
 }
@@ -41311,6 +42211,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Compat::~OOXMLContext_wordprocessingml_CT_Compat()
 {
 }
@@ -41771,6 +42672,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocVar::~OOXMLContext_wordprocessingml_CT_DocVar()
 {
 }
@@ -41847,6 +42749,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocVars::~OOXMLContext_wordprocessingml_CT_DocVars()
 {
 }
@@ -41923,6 +42826,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocRsids::~OOXMLContext_wordprocessingml_CT_DocRsids()
 {
 }
@@ -42005,6 +42909,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CharacterSpacing::~OOXMLContext_wordprocessingml_CT_CharacterSpacing()
 {
 }
@@ -42077,6 +42982,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SaveThroughXslt::~OOXMLContext_wordprocessingml_CT_SaveThroughXslt()
 {
 }
@@ -42140,6 +43046,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RPrDefault::~OOXMLContext_wordprocessingml_CT_RPrDefault()
 {
 }
@@ -42227,6 +43134,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PPrDefault::~OOXMLContext_wordprocessingml_CT_PPrDefault()
 {
 }
@@ -42314,6 +43222,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocDefaults::~OOXMLContext_wordprocessingml_CT_DocDefaults()
 {
 }
@@ -42411,6 +43320,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ColorSchemeMapping::~OOXMLContext_wordprocessingml_CT_ColorSchemeMapping()
 {
 }
@@ -42474,6 +43384,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ReadingModeInkLockDown::~OOXMLContext_wordprocessingml_CT_ReadingModeInkLockDown()
 {
 }
@@ -42537,6 +43448,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_WriteProtection::~OOXMLContext_wordprocessingml_CT_WriteProtection()
 {
 }
@@ -42600,6 +43512,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Settings::~OOXMLContext_wordprocessingml_CT_Settings()
 {
 }
@@ -43270,6 +44183,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_WebSettings::~OOXMLContext_wordprocessingml_CT_WebSettings()
 {
 }
@@ -43418,6 +44332,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FrameScrollbar::~OOXMLContext_wordprocessingml_CT_FrameScrollbar()
 {
 }
@@ -43490,6 +44405,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Frame::~OOXMLContext_wordprocessingml_CT_Frame()
 {
 }
@@ -43608,6 +44524,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FrameLayout::~OOXMLContext_wordprocessingml_CT_FrameLayout()
 {
 }
@@ -43680,6 +44597,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FramesetSplitbar::~OOXMLContext_wordprocessingml_CT_FramesetSplitbar()
 {
 }
@@ -43774,6 +44692,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Frameset::~OOXMLContext_wordprocessingml_CT_Frameset()
 {
 }
@@ -43874,6 +44793,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumPicBullet::~OOXMLContext_wordprocessingml_CT_NumPicBullet()
 {
 }
@@ -43950,6 +44870,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LevelSuffix::~OOXMLContext_wordprocessingml_CT_LevelSuffix()
 {
 }
@@ -44022,6 +44943,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LevelText::~OOXMLContext_wordprocessingml_CT_LevelText()
 {
 }
@@ -44117,6 +45039,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LvlLegacy::~OOXMLContext_wordprocessingml_CT_LvlLegacy()
 {
 }
@@ -44222,6 +45145,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Lvl::~OOXMLContext_wordprocessingml_CT_Lvl()
 {
 }
@@ -44454,6 +45378,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MultiLevelType::~OOXMLContext_wordprocessingml_CT_MultiLevelType()
 {
 }
@@ -44528,6 +45453,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AbstractNum::~OOXMLContext_wordprocessingml_CT_AbstractNum()
 {
 }
@@ -44690,6 +45616,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumLvl::~OOXMLContext_wordprocessingml_CT_NumLvl()
 {
 }
@@ -44802,6 +45729,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Num::~OOXMLContext_wordprocessingml_CT_Num()
 {
 }
@@ -44914,6 +45842,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Numbering::~OOXMLContext_wordprocessingml_CT_Numbering()
 {
 }
@@ -45031,6 +45960,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblStylePr::~OOXMLContext_wordprocessingml_CT_TblStylePr()
 {
 }
@@ -45131,6 +46061,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Style::~OOXMLContext_wordprocessingml_CT_Style()
 {
 }
@@ -45481,6 +46412,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LsdException::~OOXMLContext_wordprocessingml_CT_LsdException()
 {
 }
@@ -45544,6 +46476,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LatentStyles::~OOXMLContext_wordprocessingml_CT_LatentStyles()
 {
 }
@@ -45620,6 +46553,7 @@
 : OOXMLContextTable(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Styles::~OOXMLContext_wordprocessingml_CT_Styles()
 {
 }
@@ -45709,6 +46643,7 @@
 : OOXMLContextHexValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Panose::~OOXMLContext_wordprocessingml_CT_Panose()
 {
 }
@@ -45781,6 +46716,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FontFamily::~OOXMLContext_wordprocessingml_CT_FontFamily()
 {
 }
@@ -45855,6 +46791,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Pitch::~OOXMLContext_wordprocessingml_CT_Pitch()
 {
 }
@@ -45929,6 +46866,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FontSig::~OOXMLContext_wordprocessingml_CT_FontSig()
 {
 }
@@ -46076,6 +47014,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FontRel::~OOXMLContext_wordprocessingml_CT_FontRel()
 {
 }
@@ -46198,6 +47137,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Font::~OOXMLContext_wordprocessingml_CT_Font()
 {
 }
@@ -46400,6 +47340,7 @@
 : OOXMLContextTable(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FontsList::~OOXMLContext_wordprocessingml_CT_FontsList()
 {
 }
@@ -46477,6 +47418,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DivBdr::~OOXMLContext_wordprocessingml_CT_DivBdr()
 {
 }
@@ -46571,6 +47513,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Div::~OOXMLContext_wordprocessingml_CT_Div()
 {
 }
@@ -46689,6 +47632,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Divs::~OOXMLContext_wordprocessingml_CT_Divs()
 {
 }
@@ -46765,6 +47709,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TxbxContent::~OOXMLContext_wordprocessingml_CT_TxbxContent()
 {
 }
@@ -46846,6 +47791,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_txbxContent::~OOXMLContext_wordprocessingml_txbxContent()
 {
 }
@@ -46922,6 +47868,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_MathContent::~OOXMLContext_wordprocessingml_EG_MathContent()
 {
 }
@@ -47021,6 +47968,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_BlockLevelChunkElts::~OOXMLContext_wordprocessingml_EG_BlockLevelChunkElts()
 {
 }
@@ -47102,6 +48050,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_BlockLevelElts::~OOXMLContext_wordprocessingml_EG_BlockLevelElts()
 {
 }
@@ -47196,6 +48145,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RunLevelElts::~OOXMLContext_wordprocessingml_EG_RunLevelElts()
 {
 }
@@ -47344,6 +48294,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Body::~OOXMLContext_wordprocessingml_CT_Body()
 {
 }
@@ -47442,6 +48393,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ShapeDefaults::~OOXMLContext_wordprocessingml_CT_ShapeDefaults()
 {
 }
@@ -47505,6 +48457,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Comments::~OOXMLContext_wordprocessingml_CT_Comments()
 {
 }
@@ -47581,6 +48534,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_comments::~OOXMLContext_wordprocessingml_comments()
 {
 }
@@ -47657,6 +48611,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Footnotes::~OOXMLContext_wordprocessingml_CT_Footnotes()
 {
 }
@@ -47733,6 +48688,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_footnotes::~OOXMLContext_wordprocessingml_footnotes()
 {
 }
@@ -47809,6 +48765,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Endnotes::~OOXMLContext_wordprocessingml_CT_Endnotes()
 {
 }
@@ -47885,6 +48842,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_endnotes::~OOXMLContext_wordprocessingml_endnotes()
 {
 }
@@ -47961,6 +48919,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_hdr::~OOXMLContext_wordprocessingml_hdr()
 {
 }
@@ -48037,6 +48996,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_ftr::~OOXMLContext_wordprocessingml_ftr()
 {
 }
@@ -48113,6 +49073,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SmartTagType::~OOXMLContext_wordprocessingml_CT_SmartTagType()
 {
 }
@@ -48176,6 +49137,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartBehavior::~OOXMLContext_wordprocessingml_CT_DocPartBehavior()
 {
 }
@@ -48248,6 +49210,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartBehaviors::~OOXMLContext_wordprocessingml_CT_DocPartBehaviors()
 {
 }
@@ -48324,6 +49287,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartType::~OOXMLContext_wordprocessingml_CT_DocPartType()
 {
 }
@@ -48396,6 +49360,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartTypes::~OOXMLContext_wordprocessingml_CT_DocPartTypes()
 {
 }
@@ -48472,6 +49437,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartGallery::~OOXMLContext_wordprocessingml_CT_DocPartGallery()
 {
 }
@@ -48544,6 +49510,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartCategory::~OOXMLContext_wordprocessingml_CT_DocPartCategory()
 {
 }
@@ -48626,6 +49593,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartName::~OOXMLContext_wordprocessingml_CT_DocPartName()
 {
 }
@@ -48702,6 +49670,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartPr::~OOXMLContext_wordprocessingml_CT_DocPartPr()
 {
 }
@@ -48814,6 +49783,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPart::~OOXMLContext_wordprocessingml_CT_DocPart()
 {
 }
@@ -48896,6 +49866,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocParts::~OOXMLContext_wordprocessingml_CT_DocParts()
 {
 }
@@ -48972,6 +49943,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_settings::~OOXMLContext_wordprocessingml_settings()
 {
 }
@@ -49048,6 +50020,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_webSettings::~OOXMLContext_wordprocessingml_webSettings()
 {
 }
@@ -49124,6 +50097,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_fonts::~OOXMLContext_wordprocessingml_fonts()
 {
 }
@@ -49200,6 +50174,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_numbering::~OOXMLContext_wordprocessingml_numbering()
 {
 }
@@ -49276,6 +50251,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_styles::~OOXMLContext_wordprocessingml_styles()
 {
 }
@@ -49352,6 +50328,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Caption::~OOXMLContext_wordprocessingml_CT_Caption()
 {
 }
@@ -49415,6 +50392,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AutoCaption::~OOXMLContext_wordprocessingml_CT_AutoCaption()
 {
 }
@@ -49478,6 +50456,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AutoCaptions::~OOXMLContext_wordprocessingml_CT_AutoCaptions()
 {
 }
@@ -49554,6 +50533,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Captions::~OOXMLContext_wordprocessingml_CT_Captions()
 {
 }
@@ -49636,6 +50616,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocumentBase::~OOXMLContext_wordprocessingml_CT_DocumentBase()
 {
 }
@@ -49712,6 +50693,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Document::~OOXMLContext_wordprocessingml_CT_Document()
 {
 }
@@ -49814,6 +50796,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_GlossaryDocument::~OOXMLContext_wordprocessingml_CT_GlossaryDocument()
 {
 }
@@ -49916,6 +50899,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_document::~OOXMLContext_wordprocessingml_document()
 {
 }
@@ -49992,6 +50976,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_glossaryDocument::~OOXMLContext_wordprocessingml_glossaryDocument()
 {
 }
@@ -50064,3 +51049,5 @@
 }
       
 }
+/// @endcond GENERATED
+
--- writerfilter/source/ooxml/OOXMLresources.hxx	27 Jun 2007 09:19:54 -0000	1.71
+++ writerfilter/source/ooxml/OOXMLresources.hxx	16 Jul 2007 10:57:20 -0000	1.71.4.3
@@ -53,6 +53,8 @@
 using namespace ::std;
 using namespace ::com::sun::star;
 using namespace doctok;
+
+/// @cond GENERATED
       
       
 class OOXMLContext_drawingml_CT_AlphaBiLevelEffect : public OOXMLContext
@@ -6361,7 +6363,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_TrackChangeRange"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_MarkupRange : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_MarkupRange : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingml_CT_MarkupRange(const OOXMLContext & rContext);
@@ -6381,7 +6383,27 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_MarkupRange"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_BookmarkRange : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark : public OOXMLContextProperties
+{
+public:
+    OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark"; }
+};
+    
+class OOXMLContext_wordprocessingml_CT_BookmarkRange : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingml_CT_BookmarkRange(const OOXMLContext & rContext);
@@ -6401,7 +6423,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_BookmarkRange"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_Bookmark : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_Bookmark : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingml_CT_Bookmark(const OOXMLContext & rContext);
@@ -6988,7 +7010,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_Drawing"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_SimpleField : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_SimpleField : public OOXMLContextStream
 {
 public:
     OOXMLContext_wordprocessingml_CT_SimpleField(const OOXMLContext & rContext);
@@ -7008,10 +7030,10 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_SimpleField"; }
 };
     
-class OOXMLValue_wordprocessingml_ST_FldCharType : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_FldCharType : public OOXMLListValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_FldCharType(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_FldCharType(const rtl::OUString & rValue);
      virtual ~OOXMLValue_wordprocessingml_ST_FldCharType() {}
 };
 
@@ -7090,7 +7112,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_FFName"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_FldChar : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_FldChar : public OOXMLContextStream
 {
 public:
     OOXMLContext_wordprocessingml_CT_FldChar(const OOXMLContext & rContext);
@@ -13089,5 +13111,6 @@
 extern rtl::OUString OOXMLValueString_above;
 extern rtl::OUString OOXMLValueString_below;
       
+/// @endcond
 }
 #endif //INCLUDED_OOXML_RESOURCES_HXX
--- writerfilter/source/ooxml/OOXMLvalues.cxx	25 May 2007 09:25:47 -0000	1.31
+++ writerfilter/source/ooxml/OOXMLvalues.cxx	12 Jul 2007 08:22:20 -0000	1.31.4.1
@@ -3312,6 +3312,26 @@
     class: OOXMLValue_wordprocessingml_ST_FldCharType
 */
     
+OOXMLValue_wordprocessingml_ST_FldCharType::OOXMLValue_wordprocessingml_ST_FldCharType(const rtl::OUString & rValue)
+: OOXMLListValue()
+{
+  if (rValue.compareTo(OOXMLValueString_begin) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_FldCharType_begin; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_separate) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_FldCharType_separate; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_end) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_FldCharType_end; 
+        return; 
+    }
+}
+
 /*
     class: OOXMLValue_wordprocessingml_ST_InfoTextType
 */
--- writerfilter/source/ooxml/TokenMap.cxx	11 Apr 2007 10:49:11 -0000	1.3
+++ writerfilter/source/ooxml/TokenMap.cxx	16 Jul 2007 08:18:05 -0000	1.3.4.2
@@ -38,6 +38,8 @@
 #include "gperfelements.hxx"
 #include "gperfattributes.hxx"
 
+#define DEBUG_TOKENMAP
+
 namespace ooxml 
 {
 using namespace ::std;
@@ -64,10 +66,12 @@
 
             if (pToken != NULL)
                 nResult = pToken->nToken;
+#ifdef DEBUG_TOKENMAP
             else
                 clog << "Token not found:" 
                      << OUStringToOString
                     (rTokenString, RTL_TEXTENCODING_ASCII_US).getStr() << endl;
+#endif
         }
         break;
     case TokenMap::ATTRIBUTE:
@@ -78,10 +82,12 @@
 
             if (pToken != NULL)
                 nResult = pToken->nToken;
+#ifdef DEBUG_TOKENMAP
             else
                 clog << "Token not found:" 
                      << OUStringToOString
                     (rTokenString, RTL_TEXTENCODING_ASCII_US).getStr() << endl;
+#endif
         }
         break;
     default:
--- writerfilter/source/ooxml/makefile.mk	15 Jun 2007 09:26:53 -0000	1.6
+++ writerfilter/source/ooxml/makefile.mk	2 Jul 2007 17:16:56 -0000	1.6.4.1
@@ -98,6 +98,7 @@
 
 OOXMLMODEL=model.xml
 OOXMLPREPROCESSXSL=modelpreprocess.xsl
+OOXMLRESOURCESTOOLSXSL=resourcestools.xsl
 OOXMLRESORUCETOKENSXSL=resourcestokens.xsl
 OOXMLRESOURCESXSL=resources.xsl
 OOXMLRESOURCESIMPLXSL=resourcesimpl.xsl
@@ -123,7 +124,7 @@
 XALANJAR=$(SOLARVER)$/$(INPATH)$/bin$(UPDMINOREXT)$/xalan.jar
 XALAN=$(JAVA) -jar $(XALANJAR)
 
-$(MODELPROCESSED): $(OOXMLPREPROCESSXSL) $(OOXMLMODEL)
+$(MODELPROCESSED): $(OOXMLPREPROCESSXSL) $(OOXMLMODEL) $(OOXMLRESOURCESTOOLSXSL)
 	$(XALAN) -xsl $(OOXMLPREPROCESSXSL) -in $(OOXMLMODEL) > $(MODELPROCESSED)
 
 $(OOXMLTOKENSHXX): $(OOXMLRESORUCETOKENSXSL) $(MODELPROCESSED)
--- writerfilter/source/ooxml/model.xml	27 Jun 2007 13:16:27 -0000	1.64
+++ writerfilter/source/ooxml/model.xml	16 Jul 2007 21:01:37 -0000	1.64.4.5
@@ -7,6 +7,7 @@
   <namespace-alias name="http://schemas.openxmlformats.org/drawingml/2006/picture" alias="picture"/>
   <namespace-alias name="http://schemas.openxmlformats.org/wordprocessingml/2006/main" alias="wordprocessingml"/>
   <namespace-alias name="http://schemas.openxmlformats.org/officeDocument/2006/relationships" alias="relationships"/>
+  <namespace-alias name="http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme" alias="theme"/>
   <namespace name="a" url="http://schemas.openxmlformats.org/drawingml/2006/main">
     <start name="blip"/>
     <grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2006/xpath-functions" ns="http://schemas.openxmlformats.org/drawingml/2006/main" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
@@ -4395,7 +4396,9 @@
       <define name="CT_Text">
         <ref name="ST_String"/>
         <optional>
-          <attribute name="xml:space"/>
+          <attribute name="xml:space">
+            <text/>
+          </attribute>
         </optional>
       </define>
       <define name="CT_R">
@@ -7484,8 +7487,15 @@
           </attribute>
         </optional>
       </define>
-      <define name="CT_BookmarkRange">
+      <define name="CT_MarkupRangeBookmark">
+        <attribute name="id">
+          <text/>
+          <xs:documentation>Annotation Identifier</xs:documentation>
+        </attribute>
         <ref name="CT_MarkupRange"/>
+      </define>
+      <define name="CT_BookmarkRange">
+        <ref name="CT_MarkupRangeBookmark"/>
         <optional>
           <attribute name="colFirst">
             <text/>
@@ -7632,7 +7642,7 @@
             <ref name="CT_Bookmark"/>
           </element>
           <element name="bookmarkEnd">
-            <ref name="CT_MarkupRange"/>
+            <ref name="CT_MarkupRangeBookmark"/>
           </element>
           <element name="moveFromRangeStart">
             <ref name="CT_MoveBookmark"/>
@@ -8179,7 +8189,7 @@
           </optional>
         </choice>
         <attribute name="fldCharType">
-          <text/>
+          <ref name="ST_FldCharType"/>
           <xs:documentation>Field Character Type</xs:documentation>
         </attribute>
         <attribute name="fldLock">
@@ -9220,7 +9230,9 @@
       <define name="CT_Text">
         <ref name="ST_String"/>
         <optional>
-          <attribute name="xml:space"/>
+          <attribute name="xml:space">
+            <text/>
+          </attribute>
         </optional>
       </define>
       <define name="CT_FtnEdnRefChar">
@@ -14590,6 +14602,21 @@
       <attribute name="author" tokenid="ooxml:CT_TrackChange_author"/>
       <attribute name="date" tokenid="ooxml:CT_TrackChange_date"/>
     </resource>
+    <resource name="CT_MarkupRange" resource="Properties">
+      <attribute name="displacedByCustomXml" tokenid="ooxml:CT_MarkupRange_displacedByCustomXml"/>
+    </resource>
+    <resource name="CT_MarkupRangeBookmark" resource="Properties">
+      <attribute name="id" tokenid="rtf:IBKL"/>
+    </resource>
+    <resource name="CT_BookmarkRange" resource="Properties">
+      <type name="Bookmark"/>
+      <attribute name="colFirst" tokenid="ooxml:CT_BookmarkRange_colFirst"/>
+      <attribute name="colLast" tokenid="ooxml:CT_BookmarkRange_colLast"/>
+    </resource>
+    <resource name="CT_Bookmark" resource="Properties">
+      <type name="Bookmark"/>
+      <attribute name="name" tokenid="rtf:BOOKMARKNAME"/>
+    </resource>
     <resource name="CT_Comment" resource="XNote">
       <attribute name="id" action="checkId"/>
       <attribute name="initials" tokenid="ooxml:CT_Comment_initials"/>
@@ -14661,8 +14688,42 @@
     <resource xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" name="CT_Rel" resource="Properties">
       <attribute name="r:id" tokenid="ooxml:CT_Rel_id"/>
     </resource>
+    <resource name="CT_SimpleField" resource="Stream">
+      <sprm name="fldData" tokenid="ooxml:CT_SimpleField_fldData"/>
+      <attribute name="instr" tokenid="ooxml:CT_SimpleField_instr"/>
+      <attribute name="fldLock" tokenid="ooxml:CT_SimpleField_fldLock"/>
+      <attribute name="dirty" tokenid="ooxml:CT_SimpleField_dirty"/>
+      <action name="start" action="fieldstart"/>
+      <action name="start" action="startCharacterGroup"/>
+      <action name="start" action="printproperty" tokenid="ooxml:CT_SimpleField_instr"/>
+      <action name="start" action="endCharacterGroup"/>
+      <action name="start" action="fieldsep"/>
+      <action name="end" action="fieldend"/>
+    </resource>
+    <resource name="ST_FldCharType" resource="List">
+      <value name="begin" tokenid="ooxml:Value_ST_FldCharType_begin">begin</value>
+      <value name="separate" tokenid="ooxml:Value_ST_FldCharType_separate">separate</value>
+      <value name="end" tokenid="ooxml:Value_ST_FldCharType_end">end</value>
+    </resource>
     <resource name="CT_FFTextType" resource="StringValue" generated="yes"/>
     <resource name="CT_FFName" resource="StringValue" generated="yes"/>
+    <resource name="CT_FldChar" resource="Stream">
+      <sprm name="fldData" tokenid="ooxml:CT_FldChar_fldData"/>
+      <sprm name="ffData" tokenid="ooxml:CT_FldChar_ffData"/>
+      <sprm name="numberingChange" tokenid="ooxml:CT_FldChar_numberingChange"/>
+      <attribute name="fldCharType" tokenid="ooxml:CT_FldChar_fldCharType"/>
+      <attribute name="fldLock" tokenid="ooxml:CT_FldChar_fldLock"/>
+      <attribute name="dirty" tokenid="ooxml:CT_FldChar_dirty"/>
+      <action name="start" action="fieldstart">
+        <cond tokenid="ooxml:CT_FldChar_fldCharType" value="ooxml:Value_ST_FldCharType_begin"/>
+      </action>
+      <action name="start" action="fieldsep">
+        <cond tokenid="ooxml:CT_FldChar_fldCharType" value="ooxml:Value_ST_FldCharType_separate"/>
+      </action>
+      <action name="start" action="fieldend">
+        <cond tokenid="ooxml:CT_FldChar_fldCharType" value="ooxml:Value_ST_FldCharType_end"/>
+      </action>
+    </resource>
     <resource name="CT_FFHelpText" resource="StringValue" generated="yes"/>
     <resource name="CT_FFStatusText" resource="StringValue" generated="yes"/>
     <resource name="ST_SectionMark" resource="List">
@@ -14810,7 +14871,12 @@
       <attribute name="headerReference" tokenid="ooxml:EG_HdrFtrReferences_headerReference"/>
       <attribute name="footerReference" tokenid="ooxml:EG_HdrFtrReferences_footerReference"/>
     </resource>
-    <resource name="CT_HdrFtr" resource="Stream"/>
+    <resource name="CT_HdrFtr" resource="Stream">
+      <action name="start" action="startSectionGroup"/>
+      <action name="end" action="endCharacterGroup"/>
+      <action name="end" action="endParagraphGroup"/>
+      <action name="end" action="endSectionGroup"/>
+    </resource>
     <resource name="EG_SectPrContents" resource="Properties">
       <attribute name="bidi" tokenid="ooxml:EG_SectPrContents_bidi"/>
       <attribute name="cols" tokenid="ooxml:EG_SectPrContents_cols"/>
@@ -14834,7 +14900,7 @@
     </resource>
     <resource name="CT_SectPr" resource="Properties">
       <attribute name="sectPrChange" tokenid="ooxml:CT_SectPr_sectPrChange"/>
-      <action name="end" action="setLastParagraphInSection"/>
+      <action name="start" action="setLastParagraphInSection"/>
     </resource>
     <resource name="ST_BrType" resource="List">
       <value tokenid="ooxml:Value_ST_BrType_column">column</value>
@@ -14877,6 +14943,7 @@
       <attribute name="char" tokenid="ooxml:CT_Sym_char"/>
     </resource>
     <resource name="CT_Text" resource="Stream">
+      <attribute name="xml:space" tokenid="ooxml:CT_Text_space"/>
       <action name="characters" action="text"/>
     </resource>
     <resource name="CT_FtnEdnRefChar" resource="Stream">
@@ -14984,7 +15051,6 @@
     <resource name="CT_P" resource="Stream">
       <action name="start" action="startParagraphGroup"/>
       <action name="start" action="sendTableDepth"/>
-      <action name="end" action="endOfCharacterGroup"/>
       <action name="end" action="endOfParagraph"/>
     </resource>
     <resource name="ST_TblWidth" resource="List">
@@ -15051,7 +15117,6 @@
     <resource name="CT_TcPr" resource="Properties"/>
     <resource name="CT_TcPrInner" resource="Properties"/>
     <resource name="CT_Tc" resource="TextTableCell">
-      <action name="start" action="startParagraphGroup"/>
       <action name="start" action="startCell"/>
       <action name="end" action="endCell"/>
       <action name="end" action="endParagraphGroup"/>
--- writerfilter/source/ooxml/resources.xsl	16 May 2007 14:35:31 -0000	1.5
+++ writerfilter/source/ooxml/resources.xsl	2 Jul 2007 17:16:56 -0000	1.5.4.1
@@ -127,10 +127,13 @@
 using namespace ::std;
 using namespace ::com::sun::star;
 using namespace doctok;
+
+/// @cond GENERATED
       </xsl:text>
       <xsl:call-template name="contextdecls"><xsl:with-param name="prefix">w</xsl:with-param></xsl:call-template>
       <xsl:call-template name="valueconstantdecls"/>
       <xsl:text>
+/// @endcond
 }
 #endif //INCLUDED_OOXML_RESOURCES_HXX&#xa;</xsl:text></out></xsl:template>
 
--- writerfilter/source/ooxml/resourcesimpl.xsl	29 May 2007 15:38:47 -0000	1.14
+++ writerfilter/source/ooxml/resourcesimpl.xsl	12 Jul 2007 08:35:08 -0000	1.14.4.2
@@ -122,6 +122,8 @@
 #include "OOXMLPropertySetImpl.hxx"
 #include "TokenMap.hxx"
 
+/// @cond GENERATED
+
 namespace ooxml {
 using namespace ::std;
 
@@ -131,12 +133,17 @@
 static const sal_uInt8 sFtnEdnCont[] = { 0x4, 0x0 }; 
 static const sal_uInt8 sTab[] = { 0x9, 0x0 }; 
 static const sal_uInt8 sPgNum[] = { 0x0, 0x0 }; 
+static const sal_uInt8 sFieldStart[] = { 0x13  }; 
+static const sal_uInt8 sFieldSep[] = { 0x14 }; 
+static const sal_uInt8 sFieldEnd[] = { 0x15 }; 
 
       </xsl:text>
       <xsl:call-template name="sprmkind"/>
       <xsl:call-template name="contextimpls"><xsl:with-param name="prefix">w</xsl:with-param></xsl:call-template>
       <xsl:text>
-}&#xa;</xsl:text></out></xsl:template>
+}
+/// @endcond GENERATED
+&#xa;</xsl:text></out></xsl:template>
 
   <xsl:template match="*"/>
 </xsl:stylesheet>
--- writerfilter/source/ooxml/resourcestools.xsl	27 Jun 2007 09:21:44 -0000	1.41
+++ writerfilter/source/ooxml/resourcestools.xsl	16 Jul 2007 10:58:25 -0000	1.41.4.3
@@ -885,11 +885,12 @@
       <xsl:call-template name="contextresource"/>
     </xsl:variable>
     <xsl:variable name="mydefine" select="@name"/>
+    <xsl:variable name="mynsid" select="generate-id(ancestor::namespace)"/>
     <xsl:variable name="switchbody">
       <!--
           Generates the body for the switch over the token id.
       -->
-      <xsl:if test="$resource = 'Properties' or $resource = 'Property' or $resource = 'SingleElement'">
+      <xsl:if test="$resource = 'Properties' or $resource = 'Property' or $resource = 'SingleElement' or $resource='Stream'">
         <xsl:for-each select="//resource[@name=$mydefine]">
           <xsl:for-each select="attribute|sprm">
             <xsl:variable name="sprmname" select="@name"/>
@@ -898,7 +899,9 @@
               <xsl:call-template name="caselabelelement"/>
             </xsl:for-each>
             <xsl:for-each select="key('defines-with-name', $mydefine)//rng:attribute[@name=$sprmname]">
-              <xsl:call-template name="caselabelattribute"/>
+              <xsl:if test="$mynsid=generate-id(ancestor::namespace)">
+                <xsl:call-template name="caselabelattribute"/>
+              </xsl:if>
             </xsl:for-each>
             <xsl:text>
         nResult = </xsl:text>
@@ -1121,6 +1124,13 @@
       break;</xsl:text>
   </xsl:template>
 
+  <xsl:template name="contextattributeimplstream">
+    <xsl:call-template name="caselabelattribute"/>
+    <xsl:call-template name="contextattributeimplpropcaseinner"/>
+    <xsl:text>
+      break;</xsl:text>
+  </xsl:template>
+
   <!--
       Generates the inner of the switch over the given token id in the
       ::attribute method of the class for the current <define>.
@@ -1160,6 +1170,9 @@
         <xsl:when test="$resource = 'XNote'">
           <xsl:call-template name="contextattributeimplxnote"/>
         </xsl:when>
+        <xsl:when test="$resource = 'Stream'">
+          <xsl:call-template name="contextattributeimplstream"/>
+        </xsl:when>
         <xsl:otherwise/>
       </xsl:choose>
     </xsl:for-each>
@@ -1317,14 +1330,42 @@
     <xsl:call-template name="contextparent"/>
     <xsl:text>(rContext)
 {</xsl:text>
+    <xsl:choose>
+      <xsl:when test="$resource/@resource='Properties'">
+        <xsl:for-each select="$resource/type">
+          <xsl:text>
+    mpPropertySet->setType("</xsl:text>
+    <xsl:value-of select="@name"/>
+    <xsl:text>");</xsl:text>
+        </xsl:for-each>
+      </xsl:when>
+    </xsl:choose>
     <xsl:text>
-}&#xa;</xsl:text>
+}
+</xsl:text>
   </xsl:template>
 
   <!--
       Chooses the action for the current <action> element.
   -->
   <xsl:template name="chooseaction">
+    <xsl:for-each select="./cond">
+      <xsl:text>
+    {
+        OOXMLPropertySetEntryToInteger aHandler(</xsl:text>
+        <xsl:call-template name="idtoqname">
+          <xsl:with-param name="id" select="@tokenid"/>
+        </xsl:call-template>
+        <xsl:text>);
+        getPropertySetAttrs()->resolve(aHandler);
+        
+        if (aHandler.getValue() == </xsl:text>
+        <xsl:call-template name="idtoqname">
+          <xsl:with-param name="id" select="@value"/>
+        </xsl:call-template>
+        <xsl:text>)
+        {</xsl:text>
+    </xsl:for-each>
     <xsl:choose>
       <xsl:when test="@action='sendTableDepth'">
         <xsl:text>
@@ -1346,6 +1387,27 @@
         <xsl:text>
     startSectionGroup();</xsl:text>
       </xsl:when>
+      <xsl:when test="@action='fieldstart'">
+        <xsl:text>
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldStart, 1);</xsl:text>
+    endCharacterGroup();
+      </xsl:when>
+      <xsl:when test="@action='fieldsep'">
+        <xsl:text>
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldSep, 1);</xsl:text>
+    endCharacterGroup();
+      </xsl:when>
+      <xsl:when test="@action='fieldend'">
+        <xsl:text>
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldEnd, 1);</xsl:text>
+    endCharacterGroup();
+      </xsl:when>
       <xsl:when test="@action='ftnednref'">
         <xsl:text>
     if (isForwardEvents())        
@@ -1359,7 +1421,7 @@
       <xsl:when test="@action='ftnedncont'">
         <xsl:text>
     if (isForwardEvents())        
-        mrStream.utext(sFtnEdnCont, 1);</xsl:text>
+        mrStream.text(sFtnEdnCont, 1);</xsl:text>
       </xsl:when>
       <xsl:when test="@action='pgNum'">
         <xsl:text>
@@ -1373,6 +1435,8 @@
       </xsl:when>
       <xsl:when test="@action='endOfParagraph'">
         <xsl:text>
+    if (! mpParserState->isInCharacterGroup())
+       startCharacterGroup();
     if (isForwardEvents())        
         mrStream.utext(sCR, 1);</xsl:text>
       </xsl:when>
@@ -1442,7 +1506,27 @@
         mpPropertySet->resolve(aCommentHandler);
     }
         </xsl:when>
+        <xsl:when test="@action='printproperty'">
+          <xsl:text>
+    {
+        OOXMLPropertySetEntryToString aHandler(</xsl:text>
+        <xsl:call-template name="idtoqname">
+          <xsl:with-param name="id" select="@tokenid"/>
+        </xsl:call-template>
+        <xsl:text>);
+        getPropertySetAttrs()->resolve(aHandler);
+        const ::rtl::OUString &amp; sText = aHandler.getString();
+        mrStream.utext(reinterpret_cast &lt; const sal_uInt8 * &gt; 
+                   (sText.getStr()), 
+                   sText.getLength());        
+    }</xsl:text>
+        </xsl:when>
     </xsl:choose>
+    <xsl:for-each select="./cond">
+      <xsl:text>
+        }
+    }</xsl:text>
+    </xsl:for-each>
   </xsl:template>
 
   <!--
@@ -1528,13 +1612,16 @@
       <xsl:call-template name="contextnamefordefine"/>
     </xsl:variable>
     <xsl:variable name="resource" select="key('context-resource', @name)"/>
-    <xsl:value-of select="$classname"/>
-    <xsl:text>::~</xsl:text>
-    <xsl:value-of select="$classname"/>
-    <xsl:text>()
-{</xsl:text>
     <xsl:text>
-}&#xa;</xsl:text>
+</xsl:text>
+<xsl:value-of select="$classname"/>
+<xsl:text>::~</xsl:text>
+<xsl:value-of select="$classname"/>
+<xsl:text>()
+{</xsl:text>
+<xsl:text>
+}
+</xsl:text>
   </xsl:template>
 
   <!--
--- writerfilter/source/resourcemodel/qnametostr.cxx	27 Jun 2007 09:22:14 -0000	1.29
+++ writerfilter/source/resourcemodel/qnametostr.cxx	16 Jul 2007 10:58:59 -0000	1.29.4.3
@@ -127,6 +127,9 @@
     mMap[NS_ooxml::LN_CT_Markup_id] = "ooxml:CT_Markup_id";
     mMap[NS_ooxml::LN_CT_TrackChange_author] = "ooxml:CT_TrackChange_author";
     mMap[NS_ooxml::LN_CT_TrackChange_date] = "ooxml:CT_TrackChange_date";
+    mMap[NS_ooxml::LN_CT_MarkupRange_displacedByCustomXml] = "ooxml:CT_MarkupRange_displacedByCustomXml";
+    mMap[NS_ooxml::LN_CT_BookmarkRange_colFirst] = "ooxml:CT_BookmarkRange_colFirst";
+    mMap[NS_ooxml::LN_CT_BookmarkRange_colLast] = "ooxml:CT_BookmarkRange_colLast";
     mMap[NS_ooxml::LN_CT_Comment_initials] = "ooxml:CT_Comment_initials";
     mMap[NS_ooxml::LN_CT_SectPrChange_sectPr] = "ooxml:CT_SectPrChange_sectPr";
     mMap[NS_ooxml::LN_CT_NumPr_numberingChange] = "ooxml:CT_NumPr_numberingChange";
@@ -150,6 +153,16 @@
     mMap[NS_ooxml::LN_CT_PPr_sectPr] = "ooxml:CT_PPr_sectPr";
     mMap[NS_ooxml::LN_CT_PPr_pPrChange] = "ooxml:CT_PPr_pPrChange";
     mMap[NS_ooxml::LN_CT_Rel_id] = "ooxml:CT_Rel_id";
+    mMap[NS_ooxml::LN_CT_SimpleField_fldData] = "ooxml:CT_SimpleField_fldData";
+    mMap[NS_ooxml::LN_CT_SimpleField_instr] = "ooxml:CT_SimpleField_instr";
+    mMap[NS_ooxml::LN_CT_SimpleField_fldLock] = "ooxml:CT_SimpleField_fldLock";
+    mMap[NS_ooxml::LN_CT_SimpleField_dirty] = "ooxml:CT_SimpleField_dirty";
+    mMap[NS_ooxml::LN_CT_FldChar_fldData] = "ooxml:CT_FldChar_fldData";
+    mMap[NS_ooxml::LN_CT_FldChar_ffData] = "ooxml:CT_FldChar_ffData";
+    mMap[NS_ooxml::LN_CT_FldChar_numberingChange] = "ooxml:CT_FldChar_numberingChange";
+    mMap[NS_ooxml::LN_CT_FldChar_fldCharType] = "ooxml:CT_FldChar_fldCharType";
+    mMap[NS_ooxml::LN_CT_FldChar_fldLock] = "ooxml:CT_FldChar_fldLock";
+    mMap[NS_ooxml::LN_CT_FldChar_dirty] = "ooxml:CT_FldChar_dirty";
     mMap[NS_ooxml::LN_CT_PageSz_w] = "ooxml:CT_PageSz_w";
     mMap[NS_ooxml::LN_CT_PageSz_h] = "ooxml:CT_PageSz_h";
     mMap[NS_ooxml::LN_CT_PageSz_orient] = "ooxml:CT_PageSz_orient";
@@ -206,6 +219,7 @@
     mMap[NS_ooxml::LN_CT_PTab_leader] = "ooxml:CT_PTab_leader";
     mMap[NS_ooxml::LN_CT_Sym_font] = "ooxml:CT_Sym_font";
     mMap[NS_ooxml::LN_CT_Sym_char] = "ooxml:CT_Sym_char";
+    mMap[NS_ooxml::LN_CT_Text_space] = "ooxml:CT_Text_space";
     mMap[NS_ooxml::LN_CT_Fonts_hint] = "ooxml:CT_Fonts_hint";
     mMap[NS_ooxml::LN_CT_Fonts_ascii] = "ooxml:CT_Fonts_ascii";
     mMap[NS_ooxml::LN_CT_Fonts_hAnsi] = "ooxml:CT_Fonts_hAnsi";
