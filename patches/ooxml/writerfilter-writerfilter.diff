retrieving revision 1.19
retrieving revision 1.19.4.2
diff -u -r1.19 -r1.19.4.2
--- writerfilter/inc/dmapper/DomainMapper.hxx	14 Jun 2007 08:22:11 -0000	1.19
+++ writerfilter/inc/dmapper/DomainMapper.hxx	18 Jul 2007 13:05:48 -0000	1.19.4.2
@@ -64,6 +64,12 @@
     SPRM_DEFAULT,
     SPRM_LIST
 };
+enum SourceDocumentType
+{
+    DOCUMENT_DOC,
+    DOCUMENT_OOXML,
+    DOCUMENT_RTF
+};
 class WRITERFILTER_DLLPUBLIC DomainMapper : public doctok::Properties, public doctok::Table,
                     public doctok::BinaryObj, public doctok::Stream
 {
@@ -71,7 +77,8 @@
 
 public:
     DomainMapper(const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XComponentContext >& xContext,
-                                ::com::sun::star::uno::Reference< ::com::sun::star::lang::XComponent > xModel);
+                                ::com::sun::star::uno::Reference< ::com::sun::star::lang::XComponent > xModel,
+                                SourceDocumentType eDocumentType );
     virtual ~DomainMapper();
 
     // Properties
@@ -106,6 +113,9 @@
     void PushStyleSheetProperties( ::boost::shared_ptr<PropertyMap> pStyleProperties );
     void PopStyleSheetProperties();
 
+    bool IsOOXMLImport() const;
+
+
 private:
     void handleUnderlineType(const sal_Int32 nIntValue, const ::boost::shared_ptr<PropertyMap> pContext);
     void handleParaJustification(const sal_Int32 nIntValue, const ::boost::shared_ptr<PropertyMap> pContext, const bool bExchangeLeftRight);
--- writerfilter/inc/ooxml/OOXMLDocument.hxx	4 Jun 2007 08:15:11 -0000	1.9
+++ writerfilter/inc/ooxml/OOXMLDocument.hxx	16 Jul 2007 20:07:34 -0000	1.9.4.2
@@ -54,6 +54,39 @@
 #include <com/sun/star/xml/sax/XParser.hpp>
 #endif
 
+/**
+   @file OOXMLDocument.hxx
+
+   <h1>Import of OOXML WordprocessingML Documents</h1>
+
+   The following picture shows the classes involved in importing OOXML
+   WordprocessingML documents.
+
+   @image html ooxmlimportchain.png
+
+   The DOCX consists of parts. Each part is an XML document.  The
+   OOXMLDocument opens the DOCX and creates a SAX parser for the part
+   containing the main document content. The OOXMLDocument creates a
+   SAX handler, too. This handler is set as the handler for the events
+   created by the parser. Finally the OOXMLDocument initiates the
+   parsing process.
+
+   The SAX handler hosts a stack of contexts. Each context is an
+   instance of a class derived from OOXMLContext. There is a context
+   class for each <define> in the model.xml.
+
+   For a detailed information about how the contexts are handled see
+   the documentation for OOXMLContext.
+
+   The contexts know how to convert an element in OOXML to the
+   intermediate format that the domain mapper understands. They
+   enumerate the according entity in OOXML by sending the according
+   events to the domain mapper.
+
+   The domain mapper knows how to convert the intermediate format to
+   API calls. It takes the events sent by the contexts and uses the
+   core API to insert the according elements to the core.
+ */
 
 namespace ooxml
 {
@@ -64,13 +97,24 @@
 class WRITERFILTER_DLLPUBLIC OOXMLStream 
 {
 public:
-    enum StreamType_t { UNKNOWN, DOCUMENT, STYLES, FONTTABLE, NUMBERING, FOOTNOTES, ENDNOTES, COMMENTS };
+    enum StreamType_t { UNKNOWN, DOCUMENT, STYLES, FONTTABLE, NUMBERING, FOOTNOTES, ENDNOTES, COMMENTS, THEME };
     typedef boost::shared_ptr<OOXMLStream> Pointer_t;
 
     virtual ~OOXMLStream() {}
 
+    /**
+       Returns parser for this stream.
+     */
     virtual uno::Reference<xml::sax::XParser> getParser() = 0;
+
+    /**
+       Returns input stream for this stream.
+     */
     virtual uno::Reference<io::XInputStream> getInputStream() = 0;
+
+    /**
+       Returns component context for this stream.
+     */
     virtual uno::Reference<uno::XComponentContext> getContext() = 0;
 };
 
@@ -84,19 +128,73 @@
 
     virtual ~OOXMLDocument() {}
 
-    virtual void resolve(Stream &) = 0;
+    /**
+       Resolves this document to a stream handler.
+
+       @param rStream     stream handler to resolve this document to
+     */
+    virtual void resolve(Stream & rStream) = 0;
     
+    /**
+       Returns string representation of the type of this reference.
+
+       DEBUGGING PURPOSE ONLY.
+     */
     virtual string getType() const = 0;
+    
+    /**
+       Resolves a footnote to a stream handler.
 
+       @param rStream       stream handler to resolve to
+       @param rNoteId       id of the footnote to resolve
+     */
     virtual void resolveFootnote(Stream & rStream, 
                                  const rtl::OUString & rNoteId) = 0;
+
+    /**
+       Resolves an endnote to a stream handler.
+
+       @param rStream       stream handler to resolve to
+       @param rNoteId       id of the endnote to resolve
+     */
     virtual void resolveEndnote(Stream & rStream, 
                                 const rtl::OUString & rNoteId) = 0;
+
+    /**
+       Resolves a comment to a stream handler.
+
+       @param rStream       stream handler to resolve to
+       @param rComment      id of the comment to resolve
+     */
     virtual void resolveComment(Stream & rStream, 
-                                const rtl::OUString & rNoteId) = 0;
+                                const rtl::OUString & rCommentId) = 0;
+
+    /**
+       Resolves a header to a stream handler.
+
+       @param rStream       stream handler to resolve to
+       @param type          type of header to resolve:
+                            NS_ooxml::LN_Value_ST_HrdFtr_even     header on even page
+                            NS_ooxml::LN_Value_ST_HrdFtr_default  header on right page
+                            NS_ooxml::LN_Value_ST_HrdFtr_first    header on first page
+       
+       @param rId           id of the header
+     */
     virtual void resolveHeader(Stream & rStream,
                                const sal_Int32 type,
                                const rtl::OUString & rId) = 0;
+
+    /**
+       Resolves a footer to a stream handler.
+
+       @param rStream       stream handler to resolve to
+       @param type          type of footer to resolve:
+                            NS_ooxml::LN_Value_ST_HrdFtr_even     header on even page
+                            NS_ooxml::LN_Value_ST_HrdFtr_default  header on right page
+                            NS_ooxml::LN_Value_ST_HrdFtr_first    header on first page
+                            
+       @param rId           id of the header
+    */
     virtual void resolveFooter(Stream & rStream,
                                const sal_Int32 type,
                                const rtl::OUString & rId) = 0;
--- writerfilter/inc/ooxml/resourceids.hxx	27 Jun 2007 08:42:39 -0000	1.59
+++ writerfilter/inc/ooxml/resourceids.hxx	18 Jul 2007 12:52:34 -0000	1.59.4.5
@@ -49,495 +49,830 @@
       
 namespace NS_ooxml
 {
-    const QName_t LN_Value_ST_Style_b = 90001;
-    const QName_t LN_Value_ST_Style_bi = 90002;
-    const QName_t LN_Value_ST_Style_i = 90003;
-    const QName_t LN_Value_ST_Style_p = 90004;
-    const QName_t LN_CT_Highlight_val = 90022;
-    const QName_t LN_Value_ST_HexColorAuto_auto = 90023;
-    const QName_t LN_CT_Color_val = 90024;
-    const QName_t LN_CT_Color_themeColor = 90025;
-    const QName_t LN_CT_Color_themeTint = 90026;
-    const QName_t LN_CT_Color_themeShade = 90027;
-    const QName_t LN_CT_Lang_val = 90028;
-    const QName_t LN_CT_Guid_val = 90029;
-    const QName_t LN_CT_Underline_val = 90048;
-    const QName_t LN_CT_Underline_color = 90049;
-    const QName_t LN_CT_Underline_themeColor = 90050;
-    const QName_t LN_CT_Underline_themeTint = 90051;
-    const QName_t LN_CT_Underline_themeShade = 90052;
-    const QName_t LN_CT_TextEffect_val = 90060;
-    const QName_t LN_CT_Border_color = 90253;
-    const QName_t LN_CT_Border_themeColor = 90254;
-    const QName_t LN_CT_Border_themeTint = 90255;
-    const QName_t LN_CT_Border_themeShade = 90256;
-    const QName_t LN_CT_Shd_val = 90299;
-    const QName_t LN_CT_Shd_color = 90300;
-    const QName_t LN_CT_Shd_themeColor = 90301;
-    const QName_t LN_CT_Shd_themeTint = 90302;
-    const QName_t LN_CT_Shd_themeShade = 90303;
-    const QName_t LN_CT_Shd_fill = 90304;
-    const QName_t LN_CT_Shd_themeFill = 90305;
-    const QName_t LN_CT_Shd_themeFillTint = 90306;
-    const QName_t LN_CT_Shd_themeFillShade = 90307;
-    const QName_t LN_CT_Em_val = 90313;
-    const QName_t LN_CT_Language_val = 90314;
-    const QName_t LN_CT_Language_eastAsia = 90315;
-    const QName_t LN_CT_Language_bidi = 90316;
-    const QName_t LN_CT_EastAsianLayout_id = 90322;
-    const QName_t LN_CT_EastAsianLayout_combine = 90323;
-    const QName_t LN_CT_EastAsianLayout_combineBrackets = 90324;
-    const QName_t LN_CT_EastAsianLayout_vert = 90325;
-    const QName_t LN_CT_EastAsianLayout_vertCompress = 90326;
-    const QName_t LN_CT_FramePr_dropCap = 90327;
-    const QName_t LN_CT_FramePr_lines = 90328;
-    const QName_t LN_CT_FramePr_hAnchor = 90334;
-    const QName_t LN_CT_FramePr_vAnchor = 90335;
-    const QName_t LN_CT_FramePr_x = 90336;
-    const QName_t LN_CT_FramePr_xAlign = 90337;
-    const QName_t LN_CT_FramePr_y = 90338;
-    const QName_t LN_CT_FramePr_yAlign = 90339;
-    const QName_t LN_CT_FramePr_hRule = 90340;
-    const QName_t LN_Value_ST_TabJc_clear = 90342;
-    const QName_t LN_Value_ST_TabJc_num = 90348;
-    const QName_t LN_Value_ST_TabTlc_middleDot = 90354;
-    const QName_t LN_CT_TabStop_val = 90355;
-    const QName_t LN_CT_TabStop_leader = 90356;
-    const QName_t LN_CT_TabStop_pos = 90357;
-    const QName_t LN_CT_Spacing_before = 90358;
-    const QName_t LN_CT_Spacing_beforeLines = 90359;
-    const QName_t LN_CT_Spacing_beforeAutospacing = 90360;
-    const QName_t LN_CT_Spacing_after = 90361;
-    const QName_t LN_CT_Spacing_afterLines = 90362;
-    const QName_t LN_CT_Spacing_afterAutospacing = 90363;
-    const QName_t LN_CT_Spacing_line = 90364;
-    const QName_t LN_CT_Spacing_lineRule = 90365;
-    const QName_t LN_CT_Ind_left = 90366;
-    const QName_t LN_CT_Ind_leftChars = 90367;
-    const QName_t LN_CT_Ind_right = 90368;
-    const QName_t LN_CT_Ind_rightChars = 90369;
-    const QName_t LN_CT_Ind_hanging = 90370;
-    const QName_t LN_CT_Ind_hangingChars = 90371;
-    const QName_t LN_CT_Ind_firstLine = 90372;
-    const QName_t LN_CT_Ind_firstLineChars = 90373;
-    const QName_t LN_Value_ST_Jc_mediumKashida = 90378;
-    const QName_t LN_Value_ST_Jc_distribute = 90379;
-    const QName_t LN_Value_ST_Jc_numTab = 90380;
-    const QName_t LN_Value_ST_Jc_highKashida = 90381;
-    const QName_t LN_Value_ST_Jc_lowKashida = 90382;
-    const QName_t LN_Value_ST_Jc_thaiDistribute = 90383;
-    const QName_t LN_CT_Jc_val = 90384;
-    const QName_t LN_Value_ST_TextDirection_lrTb = 90385;
-    const QName_t LN_Value_ST_TextDirection_tbRl = 90386;
-    const QName_t LN_Value_ST_TextDirection_btLr = 90387;
-    const QName_t LN_Value_ST_TextDirection_lrTbV = 90388;
-    const QName_t LN_Value_ST_TextDirection_tbRlV = 90389;
-    const QName_t LN_Value_ST_TextDirection_tbLrV = 90390;
-    const QName_t LN_CT_Markup_id = 90391;
-    const QName_t LN_CT_TrackChange_author = 90392;
-    const QName_t LN_CT_TrackChange_date = 90393;
-    const QName_t LN_CT_Comment_initials = 90395;
-    const QName_t LN_CT_SectPrChange_sectPr = 90396;
-    const QName_t LN_CT_NumPr_numberingChange = 90399;
-    const QName_t LN_CT_NumPr_ins = 90400;
-    const QName_t LN_CT_Tabs_tab = 90407;
-    const QName_t LN_CT_PPrBase_pStyle = 90408;
-    const QName_t LN_CT_PPrBase_framePr = 90412;
-    const QName_t LN_CT_PPrBase_windowControl = 90413;
-    const QName_t LN_CT_PPrBase_numPr = 90414;
-    const QName_t LN_CT_PrBase_pBdr = 90416;
-    const QName_t LN_CT_PPrBase_tabs = 90418;
-    const QName_t LN_CT_PPrBase_kinsoku = 90420;
-    const QName_t LN_CT_PPrBase_wordWrap = 90421;
-    const QName_t LN_CT_PPrBase_adjustRightInd = 90427;
-    const QName_t LN_CT_PPrBase_snapToGrid = 90428;
-    const QName_t LN_CT_PPrBase_spacing = 90429;
-    const QName_t LN_CT_PPrBase_ind = 90430;
-    const QName_t LN_CT_PPrBase_divId = 90439;
-    const QName_t LN_CT_PPrBase_cnfStyle = 90440;
-    const QName_t LN_CT_PPr_rPr = 90441;
-    const QName_t LN_CT_PPr_sectPr = 90442;
-    const QName_t LN_CT_PPr_pPrChange = 90443;
-    const QName_t LN_CT_Rel_id = 90444;
-    const QName_t LN_Value_ST_NumberFormat_decimal = 90450;
-    const QName_t LN_Value_ST_NumberFormat_upperRoman = 90451;
-    const QName_t LN_Value_ST_NumberFormat_lowerRoman = 90452;
-    const QName_t LN_Value_ST_NumberFormat_upperLetter = 90453;
-    const QName_t LN_Value_ST_NumberFormat_lowerLetter = 90454;
-    const QName_t LN_Value_ST_NumberFormat_ordinal = 90455;
-    const QName_t LN_Value_ST_NumberFormat_cardinalText = 90456;
-    const QName_t LN_Value_ST_NumberFormat_ordinalText = 90457;
-    const QName_t LN_Value_ST_NumberFormat_hex = 90458;
-    const QName_t LN_Value_ST_NumberFormat_chicago = 90459;
-    const QName_t LN_Value_ST_NumberFormat_ideographDigital = 90460;
-    const QName_t LN_Value_ST_NumberFormat_japaneseCounting = 90461;
-    const QName_t LN_Value_ST_NumberFormat_aiueo = 90462;
-    const QName_t LN_Value_ST_NumberFormat_iroha = 90463;
-    const QName_t LN_Value_ST_NumberFormat_decimalFullWidth = 90464;
-    const QName_t LN_Value_ST_NumberFormat_decimalHalfWidth = 90465;
-    const QName_t LN_Value_ST_NumberFormat_japaneseLegal = 90466;
-    const QName_t LN_Value_ST_NumberFormat_japaneseDigitalTenThousand = 90467;
-    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedCircle = 90468;
-    const QName_t LN_Value_ST_NumberFormat_decimalFullWidth2 = 90469;
-    const QName_t LN_Value_ST_NumberFormat_aiueoFullWidth = 90470;
-    const QName_t LN_Value_ST_NumberFormat_irohaFullWidth = 90471;
-    const QName_t LN_Value_ST_NumberFormat_decimalZero = 90472;
-    const QName_t LN_Value_ST_NumberFormat_bullet = 90473;
-    const QName_t LN_Value_ST_NumberFormat_ganada = 90474;
-    const QName_t LN_Value_ST_NumberFormat_chosung = 90475;
-    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedFullstop = 90476;
-    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedParen = 90477;
-    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedCircleChinese = 90478;
-    const QName_t LN_Value_ST_NumberFormat_ideographEnclosedCircle = 90479;
-    const QName_t LN_Value_ST_NumberFormat_ideographTraditional = 90480;
-    const QName_t LN_Value_ST_NumberFormat_ideographZodiac = 90481;
-    const QName_t LN_Value_ST_NumberFormat_ideographZodiacTraditional = 90482;
-    const QName_t LN_Value_ST_NumberFormat_taiwaneseCounting = 90483;
-    const QName_t LN_Value_ST_NumberFormat_ideographLegalTraditional = 90484;
-    const QName_t LN_Value_ST_NumberFormat_taiwaneseCountingThousand = 90485;
-    const QName_t LN_Value_ST_NumberFormat_taiwaneseDigital = 90486;
-    const QName_t LN_Value_ST_NumberFormat_chineseCounting = 90487;
-    const QName_t LN_Value_ST_NumberFormat_chineseLegalSimplified = 90488;
-    const QName_t LN_Value_ST_NumberFormat_chineseCountingThousand = 90489;
-    const QName_t LN_Value_ST_NumberFormat_koreanDigital = 90490;
-    const QName_t LN_Value_ST_NumberFormat_koreanCounting = 90491;
-    const QName_t LN_Value_ST_NumberFormat_koreanLegal = 90492;
-    const QName_t LN_Value_ST_NumberFormat_koreanDigital2 = 90493;
-    const QName_t LN_Value_ST_NumberFormat_vietnameseCounting = 90494;
-    const QName_t LN_Value_ST_NumberFormat_russianLower = 90495;
-    const QName_t LN_Value_ST_NumberFormat_russianUpper = 90496;
-    const QName_t LN_Value_ST_NumberFormat_none = 90497;
-    const QName_t LN_Value_ST_NumberFormat_numberInDash = 90498;
-    const QName_t LN_Value_ST_NumberFormat_hebrew1 = 90499;
-    const QName_t LN_Value_ST_NumberFormat_hebrew2 = 90500;
-    const QName_t LN_Value_ST_NumberFormat_arabicAlpha = 90501;
-    const QName_t LN_Value_ST_NumberFormat_arabicAbjad = 90502;
-    const QName_t LN_Value_ST_NumberFormat_hindiVowels = 90503;
-    const QName_t LN_Value_ST_NumberFormat_hindiConsonants = 90504;
-    const QName_t LN_Value_ST_NumberFormat_hindiNumbers = 90505;
-    const QName_t LN_Value_ST_NumberFormat_hindiCounting = 90506;
-    const QName_t LN_Value_ST_NumberFormat_thaiLetters = 90507;
-    const QName_t LN_Value_ST_NumberFormat_thaiNumbers = 90508;
-    const QName_t LN_Value_ST_NumberFormat_thaiCounting = 90509;
-    const QName_t LN_CT_PageSz_w = 90512;
-    const QName_t LN_CT_PageSz_h = 90513;
-    const QName_t LN_CT_PageSz_orient = 90514;
-    const QName_t LN_CT_PageSz_code = 90515;
-    const QName_t LN_CT_PageMar_top = 90516;
-    const QName_t LN_CT_PageMar_right = 90517;
-    const QName_t LN_CT_PageMar_bottom = 90518;
-    const QName_t LN_CT_PageMar_left = 90519;
-    const QName_t LN_CT_PageMar_header = 90520;
-    const QName_t LN_CT_PageMar_footer = 90521;
-    const QName_t LN_CT_PageMar_gutter = 90522;
-    const QName_t LN_Value_ST_ChapterSep_hyphen = 90523;
-    const QName_t LN_Value_ST_ChapterSep_period = 90524;
-    const QName_t LN_Value_ST_ChapterSep_colon = 90525;
-    const QName_t LN_Value_ST_ChapterSep_emDash = 90526;
-    const QName_t LN_Value_ST_ChapterSep_enDash = 90527;
-    const QName_t LN_CT_LineNumber_countBy = 90531;
-    const QName_t LN_CT_LineNumber_start = 90532;
-    const QName_t LN_CT_LineNumber_distance = 90533;
-    const QName_t LN_CT_LineNumber_restart = 90534;
-    const QName_t LN_CT_PageNumber_fmt = 90535;
-    const QName_t LN_CT_PageNumber_start = 90536;
-    const QName_t LN_CT_PageNumber_chapStyle = 90537;
-    const QName_t LN_CT_PageNumber_chapSep = 90538;
-    const QName_t LN_CT_Column_space = 90539;
-    const QName_t LN_CT_Column_w = 90540;
-    const QName_t LN_CT_Columns_equalWidth = 90541;
-    const QName_t LN_CT_Columns_space = 90542;
-    const QName_t LN_CT_Columns_num = 90543;
-    const QName_t LN_CT_Columns_sep = 90544;
-    const QName_t LN_CT_Columns_col = 90545;
-    const QName_t LN_Value_ST_HrdFtr_even = 90550;
-    const QName_t LN_Value_ST_HrdFtr_default = 90551;
-    const QName_t LN_Value_ST_HrdFtr_first = 90552;
-    const QName_t LN_CT_HdrFtrRef_type = 90553;
-    const QName_t LN_CT_HdrFtrRef_id = 90554;
-    const QName_t LN_EG_HdrFtrReferences_headerReference = 90555;
-    const QName_t LN_EG_HdrFtrReferences_footerReference = 90556;
-    const QName_t LN_EG_SectPrContents_bidi = 90557;
-    const QName_t LN_EG_SectPrContents_cols = 90558;
-    const QName_t LN_EG_SectPrContents_docGrid = 90559;
-    const QName_t LN_EG_SectPrContents_endnotePr = 90560;
-    const QName_t LN_EG_SectPrContents_footnotePr = 90561;
-    const QName_t LN_EG_SectPrContents_formProt = 90562;
-    const QName_t LN_EG_SectPrContents_lnNumType = 90563;
-    const QName_t LN_EG_SectPrContents_noEndnote = 90564;
-    const QName_t LN_EG_SectPrContents_paperSrc = 90565;
-    const QName_t LN_EG_SectPrContents_pgBorders = 90566;
-    const QName_t LN_EG_SectPrContents_pgMar = 90567;
-    const QName_t LN_EG_SectPrContents_pgNumType = 90568;
-    const QName_t LN_EG_SectPrContents_pgSz = 90569;
-    const QName_t LN_EG_SectPrContents_printerSettings = 90570;
-    const QName_t LN_EG_SectPrContents_rtlGutter = 90571;
-    const QName_t LN_EG_SectPrContents_textDirection = 90572;
-    const QName_t LN_EG_SectPrContents_titlePg = 90573;
-    const QName_t LN_EG_SectPrContents_vAlign = 90575;
-    const QName_t LN_CT_SectPr_sectPrChange = 90576;
-    const QName_t LN_Value_ST_BrType_column = 90577;
-    const QName_t LN_Value_ST_BrType_page = 90578;
-    const QName_t LN_Value_ST_BrType_textWrapping = 90579;
-    const QName_t LN_Value_ST_BrClear_none = 90580;
-    const QName_t LN_Value_ST_BrClear_left = 90581;
-    const QName_t LN_Value_ST_BrClear_right = 90582;
-    const QName_t LN_Value_ST_BrClear_all = 90583;
-    const QName_t LN_CT_Br_type = 90584;
-    const QName_t LN_CT_Br_clear = 90585;
-    const QName_t LN_Value_ST_PTabAlignment_left = 90586;
-    const QName_t LN_Value_ST_PTabAlignment_center = 90587;
-    const QName_t LN_Value_ST_PTabAlignment_right = 90588;
-    const QName_t LN_Value_ST_PTabRelativeTo_margin = 90589;
-    const QName_t LN_Value_ST_PTabRelativeTo_indent = 90590;
-    const QName_t LN_Value_ST_PTabLeader_none = 90591;
-    const QName_t LN_Value_ST_PTabLeader_dot = 90592;
-    const QName_t LN_Value_ST_PTabLeader_hyphen = 90593;
-    const QName_t LN_Value_ST_PTabLeader_underscore = 90594;
-    const QName_t LN_Value_ST_PTabLeader_middleDot = 90595;
-    const QName_t LN_CT_PTab_alignment = 90596;
-    const QName_t LN_CT_PTab_relativeTo = 90597;
-    const QName_t LN_CT_PTab_leader = 90598;
-    const QName_t LN_CT_Sym_font = 90599;
-    const QName_t LN_CT_Sym_char = 90600;
-    const QName_t LN_Value_ST_Hint_default = 90601;
-    const QName_t LN_Value_ST_Hint_eastAsia = 90602;
-    const QName_t LN_Value_ST_Hint_cs = 90603;
-    const QName_t LN_Value_ST_Theme_majorEastAsia = 90604;
-    const QName_t LN_Value_ST_Theme_majorBidi = 90605;
-    const QName_t LN_Value_ST_Theme_majorAscii = 90606;
-    const QName_t LN_Value_ST_Theme_majorHAnsi = 90607;
-    const QName_t LN_Value_ST_Theme_minorEastAsia = 90608;
-    const QName_t LN_Value_ST_Theme_minorBidi = 90609;
-    const QName_t LN_Value_ST_Theme_minorAscii = 90610;
-    const QName_t LN_Value_ST_Theme_minorHAnsi = 90611;
-    const QName_t LN_CT_Fonts_hint = 90612;
-    const QName_t LN_CT_Fonts_ascii = 90613;
-    const QName_t LN_CT_Fonts_hAnsi = 90614;
-    const QName_t LN_CT_Fonts_eastAsia = 90615;
-    const QName_t LN_CT_Fonts_cs = 90616;
-    const QName_t LN_CT_Fonts_asciiTheme = 90617;
-    const QName_t LN_CT_Fonts_hAnsiTheme = 90618;
-    const QName_t LN_CT_Fonts_eastAsiaTheme = 90619;
-    const QName_t LN_CT_Fonts_cstheme = 90620;
-    const QName_t LN_EG_RPrBase_rStyle = 90621;
-    const QName_t LN_EG_RPrBase_rFonts = 90622;
-    const QName_t LN_EG_RPrBase_snapToGrid = 90636;
-    const QName_t LN_EG_RPrBase_color = 90639;
-    const QName_t LN_EG_RPrBase_u = 90647;
-    const QName_t LN_EG_RPrBase_bdr = 90649;
-    const QName_t LN_EG_RPrBase_shd = 90650;
-    const QName_t LN_EG_RPrBase_fitText = 90651;
-    const QName_t LN_EG_RPrBase_vertAlign = 90652;
-    const QName_t LN_EG_RPrBase_rtl = 90653;
-    const QName_t LN_EG_RPrBase_lang = 90656;
-    const QName_t LN_EG_RPrBase_eastAsianLayout = 90657;
-    const QName_t LN_EG_RPrBase_oMath = 90659;
-    const QName_t LN_CT_ParaRPr_rPrChange = 90660;
-    const QName_t LN_Value_ST_TblWidth_nil = 90661;
-    const QName_t LN_Value_ST_TblWidth_pct = 90662;
-    const QName_t LN_Value_ST_TblWidth_dxa = 90663;
-    const QName_t LN_Value_ST_TblWidth_auto = 90664;
-    const QName_t LN_CT_Height_val = 90665;
-    const QName_t LN_CT_Height_hRule = 90666;
-    const QName_t LN_CT_TblWidth_w = 90667;
-    const QName_t LN_CT_TblWidth_type = 90668;
-    const QName_t LN_CT_TblGridBase_gridCol = 90669;
-    const QName_t LN_CT_TblGrid_tblGridChange = 90670;
-    const QName_t LN_CT_TcBorders_top = 90671;
-    const QName_t LN_CT_TcBorders_left = 90672;
-    const QName_t LN_CT_TcBorders_bottom = 90673;
-    const QName_t LN_CT_TcBorders_right = 90674;
-    const QName_t LN_CT_TcBorders_insideH = 90675;
-    const QName_t LN_CT_TcBorders_insideV = 90676;
-    const QName_t LN_CT_TcBorders_tl2br = 90677;
-    const QName_t LN_CT_TcBorders_tr2bl = 90678;
-    const QName_t LN_CT_TcMar_top = 90679;
-    const QName_t LN_CT_TcMar_left = 90680;
-    const QName_t LN_CT_TcMar_bottom = 90681;
-    const QName_t LN_CT_TcMar_right = 90682;
-    const QName_t LN_Value_ST_Merge_continue = 90683;
-    const QName_t LN_Value_ST_Merge_restart = 90684;
-    const QName_t LN_CT_TcPrBase_cnfStyle = 90685;
-    const QName_t LN_CT_TcPrBase_tcW = 90686;
-    const QName_t LN_CT_TcPrBase_gridSpan = 90687;
-    const QName_t LN_CT_TcPrBase_hMerge = 90688;
-    const QName_t LN_CT_TcPrBase_vMerge = 90689;
-    const QName_t LN_CT_TcPrBase_tcBorders = 90690;
-    const QName_t LN_CT_TcPrBase_shd = 90691;
-    const QName_t LN_CT_TcPrBase_noWrap = 90692;
-    const QName_t LN_CT_TcPrBase_tcMar = 90693;
-    const QName_t LN_CT_TcPrBase_textDirection = 90694;
-    const QName_t LN_CT_TcPrBase_tcFitText = 90695;
-    const QName_t LN_CT_TcPrBase_vAlign = 90696;
-    const QName_t LN_CT_TcPrBase_hideMark = 90697;
-    const QName_t LN_CT_TrPrBase_cnfStyle = 90698;
-    const QName_t LN_CT_TrPrBase_divId = 90699;
-    const QName_t LN_CT_TrPrBase_gridBefore = 90700;
-    const QName_t LN_CT_TrPrBase_gridAfter = 90701;
-    const QName_t LN_CT_TrPrBase_wBefore = 90702;
-    const QName_t LN_CT_TrPrBase_wAfter = 90703;
-    const QName_t LN_CT_TrPrBase_trHeight = 90705;
-    const QName_t LN_CT_TrPrBase_tblHeader = 90706;
-    const QName_t LN_CT_TrPrBase_tblCellSpacing = 90707;
-    const QName_t LN_CT_TrPrBase_jc = 90708;
-    const QName_t LN_CT_TrPrBase_hidden = 90709;
-    const QName_t LN_Value_ST_TblOverlap_never = 90710;
-    const QName_t LN_Value_ST_TblOverlap_overlap = 90711;
-    const QName_t LN_CT_TblBorders_top = 90712;
-    const QName_t LN_CT_TblBorders_left = 90713;
-    const QName_t LN_CT_TblBorders_bottom = 90714;
-    const QName_t LN_CT_TblBorders_right = 90715;
-    const QName_t LN_CT_TblBorders_insideH = 90716;
-    const QName_t LN_CT_TblBorders_insideV = 90717;
-    const QName_t LN_CT_TblPrBase_tblStyle = 90718;
-    const QName_t LN_CT_TblPrBase_tblpPr = 90719;
-    const QName_t LN_CT_TblPrBase_tblOverlap = 90720;
-    const QName_t LN_CT_TblPrBase_bidiVisual = 90721;
-    const QName_t LN_CT_TblPrBase_tblStyleRowBandSize = 90722;
-    const QName_t LN_CT_TblPrBase_tblStyleColBandSize = 90723;
-    const QName_t LN_CT_TblPrBase_tblW = 90724;
-    const QName_t LN_CT_TblPrBase_jc = 90725;
-    const QName_t LN_CT_TblPrBase_tblCellSpacing = 90726;
-    const QName_t LN_CT_TblPrBase_tblInd = 90727;
-    const QName_t LN_CT_TblPrBase_tblBorders = 90728;
-    const QName_t LN_CT_TblPrBase_shd = 90729;
-    const QName_t LN_CT_TblPrBase_tblLayout = 90730;
-    const QName_t LN_CT_TblPrBase_tblCellMar = 90731;
-    const QName_t LN_CT_TblPrBase_tblLook = 90732;
-    const QName_t LN_CT_TblPr_tblPrChange = 90733;
-    const QName_t LN_Value_ST_FtnPos_pageBottom = 90734;
-    const QName_t LN_Value_ST_FtnPos_beneathText = 90735;
-    const QName_t LN_Value_ST_FtnPos_sectEnd = 90736;
-    const QName_t LN_Value_ST_FtnPos_docEnd = 90737;
-    const QName_t LN_CT_FtnPos_val = 90738;
-    const QName_t LN_Value_ST_EdnPos_sectEnd = 90739;
-    const QName_t LN_Value_ST_EdnPos_docEnd = 90740;
-    const QName_t LN_CT_EdnPos_val = 90741;
-    const QName_t LN_CT_NumFmt_val = 90742;
-    const QName_t LN_Value_ST_RestartNumber_continuous = 90743;
-    const QName_t LN_Value_ST_RestartNumber_eachSect = 90744;
-    const QName_t LN_Value_ST_RestartNumber_eachPage = 90745;
-    const QName_t LN_CT_NumRestart_val = 90746;
-    const QName_t LN_CT_FtnEdnRef_customMarkFollows = 90747;
-    const QName_t LN_CT_FtnEdnRef_id = 90748;
-    const QName_t LN_EG_FtnEdnNumProps_numStart = 90750;
-    const QName_t LN_EG_FtnEdnNumProps_numRestart = 90751;
-    const QName_t LN_CT_FtnProps_pos = 90752;
-    const QName_t LN_CT_FtnProps_numFmt = 90753;
-    const QName_t LN_CT_EdnProps_pos = 90754;
-    const QName_t LN_CT_EdnProps_numFmt = 90755;
-    const QName_t LN_CT_RPrDefault_rPr = 90756;
-    const QName_t LN_CT_PPrDefault_pPr = 90757;
-    const QName_t LN_CT_DocDefaults_pPrDefault = 90758;
-    const QName_t LN_CT_DocDefaults_rPrDefault = 90759;
-    const QName_t LN_CT_LevelText_val = 90760;
-    const QName_t LN_CT_LevelText_null = 90761;
-    const QName_t LN_CT_LvlLegacy_legacy = 90762;
-    const QName_t LN_CT_LvlLegacy_legacySpace = 90763;
-    const QName_t LN_CT_LvlLegacy_legacyIndent = 90764;
-    const QName_t LN_CT_Lvl_lvlRestart = 90767;
-    const QName_t LN_CT_Lvl_pStyle = 90768;
-    const QName_t LN_CT_Lvl_suff = 90770;
-    const QName_t LN_CT_Lvl_lvlText = 90771;
-    const QName_t LN_CT_Lvl_lvlPicBulletId = 90772;
-    const QName_t LN_CT_Lvl_lvlJc = 90774;
-    const QName_t LN_CT_Lvl_pPr = 90775;
-    const QName_t LN_CT_Lvl_rPr = 90776;
-    const QName_t LN_CT_Lvl_ilvl = 90777;
-    const QName_t LN_CT_Lvl_tplc = 90778;
-    const QName_t LN_CT_Lvl_tentative = 90779;
-    const QName_t LN_Value_ST_MultiLevelType_singleLevel = 90780;
-    const QName_t LN_Value_ST_MultiLevelType_multilevel = 90781;
-    const QName_t LN_Value_ST_MultiLevelType_hybridMultilevel = 90782;
-    const QName_t LN_CT_AbstractNum_multiLevelType = 90784;
-    const QName_t LN_CT_AbstractNum_name = 90786;
-    const QName_t LN_CT_AbstractNum_styleLink = 90787;
-    const QName_t LN_CT_AbstractNum_numStyleLink = 90788;
-    const QName_t LN_CT_AbstractNum_lvl = 90789;
-    const QName_t LN_CT_AbstractNum_abstractNumId = 90790;
-    const QName_t LN_CT_NumLvl_startOverride = 90791;
-    const QName_t LN_CT_NumLvl_lvl = 90792;
-    const QName_t LN_CT_NumLvl_ilvl = 90793;
-    const QName_t LN_CT_Num_abstractNumId = 90794;
-    const QName_t LN_CT_Num_lvlOverride = 90795;
-    const QName_t LN_CT_Num_numId = 90796;
-    const QName_t LN_CT_Numbering_numPicBullet = 90797;
-    const QName_t LN_CT_Numbering_abstractNum = 90798;
-    const QName_t LN_CT_Numbering_num = 90799;
-    const QName_t LN_CT_Numbering_numIdMacAtCleanup = 90800;
-    const QName_t LN_CT_Style_name = 90805;
-    const QName_t LN_CT_Style_aliases = 90806;
-    const QName_t LN_CT_Style_basedOn = 90807;
-    const QName_t LN_CT_Style_next = 90808;
-    const QName_t LN_CT_Style_link = 90809;
-    const QName_t LN_CT_Style_autoRedefine = 90810;
-    const QName_t LN_CT_Style_hidden = 90811;
-    const QName_t LN_CT_Style_uiPriority = 90812;
-    const QName_t LN_CT_Style_semiHidden = 90813;
-    const QName_t LN_CT_Style_unhideWhenUsed = 90814;
-    const QName_t LN_CT_Style_qFormat = 90815;
-    const QName_t LN_CT_Style_locked = 90816;
-    const QName_t LN_CT_Style_personal = 90817;
-    const QName_t LN_CT_Style_personalCompose = 90818;
-    const QName_t LN_CT_Style_personalReply = 90819;
-    const QName_t LN_CT_Style_rsid = 90820;
-    const QName_t LN_CT_Style_pPr = 90821;
-    const QName_t LN_CT_Style_rPr = 90822;
-    const QName_t LN_CT_Style_tblPr = 90823;
-    const QName_t LN_CT_Style_trPr = 90824;
-    const QName_t LN_CT_Style_tcPr = 90825;
-    const QName_t LN_CT_Style_tblStylePr = 90826;
-    const QName_t LN_CT_Style_type = 90827;
-    const QName_t LN_CT_Style_styleId = 90828;
-    const QName_t LN_CT_Style_default = 90829;
-    const QName_t LN_CT_Style_customStyle = 90830;
-    const QName_t LN_Value_ST_FontFamily_decorative = 90831;
-    const QName_t LN_Value_ST_FontFamily_modern = 90832;
-    const QName_t LN_Value_ST_FontFamily_roman = 90833;
-    const QName_t LN_Value_ST_FontFamily_script = 90834;
-    const QName_t LN_Value_ST_FontFamily_swiss = 90835;
-    const QName_t LN_Value_ST_FontFamily_auto = 90836;
-    const QName_t LN_Value_ST_Pitch_fixed = 90837;
-    const QName_t LN_Value_ST_Pitch_variable = 90838;
-    const QName_t LN_Value_ST_Pitch_default = 90839;
-    const QName_t LN_CT_FontSig_usb0 = 90840;
-    const QName_t LN_CT_FontSig_usb1 = 90841;
-    const QName_t LN_CT_FontSig_usb2 = 90842;
-    const QName_t LN_CT_FontSig_usb3 = 90843;
-    const QName_t LN_CT_FontSig_csb0 = 90844;
-    const QName_t LN_CT_FontSig_csb1 = 90845;
-    const QName_t LN_CT_FontRel_fontKey = 90846;
-    const QName_t LN_CT_FontRel_subsetted = 90847;
-    const QName_t LN_CT_Font_altName = 90848;
-    const QName_t LN_CT_Font_panose1 = 90849;
-    const QName_t LN_CT_Font_charset = 90850;
-    const QName_t LN_CT_Font_family = 90851;
-    const QName_t LN_CT_Font_notTrueType = 90852;
-    const QName_t LN_CT_Font_pitch = 90853;
-    const QName_t LN_CT_Font_sig = 90854;
-    const QName_t LN_CT_Font_embedRegular = 90855;
-    const QName_t LN_CT_Font_embedBold = 90856;
-    const QName_t LN_CT_Font_embedItalic = 90857;
-    const QName_t LN_CT_Font_embedBoldItalic = 90858;
-    const QName_t LN_CT_Font_name = 90859;
-    const QName_t LN_Value_St_ThemeColor_dark1 = 90860;
-    const QName_t LN_Value_St_ThemeColor_light1 = 90861;
-    const QName_t LN_Value_St_ThemeColor_dark2 = 90862;
-    const QName_t LN_Value_St_ThemeColor_light2 = 90863;
-    const QName_t LN_Value_St_ThemeColor_accent1 = 90864;
-    const QName_t LN_Value_St_ThemeColor_accent2 = 90865;
-    const QName_t LN_Value_St_ThemeColor_accent3 = 90866;
-    const QName_t LN_Value_St_ThemeColor_accent4 = 90867;
-    const QName_t LN_Value_St_ThemeColor_accent5 = 90868;
-    const QName_t LN_Value_St_ThemeColor_accent6 = 90869;
-    const QName_t LN_Value_St_ThemeColor_hyperlink = 90870;
-    const QName_t LN_Value_St_ThemeColor_followedHyperlink = 90871;
-    const QName_t LN_Value_St_ThemeColor_none = 90872;
-    const QName_t LN_Value_St_ThemeColor_background1 = 90873;
-    const QName_t LN_Value_St_ThemeColor_text1 = 90874;
-    const QName_t LN_Value_St_ThemeColor_background2 = 90875;
-    const QName_t LN_Value_St_ThemeColor_text2 = 90876;
+    const QName_t LN_CT_TileInfoProperties_tx = 90001;
+    const QName_t LN_CT_TileInfoProperties_ty = 90002;
+    const QName_t LN_CT_TileInfoProperties_sx = 90003;
+    const QName_t LN_CT_TileInfoProperties_sy = 90004;
+    const QName_t LN_CT_TileInfoProperties_flip = 90005;
+    const QName_t LN_CT_TileInfoProperties_algn = 90006;
+    const QName_t LN_CT_StretchInfoProperties_fillRect = 90007;
+    const QName_t LN_EG_FillModeProperties_tile = 90008;
+    const QName_t LN_EG_FillModeProperties_stretch = 90009;
+    const QName_t LN_CT_Blip_alphaBiLevel = 90010;
+    const QName_t LN_CT_Blip_alphaCeiling = 90011;
+    const QName_t LN_CT_Blip_alphaFloor = 90012;
+    const QName_t LN_CT_Blip_alphaInv = 90013;
+    const QName_t LN_CT_Blip_alphaMod = 90014;
+    const QName_t LN_CT_Blip_alphaModFix = 90015;
+    const QName_t LN_CT_Blip_alphaRepl = 90016;
+    const QName_t LN_CT_Blip_biLevel = 90017;
+    const QName_t LN_CT_Blip_blur = 90018;
+    const QName_t LN_CT_Blip_clrChange = 90019;
+    const QName_t LN_CT_Blip_clrRepl = 90020;
+    const QName_t LN_CT_Blip_duotone = 90021;
+    const QName_t LN_CT_Blip_fillOverlay = 90022;
+    const QName_t LN_CT_Blip_grayscl = 90023;
+    const QName_t LN_CT_Blip_hsl = 90024;
+    const QName_t LN_CT_Blip_lum = 90025;
+    const QName_t LN_CT_Blip_tint = 90026;
+    const QName_t LN_CT_Blip_extLst = 90027;
+    const QName_t LN_CT_Blip_cstate = 90028;
+    const QName_t LN_CT_BlipFillProperties_blip = 90029;
+    const QName_t LN_CT_BlipFillProperties_srcRect = 90030;
+    const QName_t LN_CT_BlipFillProperties_dpi = 90031;
+    const QName_t LN_CT_BlipFillProperties_rotWithShape = 90032;
+    const QName_t LN_EG_Effect_cont = 90033;
+    const QName_t LN_EG_Effect_effect = 90034;
+    const QName_t LN_EG_Effect_alphaBiLevel = 90035;
+    const QName_t LN_EG_Effect_alphaCeiling = 90036;
+    const QName_t LN_EG_Effect_alphaFloor = 90037;
+    const QName_t LN_EG_Effect_alphaInv = 90038;
+    const QName_t LN_EG_Effect_alphaMod = 90039;
+    const QName_t LN_EG_Effect_alphaModFix = 90040;
+    const QName_t LN_EG_Effect_alphaOutset = 90041;
+    const QName_t LN_EG_Effect_alphaRepl = 90042;
+    const QName_t LN_EG_Effect_biLevel = 90043;
+    const QName_t LN_EG_Effect_blend = 90044;
+    const QName_t LN_EG_Effect_blur = 90045;
+    const QName_t LN_EG_Effect_clrChange = 90046;
+    const QName_t LN_EG_Effect_clrRepl = 90047;
+    const QName_t LN_EG_Effect_duotone = 90048;
+    const QName_t LN_EG_Effect_fill = 90049;
+    const QName_t LN_EG_Effect_fillOverlay = 90050;
+    const QName_t LN_EG_Effect_glow = 90051;
+    const QName_t LN_EG_Effect_grayscl = 90052;
+    const QName_t LN_EG_Effect_hsl = 90053;
+    const QName_t LN_EG_Effect_innerShdw = 90054;
+    const QName_t LN_EG_Effect_lum = 90055;
+    const QName_t LN_EG_Effect_outerShdw = 90056;
+    const QName_t LN_EG_Effect_prstShdw = 90057;
+    const QName_t LN_EG_Effect_reflection = 90058;
+    const QName_t LN_EG_Effect_relOff = 90059;
+    const QName_t LN_EG_Effect_softEdge = 90060;
+    const QName_t LN_EG_Effect_tint = 90061;
+    const QName_t LN_EG_Effect_xfrm = 90062;
+    const QName_t LN_CT_ShapeProperties_xfrm = 90063;
+    const QName_t LN_CT_ShapeProperties_ln = 90064;
+    const QName_t LN_CT_ShapeProperties_scene3d = 90065;
+    const QName_t LN_CT_ShapeProperties_sp3d = 90066;
+    const QName_t LN_CT_ShapeProperties_extLst = 90067;
+    const QName_t LN_CT_ShapeProperties_bwMode = 90068;
+    const QName_t LN_CT_Point2D_x = 90069;
+    const QName_t LN_CT_Point2D_y = 90070;
+    const QName_t LN_CT_PositiveSize2D_cx = 90071;
+    const QName_t LN_CT_PositiveSize2D_cy = 90072;
+    const QName_t LN_CT_Transform2D_off = 90073;
+    const QName_t LN_CT_Transform2D_ext = 90074;
+    const QName_t LN_CT_Transform2D_rot = 90075;
+    const QName_t LN_CT_Transform2D_flipH = 90076;
+    const QName_t LN_CT_Transform2D_flipV = 90077;
+    const QName_t LN_AG_Blob_r_embed = 90078;
+    const QName_t LN_AG_Blob_r_link = 90079;
+    const QName_t LN_CT_GraphicalObjectFrameLocking_extLst = 90080;
+    const QName_t LN_CT_GraphicalObjectFrameLocking_noGrp = 90081;
+    const QName_t LN_CT_GraphicalObjectFrameLocking_noDrilldown = 90082;
+    const QName_t LN_CT_GraphicalObjectFrameLocking_noSelect = 90083;
+    const QName_t LN_CT_GraphicalObjectFrameLocking_noChangeAspect = 90084;
+    const QName_t LN_CT_GraphicalObjectFrameLocking_noMove = 90085;
+    const QName_t LN_CT_GraphicalObjectFrameLocking_noResize = 90086;
+    const QName_t LN_CT_NonVisualDrawingProps_hlinkClick = 90087;
+    const QName_t LN_CT_NonVisualDrawingProps_hlinkHover = 90088;
+    const QName_t LN_CT_NonVisualDrawingProps_extLst = 90089;
+    const QName_t LN_CT_NonVisualDrawingProps_id = 90090;
+    const QName_t LN_CT_NonVisualDrawingProps_name = 90091;
+    const QName_t LN_CT_NonVisualDrawingProps_descr = 90092;
+    const QName_t LN_CT_NonVisualDrawingProps_hidden = 90093;
+    const QName_t LN_CT_NonVisualPictureProperties_picLocks = 90094;
+    const QName_t LN_CT_NonVisualPictureProperties_extLst = 90095;
+    const QName_t LN_CT_NonVisualPictureProperties_preferRelativeResize = 90096;
+    const QName_t LN_CT_NonVisualGraphicFrameProperties_graphicFrameLocks = 90097;
+    const QName_t LN_CT_NonVisualGraphicFrameProperties_extLst = 90098;
+    const QName_t LN_CT_GraphicalObjectData_ = 90099;
+    const QName_t LN_CT_GraphicalObjectData_uri = 90100;
+    const QName_t LN_CT_GraphicalObject_graphicData = 90101;
+    const QName_t LN_Value_ST_ShapeType_line = 90102;
+    const QName_t LN_Value_ST_ShapeType_lineInv = 90103;
+    const QName_t LN_Value_ST_ShapeType_triangle = 90104;
+    const QName_t LN_Value_ST_ShapeType_rtTriangle = 90105;
+    const QName_t LN_Value_ST_ShapeType_rect = 90106;
+    const QName_t LN_Value_ST_ShapeType_diamond = 90107;
+    const QName_t LN_Value_ST_ShapeType_parallelogram = 90108;
+    const QName_t LN_Value_ST_ShapeType_trapezoid = 90109;
+    const QName_t LN_Value_ST_ShapeType_nonIsoscelesTrapezoid = 90110;
+    const QName_t LN_Value_ST_ShapeType_pentagon = 90111;
+    const QName_t LN_Value_ST_ShapeType_hexagon = 90112;
+    const QName_t LN_Value_ST_ShapeType_heptagon = 90113;
+    const QName_t LN_Value_ST_ShapeType_octagon = 90114;
+    const QName_t LN_Value_ST_ShapeType_decagon = 90115;
+    const QName_t LN_Value_ST_ShapeType_dodecagon = 90116;
+    const QName_t LN_Value_ST_ShapeType_star4 = 90117;
+    const QName_t LN_Value_ST_ShapeType_star5 = 90118;
+    const QName_t LN_Value_ST_ShapeType_star6 = 90119;
+    const QName_t LN_Value_ST_ShapeType_star7 = 90120;
+    const QName_t LN_Value_ST_ShapeType_star8 = 90121;
+    const QName_t LN_Value_ST_ShapeType_star10 = 90122;
+    const QName_t LN_Value_ST_ShapeType_star12 = 90123;
+    const QName_t LN_Value_ST_ShapeType_star16 = 90124;
+    const QName_t LN_Value_ST_ShapeType_star24 = 90125;
+    const QName_t LN_Value_ST_ShapeType_star32 = 90126;
+    const QName_t LN_Value_ST_ShapeType_roundRect = 90127;
+    const QName_t LN_Value_ST_ShapeType_round1Rect = 90128;
+    const QName_t LN_Value_ST_ShapeType_round2SameRect = 90129;
+    const QName_t LN_Value_ST_ShapeType_round2DiagRect = 90130;
+    const QName_t LN_Value_ST_ShapeType_snipRoundRect = 90131;
+    const QName_t LN_Value_ST_ShapeType_snip1Rect = 90132;
+    const QName_t LN_Value_ST_ShapeType_snip2SameRect = 90133;
+    const QName_t LN_Value_ST_ShapeType_snip2DiagRect = 90134;
+    const QName_t LN_Value_ST_ShapeType_plaque = 90135;
+    const QName_t LN_Value_ST_ShapeType_ellipse = 90136;
+    const QName_t LN_Value_ST_ShapeType_teardrop = 90137;
+    const QName_t LN_Value_ST_ShapeType_homePlate = 90138;
+    const QName_t LN_Value_ST_ShapeType_chevron = 90139;
+    const QName_t LN_Value_ST_ShapeType_pieWedge = 90140;
+    const QName_t LN_Value_ST_ShapeType_pie = 90141;
+    const QName_t LN_Value_ST_ShapeType_blockArc = 90142;
+    const QName_t LN_Value_ST_ShapeType_donut = 90143;
+    const QName_t LN_Value_ST_ShapeType_noSmoking = 90144;
+    const QName_t LN_Value_ST_ShapeType_rightArrow = 90145;
+    const QName_t LN_Value_ST_ShapeType_leftArrow = 90146;
+    const QName_t LN_Value_ST_ShapeType_upArrow = 90147;
+    const QName_t LN_Value_ST_ShapeType_downArrow = 90148;
+    const QName_t LN_Value_ST_ShapeType_stripedRightArrow = 90149;
+    const QName_t LN_Value_ST_ShapeType_notchedRightArrow = 90150;
+    const QName_t LN_Value_ST_ShapeType_bentUpArrow = 90151;
+    const QName_t LN_Value_ST_ShapeType_leftRightArrow = 90152;
+    const QName_t LN_Value_ST_ShapeType_upDownArrow = 90153;
+    const QName_t LN_Value_ST_ShapeType_leftUpArrow = 90154;
+    const QName_t LN_Value_ST_ShapeType_leftRightUpArrow = 90155;
+    const QName_t LN_Value_ST_ShapeType_quadArrow = 90156;
+    const QName_t LN_Value_ST_ShapeType_leftArrowCallout = 90157;
+    const QName_t LN_Value_ST_ShapeType_rightArrowCallout = 90158;
+    const QName_t LN_Value_ST_ShapeType_upArrowCallout = 90159;
+    const QName_t LN_Value_ST_ShapeType_downArrowCallout = 90160;
+    const QName_t LN_Value_ST_ShapeType_leftRightArrowCallout = 90161;
+    const QName_t LN_Value_ST_ShapeType_upDownArrowCallout = 90162;
+    const QName_t LN_Value_ST_ShapeType_quadArrowCallout = 90163;
+    const QName_t LN_Value_ST_ShapeType_bentArrow = 90164;
+    const QName_t LN_Value_ST_ShapeType_uturnArrow = 90165;
+    const QName_t LN_Value_ST_ShapeType_circularArrow = 90166;
+    const QName_t LN_Value_ST_ShapeType_leftCircularArrow = 90167;
+    const QName_t LN_Value_ST_ShapeType_leftRightCircularArrow = 90168;
+    const QName_t LN_Value_ST_ShapeType_curvedRightArrow = 90169;
+    const QName_t LN_Value_ST_ShapeType_curvedLeftArrow = 90170;
+    const QName_t LN_Value_ST_ShapeType_curvedUpArrow = 90171;
+    const QName_t LN_Value_ST_ShapeType_curvedDownArrow = 90172;
+    const QName_t LN_Value_ST_ShapeType_swooshArrow = 90173;
+    const QName_t LN_Value_ST_ShapeType_cube = 90174;
+    const QName_t LN_Value_ST_ShapeType_can = 90175;
+    const QName_t LN_Value_ST_ShapeType_lightningBolt = 90176;
+    const QName_t LN_Value_ST_ShapeType_heart = 90177;
+    const QName_t LN_Value_ST_ShapeType_sun = 90178;
+    const QName_t LN_Value_ST_ShapeType_moon = 90179;
+    const QName_t LN_Value_ST_ShapeType_smileyFace = 90180;
+    const QName_t LN_Value_ST_ShapeType_irregularSeal1 = 90181;
+    const QName_t LN_Value_ST_ShapeType_irregularSeal2 = 90182;
+    const QName_t LN_Value_ST_ShapeType_foldedCorner = 90183;
+    const QName_t LN_Value_ST_ShapeType_bevel = 90184;
+    const QName_t LN_Value_ST_ShapeType_frame = 90185;
+    const QName_t LN_Value_ST_ShapeType_halfFrame = 90186;
+    const QName_t LN_Value_ST_ShapeType_corner = 90187;
+    const QName_t LN_Value_ST_ShapeType_diagStripe = 90188;
+    const QName_t LN_Value_ST_ShapeType_chord = 90189;
+    const QName_t LN_Value_ST_ShapeType_arc = 90190;
+    const QName_t LN_Value_ST_ShapeType_leftBracket = 90191;
+    const QName_t LN_Value_ST_ShapeType_rightBracket = 90192;
+    const QName_t LN_Value_ST_ShapeType_leftBrace = 90193;
+    const QName_t LN_Value_ST_ShapeType_rightBrace = 90194;
+    const QName_t LN_Value_ST_ShapeType_bracketPair = 90195;
+    const QName_t LN_Value_ST_ShapeType_bracePair = 90196;
+    const QName_t LN_Value_ST_ShapeType_straightConnector1 = 90197;
+    const QName_t LN_Value_ST_ShapeType_bentConnector2 = 90198;
+    const QName_t LN_Value_ST_ShapeType_bentConnector3 = 90199;
+    const QName_t LN_Value_ST_ShapeType_bentConnector4 = 90200;
+    const QName_t LN_Value_ST_ShapeType_bentConnector5 = 90201;
+    const QName_t LN_Value_ST_ShapeType_curvedConnector2 = 90202;
+    const QName_t LN_Value_ST_ShapeType_curvedConnector3 = 90203;
+    const QName_t LN_Value_ST_ShapeType_curvedConnector4 = 90204;
+    const QName_t LN_Value_ST_ShapeType_curvedConnector5 = 90205;
+    const QName_t LN_Value_ST_ShapeType_callout1 = 90206;
+    const QName_t LN_Value_ST_ShapeType_callout2 = 90207;
+    const QName_t LN_Value_ST_ShapeType_callout3 = 90208;
+    const QName_t LN_Value_ST_ShapeType_accentCallout1 = 90209;
+    const QName_t LN_Value_ST_ShapeType_accentCallout2 = 90210;
+    const QName_t LN_Value_ST_ShapeType_accentCallout3 = 90211;
+    const QName_t LN_Value_ST_ShapeType_borderCallout1 = 90212;
+    const QName_t LN_Value_ST_ShapeType_borderCallout2 = 90213;
+    const QName_t LN_Value_ST_ShapeType_borderCallout3 = 90214;
+    const QName_t LN_Value_ST_ShapeType_accentBorderCallout1 = 90215;
+    const QName_t LN_Value_ST_ShapeType_accentBorderCallout2 = 90216;
+    const QName_t LN_Value_ST_ShapeType_accentBorderCallout3 = 90217;
+    const QName_t LN_Value_ST_ShapeType_wedgeRectCallout = 90218;
+    const QName_t LN_Value_ST_ShapeType_wedgeRoundRectCallout = 90219;
+    const QName_t LN_Value_ST_ShapeType_wedgeEllipseCallout = 90220;
+    const QName_t LN_Value_ST_ShapeType_cloudCallout = 90221;
+    const QName_t LN_Value_ST_ShapeType_cloud = 90222;
+    const QName_t LN_Value_ST_ShapeType_ribbon = 90223;
+    const QName_t LN_Value_ST_ShapeType_ribbon2 = 90224;
+    const QName_t LN_Value_ST_ShapeType_ellipseRibbon = 90225;
+    const QName_t LN_Value_ST_ShapeType_ellipseRibbon2 = 90226;
+    const QName_t LN_Value_ST_ShapeType_leftRightRibbon = 90227;
+    const QName_t LN_Value_ST_ShapeType_verticalScroll = 90228;
+    const QName_t LN_Value_ST_ShapeType_horizontalScroll = 90229;
+    const QName_t LN_Value_ST_ShapeType_wave = 90230;
+    const QName_t LN_Value_ST_ShapeType_doubleWave = 90231;
+    const QName_t LN_Value_ST_ShapeType_plus = 90232;
+    const QName_t LN_Value_ST_ShapeType_flowChartProcess = 90233;
+    const QName_t LN_Value_ST_ShapeType_flowChartDecision = 90234;
+    const QName_t LN_Value_ST_ShapeType_flowChartInputOutput = 90235;
+    const QName_t LN_Value_ST_ShapeType_flowChartPredefinedProcess = 90236;
+    const QName_t LN_Value_ST_ShapeType_flowChartInternalStorage = 90237;
+    const QName_t LN_Value_ST_ShapeType_flowChartDocument = 90238;
+    const QName_t LN_Value_ST_ShapeType_flowChartMultidocument = 90239;
+    const QName_t LN_Value_ST_ShapeType_flowChartTerminator = 90240;
+    const QName_t LN_Value_ST_ShapeType_flowChartPreparation = 90241;
+    const QName_t LN_Value_ST_ShapeType_flowChartManualInput = 90242;
+    const QName_t LN_Value_ST_ShapeType_flowChartManualOperation = 90243;
+    const QName_t LN_Value_ST_ShapeType_flowChartConnector = 90244;
+    const QName_t LN_Value_ST_ShapeType_flowChartPunchedCard = 90245;
+    const QName_t LN_Value_ST_ShapeType_flowChartPunchedTape = 90246;
+    const QName_t LN_Value_ST_ShapeType_flowChartSummingJunction = 90247;
+    const QName_t LN_Value_ST_ShapeType_flowChartOr = 90248;
+    const QName_t LN_Value_ST_ShapeType_flowChartCollate = 90249;
+    const QName_t LN_Value_ST_ShapeType_flowChartSort = 90250;
+    const QName_t LN_Value_ST_ShapeType_flowChartExtract = 90251;
+    const QName_t LN_Value_ST_ShapeType_flowChartMerge = 90252;
+    const QName_t LN_Value_ST_ShapeType_flowChartOfflineStorage = 90253;
+    const QName_t LN_Value_ST_ShapeType_flowChartOnlineStorage = 90254;
+    const QName_t LN_Value_ST_ShapeType_flowChartMagneticTape = 90255;
+    const QName_t LN_Value_ST_ShapeType_flowChartMagneticDisk = 90256;
+    const QName_t LN_Value_ST_ShapeType_flowChartMagneticDrum = 90257;
+    const QName_t LN_Value_ST_ShapeType_flowChartDisplay = 90258;
+    const QName_t LN_Value_ST_ShapeType_flowChartDelay = 90259;
+    const QName_t LN_Value_ST_ShapeType_flowChartAlternateProcess = 90260;
+    const QName_t LN_Value_ST_ShapeType_flowChartOffpageConnector = 90261;
+    const QName_t LN_Value_ST_ShapeType_actionButtonBlank = 90262;
+    const QName_t LN_Value_ST_ShapeType_actionButtonHome = 90263;
+    const QName_t LN_Value_ST_ShapeType_actionButtonHelp = 90264;
+    const QName_t LN_Value_ST_ShapeType_actionButtonInformation = 90265;
+    const QName_t LN_Value_ST_ShapeType_actionButtonForwardNext = 90266;
+    const QName_t LN_Value_ST_ShapeType_actionButtonBackPrevious = 90267;
+    const QName_t LN_Value_ST_ShapeType_actionButtonEnd = 90268;
+    const QName_t LN_Value_ST_ShapeType_actionButtonBeginning = 90269;
+    const QName_t LN_Value_ST_ShapeType_actionButtonReturn = 90270;
+    const QName_t LN_Value_ST_ShapeType_actionButtonDocument = 90271;
+    const QName_t LN_Value_ST_ShapeType_actionButtonSound = 90272;
+    const QName_t LN_Value_ST_ShapeType_actionButtonMovie = 90273;
+    const QName_t LN_Value_ST_ShapeType_gear6 = 90274;
+    const QName_t LN_Value_ST_ShapeType_gear9 = 90275;
+    const QName_t LN_Value_ST_ShapeType_funnel = 90276;
+    const QName_t LN_Value_ST_ShapeType_mathPlus = 90277;
+    const QName_t LN_Value_ST_ShapeType_mathMinus = 90278;
+    const QName_t LN_Value_ST_ShapeType_mathMultiply = 90279;
+    const QName_t LN_Value_ST_ShapeType_mathDivide = 90280;
+    const QName_t LN_Value_ST_ShapeType_mathEqual = 90281;
+    const QName_t LN_Value_ST_ShapeType_mathNotEqual = 90282;
+    const QName_t LN_Value_ST_ShapeType_cornerTabs = 90283;
+    const QName_t LN_Value_ST_ShapeType_squareTabs = 90284;
+    const QName_t LN_Value_ST_ShapeType_plaqueTabs = 90285;
+    const QName_t LN_Value_ST_ShapeType_chartX = 90286;
+    const QName_t LN_Value_ST_ShapeType_chartStar = 90287;
+    const QName_t LN_Value_ST_ShapeType_chartPlus = 90288;
+    const QName_t LN_CT_GeomGuideList_gd = 90289;
+    const QName_t LN_CT_PresetGeometry2D_avLst = 90290;
+    const QName_t LN_CT_PresetGeometry2D_prst = 90291;
+    const QName_t LN_CT_CustomGeometry2D_avLst = 90292;
+    const QName_t LN_CT_CustomGeometry2D_gdLst = 90293;
+    const QName_t LN_CT_CustomGeometry2D_ahLst = 90294;
+    const QName_t LN_CT_CustomGeometry2D_cxnLst = 90295;
+    const QName_t LN_CT_CustomGeometry2D_rect = 90296;
+    const QName_t LN_CT_CustomGeometry2D_pathLst = 90297;
+    const QName_t LN_EG_Geometry_custGeom = 90298;
+    const QName_t LN_EG_Geometry_prstGeom = 90299;
+    const QName_t LN_CT_EffectExtent_l = 90300;
+    const QName_t LN_CT_EffectExtent_t = 90301;
+    const QName_t LN_CT_EffectExtent_r = 90302;
+    const QName_t LN_CT_EffectExtent_b = 90303;
+    const QName_t LN_CT_Inline_extent = 90304;
+    const QName_t LN_CT_Inline_effectExtent = 90305;
+    const QName_t LN_CT_Inline_docPr = 90306;
+    const QName_t LN_CT_Inline_cNvGraphicFramePr = 90307;
+    const QName_t LN_CT_Inline_a_graphic = 90308;
+    const QName_t LN_CT_Inline_distT = 90309;
+    const QName_t LN_CT_Inline_distB = 90310;
+    const QName_t LN_CT_Inline_distL = 90311;
+    const QName_t LN_CT_Inline_distR = 90312;
+    const QName_t LN_Value_ST_Style_b = 90313;
+    const QName_t LN_Value_ST_Style_bi = 90314;
+    const QName_t LN_Value_ST_Style_i = 90315;
+    const QName_t LN_Value_ST_Style_p = 90316;
+    const QName_t LN_CT_PictureNonVisual_cNvPr = 90317;
+    const QName_t LN_CT_PictureNonVisual_cNvPicPr = 90318;
+    const QName_t LN_CT_Highlight_val = 90336;
+    const QName_t LN_Value_ST_HexColorAuto_auto = 90337;
+    const QName_t LN_CT_Color_val = 90338;
+    const QName_t LN_CT_Color_themeColor = 90339;
+    const QName_t LN_CT_Color_themeTint = 90340;
+    const QName_t LN_CT_Color_themeShade = 90341;
+    const QName_t LN_CT_Lang_val = 90342;
+    const QName_t LN_CT_Guid_val = 90343;
+    const QName_t LN_CT_Underline_val = 90362;
+    const QName_t LN_CT_Underline_color = 90363;
+    const QName_t LN_CT_Underline_themeColor = 90364;
+    const QName_t LN_CT_Underline_themeTint = 90365;
+    const QName_t LN_CT_Underline_themeShade = 90366;
+    const QName_t LN_CT_TextEffect_val = 90374;
+    const QName_t LN_CT_Border_color = 90567;
+    const QName_t LN_CT_Border_themeColor = 90568;
+    const QName_t LN_CT_Border_themeTint = 90569;
+    const QName_t LN_CT_Border_themeShade = 90570;
+    const QName_t LN_CT_Shd_val = 90613;
+    const QName_t LN_CT_Shd_color = 90614;
+    const QName_t LN_CT_Shd_themeColor = 90615;
+    const QName_t LN_CT_Shd_themeTint = 90616;
+    const QName_t LN_CT_Shd_themeShade = 90617;
+    const QName_t LN_CT_Shd_fill = 90618;
+    const QName_t LN_CT_Shd_themeFill = 90619;
+    const QName_t LN_CT_Shd_themeFillTint = 90620;
+    const QName_t LN_CT_Shd_themeFillShade = 90621;
+    const QName_t LN_CT_Em_val = 90627;
+    const QName_t LN_CT_Language_val = 90628;
+    const QName_t LN_CT_Language_eastAsia = 90629;
+    const QName_t LN_CT_Language_bidi = 90630;
+    const QName_t LN_CT_EastAsianLayout_id = 90636;
+    const QName_t LN_CT_EastAsianLayout_combine = 90637;
+    const QName_t LN_CT_EastAsianLayout_combineBrackets = 90638;
+    const QName_t LN_CT_EastAsianLayout_vert = 90639;
+    const QName_t LN_CT_EastAsianLayout_vertCompress = 90640;
+    const QName_t LN_CT_FramePr_dropCap = 90641;
+    const QName_t LN_CT_FramePr_lines = 90642;
+    const QName_t LN_CT_FramePr_hAnchor = 90648;
+    const QName_t LN_CT_FramePr_vAnchor = 90649;
+    const QName_t LN_CT_FramePr_x = 90650;
+    const QName_t LN_CT_FramePr_xAlign = 90651;
+    const QName_t LN_CT_FramePr_y = 90652;
+    const QName_t LN_CT_FramePr_yAlign = 90653;
+    const QName_t LN_CT_FramePr_hRule = 90654;
+    const QName_t LN_Value_ST_TabJc_clear = 90656;
+    const QName_t LN_Value_ST_TabJc_num = 90662;
+    const QName_t LN_Value_ST_TabTlc_middleDot = 90668;
+    const QName_t LN_CT_TabStop_val = 90669;
+    const QName_t LN_CT_TabStop_leader = 90670;
+    const QName_t LN_CT_TabStop_pos = 90671;
+    const QName_t LN_CT_Spacing_before = 90672;
+    const QName_t LN_CT_Spacing_beforeLines = 90673;
+    const QName_t LN_CT_Spacing_beforeAutospacing = 90674;
+    const QName_t LN_CT_Spacing_after = 90675;
+    const QName_t LN_CT_Spacing_afterLines = 90676;
+    const QName_t LN_CT_Spacing_afterAutospacing = 90677;
+    const QName_t LN_CT_Spacing_line = 90678;
+    const QName_t LN_CT_Spacing_lineRule = 90679;
+    const QName_t LN_CT_Ind_left = 90680;
+    const QName_t LN_CT_Ind_leftChars = 90681;
+    const QName_t LN_CT_Ind_right = 90682;
+    const QName_t LN_CT_Ind_rightChars = 90683;
+    const QName_t LN_CT_Ind_hanging = 90684;
+    const QName_t LN_CT_Ind_hangingChars = 90685;
+    const QName_t LN_CT_Ind_firstLine = 90686;
+    const QName_t LN_CT_Ind_firstLineChars = 90687;
+    const QName_t LN_Value_ST_Jc_mediumKashida = 90692;
+    const QName_t LN_Value_ST_Jc_distribute = 90693;
+    const QName_t LN_Value_ST_Jc_numTab = 90694;
+    const QName_t LN_Value_ST_Jc_highKashida = 90695;
+    const QName_t LN_Value_ST_Jc_lowKashida = 90696;
+    const QName_t LN_Value_ST_Jc_thaiDistribute = 90697;
+    const QName_t LN_CT_Jc_val = 90698;
+    const QName_t LN_Value_ST_TextDirection_lrTb = 90699;
+    const QName_t LN_Value_ST_TextDirection_tbRl = 90700;
+    const QName_t LN_Value_ST_TextDirection_btLr = 90701;
+    const QName_t LN_Value_ST_TextDirection_lrTbV = 90702;
+    const QName_t LN_Value_ST_TextDirection_tbRlV = 90703;
+    const QName_t LN_Value_ST_TextDirection_tbLrV = 90704;
+    const QName_t LN_CT_Markup_id = 90705;
+    const QName_t LN_CT_TrackChange_author = 90706;
+    const QName_t LN_CT_TrackChange_date = 90707;
+    const QName_t LN_CT_MarkupRange_displacedByCustomXml = 90708;
+    const QName_t LN_CT_BookmarkRange_colFirst = 90710;
+    const QName_t LN_CT_BookmarkRange_colLast = 90711;
+    const QName_t LN_CT_Comment_initials = 90714;
+    const QName_t LN_CT_SectPrChange_sectPr = 90715;
+    const QName_t LN_CT_NumPr_numberingChange = 90718;
+    const QName_t LN_CT_NumPr_ins = 90719;
+    const QName_t LN_CT_Tabs_tab = 90726;
+    const QName_t LN_CT_PPrBase_pStyle = 90727;
+    const QName_t LN_CT_PPrBase_framePr = 90731;
+    const QName_t LN_CT_PPrBase_windowControl = 90732;
+    const QName_t LN_CT_PPrBase_numPr = 90733;
+    const QName_t LN_CT_PrBase_pBdr = 90735;
+    const QName_t LN_CT_PPrBase_tabs = 90737;
+    const QName_t LN_CT_PPrBase_kinsoku = 90739;
+    const QName_t LN_CT_PPrBase_wordWrap = 90740;
+    const QName_t LN_CT_PPrBase_adjustRightInd = 90746;
+    const QName_t LN_CT_PPrBase_snapToGrid = 90747;
+    const QName_t LN_CT_PPrBase_spacing = 90748;
+    const QName_t LN_CT_PPrBase_ind = 90749;
+    const QName_t LN_CT_PPrBase_divId = 90758;
+    const QName_t LN_CT_PPrBase_cnfStyle = 90759;
+    const QName_t LN_CT_PPr_rPr = 90760;
+    const QName_t LN_CT_PPr_sectPr = 90761;
+    const QName_t LN_CT_PPr_pPrChange = 90762;
+    const QName_t LN_CT_Rel_id = 90763;
+    const QName_t LN_CT_SimpleField_fldData = 90764;
+    const QName_t LN_CT_SimpleField_instr = 90765;
+    const QName_t LN_CT_SimpleField_fldLock = 90766;
+    const QName_t LN_CT_SimpleField_dirty = 90767;
+    const QName_t LN_Value_ST_FldCharType_begin = 90768;
+    const QName_t LN_Value_ST_FldCharType_separate = 90769;
+    const QName_t LN_Value_ST_FldCharType_end = 90770;
+    const QName_t LN_CT_FldChar_fldData = 90771;
+    const QName_t LN_CT_FldChar_ffData = 90772;
+    const QName_t LN_CT_FldChar_numberingChange = 90773;
+    const QName_t LN_CT_FldChar_fldCharType = 90774;
+    const QName_t LN_CT_FldChar_fldLock = 90775;
+    const QName_t LN_CT_FldChar_dirty = 90776;
+    const QName_t LN_Value_ST_NumberFormat_decimal = 90782;
+    const QName_t LN_Value_ST_NumberFormat_upperRoman = 90783;
+    const QName_t LN_Value_ST_NumberFormat_lowerRoman = 90784;
+    const QName_t LN_Value_ST_NumberFormat_upperLetter = 90785;
+    const QName_t LN_Value_ST_NumberFormat_lowerLetter = 90786;
+    const QName_t LN_Value_ST_NumberFormat_ordinal = 90787;
+    const QName_t LN_Value_ST_NumberFormat_cardinalText = 90788;
+    const QName_t LN_Value_ST_NumberFormat_ordinalText = 90789;
+    const QName_t LN_Value_ST_NumberFormat_hex = 90790;
+    const QName_t LN_Value_ST_NumberFormat_chicago = 90791;
+    const QName_t LN_Value_ST_NumberFormat_ideographDigital = 90792;
+    const QName_t LN_Value_ST_NumberFormat_japaneseCounting = 90793;
+    const QName_t LN_Value_ST_NumberFormat_aiueo = 90794;
+    const QName_t LN_Value_ST_NumberFormat_iroha = 90795;
+    const QName_t LN_Value_ST_NumberFormat_decimalFullWidth = 90796;
+    const QName_t LN_Value_ST_NumberFormat_decimalHalfWidth = 90797;
+    const QName_t LN_Value_ST_NumberFormat_japaneseLegal = 90798;
+    const QName_t LN_Value_ST_NumberFormat_japaneseDigitalTenThousand = 90799;
+    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedCircle = 90800;
+    const QName_t LN_Value_ST_NumberFormat_decimalFullWidth2 = 90801;
+    const QName_t LN_Value_ST_NumberFormat_aiueoFullWidth = 90802;
+    const QName_t LN_Value_ST_NumberFormat_irohaFullWidth = 90803;
+    const QName_t LN_Value_ST_NumberFormat_decimalZero = 90804;
+    const QName_t LN_Value_ST_NumberFormat_bullet = 90805;
+    const QName_t LN_Value_ST_NumberFormat_ganada = 90806;
+    const QName_t LN_Value_ST_NumberFormat_chosung = 90807;
+    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedFullstop = 90808;
+    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedParen = 90809;
+    const QName_t LN_Value_ST_NumberFormat_decimalEnclosedCircleChinese = 90810;
+    const QName_t LN_Value_ST_NumberFormat_ideographEnclosedCircle = 90811;
+    const QName_t LN_Value_ST_NumberFormat_ideographTraditional = 90812;
+    const QName_t LN_Value_ST_NumberFormat_ideographZodiac = 90813;
+    const QName_t LN_Value_ST_NumberFormat_ideographZodiacTraditional = 90814;
+    const QName_t LN_Value_ST_NumberFormat_taiwaneseCounting = 90815;
+    const QName_t LN_Value_ST_NumberFormat_ideographLegalTraditional = 90816;
+    const QName_t LN_Value_ST_NumberFormat_taiwaneseCountingThousand = 90817;
+    const QName_t LN_Value_ST_NumberFormat_taiwaneseDigital = 90818;
+    const QName_t LN_Value_ST_NumberFormat_chineseCounting = 90819;
+    const QName_t LN_Value_ST_NumberFormat_chineseLegalSimplified = 90820;
+    const QName_t LN_Value_ST_NumberFormat_chineseCountingThousand = 90821;
+    const QName_t LN_Value_ST_NumberFormat_koreanDigital = 90822;
+    const QName_t LN_Value_ST_NumberFormat_koreanCounting = 90823;
+    const QName_t LN_Value_ST_NumberFormat_koreanLegal = 90824;
+    const QName_t LN_Value_ST_NumberFormat_koreanDigital2 = 90825;
+    const QName_t LN_Value_ST_NumberFormat_vietnameseCounting = 90826;
+    const QName_t LN_Value_ST_NumberFormat_russianLower = 90827;
+    const QName_t LN_Value_ST_NumberFormat_russianUpper = 90828;
+    const QName_t LN_Value_ST_NumberFormat_none = 90829;
+    const QName_t LN_Value_ST_NumberFormat_numberInDash = 90830;
+    const QName_t LN_Value_ST_NumberFormat_hebrew1 = 90831;
+    const QName_t LN_Value_ST_NumberFormat_hebrew2 = 90832;
+    const QName_t LN_Value_ST_NumberFormat_arabicAlpha = 90833;
+    const QName_t LN_Value_ST_NumberFormat_arabicAbjad = 90834;
+    const QName_t LN_Value_ST_NumberFormat_hindiVowels = 90835;
+    const QName_t LN_Value_ST_NumberFormat_hindiConsonants = 90836;
+    const QName_t LN_Value_ST_NumberFormat_hindiNumbers = 90837;
+    const QName_t LN_Value_ST_NumberFormat_hindiCounting = 90838;
+    const QName_t LN_Value_ST_NumberFormat_thaiLetters = 90839;
+    const QName_t LN_Value_ST_NumberFormat_thaiNumbers = 90840;
+    const QName_t LN_Value_ST_NumberFormat_thaiCounting = 90841;
+    const QName_t LN_CT_PageSz_w = 90844;
+    const QName_t LN_CT_PageSz_h = 90845;
+    const QName_t LN_CT_PageSz_orient = 90846;
+    const QName_t LN_CT_PageSz_code = 90847;
+    const QName_t LN_CT_PageMar_top = 90848;
+    const QName_t LN_CT_PageMar_right = 90849;
+    const QName_t LN_CT_PageMar_bottom = 90850;
+    const QName_t LN_CT_PageMar_left = 90851;
+    const QName_t LN_CT_PageMar_header = 90852;
+    const QName_t LN_CT_PageMar_footer = 90853;
+    const QName_t LN_CT_PageMar_gutter = 90854;
+    const QName_t LN_Value_ST_ChapterSep_hyphen = 90855;
+    const QName_t LN_Value_ST_ChapterSep_period = 90856;
+    const QName_t LN_Value_ST_ChapterSep_colon = 90857;
+    const QName_t LN_Value_ST_ChapterSep_emDash = 90858;
+    const QName_t LN_Value_ST_ChapterSep_enDash = 90859;
+    const QName_t LN_CT_LineNumber_countBy = 90863;
+    const QName_t LN_CT_LineNumber_start = 90864;
+    const QName_t LN_CT_LineNumber_distance = 90865;
+    const QName_t LN_CT_LineNumber_restart = 90866;
+    const QName_t LN_CT_PageNumber_fmt = 90867;
+    const QName_t LN_CT_PageNumber_start = 90868;
+    const QName_t LN_CT_PageNumber_chapStyle = 90869;
+    const QName_t LN_CT_PageNumber_chapSep = 90870;
+    const QName_t LN_CT_Column_space = 90871;
+    const QName_t LN_CT_Column_w = 90872;
+    const QName_t LN_CT_Columns_equalWidth = 90873;
+    const QName_t LN_CT_Columns_space = 90874;
+    const QName_t LN_CT_Columns_num = 90875;
+    const QName_t LN_CT_Columns_sep = 90876;
+    const QName_t LN_CT_Columns_col = 90877;
+    const QName_t LN_Value_ST_HrdFtr_even = 90882;
+    const QName_t LN_Value_ST_HrdFtr_default = 90883;
+    const QName_t LN_Value_ST_HrdFtr_first = 90884;
+    const QName_t LN_CT_HdrFtrRef_type = 90885;
+    const QName_t LN_CT_HdrFtrRef_id = 90886;
+    const QName_t LN_EG_HdrFtrReferences_headerReference = 90887;
+    const QName_t LN_EG_HdrFtrReferences_footerReference = 90888;
+    const QName_t LN_EG_SectPrContents_bidi = 90889;
+    const QName_t LN_EG_SectPrContents_cols = 90890;
+    const QName_t LN_EG_SectPrContents_docGrid = 90891;
+    const QName_t LN_EG_SectPrContents_endnotePr = 90892;
+    const QName_t LN_EG_SectPrContents_footnotePr = 90893;
+    const QName_t LN_EG_SectPrContents_formProt = 90894;
+    const QName_t LN_EG_SectPrContents_lnNumType = 90895;
+    const QName_t LN_EG_SectPrContents_noEndnote = 90896;
+    const QName_t LN_EG_SectPrContents_paperSrc = 90897;
+    const QName_t LN_EG_SectPrContents_pgBorders = 90898;
+    const QName_t LN_EG_SectPrContents_pgMar = 90899;
+    const QName_t LN_EG_SectPrContents_pgNumType = 90900;
+    const QName_t LN_EG_SectPrContents_pgSz = 90901;
+    const QName_t LN_EG_SectPrContents_printerSettings = 90902;
+    const QName_t LN_EG_SectPrContents_rtlGutter = 90903;
+    const QName_t LN_EG_SectPrContents_textDirection = 90904;
+    const QName_t LN_EG_SectPrContents_titlePg = 90905;
+    const QName_t LN_EG_SectPrContents_vAlign = 90907;
+    const QName_t LN_CT_SectPr_sectPrChange = 90908;
+    const QName_t LN_Value_ST_BrType_column = 90909;
+    const QName_t LN_Value_ST_BrType_page = 90910;
+    const QName_t LN_Value_ST_BrType_textWrapping = 90911;
+    const QName_t LN_Value_ST_BrClear_none = 90912;
+    const QName_t LN_Value_ST_BrClear_left = 90913;
+    const QName_t LN_Value_ST_BrClear_right = 90914;
+    const QName_t LN_Value_ST_BrClear_all = 90915;
+    const QName_t LN_CT_Br_type = 90916;
+    const QName_t LN_CT_Br_clear = 90917;
+    const QName_t LN_Value_ST_PTabAlignment_left = 90918;
+    const QName_t LN_Value_ST_PTabAlignment_center = 90919;
+    const QName_t LN_Value_ST_PTabAlignment_right = 90920;
+    const QName_t LN_Value_ST_PTabRelativeTo_margin = 90921;
+    const QName_t LN_Value_ST_PTabRelativeTo_indent = 90922;
+    const QName_t LN_Value_ST_PTabLeader_none = 90923;
+    const QName_t LN_Value_ST_PTabLeader_dot = 90924;
+    const QName_t LN_Value_ST_PTabLeader_hyphen = 90925;
+    const QName_t LN_Value_ST_PTabLeader_underscore = 90926;
+    const QName_t LN_Value_ST_PTabLeader_middleDot = 90927;
+    const QName_t LN_CT_PTab_alignment = 90928;
+    const QName_t LN_CT_PTab_relativeTo = 90929;
+    const QName_t LN_CT_PTab_leader = 90930;
+    const QName_t LN_CT_Sym_font = 90931;
+    const QName_t LN_CT_Sym_char = 90932;
+    const QName_t LN_CT_Text_space = 90933;
+    const QName_t LN_Value_ST_Hint_default = 90934;
+    const QName_t LN_Value_ST_Hint_eastAsia = 90935;
+    const QName_t LN_Value_ST_Hint_cs = 90936;
+    const QName_t LN_Value_ST_Theme_majorEastAsia = 90937;
+    const QName_t LN_Value_ST_Theme_majorBidi = 90938;
+    const QName_t LN_Value_ST_Theme_majorAscii = 90939;
+    const QName_t LN_Value_ST_Theme_majorHAnsi = 90940;
+    const QName_t LN_Value_ST_Theme_minorEastAsia = 90941;
+    const QName_t LN_Value_ST_Theme_minorBidi = 90942;
+    const QName_t LN_Value_ST_Theme_minorAscii = 90943;
+    const QName_t LN_Value_ST_Theme_minorHAnsi = 90944;
+    const QName_t LN_CT_Fonts_hint = 90945;
+    const QName_t LN_CT_Fonts_ascii = 90946;
+    const QName_t LN_CT_Fonts_hAnsi = 90947;
+    const QName_t LN_CT_Fonts_eastAsia = 90948;
+    const QName_t LN_CT_Fonts_cs = 90949;
+    const QName_t LN_CT_Fonts_asciiTheme = 90950;
+    const QName_t LN_CT_Fonts_hAnsiTheme = 90951;
+    const QName_t LN_CT_Fonts_eastAsiaTheme = 90952;
+    const QName_t LN_CT_Fonts_cstheme = 90953;
+    const QName_t LN_EG_RPrBase_rStyle = 90954;
+    const QName_t LN_EG_RPrBase_rFonts = 90955;
+    const QName_t LN_EG_RPrBase_snapToGrid = 90969;
+    const QName_t LN_EG_RPrBase_color = 90972;
+    const QName_t LN_EG_RPrBase_u = 90980;
+    const QName_t LN_EG_RPrBase_bdr = 90982;
+    const QName_t LN_EG_RPrBase_shd = 90983;
+    const QName_t LN_EG_RPrBase_fitText = 90984;
+    const QName_t LN_EG_RPrBase_vertAlign = 90985;
+    const QName_t LN_EG_RPrBase_rtl = 90986;
+    const QName_t LN_EG_RPrBase_lang = 90989;
+    const QName_t LN_EG_RPrBase_eastAsianLayout = 90990;
+    const QName_t LN_EG_RPrBase_oMath = 90992;
+    const QName_t LN_CT_ParaRPr_rPrChange = 90993;
+    const QName_t LN_Value_ST_TblWidth_nil = 90994;
+    const QName_t LN_Value_ST_TblWidth_pct = 90995;
+    const QName_t LN_Value_ST_TblWidth_dxa = 90996;
+    const QName_t LN_Value_ST_TblWidth_auto = 90997;
+    const QName_t LN_CT_Height_val = 90998;
+    const QName_t LN_CT_Height_hRule = 90999;
+    const QName_t LN_CT_TblWidth_w = 91000;
+    const QName_t LN_CT_TblWidth_type = 91001;
+    const QName_t LN_CT_TblGridBase_gridCol = 91002;
+    const QName_t LN_CT_TblGrid_tblGridChange = 91003;
+    const QName_t LN_CT_TcBorders_top = 91004;
+    const QName_t LN_CT_TcBorders_left = 91005;
+    const QName_t LN_CT_TcBorders_bottom = 91006;
+    const QName_t LN_CT_TcBorders_right = 91007;
+    const QName_t LN_CT_TcBorders_insideH = 91008;
+    const QName_t LN_CT_TcBorders_insideV = 91009;
+    const QName_t LN_CT_TcBorders_tl2br = 91010;
+    const QName_t LN_CT_TcBorders_tr2bl = 91011;
+    const QName_t LN_CT_TcMar_top = 91012;
+    const QName_t LN_CT_TcMar_left = 91013;
+    const QName_t LN_CT_TcMar_bottom = 91014;
+    const QName_t LN_CT_TcMar_right = 91015;
+    const QName_t LN_Value_ST_Merge_continue = 91016;
+    const QName_t LN_Value_ST_Merge_restart = 91017;
+    const QName_t LN_CT_TcPrBase_cnfStyle = 91018;
+    const QName_t LN_CT_TcPrBase_tcW = 91019;
+    const QName_t LN_CT_TcPrBase_gridSpan = 91020;
+    const QName_t LN_CT_TcPrBase_hMerge = 91021;
+    const QName_t LN_CT_TcPrBase_vMerge = 91022;
+    const QName_t LN_CT_TcPrBase_tcBorders = 91023;
+    const QName_t LN_CT_TcPrBase_shd = 91024;
+    const QName_t LN_CT_TcPrBase_noWrap = 91025;
+    const QName_t LN_CT_TcPrBase_tcMar = 91026;
+    const QName_t LN_CT_TcPrBase_textDirection = 91027;
+    const QName_t LN_CT_TcPrBase_tcFitText = 91028;
+    const QName_t LN_CT_TcPrBase_vAlign = 91029;
+    const QName_t LN_CT_TcPrBase_hideMark = 91030;
+    const QName_t LN_CT_TrPrBase_cnfStyle = 91031;
+    const QName_t LN_CT_TrPrBase_divId = 91032;
+    const QName_t LN_CT_TrPrBase_gridBefore = 91033;
+    const QName_t LN_CT_TrPrBase_gridAfter = 91034;
+    const QName_t LN_CT_TrPrBase_wBefore = 91035;
+    const QName_t LN_CT_TrPrBase_wAfter = 91036;
+    const QName_t LN_CT_TrPrBase_trHeight = 91038;
+    const QName_t LN_CT_TrPrBase_tblHeader = 91039;
+    const QName_t LN_CT_TrPrBase_tblCellSpacing = 91040;
+    const QName_t LN_CT_TrPrBase_jc = 91041;
+    const QName_t LN_CT_TrPrBase_hidden = 91042;
+    const QName_t LN_Value_ST_TblOverlap_never = 91043;
+    const QName_t LN_Value_ST_TblOverlap_overlap = 91044;
+    const QName_t LN_CT_TblCellMar_top = 91045;
+    const QName_t LN_CT_TblCellMar_left = 91046;
+    const QName_t LN_CT_TblCellMar_bottom = 91047;
+    const QName_t LN_CT_TblCellMar_right = 91048;
+    const QName_t LN_CT_TblBorders_top = 91049;
+    const QName_t LN_CT_TblBorders_left = 91050;
+    const QName_t LN_CT_TblBorders_bottom = 91051;
+    const QName_t LN_CT_TblBorders_right = 91052;
+    const QName_t LN_CT_TblBorders_insideH = 91053;
+    const QName_t LN_CT_TblBorders_insideV = 91054;
+    const QName_t LN_CT_TblPrBase_tblStyle = 91055;
+    const QName_t LN_CT_TblPrBase_tblpPr = 91056;
+    const QName_t LN_CT_TblPrBase_tblOverlap = 91057;
+    const QName_t LN_CT_TblPrBase_bidiVisual = 91058;
+    const QName_t LN_CT_TblPrBase_tblStyleRowBandSize = 91059;
+    const QName_t LN_CT_TblPrBase_tblStyleColBandSize = 91060;
+    const QName_t LN_CT_TblPrBase_tblW = 91061;
+    const QName_t LN_CT_TblPrBase_jc = 91062;
+    const QName_t LN_CT_TblPrBase_tblCellSpacing = 91063;
+    const QName_t LN_CT_TblPrBase_tblInd = 91064;
+    const QName_t LN_CT_TblPrBase_tblBorders = 91065;
+    const QName_t LN_CT_TblPrBase_shd = 91066;
+    const QName_t LN_CT_TblPrBase_tblLayout = 91067;
+    const QName_t LN_CT_TblPrBase_tblCellMar = 91068;
+    const QName_t LN_CT_TblPrBase_tblLook = 91069;
+    const QName_t LN_CT_TblPr_tblPrChange = 91070;
+    const QName_t LN_Value_ST_FtnPos_pageBottom = 91071;
+    const QName_t LN_Value_ST_FtnPos_beneathText = 91072;
+    const QName_t LN_Value_ST_FtnPos_sectEnd = 91073;
+    const QName_t LN_Value_ST_FtnPos_docEnd = 91074;
+    const QName_t LN_CT_FtnPos_val = 91075;
+    const QName_t LN_Value_ST_EdnPos_sectEnd = 91076;
+    const QName_t LN_Value_ST_EdnPos_docEnd = 91077;
+    const QName_t LN_CT_EdnPos_val = 91078;
+    const QName_t LN_CT_NumFmt_val = 91079;
+    const QName_t LN_Value_ST_RestartNumber_continuous = 91080;
+    const QName_t LN_Value_ST_RestartNumber_eachSect = 91081;
+    const QName_t LN_Value_ST_RestartNumber_eachPage = 91082;
+    const QName_t LN_CT_NumRestart_val = 91083;
+    const QName_t LN_CT_FtnEdnRef_customMarkFollows = 91084;
+    const QName_t LN_CT_FtnEdnRef_id = 91085;
+    const QName_t LN_EG_FtnEdnNumProps_numStart = 91087;
+    const QName_t LN_EG_FtnEdnNumProps_numRestart = 91088;
+    const QName_t LN_CT_FtnProps_pos = 91089;
+    const QName_t LN_CT_FtnProps_numFmt = 91090;
+    const QName_t LN_CT_EdnProps_pos = 91091;
+    const QName_t LN_CT_EdnProps_numFmt = 91092;
+    const QName_t LN_CT_RPrDefault_rPr = 91093;
+    const QName_t LN_CT_PPrDefault_pPr = 91094;
+    const QName_t LN_CT_DocDefaults_pPrDefault = 91095;
+    const QName_t LN_CT_DocDefaults_rPrDefault = 91096;
+    const QName_t LN_CT_LevelText_val = 91097;
+    const QName_t LN_CT_LevelText_null = 91098;
+    const QName_t LN_CT_LvlLegacy_legacy = 91099;
+    const QName_t LN_CT_LvlLegacy_legacySpace = 91100;
+    const QName_t LN_CT_LvlLegacy_legacyIndent = 91101;
+    const QName_t LN_CT_Lvl_lvlRestart = 91104;
+    const QName_t LN_CT_Lvl_pStyle = 91105;
+    const QName_t LN_CT_Lvl_suff = 91107;
+    const QName_t LN_CT_Lvl_lvlText = 91108;
+    const QName_t LN_CT_Lvl_lvlPicBulletId = 91109;
+    const QName_t LN_CT_Lvl_lvlJc = 91111;
+    const QName_t LN_CT_Lvl_pPr = 91112;
+    const QName_t LN_CT_Lvl_rPr = 91113;
+    const QName_t LN_CT_Lvl_ilvl = 91114;
+    const QName_t LN_CT_Lvl_tplc = 91115;
+    const QName_t LN_CT_Lvl_tentative = 91116;
+    const QName_t LN_Value_ST_MultiLevelType_singleLevel = 91117;
+    const QName_t LN_Value_ST_MultiLevelType_multilevel = 91118;
+    const QName_t LN_Value_ST_MultiLevelType_hybridMultilevel = 91119;
+    const QName_t LN_CT_AbstractNum_multiLevelType = 91121;
+    const QName_t LN_CT_AbstractNum_name = 91123;
+    const QName_t LN_CT_AbstractNum_styleLink = 91124;
+    const QName_t LN_CT_AbstractNum_numStyleLink = 91125;
+    const QName_t LN_CT_AbstractNum_lvl = 91126;
+    const QName_t LN_CT_AbstractNum_abstractNumId = 91127;
+    const QName_t LN_CT_NumLvl_startOverride = 91128;
+    const QName_t LN_CT_NumLvl_lvl = 91129;
+    const QName_t LN_CT_NumLvl_ilvl = 91130;
+    const QName_t LN_CT_Num_abstractNumId = 91131;
+    const QName_t LN_CT_Num_lvlOverride = 91132;
+    const QName_t LN_CT_Num_numId = 91133;
+    const QName_t LN_CT_Numbering_numPicBullet = 91134;
+    const QName_t LN_CT_Numbering_abstractNum = 91135;
+    const QName_t LN_CT_Numbering_num = 91136;
+    const QName_t LN_CT_Numbering_numIdMacAtCleanup = 91137;
+    const QName_t LN_CT_Style_name = 91142;
+    const QName_t LN_CT_Style_aliases = 91143;
+    const QName_t LN_CT_Style_basedOn = 91144;
+    const QName_t LN_CT_Style_next = 91145;
+    const QName_t LN_CT_Style_link = 91146;
+    const QName_t LN_CT_Style_autoRedefine = 91147;
+    const QName_t LN_CT_Style_hidden = 91148;
+    const QName_t LN_CT_Style_uiPriority = 91149;
+    const QName_t LN_CT_Style_semiHidden = 91150;
+    const QName_t LN_CT_Style_unhideWhenUsed = 91151;
+    const QName_t LN_CT_Style_qFormat = 91152;
+    const QName_t LN_CT_Style_locked = 91153;
+    const QName_t LN_CT_Style_personal = 91154;
+    const QName_t LN_CT_Style_personalCompose = 91155;
+    const QName_t LN_CT_Style_personalReply = 91156;
+    const QName_t LN_CT_Style_rsid = 91157;
+    const QName_t LN_CT_Style_pPr = 91158;
+    const QName_t LN_CT_Style_rPr = 91159;
+    const QName_t LN_CT_Style_tblPr = 91160;
+    const QName_t LN_CT_Style_trPr = 91161;
+    const QName_t LN_CT_Style_tcPr = 91162;
+    const QName_t LN_CT_Style_tblStylePr = 91163;
+    const QName_t LN_CT_Style_type = 91164;
+    const QName_t LN_CT_Style_styleId = 91165;
+    const QName_t LN_CT_Style_default = 91166;
+    const QName_t LN_CT_Style_customStyle = 91167;
+    const QName_t LN_Value_ST_FontFamily_decorative = 91168;
+    const QName_t LN_Value_ST_FontFamily_modern = 91169;
+    const QName_t LN_Value_ST_FontFamily_roman = 91170;
+    const QName_t LN_Value_ST_FontFamily_script = 91171;
+    const QName_t LN_Value_ST_FontFamily_swiss = 91172;
+    const QName_t LN_Value_ST_FontFamily_auto = 91173;
+    const QName_t LN_Value_ST_Pitch_fixed = 91174;
+    const QName_t LN_Value_ST_Pitch_variable = 91175;
+    const QName_t LN_Value_ST_Pitch_default = 91176;
+    const QName_t LN_CT_FontSig_usb0 = 91177;
+    const QName_t LN_CT_FontSig_usb1 = 91178;
+    const QName_t LN_CT_FontSig_usb2 = 91179;
+    const QName_t LN_CT_FontSig_usb3 = 91180;
+    const QName_t LN_CT_FontSig_csb0 = 91181;
+    const QName_t LN_CT_FontSig_csb1 = 91182;
+    const QName_t LN_CT_FontRel_fontKey = 91183;
+    const QName_t LN_CT_FontRel_subsetted = 91184;
+    const QName_t LN_CT_Font_altName = 91185;
+    const QName_t LN_CT_Font_panose1 = 91186;
+    const QName_t LN_CT_Font_charset = 91187;
+    const QName_t LN_CT_Font_family = 91188;
+    const QName_t LN_CT_Font_notTrueType = 91189;
+    const QName_t LN_CT_Font_pitch = 91190;
+    const QName_t LN_CT_Font_sig = 91191;
+    const QName_t LN_CT_Font_embedRegular = 91192;
+    const QName_t LN_CT_Font_embedBold = 91193;
+    const QName_t LN_CT_Font_embedItalic = 91194;
+    const QName_t LN_CT_Font_embedBoldItalic = 91195;
+    const QName_t LN_CT_Font_name = 91196;
+    const QName_t LN_Value_St_ThemeColor_dark1 = 91197;
+    const QName_t LN_Value_St_ThemeColor_light1 = 91198;
+    const QName_t LN_Value_St_ThemeColor_dark2 = 91199;
+    const QName_t LN_Value_St_ThemeColor_light2 = 91200;
+    const QName_t LN_Value_St_ThemeColor_accent1 = 91201;
+    const QName_t LN_Value_St_ThemeColor_accent2 = 91202;
+    const QName_t LN_Value_St_ThemeColor_accent3 = 91203;
+    const QName_t LN_Value_St_ThemeColor_accent4 = 91204;
+    const QName_t LN_Value_St_ThemeColor_accent5 = 91205;
+    const QName_t LN_Value_St_ThemeColor_accent6 = 91206;
+    const QName_t LN_Value_St_ThemeColor_hyperlink = 91207;
+    const QName_t LN_Value_St_ThemeColor_followedHyperlink = 91208;
+    const QName_t LN_Value_St_ThemeColor_none = 91209;
+    const QName_t LN_Value_St_ThemeColor_background1 = 91210;
+    const QName_t LN_Value_St_ThemeColor_text1 = 91211;
+    const QName_t LN_Value_St_ThemeColor_background2 = 91212;
+    const QName_t LN_Value_St_ThemeColor_text2 = 91213;
 }
   
 
--- writerfilter/source/dmapper/ConversionHelper.cxx	25 Apr 2007 11:30:51 -0000	1.7
+++ writerfilter/source/dmapper/ConversionHelper.cxx	2 Jul 2007 17:16:53 -0000	1.7.4.1
@@ -35,12 +35,9 @@
 #ifndef INCLUDED_DMAPPER_CONVERSIONHELPER_HXX
 #include <ConversionHelper.hxx>
 #endif
-#ifndef _COM_SUN_STAR_TABLE_BORDERLINE_HPP_
 #include <com/sun/star/table/BorderLine.hpp>
-#endif
-#ifndef _COM_SUN_STAR_LANG_LOCALE_HPP_
 #include <com/sun/star/lang/Locale.hpp>
-#endif
+#include <com/sun/star/text/HoriOrientation.hpp>
 #ifndef _TOOLS_COLOR_HXX
 #include <tools/color.hxx>
 #endif
@@ -528,6 +525,22 @@
 
     return nVal;
 }
+/*-- 27.06.2007 13:42:32---------------------------------------------------
+
+  -----------------------------------------------------------------------*/
+sal_Int16 convertTableJustification( sal_Int32 nIntValue )
+{
+    sal_Int16 nOrient = text::HoriOrientation::LEFT_AND_WIDTH;
+    switch( nIntValue )
+    {
+        case 1 : nOrient = text::HoriOrientation::CENTER; break;
+        case 2 : nOrient = text::HoriOrientation::RIGHT; break;
+        case 0 :
+        //no break
+        default:;
 
+    }
+    return nOrient;
+}
 } // namespace ConversionHelper
 } //namespace dmapper
--- writerfilter/source/dmapper/ConversionHelper.hxx	25 Apr 2007 11:30:51 -0000	1.7
+++ writerfilter/source/dmapper/ConversionHelper.hxx	2 Jul 2007 17:16:53 -0000	1.7.4.1
@@ -65,6 +65,7 @@
     sal_Int32 convertToMM100(sal_Int32 _t);
     sal_Int32 ConvertColor(sal_Int32 nWordColor );
     sal_Int32 SnapPageDimension( sal_Int32 nVal );
+    sal_Int16 convertTableJustification( sal_Int32 nIntValue );
 
 } // namespace ConversionHelper
 } //namespace dmapper
--- writerfilter/source/dmapper/DomainMapper.cxx	27 Jun 2007 08:54:24 -0000	1.61
+++ writerfilter/source/dmapper/DomainMapper.cxx	18 Jul 2007 13:05:39 -0000	1.61.4.5
@@ -162,8 +162,9 @@
 
   -----------------------------------------------------------------------*/
 DomainMapper::DomainMapper( const uno::Reference< uno::XComponentContext >& xContext,
-                            uno::Reference< lang::XComponent > xModel) :
-    m_pImpl( new DomainMapper_Impl( *this, xContext, xModel )),
+                            uno::Reference< lang::XComponent > xModel,
+                            SourceDocumentType eDocumentType) :
+    m_pImpl( new DomainMapper_Impl( *this, xContext, xModel, eDocumentType )),
     mnBackgroundColor(0), mbIsHighlightSet(false)
 {
 }
@@ -1589,6 +1590,7 @@
         case NS_ooxml::LN_CT_Fonts_ascii:
             m_pImpl->GetTopContext()->Insert(PROP_CHAR_FONT_NAME, true, uno::makeAny( sStringValue ));
             break;
+        case NS_ooxml::LN_CT_Fonts_hAnsi: break;//unsupported
         case NS_ooxml::LN_CT_Fonts_eastAsia:
             m_pImpl->GetTopContext()->Insert(PROP_CHAR_FONT_NAME_ASIAN, true, uno::makeAny( sStringValue ));
             break;
@@ -1715,13 +1717,21 @@
             CT_Column.space = ConversionHelper::convertToMM100( nIntValue );
             break;
 
-        case NS_ooxml::LN_CT_PPrBase_pStyle:
-            m_pImpl->GetTopContext()->Insert( PROP_PARA_STYLE_NAME, true, uno::makeAny( m_pImpl->GetStyleSheetTable()->ConvertStyleName( sStringValue )));
-            break;
         case NS_ooxml::LN_EG_RPrBase_rStyle:
             m_pImpl->GetTopContext()->Insert( PROP_CHAR_STYLE_NAME, true, uno::makeAny( m_pImpl->GetStyleSheetTable()->ConvertStyleName( sStringValue )));
             break;
-
+        case NS_ooxml::LN_CT_Language_val: //90314
+        case NS_ooxml::LN_CT_Language_eastAsia: //90315
+        case NS_ooxml::LN_CT_Language_bidi: //90316
+        {
+            LanguageType eLang = MsLangId::convertIsoStringToLanguage( sStringValue );
+            lang::Locale aLocale = MsLangId::convertLanguageToLocale( eLang );
+            m_pImpl->GetTopContext()->Insert(NS_ooxml::LN_CT_Language_val== nName ? PROP_CHAR_LOCALE :
+                             NS_ooxml::LN_CT_Language_eastAsia == nName ? PROP_CHAR_LOCALE_ASIAN : PROP_CHAR_LOCALE_COMPLEX,
+                             true, 
+                             uno::makeAny( aLocale ) );
+        }        
+        break;
         default:
             {
                 OSL_ASSERT("unknown attribute");
@@ -1750,7 +1760,7 @@
     //needed for page properties
     SectionPropertyMap* pSectionContext = 0;
     //the section context is not availabe before the first call of startSectionGroup()
-    if( !m_pImpl->IsStyleSheetImport() )
+    if( !m_pImpl->IsAnyTableImport() )
     {
         PropertyMapPtr pContext = m_pImpl->GetTopContextOfType(CONTEXT_SECTION);
         OSL_ENSURE(pContext.get(), "Section context is not in the stack!");
@@ -3272,6 +3282,10 @@
         resolveSprmProps(rSprm);
         CT_Columns.cols.push_back(CT_Column);
         break;
+    case NS_ooxml::LN_CT_PPrBase_pStyle:
+        m_pImpl->GetTopContext()->Insert( PROP_PARA_STYLE_NAME, true, 
+            uno::makeAny( m_pImpl->GetStyleSheetTable()->ConvertStyleName( sStringValue )));
+    break;
 
     default:
         {
@@ -3349,6 +3363,7 @@
 /*-- 09.06.2006 09:52:14---------------------------------------------------
 
 -----------------------------------------------------------------------*/
+
 void DomainMapper::startCharacterGroup()
 {
     m_pImpl->PushProperties(CONTEXT_CHARACTER);
@@ -3356,17 +3371,7 @@
     if( rTableManager.getTableStyleName().getLength() )
     {
         PropertyMapPtr pTopContext = m_pImpl->GetTopContext();
-        const StyleSheetEntry* pStyleSheetEntry = m_pImpl->GetStyleSheetTable()->FindStyleSheetByISTD(
-                                                        rTableManager.getTableStyleName());
-        OSL_ENSURE( pStyleSheetEntry, "table style not found" );
-        PropertyMap::const_iterator aPropIter = pStyleSheetEntry->pProperties->begin();
-        while(aPropIter != pStyleSheetEntry->pProperties->end())
-        {
-            //copy all text properties form the table style to the current run attributes
-            if( aPropIter->first.bIsTextProperty )
-                pTopContext->insert(*aPropIter);
-            ++aPropIter;
-        }    
+        rTableManager.CopyTextProperties(pTopContext, m_pImpl->GetStyleSheetTable());
     }    
 }
 /*-- 09.06.2006 09:52:14---------------------------------------------------
@@ -3458,17 +3463,18 @@
 		{
             
             PropertyMapPtr pContext = m_pImpl->GetTopContext();
-
-            //-->debug
-            uno::Reference<text::XFootnote> xTest = pContext->GetFootnote();
-            //<--debug
-            if( xTest.is() )
-//            if( pContext->GetFootnote().is() )
+            if( pContext->GetFootnote().is() )
             {
                 if( !pContext->GetFootnoteSymbol() )
                     pContext->GetFootnote()->setLabel( sText );
                 //otherwise ignore sText
             }
+            else if( m_pImpl->IsOpenFieldCommand() )
+                m_pImpl->AppendFieldCommand(sText);
+            else if( m_pImpl->IsOpenField() && m_pImpl->IsFieldResultAsString())
+                /*depending on the success of the field insert operation this result will be
+                  set at the field or directly inserted into the text*/
+                m_pImpl->SetFieldResult( sText );
             else
                 m_pImpl->appendTextPortion( sText, pContext );
 		}
@@ -3499,6 +3505,7 @@
 -----------------------------------------------------------------------*/
 void DomainMapper::table(doctok::Id name, doctok::Reference<Table>::Pointer_t ref)
 {
+    m_pImpl->SetAnyTableImport(true);
     /* WRITERFILTERSTATUS: table: attributedata */
     switch(name)
     {
@@ -3531,6 +3538,7 @@
     default:
         OSL_ASSERT("which table is to be filled here?");
     }
+    m_pImpl->SetAnyTableImport(false);
 }
 /*-- 09.06.2006 09:52:16---------------------------------------------------
 
@@ -3793,5 +3801,12 @@
         return sal_Unicode(0x0020); // blank space
     }
 }
+/*-- 18.07.2007 14:59:00---------------------------------------------------
+
+  -----------------------------------------------------------------------*/
+bool DomainMapper::IsOOXMLImport() const
+{
+    return m_pImpl->IsOOXMLImport();
+}
 
 } //namespace dmapper
--- writerfilter/source/dmapper/DomainMapperTableHandler.cxx	27 Jun 2007 08:54:24 -0000	1.12
+++ writerfilter/source/dmapper/DomainMapperTableHandler.cxx	18 Jul 2007 12:32:12 -0000	1.12.4.2
@@ -49,6 +49,8 @@
 #ifdef DEBUG
 static void lcl_printHandle(const Handle_t rHandle)
 {
+    if (!rHandle.get()) 
+        return;
     rtl::OUString aOUStr = rHandle->getString();
     rtl::OString aOStr(aOUStr.getStr(), aOUStr.getLength(),  RTL_TEXTENCODING_ASCII_US );
 
@@ -374,6 +376,8 @@
 //        m_pCellProperties.push_back( RowProperties_t() );
 //    m_pCellProperties[m_nRowIndex].push_back( pProps );
     m_pCellSeq = CellSequencePointer_t(new CellSequence_t(2));
+    if (!start.get()) 
+        return;
     (*m_pCellSeq)[0] = start->getStart();
 }
 
@@ -384,6 +388,8 @@
     clog << "</table.cell>" << endl;
 #endif
 
+    if (!end.get()) 
+        return;
     (*m_pCellSeq)[1] = end->getEnd();
     (*m_pRowSeq)[m_nCellIndex] = *m_pCellSeq;
     ++m_nCellIndex;
--- writerfilter/source/dmapper/DomainMapperTableManager.cxx	27 Jun 2007 13:22:01 -0000	1.15
+++ writerfilter/source/dmapper/DomainMapperTableManager.cxx	18 Jul 2007 13:05:39 -0000	1.15.4.3
@@ -50,7 +50,7 @@
 
 using namespace ::com::sun::star;
 using namespace ::std;
-
+#define DEFAULT_CELL_MARGIN 108 //default cell margin, not documented 
 /*-- 23.04.2007 14:57:49---------------------------------------------------
 
   -----------------------------------------------------------------------*/
@@ -59,7 +59,7 @@
     m_nCell(0),
     m_nCellBorderIndex(0),
     m_nHeaderRepeat(0),
-    m_nGapHalf(0),
+    m_nGapHalf(DEFAULT_CELL_MARGIN),
     m_nLeftMargin(0),
     m_nTableWidth(0),
     m_bFullWidth(false)
@@ -92,16 +92,7 @@
             {
                 /* WRITERFILTERSTATUS: done: 0, planned: 2, spent: 0 */
                 //table justification 0: left, 1: center, 2: right
-                sal_Int16 nOrient = text::HoriOrientation::LEFT_AND_WIDTH;
-                switch( nIntValue )
-                {
-                    case 1 : nOrient = text::HoriOrientation::CENTER; break;
-                    case 2 : nOrient = text::HoriOrientation::RIGHT; break;
-                    case 0 :
-                    //no break
-                    default:;
-
-                }
+                sal_Int16 nOrient = ConversionHelper::convertTableJustification( nIntValue );
                 PropertyMapPtr pTableMap( new PropertyMap );
                 pTableMap->Insert( PROP_HORI_ORIENT, false, uno::makeAny( nOrient ) );
                 insertTableProps( pTableMap );
@@ -322,19 +313,26 @@
                 insertTableProps(pPropMap);
             }
             break;
-            case NS_ooxml::LN_CT_TcPrBase_tcW: //90684 - column width values
-            //TODO: this is wrong - it should be something like CT_TblGridBase
+            //case NS_ooxml::LN_CT_TcPrBase_tcW: //90684 - column width values
+            case NS_ooxml::LN_CT_TblGridBase_gridCol:
+            
             if(!m_nRow)
             {    
+                m_aCellWidths.push_back( ConversionHelper::convertToMM100( nIntValue ) );
+            }    
+            break;
+            case NS_ooxml::LN_CT_TblPrBase_tblCellMar: //cell margins
+            {    
                 doctok::Reference<doctok::Properties>::Pointer_t pProperties = rSprm.getProps();
                 if( pProperties.get())
                 {
-                    MeasureHandlerPtr pMeasureHandler( new MeasureHandler );
-                    pProperties->resolve(*pMeasureHandler);
-                    sal_Int32 nColumnWidth = pMeasureHandler->getMeasureValue();
-                    m_aCellWidths.push_back( nColumnWidth );
+                    //add code for default margins
+                }    
+                else
+                {
+                    OSL_ASSERT("tblCellMar incomplete");
                 }
-            }    
+            }
             break;
             case NS_ooxml::LN_CT_TblPrBase_tblLook: break; //todo: table look specifier
             default: bRet = false;
@@ -379,6 +377,44 @@
     m_bFullWidth = false;
     m_aCellWidths.clear();
     m_sTableStyleName = ::rtl::OUString();
+    m_pTableStyleTextProperies.reset();
 }
+/*-- 27.06.2007 14:19:50---------------------------------------------------
+
+  -----------------------------------------------------------------------*/
+void lcl_CopyTextProperties(PropertyMapPtr pToFill,
+            const StyleSheetEntry* pStyleSheetEntry, StyleSheetTablePtr pStyleSheetTable)
+{
+    if( !pStyleSheetEntry )
+        return;
+    //fill base style properties first, recursively
+    if( pStyleSheetEntry->sBaseStyleIdentifier.getLength())
+    {
+        const StyleSheetEntry* pParentStyleSheet = 
+            pStyleSheetTable->FindStyleSheetByISTD(pStyleSheetEntry->sBaseStyleIdentifier);
+        OSL_ENSURE( pParentStyleSheet, "table style not found" );
+        lcl_CopyTextProperties( pToFill, pParentStyleSheet, pStyleSheetTable);
+    }
 
+    PropertyMap::const_iterator aPropIter = pStyleSheetEntry->pProperties->begin();
+    while(aPropIter != pStyleSheetEntry->pProperties->end())
+    {
+        //copy all text properties form the table style to the current run attributes
+        if( aPropIter->first.bIsTextProperty )
+            pToFill->insert(*aPropIter);
+        ++aPropIter;
+    }    
+}
+void DomainMapperTableManager::CopyTextProperties(PropertyMapPtr pContext, StyleSheetTablePtr pStyleSheetTable)
+{
+    if( !m_pTableStyleTextProperies.get())
+    {
+        m_pTableStyleTextProperies.reset( new PropertyMap );
+        const StyleSheetEntry* pStyleSheetEntry = pStyleSheetTable->FindStyleSheetByISTD(
+                                                        m_sTableStyleName);
+        OSL_ENSURE( pStyleSheetEntry, "table style not found" );
+        lcl_CopyTextProperties(m_pTableStyleTextProperies, pStyleSheetEntry, pStyleSheetTable);
+    }
+    pContext->insert( m_pTableStyleTextProperies );
+}
 }
--- writerfilter/source/dmapper/DomainMapperTableManager.hxx	27 Jun 2007 08:54:24 -0000	1.7
+++ writerfilter/source/dmapper/DomainMapperTableManager.hxx	2 Jul 2007 17:16:53 -0000	1.7.4.1
@@ -35,16 +35,10 @@
 #ifndef INCLUDED_DOMAIN_MAPPER_TABLE_MANAGER_HXX
 #define INCLUDED_DOMAIN_MAPPER_TABLE_MANAGER_HXX
 
-#ifndef INCLUDED_TABLE_MANAGER_HXX
 #include <doctok/TableManager.hxx>
-#endif
-#ifndef INCLUDED_DMAPPER_PROPERTYMAP_HXX
-#include "PropertyMap.hxx"
-#endif
-
-#ifndef _COM_SUN_STAR_TEXT_XTEXTRANGE_HPP_
+#include <PropertyMap.hxx>
+#include <StyleSheetTable.hxx>
 #include <com/sun/star/text/XTextRange.hpp>
-#endif
 #include <vector>
 
 namespace dmapper {
@@ -61,6 +55,8 @@
     sal_Int32       m_nTableWidth; //might be set directly or has to be calculated from the column positions
     bool            m_bFullWidth; //width is set to full, disable setting of different orientation values
     ::rtl::OUString m_sTableStyleName;    
+    PropertyMapPtr  m_pTableStyleTextProperies;
+
     ::std::vector<sal_Int32>  m_aCellWidths;
     
     virtual void clearData();
@@ -76,6 +72,9 @@
     virtual void endOfRowAction();
 
     const ::rtl::OUString& getTableStyleName() const { return m_sTableStyleName; }
+    /// copy the text properties of the table style and its parent into pContext
+    void    CopyTextProperties(PropertyMapPtr pContext, StyleSheetTablePtr pStyleSheetTable);
+
 };
 
 }
--- writerfilter/source/dmapper/DomainMapper_Impl.cxx	27 Jun 2007 08:54:24 -0000	1.19
+++ writerfilter/source/dmapper/DomainMapper_Impl.cxx	18 Jul 2007 12:31:29 -0000	1.19.4.3
@@ -314,6 +314,15 @@
      example: TOC "EntryText \f \l 2 \n
      */
     ,FIELD_TC
+    /* document statistic - number of characters
+     */
+    ,FIELD_NUMCHARS
+    /* document statistic - number of words
+     */
+    ,FIELD_NUMWORDS
+    /* document statistic - number of pages
+     */
+    ,FIELD_NUMPAGES
 };
 struct FieldConversion
 {
@@ -351,7 +360,9 @@
 DomainMapper_Impl::DomainMapper_Impl(
             DomainMapper& rDMapper,
             uno::Reference < uno::XComponentContext >  xContext,
-            uno::Reference< lang::XComponent >  xModel) :
+            uno::Reference< lang::XComponent >  xModel,
+            SourceDocumentType eDocumentType) :
+        m_eDocumentType( eDocumentType ),
         m_rDMapper( rDMapper ),
         m_xTextDocument( xModel, uno::UNO_QUERY ),
         m_xTextFactory( xModel, uno::UNO_QUERY ),
@@ -362,6 +373,7 @@
         m_nCurrentTabStopIndex( 0 ),
         m_sCurrentParaStyleId(),
         m_bInStyleSheetImport( false ),
+        m_bInAnyTableImport( false ),
         m_bLineNumberingSet( false )
 {
     GetBodyText();
@@ -664,9 +676,11 @@
     {
         try
         {
+            uno::Sequence< beans::PropertyValue > aProperties;
+            if( pPropertyMap.get() )
+                aProperties = pPropertyMap->GetPropertyValues();
             uno::Reference< text::XTextRange > xTextRange =
-                xTextAppendAndConvert->finishParagraph
-                (pPropertyMap->GetPropertyValues());
+                xTextAppendAndConvert->finishParagraph( aProperties );
 
             m_TableManager.handle(xTextRange);
         }
@@ -1999,6 +2013,9 @@
     //            {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("USERNAME")),      "ExtendedUser",             "", FIELD_USERNAME     }
                 {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("TOC")), "com.sun.star.text.ContentIndex", "", FIELD_TOC},
                 {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("TC")), "com.sun.star.text.ContentIndexMark", "", FIELD_TC},
+                {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("NUMCHARS")), "CharacterCount", "", FIELD_NUMCHARS},
+                {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("NUMWORDS")), "WordCount", "", FIELD_NUMWORDS},
+                {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("NUMPAGES")), "PageCount", "", FIELD_NUMPAGES},
 
     //            {::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("")), "", "", FIELD_},
 
@@ -2565,6 +2582,14 @@
                         pContext->SetTC( xTC );
                     }
                     break;
+                    case  FIELD_NUMCHARS:
+                    case  FIELD_NUMWORDS:
+                    case  FIELD_NUMPAGES:
+                        xFieldProperties->setPropertyValue(
+                            rPropNameSupplier.GetName(PROP_NUMBERING_TYPE),
+                            uno::makeAny( lcl_ParseNumberingType(pContext->GetCommand()) ));
+                        break;
+                        
                 }
             }
             //set the text field if there is any
--- writerfilter/source/dmapper/DomainMapper_Impl.hxx	27 Jun 2007 08:54:25 -0000	1.18
+++ writerfilter/source/dmapper/DomainMapper_Impl.hxx	18 Jul 2007 13:05:39 -0000	1.18.4.3
@@ -51,6 +51,7 @@
 #include <doctok/resourceids.hxx>
 #include <ooxml/resourceids.hxx>
 #endif
+#include <dmapper/DomainMapper.hxx>
 #ifndef INCLUDED_DOMAIN_MAPPER_TABLE_MANAGER_HXX
 #include <DomainMapperTableManager.hxx>
 #endif
@@ -150,7 +151,6 @@
 
 typedef std::stack<ContextType>                 ContextStack;
 typedef std::stack<PropertyMapPtr>              PropertyStack;
-typedef boost::shared_ptr< StyleSheetTable >    StyleSheetTablePtr;
 typedef std::stack< ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextAppendAndConvert > >
                                                 TextAppendStack;
 typedef std::stack<FieldContextPtr>                FieldStack;
@@ -211,6 +211,7 @@
     typedef std::map < ::rtl::OUString, BookmarkInsertPosition > BookmarkMap_t;
 
 private:
+    SourceDocumentType                                                              m_eDocumentType;
     DomainMapper&                                                                   m_rDMapper;
     ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextDocument >       m_xTextDocument;
     ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet >       m_xDocumentSettings;
@@ -245,7 +246,8 @@
     ::std::vector<DeletableTabStop> m_aCurrentTabStops;
     sal_uInt32                      m_nCurrentTabStopIndex;
     ::rtl::OUString                 m_sCurrentParaStyleId;
-    bool                            m_bInStyleSheetImport;
+    bool                            m_bInStyleSheetImport; //in import of fonts, styles, lists or lfos
+    bool                            m_bInAnyTableImport; //in import of fonts, styles, lists or lfos
 
     bool                            m_bLineNumberingSet;
 
@@ -262,7 +264,8 @@
     DomainMapper_Impl(
             DomainMapper& rDMapper,
             uno::Reference < uno::XComponentContext >  xContext,
-            uno::Reference< lang::XComponent >  xModel );
+            uno::Reference< lang::XComponent >  xModel,
+            SourceDocumentType eDocumentType );
     DomainMapper_Impl();
     virtual ~DomainMapper_Impl();
 
@@ -337,6 +340,8 @@
     ::com::sun::star::uno::Any    GetPropertyFromStyleSheet(PropertyIds eId);
     void        SetStyleSheetImport( bool bSet ) { m_bInStyleSheetImport = bSet;}
     bool        IsStyleSheetImport()const { return m_bInStyleSheetImport;}
+    void        SetAnyTableImport( bool bSet ) { m_bInAnyTableImport = bSet;}
+    bool        IsAnyTableImport()const { return m_bInAnyTableImport;}
 
     void PushPageHeader(SectionPropertyMap::PageType eType);
     void PushPageFooter(SectionPropertyMap::PageType eType);
@@ -370,7 +375,8 @@
     bool IsLineNumberingSet() const {return m_bLineNumberingSet;}
 
     DeletableTabStop                m_aCurrentTabStop;
-
+    
+    bool IsOOXMLImport() const { return m_eDocumentType == DOCUMENT_OOXML; }
 };
 } //namespace dmapper
 #endif
--- writerfilter/source/dmapper/StyleSheetTable.cxx	27 Jun 2007 08:54:25 -0000	1.27
+++ writerfilter/source/dmapper/StyleSheetTable.cxx	18 Jul 2007 13:02:51 -0000	1.27.4.7
@@ -32,41 +32,20 @@
  *    MA  02111-1307  USA
  *
  ************************************************************************/
-#ifndef INCLUDED_STYLESHEETTABLE_HXX
 #include <StyleSheetTable.hxx>
-#endif
-#ifndef INCLUDED_DOMAINMAPPER_HXX
 #include <dmapper/DomainMapper.hxx>
-#endif
-#ifndef INCLUDED_RESOURCESIDS
+#include <ConversionHelper.hxx>
 #include <doctok/resourceids.hxx>
 #include <ooxml/resourceids.hxx>
-#endif
 #include <vector>
-#ifndef _COM_SUN_STAR_BEANS_XMULTIPROPERTYSET_HPP_
 #include <com/sun/star/beans/XMultiPropertySet.hpp>
-#endif
-#ifndef _COM_SUN_STAR_BEANS_XPROPERTYVALUE_HPP_
 #include <com/sun/star/beans/PropertyValue.hpp>
-#endif
-#ifndef _COM_SUN_STAR_CONTAINER_XNAMECONTAINER_HPP_
 #include <com/sun/star/container/XNameContainer.hpp>
-#endif
-#ifndef _COM_SUN_STAR_TEXT_XTEXTDOCUMENT_HPP_
 #include <com/sun/star/text/XTextDocument.hpp>
-#endif
-#ifndef _COM_SUN_STAR_STYLE_XSTYLEFAMILIESSUPPLIER_HPP_
 #include <com/sun/star/style/XStyleFamiliesSupplier.hpp>
-#endif
-#ifndef _COM_SUN_STAR_STYLE_XSTYLE_HPP_
 #include <com/sun/star/style/XStyle.hpp>
-#endif
-#ifndef _COM_SUN_STAR_TEXT_WRITINGMODE_HPP_
 #include <com/sun/star/text/WritingMode.hpp>
-#endif
-#ifndef _COM_SUN_STAR_LANG_XMULTISERVICEFACTORY_HPP_
 #include <com/sun/star/lang/XMultiServiceFactory.hpp>
-#endif
 #include <map>
 #include <stdio.h>
 #include <rtl/ustrbuf.hxx>
@@ -634,10 +613,6 @@
     case NS_ooxml::LN_CT_Style_name:
     	m_pImpl->m_pCurrentEntry->sStyleName = sStringValue;
     	m_pImpl->m_pCurrentEntry->sStyleName1 = sStringValue;
-    	if (m_pImpl->m_pCurrentEntry->nStyleTypeCode == STYLE_TYPE_PARA)
-            m_pImpl->m_pCurrentEntry->pProperties->Insert(PROP_PARA_STYLE_NAME, true, uno::makeAny(sStringValue));
-    	else if (m_pImpl->m_pCurrentEntry->nStyleTypeCode == STYLE_TYPE_CHAR)
-            m_pImpl->m_pCurrentEntry->pProperties->Insert(PROP_CHAR_STYLE_NAME, true, uno::makeAny(sStringValue));
     	break;    	
     case NS_ooxml::LN_CT_Style_basedOn:
         m_pImpl->m_pCurrentEntry->sBaseStyleIdentifier = sStringValue;
@@ -680,7 +655,11 @@
         m_pImpl->m_rDMapper.sprm( rSprm );
         m_pImpl->m_rDMapper.PopStyleSheetProperties();
     break;
-    case NS_ooxml::LN_CT_TrPrBase_jc:     //table alignment
+    case NS_ooxml::LN_CT_TblPrBase_jc:     //table alignment - row properties!
+         m_pImpl->m_pCurrentEntry->pProperties->Insert( PROP_HORI_ORIENT, false, 
+            uno::makeAny( ConversionHelper::convertTableJustification( nIntValue )));
+    break;
+    case NS_ooxml::LN_CT_TrPrBase_jc:     //table alignment - row properties!
             dynamic_cast< StyleSheetPropertyMap* >( m_pImpl->m_pCurrentEntry->pProperties.get() )->SetCT_TrPrBase_jc(nIntValue);
         break;
     case NS_ooxml::LN_CT_Style_pPr:
@@ -803,16 +782,16 @@
                                     ::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("com.sun.star.style.CharacterStyle"))),
                                     uno::UNO_QUERY_THROW);
                 }
-                if(!(aIt->sBaseStyleIdentifier.getLength()) )
+                if( aIt->sBaseStyleIdentifier.getLength() )
                 {
-                    //find the name of the base style
-                    std::vector< StyleSheetEntry >::iterator aBaseStyleIt = m_pImpl->m_aStyleSheetEntries.begin();
-                    for( ; aBaseStyleIt !=  m_pImpl->m_aStyleSheetEntries.end(); ++aBaseStyleIt )
-                        if(aBaseStyleIt->sStyleIdentifierD == aIt->sBaseStyleIdentifier)
-                        {
-                            xStyle->setParentStyle(ConvertStyleName( aBaseStyleIt->sStyleName ));
-                            break;
-                        }
+                    try
+                    {
+                        xStyle->setParentStyle(ConvertStyleName( aIt->sBaseStyleIdentifier ));
+                    }
+                    catch( const uno::RuntimeException& )
+                    {
+                        OSL_ASSERT("Styles parent could not be set");
+                    }
                 }
                 else if( bParaStyle )
                 {
@@ -822,14 +801,16 @@
                     //CTL: third entry, if it exists
 
                     sal_uInt32 nFontCount = rFontTable->size();
-                    if( nFontCount > 2 )
+                    if( !m_pImpl->m_rDMapper.IsOOXMLImport() && nFontCount > 2 )
                     {
                         uno::Any aTwoHundredFortyTwip = uno::makeAny(12.);
 //                      font size to 240 twip (12 pts) for all if not set
                         aIt->pProperties->Insert(PROP_CHAR_HEIGHT, true, aTwoHundredFortyTwip, false);
 //                      western font not already set -> apply first font
                         const FontEntry* pWesternFontEntry = rFontTable->getFontEntry( 0 );
-                        aIt->pProperties->Insert(PROP_CHAR_FONT_NAME, true, uno::makeAny( pWesternFontEntry->sFontName ), false);
+                        rtl::OUString sWesternFontName = pWesternFontEntry->sFontName;
+                        aIt->pProperties->Insert(PROP_CHAR_FONT_NAME, true, uno::makeAny( sWesternFontName ), false);
+
 //                      CJK  ... apply second font
                         const FontEntry* pCJKFontEntry  = rFontTable->getFontEntry( 2 );
                         aIt->pProperties->Insert(PROP_CHAR_FONT_NAME_ASIAN, true, uno::makeAny( pCJKFontEntry->sFontName ), false);
@@ -917,7 +898,9 @@
   -----------------------------------------------------------------------*/
 const StyleSheetEntry* StyleSheetTable::FindParentStyleSheet(::rtl::OUString sBaseStyle)
 {
-    if(sBaseStyle.getLength() && m_pImpl->m_pCurrentEntry)
+    if( !sBaseStyle.getLength() )
+        return 0;
+    if( m_pImpl->m_pCurrentEntry)
         sBaseStyle = m_pImpl->m_pCurrentEntry->sBaseStyleIdentifier;
 
     const StyleSheetEntry* pRet = 0;
--- writerfilter/source/dmapper/StyleSheetTable.hxx	30 May 2007 10:43:21 -0000	1.11
+++ writerfilter/source/dmapper/StyleSheetTable.hxx	2 Jul 2007 17:16:53 -0000	1.11.4.1
@@ -110,6 +110,8 @@
     void resolveAttributeProperties(doctok::Value & val);
     void resolveSprmProps(doctok::Sprm & sprm_);
 };
+typedef boost::shared_ptr< StyleSheetTable >    StyleSheetTablePtr;
+
 }
 
 #endif //
--- writerfilter/source/doctok/WW8ResourceModelImpl.cxx	25 Apr 2007 11:40:45 -0000	1.12
+++ writerfilter/source/doctok/WW8ResourceModelImpl.cxx	16 Jul 2007 10:53:48 -0000	1.12.4.1
@@ -60,7 +60,16 @@
         char c = *aIt;
 
         if (isprint(c) && c != '\"')
-            result += c;
+        {
+            if (c == '<')
+                result += "&lt;";
+            else if (c == '>')
+                result += "&gt;";
+            else if (c == '&')
+                result += "&amp;";
+            else
+                result += c;
+        }
         else
         {
             snprintf(sBuffer, sizeof(sBuffer), "\\%03d", c);
--- writerfilter/source/filter/ImportFilter.cxx	22 Feb 2007 17:16:06 -0000	1.6
+++ writerfilter/source/filter/ImportFilter.cxx	18 Jul 2007 12:30:24 -0000	1.6.4.1
@@ -80,9 +80,11 @@
         return sal_False;
     }
 
-    doctok::Stream::Pointer_t pStream(new dmapper::DomainMapper(m_xContext, m_xDoc));
+    dmapper::SourceDocumentType eType = m_sFilterName.equalsAsciiL ( RTL_CONSTASCII_STRINGPARAM ( "writer_MS_Word_2007" ) ) ? 
+                dmapper::DOCUMENT_OOXML : dmapper::DOCUMENT_DOC;
+    doctok::Stream::Pointer_t pStream(new dmapper::DomainMapper(m_xContext, m_xDoc, eType));
     //create the tokenizer and domain mapper
-    if( m_sFilterName.equalsAsciiL ( RTL_CONSTASCII_STRINGPARAM ( "writer_MS_Word_2007" ) ))
+    if( eType == dmapper::DOCUMENT_OOXML )
     {
         ooxml::OOXMLStream::Pointer_t pDocStream = ooxml::OOXMLDocumentFactory::createStream(m_xContext, xInputStream);
         ooxml::OOXMLDocument::Pointer_t pDocument(ooxml::OOXMLDocumentFactory::createDocument(pDocStream));
--- writerfilter/source/ooxml/OOXMLContext.cxx	27 Jun 2007 13:18:19 -0000	1.36
+++ writerfilter/source/ooxml/OOXMLContext.cxx	16 Jul 2007 10:55:30 -0000	1.36.4.3
@@ -377,6 +377,11 @@
 
 void OOXMLContext::startCharacterGroup()
 {
+    endCharacterGroup();
+
+    if (! mpParserState->isInParagraphGroup())
+        startParagraphGroup();
+
     if (isForwardEvents() && ! mpParserState->isInCharacterGroup())
     {
         mrStream.startCharacterGroup();    
@@ -395,7 +400,10 @@
 
 void OOXMLContext::startParagraphGroup()
 {
-    endCharacterGroup();
+    endParagraphGroup();
+
+    if (! mpParserState->isInSectionGroup())
+        startSectionGroup();
 
     if (isForwardEvents() && ! mpParserState->isInParagraphGroup())
     {
@@ -427,7 +435,7 @@
 
 void OOXMLContext::startSectionGroup()
 {
-    endParagraphGroup();
+    endSectionGroup();
 
     if (isForwardEvents() && ! mpParserState->isInSectionGroup())
     {
@@ -503,7 +511,7 @@
 void OOXMLContext::resolveFooter(const sal_Int32 type, const rtl::OUString & rId)
 {
     mpParserState->getDocument()->resolveFooter(mrStream, type, rId);
-}
+ }
 
 void OOXMLContext::setToken(TokenEnum_t eToken)
 {
@@ -539,9 +547,12 @@
 {
     doctok::Id nId = this->getId(nToken);
     
-    OOXMLPropertyImpl::Pointer_t pProperty
-        (new OOXMLPropertyImpl(nId, pVal, OOXMLPropertyImpl::ATTRIBUTE));
-    mpPropertySetAttrs->add(pProperty);    
+    if (nId != 0x0)
+    {
+        OOXMLPropertyImpl::Pointer_t pProperty
+            (new OOXMLPropertyImpl(nId, pVal, OOXMLPropertyImpl::ATTRIBUTE));
+        mpPropertySetAttrs->add(pProperty);    
+    }
 }
 
 void OOXMLContextStream::lcl_characters(const rtl::OUString & sText) 
@@ -617,9 +628,12 @@
 {
     doctok::Id nId = this->getId(nToken);
     
-    OOXMLPropertyImpl::Pointer_t pProperty
-        (new OOXMLPropertyImpl(nId, pVal, OOXMLPropertyImpl::ATTRIBUTE));
-    mpPropertySet->add(pProperty);    
+    if (nId != 0x0)
+    {
+        OOXMLPropertyImpl::Pointer_t pProperty
+            (new OOXMLPropertyImpl(nId, pVal, OOXMLPropertyImpl::ATTRIBUTE));
+        mpPropertySet->add(pProperty);    
+    }
 }
 
 void OOXMLContextProperties::setPropertySet(OOXMLPropertySet::Pointer_t 
@@ -1026,8 +1040,6 @@
 
 void OOXMLContextTextTableCell::endCell()
 {
-    startCharacterGroup();
-
     OOXMLPropertySet * pProps = new OOXMLPropertySetImpl();
     {
         OOXMLValue::Pointer_t pVal
@@ -1054,7 +1066,6 @@
     if (isForwardEvents())
         mrStream.props(doctok::Reference<Properties>::Pointer_t(pProps));
 
-    // no endCharacterGroup here
 }
 
 /*
@@ -1073,10 +1084,12 @@
     mbForwardEventsSaved = isForwardEvents();
     setForwardEvents(false);
 
+#ifdef DEBUG_NOTES
     clog << "OOXMLContextXNote:" <<  
         OUStringToOString(getXNoteId(), 
                           RTL_TEXTENCODING_ASCII_US).getStr()
          << endl;
+#endif
 }
 
 OOXMLContextXNote::~OOXMLContextXNote()
@@ -1088,8 +1101,9 @@
 {
     if (rId.compareTo(getXNoteId()) == 0)
         setForwardEvents(true);
-
+#ifdef DEBUG_NOTES
     clog << "OOXMLContextXNote::checkId: " << isForwardEvents() << endl;
+#endif
 }
 
 /*
--- writerfilter/source/ooxml/OOXMLDocumentImpl.cxx	4 Jun 2007 08:45:42 -0000	1.13
+++ writerfilter/source/ooxml/OOXMLDocumentImpl.cxx	16 Jul 2007 20:07:34 -0000	1.13.4.1
@@ -213,6 +213,7 @@
         oSaxParser->setDocumentHandler( xDocumentHandler );
         
         resolveSubStream(rStream, OOXMLStream::NUMBERING);
+	resolveSubStream(rStream, OOXMLStream::THEME);
         resolveSubStream(rStream, OOXMLStream::FONTTABLE);
         resolveSubStream(rStream, OOXMLStream::STYLES);
         
--- writerfilter/source/ooxml/OOXMLPropertySet.hxx	13 Apr 2007 10:20:13 -0000	1.4
+++ writerfilter/source/ooxml/OOXMLPropertySet.hxx	16 Jul 2007 10:56:11 -0000	1.4.4.1
@@ -71,6 +71,7 @@
     virtual string getType() const = 0;
     virtual void add(OOXMLProperty::Pointer_t pProperty) = 0;
     virtual OOXMLPropertySet * clone() const = 0;
+    virtual void setType(const string & rsType) = 0;
 };
 
 class OOXMLTable : public doctok::Reference<Table>
--- writerfilter/source/ooxml/OOXMLPropertySetImpl.cxx	10 May 2007 14:37:38 -0000	1.18
+++ writerfilter/source/ooxml/OOXMLPropertySetImpl.cxx	18 Jul 2007 12:56:42 -0000	1.18.4.5
@@ -37,7 +37,7 @@
 #include <iostream>
 #include <resourcemodel/QNameToString.hxx>
 
-#define DEBUG_RESOLVE
+//#define DEBUG_RESOLVE
 
 namespace ooxml
 {
@@ -347,7 +347,8 @@
    class OOXMLPropertySetImpl
 */
 
-OOXMLPropertySetImpl::OOXMLPropertySetImpl()
+OOXMLPropertySetImpl::OOXMLPropertySetImpl()    
+: msType("OOXMLPropertySetImpl")
 {
 }
 
@@ -370,13 +371,15 @@
 
 string OOXMLPropertySetImpl::getType() const
 {
-    return "OOXMLPropertySetImpl";
+    return msType;
 }
 
 void OOXMLPropertySetImpl::add(OOXMLProperty::Pointer_t pProperty)
 {
+#ifdef DEBUG_RESOLVE
     if (pProperty->getId() == 0x0)
         clog << "zero property" << endl;
+#endif
 
     mProperties.push_back(pProperty);
 }
@@ -386,6 +389,11 @@
     return new OOXMLPropertySetImpl(*this);
 }
 
+void OOXMLPropertySetImpl::setType(const string & rsType)
+{
+    msType = rsType;
+}
+
 /*
   class OOXMLPropertySetValue
 */
@@ -561,4 +569,56 @@
     return new OOXMLTableImpl(*this);
 }
 
+/*
+  class: OOXMLPropertySetEntryToString
+*/
+
+OOXMLPropertySetEntryToString::OOXMLPropertySetEntryToString(Id nId)
+: mnId(nId)
+{
+}
+
+OOXMLPropertySetEntryToString::~OOXMLPropertySetEntryToString()
+{
+}
+
+void OOXMLPropertySetEntryToString::sprm(Sprm & /*rSprm*/)
+{
+}
+
+void OOXMLPropertySetEntryToString::attribute(Id nId, Value & rValue)
+{
+    if (nId == mnId)
+        mStr = rValue.getString();
+}
+
+const ::rtl::OUString & OOXMLPropertySetEntryToString::getString() const
+{
+    return mStr;
+}
+
+OOXMLPropertySetEntryToInteger::OOXMLPropertySetEntryToInteger(Id nId)
+: mnId(nId)
+{
+}
+
+OOXMLPropertySetEntryToInteger::~OOXMLPropertySetEntryToInteger()
+{
+}
+
+void OOXMLPropertySetEntryToInteger::sprm(Sprm & /*rSprm*/)
+{    
+}
+
+void OOXMLPropertySetEntryToInteger::attribute(Id nId, Value & rValue)
+{
+    if (nId == mnId)
+        mnValue = rValue.getInt();
+}
+
+int OOXMLPropertySetEntryToInteger::getValue() const
+{
+    return mnValue;
+}
+
 }
--- writerfilter/source/ooxml/OOXMLPropertySetImpl.hxx	10 May 2007 14:37:38 -0000	1.17
+++ writerfilter/source/ooxml/OOXMLPropertySetImpl.hxx	16 Jul 2007 10:56:52 -0000	1.17.4.3
@@ -132,6 +132,7 @@
     typedef vector<OOXMLProperty::Pointer_t> OOXMLProperties_t;
 private:
     OOXMLProperties_t mProperties;
+    string msType;
 public:
     OOXMLPropertySetImpl();
     virtual ~OOXMLPropertySetImpl();
@@ -143,6 +144,8 @@
 
     OOXMLProperties_t::iterator begin();
     OOXMLProperties_t::iterator end();
+
+    virtual void setType(const string & rsType);
 };
 
 class OOXMLPropertySetValue : public OOXMLValue
@@ -212,6 +215,35 @@
     virtual OOXMLTable * clone() const;
 };
 
+class OOXMLPropertySetEntryToString : public Properties
+{
+    Id mnId;
+    ::rtl::OUString mStr;
+
+public:
+    OOXMLPropertySetEntryToString(Id nId);
+    virtual ~OOXMLPropertySetEntryToString();
+
+    virtual void sprm(Sprm & rSprm);
+    virtual void attribute(Id nId, Value & rValue);
+
+    const ::rtl::OUString & getString() const;
+};
+
+class OOXMLPropertySetEntryToInteger : public Properties
+{
+    Id mnId;
+    int mnValue;
+public:
+    OOXMLPropertySetEntryToInteger(Id nId);
+    virtual ~OOXMLPropertySetEntryToInteger();
+
+    virtual void sprm(Sprm & rSprm);
+    virtual void attribute(Id nId, Value & rValue);
+
+    int getValue() const;
+};
+
 Sprm::Kind SprmKind(sal_uInt32 nSprmCode);
 
 }  // namespace ooxml
--- writerfilter/source/ooxml/OOXMLSaxHandler.cxx	27 Jun 2007 09:16:33 -0000	1.22
+++ writerfilter/source/ooxml/OOXMLSaxHandler.cxx	18 Jul 2007 12:57:42 -0000	1.22.4.3
@@ -38,9 +38,9 @@
 
 #include <iostream>
 
-#define DEBUG_CONTEXT_STACK
-#define DEBUG_ATTRIBUTE
-#define DEBUG_ELEMENT
+//#define DEBUG_CONTEXT_STACK
+//#define DEBUG_ATTRIBUTE
+//#define DEBUG_ELEMENT
 
 namespace ooxml {
 
@@ -132,13 +132,13 @@
  const uno::Reference<xml::sax::XAttributeList> & attriblist)
     throw (xml::sax::SAXException, uno::RuntimeException)
 {
+#ifdef DEBUG_ELEMENT
     string sInfo = "start element: ";
     sInfo += rtl::OUStringToOString(sElement, RTL_TEXTENCODING_ASCII_US).
         getStr();
 
     mrStream.info(sInfo);
 
-#ifdef DEBUG_ELEMENT
     clog << sInfo << endl;
 #endif
 
@@ -162,8 +162,8 @@
     {
         pContext->setParentResource(pTopContext->getResource());
         handleAttributes(pContext, attriblist);
-        pContext->resolvePropertySetAttrs();
         pContext->startAction();
+        pContext->resolvePropertySetAttrs();
         pContext->setToken(nToken);
     }
 }
@@ -183,15 +183,15 @@
         pTopContext->endElement(nToken, pContext);
     }
 
+#ifdef DEBUG_ELEMENT
     string sInfo = "end element: ";
     sInfo += rtl::OUStringToOString(sElement, RTL_TEXTENCODING_ASCII_US).
         getStr();
 
-#ifdef DEBUG_ELEMENT
     clog << sInfo << endl;
-#endif
 
     mrStream.info(sInfo);
+#endif
 }
 
 void OOXMLSaxHandler::characters(const rtl::OUString & sText)
--- writerfilter/source/ooxml/OOXMLStreamImpl.cxx	4 Jun 2007 08:46:56 -0000	1.8
+++ writerfilter/source/ooxml/OOXMLStreamImpl.cxx	16 Jul 2007 20:07:34 -0000	1.8.4.3
@@ -40,6 +40,8 @@
 #include <com/sun/star/embed/XHierarchicalStorageAccess.hpp>
 #endif
 
+#define DEBUG_STREAM
+
 namespace ooxml
 {
 
@@ -112,6 +114,7 @@
     static rtl::OUString sFootnotesType(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes"));
     static rtl::OUString sEndnotesType(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes"));
     static rtl::OUString sCommentsType(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments"));
+    static rtl::OUString sThemeType(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme"));
     static rtl::OUString sTarget(RTL_CONSTASCII_USTRINGPARAM("Target"));
 
     rtl::OUString sStreamType(sDocumentType);
@@ -136,6 +139,9 @@
     case COMMENTS:
         sStreamType = sCommentsType;
         break;
+    case THEME:
+        sStreamType = sThemeType;
+	break;
     default:
         break;
     }
@@ -169,6 +175,7 @@
                     sDocumentTarget += aPair.Second;
                 }
 
+#ifdef DEBUG_STREAM
                 clog << "\"" 
                      << OUStringToOString(aPair.First, 
                                           RTL_TEXTENCODING_ASCII_US).getStr() 
@@ -176,14 +183,17 @@
                      << OUStringToOString(aPair.Second, 
                                           RTL_TEXTENCODING_ASCII_US).getStr() 
                      << "\"" << endl;
+#endif
             }
 
             if (bFound)
                 break;
         }
 
+#ifdef DEBUG_STREAM
         clog << OUStringToOString(sDocumentTarget,
                                   RTL_TEXTENCODING_ASCII_US).getStr() << endl;
+#endif
 
         if (bFound)
         {
--- writerfilter/source/ooxml/OOXMLresources.cxx	27 Jun 2007 13:19:22 -0000	1.73
+++ writerfilter/source/ooxml/OOXMLresources.cxx	18 Jul 2007 12:54:08 -0000	1.73.4.7
@@ -48,6 +48,8 @@
 #include "OOXMLPropertySetImpl.hxx"
 #include "TokenMap.hxx"
 
+/// @cond GENERATED
+
 namespace ooxml {
 using namespace ::std;
 
@@ -57,6 +59,9 @@
 static const sal_uInt8 sFtnEdnCont[] = { 0x4, 0x0 }; 
 static const sal_uInt8 sTab[] = { 0x9, 0x0 }; 
 static const sal_uInt8 sPgNum[] = { 0x0, 0x0 }; 
+static const sal_uInt8 sFieldStart[] = { 0x13  }; 
+static const sal_uInt8 sFieldSep[] = { 0x14 }; 
+static const sal_uInt8 sFieldEnd[] = { 0x15 }; 
 
       
       
@@ -411,269 +416,2058 @@
             ( new OOXMLContext_wordprocessingml_webSettings(*this));
         OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
 
-        if (pContext.get() != NULL)
-            return pContext;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            ( new OOXMLContext_wordprocessingml_fonts(*this));
-        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+        if (pContext.get() != NULL)
+            return pContext;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            ( new OOXMLContext_wordprocessingml_fonts(*this));
+        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            ( new OOXMLContext_wordprocessingml_numbering(*this));
+        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            ( new OOXMLContext_wordprocessingml_styles(*this));
+        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            ( new OOXMLContext_wordprocessingml_document(*this));
+        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            ( new OOXMLContext_wordprocessingml_glossaryDocument(*this));
+        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+    }
+        
+
+    return OOXMLContext::Pointer_t();
+}
+    
+doctok::Id OOXMLContext::getIdFromRefs(TokenEnum_t nToken)
+{
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_drawingml_blip(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_drawingml_graphic(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingDrawing_inline(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingDrawing_anchor(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_schemaLibrary_schemaLibrary(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_math_oMathPara(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_math_oMath(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_picture_pic(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_recipients(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_txbxContent(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_comments(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_footnotes(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_endnotes(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_hdr(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_ftr(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_settings(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_webSettings(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_fonts(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_numbering(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_styles(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_document(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+    {
+        OOXMLContext::Pointer_t pTopContext
+            (  new OOXMLContext_wordprocessingml_glossaryDocument(*this));
+        doctok::Id nId = pTopContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+    }
+        
+
+    return 0x0;
+}
+    
+/* 
+    class: OOXMLContext_drawingml_CT_ColorScheme*/
+OOXMLContext_drawingml_CT_ColorScheme::OOXMLContext_drawingml_CT_ColorScheme(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_ColorScheme::~OOXMLContext_drawingml_CT_ColorScheme()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_ColorScheme::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_ColorScheme::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_dk1:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_lt1:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_dk2:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_lt2:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_accent1:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_accent2:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_accent3:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_accent4:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_accent5:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_accent6:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_hlink:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_folHlink:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_extLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_OfficeArtExtensionList(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_ColorScheme::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_ColorScheme::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_ColorScheme::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_ColorScheme::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_ColorScheme::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_ColorScheme::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_CustomColor*/
+OOXMLContext_drawingml_CT_CustomColor::OOXMLContext_drawingml_CT_CustomColor(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_CustomColor::~OOXMLContext_drawingml_CT_CustomColor()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_CustomColor::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_ColorChoice(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_CustomColor::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_CustomColor::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
+{
+    bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_drawingml_EG_ColorChoice(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_CustomColor::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_CustomColor::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_ColorChoice(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_CustomColor::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_CustomColor::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_CustomColor::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_SupplementalFont*/
+OOXMLContext_drawingml_CT_SupplementalFont::OOXMLContext_drawingml_CT_SupplementalFont(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_SupplementalFont::~OOXMLContext_drawingml_CT_SupplementalFont()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_SupplementalFont::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_SupplementalFont::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_SupplementalFont::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_SupplementalFont::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_SupplementalFont::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_SupplementalFont::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_SupplementalFont::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_SupplementalFont::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_CustomColorList*/
+OOXMLContext_drawingml_CT_CustomColorList::OOXMLContext_drawingml_CT_CustomColorList(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_CustomColorList::~OOXMLContext_drawingml_CT_CustomColorList()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_CustomColorList::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_CustomColorList::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_custClr:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_CustomColor(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_CustomColorList::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_CustomColorList::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_CustomColorList::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_CustomColorList::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_CustomColorList::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_CustomColorList::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_FontCollection*/
+OOXMLContext_drawingml_CT_FontCollection::OOXMLContext_drawingml_CT_FontCollection(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_FontCollection::~OOXMLContext_drawingml_CT_FontCollection()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_FontCollection::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_FontCollection::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_latin:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextFont(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_ea:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextFont(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_cs:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextFont(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_font:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_SupplementalFont(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_extLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_OfficeArtExtensionList(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_FontCollection::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_FontCollection::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_FontCollection::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_FontCollection::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_FontCollection::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_FontCollection::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_EffectStyleItem*/
+OOXMLContext_drawingml_CT_EffectStyleItem::OOXMLContext_drawingml_CT_EffectStyleItem(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_EffectStyleItem::~OOXMLContext_drawingml_CT_EffectStyleItem()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_EffectStyleItem::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_EffectProperties(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_EffectStyleItem::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_EffectStyleItem::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
+{
+    bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_drawingml_EG_EffectProperties(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_EffectStyleItem::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_EffectStyleItem::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_EffectProperties(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_EffectStyleItem::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_EffectStyleItem::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_EffectStyleItem::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_FontScheme*/
+OOXMLContext_drawingml_CT_FontScheme::OOXMLContext_drawingml_CT_FontScheme(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_FontScheme::~OOXMLContext_drawingml_CT_FontScheme()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_FontScheme::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_FontScheme::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_majorFont:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_FontCollection(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_minorFont:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_FontCollection(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_extLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_OfficeArtExtensionList(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_FontScheme::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_FontScheme::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_FontScheme::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_FontScheme::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_FontScheme::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_FontScheme::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_FillStyleList*/
+OOXMLContext_drawingml_CT_FillStyleList::OOXMLContext_drawingml_CT_FillStyleList(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_FillStyleList::~OOXMLContext_drawingml_CT_FillStyleList()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_FillStyleList::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_FillStyleList::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_FillStyleList::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_FillStyleList::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_FillStyleList::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_FillStyleList::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_FillStyleList::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_FillStyleList::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_LineStyleList*/
+OOXMLContext_drawingml_CT_LineStyleList::OOXMLContext_drawingml_CT_LineStyleList(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_LineStyleList::~OOXMLContext_drawingml_CT_LineStyleList()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_LineStyleList::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_LineStyleList::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_LineStyleList::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_LineStyleList::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_LineStyleList::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_LineStyleList::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_LineStyleList::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_LineStyleList::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_EffectStyleList*/
+OOXMLContext_drawingml_CT_EffectStyleList::OOXMLContext_drawingml_CT_EffectStyleList(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_EffectStyleList::~OOXMLContext_drawingml_CT_EffectStyleList()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_EffectStyleList::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_EffectStyleList::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_effectStyle:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_EffectStyleItem(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_EffectStyleList::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_EffectStyleList::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_EffectStyleList::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_EffectStyleList::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_EffectStyleList::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_EffectStyleList::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_BackgroundFillStyleList*/
+OOXMLContext_drawingml_CT_BackgroundFillStyleList::OOXMLContext_drawingml_CT_BackgroundFillStyleList(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_BackgroundFillStyleList::~OOXMLContext_drawingml_CT_BackgroundFillStyleList()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_BackgroundFillStyleList::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_BackgroundFillStyleList::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_BackgroundFillStyleList::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_BackgroundFillStyleList::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_BackgroundFillStyleList::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_BackgroundFillStyleList::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_BackgroundFillStyleList::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_BackgroundFillStyleList::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_StyleMatrix*/
+OOXMLContext_drawingml_CT_StyleMatrix::OOXMLContext_drawingml_CT_StyleMatrix(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_StyleMatrix::~OOXMLContext_drawingml_CT_StyleMatrix()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_StyleMatrix::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_StyleMatrix::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_fillStyleLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_FillStyleList(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_lnStyleLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_LineStyleList(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_effectStyleLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_EffectStyleList(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_bgFillStyleLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_BackgroundFillStyleList(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_StyleMatrix::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_StyleMatrix::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_StyleMatrix::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_StyleMatrix::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_StyleMatrix::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_StyleMatrix::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_BaseStyles*/
+OOXMLContext_drawingml_CT_BaseStyles::OOXMLContext_drawingml_CT_BaseStyles(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_BaseStyles::~OOXMLContext_drawingml_CT_BaseStyles()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_BaseStyles::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_BaseStyles::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_clrScheme:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_ColorScheme(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_fontScheme:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_FontScheme(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_fmtScheme:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_StyleMatrix(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_extLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_OfficeArtExtensionList(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_BaseStyles::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_BaseStyles::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_BaseStyles::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_BaseStyles::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_BaseStyles::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_BaseStyles::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_TextFont*/
+OOXMLContext_drawingml_CT_TextFont::OOXMLContext_drawingml_CT_TextFont(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_TextFont::~OOXMLContext_drawingml_CT_TextFont()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_TextFont::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_TextFont::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_TextFont::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_TextFont::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_TextFont::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_TextFont::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_TextFont::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_TextFont::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_TextUnderlineLineFollowText*/
+OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::OOXMLContext_drawingml_CT_TextUnderlineLineFollowText(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::~OOXMLContext_drawingml_CT_TextUnderlineLineFollowText()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_TextUnderlineLineFollowText::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_TextUnderlineFillFollowText*/
+OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::OOXMLContext_drawingml_CT_TextUnderlineFillFollowText(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::~OOXMLContext_drawingml_CT_TextUnderlineFillFollowText()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_TextUnderlineFillFollowText::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper*/
+OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::~OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
+{
+    bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_EG_TextUnderlineLine*/
+OOXMLContext_drawingml_EG_TextUnderlineLine::OOXMLContext_drawingml_EG_TextUnderlineLine(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_EG_TextUnderlineLine::~OOXMLContext_drawingml_EG_TextUnderlineLine()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_EG_TextUnderlineLine::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_EG_TextUnderlineLine::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_uLnTx:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextUnderlineLineFollowText(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_EG_TextUnderlineLine::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_EG_TextUnderlineLine::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_EG_TextUnderlineLine::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_EG_TextUnderlineLine::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_EG_TextUnderlineLine::startAction()
+{
+}
+void OOXMLContext_drawingml_EG_TextUnderlineLine::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_EG_TextUnderlineFill*/
+OOXMLContext_drawingml_EG_TextUnderlineFill::OOXMLContext_drawingml_EG_TextUnderlineFill(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_EG_TextUnderlineFill::~OOXMLContext_drawingml_EG_TextUnderlineFill()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_EG_TextUnderlineFill::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_EG_TextUnderlineFill::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_uFillTx:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextUnderlineFillFollowText(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_uFill:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_EG_TextUnderlineFill::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_EG_TextUnderlineFill::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_EG_TextUnderlineFill::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_EG_TextUnderlineFill::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_EG_TextUnderlineFill::startAction()
+{
+}
+void OOXMLContext_drawingml_EG_TextUnderlineFill::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_CT_TextCharacterProperties*/
+OOXMLContext_drawingml_CT_TextCharacterProperties::OOXMLContext_drawingml_CT_TextCharacterProperties(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
 
-        if (pContext.get() != NULL)
-            return pContext;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            ( new OOXMLContext_wordprocessingml_numbering(*this));
-        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+OOXMLContext_drawingml_CT_TextCharacterProperties::~OOXMLContext_drawingml_CT_TextCharacterProperties()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_TextCharacterProperties::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
 
         if (pContext.get() != NULL)
             return pContext;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            ( new OOXMLContext_wordprocessingml_styles(*this));
-        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+     }
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_EffectProperties(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
 
         if (pContext.get() != NULL)
             return pContext;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            ( new OOXMLContext_wordprocessingml_document(*this));
-        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+     }
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_TextUnderlineLine(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
 
         if (pContext.get() != NULL)
             return pContext;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            ( new OOXMLContext_wordprocessingml_glossaryDocument(*this));
-        OOXMLContext::Pointer_t pContext(pTopContext->element(nToken));
+     }
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_TextUnderlineFill(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
 
         if (pContext.get() != NULL)
             return pContext;
-    }
-        
-
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
-doctok::Id OOXMLContext::getIdFromRefs(TokenEnum_t nToken)
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_TextCharacterProperties::element(TokenEnum_t nToken)
 {
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
     {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_drawingml_blip(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_drawingml_graphic(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingDrawing_inline(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingDrawing_anchor(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_schemaLibrary_schemaLibrary(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_math_oMathPara(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_math_oMath(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_picture_pic(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_recipients(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_txbxContent(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_comments(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_footnotes(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_endnotes(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_hdr(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_ftr(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_settings(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
-
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_webSettings(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
+     case OOXML_ELEMENT_drawingml_highlight:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Color(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_latin:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextFont(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_ea:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextFont(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_cs:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextFont(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_sym:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_TextFont(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_hlinkClick:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Hyperlink(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_hlinkMouseOver:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_Hyperlink(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_extLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_OfficeArtExtensionList(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
 
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_fonts(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
 
-        if (nId != 0x0)
-            return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_numbering(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_TextCharacterProperties::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_TextCharacterProperties::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_TextCharacterProperties::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_FillProperties(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
 
         if (nId != 0x0)
             return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_styles(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
+     }
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_EffectProperties(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
 
         if (nId != 0x0)
             return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_document(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
+     }
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_TextUnderlineLine(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
 
         if (nId != 0x0)
             return nId;
-    }
-        
-    {
-        OOXMLContext::Pointer_t pTopContext
-            (  new OOXMLContext_wordprocessingml_glossaryDocument(*this));
-        doctok::Id nId = pTopContext->getId(nToken);
+     }
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_EG_TextUnderlineFill(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
 
         if (nId != 0x0)
             return nId;
-    }
-        
-
+     }
+    
     return 0x0;
 }
     
+void OOXMLContext_drawingml_CT_TextCharacterProperties::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_TextCharacterProperties::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_TextCharacterProperties::endAction()
+{
+}
 /* 
     class: OOXMLContext_drawingml_CT_AlphaBiLevelEffect*/
 OOXMLContext_drawingml_CT_AlphaBiLevelEffect::OOXMLContext_drawingml_CT_AlphaBiLevelEffect(const OOXMLContext & rContext)
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaBiLevelEffect::~OOXMLContext_drawingml_CT_AlphaBiLevelEffect()
 {
 }
@@ -737,6 +2531,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaCeilingEffect::~OOXMLContext_drawingml_CT_AlphaCeilingEffect()
 {
 }
@@ -800,6 +2595,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaFloorEffect::~OOXMLContext_drawingml_CT_AlphaFloorEffect()
 {
 }
@@ -863,6 +2659,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaInverseEffect::~OOXMLContext_drawingml_CT_AlphaInverseEffect()
 {
 }
@@ -944,6 +2741,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaModulateFixedEffect::~OOXMLContext_drawingml_CT_AlphaModulateFixedEffect()
 {
 }
@@ -1007,6 +2805,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaOutsetEffect::~OOXMLContext_drawingml_CT_AlphaOutsetEffect()
 {
 }
@@ -1070,6 +2869,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaReplaceEffect::~OOXMLContext_drawingml_CT_AlphaReplaceEffect()
 {
 }
@@ -1133,6 +2933,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_BiLevelEffect::~OOXMLContext_drawingml_CT_BiLevelEffect()
 {
 }
@@ -1196,6 +2997,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_BlurEffect::~OOXMLContext_drawingml_CT_BlurEffect()
 {
 }
@@ -1259,6 +3061,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ColorChangeEffect::~OOXMLContext_drawingml_CT_ColorChangeEffect()
 {
 }
@@ -1341,6 +3144,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ColorReplaceEffect::~OOXMLContext_drawingml_CT_ColorReplaceEffect()
 {
 }
@@ -1430,6 +3234,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_DuotoneEffect::~OOXMLContext_drawingml_CT_DuotoneEffect()
 {
 }
@@ -1511,6 +3316,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GlowEffect::~OOXMLContext_drawingml_CT_GlowEffect()
 {
 }
@@ -1600,6 +3406,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GrayscaleEffect::~OOXMLContext_drawingml_CT_GrayscaleEffect()
 {
 }
@@ -1663,6 +3470,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_HSLEffect::~OOXMLContext_drawingml_CT_HSLEffect()
 {
 }
@@ -1726,6 +3534,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_InnerShadowEffect::~OOXMLContext_drawingml_CT_InnerShadowEffect()
 {
 }
@@ -1815,6 +3624,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_LuminanceEffect::~OOXMLContext_drawingml_CT_LuminanceEffect()
 {
 }
@@ -1878,6 +3688,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_OuterShadowEffect::~OOXMLContext_drawingml_CT_OuterShadowEffect()
 {
 }
@@ -1967,6 +3778,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PresetShadowEffect::~OOXMLContext_drawingml_CT_PresetShadowEffect()
 {
 }
@@ -2056,6 +3868,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ReflectionEffect::~OOXMLContext_drawingml_CT_ReflectionEffect()
 {
 }
@@ -2119,6 +3932,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_RelativeOffsetEffect::~OOXMLContext_drawingml_CT_RelativeOffsetEffect()
 {
 }
@@ -2182,6 +3996,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SoftEdgesEffect::~OOXMLContext_drawingml_CT_SoftEdgesEffect()
 {
 }
@@ -2245,6 +4060,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_TintEffect::~OOXMLContext_drawingml_CT_TintEffect()
 {
 }
@@ -2308,6 +4124,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_TransformEffect::~OOXMLContext_drawingml_CT_TransformEffect()
 {
 }
@@ -2371,6 +4188,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NoFillProperties::~OOXMLContext_drawingml_CT_NoFillProperties()
 {
 }
@@ -2434,6 +4252,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SolidColorFillProperties::~OOXMLContext_drawingml_CT_SolidColorFillProperties()
 {
 }
@@ -2515,6 +4334,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_LinearShadeProperties::~OOXMLContext_drawingml_CT_LinearShadeProperties()
 {
 }
@@ -2578,6 +4398,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PathShadeProperties::~OOXMLContext_drawingml_CT_PathShadeProperties()
 {
 }
@@ -2654,6 +4475,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_ShadeProperties::~OOXMLContext_drawingml_EG_ShadeProperties()
 {
 }
@@ -2736,6 +4558,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GradientStop::~OOXMLContext_drawingml_CT_GradientStop()
 {
 }
@@ -2825,6 +4648,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GradientStopList::~OOXMLContext_drawingml_CT_GradientStopList()
 {
 }
@@ -2901,6 +4725,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GradientFillProperties::~OOXMLContext_drawingml_CT_GradientFillProperties()
 {
 }
@@ -2998,9 +4823,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_TileInfoProperties*/
 OOXMLContext_drawingml_CT_TileInfoProperties::OOXMLContext_drawingml_CT_TileInfoProperties(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_TileInfoProperties::~OOXMLContext_drawingml_CT_TileInfoProperties()
 {
 }
@@ -3026,9 +4852,50 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_TileInfoProperties::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_TileInfoProperties::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_tx:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_ty:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_sx:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_sy:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_flip:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_algn:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -3037,7 +4904,38 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_TileInfoProperties : tx
+     case OOXML_ATTRIBUTE_drawingml_tx:
+        nResult = NS_ooxml::LN_CT_TileInfoProperties_tx;
+        break;
+        // CT_TileInfoProperties : ty
+     case OOXML_ATTRIBUTE_drawingml_ty:
+        nResult = NS_ooxml::LN_CT_TileInfoProperties_ty;
+        break;
+        // CT_TileInfoProperties : sx
+     case OOXML_ATTRIBUTE_drawingml_sx:
+        nResult = NS_ooxml::LN_CT_TileInfoProperties_sx;
+        break;
+        // CT_TileInfoProperties : sy
+     case OOXML_ATTRIBUTE_drawingml_sy:
+        nResult = NS_ooxml::LN_CT_TileInfoProperties_sy;
+        break;
+        // CT_TileInfoProperties : flip
+     case OOXML_ATTRIBUTE_drawingml_flip:
+        nResult = NS_ooxml::LN_CT_TileInfoProperties_flip;
+        break;
+        // CT_TileInfoProperties : algn
+     case OOXML_ATTRIBUTE_drawingml_algn:
+        nResult = NS_ooxml::LN_CT_TileInfoProperties_algn;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -3050,7 +4948,7 @@
     
 void OOXMLContext_drawingml_CT_TileInfoProperties::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_TileInfoProperties::startAction()
 {
@@ -3061,9 +4959,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_StretchInfoProperties*/
 OOXMLContext_drawingml_CT_StretchInfoProperties::OOXMLContext_drawingml_CT_StretchInfoProperties(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_StretchInfoProperties::~OOXMLContext_drawingml_CT_StretchInfoProperties()
 {
 }
@@ -3113,7 +5012,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_StretchInfoProperties : fillRect
+     case OOXML_ELEMENT_drawingml_fillRect:
+        nResult = NS_ooxml::LN_CT_StretchInfoProperties_fillRect;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -3126,7 +5036,7 @@
     
 void OOXMLContext_drawingml_CT_StretchInfoProperties::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_StretchInfoProperties::startAction()
 {
@@ -3137,9 +5047,10 @@
 /* 
     class: OOXMLContext_drawingml_EG_FillModeProperties*/
 OOXMLContext_drawingml_EG_FillModeProperties::OOXMLContext_drawingml_EG_FillModeProperties(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_FillModeProperties::~OOXMLContext_drawingml_EG_FillModeProperties()
 {
 }
@@ -3195,7 +5106,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // EG_FillModeProperties : tile
+     case OOXML_ELEMENT_drawingml_tile:
+        nResult = NS_ooxml::LN_EG_FillModeProperties_tile;
+        break;
+        // EG_FillModeProperties : stretch
+     case OOXML_ELEMENT_drawingml_stretch:
+        nResult = NS_ooxml::LN_EG_FillModeProperties_stretch;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -3208,7 +5134,7 @@
     
 void OOXMLContext_drawingml_EG_FillModeProperties::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_EG_FillModeProperties::startAction()
 {
@@ -3219,9 +5145,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_Blip*/
 OOXMLContext_drawingml_CT_Blip::OOXMLContext_drawingml_CT_Blip(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Blip::~OOXMLContext_drawingml_CT_Blip()
 {
 }
@@ -3231,6 +5158,15 @@
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_AG_Blob(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
@@ -3362,9 +5298,28 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_Blip::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_Blip::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_cstate:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_drawingml_AG_Blob(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
     
     return bResult;
 }
@@ -3373,7 +5328,90 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_Blip : alphaBiLevel
+     case OOXML_ELEMENT_drawingml_alphaBiLevel:
+        nResult = NS_ooxml::LN_CT_Blip_alphaBiLevel;
+        break;
+        // CT_Blip : alphaCeiling
+     case OOXML_ELEMENT_drawingml_alphaCeiling:
+        nResult = NS_ooxml::LN_CT_Blip_alphaCeiling;
+        break;
+        // CT_Blip : alphaFloor
+     case OOXML_ELEMENT_drawingml_alphaFloor:
+        nResult = NS_ooxml::LN_CT_Blip_alphaFloor;
+        break;
+        // CT_Blip : alphaInv
+     case OOXML_ELEMENT_drawingml_alphaInv:
+        nResult = NS_ooxml::LN_CT_Blip_alphaInv;
+        break;
+        // CT_Blip : alphaMod
+     case OOXML_ELEMENT_drawingml_alphaMod:
+        nResult = NS_ooxml::LN_CT_Blip_alphaMod;
+        break;
+        // CT_Blip : alphaModFix
+     case OOXML_ELEMENT_drawingml_alphaModFix:
+        nResult = NS_ooxml::LN_CT_Blip_alphaModFix;
+        break;
+        // CT_Blip : alphaRepl
+     case OOXML_ELEMENT_drawingml_alphaRepl:
+        nResult = NS_ooxml::LN_CT_Blip_alphaRepl;
+        break;
+        // CT_Blip : biLevel
+     case OOXML_ELEMENT_drawingml_biLevel:
+        nResult = NS_ooxml::LN_CT_Blip_biLevel;
+        break;
+        // CT_Blip : blur
+     case OOXML_ELEMENT_drawingml_blur:
+        nResult = NS_ooxml::LN_CT_Blip_blur;
+        break;
+        // CT_Blip : clrChange
+     case OOXML_ELEMENT_drawingml_clrChange:
+        nResult = NS_ooxml::LN_CT_Blip_clrChange;
+        break;
+        // CT_Blip : clrRepl
+     case OOXML_ELEMENT_drawingml_clrRepl:
+        nResult = NS_ooxml::LN_CT_Blip_clrRepl;
+        break;
+        // CT_Blip : duotone
+     case OOXML_ELEMENT_drawingml_duotone:
+        nResult = NS_ooxml::LN_CT_Blip_duotone;
+        break;
+        // CT_Blip : fillOverlay
+     case OOXML_ELEMENT_drawingml_fillOverlay:
+        nResult = NS_ooxml::LN_CT_Blip_fillOverlay;
+        break;
+        // CT_Blip : grayscl
+     case OOXML_ELEMENT_drawingml_grayscl:
+        nResult = NS_ooxml::LN_CT_Blip_grayscl;
+        break;
+        // CT_Blip : hsl
+     case OOXML_ELEMENT_drawingml_hsl:
+        nResult = NS_ooxml::LN_CT_Blip_hsl;
+        break;
+        // CT_Blip : lum
+     case OOXML_ELEMENT_drawingml_lum:
+        nResult = NS_ooxml::LN_CT_Blip_lum;
+        break;
+        // CT_Blip : tint
+     case OOXML_ELEMENT_drawingml_tint:
+        nResult = NS_ooxml::LN_CT_Blip_tint;
+        break;
+        // CT_Blip : extLst
+     case OOXML_ELEMENT_drawingml_extLst:
+        nResult = NS_ooxml::LN_CT_Blip_extLst;
+        break;
+        // CT_Blip : cstate
+     case OOXML_ATTRIBUTE_drawingml_cstate:
+        nResult = NS_ooxml::LN_CT_Blip_cstate;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -3381,12 +5419,21 @@
 {
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_AG_Blob(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
     return 0x0;
 }
     
 void OOXMLContext_drawingml_CT_Blip::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextStream::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_Blip::startAction()
 {
@@ -3397,9 +5444,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_BlipFillProperties*/
 OOXMLContext_drawingml_CT_BlipFillProperties::OOXMLContext_drawingml_CT_BlipFillProperties(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_BlipFillProperties::~OOXMLContext_drawingml_CT_BlipFillProperties()
 {
 }
@@ -3453,9 +5501,26 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_BlipFillProperties::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_BlipFillProperties::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_dpi:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLIntegerValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_rotWithShape:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -3464,7 +5529,30 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_BlipFillProperties : blip
+     case OOXML_ELEMENT_drawingml_blip:
+        nResult = NS_ooxml::LN_CT_BlipFillProperties_blip;
+        break;
+        // CT_BlipFillProperties : srcRect
+     case OOXML_ELEMENT_drawingml_srcRect:
+        nResult = NS_ooxml::LN_CT_BlipFillProperties_srcRect;
+        break;
+        // CT_BlipFillProperties : dpi
+     case OOXML_ATTRIBUTE_drawingml_dpi:
+        nResult = NS_ooxml::LN_CT_BlipFillProperties_dpi;
+        break;
+        // CT_BlipFillProperties : rotWithShape
+     case OOXML_ATTRIBUTE_drawingml_rotWithShape:
+        nResult = NS_ooxml::LN_CT_BlipFillProperties_rotWithShape;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -3486,7 +5574,7 @@
     
 void OOXMLContext_drawingml_CT_BlipFillProperties::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextStream::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_BlipFillProperties::startAction()
 {
@@ -3500,6 +5588,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PatternFillProperties::~OOXMLContext_drawingml_CT_PatternFillProperties()
 {
 }
@@ -3582,6 +5671,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GroupFillProperties::~OOXMLContext_drawingml_CT_GroupFillProperties()
 {
 }
@@ -3645,6 +5735,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_FillProperties::~OOXMLContext_drawingml_EG_FillProperties()
 {
 }
@@ -3751,6 +5842,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_FillProperties::~OOXMLContext_drawingml_CT_FillProperties()
 {
 }
@@ -3840,6 +5932,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_FillEffect::~OOXMLContext_drawingml_CT_FillEffect()
 {
 }
@@ -3929,6 +6022,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_FillOverlayEffect::~OOXMLContext_drawingml_CT_FillOverlayEffect()
 {
 }
@@ -4018,6 +6112,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EffectReference::~OOXMLContext_drawingml_CT_EffectReference()
 {
 }
@@ -4078,9 +6173,10 @@
 /* 
     class: OOXMLContext_drawingml_EG_Effect*/
 OOXMLContext_drawingml_EG_Effect::OOXMLContext_drawingml_EG_Effect(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_Effect::~OOXMLContext_drawingml_EG_Effect()
 {
 }
@@ -4304,7 +6400,134 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // EG_Effect : cont
+     case OOXML_ELEMENT_drawingml_cont:
+        nResult = NS_ooxml::LN_EG_Effect_cont;
+        break;
+        // EG_Effect : effect
+     case OOXML_ELEMENT_drawingml_effect:
+        nResult = NS_ooxml::LN_EG_Effect_effect;
+        break;
+        // EG_Effect : alphaBiLevel
+     case OOXML_ELEMENT_drawingml_alphaBiLevel:
+        nResult = NS_ooxml::LN_EG_Effect_alphaBiLevel;
+        break;
+        // EG_Effect : alphaCeiling
+     case OOXML_ELEMENT_drawingml_alphaCeiling:
+        nResult = NS_ooxml::LN_EG_Effect_alphaCeiling;
+        break;
+        // EG_Effect : alphaFloor
+     case OOXML_ELEMENT_drawingml_alphaFloor:
+        nResult = NS_ooxml::LN_EG_Effect_alphaFloor;
+        break;
+        // EG_Effect : alphaInv
+     case OOXML_ELEMENT_drawingml_alphaInv:
+        nResult = NS_ooxml::LN_EG_Effect_alphaInv;
+        break;
+        // EG_Effect : alphaMod
+     case OOXML_ELEMENT_drawingml_alphaMod:
+        nResult = NS_ooxml::LN_EG_Effect_alphaMod;
+        break;
+        // EG_Effect : alphaModFix
+     case OOXML_ELEMENT_drawingml_alphaModFix:
+        nResult = NS_ooxml::LN_EG_Effect_alphaModFix;
+        break;
+        // EG_Effect : alphaOutset
+     case OOXML_ELEMENT_drawingml_alphaOutset:
+        nResult = NS_ooxml::LN_EG_Effect_alphaOutset;
+        break;
+        // EG_Effect : alphaRepl
+     case OOXML_ELEMENT_drawingml_alphaRepl:
+        nResult = NS_ooxml::LN_EG_Effect_alphaRepl;
+        break;
+        // EG_Effect : biLevel
+     case OOXML_ELEMENT_drawingml_biLevel:
+        nResult = NS_ooxml::LN_EG_Effect_biLevel;
+        break;
+        // EG_Effect : blend
+     case OOXML_ELEMENT_drawingml_blend:
+        nResult = NS_ooxml::LN_EG_Effect_blend;
+        break;
+        // EG_Effect : blur
+     case OOXML_ELEMENT_drawingml_blur:
+        nResult = NS_ooxml::LN_EG_Effect_blur;
+        break;
+        // EG_Effect : clrChange
+     case OOXML_ELEMENT_drawingml_clrChange:
+        nResult = NS_ooxml::LN_EG_Effect_clrChange;
+        break;
+        // EG_Effect : clrRepl
+     case OOXML_ELEMENT_drawingml_clrRepl:
+        nResult = NS_ooxml::LN_EG_Effect_clrRepl;
+        break;
+        // EG_Effect : duotone
+     case OOXML_ELEMENT_drawingml_duotone:
+        nResult = NS_ooxml::LN_EG_Effect_duotone;
+        break;
+        // EG_Effect : fill
+     case OOXML_ELEMENT_drawingml_fill:
+        nResult = NS_ooxml::LN_EG_Effect_fill;
+        break;
+        // EG_Effect : fillOverlay
+     case OOXML_ELEMENT_drawingml_fillOverlay:
+        nResult = NS_ooxml::LN_EG_Effect_fillOverlay;
+        break;
+        // EG_Effect : glow
+     case OOXML_ELEMENT_drawingml_glow:
+        nResult = NS_ooxml::LN_EG_Effect_glow;
+        break;
+        // EG_Effect : grayscl
+     case OOXML_ELEMENT_drawingml_grayscl:
+        nResult = NS_ooxml::LN_EG_Effect_grayscl;
+        break;
+        // EG_Effect : hsl
+     case OOXML_ELEMENT_drawingml_hsl:
+        nResult = NS_ooxml::LN_EG_Effect_hsl;
+        break;
+        // EG_Effect : innerShdw
+     case OOXML_ELEMENT_drawingml_innerShdw:
+        nResult = NS_ooxml::LN_EG_Effect_innerShdw;
+        break;
+        // EG_Effect : lum
+     case OOXML_ELEMENT_drawingml_lum:
+        nResult = NS_ooxml::LN_EG_Effect_lum;
+        break;
+        // EG_Effect : outerShdw
+     case OOXML_ELEMENT_drawingml_outerShdw:
+        nResult = NS_ooxml::LN_EG_Effect_outerShdw;
+        break;
+        // EG_Effect : prstShdw
+     case OOXML_ELEMENT_drawingml_prstShdw:
+        nResult = NS_ooxml::LN_EG_Effect_prstShdw;
+        break;
+        // EG_Effect : reflection
+     case OOXML_ELEMENT_drawingml_reflection:
+        nResult = NS_ooxml::LN_EG_Effect_reflection;
+        break;
+        // EG_Effect : relOff
+     case OOXML_ELEMENT_drawingml_relOff:
+        nResult = NS_ooxml::LN_EG_Effect_relOff;
+        break;
+        // EG_Effect : softEdge
+     case OOXML_ELEMENT_drawingml_softEdge:
+        nResult = NS_ooxml::LN_EG_Effect_softEdge;
+        break;
+        // EG_Effect : tint
+     case OOXML_ELEMENT_drawingml_tint:
+        nResult = NS_ooxml::LN_EG_Effect_tint;
+        break;
+        // EG_Effect : xfrm
+     case OOXML_ELEMENT_drawingml_xfrm:
+        nResult = NS_ooxml::LN_EG_Effect_xfrm;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -4317,7 +6540,7 @@
     
 void OOXMLContext_drawingml_EG_Effect::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_EG_Effect::startAction()
 {
@@ -4331,6 +6554,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EffectContainer::~OOXMLContext_drawingml_CT_EffectContainer()
 {
 }
@@ -4412,6 +6636,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AlphaModulateEffect::~OOXMLContext_drawingml_CT_AlphaModulateEffect()
 {
 }
@@ -4488,6 +6713,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_BlendEffect::~OOXMLContext_drawingml_CT_BlendEffect()
 {
 }
@@ -4564,6 +6790,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EffectList::~OOXMLContext_drawingml_CT_EffectList()
 {
 }
@@ -4682,6 +6909,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_EffectProperties::~OOXMLContext_drawingml_EG_EffectProperties()
 {
 }
@@ -4764,6 +6992,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EffectProperties::~OOXMLContext_drawingml_CT_EffectProperties()
 {
 }
@@ -4853,6 +7082,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_blip::~OOXMLContext_drawingml_blip()
 {
 }
@@ -4926,9 +7156,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_ShapeProperties*/
 OOXMLContext_drawingml_CT_ShapeProperties::OOXMLContext_drawingml_CT_ShapeProperties(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ShapeProperties::~OOXMLContext_drawingml_CT_ShapeProperties()
 {
 }
@@ -5000,9 +7231,20 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_ShapeProperties::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_ShapeProperties::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_bwMode:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -5011,7 +7253,38 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_ShapeProperties : xfrm
+     case OOXML_ELEMENT_drawingml_xfrm:
+        nResult = NS_ooxml::LN_CT_ShapeProperties_xfrm;
+        break;
+        // CT_ShapeProperties : ln
+     case OOXML_ELEMENT_drawingml_ln:
+        nResult = NS_ooxml::LN_CT_ShapeProperties_ln;
+        break;
+        // CT_ShapeProperties : scene3d
+     case OOXML_ELEMENT_drawingml_scene3d:
+        nResult = NS_ooxml::LN_CT_ShapeProperties_scene3d;
+        break;
+        // CT_ShapeProperties : sp3d
+     case OOXML_ELEMENT_drawingml_sp3d:
+        nResult = NS_ooxml::LN_CT_ShapeProperties_sp3d;
+        break;
+        // CT_ShapeProperties : extLst
+     case OOXML_ELEMENT_drawingml_extLst:
+        nResult = NS_ooxml::LN_CT_ShapeProperties_extLst;
+        break;
+        // CT_ShapeProperties : bwMode
+     case OOXML_ATTRIBUTE_drawingml_bwMode:
+        nResult = NS_ooxml::LN_CT_ShapeProperties_bwMode;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -5051,7 +7324,7 @@
     
 void OOXMLContext_drawingml_CT_ShapeProperties::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_ShapeProperties::startAction()
 {
@@ -5065,6 +7338,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GroupShapeProperties::~OOXMLContext_drawingml_CT_GroupShapeProperties()
 {
 }
@@ -5183,6 +7457,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_OfficeArtExtension::~OOXMLContext_drawingml_CT_OfficeArtExtension()
 {
 }
@@ -5246,6 +7521,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Angle::~OOXMLContext_drawingml_CT_Angle()
 {
 }
@@ -5318,6 +7594,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PositiveFixedAngle::~OOXMLContext_drawingml_CT_PositiveFixedAngle()
 {
 }
@@ -5390,6 +7667,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Percentage::~OOXMLContext_drawingml_CT_Percentage()
 {
 }
@@ -5462,6 +7740,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PositivePercentage::~OOXMLContext_drawingml_CT_PositivePercentage()
 {
 }
@@ -5534,6 +7813,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_FixedPercentage::~OOXMLContext_drawingml_CT_FixedPercentage()
 {
 }
@@ -5606,6 +7886,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PositiveFixedPercentage::~OOXMLContext_drawingml_CT_PositiveFixedPercentage()
 {
 }
@@ -5678,6 +7959,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Ratio::~OOXMLContext_drawingml_CT_Ratio()
 {
 }
@@ -5738,9 +8020,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_Point2D*/
 OOXMLContext_drawingml_CT_Point2D::OOXMLContext_drawingml_CT_Point2D(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Point2D::~OOXMLContext_drawingml_CT_Point2D()
 {
 }
@@ -5766,9 +8049,26 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_Point2D::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_Point2D::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_x:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_y:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -5777,7 +8077,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_Point2D : x
+     case OOXML_ATTRIBUTE_drawingml_x:
+        nResult = NS_ooxml::LN_CT_Point2D_x;
+        break;
+        // CT_Point2D : y
+     case OOXML_ATTRIBUTE_drawingml_y:
+        nResult = NS_ooxml::LN_CT_Point2D_y;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -5790,7 +8105,7 @@
     
 void OOXMLContext_drawingml_CT_Point2D::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_Point2D::startAction()
 {
@@ -5801,9 +8116,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_PositiveSize2D*/
 OOXMLContext_drawingml_CT_PositiveSize2D::OOXMLContext_drawingml_CT_PositiveSize2D(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PositiveSize2D::~OOXMLContext_drawingml_CT_PositiveSize2D()
 {
 }
@@ -5829,9 +8145,26 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_PositiveSize2D::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_PositiveSize2D::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_cx:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_cy:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -5840,7 +8173,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_PositiveSize2D : cx
+     case OOXML_ATTRIBUTE_drawingml_cx:
+        nResult = NS_ooxml::LN_CT_PositiveSize2D_cx;
+        break;
+        // CT_PositiveSize2D : cy
+     case OOXML_ATTRIBUTE_drawingml_cy:
+        nResult = NS_ooxml::LN_CT_PositiveSize2D_cy;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -5853,7 +8201,7 @@
     
 void OOXMLContext_drawingml_CT_PositiveSize2D::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_PositiveSize2D::startAction()
 {
@@ -5867,6 +8215,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ComplementTransform::~OOXMLContext_drawingml_CT_ComplementTransform()
 {
 }
@@ -5930,6 +8279,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_InverseTransform::~OOXMLContext_drawingml_CT_InverseTransform()
 {
 }
@@ -5993,6 +8343,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GrayscaleTransform::~OOXMLContext_drawingml_CT_GrayscaleTransform()
 {
 }
@@ -6056,6 +8407,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GammaTransform::~OOXMLContext_drawingml_CT_GammaTransform()
 {
 }
@@ -6119,6 +8471,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_InverseGammaTransform::~OOXMLContext_drawingml_CT_InverseGammaTransform()
 {
 }
@@ -6182,6 +8535,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_ColorTransform::~OOXMLContext_drawingml_EG_ColorTransform()
 {
 }
@@ -6420,6 +8774,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ScRgbColor::~OOXMLContext_drawingml_CT_ScRgbColor()
 {
 }
@@ -6501,6 +8856,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SRgbColor::~OOXMLContext_drawingml_CT_SRgbColor()
 {
 }
@@ -6591,6 +8947,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_HslColor::~OOXMLContext_drawingml_CT_HslColor()
 {
 }
@@ -6672,6 +9029,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SystemColor::~OOXMLContext_drawingml_CT_SystemColor()
 {
 }
@@ -6766,6 +9124,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SchemeColor::~OOXMLContext_drawingml_CT_SchemeColor()
 {
 }
@@ -6856,6 +9215,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PresetColor::~OOXMLContext_drawingml_CT_PresetColor()
 {
 }
@@ -6946,6 +9306,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_OfficeArtExtensionList::~OOXMLContext_drawingml_EG_OfficeArtExtensionList()
 {
 }
@@ -7022,6 +9383,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_OfficeArtExtensionList::~OOXMLContext_drawingml_CT_OfficeArtExtensionList()
 {
 }
@@ -7111,6 +9473,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Scale2D::~OOXMLContext_drawingml_CT_Scale2D()
 {
 }
@@ -7190,9 +9553,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_Transform2D*/
 OOXMLContext_drawingml_CT_Transform2D::OOXMLContext_drawingml_CT_Transform2D(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Transform2D::~OOXMLContext_drawingml_CT_Transform2D()
 {
 }
@@ -7237,9 +9601,32 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_Transform2D::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_Transform2D::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_rot:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_flipH:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_flipV:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -7248,7 +9635,34 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_Transform2D : off
+     case OOXML_ELEMENT_drawingml_off:
+        nResult = NS_ooxml::LN_CT_Transform2D_off;
+        break;
+        // CT_Transform2D : ext
+     case OOXML_ELEMENT_drawingml_ext:
+        nResult = NS_ooxml::LN_CT_Transform2D_ext;
+        break;
+        // CT_Transform2D : rot
+     case OOXML_ATTRIBUTE_drawingml_rot:
+        nResult = NS_ooxml::LN_CT_Transform2D_rot;
+        break;
+        // CT_Transform2D : flipH
+     case OOXML_ATTRIBUTE_drawingml_flipH:
+        nResult = NS_ooxml::LN_CT_Transform2D_flipH;
+        break;
+        // CT_Transform2D : flipV
+     case OOXML_ATTRIBUTE_drawingml_flipV:
+        nResult = NS_ooxml::LN_CT_Transform2D_flipV;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -7261,7 +9675,7 @@
     
 void OOXMLContext_drawingml_CT_Transform2D::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_Transform2D::startAction()
 {
@@ -7275,6 +9689,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GroupTransform2D::~OOXMLContext_drawingml_CT_GroupTransform2D()
 {
 }
@@ -7369,6 +9784,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Point3D::~OOXMLContext_drawingml_CT_Point3D()
 {
 }
@@ -7432,6 +9848,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Vector3D::~OOXMLContext_drawingml_CT_Vector3D()
 {
 }
@@ -7495,6 +9912,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_SphereCoords::~OOXMLContext_drawingml_CT_SphereCoords()
 {
 }
@@ -7558,6 +9976,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_RelativeRect::~OOXMLContext_drawingml_CT_RelativeRect()
 {
 }
@@ -7621,6 +10040,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_ColorChoice::~OOXMLContext_drawingml_EG_ColorChoice()
 {
 }
@@ -7727,6 +10147,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Color::~OOXMLContext_drawingml_CT_Color()
 {
 }
@@ -7816,6 +10237,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ColorMRU::~OOXMLContext_drawingml_CT_ColorMRU()
 {
 }
@@ -7892,11 +10314,108 @@
 {
 }
 /* 
+    class: OOXMLContext_drawingml_AG_Blob*/
+OOXMLContext_drawingml_AG_Blob::OOXMLContext_drawingml_AG_Blob(const OOXMLContext & rContext)
+: OOXMLContextStream(rContext)
+{
+}
+
+OOXMLContext_drawingml_AG_Blob::~OOXMLContext_drawingml_AG_Blob()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_AG_Blob::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_AG_Blob::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_AG_Blob::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
+{
+    bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_relationships_embed:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_relationships_link:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_AG_Blob::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    switch (nToken)
+    {
+        // AG_Blob : r:embed
+     case OOXML_ATTRIBUTE_relationships_embed:
+        nResult = NS_ooxml::LN_AG_Blob_r_embed;
+        break;
+        // AG_Blob : r:link
+     case OOXML_ATTRIBUTE_relationships_link:
+        nResult = NS_ooxml::LN_AG_Blob_r_link;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_AG_Blob::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_AG_Blob::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContextStream::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_AG_Blob::startAction()
+{
+}
+void OOXMLContext_drawingml_AG_Blob::endAction()
+{
+}
+/* 
     class: OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile*/
 OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile::OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile(const OOXMLContext & rContext)
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile::~OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile()
 {
 }
@@ -7960,11 +10479,95 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Hyperlink::~OOXMLContext_drawingml_CT_Hyperlink()
 {
 }
 
-OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_Hyperlink::elementFromRefs(TokenEnum_t nToken)
+OOXMLContext::Pointer_t OOXMLContext_drawingml_CT_Hyperlink::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_drawingml_CT_Hyperlink::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+    switch (nToken)
+    {
+     case OOXML_ELEMENT_drawingml_snd:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile(*this));
+         }
+             break;
+     case OOXML_ELEMENT_drawingml_extLst:
+        {
+            pResult = OOXMLContext::Pointer_t
+               ( new OOXMLContext_drawingml_CT_OfficeArtExtensionList(*this));
+         }
+             break;
+     case OOXML_TOKENS_END:
+         break;
+     default:
+         pResult = elementFromRefs(nToken);
+              break;
+     }
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_drawingml_CT_Hyperlink::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_drawingml_CT_Hyperlink::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_drawingml_CT_Hyperlink::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_drawingml_CT_Hyperlink::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_drawingml_CT_Hyperlink::startAction()
+{
+}
+void OOXMLContext_drawingml_CT_Hyperlink::endAction()
+{
+}
+/* 
+    class: OOXMLContext_drawingml_AG_Locking*/
+OOXMLContext_drawingml_AG_Locking::OOXMLContext_drawingml_AG_Locking(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_drawingml_AG_Locking::~OOXMLContext_drawingml_AG_Locking()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_drawingml_AG_Locking::elementFromRefs(TokenEnum_t nToken)
 {
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
@@ -7973,30 +10576,11 @@
 }
     
 OOXMLContext::Pointer_t
-OOXMLContext_drawingml_CT_Hyperlink::element(TokenEnum_t nToken)
+OOXMLContext_drawingml_AG_Locking::element(TokenEnum_t nToken)
 {
     OOXMLContext::Pointer_t pResult;
     
-    switch (nToken)
-    {
-     case OOXML_ELEMENT_drawingml_snd:
-        {
-            pResult = OOXMLContext::Pointer_t
-               ( new OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile(*this));
-         }
-             break;
-     case OOXML_ELEMENT_drawingml_extLst:
-        {
-            pResult = OOXMLContext::Pointer_t
-               ( new OOXMLContext_drawingml_CT_OfficeArtExtensionList(*this));
-         }
-             break;
-     case OOXML_TOKENS_END:
-         break;
-     default:
-         pResult = elementFromRefs(nToken);
-              break;
-     }
+     pResult = elementFromRefs(nToken);
 
     if (pResult.get() != NULL)
         pResult->setToken(nToken);
@@ -8004,14 +10588,14 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_Hyperlink::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_AG_Locking::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
 {
     bool bResult = false;
     
     return bResult;
 }
 doctok::Id
-OOXMLContext_drawingml_CT_Hyperlink::getId(TokenEnum_t nToken)
+OOXMLContext_drawingml_AG_Locking::getId(TokenEnum_t nToken)
 {
     doctok::Id nResult = 0x0;
     
@@ -8019,21 +10603,21 @@
     return nResult;  
 }
     
-doctok::Id OOXMLContext_drawingml_CT_Hyperlink::getIdFromRefs(TokenEnum_t nToken)
+doctok::Id OOXMLContext_drawingml_AG_Locking::getIdFromRefs(TokenEnum_t nToken)
 {
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
     return 0x0;
 }
     
-void OOXMLContext_drawingml_CT_Hyperlink::lcl_characters(const rtl::OUString & sText) 
+void OOXMLContext_drawingml_AG_Locking::lcl_characters(const rtl::OUString & sText) 
 {
 OOXMLContext::lcl_characters(sText);
 }
-void OOXMLContext_drawingml_CT_Hyperlink::startAction()
+void OOXMLContext_drawingml_AG_Locking::startAction()
 {
 }
-void OOXMLContext_drawingml_CT_Hyperlink::endAction()
+void OOXMLContext_drawingml_AG_Locking::endAction()
 {
 }
 /* 
@@ -8042,6 +10626,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ConnectorLocking::~OOXMLContext_drawingml_CT_ConnectorLocking()
 {
 }
@@ -8051,6 +10636,15 @@
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_AG_Locking(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
@@ -8080,9 +10674,17 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_ConnectorLocking::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_ConnectorLocking::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_drawingml_AG_Locking(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
     
     return bResult;
 }
@@ -8099,6 +10701,15 @@
 {
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_AG_Locking(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
     return 0x0;
 }
     
@@ -8118,6 +10729,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ShapeLocking::~OOXMLContext_drawingml_CT_ShapeLocking()
 {
 }
@@ -8127,6 +10739,15 @@
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_AG_Locking(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
@@ -8156,9 +10777,17 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_ShapeLocking::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_ShapeLocking::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_drawingml_AG_Locking(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
     
     return bResult;
 }
@@ -8175,6 +10804,15 @@
 {
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_AG_Locking(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
     return 0x0;
 }
     
@@ -8194,6 +10832,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PictureLocking::~OOXMLContext_drawingml_CT_PictureLocking()
 {
 }
@@ -8203,6 +10842,15 @@
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_AG_Locking(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
@@ -8232,9 +10880,17 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_PictureLocking::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_PictureLocking::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_drawingml_AG_Locking(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
     
     return bResult;
 }
@@ -8251,6 +10907,15 @@
 {
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_drawingml_AG_Locking(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
     return 0x0;
 }
     
@@ -8270,6 +10935,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GroupLocking::~OOXMLContext_drawingml_CT_GroupLocking()
 {
 }
@@ -8343,9 +11009,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking*/
 OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking::OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking::~OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking()
 {
 }
@@ -8384,9 +11051,50 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_noGrp:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_noDrilldown:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_noSelect:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_noChangeAspect:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_noMove:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_noResize:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -8395,7 +11103,42 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_GraphicalObjectFrameLocking : extLst
+     case OOXML_ELEMENT_drawingml_extLst:
+        nResult = NS_ooxml::LN_CT_GraphicalObjectFrameLocking_extLst;
+        break;
+        // CT_GraphicalObjectFrameLocking : noGrp
+     case OOXML_ATTRIBUTE_drawingml_noGrp:
+        nResult = NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noGrp;
+        break;
+        // CT_GraphicalObjectFrameLocking : noDrilldown
+     case OOXML_ATTRIBUTE_drawingml_noDrilldown:
+        nResult = NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noDrilldown;
+        break;
+        // CT_GraphicalObjectFrameLocking : noSelect
+     case OOXML_ATTRIBUTE_drawingml_noSelect:
+        nResult = NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noSelect;
+        break;
+        // CT_GraphicalObjectFrameLocking : noChangeAspect
+     case OOXML_ATTRIBUTE_drawingml_noChangeAspect:
+        nResult = NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noChangeAspect;
+        break;
+        // CT_GraphicalObjectFrameLocking : noMove
+     case OOXML_ATTRIBUTE_drawingml_noMove:
+        nResult = NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noMove;
+        break;
+        // CT_GraphicalObjectFrameLocking : noResize
+     case OOXML_ATTRIBUTE_drawingml_noResize:
+        nResult = NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noResize;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -8408,7 +11151,7 @@
     
 void OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking::startAction()
 {
@@ -8419,9 +11162,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_NonVisualDrawingProps*/
 OOXMLContext_drawingml_CT_NonVisualDrawingProps::OOXMLContext_drawingml_CT_NonVisualDrawingProps(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualDrawingProps::~OOXMLContext_drawingml_CT_NonVisualDrawingProps()
 {
 }
@@ -8472,9 +11216,38 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_NonVisualDrawingProps::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_NonVisualDrawingProps::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_id:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_name:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_descr:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_drawingml_hidden:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -8483,7 +11256,42 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_NonVisualDrawingProps : hlinkClick
+     case OOXML_ELEMENT_drawingml_hlinkClick:
+        nResult = NS_ooxml::LN_CT_NonVisualDrawingProps_hlinkClick;
+        break;
+        // CT_NonVisualDrawingProps : hlinkHover
+     case OOXML_ELEMENT_drawingml_hlinkHover:
+        nResult = NS_ooxml::LN_CT_NonVisualDrawingProps_hlinkHover;
+        break;
+        // CT_NonVisualDrawingProps : extLst
+     case OOXML_ELEMENT_drawingml_extLst:
+        nResult = NS_ooxml::LN_CT_NonVisualDrawingProps_extLst;
+        break;
+        // CT_NonVisualDrawingProps : id
+     case OOXML_ATTRIBUTE_drawingml_id:
+        nResult = NS_ooxml::LN_CT_NonVisualDrawingProps_id;
+        break;
+        // CT_NonVisualDrawingProps : name
+     case OOXML_ATTRIBUTE_drawingml_name:
+        nResult = NS_ooxml::LN_CT_NonVisualDrawingProps_name;
+        break;
+        // CT_NonVisualDrawingProps : descr
+     case OOXML_ATTRIBUTE_drawingml_descr:
+        nResult = NS_ooxml::LN_CT_NonVisualDrawingProps_descr;
+        break;
+        // CT_NonVisualDrawingProps : hidden
+     case OOXML_ATTRIBUTE_drawingml_hidden:
+        nResult = NS_ooxml::LN_CT_NonVisualDrawingProps_hidden;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -8496,7 +11304,7 @@
     
 void OOXMLContext_drawingml_CT_NonVisualDrawingProps::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_NonVisualDrawingProps::startAction()
 {
@@ -8510,6 +11318,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualDrawingShapeProps::~OOXMLContext_drawingml_CT_NonVisualDrawingShapeProps()
 {
 }
@@ -8592,6 +11401,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualConnectorProperties::~OOXMLContext_drawingml_CT_NonVisualConnectorProperties()
 {
 }
@@ -8683,9 +11493,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_NonVisualPictureProperties*/
 OOXMLContext_drawingml_CT_NonVisualPictureProperties::OOXMLContext_drawingml_CT_NonVisualPictureProperties(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualPictureProperties::~OOXMLContext_drawingml_CT_NonVisualPictureProperties()
 {
 }
@@ -8730,9 +11541,20 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_NonVisualPictureProperties::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_NonVisualPictureProperties::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_preferRelativeResize:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -8741,7 +11563,26 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_NonVisualPictureProperties : picLocks
+     case OOXML_ELEMENT_drawingml_picLocks:
+        nResult = NS_ooxml::LN_CT_NonVisualPictureProperties_picLocks;
+        break;
+        // CT_NonVisualPictureProperties : extLst
+     case OOXML_ELEMENT_drawingml_extLst:
+        nResult = NS_ooxml::LN_CT_NonVisualPictureProperties_extLst;
+        break;
+        // CT_NonVisualPictureProperties : preferRelativeResize
+     case OOXML_ATTRIBUTE_drawingml_preferRelativeResize:
+        nResult = NS_ooxml::LN_CT_NonVisualPictureProperties_preferRelativeResize;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -8754,7 +11595,7 @@
     
 void OOXMLContext_drawingml_CT_NonVisualPictureProperties::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_NonVisualPictureProperties::startAction()
 {
@@ -8768,6 +11609,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualGroupDrawingShapeProps::~OOXMLContext_drawingml_CT_NonVisualGroupDrawingShapeProps()
 {
 }
@@ -8847,9 +11689,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties*/
 OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties::OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties::~OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties()
 {
 }
@@ -8905,7 +11748,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_NonVisualGraphicFrameProperties : graphicFrameLocks
+     case OOXML_ELEMENT_drawingml_graphicFrameLocks:
+        nResult = NS_ooxml::LN_CT_NonVisualGraphicFrameProperties_graphicFrameLocks;
+        break;
+        // CT_NonVisualGraphicFrameProperties : extLst
+     case OOXML_ELEMENT_drawingml_extLst:
+        nResult = NS_ooxml::LN_CT_NonVisualGraphicFrameProperties_extLst;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -8918,7 +11776,7 @@
     
 void OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties::startAction()
 {
@@ -8929,9 +11787,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_GraphicalObjectData*/
 OOXMLContext_drawingml_CT_GraphicalObjectData::OOXMLContext_drawingml_CT_GraphicalObjectData(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GraphicalObjectData::~OOXMLContext_drawingml_CT_GraphicalObjectData()
 {
 }
@@ -8966,9 +11825,20 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_GraphicalObjectData::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_GraphicalObjectData::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_uri:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -8977,7 +11847,21 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_GraphicalObjectData : 
+        nResult = NS_ooxml::LN_CT_GraphicalObjectData_;
+        break;
+        // CT_GraphicalObjectData : uri
+     case OOXML_ATTRIBUTE_drawingml_uri:
+        nResult = NS_ooxml::LN_CT_GraphicalObjectData_uri;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -8999,7 +11883,7 @@
     
 void OOXMLContext_drawingml_CT_GraphicalObjectData::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_GraphicalObjectData::startAction()
 {
@@ -9010,9 +11894,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_GraphicalObject*/
 OOXMLContext_drawingml_CT_GraphicalObject::OOXMLContext_drawingml_CT_GraphicalObject(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GraphicalObject::~OOXMLContext_drawingml_CT_GraphicalObject()
 {
 }
@@ -9062,7 +11947,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_GraphicalObject : graphicData
+     case OOXML_ELEMENT_drawingml_graphicData:
+        nResult = NS_ooxml::LN_CT_GraphicalObject_graphicData;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -9075,7 +11971,7 @@
     
 void OOXMLContext_drawingml_CT_GraphicalObject::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_GraphicalObject::startAction()
 {
@@ -9089,6 +11985,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_graphic::~OOXMLContext_drawingml_graphic()
 {
 }
@@ -9165,6 +12062,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GeomGuide::~OOXMLContext_drawingml_CT_GeomGuide()
 {
 }
@@ -9225,9 +12123,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_GeomGuideList*/
 OOXMLContext_drawingml_CT_GeomGuideList::OOXMLContext_drawingml_CT_GeomGuideList(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GeomGuideList::~OOXMLContext_drawingml_CT_GeomGuideList()
 {
 }
@@ -9277,7 +12176,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_GeomGuideList : gd
+     case OOXML_ELEMENT_drawingml_gd:
+        nResult = NS_ooxml::LN_CT_GeomGuideList_gd;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -9290,7 +12200,7 @@
     
 void OOXMLContext_drawingml_CT_GeomGuideList::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_GeomGuideList::startAction()
 {
@@ -9304,6 +12214,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AdjPoint2D::~OOXMLContext_drawingml_CT_AdjPoint2D()
 {
 }
@@ -9367,6 +12278,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_GeomRect::~OOXMLContext_drawingml_CT_GeomRect()
 {
 }
@@ -9430,6 +12342,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_XYAdjustHandle::~OOXMLContext_drawingml_CT_XYAdjustHandle()
 {
 }
@@ -9506,6 +12419,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PolarAdjustHandle::~OOXMLContext_drawingml_CT_PolarAdjustHandle()
 {
 }
@@ -9582,6 +12496,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ConnectionSite::~OOXMLContext_drawingml_CT_ConnectionSite()
 {
 }
@@ -9658,6 +12573,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_AdjustHandleList::~OOXMLContext_drawingml_CT_AdjustHandleList()
 {
 }
@@ -9740,6 +12656,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_ConnectionSiteList::~OOXMLContext_drawingml_CT_ConnectionSiteList()
 {
 }
@@ -9816,6 +12733,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Connection::~OOXMLContext_drawingml_CT_Connection()
 {
 }
@@ -9879,6 +12797,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DMoveTo::~OOXMLContext_drawingml_CT_Path2DMoveTo()
 {
 }
@@ -9955,6 +12874,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DLineTo::~OOXMLContext_drawingml_CT_Path2DLineTo()
 {
 }
@@ -10031,6 +12951,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DArcTo::~OOXMLContext_drawingml_CT_Path2DArcTo()
 {
 }
@@ -10094,6 +13015,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DQuadBezierTo::~OOXMLContext_drawingml_CT_Path2DQuadBezierTo()
 {
 }
@@ -10170,6 +13092,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DCubicBezierTo::~OOXMLContext_drawingml_CT_Path2DCubicBezierTo()
 {
 }
@@ -10246,6 +13169,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DClose::~OOXMLContext_drawingml_CT_Path2DClose()
 {
 }
@@ -10309,6 +13233,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2D::~OOXMLContext_drawingml_CT_Path2D()
 {
 }
@@ -10415,6 +13340,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_Path2DList::~OOXMLContext_drawingml_CT_Path2DList()
 {
 }
@@ -10488,9 +13414,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_PresetGeometry2D*/
 OOXMLContext_drawingml_CT_PresetGeometry2D::OOXMLContext_drawingml_CT_PresetGeometry2D(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PresetGeometry2D::~OOXMLContext_drawingml_CT_PresetGeometry2D()
 {
 }
@@ -10529,9 +13456,22 @@
     return pResult;
 }
      
-bool OOXMLContext_drawingml_CT_PresetGeometry2D::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_drawingml_CT_PresetGeometry2D::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_drawingml_prst:
+        {
+          OOXMLValue::Pointer_t pVal(new OOXMLValue_drawingml_ST_ShapeType(rValue));
+          newProperty(nToken, pVal);
+
+          bResult = true;
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -10540,7 +13480,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_PresetGeometry2D : avLst
+     case OOXML_ELEMENT_drawingml_avLst:
+        nResult = NS_ooxml::LN_CT_PresetGeometry2D_avLst;
+        break;
+        // CT_PresetGeometry2D : prst
+     case OOXML_ATTRIBUTE_drawingml_prst:
+        nResult = NS_ooxml::LN_CT_PresetGeometry2D_prst;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -10553,7 +13508,7 @@
     
 void OOXMLContext_drawingml_CT_PresetGeometry2D::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_PresetGeometry2D::startAction()
 {
@@ -10567,6 +13522,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_PresetTextShape::~OOXMLContext_drawingml_CT_PresetTextShape()
 {
 }
@@ -10640,9 +13596,10 @@
 /* 
     class: OOXMLContext_drawingml_CT_CustomGeometry2D*/
 OOXMLContext_drawingml_CT_CustomGeometry2D::OOXMLContext_drawingml_CT_CustomGeometry2D(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_CT_CustomGeometry2D::~OOXMLContext_drawingml_CT_CustomGeometry2D()
 {
 }
@@ -10722,7 +13679,38 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_CustomGeometry2D : avLst
+     case OOXML_ELEMENT_drawingml_avLst:
+        nResult = NS_ooxml::LN_CT_CustomGeometry2D_avLst;
+        break;
+        // CT_CustomGeometry2D : gdLst
+     case OOXML_ELEMENT_drawingml_gdLst:
+        nResult = NS_ooxml::LN_CT_CustomGeometry2D_gdLst;
+        break;
+        // CT_CustomGeometry2D : ahLst
+     case OOXML_ELEMENT_drawingml_ahLst:
+        nResult = NS_ooxml::LN_CT_CustomGeometry2D_ahLst;
+        break;
+        // CT_CustomGeometry2D : cxnLst
+     case OOXML_ELEMENT_drawingml_cxnLst:
+        nResult = NS_ooxml::LN_CT_CustomGeometry2D_cxnLst;
+        break;
+        // CT_CustomGeometry2D : rect
+     case OOXML_ELEMENT_drawingml_rect:
+        nResult = NS_ooxml::LN_CT_CustomGeometry2D_rect;
+        break;
+        // CT_CustomGeometry2D : pathLst
+     case OOXML_ELEMENT_drawingml_pathLst:
+        nResult = NS_ooxml::LN_CT_CustomGeometry2D_pathLst;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -10735,7 +13723,7 @@
     
 void OOXMLContext_drawingml_CT_CustomGeometry2D::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_CT_CustomGeometry2D::startAction()
 {
@@ -10746,9 +13734,10 @@
 /* 
     class: OOXMLContext_drawingml_EG_Geometry*/
 OOXMLContext_drawingml_EG_Geometry::OOXMLContext_drawingml_EG_Geometry(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_Geometry::~OOXMLContext_drawingml_EG_Geometry()
 {
 }
@@ -10804,7 +13793,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // EG_Geometry : custGeom
+     case OOXML_ELEMENT_drawingml_custGeom:
+        nResult = NS_ooxml::LN_EG_Geometry_custGeom;
+        break;
+        // EG_Geometry : prstGeom
+     case OOXML_ELEMENT_drawingml_prstGeom:
+        nResult = NS_ooxml::LN_EG_Geometry_prstGeom;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -10817,7 +13821,7 @@
     
 void OOXMLContext_drawingml_EG_Geometry::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_drawingml_EG_Geometry::startAction()
 {
@@ -10831,6 +13835,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_drawingml_EG_TextGeometry::~OOXMLContext_drawingml_EG_TextGeometry()
 {
 }
@@ -10910,9 +13915,10 @@
 /* 
     class: OOXMLContext_wordprocessingDrawing_CT_EffectExtent*/
 OOXMLContext_wordprocessingDrawing_CT_EffectExtent::OOXMLContext_wordprocessingDrawing_CT_EffectExtent(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_EffectExtent::~OOXMLContext_wordprocessingDrawing_CT_EffectExtent()
 {
 }
@@ -10938,9 +13944,46 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingDrawing_CT_EffectExtent::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingDrawing_CT_EffectExtent::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_l:
+        {
+          OOXMLValue::Pointer_t pVal(new OOXMLValue_drawingml_ST_Coordinate(rValue));
+          newProperty(nToken, pVal);
+
+          bResult = true;
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_t:
+        {
+          OOXMLValue::Pointer_t pVal(new OOXMLValue_drawingml_ST_Coordinate(rValue));
+          newProperty(nToken, pVal);
+
+          bResult = true;
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_r:
+        {
+          OOXMLValue::Pointer_t pVal(new OOXMLValue_drawingml_ST_Coordinate(rValue));
+          newProperty(nToken, pVal);
+
+          bResult = true;
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_b:
+        {
+          OOXMLValue::Pointer_t pVal(new OOXMLValue_drawingml_ST_Coordinate(rValue));
+          newProperty(nToken, pVal);
+
+          bResult = true;
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -10949,7 +13992,30 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_EffectExtent : l
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_l:
+        nResult = NS_ooxml::LN_CT_EffectExtent_l;
+        break;
+        // CT_EffectExtent : t
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_t:
+        nResult = NS_ooxml::LN_CT_EffectExtent_t;
+        break;
+        // CT_EffectExtent : r
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_r:
+        nResult = NS_ooxml::LN_CT_EffectExtent_r;
+        break;
+        // CT_EffectExtent : b
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_b:
+        nResult = NS_ooxml::LN_CT_EffectExtent_b;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -10962,7 +14028,7 @@
     
 void OOXMLContext_wordprocessingDrawing_CT_EffectExtent::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingDrawing_CT_EffectExtent::startAction()
 {
@@ -10973,9 +14039,10 @@
 /* 
     class: OOXMLContext_wordprocessingDrawing_CT_Inline*/
 OOXMLContext_wordprocessingDrawing_CT_Inline::OOXMLContext_wordprocessingDrawing_CT_Inline(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_Inline::~OOXMLContext_wordprocessingDrawing_CT_Inline()
 {
 }
@@ -11019,6 +14086,12 @@
                ( new OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties(*this));
          }
              break;
+     case OOXML_ELEMENT_drawingml_graphic:
+        {
+            OOXMLContext aContext(*this);
+            pResult = aContext.element(nToken);
+        }
+        break;
      case OOXML_TOKENS_END:
          break;
      default:
@@ -11032,9 +14105,38 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingDrawing_CT_Inline::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingDrawing_CT_Inline::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_distT:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_distB:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_distL:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_distR:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -11043,7 +14145,50 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_Inline : extent
+     case OOXML_ELEMENT_wordprocessingDrawing_extent:
+        nResult = NS_ooxml::LN_CT_Inline_extent;
+        break;
+        // CT_Inline : effectExtent
+     case OOXML_ELEMENT_wordprocessingDrawing_effectExtent:
+        nResult = NS_ooxml::LN_CT_Inline_effectExtent;
+        break;
+        // CT_Inline : docPr
+     case OOXML_ELEMENT_wordprocessingDrawing_docPr:
+        nResult = NS_ooxml::LN_CT_Inline_docPr;
+        break;
+        // CT_Inline : cNvGraphicFramePr
+     case OOXML_ELEMENT_wordprocessingDrawing_cNvGraphicFramePr:
+        nResult = NS_ooxml::LN_CT_Inline_cNvGraphicFramePr;
+        break;
+        // CT_Inline : a:graphic
+     case OOXML_ELEMENT_drawingml_graphic:
+        nResult = NS_ooxml::LN_CT_Inline_a_graphic;
+        break;
+        // CT_Inline : distT
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_distT:
+        nResult = NS_ooxml::LN_CT_Inline_distT;
+        break;
+        // CT_Inline : distB
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_distB:
+        nResult = NS_ooxml::LN_CT_Inline_distB;
+        break;
+        // CT_Inline : distL
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_distL:
+        nResult = NS_ooxml::LN_CT_Inline_distL;
+        break;
+        // CT_Inline : distR
+     case OOXML_ATTRIBUTE_wordprocessingDrawing_distR:
+        nResult = NS_ooxml::LN_CT_Inline_distR;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -11056,7 +14201,7 @@
     
 void OOXMLContext_wordprocessingDrawing_CT_Inline::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingDrawing_CT_Inline::startAction()
 {
@@ -11070,6 +14215,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapPath::~OOXMLContext_wordprocessingDrawing_CT_WrapPath()
 {
 }
@@ -11152,6 +14298,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapNone::~OOXMLContext_wordprocessingDrawing_CT_WrapNone()
 {
 }
@@ -11215,6 +14362,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapSquare::~OOXMLContext_wordprocessingDrawing_CT_WrapSquare()
 {
 }
@@ -11291,6 +14439,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapTight::~OOXMLContext_wordprocessingDrawing_CT_WrapTight()
 {
 }
@@ -11367,6 +14516,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapThrough::~OOXMLContext_wordprocessingDrawing_CT_WrapThrough()
 {
 }
@@ -11443,6 +14593,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_WrapTopBottom::~OOXMLContext_wordprocessingDrawing_CT_WrapTopBottom()
 {
 }
@@ -11519,6 +14670,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_EG_WrapType::~OOXMLContext_wordprocessingDrawing_EG_WrapType()
 {
 }
@@ -11619,6 +14771,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_PosH::~OOXMLContext_wordprocessingDrawing_CT_PosH()
 {
 }
@@ -11682,6 +14835,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_PosV::~OOXMLContext_wordprocessingDrawing_CT_PosV()
 {
 }
@@ -11745,6 +14899,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_CT_Anchor::~OOXMLContext_wordprocessingDrawing_CT_Anchor()
 {
 }
@@ -11815,6 +14970,12 @@
                ( new OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties(*this));
          }
              break;
+     case OOXML_ELEMENT_drawingml_graphic:
+        {
+            OOXMLContext aContext(*this);
+            pResult = aContext.element(nToken);
+        }
+        break;
      case OOXML_TOKENS_END:
          break;
      default:
@@ -11875,6 +15036,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_inline::~OOXMLContext_wordprocessingDrawing_inline()
 {
 }
@@ -11951,6 +15113,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingDrawing_anchor::~OOXMLContext_wordprocessingDrawing_anchor()
 {
 }
@@ -12027,6 +15190,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_schemaLibrary_CT_Schema::~OOXMLContext_schemaLibrary_CT_Schema()
 {
 }
@@ -12090,6 +15254,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_schemaLibrary_CT_SchemaLibrary::~OOXMLContext_schemaLibrary_CT_SchemaLibrary()
 {
 }
@@ -12166,6 +15331,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_schemaLibrary_schemaLibrary::~OOXMLContext_schemaLibrary_schemaLibrary()
 {
 }
@@ -12242,6 +15408,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Integer255::~OOXMLContext_math_CT_Integer255()
 {
 }
@@ -12314,6 +15481,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Integer2::~OOXMLContext_math_CT_Integer2()
 {
 }
@@ -12386,6 +15554,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_SpacingRule::~OOXMLContext_math_CT_SpacingRule()
 {
 }
@@ -12458,6 +15627,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_UnSignedInteger::~OOXMLContext_math_CT_UnSignedInteger()
 {
 }
@@ -12530,6 +15700,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Char::~OOXMLContext_math_CT_Char()
 {
 }
@@ -12602,6 +15773,7 @@
 : OOXMLContextBooleanValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_OnOff::~OOXMLContext_math_CT_OnOff()
 {
 }
@@ -12673,9 +15845,10 @@
 /* 
     class: OOXMLContext_math_CT_String*/
 OOXMLContext_math_CT_String::OOXMLContext_math_CT_String(const OOXMLContext & rContext)
-: OOXMLContextStringValue(rContext)
+: OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_String::~OOXMLContext_math_CT_String()
 {
 }
@@ -12701,18 +15874,9 @@
     return pResult;
 }
      
-bool OOXMLContext_math_CT_String::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
+bool OOXMLContext_math_CT_String::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
 {
     bool bResult = false;
-    switch (nToken)
-    {
-     case OOXML_ATTRIBUTE_math_val:
-        msValue = OOXMLStringValue(rValue).getString();
-        bResult = true;
-        break;
-    default:
-      ;
-    }
     
     return bResult;
 }
@@ -12734,7 +15898,7 @@
     
 void OOXMLContext_math_CT_String::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContextStringValue::lcl_characters(sText);
+OOXMLContext::lcl_characters(sText);
 }
 void OOXMLContext_math_CT_String::startAction()
 {
@@ -12748,6 +15912,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_XAlign::~OOXMLContext_math_CT_XAlign()
 {
 }
@@ -12820,6 +15985,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_YAlign::~OOXMLContext_math_CT_YAlign()
 {
 }
@@ -12892,6 +16058,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Shp::~OOXMLContext_math_CT_Shp()
 {
 }
@@ -12964,6 +16131,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_FType::~OOXMLContext_math_CT_FType()
 {
 }
@@ -13036,6 +16204,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimLoc::~OOXMLContext_math_CT_LimLoc()
 {
 }
@@ -13108,6 +16277,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_TopBot::~OOXMLContext_math_CT_TopBot()
 {
 }
@@ -13180,6 +16350,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Script::~OOXMLContext_math_CT_Script()
 {
 }
@@ -13252,6 +16423,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_Style::~OOXMLContext_math_CT_Style()
 {
 }
@@ -13326,6 +16498,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_ManualBreak::~OOXMLContext_math_CT_ManualBreak()
 {
 }
@@ -13389,6 +16562,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_EG_ScriptStyle::~OOXMLContext_math_EG_ScriptStyle()
 {
 }
@@ -13471,6 +16645,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_RPR::~OOXMLContext_math_CT_RPR()
 {
 }
@@ -13583,6 +16758,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Text::~OOXMLContext_math_CT_Text()
 {
 }
@@ -13646,6 +16822,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_R::~OOXMLContext_math_CT_R()
 {
 }
@@ -13765,6 +16942,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_CtrlPr::~OOXMLContext_math_CT_CtrlPr()
 {
 }
@@ -13846,6 +17024,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_AccPr::~OOXMLContext_math_CT_AccPr()
 {
 }
@@ -13928,6 +17107,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Acc::~OOXMLContext_math_CT_Acc()
 {
 }
@@ -14010,6 +17190,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_BarPr::~OOXMLContext_math_CT_BarPr()
 {
 }
@@ -14092,6 +17273,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Bar::~OOXMLContext_math_CT_Bar()
 {
 }
@@ -14174,6 +17356,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_BoxPr::~OOXMLContext_math_CT_BoxPr()
 {
 }
@@ -14280,6 +17463,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Box::~OOXMLContext_math_CT_Box()
 {
 }
@@ -14362,6 +17546,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_BorderBoxPr::~OOXMLContext_math_CT_BorderBoxPr()
 {
 }
@@ -14486,6 +17671,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_BorderBox::~OOXMLContext_math_CT_BorderBox()
 {
 }
@@ -14568,6 +17754,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_DPr::~OOXMLContext_math_CT_DPr()
 {
 }
@@ -14674,6 +17861,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_D::~OOXMLContext_math_CT_D()
 {
 }
@@ -14756,6 +17944,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_EqArrPr::~OOXMLContext_math_CT_EqArrPr()
 {
 }
@@ -14862,6 +18051,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_EqArr::~OOXMLContext_math_CT_EqArr()
 {
 }
@@ -14944,6 +18134,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_FPr::~OOXMLContext_math_CT_FPr()
 {
 }
@@ -15026,6 +18217,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_F::~OOXMLContext_math_CT_F()
 {
 }
@@ -15114,6 +18306,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_FuncPr::~OOXMLContext_math_CT_FuncPr()
 {
 }
@@ -15190,6 +18383,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Func::~OOXMLContext_math_CT_Func()
 {
 }
@@ -15278,6 +18472,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_GroupChrPr::~OOXMLContext_math_CT_GroupChrPr()
 {
 }
@@ -15372,6 +18567,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_GroupChr::~OOXMLContext_math_CT_GroupChr()
 {
 }
@@ -15454,6 +18650,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimLowPr::~OOXMLContext_math_CT_LimLowPr()
 {
 }
@@ -15530,6 +18727,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimLow::~OOXMLContext_math_CT_LimLow()
 {
 }
@@ -15618,6 +18816,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimUppPr::~OOXMLContext_math_CT_LimUppPr()
 {
 }
@@ -15694,6 +18893,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_LimUpp::~OOXMLContext_math_CT_LimUpp()
 {
 }
@@ -15782,6 +18982,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MCPr::~OOXMLContext_math_CT_MCPr()
 {
 }
@@ -15864,6 +19065,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MC::~OOXMLContext_math_CT_MC()
 {
 }
@@ -15940,6 +19142,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MCS::~OOXMLContext_math_CT_MCS()
 {
 }
@@ -16016,6 +19219,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MPr::~OOXMLContext_math_CT_MPr()
 {
 }
@@ -16140,6 +19344,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MR::~OOXMLContext_math_CT_MR()
 {
 }
@@ -16216,6 +19421,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_M::~OOXMLContext_math_CT_M()
 {
 }
@@ -16298,6 +19504,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_NaryPr::~OOXMLContext_math_CT_NaryPr()
 {
 }
@@ -16404,6 +19611,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Nary::~OOXMLContext_math_CT_Nary()
 {
 }
@@ -16498,6 +19706,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_PhantPr::~OOXMLContext_math_CT_PhantPr()
 {
 }
@@ -16604,6 +19813,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Phant::~OOXMLContext_math_CT_Phant()
 {
 }
@@ -16686,6 +19896,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_RadPr::~OOXMLContext_math_CT_RadPr()
 {
 }
@@ -16768,6 +19979,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_Rad::~OOXMLContext_math_CT_Rad()
 {
 }
@@ -16856,6 +20068,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SPrePr::~OOXMLContext_math_CT_SPrePr()
 {
 }
@@ -16932,6 +20145,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SPre::~OOXMLContext_math_CT_SPre()
 {
 }
@@ -17026,6 +20240,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSubPr::~OOXMLContext_math_CT_SSubPr()
 {
 }
@@ -17102,6 +20317,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSub::~OOXMLContext_math_CT_SSub()
 {
 }
@@ -17190,6 +20406,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSubSupPr::~OOXMLContext_math_CT_SSubSupPr()
 {
 }
@@ -17272,6 +20489,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSubSup::~OOXMLContext_math_CT_SSubSup()
 {
 }
@@ -17366,6 +20584,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSupPr::~OOXMLContext_math_CT_SSupPr()
 {
 }
@@ -17442,6 +20661,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_SSup::~OOXMLContext_math_CT_SSup()
 {
 }
@@ -17530,6 +20750,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_EG_OMathMathElements::~OOXMLContext_math_EG_OMathMathElements()
 {
 }
@@ -17720,6 +20941,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_EG_OMathElements::~OOXMLContext_math_EG_OMathElements()
 {
 }
@@ -17819,6 +21041,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathArgPr::~OOXMLContext_math_CT_OMathArgPr()
 {
 }
@@ -17895,6 +21118,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathArg::~OOXMLContext_math_CT_OMathArg()
 {
 }
@@ -17995,6 +21219,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathJc::~OOXMLContext_math_CT_OMathJc()
 {
 }
@@ -18067,6 +21292,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathParaPr::~OOXMLContext_math_CT_OMathParaPr()
 {
 }
@@ -18143,6 +21369,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_TwipsMeasure::~OOXMLContext_math_CT_TwipsMeasure()
 {
 }
@@ -18215,6 +21442,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_BreakBin::~OOXMLContext_math_CT_BreakBin()
 {
 }
@@ -18287,6 +21515,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_math_CT_BreakBinSub::~OOXMLContext_math_CT_BreakBinSub()
 {
 }
@@ -18359,6 +21588,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_MathPr::~OOXMLContext_math_CT_MathPr()
 {
 }
@@ -18525,6 +21755,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMathPara::~OOXMLContext_math_CT_OMathPara()
 {
 }
@@ -18607,6 +21838,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_CT_OMath::~OOXMLContext_math_CT_OMath()
 {
 }
@@ -18688,6 +21920,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_oMathPara::~OOXMLContext_math_oMathPara()
 {
 }
@@ -18764,6 +21997,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_math_oMath::~OOXMLContext_math_oMath()
 {
 }
@@ -18837,9 +22071,10 @@
 /* 
     class: OOXMLContext_picture_CT_PictureNonVisual*/
 OOXMLContext_picture_CT_PictureNonVisual::OOXMLContext_picture_CT_PictureNonVisual(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_picture_CT_PictureNonVisual::~OOXMLContext_picture_CT_PictureNonVisual()
 {
 }
@@ -18895,7 +22130,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_PictureNonVisual : cNvPr
+     case OOXML_ELEMENT_picture_cNvPr:
+        nResult = NS_ooxml::LN_CT_PictureNonVisual_cNvPr;
+        break;
+        // CT_PictureNonVisual : cNvPicPr
+     case OOXML_ELEMENT_picture_cNvPicPr:
+        nResult = NS_ooxml::LN_CT_PictureNonVisual_cNvPicPr;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -18908,7 +22158,7 @@
     
 void OOXMLContext_picture_CT_PictureNonVisual::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_picture_CT_PictureNonVisual::startAction()
 {
@@ -18919,9 +22169,10 @@
 /* 
     class: OOXMLContext_picture_CT_Picture*/
 OOXMLContext_picture_CT_Picture::OOXMLContext_picture_CT_Picture(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_picture_CT_Picture::~OOXMLContext_picture_CT_Picture()
 {
 }
@@ -18996,7 +22247,7 @@
     
 void OOXMLContext_picture_CT_Picture::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextStream::lcl_characters(sText);
 }
 void OOXMLContext_picture_CT_Picture::startAction()
 {
@@ -19010,6 +22261,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_picture_pic::~OOXMLContext_picture_pic()
 {
 }
@@ -19086,6 +22338,7 @@
 : OOXMLContextSingleElement(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Empty::~OOXMLContext_wordprocessingml_CT_Empty()
 {
 }
@@ -19149,6 +22402,7 @@
 : OOXMLContextBooleanValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_OnOff::~OOXMLContext_wordprocessingml_CT_OnOff()
 {
 }
@@ -19223,6 +22477,7 @@
 : OOXMLContextHexValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LongHexNumber::~OOXMLContext_wordprocessingml_CT_LongHexNumber()
 {
 }
@@ -19295,6 +22550,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ShortHexNumber::~OOXMLContext_wordprocessingml_CT_ShortHexNumber()
 {
 }
@@ -19358,6 +22614,7 @@
 : OOXMLContextHexValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_UcharHexNumber::~OOXMLContext_wordprocessingml_CT_UcharHexNumber()
 {
 }
@@ -19430,6 +22687,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DecimalNumber::~OOXMLContext_wordprocessingml_CT_DecimalNumber()
 {
 }
@@ -19502,6 +22760,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TwipsMeasure::~OOXMLContext_wordprocessingml_CT_TwipsMeasure()
 {
 }
@@ -19574,6 +22833,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SignedTwipsMeasure::~OOXMLContext_wordprocessingml_CT_SignedTwipsMeasure()
 {
 }
@@ -19646,6 +22906,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PixelsMeasure::~OOXMLContext_wordprocessingml_CT_PixelsMeasure()
 {
 }
@@ -19709,6 +22970,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_HpsMeasure::~OOXMLContext_wordprocessingml_CT_HpsMeasure()
 {
 }
@@ -19781,6 +23043,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SignedHpsMeasure::~OOXMLContext_wordprocessingml_CT_SignedHpsMeasure()
 {
 }
@@ -19853,6 +23116,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MacroName::~OOXMLContext_wordprocessingml_CT_MacroName()
 {
 }
@@ -19925,6 +23189,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_String::~OOXMLContext_wordprocessingml_CT_String()
 {
 }
@@ -19997,6 +23262,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextScale::~OOXMLContext_wordprocessingml_CT_TextScale()
 {
 }
@@ -20069,6 +23335,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Highlight::~OOXMLContext_wordprocessingml_CT_Highlight()
 {
 }
@@ -20143,6 +23410,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Color::~OOXMLContext_wordprocessingml_CT_Color()
 {
 }
@@ -20266,6 +23534,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Lang::~OOXMLContext_wordprocessingml_CT_Lang()
 {
 }
@@ -20338,6 +23607,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Guid::~OOXMLContext_wordprocessingml_CT_Guid()
 {
 }
@@ -20410,6 +23680,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Underline::~OOXMLContext_wordprocessingml_CT_Underline()
 {
 }
@@ -20540,6 +23811,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextEffect::~OOXMLContext_wordprocessingml_CT_TextEffect()
 {
 }
@@ -20614,6 +23886,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Border::~OOXMLContext_wordprocessingml_CT_Border()
 {
 }
@@ -20797,6 +24070,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Shd::~OOXMLContext_wordprocessingml_CT_Shd()
 {
 }
@@ -20980,6 +24254,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_VerticalAlignRun::~OOXMLContext_wordprocessingml_CT_VerticalAlignRun()
 {
 }
@@ -21052,6 +24327,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FitText::~OOXMLContext_wordprocessingml_CT_FitText()
 {
 }
@@ -21128,6 +24404,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Em::~OOXMLContext_wordprocessingml_CT_Em()
 {
 }
@@ -21202,6 +24479,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Language::~OOXMLContext_wordprocessingml_CT_Language()
 {
 }
@@ -21313,6 +24591,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_EastAsianLayout::~OOXMLContext_wordprocessingml_CT_EastAsianLayout()
 {
 }
@@ -21448,6 +24727,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FramePr::~OOXMLContext_wordprocessingml_CT_FramePr()
 {
 }
@@ -21673,6 +24953,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TabStop::~OOXMLContext_wordprocessingml_CT_TabStop()
 {
 }
@@ -21784,6 +25065,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Spacing::~OOXMLContext_wordprocessingml_CT_Spacing()
 {
 }
@@ -21955,6 +25237,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Ind::~OOXMLContext_wordprocessingml_CT_Ind()
 {
 }
@@ -22126,6 +25409,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Jc::~OOXMLContext_wordprocessingml_CT_Jc()
 {
 }
@@ -22200,6 +25484,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_View::~OOXMLContext_wordprocessingml_CT_View()
 {
 }
@@ -22272,6 +25557,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Zoom::~OOXMLContext_wordprocessingml_CT_Zoom()
 {
 }
@@ -22335,6 +25621,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_WritingStyle::~OOXMLContext_wordprocessingml_CT_WritingStyle()
 {
 }
@@ -22398,6 +25685,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Proof::~OOXMLContext_wordprocessingml_CT_Proof()
 {
 }
@@ -22461,6 +25749,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocType::~OOXMLContext_wordprocessingml_CT_DocType()
 {
 }
@@ -22528,11 +25817,76 @@
 {
 }
 /* 
+    class: OOXMLContext_wordprocessingml_AG_Password*/
+OOXMLContext_wordprocessingml_AG_Password::OOXMLContext_wordprocessingml_AG_Password(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_wordprocessingml_AG_Password::~OOXMLContext_wordprocessingml_AG_Password()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_wordprocessingml_AG_Password::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_wordprocessingml_AG_Password::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_wordprocessingml_AG_Password::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_wordprocessingml_AG_Password::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_wordprocessingml_AG_Password::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_wordprocessingml_AG_Password::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_wordprocessingml_AG_Password::startAction()
+{
+}
+void OOXMLContext_wordprocessingml_AG_Password::endAction()
+{
+}
+/* 
     class: OOXMLContext_wordprocessingml_CT_DocProtect*/
 OOXMLContext_wordprocessingml_CT_DocProtect::OOXMLContext_wordprocessingml_CT_DocProtect(const OOXMLContext & rContext)
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocProtect::~OOXMLContext_wordprocessingml_CT_DocProtect()
 {
 }
@@ -22542,6 +25896,15 @@
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_AG_Password(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
@@ -22558,9 +25921,17 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_DocProtect::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_DocProtect::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_AG_Password(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
     
     return bResult;
 }
@@ -22577,6 +25948,15 @@
 {
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_AG_Password(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
     return 0x0;
 }
     
@@ -22596,6 +25976,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeDocType::~OOXMLContext_wordprocessingml_CT_MailMergeDocType()
 {
 }
@@ -22668,6 +26049,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeDataType::~OOXMLContext_wordprocessingml_CT_MailMergeDataType()
 {
 }
@@ -22740,6 +26122,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeDest::~OOXMLContext_wordprocessingml_CT_MailMergeDest()
 {
 }
@@ -22812,6 +26195,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeOdsoFMDFieldType::~OOXMLContext_wordprocessingml_CT_MailMergeOdsoFMDFieldType()
 {
 }
@@ -22884,6 +26268,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrackChangesView::~OOXMLContext_wordprocessingml_CT_TrackChangesView()
 {
 }
@@ -22947,6 +26332,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Kinsoku::~OOXMLContext_wordprocessingml_CT_Kinsoku()
 {
 }
@@ -23023,6 +26409,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextDirection::~OOXMLContext_wordprocessingml_CT_TextDirection()
 {
 }
@@ -23097,6 +26484,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextAlignment::~OOXMLContext_wordprocessingml_CT_TextAlignment()
 {
 }
@@ -23169,6 +26557,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Markup::~OOXMLContext_wordprocessingml_CT_Markup()
 {
 }
@@ -23254,6 +26643,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrackChange::~OOXMLContext_wordprocessingml_CT_TrackChange()
 {
 }
@@ -23376,6 +26766,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CellMergeTrackChange::~OOXMLContext_wordprocessingml_CT_CellMergeTrackChange()
 {
 }
@@ -23465,6 +26856,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrackChangeRange::~OOXMLContext_wordprocessingml_CT_TrackChangeRange()
 {
 }
@@ -23551,9 +26943,10 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_MarkupRange*/
 OOXMLContext_wordprocessingml_CT_MarkupRange::OOXMLContext_wordprocessingml_CT_MarkupRange(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MarkupRange::~OOXMLContext_wordprocessingml_CT_MarkupRange()
 {
 }
@@ -23591,11 +26984,23 @@
 bool OOXMLContext_wordprocessingml_CT_MarkupRange::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_displacedByCustomXml:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     if (! bResult)
     {
         OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_Markup(*this));
         pRefContext->setParentResource(getResource());
         
+        pRefContext->setPropertySet(mpPropertySet);
         bResult = pRefContext->attribute(nToken, rValue);
         
     }
@@ -23607,7 +27012,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_MarkupRange : displacedByCustomXml
+     case OOXML_ATTRIBUTE_wordprocessingml_displacedByCustomXml:
+        nResult = NS_ooxml::LN_CT_MarkupRange_displacedByCustomXml;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -23629,7 +27045,7 @@
     
 void OOXMLContext_wordprocessingml_CT_MarkupRange::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_MarkupRange::startAction()
 {
@@ -23638,11 +27054,126 @@
 {
 }
 /* 
+    class: OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark*/
+OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(const OOXMLContext & rContext)
+: OOXMLContextProperties(rContext)
+{
+}
+
+OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::~OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
+{
+    bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_id:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
+    if (! bResult)
+    {
+        OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+        pRefContext->setParentResource(getResource());
+        
+        pRefContext->setPropertySet(mpPropertySet);
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    switch (nToken)
+    {
+        // CT_MarkupRangeBookmark : id
+     case OOXML_ATTRIBUTE_wordprocessingml_id:
+        nResult = NS_rtf::LN_IBKL;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
+    return 0x0;
+}
+    
+void OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContextProperties::lcl_characters(sText);
+}
+void OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::startAction()
+{
+}
+void OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark::endAction()
+{
+}
+/* 
     class: OOXMLContext_wordprocessingml_CT_BookmarkRange*/
 OOXMLContext_wordprocessingml_CT_BookmarkRange::OOXMLContext_wordprocessingml_CT_BookmarkRange(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
+    mpPropertySet->setType("Bookmark");
 }
+
 OOXMLContext_wordprocessingml_CT_BookmarkRange::~OOXMLContext_wordprocessingml_CT_BookmarkRange()
 {
 }
@@ -23654,7 +27185,7 @@
     
     {       
         OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
-            ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+            ( new OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(*this));
         OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
 
         if (pContext.get() != NULL)
@@ -23680,11 +27211,29 @@
 bool OOXMLContext_wordprocessingml_CT_BookmarkRange::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_colFirst:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_colLast:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     if (! bResult)
     {
-        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+        OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(*this));
         pRefContext->setParentResource(getResource());
         
+        pRefContext->setPropertySet(mpPropertySet);
         bResult = pRefContext->attribute(nToken, rValue);
         
     }
@@ -23696,7 +27245,22 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_BookmarkRange : colFirst
+     case OOXML_ATTRIBUTE_wordprocessingml_colFirst:
+        nResult = NS_ooxml::LN_CT_BookmarkRange_colFirst;
+        break;
+        // CT_BookmarkRange : colLast
+     case OOXML_ATTRIBUTE_wordprocessingml_colLast:
+        nResult = NS_ooxml::LN_CT_BookmarkRange_colLast;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -23706,7 +27270,7 @@
     tmpToken = nToken; // prevent warning
     {       
         OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
-            ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+            ( new OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(*this));
         doctok::Id nId = pSubContext->getId(nToken);
 
         if (nId != 0x0)
@@ -23718,7 +27282,7 @@
     
 void OOXMLContext_wordprocessingml_CT_BookmarkRange::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_BookmarkRange::startAction()
 {
@@ -23729,9 +27293,11 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_Bookmark*/
 OOXMLContext_wordprocessingml_CT_Bookmark::OOXMLContext_wordprocessingml_CT_Bookmark(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
+    mpPropertySet->setType("Bookmark");
 }
+
 OOXMLContext_wordprocessingml_CT_Bookmark::~OOXMLContext_wordprocessingml_CT_Bookmark()
 {
 }
@@ -23769,11 +27335,23 @@
 bool OOXMLContext_wordprocessingml_CT_Bookmark::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_name:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     if (! bResult)
     {
-        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_BookmarkRange(*this));
+        OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_BookmarkRange(*this));
         pRefContext->setParentResource(getResource());
         
+        pRefContext->setPropertySet(mpPropertySet);
         bResult = pRefContext->attribute(nToken, rValue);
         
     }
@@ -23785,7 +27363,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_Bookmark : name
+     case OOXML_ATTRIBUTE_wordprocessingml_name:
+        nResult = NS_rtf::LN_BOOKMARKNAME;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -23807,7 +27396,7 @@
     
 void OOXMLContext_wordprocessingml_CT_Bookmark::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_Bookmark::startAction()
 {
@@ -23821,6 +27410,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MoveBookmark::~OOXMLContext_wordprocessingml_CT_MoveBookmark()
 {
 }
@@ -23860,7 +27450,7 @@
     bool bResult = false;
     if (! bResult)
     {
-        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_Bookmark(*this));
+        OOXMLContextProperties::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_CT_Bookmark(*this));
         pRefContext->setParentResource(getResource());
         
         bResult = pRefContext->attribute(nToken, rValue);
@@ -23910,6 +27500,7 @@
 : OOXMLContextXNote(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Comment::~OOXMLContext_wordprocessingml_CT_Comment()
 {
 }
@@ -24038,6 +27629,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrackChangeNumbering::~OOXMLContext_wordprocessingml_CT_TrackChangeNumbering()
 {
 }
@@ -24127,6 +27719,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrExChange::~OOXMLContext_wordprocessingml_CT_TblPrExChange()
 {
 }
@@ -24229,6 +27822,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcPrChange::~OOXMLContext_wordprocessingml_CT_TcPrChange()
 {
 }
@@ -24331,6 +27925,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrPrChange::~OOXMLContext_wordprocessingml_CT_TrPrChange()
 {
 }
@@ -24433,6 +28028,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblGridChange::~OOXMLContext_wordprocessingml_CT_TblGridChange()
 {
 }
@@ -24535,6 +28131,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrChange::~OOXMLContext_wordprocessingml_CT_TblPrChange()
 {
 }
@@ -24637,6 +28234,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SectPrChange::~OOXMLContext_wordprocessingml_CT_SectPrChange()
 {
 }
@@ -24751,6 +28349,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PPrChange::~OOXMLContext_wordprocessingml_CT_PPrChange()
 {
 }
@@ -24853,6 +28452,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RPrChange::~OOXMLContext_wordprocessingml_CT_RPrChange()
 {
 }
@@ -24955,6 +28555,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ParaRPrChange::~OOXMLContext_wordprocessingml_CT_ParaRPrChange()
 {
 }
@@ -25057,6 +28658,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RunTrackChange::~OOXMLContext_wordprocessingml_CT_RunTrackChange()
 {
 }
@@ -25182,6 +28784,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_CellMarkupElements::~OOXMLContext_wordprocessingml_EG_CellMarkupElements()
 {
 }
@@ -25270,6 +28873,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RangeMarkupElements::~OOXMLContext_wordprocessingml_EG_RangeMarkupElements()
 {
 }
@@ -25298,7 +28902,7 @@
      case OOXML_ELEMENT_wordprocessingml_bookmarkEnd:
         {
             pResult = OOXMLContext::Pointer_t
-               ( new OOXMLContext_wordprocessingml_CT_MarkupRange(*this));
+               ( new OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(*this));
          }
              break;
      case OOXML_ELEMENT_wordprocessingml_moveFromRangeStart:
@@ -25436,6 +29040,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumPr::~OOXMLContext_wordprocessingml_CT_NumPr()
 {
 }
@@ -25553,6 +29158,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PBdr::~OOXMLContext_wordprocessingml_CT_PBdr()
 {
 }
@@ -25690,6 +29296,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Tabs::~OOXMLContext_wordprocessingml_CT_Tabs()
 {
 }
@@ -25777,6 +29384,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TextboxTightWrap::~OOXMLContext_wordprocessingml_CT_TextboxTightWrap()
 {
 }
@@ -25849,6 +29457,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PPrBase::~OOXMLContext_wordprocessingml_CT_PPrBase()
 {
 }
@@ -26256,6 +29865,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PPr::~OOXMLContext_wordprocessingml_CT_PPr()
 {
 }
@@ -26390,6 +30000,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Control::~OOXMLContext_wordprocessingml_CT_Control()
 {
 }
@@ -26453,6 +30064,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Background::~OOXMLContext_wordprocessingml_CT_Background()
 {
 }
@@ -26542,6 +30154,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Rel::~OOXMLContext_wordprocessingml_CT_Rel()
 {
 }
@@ -26629,6 +30242,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PictureBase::~OOXMLContext_wordprocessingml_CT_PictureBase()
 {
 }
@@ -26692,6 +30306,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Object::~OOXMLContext_wordprocessingml_CT_Object()
 {
 }
@@ -26794,6 +30409,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Picture::~OOXMLContext_wordprocessingml_CT_Picture()
 {
 }
@@ -26899,9 +30515,10 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_Drawing*/
 OOXMLContext_wordprocessingml_CT_Drawing::OOXMLContext_wordprocessingml_CT_Drawing(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Drawing::~OOXMLContext_wordprocessingml_CT_Drawing()
 {
 }
@@ -26987,7 +30604,7 @@
     
 void OOXMLContext_wordprocessingml_CT_Drawing::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_Drawing::startAction()
 {
@@ -26998,9 +30615,10 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_SimpleField*/
 OOXMLContext_wordprocessingml_CT_SimpleField::OOXMLContext_wordprocessingml_CT_SimpleField(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SimpleField::~OOXMLContext_wordprocessingml_CT_SimpleField()
 {
 }
@@ -27048,9 +30666,32 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_SimpleField::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_SimpleField::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_instr:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_fldLock:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_dirty:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -27059,7 +30700,30 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_SimpleField : fldData
+     case OOXML_ELEMENT_wordprocessingml_fldData:
+        nResult = NS_ooxml::LN_CT_SimpleField_fldData;
+        break;
+        // CT_SimpleField : instr
+     case OOXML_ATTRIBUTE_wordprocessingml_instr:
+        nResult = NS_ooxml::LN_CT_SimpleField_instr;
+        break;
+        // CT_SimpleField : fldLock
+     case OOXML_ATTRIBUTE_wordprocessingml_fldLock:
+        nResult = NS_ooxml::LN_CT_SimpleField_fldLock;
+        break;
+        // CT_SimpleField : dirty
+     case OOXML_ATTRIBUTE_wordprocessingml_dirty:
+        nResult = NS_ooxml::LN_CT_SimpleField_dirty;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -27081,13 +30745,38 @@
     
 void OOXMLContext_wordprocessingml_CT_SimpleField::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextStream::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_SimpleField::startAction()
 {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldStart, 1);
+    endCharacterGroup();
+      
+    startCharacterGroup();
+    {
+        OOXMLPropertySetEntryToString aHandler(NS_ooxml::LN_CT_SimpleField_instr);
+        getPropertySetAttrs()->resolve(aHandler);
+        const ::rtl::OUString & sText = aHandler.getString();
+        mrStream.utext(reinterpret_cast < const sal_uInt8 * > 
+                   (sText.getStr()), 
+                   sText.getLength());        
+    }
+    endCharacterGroup();
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldSep, 1);
+    endCharacterGroup();
+      
 }
 void OOXMLContext_wordprocessingml_CT_SimpleField::endAction()
 {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldEnd, 1);
+    endCharacterGroup();
+      
 }
 /* 
     class: OOXMLContext_wordprocessingml_CT_FFTextType*/
@@ -27095,6 +30784,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFTextType::~OOXMLContext_wordprocessingml_CT_FFTextType()
 {
 }
@@ -27167,6 +30857,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFName::~OOXMLContext_wordprocessingml_CT_FFName()
 {
 }
@@ -27236,9 +30927,10 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_FldChar*/
 OOXMLContext_wordprocessingml_CT_FldChar::OOXMLContext_wordprocessingml_CT_FldChar(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FldChar::~OOXMLContext_wordprocessingml_CT_FldChar()
 {
 }
@@ -27289,9 +30981,34 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_FldChar::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_FldChar::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_fldCharType:
+        {
+          OOXMLValue::Pointer_t pVal(new OOXMLValue_wordprocessingml_ST_FldCharType(rValue));
+          newProperty(nToken, pVal);
+
+          bResult = true;
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_fldLock:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_dirty:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -27300,7 +31017,38 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_FldChar : fldData
+     case OOXML_ELEMENT_wordprocessingml_fldData:
+        nResult = NS_ooxml::LN_CT_FldChar_fldData;
+        break;
+        // CT_FldChar : ffData
+     case OOXML_ELEMENT_wordprocessingml_ffData:
+        nResult = NS_ooxml::LN_CT_FldChar_ffData;
+        break;
+        // CT_FldChar : numberingChange
+     case OOXML_ELEMENT_wordprocessingml_numberingChange:
+        nResult = NS_ooxml::LN_CT_FldChar_numberingChange;
+        break;
+        // CT_FldChar : fldCharType
+     case OOXML_ATTRIBUTE_wordprocessingml_fldCharType:
+        nResult = NS_ooxml::LN_CT_FldChar_fldCharType;
+        break;
+        // CT_FldChar : fldLock
+     case OOXML_ATTRIBUTE_wordprocessingml_fldLock:
+        nResult = NS_ooxml::LN_CT_FldChar_fldLock;
+        break;
+        // CT_FldChar : dirty
+     case OOXML_ATTRIBUTE_wordprocessingml_dirty:
+        nResult = NS_ooxml::LN_CT_FldChar_dirty;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -27313,10 +31061,49 @@
     
 void OOXMLContext_wordprocessingml_CT_FldChar::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextStream::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_FldChar::startAction()
 {
+    {
+        OOXMLPropertySetEntryToInteger aHandler(NS_ooxml::LN_CT_FldChar_fldCharType);
+        getPropertySetAttrs()->resolve(aHandler);
+        
+        if (aHandler.getValue() == NS_ooxml::LN_Value_ST_FldCharType_begin)
+        {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldStart, 1);
+    endCharacterGroup();
+      
+        }
+    }
+    {
+        OOXMLPropertySetEntryToInteger aHandler(NS_ooxml::LN_CT_FldChar_fldCharType);
+        getPropertySetAttrs()->resolve(aHandler);
+        
+        if (aHandler.getValue() == NS_ooxml::LN_Value_ST_FldCharType_separate)
+        {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldSep, 1);
+    endCharacterGroup();
+      
+        }
+    }
+    {
+        OOXMLPropertySetEntryToInteger aHandler(NS_ooxml::LN_CT_FldChar_fldCharType);
+        getPropertySetAttrs()->resolve(aHandler);
+        
+        if (aHandler.getValue() == NS_ooxml::LN_Value_ST_FldCharType_end)
+        {
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldEnd, 1);
+    endCharacterGroup();
+      
+        }
+    }
 }
 void OOXMLContext_wordprocessingml_CT_FldChar::endAction()
 {
@@ -27327,6 +31114,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Hyperlink::~OOXMLContext_wordprocessingml_CT_Hyperlink()
 {
 }
@@ -27408,6 +31196,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFData::~OOXMLContext_wordprocessingml_CT_FFData()
 {
 }
@@ -27538,6 +31327,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFHelpText::~OOXMLContext_wordprocessingml_CT_FFHelpText()
 {
 }
@@ -27614,6 +31404,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFStatusText::~OOXMLContext_wordprocessingml_CT_FFStatusText()
 {
 }
@@ -27690,6 +31481,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFCheckBox::~OOXMLContext_wordprocessingml_CT_FFCheckBox()
 {
 }
@@ -27784,6 +31576,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFDDList::~OOXMLContext_wordprocessingml_CT_FFDDList()
 {
 }
@@ -27872,6 +31665,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FFTextInput::~OOXMLContext_wordprocessingml_CT_FFTextInput()
 {
 }
@@ -27966,6 +31760,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SectType::~OOXMLContext_wordprocessingml_CT_SectType()
 {
 }
@@ -28040,6 +31835,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PaperSource::~OOXMLContext_wordprocessingml_CT_PaperSource()
 {
 }
@@ -28103,6 +31899,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PageSz::~OOXMLContext_wordprocessingml_CT_PageSz()
 {
 }
@@ -28226,6 +32023,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PageMar::~OOXMLContext_wordprocessingml_CT_PageMar()
 {
 }
@@ -28385,6 +32183,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PageBorders::~OOXMLContext_wordprocessingml_CT_PageBorders()
 {
 }
@@ -28479,6 +32278,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LineNumber::~OOXMLContext_wordprocessingml_CT_LineNumber()
 {
 }
@@ -28602,6 +32402,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PageNumber::~OOXMLContext_wordprocessingml_CT_PageNumber()
 {
 }
@@ -28725,6 +32526,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Column::~OOXMLContext_wordprocessingml_CT_Column()
 {
 }
@@ -28824,6 +32626,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Columns::~OOXMLContext_wordprocessingml_CT_Columns()
 {
 }
@@ -28964,6 +32767,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_VerticalJc::~OOXMLContext_wordprocessingml_CT_VerticalJc()
 {
 }
@@ -29038,6 +32842,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocGrid::~OOXMLContext_wordprocessingml_CT_DocGrid()
 {
 }
@@ -29101,6 +32906,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_HdrFtrRef::~OOXMLContext_wordprocessingml_CT_HdrFtrRef()
 {
 }
@@ -29244,6 +33050,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_HdrFtrReferences::~OOXMLContext_wordprocessingml_EG_HdrFtrReferences()
 {
 }
@@ -29341,6 +33148,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_HdrFtr::~OOXMLContext_wordprocessingml_CT_HdrFtr()
 {
 }
@@ -29412,9 +33220,11 @@
 }
 void OOXMLContext_wordprocessingml_CT_HdrFtr::startAction()
 {
+    startSectionGroup();
 }
 void OOXMLContext_wordprocessingml_CT_HdrFtr::endAction()
 {
+    endSectionGroup();
 }
 /* 
     class: OOXMLContext_wordprocessingml_EG_SectPrContents*/
@@ -29422,6 +33232,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_SectPrContents::~OOXMLContext_wordprocessingml_EG_SectPrContents()
 {
 }
@@ -29684,11 +33495,76 @@
 {
 }
 /* 
+    class: OOXMLContext_wordprocessingml_AG_SectPrAttributes*/
+OOXMLContext_wordprocessingml_AG_SectPrAttributes::OOXMLContext_wordprocessingml_AG_SectPrAttributes(const OOXMLContext & rContext)
+: OOXMLContext(rContext)
+{
+}
+
+OOXMLContext_wordprocessingml_AG_SectPrAttributes::~OOXMLContext_wordprocessingml_AG_SectPrAttributes()
+{
+}
+
+OOXMLContext::Pointer_t OOXMLContext_wordprocessingml_AG_SectPrAttributes::elementFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    
+    return OOXMLContext::Pointer_t();
+}
+    
+OOXMLContext::Pointer_t
+OOXMLContext_wordprocessingml_AG_SectPrAttributes::element(TokenEnum_t nToken)
+{
+    OOXMLContext::Pointer_t pResult;
+    
+     pResult = elementFromRefs(nToken);
+
+    if (pResult.get() != NULL)
+        pResult->setToken(nToken);
+
+    return pResult;
+}
+     
+bool OOXMLContext_wordprocessingml_AG_SectPrAttributes::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+{
+    bool bResult = false;
+    
+    return bResult;
+}
+doctok::Id
+OOXMLContext_wordprocessingml_AG_SectPrAttributes::getId(TokenEnum_t nToken)
+{
+    doctok::Id nResult = 0x0;
+    
+    nResult = getIdFromRefs(nToken);
+    return nResult;  
+}
+    
+doctok::Id OOXMLContext_wordprocessingml_AG_SectPrAttributes::getIdFromRefs(TokenEnum_t nToken)
+{
+    TokenEnum_t tmpToken;
+    tmpToken = nToken; // prevent warning
+    return 0x0;
+}
+    
+void OOXMLContext_wordprocessingml_AG_SectPrAttributes::lcl_characters(const rtl::OUString & sText) 
+{
+OOXMLContext::lcl_characters(sText);
+}
+void OOXMLContext_wordprocessingml_AG_SectPrAttributes::startAction()
+{
+}
+void OOXMLContext_wordprocessingml_AG_SectPrAttributes::endAction()
+{
+}
+/* 
     class: OOXMLContext_wordprocessingml_CT_SectPrBase*/
 OOXMLContext_wordprocessingml_CT_SectPrBase::OOXMLContext_wordprocessingml_CT_SectPrBase(const OOXMLContext & rContext)
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SectPrBase::~OOXMLContext_wordprocessingml_CT_SectPrBase()
 {
 }
@@ -29707,6 +33583,15 @@
             return pContext;
      }
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_AG_SectPrAttributes(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
@@ -29723,9 +33608,17 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_SectPrBase::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_SectPrBase::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_AG_SectPrAttributes(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
     
     return bResult;
 }
@@ -29751,6 +33644,15 @@
             return nId;
      }
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_AG_SectPrAttributes(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
     return 0x0;
 }
     
@@ -29770,6 +33672,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SectPr::~OOXMLContext_wordprocessingml_CT_SectPr()
 {
 }
@@ -29797,6 +33700,15 @@
             return pContext;
      }
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_AG_SectPrAttributes(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
@@ -29826,9 +33738,17 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_SectPr::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_SectPr::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_AG_SectPrAttributes(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
     
     return bResult;
 }
@@ -29874,6 +33794,15 @@
             return nId;
      }
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_AG_SectPrAttributes(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
     return 0x0;
 }
     
@@ -29883,10 +33812,10 @@
 }
 void OOXMLContext_wordprocessingml_CT_SectPr::startAction()
 {
+    setLastParagraphInSection();
 }
 void OOXMLContext_wordprocessingml_CT_SectPr::endAction()
 {
-    setLastParagraphInSection();
 }
 /* 
     class: OOXMLContext_wordprocessingml_CT_Br*/
@@ -29894,6 +33823,7 @@
 : OOXMLContextSingleElement(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Br::~OOXMLContext_wordprocessingml_CT_Br()
 {
 }
@@ -29993,6 +33923,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PTab::~OOXMLContext_wordprocessingml_CT_PTab()
 {
 }
@@ -30104,6 +34035,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Sym::~OOXMLContext_wordprocessingml_CT_Sym()
 {
 }
@@ -30201,6 +34133,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ProofErr::~OOXMLContext_wordprocessingml_CT_ProofErr()
 {
 }
@@ -30264,6 +34197,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Perm::~OOXMLContext_wordprocessingml_CT_Perm()
 {
 }
@@ -30327,6 +34261,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PermStart::~OOXMLContext_wordprocessingml_CT_PermStart()
 {
 }
@@ -30416,6 +34351,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Text::~OOXMLContext_wordprocessingml_CT_Text()
 {
 }
@@ -30441,9 +34377,20 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_Text::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_Text::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_www_w3_org_XML_1998_namespace_space:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -30452,7 +34399,18 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_Text : xml:space
+     case OOXML_ATTRIBUTE_www_w3_org_XML_1998_namespace_space:
+        nResult = NS_ooxml::LN_CT_Text_space;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -30482,6 +34440,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnRefChar::~OOXMLContext_wordprocessingml_CT_FtnEdnRefChar()
 {
 }
@@ -30547,6 +34506,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnSep::~OOXMLContext_wordprocessingml_CT_FtnEdnSep()
 {
 }
@@ -30612,6 +34572,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnCont::~OOXMLContext_wordprocessingml_CT_FtnEdnCont()
 {
 }
@@ -30669,7 +34630,7 @@
 void OOXMLContext_wordprocessingml_CT_FtnEdnCont::endAction()
 {
     if (isForwardEvents())        
-        mrStream.utext(sFtnEdnCont, 1);
+        mrStream.text(sFtnEdnCont, 1);
 }
 /* 
     class: OOXMLContext_wordprocessingml_CT_PgNum*/
@@ -30677,6 +34638,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PgNum::~OOXMLContext_wordprocessingml_CT_PgNum()
 {
 }
@@ -30742,6 +34704,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Cr::~OOXMLContext_wordprocessingml_CT_Cr()
 {
 }
@@ -30798,6 +34761,8 @@
 }
 void OOXMLContext_wordprocessingml_CT_Cr::endAction()
 {
+    if (! mpParserState->isInCharacterGroup())
+       startCharacterGroup();
     if (isForwardEvents())        
         mrStream.utext(sCR, 1);
 }
@@ -30807,6 +34772,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Tab::~OOXMLContext_wordprocessingml_CT_Tab()
 {
 }
@@ -30872,6 +34838,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RunInnerContent::~OOXMLContext_wordprocessingml_EG_RunInnerContent()
 {
 }
@@ -31134,6 +35101,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_R::~OOXMLContext_wordprocessingml_CT_R()
 {
 }
@@ -31177,9 +35145,32 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_R::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_R::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidRPr:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidDel:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidR:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -31234,6 +35225,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Fonts::~OOXMLContext_wordprocessingml_CT_Fonts()
 {
 }
@@ -31417,6 +35409,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RPrBase::~OOXMLContext_wordprocessingml_EG_RPrBase()
 {
 }
@@ -31884,6 +35877,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RPrContent::~OOXMLContext_wordprocessingml_EG_RPrContent()
 {
 }
@@ -31978,6 +35972,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RPr::~OOXMLContext_wordprocessingml_CT_RPr()
 {
 }
@@ -32059,6 +36054,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RPr::~OOXMLContext_wordprocessingml_EG_RPr()
 {
 }
@@ -32135,6 +36131,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RPrMath::~OOXMLContext_wordprocessingml_EG_RPrMath()
 {
 }
@@ -32235,6 +36232,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RPrOriginal::~OOXMLContext_wordprocessingml_CT_RPrOriginal()
 {
 }
@@ -32316,6 +36314,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ParaRPrOriginal::~OOXMLContext_wordprocessingml_CT_ParaRPrOriginal()
 {
 }
@@ -32415,6 +36414,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ParaRPr::~OOXMLContext_wordprocessingml_CT_ParaRPr()
 {
 }
@@ -32538,6 +36538,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ParaRPrTrackChanges::~OOXMLContext_wordprocessingml_EG_ParaRPrTrackChanges()
 {
 }
@@ -32632,6 +36633,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AltChunk::~OOXMLContext_wordprocessingml_CT_AltChunk()
 {
 }
@@ -32708,6 +36710,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AltChunkPr::~OOXMLContext_wordprocessingml_CT_AltChunkPr()
 {
 }
@@ -32784,6 +36787,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RubyAlign::~OOXMLContext_wordprocessingml_CT_RubyAlign()
 {
 }
@@ -32856,6 +36860,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RubyPr::~OOXMLContext_wordprocessingml_CT_RubyPr()
 {
 }
@@ -32962,6 +36967,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RubyContent::~OOXMLContext_wordprocessingml_EG_RubyContent()
 {
 }
@@ -33056,6 +37062,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RubyContent::~OOXMLContext_wordprocessingml_CT_RubyContent()
 {
 }
@@ -33137,6 +37144,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Ruby::~OOXMLContext_wordprocessingml_CT_Ruby()
 {
 }
@@ -33225,6 +37233,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Lock::~OOXMLContext_wordprocessingml_CT_Lock()
 {
 }
@@ -33297,6 +37306,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtListItem::~OOXMLContext_wordprocessingml_CT_SdtListItem()
 {
 }
@@ -33360,6 +37370,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtDateMappingType::~OOXMLContext_wordprocessingml_CT_SdtDateMappingType()
 {
 }
@@ -33432,6 +37443,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CalendarType::~OOXMLContext_wordprocessingml_CT_CalendarType()
 {
 }
@@ -33504,6 +37516,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtDate::~OOXMLContext_wordprocessingml_CT_SdtDate()
 {
 }
@@ -33598,6 +37611,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtComboBox::~OOXMLContext_wordprocessingml_CT_SdtComboBox()
 {
 }
@@ -33674,6 +37688,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtDocPart::~OOXMLContext_wordprocessingml_CT_SdtDocPart()
 {
 }
@@ -33762,6 +37777,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtDropDownList::~OOXMLContext_wordprocessingml_CT_SdtDropDownList()
 {
 }
@@ -33838,6 +37854,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Placeholder::~OOXMLContext_wordprocessingml_CT_Placeholder()
 {
 }
@@ -33914,6 +37931,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtText::~OOXMLContext_wordprocessingml_CT_SdtText()
 {
 }
@@ -33977,6 +37995,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DataBinding::~OOXMLContext_wordprocessingml_CT_DataBinding()
 {
 }
@@ -34040,6 +38059,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtPr::~OOXMLContext_wordprocessingml_CT_SdtPr()
 {
 }
@@ -34236,6 +38256,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtEndPr::~OOXMLContext_wordprocessingml_CT_SdtEndPr()
 {
 }
@@ -34312,6 +38333,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ContentRunContent::~OOXMLContext_wordprocessingml_EG_ContentRunContent()
 {
 }
@@ -34424,6 +38446,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtContentRun::~OOXMLContext_wordprocessingml_CT_SdtContentRun()
 {
 }
@@ -34505,6 +38528,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ContentBlockContent::~OOXMLContext_wordprocessingml_EG_ContentBlockContent()
 {
 }
@@ -34617,6 +38641,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtContentBlock::~OOXMLContext_wordprocessingml_CT_SdtContentBlock()
 {
 }
@@ -34698,6 +38723,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ContentRowContent::~OOXMLContext_wordprocessingml_EG_ContentRowContent()
 {
 }
@@ -34804,6 +38830,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtContentRow::~OOXMLContext_wordprocessingml_CT_SdtContentRow()
 {
 }
@@ -34885,6 +38912,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_ContentCellContent::~OOXMLContext_wordprocessingml_EG_ContentCellContent()
 {
 }
@@ -34991,6 +39019,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtContentCell::~OOXMLContext_wordprocessingml_CT_SdtContentCell()
 {
 }
@@ -35072,6 +39101,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtBlock::~OOXMLContext_wordprocessingml_CT_SdtBlock()
 {
 }
@@ -35160,6 +39190,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtRun::~OOXMLContext_wordprocessingml_CT_SdtRun()
 {
 }
@@ -35248,6 +39279,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtCell::~OOXMLContext_wordprocessingml_CT_SdtCell()
 {
 }
@@ -35336,6 +39368,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SdtRow::~OOXMLContext_wordprocessingml_CT_SdtRow()
 {
 }
@@ -35424,6 +39457,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Attr::~OOXMLContext_wordprocessingml_CT_Attr()
 {
 }
@@ -35504,6 +39538,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlRun::~OOXMLContext_wordprocessingml_CT_CustomXmlRun()
 {
 }
@@ -35598,6 +39633,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SmartTagRun::~OOXMLContext_wordprocessingml_CT_SmartTagRun()
 {
 }
@@ -35692,6 +39728,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlBlock::~OOXMLContext_wordprocessingml_CT_CustomXmlBlock()
 {
 }
@@ -35786,6 +39823,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlPr::~OOXMLContext_wordprocessingml_CT_CustomXmlPr()
 {
 }
@@ -35868,6 +39906,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlRow::~OOXMLContext_wordprocessingml_CT_CustomXmlRow()
 {
 }
@@ -35962,6 +40001,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CustomXmlCell::~OOXMLContext_wordprocessingml_CT_CustomXmlCell()
 {
 }
@@ -36056,6 +40096,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SmartTagPr::~OOXMLContext_wordprocessingml_CT_SmartTagPr()
 {
 }
@@ -36132,6 +40173,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_PContent::~OOXMLContext_wordprocessingml_EG_PContent()
 {
 }
@@ -36238,6 +40280,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_P::~OOXMLContext_wordprocessingml_CT_P()
 {
 }
@@ -36285,9 +40328,44 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_P::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_P::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    switch (nToken)
+    {
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidRPr:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidR:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidDel:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidP:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+     case OOXML_ATTRIBUTE_wordprocessingml_rsidRDefault:
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }
+      break;
+    default:
+      ;
+    }
     
     return bResult;
 }
@@ -36327,6 +40405,8 @@
 }
 void OOXMLContext_wordprocessingml_CT_P::endAction()
 {
+    if (! mpParserState->isInCharacterGroup())
+       startCharacterGroup();
     if (isForwardEvents())        
         mrStream.utext(sCR, 1);
 }
@@ -36336,6 +40416,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Height::~OOXMLContext_wordprocessingml_CT_Height()
 {
 }
@@ -36431,6 +40512,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblWidth::~OOXMLContext_wordprocessingml_CT_TblWidth()
 {
 }
@@ -36530,6 +40612,7 @@
 : OOXMLContextIntegerValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblGridCol::~OOXMLContext_wordprocessingml_CT_TblGridCol()
 {
 }
@@ -36602,6 +40685,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblGridBase::~OOXMLContext_wordprocessingml_CT_TblGridBase()
 {
 }
@@ -36689,6 +40773,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblGrid::~OOXMLContext_wordprocessingml_CT_TblGrid()
 {
 }
@@ -36803,6 +40888,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcBorders::~OOXMLContext_wordprocessingml_CT_TcBorders()
 {
 }
@@ -36960,6 +41046,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcMar::~OOXMLContext_wordprocessingml_CT_TcMar()
 {
 }
@@ -37077,6 +41164,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_VMerge::~OOXMLContext_wordprocessingml_CT_VMerge()
 {
 }
@@ -37151,6 +41239,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_HMerge::~OOXMLContext_wordprocessingml_CT_HMerge()
 {
 }
@@ -37225,6 +41314,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcPrBase::~OOXMLContext_wordprocessingml_CT_TcPrBase()
 {
 }
@@ -37432,6 +41522,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcPr::~OOXMLContext_wordprocessingml_CT_TcPr()
 {
 }
@@ -37535,6 +41626,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TcPrInner::~OOXMLContext_wordprocessingml_CT_TcPrInner()
 {
 }
@@ -37643,6 +41735,7 @@
 : OOXMLContextTextTableCell(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Tc::~OOXMLContext_wordprocessingml_CT_Tc()
 {
 }
@@ -37727,7 +41820,6 @@
 }
 void OOXMLContext_wordprocessingml_CT_Tc::startAction()
 {
-    startParagraphGroup();
     startCell();
 }
 void OOXMLContext_wordprocessingml_CT_Tc::endAction()
@@ -37741,6 +41833,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Cnf::~OOXMLContext_wordprocessingml_CT_Cnf()
 {
 }
@@ -37813,6 +41906,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrPrBase::~OOXMLContext_wordprocessingml_CT_TrPrBase()
 {
 }
@@ -38010,6 +42104,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TrPr::~OOXMLContext_wordprocessingml_CT_TrPr()
 {
 }
@@ -38125,6 +42220,7 @@
 : OOXMLContextTextTableRow(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Row::~OOXMLContext_wordprocessingml_CT_Row()
 {
 }
@@ -38225,6 +42321,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblLayoutType::~OOXMLContext_wordprocessingml_CT_TblLayoutType()
 {
 }
@@ -38288,6 +42385,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblOverlap::~OOXMLContext_wordprocessingml_CT_TblOverlap()
 {
 }
@@ -38362,6 +42460,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPPr::~OOXMLContext_wordprocessingml_CT_TblPPr()
 {
 }
@@ -38422,9 +42521,10 @@
 /* 
     class: OOXMLContext_wordprocessingml_CT_TblCellMar*/
 OOXMLContext_wordprocessingml_CT_TblCellMar::OOXMLContext_wordprocessingml_CT_TblCellMar(const OOXMLContext & rContext)
-: OOXMLContext(rContext)
+: OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblCellMar::~OOXMLContext_wordprocessingml_CT_TblCellMar()
 {
 }
@@ -38492,7 +42592,30 @@
 {
     doctok::Id nResult = 0x0;
     
-    nResult = getIdFromRefs(nToken);
+    switch (nToken)
+    {
+        // CT_TblCellMar : top
+     case OOXML_ELEMENT_wordprocessingml_top:
+        nResult = NS_ooxml::LN_CT_TblCellMar_top;
+        break;
+        // CT_TblCellMar : left
+     case OOXML_ELEMENT_wordprocessingml_left:
+        nResult = NS_ooxml::LN_CT_TblCellMar_left;
+        break;
+        // CT_TblCellMar : bottom
+     case OOXML_ELEMENT_wordprocessingml_bottom:
+        nResult = NS_ooxml::LN_CT_TblCellMar_bottom;
+        break;
+        // CT_TblCellMar : right
+     case OOXML_ELEMENT_wordprocessingml_right:
+        nResult = NS_ooxml::LN_CT_TblCellMar_right;
+        break;
+    case OOXML_TOKENS_END: // prevent warning
+        break;
+    default:
+        nResult = getIdFromRefs(nToken);
+        break;
+    }
     return nResult;  
 }
     
@@ -38505,7 +42628,7 @@
     
 void OOXMLContext_wordprocessingml_CT_TblCellMar::lcl_characters(const rtl::OUString & sText) 
 {
-OOXMLContext::lcl_characters(sText);
+OOXMLContextProperties::lcl_characters(sText);
 }
 void OOXMLContext_wordprocessingml_CT_TblCellMar::startAction()
 {
@@ -38519,6 +42642,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblBorders::~OOXMLContext_wordprocessingml_CT_TblBorders()
 {
 }
@@ -38656,6 +42780,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrBase::~OOXMLContext_wordprocessingml_CT_TblPrBase()
 {
 }
@@ -38883,6 +43008,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPr::~OOXMLContext_wordprocessingml_CT_TblPr()
 {
 }
@@ -38997,6 +43123,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrExBase::~OOXMLContext_wordprocessingml_CT_TblPrExBase()
 {
 }
@@ -39121,6 +43248,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblPrEx::~OOXMLContext_wordprocessingml_CT_TblPrEx()
 {
 }
@@ -39223,6 +43351,7 @@
 : OOXMLContextTextTable(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Tbl::~OOXMLContext_wordprocessingml_CT_Tbl()
 {
 }
@@ -39343,6 +43472,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnPos::~OOXMLContext_wordprocessingml_CT_FtnPos()
 {
 }
@@ -39417,6 +43547,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_EdnPos::~OOXMLContext_wordprocessingml_CT_EdnPos()
 {
 }
@@ -39491,6 +43622,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumFmt::~OOXMLContext_wordprocessingml_CT_NumFmt()
 {
 }
@@ -39565,6 +43697,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumRestart::~OOXMLContext_wordprocessingml_CT_NumRestart()
 {
 }
@@ -39639,6 +43772,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnRef::~OOXMLContext_wordprocessingml_CT_FtnEdnRef()
 {
 }
@@ -39751,6 +43885,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdnSepRef::~OOXMLContext_wordprocessingml_CT_FtnEdnSepRef()
 {
 }
@@ -39814,6 +43949,7 @@
 : OOXMLContextXNote(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnEdn::~OOXMLContext_wordprocessingml_CT_FtnEdn()
 {
 }
@@ -39915,6 +44051,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CommentRef::~OOXMLContext_wordprocessingml_CT_CommentRef()
 {
 }
@@ -40010,6 +44147,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_FtnEdnNumProps::~OOXMLContext_wordprocessingml_EG_FtnEdnNumProps()
 {
 }
@@ -40107,6 +44245,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnProps::~OOXMLContext_wordprocessingml_CT_FtnProps()
 {
 }
@@ -40222,6 +44361,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_EdnProps::~OOXMLContext_wordprocessingml_CT_EdnProps()
 {
 }
@@ -40337,6 +44477,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FtnDocProps::~OOXMLContext_wordprocessingml_CT_FtnDocProps()
 {
 }
@@ -40440,6 +44581,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_EdnDocProps::~OOXMLContext_wordprocessingml_CT_EdnDocProps()
 {
 }
@@ -40543,6 +44685,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RecipientData::~OOXMLContext_wordprocessingml_CT_RecipientData()
 {
 }
@@ -40625,6 +44768,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Recipients::~OOXMLContext_wordprocessingml_CT_Recipients()
 {
 }
@@ -40701,6 +44845,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_recipients::~OOXMLContext_wordprocessingml_recipients()
 {
 }
@@ -40777,6 +44922,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_OdsoFieldMapData::~OOXMLContext_wordprocessingml_CT_OdsoFieldMapData()
 {
 }
@@ -40883,6 +45029,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMergeSourceType::~OOXMLContext_wordprocessingml_CT_MailMergeSourceType()
 {
 }
@@ -40955,6 +45102,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Odso::~OOXMLContext_wordprocessingml_CT_Odso()
 {
 }
@@ -41073,6 +45221,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MailMerge::~OOXMLContext_wordprocessingml_CT_MailMerge()
 {
 }
@@ -41239,6 +45388,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TargetScreenSz::~OOXMLContext_wordprocessingml_CT_TargetScreenSz()
 {
 }
@@ -41311,6 +45461,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Compat::~OOXMLContext_wordprocessingml_CT_Compat()
 {
 }
@@ -41771,6 +45922,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocVar::~OOXMLContext_wordprocessingml_CT_DocVar()
 {
 }
@@ -41847,6 +45999,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocVars::~OOXMLContext_wordprocessingml_CT_DocVars()
 {
 }
@@ -41923,6 +46076,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocRsids::~OOXMLContext_wordprocessingml_CT_DocRsids()
 {
 }
@@ -42005,6 +46159,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_CharacterSpacing::~OOXMLContext_wordprocessingml_CT_CharacterSpacing()
 {
 }
@@ -42077,6 +46232,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SaveThroughXslt::~OOXMLContext_wordprocessingml_CT_SaveThroughXslt()
 {
 }
@@ -42140,6 +46296,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_RPrDefault::~OOXMLContext_wordprocessingml_CT_RPrDefault()
 {
 }
@@ -42227,6 +46384,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_PPrDefault::~OOXMLContext_wordprocessingml_CT_PPrDefault()
 {
 }
@@ -42314,6 +46472,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocDefaults::~OOXMLContext_wordprocessingml_CT_DocDefaults()
 {
 }
@@ -42411,6 +46570,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ColorSchemeMapping::~OOXMLContext_wordprocessingml_CT_ColorSchemeMapping()
 {
 }
@@ -42474,6 +46634,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ReadingModeInkLockDown::~OOXMLContext_wordprocessingml_CT_ReadingModeInkLockDown()
 {
 }
@@ -42537,6 +46698,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_WriteProtection::~OOXMLContext_wordprocessingml_CT_WriteProtection()
 {
 }
@@ -42546,6 +46708,15 @@
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
     
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_AG_Password(*this));
+        OOXMLContext::Pointer_t pContext(pSubContext->element(nToken));
+
+        if (pContext.get() != NULL)
+            return pContext;
+     }
+    
     return OOXMLContext::Pointer_t();
 }
     
@@ -42562,9 +46733,17 @@
     return pResult;
 }
      
-bool OOXMLContext_wordprocessingml_CT_WriteProtection::lcl_attribute(TokenEnum_t /*nToken*/, const rtl::OUString & /*rValue*/)
+bool OOXMLContext_wordprocessingml_CT_WriteProtection::lcl_attribute(TokenEnum_t nToken, const rtl::OUString & rValue)
 {
     bool bResult = false;
+    if (! bResult)
+    {
+        OOXMLContext::Pointer_t pRefContext( new OOXMLContext_wordprocessingml_AG_Password(*this));
+        pRefContext->setParentResource(getResource());
+        
+        bResult = pRefContext->attribute(nToken, rValue);
+        
+    }
     
     return bResult;
 }
@@ -42581,6 +46760,15 @@
 {
     TokenEnum_t tmpToken;
     tmpToken = nToken; // prevent warning
+    {       
+        OOXMLContext::Pointer_t pSubContext = OOXMLContext::Pointer_t
+            ( new OOXMLContext_wordprocessingml_AG_Password(*this));
+        doctok::Id nId = pSubContext->getId(nToken);
+
+        if (nId != 0x0)
+            return nId;
+     }
+    
     return 0x0;
 }
     
@@ -42600,6 +46788,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Settings::~OOXMLContext_wordprocessingml_CT_Settings()
 {
 }
@@ -43270,6 +47459,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_WebSettings::~OOXMLContext_wordprocessingml_CT_WebSettings()
 {
 }
@@ -43418,6 +47608,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FrameScrollbar::~OOXMLContext_wordprocessingml_CT_FrameScrollbar()
 {
 }
@@ -43490,6 +47681,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Frame::~OOXMLContext_wordprocessingml_CT_Frame()
 {
 }
@@ -43608,6 +47800,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FrameLayout::~OOXMLContext_wordprocessingml_CT_FrameLayout()
 {
 }
@@ -43680,6 +47873,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FramesetSplitbar::~OOXMLContext_wordprocessingml_CT_FramesetSplitbar()
 {
 }
@@ -43774,6 +47968,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Frameset::~OOXMLContext_wordprocessingml_CT_Frameset()
 {
 }
@@ -43874,6 +48069,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumPicBullet::~OOXMLContext_wordprocessingml_CT_NumPicBullet()
 {
 }
@@ -43950,6 +48146,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LevelSuffix::~OOXMLContext_wordprocessingml_CT_LevelSuffix()
 {
 }
@@ -44022,6 +48219,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LevelText::~OOXMLContext_wordprocessingml_CT_LevelText()
 {
 }
@@ -44117,6 +48315,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LvlLegacy::~OOXMLContext_wordprocessingml_CT_LvlLegacy()
 {
 }
@@ -44222,6 +48421,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Lvl::~OOXMLContext_wordprocessingml_CT_Lvl()
 {
 }
@@ -44454,6 +48654,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_MultiLevelType::~OOXMLContext_wordprocessingml_CT_MultiLevelType()
 {
 }
@@ -44528,6 +48729,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AbstractNum::~OOXMLContext_wordprocessingml_CT_AbstractNum()
 {
 }
@@ -44690,6 +48892,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_NumLvl::~OOXMLContext_wordprocessingml_CT_NumLvl()
 {
 }
@@ -44802,6 +49005,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Num::~OOXMLContext_wordprocessingml_CT_Num()
 {
 }
@@ -44914,6 +49118,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Numbering::~OOXMLContext_wordprocessingml_CT_Numbering()
 {
 }
@@ -45031,6 +49236,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TblStylePr::~OOXMLContext_wordprocessingml_CT_TblStylePr()
 {
 }
@@ -45131,6 +49337,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Style::~OOXMLContext_wordprocessingml_CT_Style()
 {
 }
@@ -45481,6 +49688,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LsdException::~OOXMLContext_wordprocessingml_CT_LsdException()
 {
 }
@@ -45544,6 +49752,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_LatentStyles::~OOXMLContext_wordprocessingml_CT_LatentStyles()
 {
 }
@@ -45620,6 +49829,7 @@
 : OOXMLContextTable(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Styles::~OOXMLContext_wordprocessingml_CT_Styles()
 {
 }
@@ -45709,6 +49919,7 @@
 : OOXMLContextHexValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Panose::~OOXMLContext_wordprocessingml_CT_Panose()
 {
 }
@@ -45781,6 +49992,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FontFamily::~OOXMLContext_wordprocessingml_CT_FontFamily()
 {
 }
@@ -45855,6 +50067,7 @@
 : OOXMLContextListValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Pitch::~OOXMLContext_wordprocessingml_CT_Pitch()
 {
 }
@@ -45929,6 +50142,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FontSig::~OOXMLContext_wordprocessingml_CT_FontSig()
 {
 }
@@ -46076,6 +50290,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FontRel::~OOXMLContext_wordprocessingml_CT_FontRel()
 {
 }
@@ -46198,6 +50413,7 @@
 : OOXMLContextProperties(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Font::~OOXMLContext_wordprocessingml_CT_Font()
 {
 }
@@ -46400,6 +50616,7 @@
 : OOXMLContextTable(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_FontsList::~OOXMLContext_wordprocessingml_CT_FontsList()
 {
 }
@@ -46477,6 +50694,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DivBdr::~OOXMLContext_wordprocessingml_CT_DivBdr()
 {
 }
@@ -46571,6 +50789,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Div::~OOXMLContext_wordprocessingml_CT_Div()
 {
 }
@@ -46689,6 +50908,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Divs::~OOXMLContext_wordprocessingml_CT_Divs()
 {
 }
@@ -46765,6 +50985,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_TxbxContent::~OOXMLContext_wordprocessingml_CT_TxbxContent()
 {
 }
@@ -46846,6 +51067,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_txbxContent::~OOXMLContext_wordprocessingml_txbxContent()
 {
 }
@@ -46922,6 +51144,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_MathContent::~OOXMLContext_wordprocessingml_EG_MathContent()
 {
 }
@@ -47021,6 +51244,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_BlockLevelChunkElts::~OOXMLContext_wordprocessingml_EG_BlockLevelChunkElts()
 {
 }
@@ -47102,6 +51326,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_BlockLevelElts::~OOXMLContext_wordprocessingml_EG_BlockLevelElts()
 {
 }
@@ -47196,6 +51421,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_EG_RunLevelElts::~OOXMLContext_wordprocessingml_EG_RunLevelElts()
 {
 }
@@ -47344,6 +51570,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Body::~OOXMLContext_wordprocessingml_CT_Body()
 {
 }
@@ -47442,6 +51669,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_ShapeDefaults::~OOXMLContext_wordprocessingml_CT_ShapeDefaults()
 {
 }
@@ -47505,6 +51733,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Comments::~OOXMLContext_wordprocessingml_CT_Comments()
 {
 }
@@ -47581,6 +51810,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_comments::~OOXMLContext_wordprocessingml_comments()
 {
 }
@@ -47657,6 +51887,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Footnotes::~OOXMLContext_wordprocessingml_CT_Footnotes()
 {
 }
@@ -47733,6 +51964,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_footnotes::~OOXMLContext_wordprocessingml_footnotes()
 {
 }
@@ -47809,6 +52041,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Endnotes::~OOXMLContext_wordprocessingml_CT_Endnotes()
 {
 }
@@ -47885,6 +52118,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_endnotes::~OOXMLContext_wordprocessingml_endnotes()
 {
 }
@@ -47961,6 +52195,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_hdr::~OOXMLContext_wordprocessingml_hdr()
 {
 }
@@ -48037,6 +52272,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_ftr::~OOXMLContext_wordprocessingml_ftr()
 {
 }
@@ -48113,6 +52349,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_SmartTagType::~OOXMLContext_wordprocessingml_CT_SmartTagType()
 {
 }
@@ -48176,6 +52413,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartBehavior::~OOXMLContext_wordprocessingml_CT_DocPartBehavior()
 {
 }
@@ -48248,6 +52486,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartBehaviors::~OOXMLContext_wordprocessingml_CT_DocPartBehaviors()
 {
 }
@@ -48324,6 +52563,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartType::~OOXMLContext_wordprocessingml_CT_DocPartType()
 {
 }
@@ -48396,6 +52636,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartTypes::~OOXMLContext_wordprocessingml_CT_DocPartTypes()
 {
 }
@@ -48472,6 +52713,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartGallery::~OOXMLContext_wordprocessingml_CT_DocPartGallery()
 {
 }
@@ -48544,6 +52786,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartCategory::~OOXMLContext_wordprocessingml_CT_DocPartCategory()
 {
 }
@@ -48626,6 +52869,7 @@
 : OOXMLContextStringValue(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartName::~OOXMLContext_wordprocessingml_CT_DocPartName()
 {
 }
@@ -48702,6 +52946,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPartPr::~OOXMLContext_wordprocessingml_CT_DocPartPr()
 {
 }
@@ -48814,6 +53059,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocPart::~OOXMLContext_wordprocessingml_CT_DocPart()
 {
 }
@@ -48896,6 +53142,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocParts::~OOXMLContext_wordprocessingml_CT_DocParts()
 {
 }
@@ -48972,6 +53219,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_settings::~OOXMLContext_wordprocessingml_settings()
 {
 }
@@ -49048,6 +53296,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_webSettings::~OOXMLContext_wordprocessingml_webSettings()
 {
 }
@@ -49124,6 +53373,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_fonts::~OOXMLContext_wordprocessingml_fonts()
 {
 }
@@ -49200,6 +53450,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_numbering::~OOXMLContext_wordprocessingml_numbering()
 {
 }
@@ -49276,6 +53527,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_styles::~OOXMLContext_wordprocessingml_styles()
 {
 }
@@ -49352,6 +53604,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Caption::~OOXMLContext_wordprocessingml_CT_Caption()
 {
 }
@@ -49415,6 +53668,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AutoCaption::~OOXMLContext_wordprocessingml_CT_AutoCaption()
 {
 }
@@ -49478,6 +53732,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_AutoCaptions::~OOXMLContext_wordprocessingml_CT_AutoCaptions()
 {
 }
@@ -49554,6 +53809,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Captions::~OOXMLContext_wordprocessingml_CT_Captions()
 {
 }
@@ -49636,6 +53892,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_DocumentBase::~OOXMLContext_wordprocessingml_CT_DocumentBase()
 {
 }
@@ -49712,6 +53969,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_Document::~OOXMLContext_wordprocessingml_CT_Document()
 {
 }
@@ -49814,6 +54072,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_CT_GlossaryDocument::~OOXMLContext_wordprocessingml_CT_GlossaryDocument()
 {
 }
@@ -49916,6 +54175,7 @@
 : OOXMLContextStream(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_document::~OOXMLContext_wordprocessingml_document()
 {
 }
@@ -49992,6 +54252,7 @@
 : OOXMLContext(rContext)
 {
 }
+
 OOXMLContext_wordprocessingml_glossaryDocument::~OOXMLContext_wordprocessingml_glossaryDocument()
 {
 }
@@ -50064,3 +54325,5 @@
 }
       
 }
+/// @endcond GENERATED
+
--- writerfilter/source/ooxml/OOXMLresources.hxx	27 Jun 2007 09:19:54 -0000	1.71
+++ writerfilter/source/ooxml/OOXMLresources.hxx	18 Jul 2007 12:54:09 -0000	1.71.4.6
@@ -53,8 +53,494 @@
 using namespace ::std;
 using namespace ::com::sun::star;
 using namespace doctok;
+
+/// @cond GENERATED
       
       
+class OOXMLValue_drawingml_ST_StyleMatrixColumnIndex : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_StyleMatrixColumnIndex(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_StyleMatrixColumnIndex() {}
+};
+
+class OOXMLValue_drawingml_ST_FontCollectionIndex : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_FontCollectionIndex(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_FontCollectionIndex() {}
+};
+
+class OOXMLValue_drawingml_ST_ColorSchemeIndex : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_ColorSchemeIndex(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_ColorSchemeIndex() {}
+};
+
+class OOXMLContext_drawingml_CT_ColorScheme : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_ColorScheme(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_ColorScheme();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_ColorScheme"; }
+};
+    
+class OOXMLContext_drawingml_CT_CustomColor : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_CustomColor(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_CustomColor();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_CustomColor"; }
+};
+    
+class OOXMLContext_drawingml_CT_SupplementalFont : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_SupplementalFont(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_SupplementalFont();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_SupplementalFont"; }
+};
+    
+class OOXMLContext_drawingml_CT_CustomColorList : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_CustomColorList(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_CustomColorList();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_CustomColorList"; }
+};
+    
+class OOXMLContext_drawingml_CT_FontCollection : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_FontCollection(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_FontCollection();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_FontCollection"; }
+};
+    
+class OOXMLContext_drawingml_CT_EffectStyleItem : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_EffectStyleItem(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_EffectStyleItem();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_EffectStyleItem"; }
+};
+    
+class OOXMLContext_drawingml_CT_FontScheme : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_FontScheme(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_FontScheme();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_FontScheme"; }
+};
+    
+class OOXMLContext_drawingml_CT_FillStyleList : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_FillStyleList(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_FillStyleList();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_FillStyleList"; }
+};
+    
+class OOXMLContext_drawingml_CT_LineStyleList : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_LineStyleList(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_LineStyleList();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_LineStyleList"; }
+};
+    
+class OOXMLContext_drawingml_CT_EffectStyleList : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_EffectStyleList(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_EffectStyleList();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_EffectStyleList"; }
+};
+    
+class OOXMLContext_drawingml_CT_BackgroundFillStyleList : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_BackgroundFillStyleList(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_BackgroundFillStyleList();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_BackgroundFillStyleList"; }
+};
+    
+class OOXMLContext_drawingml_CT_StyleMatrix : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_StyleMatrix(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_StyleMatrix();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_StyleMatrix"; }
+};
+    
+class OOXMLContext_drawingml_CT_BaseStyles : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_BaseStyles(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_BaseStyles();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_BaseStyles"; }
+};
+    
+class OOXMLValue_drawingml_ST_TextPoint : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_TextPoint(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_TextPoint() {}
+};
+
+class OOXMLValue_drawingml_ST_TextNonNegativePoint : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_TextNonNegativePoint(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_TextNonNegativePoint() {}
+};
+
+class OOXMLValue_drawingml_ST_TextFontSize : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_TextFontSize(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_TextFontSize() {}
+};
+
+class OOXMLValue_drawingml_ST_Panose : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_Panose(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_Panose() {}
+};
+
+class OOXMLValue_drawingml_ST_TextTypeface : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_TextTypeface(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_TextTypeface() {}
+};
+
+class OOXMLContext_drawingml_CT_TextFont : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_TextFont(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_TextFont();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_TextFont"; }
+};
+    
+class OOXMLValue_drawingml_ST_TextLanguageID : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_TextLanguageID(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_TextLanguageID() {}
+};
+
+class OOXMLValue_drawingml_ST_TextUnderlineType : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_TextUnderlineType(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_TextUnderlineType() {}
+};
+
+class OOXMLContext_drawingml_CT_TextUnderlineLineFollowText : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_TextUnderlineLineFollowText(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_TextUnderlineLineFollowText();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_TextUnderlineLineFollowText"; }
+};
+    
+class OOXMLContext_drawingml_CT_TextUnderlineFillFollowText : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_TextUnderlineFillFollowText(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_TextUnderlineFillFollowText();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_TextUnderlineFillFollowText"; }
+};
+    
+class OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_TextUnderlineFillGroupWrapper"; }
+};
+    
+class OOXMLContext_drawingml_EG_TextUnderlineLine : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_EG_TextUnderlineLine(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_EG_TextUnderlineLine();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_EG_TextUnderlineLine"; }
+};
+    
+class OOXMLContext_drawingml_EG_TextUnderlineFill : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_EG_TextUnderlineFill(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_EG_TextUnderlineFill();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_EG_TextUnderlineFill"; }
+};
+    
+class OOXMLValue_drawingml_ST_TextStrikeType : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_TextStrikeType(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_TextStrikeType() {}
+};
+
+class OOXMLValue_drawingml_ST_TextCapsType : public OOXMLValue
+{
+public:
+     OOXMLValue_drawingml_ST_TextCapsType(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     virtual ~OOXMLValue_drawingml_ST_TextCapsType() {}
+};
+
+class OOXMLContext_drawingml_CT_TextCharacterProperties : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_CT_TextCharacterProperties(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_CT_TextCharacterProperties();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_CT_TextCharacterProperties"; }
+};
+    
 class OOXMLContext_drawingml_CT_AlphaBiLevelEffect : public OOXMLContext
 {
 public:
@@ -716,7 +1202,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_GradientFillProperties"; }
 };
     
-class OOXMLContext_drawingml_CT_TileInfoProperties : public OOXMLContext
+class OOXMLContext_drawingml_CT_TileInfoProperties : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_TileInfoProperties(const OOXMLContext & rContext);
@@ -736,7 +1222,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_TileInfoProperties"; }
 };
     
-class OOXMLContext_drawingml_CT_StretchInfoProperties : public OOXMLContext
+class OOXMLContext_drawingml_CT_StretchInfoProperties : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_StretchInfoProperties(const OOXMLContext & rContext);
@@ -756,7 +1242,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_StretchInfoProperties"; }
 };
     
-class OOXMLContext_drawingml_EG_FillModeProperties : public OOXMLContext
+class OOXMLContext_drawingml_EG_FillModeProperties : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_EG_FillModeProperties(const OOXMLContext & rContext);
@@ -783,7 +1269,7 @@
      virtual ~OOXMLValue_drawingml_ST_BlipCompression() {}
 };
 
-class OOXMLContext_drawingml_CT_Blip : public OOXMLContext
+class OOXMLContext_drawingml_CT_Blip : public OOXMLContextStream
 {
 public:
     OOXMLContext_drawingml_CT_Blip(const OOXMLContext & rContext);
@@ -803,7 +1289,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_Blip"; }
 };
     
-class OOXMLContext_drawingml_CT_BlipFillProperties : public OOXMLContext
+class OOXMLContext_drawingml_CT_BlipFillProperties : public OOXMLContextStream
 {
 public:
     OOXMLContext_drawingml_CT_BlipFillProperties(const OOXMLContext & rContext);
@@ -977,7 +1463,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_EffectReference"; }
 };
     
-class OOXMLContext_drawingml_EG_Effect : public OOXMLContext
+class OOXMLContext_drawingml_EG_Effect : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_EG_Effect(const OOXMLContext & rContext);
@@ -1144,7 +1630,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_blip"; }
 };
     
-class OOXMLContext_drawingml_CT_ShapeProperties : public OOXMLContext
+class OOXMLContext_drawingml_CT_ShapeProperties : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_ShapeProperties(const OOXMLContext & rContext);
@@ -1204,24 +1690,24 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_OfficeArtExtension"; }
 };
     
-class OOXMLValue_drawingml_ST_Coordinate : public OOXMLValue
+class OOXMLValue_drawingml_ST_Coordinate : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_drawingml_ST_Coordinate(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_Coordinate(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_Coordinate() {}
 };
 
-class OOXMLValue_drawingml_ST_Coordinate32 : public OOXMLValue
+class OOXMLValue_drawingml_ST_Coordinate32 : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_drawingml_ST_Coordinate32(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_Coordinate32(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_Coordinate32() {}
 };
 
-class OOXMLValue_drawingml_ST_PositiveCoordinate : public OOXMLValue
+class OOXMLValue_drawingml_ST_PositiveCoordinate : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_drawingml_ST_PositiveCoordinate(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_PositiveCoordinate(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_PositiveCoordinate() {}
 };
 
@@ -1232,10 +1718,10 @@
      virtual ~OOXMLValue_drawingml_ST_PositiveCoordinate32() {}
 };
 
-class OOXMLValue_drawingml_ST_Angle : public OOXMLValue
+class OOXMLValue_drawingml_ST_Angle : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_drawingml_ST_Angle(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_Angle(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_Angle() {}
 };
 
@@ -1293,10 +1779,10 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_PositiveFixedAngle"; }
 };
     
-class OOXMLValue_drawingml_ST_Percentage : public OOXMLValue
+class OOXMLValue_drawingml_ST_Percentage : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_drawingml_ST_Percentage(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_Percentage(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_Percentage() {}
 };
 
@@ -1421,7 +1907,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_Ratio"; }
 };
     
-class OOXMLContext_drawingml_CT_Point2D : public OOXMLContext
+class OOXMLContext_drawingml_CT_Point2D : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_Point2D(const OOXMLContext & rContext);
@@ -1441,7 +1927,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_Point2D"; }
 };
     
-class OOXMLContext_drawingml_CT_PositiveSize2D : public OOXMLContext
+class OOXMLContext_drawingml_CT_PositiveSize2D : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_PositiveSize2D(const OOXMLContext & rContext);
@@ -1601,10 +2087,10 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_ScRgbColor"; }
 };
     
-class OOXMLValue_drawingml_ST_HexBinary3 : public OOXMLValue
+class OOXMLValue_drawingml_ST_HexBinary3 : public OOXMLHexValue
 {
 public:
-     OOXMLValue_drawingml_ST_HexBinary3(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_HexBinary3(const rtl::OUString & rValue) : OOXMLHexValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_HexBinary3() {}
 };
 
@@ -1789,7 +2275,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_Scale2D"; }
 };
     
-class OOXMLContext_drawingml_CT_Transform2D : public OOXMLContext
+class OOXMLContext_drawingml_CT_Transform2D : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_Transform2D(const OOXMLContext & rContext);
@@ -1916,10 +2402,10 @@
      virtual ~OOXMLValue_drawingml_ST_RectAlignment() {}
 };
 
-class OOXMLValue_drawingml_ST_Guid : public OOXMLValue
+class OOXMLValue_drawingml_ST_Guid : public OOXMLStringValue
 {
 public:
-     OOXMLValue_drawingml_ST_Guid(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_Guid(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_Guid() {}
 };
 
@@ -1990,6 +2476,26 @@
      virtual ~OOXMLValue_drawingml_ST_BlackWhiteMode() {}
 };
 
+class OOXMLContext_drawingml_AG_Blob : public OOXMLContextStream
+{
+public:
+    OOXMLContext_drawingml_AG_Blob(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_AG_Blob();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_AG_Blob"; }
+};
+    
 class OOXMLContext_drawingml_CT_EmbeddedWAVAudioFile : public OOXMLContext
 {
 public:
@@ -2030,13 +2536,33 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_Hyperlink"; }
 };
     
-class OOXMLValue_drawingml_ST_DrawingElementId : public OOXMLValue
+class OOXMLValue_drawingml_ST_DrawingElementId : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_drawingml_ST_DrawingElementId(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_DrawingElementId(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_DrawingElementId() {}
 };
 
+class OOXMLContext_drawingml_AG_Locking : public OOXMLContext
+{
+public:
+    OOXMLContext_drawingml_AG_Locking(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_drawingml_AG_Locking();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_drawingml_AG_Locking"; }
+};
+    
 class OOXMLContext_drawingml_CT_ConnectorLocking : public OOXMLContext
 {
 public:
@@ -2117,7 +2643,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_GroupLocking"; }
 };
     
-class OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking : public OOXMLContext
+class OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking(const OOXMLContext & rContext);
@@ -2137,7 +2663,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_GraphicalObjectFrameLocking"; }
 };
     
-class OOXMLContext_drawingml_CT_NonVisualDrawingProps : public OOXMLContext
+class OOXMLContext_drawingml_CT_NonVisualDrawingProps : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_NonVisualDrawingProps(const OOXMLContext & rContext);
@@ -2197,7 +2723,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_NonVisualConnectorProperties"; }
 };
     
-class OOXMLContext_drawingml_CT_NonVisualPictureProperties : public OOXMLContext
+class OOXMLContext_drawingml_CT_NonVisualPictureProperties : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_NonVisualPictureProperties(const OOXMLContext & rContext);
@@ -2237,7 +2763,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_NonVisualGroupDrawingShapeProps"; }
 };
     
-class OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties : public OOXMLContext
+class OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties(const OOXMLContext & rContext);
@@ -2257,7 +2783,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_NonVisualGraphicFrameProperties"; }
 };
     
-class OOXMLContext_drawingml_CT_GraphicalObjectData : public OOXMLContext
+class OOXMLContext_drawingml_CT_GraphicalObjectData : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_GraphicalObjectData(const OOXMLContext & rContext);
@@ -2277,7 +2803,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_GraphicalObjectData"; }
 };
     
-class OOXMLContext_drawingml_CT_GraphicalObject : public OOXMLContext
+class OOXMLContext_drawingml_CT_GraphicalObject : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_GraphicalObject(const OOXMLContext & rContext);
@@ -2317,10 +2843,10 @@
     virtual string getType() const { return "OOXMLContext_drawingml_graphic"; }
 };
     
-class OOXMLValue_drawingml_ST_ShapeType : public OOXMLValue
+class OOXMLValue_drawingml_ST_ShapeType : public OOXMLListValue
 {
 public:
-     OOXMLValue_drawingml_ST_ShapeType(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_ShapeType(const rtl::OUString & rValue);
      virtual ~OOXMLValue_drawingml_ST_ShapeType() {}
 };
 
@@ -2331,17 +2857,17 @@
      virtual ~OOXMLValue_drawingml_ST_TextShapeType() {}
 };
 
-class OOXMLValue_drawingml_ST_GeomGuideName : public OOXMLValue
+class OOXMLValue_drawingml_ST_GeomGuideName : public OOXMLStringValue
 {
 public:
-     OOXMLValue_drawingml_ST_GeomGuideName(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_GeomGuideName(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_GeomGuideName() {}
 };
 
-class OOXMLValue_drawingml_ST_GeomGuideFormula : public OOXMLValue
+class OOXMLValue_drawingml_ST_GeomGuideFormula : public OOXMLStringValue
 {
 public:
-     OOXMLValue_drawingml_ST_GeomGuideFormula(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_drawingml_ST_GeomGuideFormula(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_drawingml_ST_GeomGuideFormula() {}
 };
 
@@ -2365,7 +2891,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_GeomGuide"; }
 };
     
-class OOXMLContext_drawingml_CT_GeomGuideList : public OOXMLContext
+class OOXMLContext_drawingml_CT_GeomGuideList : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_GeomGuideList(const OOXMLContext & rContext);
@@ -2726,7 +3252,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_Path2DList"; }
 };
     
-class OOXMLContext_drawingml_CT_PresetGeometry2D : public OOXMLContext
+class OOXMLContext_drawingml_CT_PresetGeometry2D : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_PresetGeometry2D(const OOXMLContext & rContext);
@@ -2766,7 +3292,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_PresetTextShape"; }
 };
     
-class OOXMLContext_drawingml_CT_CustomGeometry2D : public OOXMLContext
+class OOXMLContext_drawingml_CT_CustomGeometry2D : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_CT_CustomGeometry2D(const OOXMLContext & rContext);
@@ -2786,7 +3312,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_CT_CustomGeometry2D"; }
 };
     
-class OOXMLContext_drawingml_EG_Geometry : public OOXMLContext
+class OOXMLContext_drawingml_EG_Geometry : public OOXMLContextProperties
 {
 public:
     OOXMLContext_drawingml_EG_Geometry(const OOXMLContext & rContext);
@@ -2826,7 +3352,7 @@
     virtual string getType() const { return "OOXMLContext_drawingml_EG_TextGeometry"; }
 };
     
-class OOXMLContext_wordprocessingDrawing_CT_EffectExtent : public OOXMLContext
+class OOXMLContext_wordprocessingDrawing_CT_EffectExtent : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingDrawing_CT_EffectExtent(const OOXMLContext & rContext);
@@ -2846,14 +3372,14 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingDrawing_CT_EffectExtent"; }
 };
     
-class OOXMLValue_wordprocessingDrawing_ST_WrapDistance : public OOXMLValue
+class OOXMLValue_wordprocessingDrawing_ST_WrapDistance : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_wordprocessingDrawing_ST_WrapDistance(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingDrawing_ST_WrapDistance(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingDrawing_ST_WrapDistance() {}
 };
 
-class OOXMLContext_wordprocessingDrawing_CT_Inline : public OOXMLContext
+class OOXMLContext_wordprocessingDrawing_CT_Inline : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingDrawing_CT_Inline(const OOXMLContext & rContext);
@@ -3020,10 +3546,10 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingDrawing_EG_WrapType"; }
 };
     
-class OOXMLValue_wordprocessingDrawing_ST_PositionOffset : public OOXMLValue
+class OOXMLValue_wordprocessingDrawing_ST_PositionOffset : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_wordprocessingDrawing_ST_PositionOffset(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingDrawing_ST_PositionOffset(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingDrawing_ST_PositionOffset() {}
 };
 
@@ -3215,10 +3741,10 @@
     virtual string getType() const { return "OOXMLContext_schemaLibrary_schemaLibrary"; }
 };
     
-class OOXMLValue_math_ST_Integer255 : public OOXMLValue
+class OOXMLValue_math_ST_Integer255 : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_math_ST_Integer255(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_math_ST_Integer255(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_math_ST_Integer255() {}
 };
 
@@ -3242,10 +3768,10 @@
     virtual string getType() const { return "OOXMLContext_math_CT_Integer255"; }
 };
     
-class OOXMLValue_math_ST_Integer2 : public OOXMLValue
+class OOXMLValue_math_ST_Integer2 : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_math_ST_Integer2(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_math_ST_Integer2(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_math_ST_Integer2() {}
 };
 
@@ -3269,10 +3795,10 @@
     virtual string getType() const { return "OOXMLContext_math_CT_Integer2"; }
 };
     
-class OOXMLValue_math_ST_SpacingRule : public OOXMLValue
+class OOXMLValue_math_ST_SpacingRule : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_math_ST_SpacingRule(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_math_ST_SpacingRule(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_math_ST_SpacingRule() {}
 };
 
@@ -3296,10 +3822,10 @@
     virtual string getType() const { return "OOXMLContext_math_CT_SpacingRule"; }
 };
     
-class OOXMLValue_math_ST_UnSignedInteger : public OOXMLValue
+class OOXMLValue_math_ST_UnSignedInteger : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_math_ST_UnSignedInteger(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_math_ST_UnSignedInteger(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_math_ST_UnSignedInteger() {}
 };
 
@@ -3323,10 +3849,10 @@
     virtual string getType() const { return "OOXMLContext_math_CT_UnSignedInteger"; }
 };
     
-class OOXMLValue_math_ST_Char : public OOXMLValue
+class OOXMLValue_math_ST_Char : public OOXMLStringValue
 {
 public:
-     OOXMLValue_math_ST_Char(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_math_ST_Char(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_math_ST_Char() {}
 };
 
@@ -3377,14 +3903,14 @@
     virtual string getType() const { return "OOXMLContext_math_CT_OnOff"; }
 };
     
-class OOXMLValue_math_ST_String : public OOXMLValue
+class OOXMLValue_math_ST_String : public OOXMLStringValue
 {
 public:
-     OOXMLValue_math_ST_String(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_math_ST_String(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_math_ST_String() {}
 };
 
-class OOXMLContext_math_CT_String : public OOXMLContextStringValue
+class OOXMLContext_math_CT_String : public OOXMLContext
 {
 public:
     OOXMLContext_math_CT_String(const OOXMLContext & rContext);
@@ -4707,10 +5233,10 @@
     virtual string getType() const { return "OOXMLContext_math_CT_OMathParaPr"; }
 };
     
-class OOXMLValue_math_ST_TwipsMeasure : public OOXMLValue
+class OOXMLValue_math_ST_TwipsMeasure : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_math_ST_TwipsMeasure(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_math_ST_TwipsMeasure(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_math_ST_TwipsMeasure() {}
 };
 
@@ -4888,14 +5414,14 @@
     virtual string getType() const { return "OOXMLContext_math_oMath"; }
 };
     
-class OOXMLValue__ST_RelationshipId : public OOXMLValue
+class OOXMLValue__ST_RelationshipId : public OOXMLStringValue
 {
 public:
-     OOXMLValue__ST_RelationshipId(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue__ST_RelationshipId(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue__ST_RelationshipId() {}
 };
 
-class OOXMLContext_picture_CT_PictureNonVisual : public OOXMLContext
+class OOXMLContext_picture_CT_PictureNonVisual : public OOXMLContextProperties
 {
 public:
     OOXMLContext_picture_CT_PictureNonVisual(const OOXMLContext & rContext);
@@ -4915,7 +5441,7 @@
     virtual string getType() const { return "OOXMLContext_picture_CT_PictureNonVisual"; }
 };
     
-class OOXMLContext_picture_CT_Picture : public OOXMLContext
+class OOXMLContext_picture_CT_Picture : public OOXMLContextStream
 {
 public:
     OOXMLContext_picture_CT_Picture(const OOXMLContext & rContext);
@@ -5110,10 +5636,10 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_DecimalNumber"; }
 };
     
-class OOXMLValue_wordprocessingml_ST_UnsignedDecimalNumber : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_UnsignedDecimalNumber : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_UnsignedDecimalNumber(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_UnsignedDecimalNumber(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_UnsignedDecimalNumber() {}
 };
 
@@ -5171,10 +5697,10 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_SignedTwipsMeasure"; }
 };
     
-class OOXMLValue_wordprocessingml_ST_PixelsMeasure : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_PixelsMeasure : public OOXMLIntegerValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_PixelsMeasure(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_PixelsMeasure(const rtl::OUString & rValue) : OOXMLIntegerValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_PixelsMeasure() {}
 };
 
@@ -5252,17 +5778,17 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_SignedHpsMeasure"; }
 };
     
-class OOXMLValue_wordprocessingml_ST_DateTime : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_DateTime : public OOXMLStringValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_DateTime(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_DateTime(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_DateTime() {}
 };
 
-class OOXMLValue_wordprocessingml_ST_MacroName : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_MacroName : public OOXMLStringValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_MacroName(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_MacroName(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_MacroName() {}
 };
 
@@ -5422,10 +5948,10 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_Color"; }
 };
     
-class OOXMLValue_wordprocessingml_ST_LangCode : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_LangCode : public OOXMLHexValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_LangCode(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_LangCode(const rtl::OUString & rValue) : OOXMLHexValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_LangCode() {}
 };
 
@@ -6045,6 +6571,26 @@
      virtual ~OOXMLValue_wordprocessingml_ST_AlgType() {}
 };
 
+class OOXMLContext_wordprocessingml_AG_Password : public OOXMLContext
+{
+public:
+    OOXMLContext_wordprocessingml_AG_Password(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_wordprocessingml_AG_Password();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_wordprocessingml_AG_Password"; }
+};
+    
 class OOXMLContext_wordprocessingml_CT_DocProtect : public OOXMLContext
 {
 public:
@@ -6361,7 +6907,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_TrackChangeRange"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_MarkupRange : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_MarkupRange : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingml_CT_MarkupRange(const OOXMLContext & rContext);
@@ -6381,7 +6927,27 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_MarkupRange"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_BookmarkRange : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark : public OOXMLContextProperties
+{
+public:
+    OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_MarkupRangeBookmark"; }
+};
+    
+class OOXMLContext_wordprocessingml_CT_BookmarkRange : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingml_CT_BookmarkRange(const OOXMLContext & rContext);
@@ -6401,7 +6967,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_BookmarkRange"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_Bookmark : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_Bookmark : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingml_CT_Bookmark(const OOXMLContext & rContext);
@@ -6968,7 +7534,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_Picture"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_Drawing : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_Drawing : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingml_CT_Drawing(const OOXMLContext & rContext);
@@ -6988,7 +7554,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_Drawing"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_SimpleField : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_SimpleField : public OOXMLContextStream
 {
 public:
     OOXMLContext_wordprocessingml_CT_SimpleField(const OOXMLContext & rContext);
@@ -7008,10 +7574,10 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_SimpleField"; }
 };
     
-class OOXMLValue_wordprocessingml_ST_FldCharType : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_FldCharType : public OOXMLListValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_FldCharType(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_FldCharType(const rtl::OUString & rValue);
      virtual ~OOXMLValue_wordprocessingml_ST_FldCharType() {}
 };
 
@@ -7022,24 +7588,24 @@
      virtual ~OOXMLValue_wordprocessingml_ST_InfoTextType() {}
 };
 
-class OOXMLValue_wordprocessingml_ST_FFHelpTextVal : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_FFHelpTextVal : public OOXMLStringValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_FFHelpTextVal(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_FFHelpTextVal(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_FFHelpTextVal() {}
 };
 
-class OOXMLValue_wordprocessingml_ST_FFStatusTextVal : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_FFStatusTextVal : public OOXMLStringValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_FFStatusTextVal(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_FFStatusTextVal(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_FFStatusTextVal() {}
 };
 
-class OOXMLValue_wordprocessingml_ST_FFName : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_FFName : public OOXMLStringValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_FFName(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_FFName(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_FFName() {}
 };
 
@@ -7090,7 +7656,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_FFName"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_FldChar : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_FldChar : public OOXMLContextStream
 {
 public:
     OOXMLContext_wordprocessingml_CT_FldChar(const OOXMLContext & rContext);
@@ -7634,6 +8200,26 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_EG_SectPrContents"; }
 };
     
+class OOXMLContext_wordprocessingml_AG_SectPrAttributes : public OOXMLContext
+{
+public:
+    OOXMLContext_wordprocessingml_AG_SectPrAttributes(const OOXMLContext & rContext);
+
+    virtual ~OOXMLContext_wordprocessingml_AG_SectPrAttributes();
+
+    virtual OOXMLContext::Pointer_t element(TokenEnum_t nToken);
+    virtual OOXMLContext::Pointer_t elementFromRefs(TokenEnum_t nToken);
+    virtual bool lcl_attribute(TokenEnum_t nToken, 
+                               const rtl::OUString & rValue);
+    virtual doctok::Id getId(TokenEnum_t nToken);
+    virtual doctok::Id getIdFromRefs(TokenEnum_t nToken);
+    virtual void lcl_characters(const rtl::OUString & str); 
+    virtual void startAction();
+    virtual void endAction();
+
+    virtual string getType() const { return "OOXMLContext_wordprocessingml_AG_SectPrAttributes"; }
+};
+    
 class OOXMLContext_wordprocessingml_CT_SectPrBase : public OOXMLContext
 {
 public:
@@ -9379,10 +9965,10 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_Tc"; }
 };
     
-class OOXMLValue_wordprocessingml_ST_Cnf : public OOXMLValue
+class OOXMLValue_wordprocessingml_ST_Cnf : public OOXMLStringValue
 {
 public:
-     OOXMLValue_wordprocessingml_ST_Cnf(const rtl::OUString & rValue) : OOXMLValue(rValue) {}
+     OOXMLValue_wordprocessingml_ST_Cnf(const rtl::OUString & rValue) : OOXMLStringValue(rValue) {}
      virtual ~OOXMLValue_wordprocessingml_ST_Cnf() {}
 };
 
@@ -9540,7 +10126,7 @@
     virtual string getType() const { return "OOXMLContext_wordprocessingml_CT_TblPPr"; }
 };
     
-class OOXMLContext_wordprocessingml_CT_TblCellMar : public OOXMLContext
+class OOXMLContext_wordprocessingml_CT_TblCellMar : public OOXMLContextProperties
 {
 public:
     OOXMLContext_wordprocessingml_CT_TblCellMar(const OOXMLContext & rContext);
@@ -11948,6 +12534,43 @@
 };
     
       
+extern rtl::OUString OOXMLValueString_major;
+extern rtl::OUString OOXMLValueString_minor;
+extern rtl::OUString OOXMLValueString_none;
+extern rtl::OUString OOXMLValueString_dk1;
+extern rtl::OUString OOXMLValueString_lt1;
+extern rtl::OUString OOXMLValueString_dk2;
+extern rtl::OUString OOXMLValueString_lt2;
+extern rtl::OUString OOXMLValueString_accent1;
+extern rtl::OUString OOXMLValueString_accent2;
+extern rtl::OUString OOXMLValueString_accent3;
+extern rtl::OUString OOXMLValueString_accent4;
+extern rtl::OUString OOXMLValueString_accent5;
+extern rtl::OUString OOXMLValueString_accent6;
+extern rtl::OUString OOXMLValueString_hlink;
+extern rtl::OUString OOXMLValueString_folHlink;
+extern rtl::OUString OOXMLValueString_words;
+extern rtl::OUString OOXMLValueString_sng;
+extern rtl::OUString OOXMLValueString_dbl;
+extern rtl::OUString OOXMLValueString_heavy;
+extern rtl::OUString OOXMLValueString_dotted;
+extern rtl::OUString OOXMLValueString_dottedHeavy;
+extern rtl::OUString OOXMLValueString_dash;
+extern rtl::OUString OOXMLValueString_dashHeavy;
+extern rtl::OUString OOXMLValueString_dashLong;
+extern rtl::OUString OOXMLValueString_dashLongHeavy;
+extern rtl::OUString OOXMLValueString_dotDash;
+extern rtl::OUString OOXMLValueString_dotDashHeavy;
+extern rtl::OUString OOXMLValueString_dotDotDash;
+extern rtl::OUString OOXMLValueString_dotDotDashHeavy;
+extern rtl::OUString OOXMLValueString_wavy;
+extern rtl::OUString OOXMLValueString_wavyHeavy;
+extern rtl::OUString OOXMLValueString_wavyDbl;
+extern rtl::OUString OOXMLValueString_noStrike;
+extern rtl::OUString OOXMLValueString_sngStrike;
+extern rtl::OUString OOXMLValueString_dblStrike;
+extern rtl::OUString OOXMLValueString_small;
+extern rtl::OUString OOXMLValueString_all;
 extern rtl::OUString OOXMLValueString_shdw1;
 extern rtl::OUString OOXMLValueString_shdw2;
 extern rtl::OUString OOXMLValueString_shdw3;
@@ -11971,7 +12594,6 @@
 extern rtl::OUString OOXMLValueString_shape;
 extern rtl::OUString OOXMLValueString_circle;
 extern rtl::OUString OOXMLValueString_rect;
-extern rtl::OUString OOXMLValueString_none;
 extern rtl::OUString OOXMLValueString_x;
 extern rtl::OUString OOXMLValueString_y;
 extern rtl::OUString OOXMLValueString_xy;
@@ -12073,19 +12695,7 @@
 extern rtl::OUString OOXMLValueString_tx1;
 extern rtl::OUString OOXMLValueString_bg2;
 extern rtl::OUString OOXMLValueString_tx2;
-extern rtl::OUString OOXMLValueString_accent1;
-extern rtl::OUString OOXMLValueString_accent2;
-extern rtl::OUString OOXMLValueString_accent3;
-extern rtl::OUString OOXMLValueString_accent4;
-extern rtl::OUString OOXMLValueString_accent5;
-extern rtl::OUString OOXMLValueString_accent6;
-extern rtl::OUString OOXMLValueString_hlink;
-extern rtl::OUString OOXMLValueString_folHlink;
 extern rtl::OUString OOXMLValueString_phClr;
-extern rtl::OUString OOXMLValueString_dk1;
-extern rtl::OUString OOXMLValueString_lt1;
-extern rtl::OUString OOXMLValueString_dk2;
-extern rtl::OUString OOXMLValueString_lt2;
 extern rtl::OUString OOXMLValueString_aliceBlue;
 extern rtl::OUString OOXMLValueString_antiqueWhite;
 extern rtl::OUString OOXMLValueString_aqua;
@@ -12531,20 +13141,11 @@
 extern rtl::OUString OOXMLValueString_darkGray;
 extern rtl::OUString OOXMLValueString_lightGray;
 extern rtl::OUString OOXMLValueString_single;
-extern rtl::OUString OOXMLValueString_words;
 extern rtl::OUString OOXMLValueString_double;
 extern rtl::OUString OOXMLValueString_thick;
-extern rtl::OUString OOXMLValueString_dotted;
-extern rtl::OUString OOXMLValueString_dottedHeavy;
-extern rtl::OUString OOXMLValueString_dash;
 extern rtl::OUString OOXMLValueString_dashedHeavy;
-extern rtl::OUString OOXMLValueString_dashLong;
-extern rtl::OUString OOXMLValueString_dashLongHeavy;
-extern rtl::OUString OOXMLValueString_dotDash;
 extern rtl::OUString OOXMLValueString_dashDotHeavy;
-extern rtl::OUString OOXMLValueString_dotDotDash;
 extern rtl::OUString OOXMLValueString_dashDotDotHeavy;
-extern rtl::OUString OOXMLValueString_wavyHeavy;
 extern rtl::OUString OOXMLValueString_wavyDouble;
 extern rtl::OUString OOXMLValueString_blinkBackground;
 extern rtl::OUString OOXMLValueString_lights;
@@ -12778,7 +13379,6 @@
 extern rtl::OUString OOXMLValueString_num;
 extern rtl::OUString OOXMLValueString_hyphen;
 extern rtl::OUString OOXMLValueString_underscore;
-extern rtl::OUString OOXMLValueString_heavy;
 extern rtl::OUString OOXMLValueString_middleDot;
 extern rtl::OUString OOXMLValueString_both;
 extern rtl::OUString OOXMLValueString_mediumKashida;
@@ -12932,7 +13532,6 @@
 extern rtl::OUString OOXMLValueString_continuationSeparator;
 extern rtl::OUString OOXMLValueString_continuationNotice;
 extern rtl::OUString OOXMLValueString_textWrapping;
-extern rtl::OUString OOXMLValueString_all;
 extern rtl::OUString OOXMLValueString_indent;
 extern rtl::OUString OOXMLValueString_spellStart;
 extern rtl::OUString OOXMLValueString_spellEnd;
@@ -13089,5 +13688,6 @@
 extern rtl::OUString OOXMLValueString_above;
 extern rtl::OUString OOXMLValueString_below;
       
+/// @endcond
 }
 #endif //INCLUDED_OOXML_RESOURCES_HXX
--- writerfilter/source/ooxml/OOXMLtokens.hxx	25 May 2007 09:25:47 -0000	1.66
+++ writerfilter/source/ooxml/OOXMLtokens.hxx	18 Jul 2007 11:45:28 -0000	1.66.4.2
@@ -55,7 +55,46 @@
 using namespace doctok;
 enum TokenEnum_t {
       
-      OOXML_ELEMENT_drawingml_clrFrom, 
+      OOXML_ELEMENT_drawingml_dk1, 
+ OOXML_ELEMENT_drawingml_lt1, 
+ OOXML_ELEMENT_drawingml_dk2, 
+ OOXML_ELEMENT_drawingml_lt2, 
+ OOXML_ELEMENT_drawingml_accent1, 
+ OOXML_ELEMENT_drawingml_accent2, 
+ OOXML_ELEMENT_drawingml_accent3, 
+ OOXML_ELEMENT_drawingml_accent4, 
+ OOXML_ELEMENT_drawingml_accent5, 
+ OOXML_ELEMENT_drawingml_accent6, 
+ OOXML_ELEMENT_drawingml_hlink, 
+ OOXML_ELEMENT_drawingml_folHlink, 
+ OOXML_ELEMENT_drawingml_extLst, 
+ OOXML_ELEMENT_drawingml_custClr, 
+ OOXML_ELEMENT_drawingml_latin, 
+ OOXML_ELEMENT_drawingml_ea, 
+ OOXML_ELEMENT_drawingml_cs, 
+ OOXML_ELEMENT_drawingml_font, 
+ OOXML_ELEMENT_drawingml_scene3d, 
+ OOXML_ELEMENT_drawingml_sp3d, 
+ OOXML_ELEMENT_drawingml_majorFont, 
+ OOXML_ELEMENT_drawingml_minorFont, 
+ OOXML_ELEMENT_drawingml_ln, 
+ OOXML_ELEMENT_drawingml_effectStyle, 
+ OOXML_ELEMENT_drawingml_fillStyleLst, 
+ OOXML_ELEMENT_drawingml_lnStyleLst, 
+ OOXML_ELEMENT_drawingml_effectStyleLst, 
+ OOXML_ELEMENT_drawingml_bgFillStyleLst, 
+ OOXML_ELEMENT_drawingml_clrScheme, 
+ OOXML_ELEMENT_drawingml_fontScheme, 
+ OOXML_ELEMENT_drawingml_fmtScheme, 
+ OOXML_ELEMENT_drawingml_uLnTx, 
+ OOXML_ELEMENT_drawingml_uLn, 
+ OOXML_ELEMENT_drawingml_uFillTx, 
+ OOXML_ELEMENT_drawingml_uFill, 
+ OOXML_ELEMENT_drawingml_highlight, 
+ OOXML_ELEMENT_drawingml_sym, 
+ OOXML_ELEMENT_drawingml_hlinkClick, 
+ OOXML_ELEMENT_drawingml_hlinkMouseOver, 
+ OOXML_ELEMENT_drawingml_clrFrom, 
  OOXML_ELEMENT_drawingml_clrTo, 
  OOXML_ELEMENT_drawingml_fillToRect, 
  OOXML_ELEMENT_drawingml_lin, 
@@ -83,7 +122,6 @@
  OOXML_ELEMENT_drawingml_hsl, 
  OOXML_ELEMENT_drawingml_lum, 
  OOXML_ELEMENT_drawingml_tint, 
- OOXML_ELEMENT_drawingml_extLst, 
  OOXML_ELEMENT_drawingml_blip, 
  OOXML_ELEMENT_drawingml_srcRect, 
  OOXML_ELEMENT_drawingml_fgClr, 
@@ -109,9 +147,6 @@
  OOXML_ELEMENT_drawingml_xfrm, 
  OOXML_ELEMENT_drawingml_effectLst, 
  OOXML_ELEMENT_drawingml_effectDag, 
- OOXML_ELEMENT_drawingml_ln, 
- OOXML_ELEMENT_drawingml_scene3d, 
- OOXML_ELEMENT_drawingml_sp3d, 
  OOXML_ELEMENT_drawingml_shade, 
  OOXML_ELEMENT_drawingml_comp, 
  OOXML_ELEMENT_drawingml_inv, 
@@ -150,7 +185,6 @@
  OOXML_ELEMENT_drawingml_schemeClr, 
  OOXML_ELEMENT_drawingml_prstClr, 
  OOXML_ELEMENT_drawingml_snd, 
- OOXML_ELEMENT_drawingml_hlinkClick, 
  OOXML_ELEMENT_drawingml_hlinkHover, 
  OOXML_ELEMENT_drawingml_spLocks, 
  OOXML_ELEMENT_drawingml_cxnSpLocks, 
@@ -933,7 +967,32 @@
  OOXML_ELEMENT_wordprocessingml_document, 
  OOXML_ELEMENT_wordprocessingml_glossaryDocument, 
  
-      OOXML_ATTRIBUTE_drawingml_thresh, 
+      OOXML_ATTRIBUTE_drawingml_name, 
+OOXML_ATTRIBUTE_drawingml_script, 
+OOXML_ATTRIBUTE_drawingml_typeface, 
+OOXML_ATTRIBUTE_drawingml_panose, 
+OOXML_ATTRIBUTE_drawingml_pitchFamily, 
+OOXML_ATTRIBUTE_drawingml_charset, 
+OOXML_ATTRIBUTE_drawingml_kumimoji, 
+OOXML_ATTRIBUTE_drawingml_lang, 
+OOXML_ATTRIBUTE_drawingml_altLang, 
+OOXML_ATTRIBUTE_drawingml_sz, 
+OOXML_ATTRIBUTE_drawingml_b, 
+OOXML_ATTRIBUTE_drawingml_i, 
+OOXML_ATTRIBUTE_drawingml_u, 
+OOXML_ATTRIBUTE_drawingml_strike, 
+OOXML_ATTRIBUTE_drawingml_kern, 
+OOXML_ATTRIBUTE_drawingml_cap, 
+OOXML_ATTRIBUTE_drawingml_spc, 
+OOXML_ATTRIBUTE_drawingml_normalizeH, 
+OOXML_ATTRIBUTE_drawingml_baseline, 
+OOXML_ATTRIBUTE_drawingml_noProof, 
+OOXML_ATTRIBUTE_drawingml_dirty, 
+OOXML_ATTRIBUTE_drawingml_err, 
+OOXML_ATTRIBUTE_drawingml_smtClean, 
+OOXML_ATTRIBUTE_drawingml_smtId, 
+OOXML_ATTRIBUTE_drawingml_bmk, 
+OOXML_ATTRIBUTE_drawingml_thresh, 
 OOXML_ATTRIBUTE_drawingml_amt, 
 OOXML_ATTRIBUTE_drawingml_rad, 
 OOXML_ATTRIBUTE_drawingml_a, 
@@ -971,7 +1030,6 @@
 OOXML_ATTRIBUTE_drawingml_blend, 
 OOXML_ATTRIBUTE_drawingml_ref, 
 OOXML_ATTRIBUTE_drawingml_type, 
-OOXML_ATTRIBUTE_drawingml_name, 
 OOXML_ATTRIBUTE_drawingml_bwMode, 
 OOXML_ATTRIBUTE_drawingml_uri, 
 OOXML_ATTRIBUTE_drawingml_val, 
@@ -983,7 +1041,6 @@
 OOXML_ATTRIBUTE_drawingml_cy, 
 OOXML_ATTRIBUTE_drawingml_r, 
 OOXML_ATTRIBUTE_drawingml_g, 
-OOXML_ATTRIBUTE_drawingml_b, 
 OOXML_ATTRIBUTE_drawingml_lastClr, 
 OOXML_ATTRIBUTE_drawingml_rot, 
 OOXML_ATTRIBUTE_drawingml_flipH, 
--- writerfilter/source/ooxml/OOXMLvalues.cxx	25 May 2007 09:25:47 -0000	1.31
+++ writerfilter/source/ooxml/OOXMLvalues.cxx	18 Jul 2007 12:54:10 -0000	1.31.4.4
@@ -51,6 +51,43 @@
 using namespace ::std;
       
       
+rtl::OUString OOXMLValueString_major(RTL_CONSTASCII_USTRINGPARAM("major"));
+rtl::OUString OOXMLValueString_minor(RTL_CONSTASCII_USTRINGPARAM("minor"));
+rtl::OUString OOXMLValueString_none(RTL_CONSTASCII_USTRINGPARAM("none"));
+rtl::OUString OOXMLValueString_dk1(RTL_CONSTASCII_USTRINGPARAM("dk1"));
+rtl::OUString OOXMLValueString_lt1(RTL_CONSTASCII_USTRINGPARAM("lt1"));
+rtl::OUString OOXMLValueString_dk2(RTL_CONSTASCII_USTRINGPARAM("dk2"));
+rtl::OUString OOXMLValueString_lt2(RTL_CONSTASCII_USTRINGPARAM("lt2"));
+rtl::OUString OOXMLValueString_accent1(RTL_CONSTASCII_USTRINGPARAM("accent1"));
+rtl::OUString OOXMLValueString_accent2(RTL_CONSTASCII_USTRINGPARAM("accent2"));
+rtl::OUString OOXMLValueString_accent3(RTL_CONSTASCII_USTRINGPARAM("accent3"));
+rtl::OUString OOXMLValueString_accent4(RTL_CONSTASCII_USTRINGPARAM("accent4"));
+rtl::OUString OOXMLValueString_accent5(RTL_CONSTASCII_USTRINGPARAM("accent5"));
+rtl::OUString OOXMLValueString_accent6(RTL_CONSTASCII_USTRINGPARAM("accent6"));
+rtl::OUString OOXMLValueString_hlink(RTL_CONSTASCII_USTRINGPARAM("hlink"));
+rtl::OUString OOXMLValueString_folHlink(RTL_CONSTASCII_USTRINGPARAM("folHlink"));
+rtl::OUString OOXMLValueString_words(RTL_CONSTASCII_USTRINGPARAM("words"));
+rtl::OUString OOXMLValueString_sng(RTL_CONSTASCII_USTRINGPARAM("sng"));
+rtl::OUString OOXMLValueString_dbl(RTL_CONSTASCII_USTRINGPARAM("dbl"));
+rtl::OUString OOXMLValueString_heavy(RTL_CONSTASCII_USTRINGPARAM("heavy"));
+rtl::OUString OOXMLValueString_dotted(RTL_CONSTASCII_USTRINGPARAM("dotted"));
+rtl::OUString OOXMLValueString_dottedHeavy(RTL_CONSTASCII_USTRINGPARAM("dottedHeavy"));
+rtl::OUString OOXMLValueString_dash(RTL_CONSTASCII_USTRINGPARAM("dash"));
+rtl::OUString OOXMLValueString_dashHeavy(RTL_CONSTASCII_USTRINGPARAM("dashHeavy"));
+rtl::OUString OOXMLValueString_dashLong(RTL_CONSTASCII_USTRINGPARAM("dashLong"));
+rtl::OUString OOXMLValueString_dashLongHeavy(RTL_CONSTASCII_USTRINGPARAM("dashLongHeavy"));
+rtl::OUString OOXMLValueString_dotDash(RTL_CONSTASCII_USTRINGPARAM("dotDash"));
+rtl::OUString OOXMLValueString_dotDashHeavy(RTL_CONSTASCII_USTRINGPARAM("dotDashHeavy"));
+rtl::OUString OOXMLValueString_dotDotDash(RTL_CONSTASCII_USTRINGPARAM("dotDotDash"));
+rtl::OUString OOXMLValueString_dotDotDashHeavy(RTL_CONSTASCII_USTRINGPARAM("dotDotDashHeavy"));
+rtl::OUString OOXMLValueString_wavy(RTL_CONSTASCII_USTRINGPARAM("wavy"));
+rtl::OUString OOXMLValueString_wavyHeavy(RTL_CONSTASCII_USTRINGPARAM("wavyHeavy"));
+rtl::OUString OOXMLValueString_wavyDbl(RTL_CONSTASCII_USTRINGPARAM("wavyDbl"));
+rtl::OUString OOXMLValueString_noStrike(RTL_CONSTASCII_USTRINGPARAM("noStrike"));
+rtl::OUString OOXMLValueString_sngStrike(RTL_CONSTASCII_USTRINGPARAM("sngStrike"));
+rtl::OUString OOXMLValueString_dblStrike(RTL_CONSTASCII_USTRINGPARAM("dblStrike"));
+rtl::OUString OOXMLValueString_small(RTL_CONSTASCII_USTRINGPARAM("small"));
+rtl::OUString OOXMLValueString_all(RTL_CONSTASCII_USTRINGPARAM("all"));
 rtl::OUString OOXMLValueString_shdw1(RTL_CONSTASCII_USTRINGPARAM("shdw1"));
 rtl::OUString OOXMLValueString_shdw2(RTL_CONSTASCII_USTRINGPARAM("shdw2"));
 rtl::OUString OOXMLValueString_shdw3(RTL_CONSTASCII_USTRINGPARAM("shdw3"));
@@ -74,7 +111,6 @@
 rtl::OUString OOXMLValueString_shape(RTL_CONSTASCII_USTRINGPARAM("shape"));
 rtl::OUString OOXMLValueString_circle(RTL_CONSTASCII_USTRINGPARAM("circle"));
 rtl::OUString OOXMLValueString_rect(RTL_CONSTASCII_USTRINGPARAM("rect"));
-rtl::OUString OOXMLValueString_none(RTL_CONSTASCII_USTRINGPARAM("none"));
 rtl::OUString OOXMLValueString_x(RTL_CONSTASCII_USTRINGPARAM("x"));
 rtl::OUString OOXMLValueString_y(RTL_CONSTASCII_USTRINGPARAM("y"));
 rtl::OUString OOXMLValueString_xy(RTL_CONSTASCII_USTRINGPARAM("xy"));
@@ -176,19 +212,7 @@
 rtl::OUString OOXMLValueString_tx1(RTL_CONSTASCII_USTRINGPARAM("tx1"));
 rtl::OUString OOXMLValueString_bg2(RTL_CONSTASCII_USTRINGPARAM("bg2"));
 rtl::OUString OOXMLValueString_tx2(RTL_CONSTASCII_USTRINGPARAM("tx2"));
-rtl::OUString OOXMLValueString_accent1(RTL_CONSTASCII_USTRINGPARAM("accent1"));
-rtl::OUString OOXMLValueString_accent2(RTL_CONSTASCII_USTRINGPARAM("accent2"));
-rtl::OUString OOXMLValueString_accent3(RTL_CONSTASCII_USTRINGPARAM("accent3"));
-rtl::OUString OOXMLValueString_accent4(RTL_CONSTASCII_USTRINGPARAM("accent4"));
-rtl::OUString OOXMLValueString_accent5(RTL_CONSTASCII_USTRINGPARAM("accent5"));
-rtl::OUString OOXMLValueString_accent6(RTL_CONSTASCII_USTRINGPARAM("accent6"));
-rtl::OUString OOXMLValueString_hlink(RTL_CONSTASCII_USTRINGPARAM("hlink"));
-rtl::OUString OOXMLValueString_folHlink(RTL_CONSTASCII_USTRINGPARAM("folHlink"));
 rtl::OUString OOXMLValueString_phClr(RTL_CONSTASCII_USTRINGPARAM("phClr"));
-rtl::OUString OOXMLValueString_dk1(RTL_CONSTASCII_USTRINGPARAM("dk1"));
-rtl::OUString OOXMLValueString_lt1(RTL_CONSTASCII_USTRINGPARAM("lt1"));
-rtl::OUString OOXMLValueString_dk2(RTL_CONSTASCII_USTRINGPARAM("dk2"));
-rtl::OUString OOXMLValueString_lt2(RTL_CONSTASCII_USTRINGPARAM("lt2"));
 rtl::OUString OOXMLValueString_aliceBlue(RTL_CONSTASCII_USTRINGPARAM("aliceBlue"));
 rtl::OUString OOXMLValueString_antiqueWhite(RTL_CONSTASCII_USTRINGPARAM("antiqueWhite"));
 rtl::OUString OOXMLValueString_aqua(RTL_CONSTASCII_USTRINGPARAM("aqua"));
@@ -634,20 +658,11 @@
 rtl::OUString OOXMLValueString_darkGray(RTL_CONSTASCII_USTRINGPARAM("darkGray"));
 rtl::OUString OOXMLValueString_lightGray(RTL_CONSTASCII_USTRINGPARAM("lightGray"));
 rtl::OUString OOXMLValueString_single(RTL_CONSTASCII_USTRINGPARAM("single"));
-rtl::OUString OOXMLValueString_words(RTL_CONSTASCII_USTRINGPARAM("words"));
 rtl::OUString OOXMLValueString_double(RTL_CONSTASCII_USTRINGPARAM("double"));
 rtl::OUString OOXMLValueString_thick(RTL_CONSTASCII_USTRINGPARAM("thick"));
-rtl::OUString OOXMLValueString_dotted(RTL_CONSTASCII_USTRINGPARAM("dotted"));
-rtl::OUString OOXMLValueString_dottedHeavy(RTL_CONSTASCII_USTRINGPARAM("dottedHeavy"));
-rtl::OUString OOXMLValueString_dash(RTL_CONSTASCII_USTRINGPARAM("dash"));
 rtl::OUString OOXMLValueString_dashedHeavy(RTL_CONSTASCII_USTRINGPARAM("dashedHeavy"));
-rtl::OUString OOXMLValueString_dashLong(RTL_CONSTASCII_USTRINGPARAM("dashLong"));
-rtl::OUString OOXMLValueString_dashLongHeavy(RTL_CONSTASCII_USTRINGPARAM("dashLongHeavy"));
-rtl::OUString OOXMLValueString_dotDash(RTL_CONSTASCII_USTRINGPARAM("dotDash"));
 rtl::OUString OOXMLValueString_dashDotHeavy(RTL_CONSTASCII_USTRINGPARAM("dashDotHeavy"));
-rtl::OUString OOXMLValueString_dotDotDash(RTL_CONSTASCII_USTRINGPARAM("dotDotDash"));
 rtl::OUString OOXMLValueString_dashDotDotHeavy(RTL_CONSTASCII_USTRINGPARAM("dashDotDotHeavy"));
-rtl::OUString OOXMLValueString_wavyHeavy(RTL_CONSTASCII_USTRINGPARAM("wavyHeavy"));
 rtl::OUString OOXMLValueString_wavyDouble(RTL_CONSTASCII_USTRINGPARAM("wavyDouble"));
 rtl::OUString OOXMLValueString_blinkBackground(RTL_CONSTASCII_USTRINGPARAM("blinkBackground"));
 rtl::OUString OOXMLValueString_lights(RTL_CONSTASCII_USTRINGPARAM("lights"));
@@ -881,7 +896,6 @@
 rtl::OUString OOXMLValueString_num(RTL_CONSTASCII_USTRINGPARAM("num"));
 rtl::OUString OOXMLValueString_hyphen(RTL_CONSTASCII_USTRINGPARAM("hyphen"));
 rtl::OUString OOXMLValueString_underscore(RTL_CONSTASCII_USTRINGPARAM("underscore"));
-rtl::OUString OOXMLValueString_heavy(RTL_CONSTASCII_USTRINGPARAM("heavy"));
 rtl::OUString OOXMLValueString_middleDot(RTL_CONSTASCII_USTRINGPARAM("middleDot"));
 rtl::OUString OOXMLValueString_both(RTL_CONSTASCII_USTRINGPARAM("both"));
 rtl::OUString OOXMLValueString_mediumKashida(RTL_CONSTASCII_USTRINGPARAM("mediumKashida"));
@@ -1035,7 +1049,6 @@
 rtl::OUString OOXMLValueString_continuationSeparator(RTL_CONSTASCII_USTRINGPARAM("continuationSeparator"));
 rtl::OUString OOXMLValueString_continuationNotice(RTL_CONSTASCII_USTRINGPARAM("continuationNotice"));
 rtl::OUString OOXMLValueString_textWrapping(RTL_CONSTASCII_USTRINGPARAM("textWrapping"));
-rtl::OUString OOXMLValueString_all(RTL_CONSTASCII_USTRINGPARAM("all"));
 rtl::OUString OOXMLValueString_indent(RTL_CONSTASCII_USTRINGPARAM("indent"));
 rtl::OUString OOXMLValueString_spellStart(RTL_CONSTASCII_USTRINGPARAM("spellStart"));
 rtl::OUString OOXMLValueString_spellEnd(RTL_CONSTASCII_USTRINGPARAM("spellEnd"));
@@ -1193,6 +1206,54 @@
 rtl::OUString OOXMLValueString_below(RTL_CONSTASCII_USTRINGPARAM("below"));
       
 /*
+    class: OOXMLValue_drawingml_ST_StyleMatrixColumnIndex
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_FontCollectionIndex
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_ColorSchemeIndex
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_TextPoint
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_TextNonNegativePoint
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_TextFontSize
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_Panose
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_TextTypeface
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_TextLanguageID
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_TextUnderlineType
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_TextStrikeType
+*/
+    
+/*
+    class: OOXMLValue_drawingml_ST_TextCapsType
+*/
+    
+/*
     class: OOXMLValue_drawingml_ST_PresetShadowVal
 */
     
@@ -1300,6 +1361,946 @@
     class: OOXMLValue_drawingml_ST_ShapeType
 */
     
+OOXMLValue_drawingml_ST_ShapeType::OOXMLValue_drawingml_ST_ShapeType(const rtl::OUString & rValue)
+: OOXMLListValue()
+{
+  if (rValue.compareTo(OOXMLValueString_line) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_line; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_lineInv) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_lineInv; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_triangle) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_triangle; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_rtTriangle) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_rtTriangle; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_rect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_rect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_diamond) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_diamond; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_parallelogram) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_parallelogram; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_trapezoid) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_trapezoid; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_nonIsoscelesTrapezoid) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_nonIsoscelesTrapezoid; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_pentagon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_pentagon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_hexagon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_hexagon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_heptagon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_heptagon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_octagon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_octagon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_decagon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_decagon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_dodecagon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_dodecagon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star4) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star4; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star5) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star5; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star6) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star6; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star7) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star7; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star8) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star8; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star10) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star10; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star12) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star12; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star16) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star16; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star24) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star24; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_star32) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_star32; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_roundRect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_roundRect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_round1Rect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_round1Rect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_round2SameRect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_round2SameRect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_round2DiagRect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_round2DiagRect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_snipRoundRect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_snipRoundRect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_snip1Rect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_snip1Rect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_snip2SameRect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_snip2SameRect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_snip2DiagRect) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_snip2DiagRect; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_plaque) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_plaque; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_ellipse) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_ellipse; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_teardrop) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_teardrop; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_homePlate) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_homePlate; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_chevron) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_chevron; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_pieWedge) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_pieWedge; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_pie) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_pie; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_blockArc) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_blockArc; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_donut) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_donut; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_noSmoking) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_noSmoking; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_rightArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_rightArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_upArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_upArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_downArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_downArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_stripedRightArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_stripedRightArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_notchedRightArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_notchedRightArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bentUpArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bentUpArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftRightArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftRightArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_upDownArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_upDownArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftUpArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftUpArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftRightUpArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftRightUpArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_quadArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_quadArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftArrowCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftArrowCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_rightArrowCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_rightArrowCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_upArrowCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_upArrowCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_downArrowCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_downArrowCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftRightArrowCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftRightArrowCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_upDownArrowCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_upDownArrowCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_quadArrowCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_quadArrowCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bentArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bentArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_uturnArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_uturnArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_circularArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_circularArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftCircularArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftCircularArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftRightCircularArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftRightCircularArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_curvedRightArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_curvedRightArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_curvedLeftArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_curvedLeftArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_curvedUpArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_curvedUpArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_curvedDownArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_curvedDownArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_swooshArrow) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_swooshArrow; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_cube) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_cube; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_can) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_can; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_lightningBolt) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_lightningBolt; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_heart) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_heart; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_sun) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_sun; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_moon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_moon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_smileyFace) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_smileyFace; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_irregularSeal1) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_irregularSeal1; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_irregularSeal2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_irregularSeal2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_foldedCorner) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_foldedCorner; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bevel) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bevel; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_frame) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_frame; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_halfFrame) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_halfFrame; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_corner) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_corner; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_diagStripe) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_diagStripe; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_chord) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_chord; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_arc) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_arc; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftBracket) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftBracket; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_rightBracket) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_rightBracket; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftBrace) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftBrace; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_rightBrace) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_rightBrace; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bracketPair) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bracketPair; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bracePair) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bracePair; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_straightConnector1) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_straightConnector1; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bentConnector2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bentConnector2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bentConnector3) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bentConnector3; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bentConnector4) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bentConnector4; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_bentConnector5) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_bentConnector5; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_curvedConnector2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_curvedConnector2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_curvedConnector3) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_curvedConnector3; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_curvedConnector4) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_curvedConnector4; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_curvedConnector5) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_curvedConnector5; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_callout1) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_callout1; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_callout2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_callout2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_callout3) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_callout3; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_accentCallout1) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_accentCallout1; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_accentCallout2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_accentCallout2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_accentCallout3) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_accentCallout3; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_borderCallout1) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_borderCallout1; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_borderCallout2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_borderCallout2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_borderCallout3) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_borderCallout3; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_accentBorderCallout1) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_accentBorderCallout1; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_accentBorderCallout2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_accentBorderCallout2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_accentBorderCallout3) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_accentBorderCallout3; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_wedgeRectCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_wedgeRectCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_wedgeRoundRectCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_wedgeRoundRectCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_wedgeEllipseCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_wedgeEllipseCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_cloudCallout) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_cloudCallout; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_cloud) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_cloud; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_ribbon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_ribbon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_ribbon2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_ribbon2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_ellipseRibbon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_ellipseRibbon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_ellipseRibbon2) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_ellipseRibbon2; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_leftRightRibbon) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_leftRightRibbon; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_verticalScroll) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_verticalScroll; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_horizontalScroll) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_horizontalScroll; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_wave) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_wave; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_doubleWave) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_doubleWave; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_plus) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_plus; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartProcess) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartProcess; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartDecision) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartDecision; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartInputOutput) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartInputOutput; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartPredefinedProcess) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartPredefinedProcess; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartInternalStorage) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartInternalStorage; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartDocument) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartDocument; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartMultidocument) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartMultidocument; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartTerminator) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartTerminator; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartPreparation) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartPreparation; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartManualInput) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartManualInput; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartManualOperation) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartManualOperation; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartConnector) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartConnector; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartPunchedCard) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartPunchedCard; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartPunchedTape) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartPunchedTape; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartSummingJunction) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartSummingJunction; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartOr) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartOr; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartCollate) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartCollate; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartSort) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartSort; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartExtract) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartExtract; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartMerge) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartMerge; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartOfflineStorage) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartOfflineStorage; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartOnlineStorage) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartOnlineStorage; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartMagneticTape) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartMagneticTape; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartMagneticDisk) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartMagneticDisk; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartMagneticDrum) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartMagneticDrum; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartDisplay) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartDisplay; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartDelay) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartDelay; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartAlternateProcess) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartAlternateProcess; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_flowChartOffpageConnector) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_flowChartOffpageConnector; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonBlank) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonBlank; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonHome) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonHome; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonHelp) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonHelp; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonInformation) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonInformation; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonForwardNext) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonForwardNext; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonBackPrevious) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonBackPrevious; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonEnd) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonEnd; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonBeginning) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonBeginning; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonReturn) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonReturn; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonDocument) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonDocument; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonSound) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonSound; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_actionButtonMovie) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_actionButtonMovie; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_gear6) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_gear6; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_gear9) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_gear9; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_funnel) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_funnel; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_mathPlus) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_mathPlus; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_mathMinus) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_mathMinus; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_mathMultiply) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_mathMultiply; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_mathDivide) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_mathDivide; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_mathEqual) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_mathEqual; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_mathNotEqual) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_mathNotEqual; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_cornerTabs) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_cornerTabs; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_squareTabs) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_squareTabs; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_plaqueTabs) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_plaqueTabs; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_chartX) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_chartX; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_chartStar) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_chartStar; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_chartPlus) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_ShapeType_chartPlus; 
+        return; 
+    }
+}
+
 /*
     class: OOXMLValue_drawingml_ST_TextShapeType
 */
@@ -3312,6 +4313,26 @@
     class: OOXMLValue_wordprocessingml_ST_FldCharType
 */
     
+OOXMLValue_wordprocessingml_ST_FldCharType::OOXMLValue_wordprocessingml_ST_FldCharType(const rtl::OUString & rValue)
+: OOXMLListValue()
+{
+  if (rValue.compareTo(OOXMLValueString_begin) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_FldCharType_begin; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_separate) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_FldCharType_separate; 
+        return; 
+    }
+  if (rValue.compareTo(OOXMLValueString_end) == 0)
+    {
+        mnValue = NS_ooxml::LN_Value_ST_FldCharType_end; 
+        return; 
+    }
+}
+
 /*
     class: OOXMLValue_wordprocessingml_ST_InfoTextType
 */
--- writerfilter/source/ooxml/TokenMap.cxx	11 Apr 2007 10:49:11 -0000	1.3
+++ writerfilter/source/ooxml/TokenMap.cxx	18 Jul 2007 13:00:02 -0000	1.3.4.3
@@ -38,6 +38,8 @@
 #include "gperfelements.hxx"
 #include "gperfattributes.hxx"
 
+//#define DEBUG_TOKENMAP
+
 namespace ooxml 
 {
 using namespace ::std;
@@ -64,10 +66,12 @@
 
             if (pToken != NULL)
                 nResult = pToken->nToken;
+#ifdef DEBUG_TOKENMAP
             else
                 clog << "Token not found:" 
                      << OUStringToOString
                     (rTokenString, RTL_TEXTENCODING_ASCII_US).getStr() << endl;
+#endif
         }
         break;
     case TokenMap::ATTRIBUTE:
@@ -78,10 +82,12 @@
 
             if (pToken != NULL)
                 nResult = pToken->nToken;
+#ifdef DEBUG_TOKENMAP
             else
                 clog << "Token not found:" 
                      << OUStringToOString
                     (rTokenString, RTL_TEXTENCODING_ASCII_US).getStr() << endl;
+#endif
         }
         break;
     default:
--- writerfilter/source/ooxml/TokenMapInit.cxx	25 May 2007 09:25:47 -0000	1.31
+++ writerfilter/source/ooxml/TokenMapInit.cxx	18 Jul 2007 11:45:28 -0000	1.31.4.2
@@ -52,6 +52,201 @@
       
       
     {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:dk1"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_dk1] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:lt1"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_lt1] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:dk2"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_dk2] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:lt2"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_lt2] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:accent1"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_accent1] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:accent2"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_accent2] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:accent3"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_accent3] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:accent4"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_accent4] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:accent5"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_accent5] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:accent6"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_accent6] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:hlink"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_hlink] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:folHlink"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_folHlink] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:extLst"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_extLst] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:custClr"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_custClr] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:latin"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_latin] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:ea"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_ea] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:cs"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_cs] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:font"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_font] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:scene3d"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_scene3d] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:sp3d"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_sp3d] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:majorFont"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_majorFont] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:minorFont"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_minorFont] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:ln"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_ln] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:effectStyle"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_effectStyle] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:fillStyleLst"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_fillStyleLst] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:lnStyleLst"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_lnStyleLst] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:effectStyleLst"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_effectStyleLst] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:bgFillStyleLst"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_bgFillStyleLst] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:clrScheme"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_clrScheme] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:fontScheme"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_fontScheme] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:fmtScheme"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_fmtScheme] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:uLnTx"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_uLnTx] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:uLn"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_uLn] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:uFillTx"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_uFillTx] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:uFill"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_uFill] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:highlight"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_highlight] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:sym"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_sym] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:hlinkClick"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_hlinkClick] = aStr;
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:hlinkMouseOver"));
+        mElementReverseMap[OOXML_ELEMENT_drawingml_hlinkMouseOver] = aStr;
+    } 
+
+    {
         rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:clrFrom"));
         mElementReverseMap[OOXML_ELEMENT_drawingml_clrFrom] = aStr;
     } 
@@ -192,11 +387,6 @@
     } 
 
     {
-        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:extLst"));
-        mElementReverseMap[OOXML_ELEMENT_drawingml_extLst] = aStr;
-    } 
-
-    {
         rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:blip"));
         mElementReverseMap[OOXML_ELEMENT_drawingml_blip] = aStr;
     } 
@@ -322,21 +512,6 @@
     } 
 
     {
-        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:ln"));
-        mElementReverseMap[OOXML_ELEMENT_drawingml_ln] = aStr;
-    } 
-
-    {
-        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:scene3d"));
-        mElementReverseMap[OOXML_ELEMENT_drawingml_scene3d] = aStr;
-    } 
-
-    {
-        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:sp3d"));
-        mElementReverseMap[OOXML_ELEMENT_drawingml_sp3d] = aStr;
-    } 
-
-    {
         rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:shade"));
         mElementReverseMap[OOXML_ELEMENT_drawingml_shade] = aStr;
     } 
@@ -527,11 +702,6 @@
     } 
 
     {
-        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:hlinkClick"));
-        mElementReverseMap[OOXML_ELEMENT_drawingml_hlinkClick] = aStr;
-    } 
-
-    {
         rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:hlinkHover"));
         mElementReverseMap[OOXML_ELEMENT_drawingml_hlinkHover] = aStr;
     } 
@@ -4438,6 +4608,131 @@
 
       
     {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:name"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_name] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:script"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_script] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:typeface"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_typeface] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:panose"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_panose] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:pitchFamily"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_pitchFamily] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:charset"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_charset] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:kumimoji"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_kumimoji] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:lang"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_lang] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:altLang"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_altLang] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:sz"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_sz] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:b"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_b] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:i"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_i] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:u"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_u] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:strike"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_strike] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:kern"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_kern] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:cap"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_cap] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:spc"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_spc] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:normalizeH"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_normalizeH] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:baseline"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_baseline] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:noProof"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_noProof] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:dirty"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_dirty] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:err"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_err] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:smtClean"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_smtClean] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:smtId"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_smtId] = aStr;        
+    } 
+
+    {
+        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:bmk"));
+        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_bmk] = aStr;        
+    } 
+
+    {
         rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:thresh"));
         mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_thresh] = aStr;        
     } 
@@ -4628,11 +4923,6 @@
     } 
 
     {
-        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:name"));
-        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_name] = aStr;        
-    } 
-
-    {
         rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:bwMode"));
         mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_bwMode] = aStr;        
     } 
@@ -4688,11 +4978,6 @@
     } 
 
     {
-        rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:b"));
-        mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_b] = aStr;        
-    } 
-
-    {
         rtl::OUString aStr(RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main:lastClr"));
         mAttributeReverseMap[OOXML_ATTRIBUTE_drawingml_lastClr] = aStr;        
     } 
--- writerfilter/source/ooxml/gperfattributes.hxx	22 May 2007 19:40:48 -0000	1.11
+++ writerfilter/source/ooxml/gperfattributes.hxx	18 Jul 2007 11:45:28 -0000	1.11.4.2
@@ -1,6 +1,6 @@
 /* C++ code produced by gperf version 3.0.2 */
 /* Command-line: gperf -t -E -S1 -LC++  */
-/* Computed positions: -k'2,55-56,62-63,65-66,72,$' */
+/* Computed positions: -k'2,55-56,58,62-63,65-66,72,$' */
 
 #if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
       && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
@@ -34,7 +34,7 @@
 
 namespace ooxml { namespace tokenmap { namespace attributes {
 struct token { const char * name; TokenEnum_t nToken; };
-/* maximum key range = 1177, duplicates = 0 */
+/* maximum key range = 1464, duplicates = 0 */
 
 class Perfect_Hash
 {
@@ -49,32 +49,32 @@
 {
   static unsigned short asso_values[] =
     {
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203,    5,   20,   65,
-        50,   45,   80,   70,    0, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203,  160,    0,   25,   40, 1203,
-        40, 1203,   30,    0, 1203,    5,   35,    0,   45,   30,
-         0,    0,  195,  150,   20,   10,   70, 1203,  165,  150,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203,  170,  375,   55,
-        15,    5,  155,  150,  200,   60, 1203,  185,   90,  270,
-        20,   20,   25,  150,   10,  130,    0,  375,  450,  180,
-       400,  270,  115, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203, 1203,
-      1203, 1203, 1203, 1203, 1203, 1203
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469,    0,   85,  200,
+         5,   15,   30,   20,    0, 1469, 1469, 1469,   10, 1469,
+      1469, 1469, 1469, 1469, 1469,  330,   30,   30,  110, 1469,
+       200, 1469,    5,   90, 1469,    5,   50,    0,    5,   55,
+       105,    0,   25,  180,  105,   95,   35,    5,  205,  125,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469,   15,  375,   50,
+        10,   10,  305,   40,  300,    5, 1469,  320,  170,  145,
+       140,   55,    0,   55,   25,  115,    0,  125,  440,  235,
+       275,  335,  115, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
+      1469, 1469, 1469, 1469, 1469, 1469
     };
   register int hval = len;
 
@@ -105,6 +105,8 @@
       case 60:
       case 59:
       case 58:
+        hval += asso_values[(unsigned char)str[57]];
+      /*FALLTHROUGH*/
       case 57:
       case 56:
         hval += asso_values[(unsigned char)str[55]];
@@ -176,394 +178,417 @@
 {
   enum
     {
-      TOTAL_KEYWORDS = 379,
+      TOTAL_KEYWORDS = 402,
       MIN_WORD_LENGTH = 3,
       MAX_WORD_LENGTH = 87,
-      MIN_HASH_VALUE = 26,
-      MAX_HASH_VALUE = 1202
+      MIN_HASH_VALUE = 5,
+      MAX_HASH_VALUE = 1468
     };
 
   static struct token wordlist[] =
     {
-      {":embed", OOXML_ATTRIBUTE__embed},
       {":pict", OOXML_ATTRIBUTE__pict},
+      {":id", OOXML_ATTRIBUTE__id},
+      {":embed", OOXML_ATTRIBUTE__embed},
       {"http://www.w3.org/XML/1998/namespace:space", OOXML_ATTRIBUTE_www_w3_org_XML_1998_namespace_space},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:t", OOXML_ATTRIBUTE_drawingml_t},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:r", OOXML_ATTRIBUTE_drawingml_r},
-      {":id", OOXML_ATTRIBUTE__id},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:i", OOXML_ATTRIBUTE_drawingml_i},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:dpi", OOXML_ATTRIBUTE_drawingml_dpi},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:dist", OOXML_ATTRIBUTE_drawingml_dist},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:d", OOXML_ATTRIBUTE_drawingml_d},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:rot", OOXML_ATTRIBUTE_drawingml_rot},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:descr", OOXML_ATTRIBUTE_drawingml_descr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:edit", OOXML_ATTRIBUTE_wordprocessingml_edit},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:id", OOXML_ATTRIBUTE_drawingml_id},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:prst", OOXML_ATTRIBUTE_drawingml_prst},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:n", OOXML_ATTRIBUTE_drawingml_n},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noRot", OOXML_ATTRIBUTE_drawingml_noRot},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:endSnd", OOXML_ATTRIBUTE_drawingml_endSnd},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noSelect", OOXML_ATTRIBUTE_drawingml_noSelect},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ed", OOXML_ATTRIBUTE_wordprocessingml_ed},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noMove", OOXML_ATTRIBUTE_drawingml_noMove},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:tooltip", OOXML_ATTRIBUTE_drawingml_tooltip},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noResize", OOXML_ATTRIBUTE_drawingml_noResize},
-      {":lo", OOXML_ATTRIBUTE__lo},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:top", OOXML_ATTRIBUTE_wordprocessingml_top},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:other", OOXML_ATTRIBUTE_wordprocessingml_other},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noGrp", OOXML_ATTRIBUTE_drawingml_noGrp},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noCrop", OOXML_ATTRIBUTE_drawingml_noCrop},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noUngrp", OOXML_ATTRIBUTE_drawingml_noUngrp},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:orient", OOXML_ATTRIBUTE_wordprocessingml_orient},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:enforcement", OOXML_ATTRIBUTE_wordprocessingml_enforcement},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:dist", OOXML_ATTRIBUTE_drawingml_dist},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defQFormat", OOXML_ATTRIBUTE_wordprocessingml_defQFormat},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:contrast", OOXML_ATTRIBUTE_drawingml_contrast},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:decorated", OOXML_ATTRIBUTE_wordprocessingml_decorated},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:a", OOXML_ATTRIBUTE_drawingml_a},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:t2", OOXML_ATTRIBUTE_wordprocessingml_t2},
+      {"http://schemas.openxmlformats.org/schemaLibrary/2006/main:uri", OOXML_ATTRIBUTE_schemaLibrary_uri},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:dir", OOXML_ATTRIBUTE_drawingml_dir},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:id", OOXML_ATTRIBUTE_drawingml_id},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:topFromText", OOXML_ATTRIBUTE_wordprocessingml_topFromText},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:edGrp", OOXML_ATTRIBUTE_wordprocessingml_edGrp},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:code", OOXML_ATTRIBUTE_wordprocessingml_code},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:dpi", OOXML_ATTRIBUTE_drawingml_dpi},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:edit", OOXML_ATTRIBUTE_wordprocessingml_edit},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:id", OOXML_ATTRIBUTE_wordprocessingml_id},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defLockedState", OOXML_ATTRIBUTE_wordprocessingml_defLockedState},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:percent", OOXML_ATTRIBUTE_wordprocessingml_percent},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:left", OOXML_ATTRIBUTE_wordprocessingml_left},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:count", OOXML_ATTRIBUTE_wordprocessingml_count},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:t2", OOXML_ATTRIBUTE_wordprocessingml_t2},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:instr", OOXML_ATTRIBUTE_wordprocessingml_instr},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:r", OOXML_ATTRIBUTE_drawingml_r},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:rad", OOXML_ATTRIBUTE_drawingml_rad},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ed", OOXML_ATTRIBUTE_wordprocessingml_ed},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:err", OOXML_ATTRIBUTE_drawingml_err},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tentative", OOXML_ATTRIBUTE_wordprocessingml_tentative},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:cap", OOXML_ATTRIBUTE_drawingml_cap},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:distance", OOXML_ATTRIBUTE_wordprocessingml_distance},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:date", OOXML_ATTRIBUTE_wordprocessingml_date},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:edGrp", OOXML_ATTRIBUTE_wordprocessingml_edGrp},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:appName", OOXML_ATTRIBUTE_wordprocessingml_appName},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:restart", OOXML_ATTRIBUTE_wordprocessingml_restart},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:top", OOXML_ATTRIBUTE_wordprocessingml_top},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:g", OOXML_ATTRIBUTE_drawingml_g},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:rot", OOXML_ATTRIBUTE_drawingml_rot},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:panose", OOXML_ATTRIBUTE_drawingml_panose},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:gdRefR", OOXML_ATTRIBUTE_drawingml_gdRefR},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dropCap", OOXML_ATTRIBUTE_wordprocessingml_dropCap},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noTextEdit", OOXML_ATTRIBUTE_drawingml_noTextEdit},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noDrilldown", OOXML_ATTRIBUTE_drawingml_noDrilldown},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:color", OOXML_ATTRIBUTE_wordprocessingml_color},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:lon", OOXML_ATTRIBUTE_drawingml_lon},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:percent", OOXML_ATTRIBUTE_wordprocessingml_percent},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:descr", OOXML_ATTRIBUTE_drawingml_descr},
+      {":dm", OOXML_ATTRIBUTE__dm},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:contrast", OOXML_ATTRIBUTE_drawingml_contrast},
       {":cs", OOXML_ATTRIBUTE__cs},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptSpinCount", OOXML_ATTRIBUTE_wordprocessingml_cryptSpinCount},
+      {":qs", OOXML_ATTRIBUTE__qs},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tplc", OOXML_ATTRIBUTE_wordprocessingml_tplc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptProviderTypeExt", OOXML_ATTRIBUTE_wordprocessingml_cryptProviderTypeExt},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptAlgorithmSid", OOXML_ATTRIBUTE_wordprocessingml_cryptAlgorithmSid},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptAlgorithmType", OOXML_ATTRIBUTE_wordprocessingml_cryptAlgorithmType},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:sat", OOXML_ATTRIBUTE_drawingml_sat},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptProviderType", OOXML_ATTRIBUTE_wordprocessingml_cryptProviderType},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptProvider", OOXML_ATTRIBUTE_wordprocessingml_cryptProvider},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:stroke", OOXML_ATTRIBUTE_drawingml_stroke},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:leader", OOXML_ATTRIBUTE_wordprocessingml_leader},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:t1", OOXML_ATTRIBUTE_wordprocessingml_t1},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:strike", OOXML_ATTRIBUTE_drawingml_strike},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:relativeTo", OOXML_ATTRIBUTE_wordprocessingml_relativeTo},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:decorated", OOXML_ATTRIBUTE_wordprocessingml_decorated},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:other", OOXML_ATTRIBUTE_wordprocessingml_other},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptProviderTypeExtSource", OOXML_ATTRIBUTE_wordprocessingml_cryptProviderTypeExtSource},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tplc", OOXML_ATTRIBUTE_wordprocessingml_tplc},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docLocation", OOXML_ATTRIBUTE_wordprocessingml_docLocation},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tooltip", OOXML_ATTRIBUTE_wordprocessingml_tooltip},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:start", OOXML_ATTRIBUTE_wordprocessingml_start},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:endPos", OOXML_ATTRIBUTE_drawingml_endPos},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:tgtFrame", OOXML_ATTRIBUTE_drawingml_tgtFrame},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidP", OOXML_ATTRIBUTE_wordprocessingml_rsidP},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:ref", OOXML_ATTRIBUTE_drawingml_ref},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptProvider", OOXML_ATTRIBUTE_wordprocessingml_cryptProvider},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:gdRefAng", OOXML_ATTRIBUTE_drawingml_gdRefAng},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sep", OOXML_ATTRIBUTE_wordprocessingml_sep},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:line", OOXML_ATTRIBUTE_wordprocessingml_line},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:code", OOXML_ATTRIBUTE_wordprocessingml_code},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:salt", OOXML_ATTRIBUTE_wordprocessingml_salt},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:uri", OOXML_ATTRIBUTE_drawingml_uri},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:amt", OOXML_ATTRIBUTE_drawingml_amt},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptSpinCount", OOXML_ATTRIBUTE_wordprocessingml_cryptSpinCount},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:start", OOXML_ATTRIBUTE_wordprocessingml_start},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:spc", OOXML_ATTRIBUTE_drawingml_spc},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defLockedState", OOXML_ATTRIBUTE_wordprocessingml_defLockedState},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ascii", OOXML_ATTRIBUTE_wordprocessingml_ascii},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:pos", OOXML_ATTRIBUTE_drawingml_pos},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:l", OOXML_ATTRIBUTE_drawingml_l},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptAlgorithmType", OOXML_ATTRIBUTE_wordprocessingml_cryptAlgorithmType},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:endA", OOXML_ATTRIBUTE_drawingml_endA},
+      {":lo", OOXML_ATTRIBUTE__lo},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:script", OOXML_ATTRIBUTE_drawingml_script},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:name", OOXML_ATTRIBUTE_drawingml_name},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uri", OOXML_ATTRIBUTE_wordprocessingml_uri},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:asciiTheme", OOXML_ATTRIBUTE_wordprocessingml_asciiTheme},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:stroke", OOXML_ATTRIBUTE_drawingml_stroke},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lat", OOXML_ATTRIBUTE_drawingml_lat},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:default", OOXML_ATTRIBUTE_wordprocessingml_default},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:gdRefY", OOXML_ATTRIBUTE_drawingml_gdRefY},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pos", OOXML_ATTRIBUTE_wordprocessingml_pos},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:font", OOXML_ATTRIBUTE_wordprocessingml_font},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:zOrder", OOXML_ATTRIBUTE_wordprocessingml_zOrder},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptAlgorithmSid", OOXML_ATTRIBUTE_wordprocessingml_cryptAlgorithmSid},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:colFirst", OOXML_ATTRIBUTE_wordprocessingml_colFirst},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:cstate", OOXML_ATTRIBUTE_drawingml_cstate},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:rad", OOXML_ATTRIBUTE_drawingml_rad},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:name", OOXML_ATTRIBUTE_drawingml_name},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:invalidUrl", OOXML_ATTRIBUTE_drawingml_invalidUrl},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tentative", OOXML_ATTRIBUTE_wordprocessingml_tentative},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidTr", OOXML_ATTRIBUTE_wordprocessingml_rsidTr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:restart", OOXML_ATTRIBUTE_wordprocessingml_restart},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:scaled", OOXML_ATTRIBUTE_drawingml_scaled},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footer", OOXML_ATTRIBUTE_wordprocessingml_footer},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:date", OOXML_ATTRIBUTE_wordprocessingml_date},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:displayText", OOXML_ATTRIBUTE_wordprocessingml_displayText},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:ang", OOXML_ATTRIBUTE_drawingml_ang},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:colLast", OOXML_ATTRIBUTE_wordprocessingml_colLast},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:name", OOXML_ATTRIBUTE_wordprocessingml_name},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dllVersion", OOXML_ATTRIBUTE_wordprocessingml_dllVersion},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tgtFrame", OOXML_ATTRIBUTE_wordprocessingml_tgtFrame},
-      {":link", OOXML_ATTRIBUTE__link},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:relativeTo", OOXML_ATTRIBUTE_wordprocessingml_relativeTo},
-      {":qs", OOXML_ATTRIBUTE__qs},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:z", OOXML_ATTRIBUTE_drawingml_z},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:insDel", OOXML_ATTRIBUTE_wordprocessingml_insDel},
-      {":dm", OOXML_ATTRIBUTE__dm},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defSemiHidden", OOXML_ATTRIBUTE_wordprocessingml_defSemiHidden},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:minR", OOXML_ATTRIBUTE_drawingml_minR},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:left", OOXML_ATTRIBUTE_wordprocessingml_left},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:space", OOXML_ATTRIBUTE_wordprocessingml_space},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:csb0", OOXML_ATTRIBUTE_wordprocessingml_csb0},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:dz", OOXML_ATTRIBUTE_drawingml_dz},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:storeItemID", OOXML_ATTRIBUTE_wordprocessingml_storeItemID},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noChangeAspect", OOXML_ATTRIBUTE_drawingml_noChangeAspect},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noAdjustHandles", OOXML_ATTRIBUTE_drawingml_noAdjustHandles},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noSelect", OOXML_ATTRIBUTE_drawingml_noSelect},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:maxR", OOXML_ATTRIBUTE_drawingml_maxR},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:action", OOXML_ATTRIBUTE_drawingml_action},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:header", OOXML_ATTRIBUTE_wordprocessingml_header},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lastClr", OOXML_ATTRIBUTE_drawingml_lastClr},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:displayText", OOXML_ATTRIBUTE_wordprocessingml_displayText},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:line", OOXML_ATTRIBUTE_wordprocessingml_line},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:instr", OOXML_ATTRIBUTE_wordprocessingml_instr},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noGrp", OOXML_ATTRIBUTE_drawingml_noGrp},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noCrop", OOXML_ATTRIBUTE_drawingml_noCrop},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidR", OOXML_ATTRIBUTE_wordprocessingml_rsidR},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gutter", OOXML_ATTRIBUTE_wordprocessingml_gutter},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidRPr", OOXML_ATTRIBUTE_wordprocessingml_rsidRPr},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noTextEdit", OOXML_ATTRIBUTE_drawingml_noTextEdit},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:z", OOXML_ATTRIBUTE_drawingml_z},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:tooltip", OOXML_ATTRIBUTE_drawingml_tooltip},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noResize", OOXML_ATTRIBUTE_drawingml_noResize},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptAlgorithmClass", OOXML_ATTRIBUTE_wordprocessingml_cryptAlgorithmClass},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:color", OOXML_ATTRIBUTE_wordprocessingml_color},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:caption", OOXML_ATTRIBUTE_wordprocessingml_caption},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:dz", OOXML_ATTRIBUTE_drawingml_dz},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:zOrder", OOXML_ATTRIBUTE_wordprocessingml_zOrder},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent6", OOXML_ATTRIBUTE_wordprocessingml_accent6},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent2", OOXML_ATTRIBUTE_wordprocessingml_accent2},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lineRule", OOXML_ATTRIBUTE_wordprocessingml_lineRule},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:u", OOXML_ATTRIBUTE_drawingml_u},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defQFormat", OOXML_ATTRIBUTE_wordprocessingml_defQFormat},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:leader", OOXML_ATTRIBUTE_wordprocessingml_leader},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tooltip", OOXML_ATTRIBUTE_wordprocessingml_tooltip},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noRot", OOXML_ATTRIBUTE_drawingml_noRot},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:orient", OOXML_ATTRIBUTE_wordprocessingml_orient},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent3", OOXML_ATTRIBUTE_wordprocessingml_accent3},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lastValue", OOXML_ATTRIBUTE_wordprocessingml_lastValue},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:enforcement", OOXML_ATTRIBUTE_wordprocessingml_enforcement},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent5", OOXML_ATTRIBUTE_wordprocessingml_accent5},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noMove", OOXML_ATTRIBUTE_drawingml_noMove},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:tgtFrame", OOXML_ATTRIBUTE_drawingml_tgtFrame},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lang", OOXML_ATTRIBUTE_drawingml_lang},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:gdRefX", OOXML_ATTRIBUTE_drawingml_gdRefX},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:count", OOXML_ATTRIBUTE_wordprocessingml_count},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent4", OOXML_ATTRIBUTE_wordprocessingml_accent4},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:actualPg", OOXML_ATTRIBUTE_wordprocessingml_actualPg},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usb2", OOXML_ATTRIBUTE_wordprocessingml_usb2},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:n", OOXML_ATTRIBUTE_drawingml_n},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:altLang", OOXML_ATTRIBUTE_drawingml_altLang},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customStyle", OOXML_ATTRIBUTE_wordprocessingml_customStyle},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wrap", OOXML_ATTRIBUTE_wordprocessingml_wrap},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:styleId", OOXML_ATTRIBUTE_wordprocessingml_styleId},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:lat", OOXML_ATTRIBUTE_drawingml_lat},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:wR", OOXML_ATTRIBUTE_drawingml_wR},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:recommended", OOXML_ATTRIBUTE_wordprocessingml_recommended},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:stPos", OOXML_ATTRIBUTE_drawingml_stPos},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lang", OOXML_ATTRIBUTE_wordprocessingml_lang},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:idx", OOXML_ATTRIBUTE_drawingml_idx},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:initials", OOXML_ATTRIBUTE_wordprocessingml_initials},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usb3", OOXML_ATTRIBUTE_wordprocessingml_usb3},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:legacySpace", OOXML_ATTRIBUTE_wordprocessingml_legacySpace},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:stAng", OOXML_ATTRIBUTE_drawingml_stAng},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cs", OOXML_ATTRIBUTE_wordprocessingml_cs},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tgtFrame", OOXML_ATTRIBUTE_wordprocessingml_tgtFrame},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:semiHidden", OOXML_ATTRIBUTE_wordprocessingml_semiHidden},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent6", OOXML_ATTRIBUTE_wordprocessingml_accent6},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:distance", OOXML_ATTRIBUTE_wordprocessingml_distance},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:leftChars", OOXML_ATTRIBUTE_wordprocessingml_leftChars},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:flip", OOXML_ATTRIBUTE_drawingml_flip},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:preferRelativeResize", OOXML_ATTRIBUTE_drawingml_preferRelativeResize},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidTr", OOXML_ATTRIBUTE_wordprocessingml_rsidTr},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:clear", OOXML_ATTRIBUTE_wordprocessingml_clear},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:topFromText", OOXML_ATTRIBUTE_wordprocessingml_topFromText},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:algIdExt", OOXML_ATTRIBUTE_wordprocessingml_algIdExt},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:multiLine", OOXML_ATTRIBUTE_wordprocessingml_multiLine},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:original", OOXML_ATTRIBUTE_wordprocessingml_original},
+      {":blip", OOXML_ATTRIBUTE__blip},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:t", OOXML_ATTRIBUTE_wordprocessingDrawing_t},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hint", OOXML_ATTRIBUTE_wordprocessingml_hint},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:lastClr", OOXML_ATTRIBUTE_drawingml_lastClr},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:type", OOXML_ATTRIBUTE_drawingml_type},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:flipH", OOXML_ATTRIBUTE_drawingml_flipH},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:styleId", OOXML_ATTRIBUTE_wordprocessingml_styleId},
       {"http://schemas.openxmlformats.org/officeDocument/2006/relationships:id", OOXML_ATTRIBUTE_relationships_id},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:algn", OOXML_ATTRIBUTE_drawingml_algn},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:stAng", OOXML_ATTRIBUTE_drawingml_stAng},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:hidden", OOXML_ATTRIBUTE_drawingml_hidden},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:right", OOXML_ATTRIBUTE_wordprocessingml_right},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:colFirst", OOXML_ATTRIBUTE_wordprocessingml_colFirst},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:l", OOXML_ATTRIBUTE_drawingml_l},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noUngrp", OOXML_ATTRIBUTE_drawingml_noUngrp},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:ref", OOXML_ATTRIBUTE_drawingml_ref},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:namespaceuri", OOXML_ATTRIBUTE_wordprocessingml_namespaceuri},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:url", OOXML_ATTRIBUTE_wordprocessingml_url},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:endSnd", OOXML_ATTRIBUTE_drawingml_endSnd},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:sz", OOXML_ATTRIBUTE_drawingml_sz},
       {"http://schemas.openxmlformats.org/officeDocument/2006/relationships:embed", OOXML_ATTRIBUTE_relationships_embed},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:initials", OOXML_ATTRIBUTE_wordprocessingml_initials},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:char", OOXML_ATTRIBUTE_wordprocessingml_char},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:stA", OOXML_ATTRIBUTE_drawingml_stA},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defUnhideWhenUsed", OOXML_ATTRIBUTE_wordprocessingml_defUnhideWhenUsed},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:algIdExt", OOXML_ATTRIBUTE_wordprocessingml_algIdExt},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:type", OOXML_ATTRIBUTE_wordprocessingml_type},
-      {"http://schemas.openxmlformats.org/schemaLibrary/2006/main:uri", OOXML_ATTRIBUTE_schemaLibrary_uri},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:colLast", OOXML_ATTRIBUTE_wordprocessingml_colLast},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rightFromText", OOXML_ATTRIBUTE_wordprocessingml_rightFromText},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:g", OOXML_ATTRIBUTE_drawingml_g},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:sat", OOXML_ATTRIBUTE_drawingml_sat},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidDel", OOXML_ATTRIBUTE_wordprocessingml_rsidDel},
-      {":href", OOXML_ATTRIBUTE__href},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:fill", OOXML_ATTRIBUTE_drawingml_fill},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cryptAlgorithmClass", OOXML_ATTRIBUTE_wordprocessingml_cryptAlgorithmClass},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent3", OOXML_ATTRIBUTE_wordprocessingml_accent3},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:salt", OOXML_ATTRIBUTE_wordprocessingml_salt},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent2", OOXML_ATTRIBUTE_wordprocessingml_accent2},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:flipV", OOXML_ATTRIBUTE_drawingml_flipV},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:gdRefY", OOXML_ATTRIBUTE_drawingml_gdRefY},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:caption", OOXML_ATTRIBUTE_wordprocessingml_caption},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:scaled", OOXML_ATTRIBUTE_drawingml_scaled},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:hR", OOXML_ATTRIBUTE_drawingml_hR},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:edited", OOXML_ATTRIBUTE_wordprocessingDrawing_edited},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:allowOverlap", OOXML_ATTRIBUTE_wordprocessingDrawing_allowOverlap},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:dirty", OOXML_ATTRIBUTE_drawingml_dirty},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:leftChars", OOXML_ATTRIBUTE_wordprocessingml_leftChars},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:right", OOXML_ATTRIBUTE_wordprocessingml_right},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:type", OOXML_ATTRIBUTE_drawingml_type},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidSect", OOXML_ATTRIBUTE_wordprocessingml_rsidSect},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cs", OOXML_ATTRIBUTE_wordprocessingml_cs},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:csb1", OOXML_ATTRIBUTE_wordprocessingml_csb1},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:locked", OOXML_ATTRIBUTE_wordprocessingml_locked},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent1", OOXML_ATTRIBUTE_wordprocessingml_accent1},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:gdRefX", OOXML_ATTRIBUTE_drawingml_gdRefX},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent5", OOXML_ATTRIBUTE_wordprocessingml_accent5},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:a", OOXML_ATTRIBUTE_drawingml_a},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:csb0", OOXML_ATTRIBUTE_wordprocessingml_csb0},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:fadeDir", OOXML_ATTRIBUTE_drawingml_fadeDir},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:ang", OOXML_ATTRIBUTE_drawingml_ang},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:grow", OOXML_ATTRIBUTE_drawingml_grow},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ilvl", OOXML_ATTRIBUTE_wordprocessingml_ilvl},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent4", OOXML_ATTRIBUTE_wordprocessingml_accent4},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:original", OOXML_ATTRIBUTE_wordprocessingml_original},
-      {":blip", OOXML_ATTRIBUTE__blip},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:clear", OOXML_ATTRIBUTE_wordprocessingml_clear},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:legacySpace", OOXML_ATTRIBUTE_wordprocessingml_legacySpace},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lastValue", OOXML_ATTRIBUTE_wordprocessingml_lastValue},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:recommended", OOXML_ATTRIBUTE_wordprocessingml_recommended},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:w", OOXML_ATTRIBUTE_drawingml_w},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:first", OOXML_ATTRIBUTE_wordprocessingml_first},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:legacyIndent", OOXML_ATTRIBUTE_wordprocessingml_legacyIndent},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:all", OOXML_ATTRIBUTE_wordprocessingml_all},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:gdRefR", OOXML_ATTRIBUTE_drawingml_gdRefR},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:after", OOXML_ATTRIBUTE_wordprocessingml_after},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:eastAsiaTheme", OOXML_ATTRIBUTE_wordprocessingml_eastAsiaTheme},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:firstLine", OOXML_ATTRIBUTE_wordprocessingml_firstLine},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:w", OOXML_ATTRIBUTE_wordprocessingml_w},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sz", OOXML_ATTRIBUTE_wordprocessingml_sz},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lineRule", OOXML_ATTRIBUTE_wordprocessingml_lineRule},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:linePitch", OOXML_ATTRIBUTE_wordprocessingml_linePitch},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidRPr", OOXML_ATTRIBUTE_wordprocessingml_rsidRPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:countBy", OOXML_ATTRIBUTE_wordprocessingml_countBy},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defUIPriority", OOXML_ATTRIBUTE_wordprocessingml_defUIPriority},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:element", OOXML_ATTRIBUTE_wordprocessingml_element},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:bright", OOXML_ATTRIBUTE_drawingml_bright},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noEditPoints", OOXML_ATTRIBUTE_drawingml_noEditPoints},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:shapeid", OOXML_ATTRIBUTE_wordprocessingml_shapeid},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:t", OOXML_ATTRIBUTE_wordprocessingDrawing_t},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:path", OOXML_ATTRIBUTE_drawingml_path},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:h", OOXML_ATTRIBUTE_drawingml_h},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:thresh", OOXML_ATTRIBUTE_drawingml_thresh},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fill", OOXML_ATTRIBUTE_wordprocessingml_fill},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noChangeShapeType", OOXML_ATTRIBUTE_drawingml_noChangeShapeType},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:h", OOXML_ATTRIBUTE_wordprocessingml_h},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cstheme", OOXML_ATTRIBUTE_wordprocessingml_cstheme},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:smtId", OOXML_ATTRIBUTE_drawingml_smtId},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:relativeHeight", OOXML_ATTRIBUTE_wordprocessingDrawing_relativeHeight},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:distR", OOXML_ATTRIBUTE_wordprocessingDrawing_distR},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lon", OOXML_ATTRIBUTE_drawingml_lon},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sz", OOXML_ATTRIBUTE_wordprocessingml_sz},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:distB", OOXML_ATTRIBUTE_wordprocessingDrawing_distB},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:typeface", OOXML_ATTRIBUTE_drawingml_typeface},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rightFromText", OOXML_ATTRIBUTE_wordprocessingml_rightFromText},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:endPos", OOXML_ATTRIBUTE_drawingml_endPos},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:r", OOXML_ATTRIBUTE_wordprocessingDrawing_r},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:namespaceuri", OOXML_ATTRIBUTE_wordprocessingml_namespaceuri},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:relativeHeight", OOXML_ATTRIBUTE_wordprocessingDrawing_relativeHeight},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rightChars", OOXML_ATTRIBUTE_wordprocessingml_rightChars},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:edited", OOXML_ATTRIBUTE_wordprocessingDrawing_edited},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:rotWithShape", OOXML_ATTRIBUTE_drawingml_rotWithShape},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lines", OOXML_ATTRIBUTE_wordprocessingml_lines},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:before", OOXML_ATTRIBUTE_wordprocessingml_before},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:appName", OOXML_ATTRIBUTE_wordprocessingml_appName},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:distT", OOXML_ATTRIBUTE_wordprocessingDrawing_distT},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:anchor", OOXML_ATTRIBUTE_wordprocessingml_anchor},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fmt", OOXML_ATTRIBUTE_wordprocessingml_fmt},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:charSpace", OOXML_ATTRIBUTE_wordprocessingml_charSpace},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numId", OOXML_ATTRIBUTE_wordprocessingml_numId},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:amt", OOXML_ATTRIBUTE_drawingml_amt},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:asciiTheme", OOXML_ATTRIBUTE_wordprocessingml_asciiTheme},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:uri", OOXML_ATTRIBUTE_drawingml_uri},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidRDefault", OOXML_ATTRIBUTE_wordprocessingml_rsidRDefault},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:all", OOXML_ATTRIBUTE_wordprocessingml_all},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:type", OOXML_ATTRIBUTE_wordprocessingml_type},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:charset", OOXML_ATTRIBUTE_drawingml_charset},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:header", OOXML_ATTRIBUTE_wordprocessingml_header},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:font", OOXML_ATTRIBUTE_wordprocessingml_font},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidP", OOXML_ATTRIBUTE_wordprocessingml_rsidP},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:distL", OOXML_ATTRIBUTE_wordprocessingDrawing_distL},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:heading", OOXML_ATTRIBUTE_wordprocessingml_heading},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defSemiHidden", OOXML_ATTRIBUTE_wordprocessingml_defSemiHidden},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:alignment", OOXML_ATTRIBUTE_wordprocessingml_alignment},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:distL", OOXML_ATTRIBUTE_wordprocessingDrawing_distL},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:chapStyle", OOXML_ATTRIBUTE_wordprocessingml_chapStyle},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fontSz", OOXML_ATTRIBUTE_wordprocessingml_fontSz},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uri", OOXML_ATTRIBUTE_wordprocessingml_uri},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bottomFromText", OOXML_ATTRIBUTE_wordprocessingml_bottomFromText},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:frame", OOXML_ATTRIBUTE_wordprocessingml_frame},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidRDefault", OOXML_ATTRIBUTE_wordprocessingml_rsidRDefault},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:swAng", OOXML_ATTRIBUTE_drawingml_swAng},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:prefixMappings", OOXML_ATTRIBUTE_wordprocessingml_prefixMappings},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:rev", OOXML_ATTRIBUTE_drawingml_rev},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fontKey", OOXML_ATTRIBUTE_wordprocessingml_fontKey},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vert", OOXML_ATTRIBUTE_wordprocessingml_vert},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:gdRefAng", OOXML_ATTRIBUTE_drawingml_gdRefAng},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:chapSep", OOXML_ATTRIBUTE_wordprocessingml_chapSep},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:inkAnnotations", OOXML_ATTRIBUTE_wordprocessingml_inkAnnotations},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:idx", OOXML_ATTRIBUTE_drawingml_idx},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:display", OOXML_ATTRIBUTE_wordprocessingml_display},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customStyle", OOXML_ATTRIBUTE_wordprocessingml_customStyle},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dllVersion", OOXML_ATTRIBUTE_wordprocessingml_dllVersion},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:eastAsia", OOXML_ATTRIBUTE_wordprocessingml_eastAsia},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numId", OOXML_ATTRIBUTE_wordprocessingml_numId},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:storeItemID", OOXML_ATTRIBUTE_wordprocessingml_storeItemID},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:minY", OOXML_ATTRIBUTE_drawingml_minY},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:blend", OOXML_ATTRIBUTE_drawingml_blend},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:minAng", OOXML_ATTRIBUTE_drawingml_minAng},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:blurRad", OOXML_ATTRIBUTE_drawingml_blurRad},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:qFormat", OOXML_ATTRIBUTE_wordprocessingml_qFormat},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:url", OOXML_ATTRIBUTE_wordprocessingml_url},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:afterLines", OOXML_ATTRIBUTE_wordprocessingml_afterLines},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dyaOrig", OOXML_ATTRIBUTE_wordprocessingml_dyaOrig},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeTint", OOXML_ATTRIBUTE_wordprocessingml_themeTint},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ascii", OOXML_ATTRIBUTE_wordprocessingml_ascii},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:minX", OOXML_ATTRIBUTE_drawingml_minX},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:comments", OOXML_ATTRIBUTE_wordprocessingml_comments},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:subsetted", OOXML_ATTRIBUTE_wordprocessingml_subsetted},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:after", OOXML_ATTRIBUTE_wordprocessingml_after},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:grammar", OOXML_ATTRIBUTE_wordprocessingml_grammar},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:eastAsiaTheme", OOXML_ATTRIBUTE_wordprocessingml_eastAsiaTheme},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:maxY", OOXML_ATTRIBUTE_drawingml_maxY},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bidi", OOXML_ATTRIBUTE_wordprocessingml_bidi},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:legacyIndent", OOXML_ATTRIBUTE_wordprocessingml_legacyIndent},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:unhideWhenUsed", OOXML_ATTRIBUTE_wordprocessingml_unhideWhenUsed},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footer", OOXML_ATTRIBUTE_wordprocessingml_footer},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:t1", OOXML_ATTRIBUTE_wordprocessingml_t1},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:char", OOXML_ATTRIBUTE_wordprocessingml_char},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:baseline", OOXML_ATTRIBUTE_drawingml_baseline},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hanging", OOXML_ATTRIBUTE_wordprocessingml_hanging},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numPicBulletId", OOXML_ATTRIBUTE_wordprocessingml_numPicBulletId},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:afterAutospacing", OOXML_ATTRIBUTE_wordprocessingml_afterAutospacing},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dxaOrig", OOXML_ATTRIBUTE_wordprocessingml_dxaOrig},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:num", OOXML_ATTRIBUTE_wordprocessingml_num},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usb0", OOXML_ATTRIBUTE_wordprocessingml_usb0},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:solutionID", OOXML_ATTRIBUTE_wordprocessingml_solutionID},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:hue", OOXML_ATTRIBUTE_drawingml_hue},
+      {":link", OOXML_ATTRIBUTE__link},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lines", OOXML_ATTRIBUTE_wordprocessingml_lines},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lum", OOXML_ATTRIBUTE_drawingml_lum},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:accent1", OOXML_ATTRIBUTE_wordprocessingml_accent1},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bg2", OOXML_ATTRIBUTE_wordprocessingml_bg2},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:bright", OOXML_ATTRIBUTE_drawingml_bright},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:distT", OOXML_ATTRIBUTE_wordprocessingDrawing_distT},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:stA", OOXML_ATTRIBUTE_drawingml_stA},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:first", OOXML_ATTRIBUTE_wordprocessingml_first},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:qFormat", OOXML_ATTRIBUTE_wordprocessingml_qFormat},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:algIdExtSource", OOXML_ATTRIBUTE_wordprocessingml_algIdExtSource},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidDel", OOXML_ATTRIBUTE_wordprocessingml_rsidDel},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:invalidUrl", OOXML_ATTRIBUTE_drawingml_invalidUrl},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:hidden", OOXML_ATTRIBUTE_drawingml_hidden},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:insDel", OOXML_ATTRIBUTE_wordprocessingml_insDel},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:shapeid", OOXML_ATTRIBUTE_wordprocessingml_shapeid},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:firstLine", OOXML_ATTRIBUTE_wordprocessingml_firstLine},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:kumimoji", OOXML_ATTRIBUTE_drawingml_kumimoji},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:algn", OOXML_ATTRIBUTE_drawingml_algn},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:w", OOXML_ATTRIBUTE_drawingml_w},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fmt", OOXML_ATTRIBUTE_wordprocessingml_fmt},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vert", OOXML_ATTRIBUTE_wordprocessingml_vert},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rightChars", OOXML_ATTRIBUTE_wordprocessingml_rightChars},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:rev", OOXML_ATTRIBUTE_drawingml_rev},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:flip", OOXML_ATTRIBUTE_drawingml_flip},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:normalizeH", OOXML_ATTRIBUTE_drawingml_normalizeH},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docLocation", OOXML_ATTRIBUTE_wordprocessingml_docLocation},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:fmla", OOXML_ATTRIBUTE_drawingml_fmla},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:flipH", OOXML_ATTRIBUTE_drawingml_flipH},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeTint", OOXML_ATTRIBUTE_wordprocessingml_themeTint},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noAdjustHandles", OOXML_ATTRIBUTE_drawingml_noAdjustHandles},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:prefixMappings", OOXML_ATTRIBUTE_wordprocessingml_prefixMappings},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:w", OOXML_ATTRIBUTE_wordprocessingml_w},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dyaOrig", OOXML_ATTRIBUTE_wordprocessingml_dyaOrig},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeFillTint", OOXML_ATTRIBUTE_wordprocessingml_themeFillTint},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeShade", OOXML_ATTRIBUTE_wordprocessingml_themeShade},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fldCharType", OOXML_ATTRIBUTE_wordprocessingml_fldCharType},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fldLock", OOXML_ATTRIBUTE_wordprocessingml_fldLock},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:spelling", OOXML_ATTRIBUTE_wordprocessingml_spelling},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:afterLines", OOXML_ATTRIBUTE_wordprocessingml_afterLines},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:before", OOXML_ATTRIBUTE_wordprocessingml_before},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noEditPoints", OOXML_ATTRIBUTE_drawingml_noEditPoints},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:relativeFrom", OOXML_ATTRIBUTE_wordprocessingDrawing_relativeFrom},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeColor", OOXML_ATTRIBUTE_wordprocessingml_themeColor},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:locked", OOXML_ATTRIBUTE_wordprocessingDrawing_locked},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hRule", OOXML_ATTRIBUTE_wordprocessingml_hRule},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noChangeArrowheads", OOXML_ATTRIBUTE_drawingml_noChangeArrowheads},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:nlCheck", OOXML_ATTRIBUTE_wordprocessingml_nlCheck},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:unhideWhenUsed", OOXML_ATTRIBUTE_wordprocessingml_unhideWhenUsed},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:checkStyle", OOXML_ATTRIBUTE_wordprocessingml_checkStyle},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:followedHyperlink", OOXML_ATTRIBUTE_wordprocessingml_followedHyperlink},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:eastAsia", OOXML_ATTRIBUTE_wordprocessingml_eastAsia},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:horzAnchor", OOXML_ATTRIBUTE_wordprocessingml_horzAnchor},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:minR", OOXML_ATTRIBUTE_drawingml_minR},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cstheme", OOXML_ATTRIBUTE_wordprocessingml_cstheme},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:flipV", OOXML_ATTRIBUTE_drawingml_flipV},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:frame", OOXML_ATTRIBUTE_wordprocessingml_frame},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:combine", OOXML_ATTRIBUTE_wordprocessingml_combine},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:spelling", OOXML_ATTRIBUTE_wordprocessingml_spelling},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:minAng", OOXML_ATTRIBUTE_drawingml_minAng},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uiPriority", OOXML_ATTRIBUTE_wordprocessingml_uiPriority},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:chapNum", OOXML_ATTRIBUTE_wordprocessingml_chapNum},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noProof", OOXML_ATTRIBUTE_drawingml_noProof},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hangingChars", OOXML_ATTRIBUTE_wordprocessingml_hangingChars},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:swAng", OOXML_ATTRIBUTE_drawingml_swAng},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:maxAng", OOXML_ATTRIBUTE_drawingml_maxAng},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:grow", OOXML_ATTRIBUTE_drawingml_grow},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ilvl", OOXML_ATTRIBUTE_wordprocessingml_ilvl},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hRule", OOXML_ATTRIBUTE_wordprocessingml_hRule},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vMerge", OOXML_ATTRIBUTE_wordprocessingml_vMerge},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:author", OOXML_ATTRIBUTE_wordprocessingml_author},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:display", OOXML_ATTRIBUTE_wordprocessingml_display},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:preferRelativeResize", OOXML_ATTRIBUTE_drawingml_preferRelativeResize},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:x", OOXML_ATTRIBUTE_drawingml_x},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:tx", OOXML_ATTRIBUTE_drawingml_tx},
+      {":href", OOXML_ATTRIBUTE__href},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:chapSep", OOXML_ATTRIBUTE_wordprocessingml_chapSep},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:dx", OOXML_ATTRIBUTE_drawingml_dx},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:anchor", OOXML_ATTRIBUTE_wordprocessingml_anchor},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:minX", OOXML_ATTRIBUTE_drawingml_minX},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:simplePos", OOXML_ATTRIBUTE_wordprocessingDrawing_simplePos},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:wrapText", OOXML_ATTRIBUTE_wordprocessingDrawing_wrapText},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:chapStyle", OOXML_ATTRIBUTE_wordprocessingml_chapStyle},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:x", OOXML_ATTRIBUTE_wordprocessingml_x},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:maxX", OOXML_ATTRIBUTE_drawingml_maxX},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noDrilldown", OOXML_ATTRIBUTE_drawingml_noDrilldown},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vMergeOrig", OOXML_ATTRIBUTE_wordprocessingml_vMergeOrig},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:smtClean", OOXML_ATTRIBUTE_drawingml_smtClean},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defUIPriority", OOXML_ATTRIBUTE_wordprocessingml_defUIPriority},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblpYSpec", OOXML_ATTRIBUTE_wordprocessingml_tblpYSpec},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:equalWidth", OOXML_ATTRIBUTE_wordprocessingml_equalWidth},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hSpace", OOXML_ATTRIBUTE_wordprocessingml_hSpace},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customMarkFollows", OOXML_ATTRIBUTE_wordprocessingml_customMarkFollows},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:blurRad", OOXML_ATTRIBUTE_drawingml_blurRad},
+      {"http://schemas.openxmlformats.org/schemaLibrary/2006/main:schemaLocation", OOXML_ATTRIBUTE_schemaLibrary_schemaLocation},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:csb1", OOXML_ATTRIBUTE_wordprocessingml_csb1},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:formatting", OOXML_ATTRIBUTE_wordprocessingml_formatting},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:locked", OOXML_ATTRIBUTE_wordprocessingml_locked},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:charSpace", OOXML_ATTRIBUTE_wordprocessingml_charSpace},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:rotWithShape", OOXML_ATTRIBUTE_drawingml_rotWithShape},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:h", OOXML_ATTRIBUTE_drawingml_h},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:cx", OOXML_ATTRIBUTE_drawingml_cx},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defUnhideWhenUsed", OOXML_ATTRIBUTE_wordprocessingml_defUnhideWhenUsed},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:abstractNumId", OOXML_ATTRIBUTE_wordprocessingml_abstractNumId},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:legacy", OOXML_ATTRIBUTE_wordprocessingml_legacy},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:countBy", OOXML_ATTRIBUTE_wordprocessingml_countBy},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:txBox", OOXML_ATTRIBUTE_drawingml_txBox},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:kern", OOXML_ATTRIBUTE_drawingml_kern},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:thresh", OOXML_ATTRIBUTE_drawingml_thresh},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:path", OOXML_ATTRIBUTE_drawingml_path},
+      {"http://schemas.openxmlformats.org/schemaLibrary/2006/main:manifestLocation", OOXML_ATTRIBUTE_schemaLibrary_manifestLocation},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:linePitch", OOXML_ATTRIBUTE_wordprocessingml_linePitch},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:h", OOXML_ATTRIBUTE_wordprocessingml_h},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bottomFromText", OOXML_ATTRIBUTE_wordprocessingml_bottomFromText},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:value", OOXML_ATTRIBUTE_wordprocessingml_value},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:val", OOXML_ATTRIBUTE_drawingml_val},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:null", OOXML_ATTRIBUTE_wordprocessingml_null},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:markup", OOXML_ATTRIBUTE_wordprocessingml_markup},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numFmt", OOXML_ATTRIBUTE_wordprocessingml_numFmt},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bg1", OOXML_ATTRIBUTE_wordprocessingml_bg1},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:history", OOXML_ATTRIBUTE_drawingml_history},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:val", OOXML_ATTRIBUTE_wordprocessingml_val},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblpY", OOXML_ATTRIBUTE_wordprocessingml_tblpY},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:fill", OOXML_ATTRIBUTE_drawingml_fill},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vendorID", OOXML_ATTRIBUTE_wordprocessingml_vendorID},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeFill", OOXML_ATTRIBUTE_wordprocessingml_themeFill},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bottom", OOXML_ATTRIBUTE_wordprocessingml_bottom},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:beforeAutospacing", OOXML_ATTRIBUTE_wordprocessingml_beforeAutospacing},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblpXSpec", OOXML_ATTRIBUTE_wordprocessingml_tblpXSpec},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:offsetFrom", OOXML_ATTRIBUTE_wordprocessingml_offsetFrom},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usb1", OOXML_ATTRIBUTE_wordprocessingml_usb1},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:sx", OOXML_ATTRIBUTE_drawingml_sx},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:l", OOXML_ATTRIBUTE_wordprocessingDrawing_l},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:y", OOXML_ATTRIBUTE_drawingml_y},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:ty", OOXML_ATTRIBUTE_drawingml_ty},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:afterAutospacing", OOXML_ATTRIBUTE_wordprocessingml_afterAutospacing},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vendorID", OOXML_ATTRIBUTE_wordprocessingml_vendorID},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:y", OOXML_ATTRIBUTE_wordprocessingml_y},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fill", OOXML_ATTRIBUTE_wordprocessingml_fill},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:layoutInCell", OOXML_ATTRIBUTE_wordprocessingDrawing_layoutInCell},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:bwMode", OOXML_ATTRIBUTE_drawingml_bwMode},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:dy", OOXML_ATTRIBUTE_drawingml_dy},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gutter", OOXML_ATTRIBUTE_wordprocessingml_gutter},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fontSz", OOXML_ATTRIBUTE_wordprocessingml_fontSz},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:combineBrackets", OOXML_ATTRIBUTE_wordprocessingml_combineBrackets},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:leftFromText", OOXML_ATTRIBUTE_wordprocessingml_leftFromText},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeFillTint", OOXML_ATTRIBUTE_wordprocessingml_themeFillTint},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usb0", OOXML_ATTRIBUTE_wordprocessingml_usb0},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidR", OOXML_ATTRIBUTE_wordprocessingml_rsidR},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:shadow", OOXML_ATTRIBUTE_wordprocessingml_shadow},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:bwMode", OOXML_ATTRIBUTE_drawingml_bwMode},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:y", OOXML_ATTRIBUTE_wordprocessingml_y},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:blend", OOXML_ATTRIBUTE_drawingml_blend},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dirty", OOXML_ATTRIBUTE_wordprocessingml_dirty},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:cy", OOXML_ATTRIBUTE_drawingml_cy},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vSpace", OOXML_ATTRIBUTE_wordprocessingml_vSpace},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:history", OOXML_ATTRIBUTE_wordprocessingml_history},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bidi", OOXML_ATTRIBUTE_wordprocessingml_bidi},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:wR", OOXML_ATTRIBUTE_drawingml_wR},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lang", OOXML_ATTRIBUTE_wordprocessingml_lang},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hAnsiTheme", OOXML_ATTRIBUTE_wordprocessingml_hAnsiTheme},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:l", OOXML_ATTRIBUTE_wordprocessingDrawing_l},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noChangeShapeType", OOXML_ATTRIBUTE_drawingml_noChangeShapeType},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:beforeLines", OOXML_ATTRIBUTE_wordprocessingml_beforeLines},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fontKey", OOXML_ATTRIBUTE_wordprocessingml_fontKey},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:displacedByCustomXml", OOXML_ATTRIBUTE_wordprocessingml_displacedByCustomXml},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:hue", OOXML_ATTRIBUTE_drawingml_hue},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:default", OOXML_ATTRIBUTE_wordprocessingml_default},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:wrapText", OOXML_ATTRIBUTE_wordprocessingDrawing_wrapText},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeFill", OOXML_ATTRIBUTE_wordprocessingml_themeFill},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:solutionID", OOXML_ATTRIBUTE_wordprocessingml_solutionID},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:layoutInCell", OOXML_ATTRIBUTE_wordprocessingDrawing_layoutInCell},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bg2", OOXML_ATTRIBUTE_wordprocessingml_bg2},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:null", OOXML_ATTRIBUTE_wordprocessingml_null},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:hR", OOXML_ATTRIBUTE_drawingml_hR},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:maxY", OOXML_ATTRIBUTE_drawingml_maxY},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:maxAng", OOXML_ATTRIBUTE_drawingml_maxAng},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:cy", OOXML_ATTRIBUTE_drawingml_cy},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hSpace", OOXML_ATTRIBUTE_wordprocessingml_hSpace},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:fmla", OOXML_ATTRIBUTE_drawingml_fmla},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:offsetFrom", OOXML_ATTRIBUTE_wordprocessingml_offsetFrom},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:allowOverlap", OOXML_ATTRIBUTE_wordprocessingDrawing_allowOverlap},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bg1", OOXML_ATTRIBUTE_wordprocessingml_bg1},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:legacy", OOXML_ATTRIBUTE_wordprocessingml_legacy},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:maxX", OOXML_ATTRIBUTE_drawingml_maxX},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usb3", OOXML_ATTRIBUTE_wordprocessingml_usb3},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:distR", OOXML_ATTRIBUTE_wordprocessingDrawing_distR},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:chapNum", OOXML_ATTRIBUTE_wordprocessingml_chapNum},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:anchorLock", OOXML_ATTRIBUTE_wordprocessingml_anchorLock},
-      {"http://schemas.openxmlformats.org/schemaLibrary/2006/main:schemaLocation", OOXML_ATTRIBUTE_schemaLibrary_schemaLocation},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usb2", OOXML_ATTRIBUTE_wordprocessingml_usb2},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:shadow", OOXML_ATTRIBUTE_wordprocessingml_shadow},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vertCompress", OOXML_ATTRIBUTE_wordprocessingml_vertCompress},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fullDate", OOXML_ATTRIBUTE_wordprocessingml_fullDate},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:b", OOXML_ATTRIBUTE_drawingml_b},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:behindDoc", OOXML_ATTRIBUTE_wordprocessingDrawing_behindDoc},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:checkStyle", OOXML_ATTRIBUTE_wordprocessingml_checkStyle},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:inkAnnotations", OOXML_ATTRIBUTE_wordprocessingml_inkAnnotations},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:hidden", OOXML_ATTRIBUTE_wordprocessingDrawing_hidden},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dxaOrig", OOXML_ATTRIBUTE_wordprocessingml_dxaOrig},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblpYSpec", OOXML_ATTRIBUTE_wordprocessingml_tblpYSpec},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hAnsi", OOXML_ATTRIBUTE_wordprocessingml_hAnsi},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:val", OOXML_ATTRIBUTE_math_val},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:alnAt", OOXML_ATTRIBUTE_math_alnAt},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dirty", OOXML_ATTRIBUTE_wordprocessingml_dirty},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vMerge", OOXML_ATTRIBUTE_wordprocessingml_vMerge},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:equalWidth", OOXML_ATTRIBUTE_wordprocessingml_equalWidth},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/relationships:link", OOXML_ATTRIBUTE_relationships_link},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:maxR", OOXML_ATTRIBUTE_drawingml_maxR},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblpXSpec", OOXML_ATTRIBUTE_wordprocessingml_tblpXSpec},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hAnchor", OOXML_ATTRIBUTE_wordprocessingml_hAnchor},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vertAnchor", OOXML_ATTRIBUTE_wordprocessingml_vertAnchor},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customMarkFollows", OOXML_ATTRIBUTE_wordprocessingml_customMarkFollows},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usb1", OOXML_ATTRIBUTE_wordprocessingml_usb1},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:simplePos", OOXML_ATTRIBUTE_wordprocessingDrawing_simplePos},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:useA", OOXML_ATTRIBUTE_drawingml_useA},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:sy", OOXML_ATTRIBUTE_drawingml_sy},
-      {"http://schemas.openxmlformats.org/schemaLibrary/2006/main:manifestLocation", OOXML_ATTRIBUTE_schemaLibrary_manifestLocation},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:subsetted", OOXML_ATTRIBUTE_wordprocessingml_subsetted},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:yAlign", OOXML_ATTRIBUTE_wordprocessingml_yAlign},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:num", OOXML_ATTRIBUTE_wordprocessingml_num},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:algIdExtSource", OOXML_ATTRIBUTE_wordprocessingml_algIdExtSource},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fullDate", OOXML_ATTRIBUTE_wordprocessingml_fullDate},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:relativeFrom", OOXML_ATTRIBUTE_wordprocessingDrawing_relativeFrom},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hyperlink", OOXML_ATTRIBUTE_wordprocessingml_hyperlink},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:beforeLines", OOXML_ATTRIBUTE_wordprocessingml_beforeLines},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noLabel", OOXML_ATTRIBUTE_wordprocessingml_noLabel},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:firstLineChars", OOXML_ATTRIBUTE_wordprocessingml_firstLineChars},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bottom", OOXML_ATTRIBUTE_wordprocessingml_bottom},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:sy", OOXML_ATTRIBUTE_drawingml_sy},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hAnsiTheme", OOXML_ATTRIBUTE_wordprocessingml_hAnsiTheme},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeFillShade", OOXML_ATTRIBUTE_wordprocessingml_themeFillShade},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:val", OOXML_ATTRIBUTE_drawingml_val},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblpY", OOXML_ATTRIBUTE_wordprocessingml_tblpY},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:beforeAutospacing", OOXML_ATTRIBUTE_wordprocessingml_beforeAutospacing},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:combineBrackets", OOXML_ATTRIBUTE_wordprocessingml_combineBrackets},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numFmt", OOXML_ATTRIBUTE_wordprocessingml_numFmt},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:val", OOXML_ATTRIBUTE_wordprocessingml_val},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:ky", OOXML_ATTRIBUTE_drawingml_ky},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:grammar", OOXML_ATTRIBUTE_wordprocessingml_grammar},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:multiLine", OOXML_ATTRIBUTE_wordprocessingml_multiLine},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:lum", OOXML_ATTRIBUTE_drawingml_lum},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hangingChars", OOXML_ATTRIBUTE_wordprocessingml_hangingChars},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:val", OOXML_ATTRIBUTE_math_val},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblpX", OOXML_ATTRIBUTE_wordprocessingml_tblpX},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hanging", OOXML_ATTRIBUTE_wordprocessingml_hanging},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:b", OOXML_ATTRIBUTE_drawingml_b},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vertCompress", OOXML_ATTRIBUTE_wordprocessingml_vertCompress},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:endA", OOXML_ATTRIBUTE_drawingml_endA},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:builtIn", OOXML_ATTRIBUTE_drawingml_builtIn},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vMergeOrig", OOXML_ATTRIBUTE_wordprocessingml_vMergeOrig},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hash", OOXML_ATTRIBUTE_wordprocessingml_hash},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:formatting", OOXML_ATTRIBUTE_wordprocessingml_formatting},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:author", OOXML_ATTRIBUTE_wordprocessingml_author},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uiPriority", OOXML_ATTRIBUTE_wordprocessingml_uiPriority},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:x", OOXML_ATTRIBUTE_drawingml_x},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:tx", OOXML_ATTRIBUTE_drawingml_tx},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:txBox", OOXML_ATTRIBUTE_drawingml_txBox},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:xAlign", OOXML_ATTRIBUTE_wordprocessingml_xAlign},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:highlightClick", OOXML_ATTRIBUTE_drawingml_highlightClick},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:x", OOXML_ATTRIBUTE_wordprocessingml_x},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:dx", OOXML_ATTRIBUTE_drawingml_dx},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:extrusionOk", OOXML_ATTRIBUTE_drawingml_extrusionOk},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:behindDoc", OOXML_ATTRIBUTE_wordprocessingDrawing_behindDoc},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vertAnchor", OOXML_ATTRIBUTE_wordprocessingml_vertAnchor},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:bmk", OOXML_ATTRIBUTE_drawingml_bmk},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:horzAnchor", OOXML_ATTRIBUTE_wordprocessingml_horzAnchor},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fldCharType", OOXML_ATTRIBUTE_wordprocessingml_fldCharType},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noChangeAspect", OOXML_ATTRIBUTE_drawingml_noChangeAspect},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:anchorLock", OOXML_ATTRIBUTE_wordprocessingml_anchorLock},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:kx", OOXML_ATTRIBUTE_drawingml_kx},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:firstLineChars", OOXML_ATTRIBUTE_wordprocessingml_firstLineChars},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:yAlign", OOXML_ATTRIBUTE_wordprocessingml_yAlign},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:pitchFamily", OOXML_ATTRIBUTE_drawingml_pitchFamily},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:xpath", OOXML_ATTRIBUTE_wordprocessingml_xpath},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vSpace", OOXML_ATTRIBUTE_wordprocessingml_vSpace},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:cx", OOXML_ATTRIBUTE_drawingml_cx},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:abstractNumId", OOXML_ATTRIBUTE_wordprocessingml_abstractNumId},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:useA", OOXML_ATTRIBUTE_drawingml_useA},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fldLock", OOXML_ATTRIBUTE_wordprocessingml_fldLock},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:alnAt", OOXML_ATTRIBUTE_math_alnAt},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hash", OOXML_ATTRIBUTE_wordprocessingml_hash},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:followedHyperlink", OOXML_ATTRIBUTE_wordprocessingml_followedHyperlink},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/relationships:link", OOXML_ATTRIBUTE_relationships_link},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:nlCheck", OOXML_ATTRIBUTE_wordprocessingml_nlCheck},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:ky", OOXML_ATTRIBUTE_drawingml_ky},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hyperlink", OOXML_ATTRIBUTE_wordprocessingml_hyperlink},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hAnchor", OOXML_ATTRIBUTE_wordprocessingml_hAnchor},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:b", OOXML_ATTRIBUTE_wordprocessingDrawing_b},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:extrusionOk", OOXML_ATTRIBUTE_drawingml_extrusionOk},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noChangeArrowheads", OOXML_ATTRIBUTE_drawingml_noChangeArrowheads},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vAnchor", OOXML_ATTRIBUTE_wordprocessingml_vAnchor},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:sx", OOXML_ATTRIBUTE_drawingml_sx},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:actualPg", OOXML_ATTRIBUTE_wordprocessingml_actualPg},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:kx", OOXML_ATTRIBUTE_drawingml_kx},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:value", OOXML_ATTRIBUTE_wordprocessingml_value},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:markup", OOXML_ATTRIBUTE_wordprocessingml_markup},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:b", OOXML_ATTRIBUTE_wordprocessingDrawing_b}
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:highlightClick", OOXML_ATTRIBUTE_drawingml_highlightClick}
     };
 
   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
@@ -574,708 +599,708 @@
         {
           register struct token *resword;
 
-          switch (key - 26)
+          switch (key - 5)
             {
               case 0:
                 resword = &wordlist[0];
                 goto compare;
-              case 4:
+              case 13:
                 resword = &wordlist[1];
                 goto compare;
               case 21:
                 resword = &wordlist[2];
                 goto compare;
-              case 29:
+              case 47:
                 resword = &wordlist[3];
                 goto compare;
-              case 49:
+              case 50:
                 resword = &wordlist[4];
                 goto compare;
-              case 52:
+              case 60:
                 resword = &wordlist[5];
                 goto compare;
-              case 59:
+              case 67:
                 resword = &wordlist[6];
                 goto compare;
-              case 61:
+              case 68:
                 resword = &wordlist[7];
                 goto compare;
-              case 63:
+              case 70:
                 resword = &wordlist[8];
                 goto compare;
-              case 64:
+              case 76:
                 resword = &wordlist[9];
                 goto compare;
-              case 67:
+              case 78:
                 resword = &wordlist[10];
                 goto compare;
-              case 69:
+              case 80:
                 resword = &wordlist[11];
                 goto compare;
-              case 73:
+              case 83:
                 resword = &wordlist[12];
                 goto compare;
-              case 74:
+              case 91:
                 resword = &wordlist[13];
                 goto compare;
-              case 76:
+              case 92:
                 resword = &wordlist[14];
                 goto compare;
-              case 77:
+              case 95:
                 resword = &wordlist[15];
                 goto compare;
-              case 79:
+              case 98:
                 resword = &wordlist[16];
                 goto compare;
-              case 80:
+              case 100:
                 resword = &wordlist[17];
                 goto compare;
-              case 86:
+              case 102:
                 resword = &wordlist[18];
                 goto compare;
-              case 87:
+              case 103:
                 resword = &wordlist[19];
                 goto compare;
-              case 88:
+              case 112:
                 resword = &wordlist[20];
                 goto compare;
-              case 90:
+              case 115:
                 resword = &wordlist[21];
                 goto compare;
-              case 98:
+              case 117:
                 resword = &wordlist[22];
                 goto compare;
-              case 99:
+              case 119:
                 resword = &wordlist[23];
                 goto compare;
-              case 100:
+              case 120:
                 resword = &wordlist[24];
                 goto compare;
-              case 101:
+              case 121:
                 resword = &wordlist[25];
                 goto compare;
-              case 106:
+              case 123:
                 resword = &wordlist[26];
                 goto compare;
-              case 107:
+              case 128:
                 resword = &wordlist[27];
                 goto compare;
-              case 110:
+              case 129:
                 resword = &wordlist[28];
                 goto compare;
-              case 111:
+              case 130:
                 resword = &wordlist[29];
                 goto compare;
-              case 114:
+              case 132:
                 resword = &wordlist[30];
                 goto compare;
-              case 116:
+              case 135:
                 resword = &wordlist[31];
                 goto compare;
-              case 120:
+              case 140:
                 resword = &wordlist[32];
                 goto compare;
-              case 121:
+              case 143:
                 resword = &wordlist[33];
                 goto compare;
-              case 125:
+              case 148:
                 resword = &wordlist[34];
                 goto compare;
-              case 129:
+              case 149:
                 resword = &wordlist[35];
                 goto compare;
-              case 131:
+              case 153:
                 resword = &wordlist[36];
                 goto compare;
-              case 132:
+              case 162:
                 resword = &wordlist[37];
                 goto compare;
-              case 134:
+              case 163:
                 resword = &wordlist[38];
                 goto compare;
-              case 137:
+              case 168:
                 resword = &wordlist[39];
                 goto compare;
-              case 139:
+              case 175:
                 resword = &wordlist[40];
                 goto compare;
-              case 140:
+              case 176:
                 resword = &wordlist[41];
                 goto compare;
-              case 142:
+              case 178:
                 resword = &wordlist[42];
                 goto compare;
-              case 145:
+              case 179:
                 resword = &wordlist[43];
                 goto compare;
-              case 147:
+              case 182:
                 resword = &wordlist[44];
                 goto compare;
-              case 153:
+              case 183:
                 resword = &wordlist[45];
                 goto compare;
-              case 154:
+              case 185:
                 resword = &wordlist[46];
                 goto compare;
-              case 160:
+              case 186:
                 resword = &wordlist[47];
                 goto compare;
-              case 161:
+              case 190:
                 resword = &wordlist[48];
                 goto compare;
-              case 162:
+              case 191:
                 resword = &wordlist[49];
                 goto compare;
-              case 164:
+              case 192:
                 resword = &wordlist[50];
                 goto compare;
-              case 165:
+              case 194:
                 resword = &wordlist[51];
                 goto compare;
-              case 167:
+              case 197:
                 resword = &wordlist[52];
                 goto compare;
-              case 168:
+              case 199:
                 resword = &wordlist[53];
                 goto compare;
-              case 169:
+              case 200:
                 resword = &wordlist[54];
                 goto compare;
-              case 171:
+              case 205:
                 resword = &wordlist[55];
                 goto compare;
-              case 172:
+              case 207:
                 resword = &wordlist[56];
                 goto compare;
-              case 176:
+              case 212:
                 resword = &wordlist[57];
                 goto compare;
-              case 179:
+              case 215:
                 resword = &wordlist[58];
                 goto compare;
-              case 181:
+              case 216:
                 resword = &wordlist[59];
                 goto compare;
-              case 182:
+              case 217:
                 resword = &wordlist[60];
                 goto compare;
-              case 185:
+              case 220:
                 resword = &wordlist[61];
                 goto compare;
-              case 189:
+              case 221:
                 resword = &wordlist[62];
                 goto compare;
-              case 196:
+              case 222:
                 resword = &wordlist[63];
                 goto compare;
-              case 200:
+              case 223:
                 resword = &wordlist[64];
                 goto compare;
-              case 201:
+              case 225:
                 resword = &wordlist[65];
                 goto compare;
-              case 203:
+              case 228:
                 resword = &wordlist[66];
                 goto compare;
-              case 204:
+              case 229:
                 resword = &wordlist[67];
                 goto compare;
-              case 206:
+              case 231:
                 resword = &wordlist[68];
                 goto compare;
-              case 209:
+              case 235:
                 resword = &wordlist[69];
                 goto compare;
-              case 213:
+              case 237:
                 resword = &wordlist[70];
                 goto compare;
-              case 217:
+              case 238:
                 resword = &wordlist[71];
                 goto compare;
-              case 218:
+              case 240:
                 resword = &wordlist[72];
                 goto compare;
-              case 219:
+              case 244:
                 resword = &wordlist[73];
                 goto compare;
-              case 221:
+              case 245:
                 resword = &wordlist[74];
                 goto compare;
-              case 222:
+              case 247:
                 resword = &wordlist[75];
                 goto compare;
-              case 223:
+              case 248:
                 resword = &wordlist[76];
                 goto compare;
-              case 224:
+              case 250:
                 resword = &wordlist[77];
                 goto compare;
-              case 226:
+              case 253:
                 resword = &wordlist[78];
                 goto compare;
-              case 227:
+              case 255:
                 resword = &wordlist[79];
                 goto compare;
-              case 228:
+              case 261:
                 resword = &wordlist[80];
                 goto compare;
-              case 229:
+              case 262:
                 resword = &wordlist[81];
                 goto compare;
-              case 231:
+              case 263:
                 resword = &wordlist[82];
                 goto compare;
-              case 232:
+              case 265:
                 resword = &wordlist[83];
                 goto compare;
-              case 234:
+              case 266:
                 resword = &wordlist[84];
                 goto compare;
-              case 236:
+              case 267:
                 resword = &wordlist[85];
                 goto compare;
-              case 239:
+              case 270:
                 resword = &wordlist[86];
                 goto compare;
-              case 241:
+              case 271:
                 resword = &wordlist[87];
                 goto compare;
-              case 244:
+              case 274:
                 resword = &wordlist[88];
                 goto compare;
-              case 250:
+              case 275:
                 resword = &wordlist[89];
                 goto compare;
-              case 253:
+              case 276:
                 resword = &wordlist[90];
                 goto compare;
-              case 254:
+              case 277:
                 resword = &wordlist[91];
                 goto compare;
-              case 255:
+              case 278:
                 resword = &wordlist[92];
                 goto compare;
-              case 257:
+              case 279:
                 resword = &wordlist[93];
                 goto compare;
-              case 259:
+              case 280:
                 resword = &wordlist[94];
                 goto compare;
-              case 261:
+              case 281:
                 resword = &wordlist[95];
                 goto compare;
-              case 262:
+              case 282:
                 resword = &wordlist[96];
                 goto compare;
-              case 263:
+              case 285:
                 resword = &wordlist[97];
                 goto compare;
-              case 265:
+              case 286:
                 resword = &wordlist[98];
                 goto compare;
-              case 269:
+              case 288:
                 resword = &wordlist[99];
                 goto compare;
-              case 275:
+              case 291:
                 resword = &wordlist[100];
                 goto compare;
-              case 276:
+              case 292:
                 resword = &wordlist[101];
                 goto compare;
-              case 277:
+              case 293:
                 resword = &wordlist[102];
                 goto compare;
-              case 278:
+              case 298:
                 resword = &wordlist[103];
                 goto compare;
-              case 279:
+              case 299:
                 resword = &wordlist[104];
                 goto compare;
-              case 281:
+              case 300:
                 resword = &wordlist[105];
                 goto compare;
-              case 284:
+              case 301:
                 resword = &wordlist[106];
                 goto compare;
-              case 287:
+              case 302:
                 resword = &wordlist[107];
                 goto compare;
-              case 291:
+              case 303:
                 resword = &wordlist[108];
                 goto compare;
-              case 293:
+              case 304:
                 resword = &wordlist[109];
                 goto compare;
-              case 295:
+              case 307:
                 resword = &wordlist[110];
                 goto compare;
-              case 297:
+              case 308:
                 resword = &wordlist[111];
                 goto compare;
-              case 298:
+              case 310:
                 resword = &wordlist[112];
                 goto compare;
-              case 299:
+              case 312:
                 resword = &wordlist[113];
                 goto compare;
-              case 302:
+              case 313:
                 resword = &wordlist[114];
                 goto compare;
-              case 303:
+              case 315:
                 resword = &wordlist[115];
                 goto compare;
-              case 304:
+              case 317:
                 resword = &wordlist[116];
                 goto compare;
-              case 305:
+              case 318:
                 resword = &wordlist[117];
                 goto compare;
-              case 307:
+              case 320:
                 resword = &wordlist[118];
                 goto compare;
-              case 308:
+              case 321:
                 resword = &wordlist[119];
                 goto compare;
-              case 309:
+              case 323:
                 resword = &wordlist[120];
                 goto compare;
-              case 312:
+              case 324:
                 resword = &wordlist[121];
                 goto compare;
-              case 313:
+              case 325:
                 resword = &wordlist[122];
                 goto compare;
-              case 314:
+              case 330:
                 resword = &wordlist[123];
                 goto compare;
-              case 315:
+              case 331:
                 resword = &wordlist[124];
                 goto compare;
-              case 317:
+              case 332:
                 resword = &wordlist[125];
                 goto compare;
-              case 318:
+              case 335:
                 resword = &wordlist[126];
                 goto compare;
-              case 319:
+              case 336:
                 resword = &wordlist[127];
                 goto compare;
-              case 321:
+              case 337:
                 resword = &wordlist[128];
                 goto compare;
-              case 322:
+              case 339:
                 resword = &wordlist[129];
                 goto compare;
-              case 323:
+              case 340:
                 resword = &wordlist[130];
                 goto compare;
-              case 324:
+              case 342:
                 resword = &wordlist[131];
                 goto compare;
-              case 325:
+              case 344:
                 resword = &wordlist[132];
                 goto compare;
-              case 327:
+              case 345:
                 resword = &wordlist[133];
                 goto compare;
-              case 328:
+              case 347:
                 resword = &wordlist[134];
                 goto compare;
-              case 329:
+              case 349:
                 resword = &wordlist[135];
                 goto compare;
-              case 331:
+              case 353:
                 resword = &wordlist[136];
                 goto compare;
-              case 332:
+              case 354:
                 resword = &wordlist[137];
                 goto compare;
-              case 334:
+              case 356:
                 resword = &wordlist[138];
                 goto compare;
-              case 337:
+              case 357:
                 resword = &wordlist[139];
                 goto compare;
-              case 339:
+              case 361:
                 resword = &wordlist[140];
                 goto compare;
-              case 342:
+              case 362:
                 resword = &wordlist[141];
                 goto compare;
-              case 344:
+              case 364:
                 resword = &wordlist[142];
                 goto compare;
-              case 347:
+              case 365:
                 resword = &wordlist[143];
                 goto compare;
-              case 348:
+              case 374:
                 resword = &wordlist[144];
                 goto compare;
-              case 349:
+              case 375:
                 resword = &wordlist[145];
                 goto compare;
-              case 352:
+              case 377:
                 resword = &wordlist[146];
                 goto compare;
-              case 353:
+              case 380:
                 resword = &wordlist[147];
                 goto compare;
-              case 357:
+              case 383:
                 resword = &wordlist[148];
                 goto compare;
-              case 359:
+              case 385:
                 resword = &wordlist[149];
                 goto compare;
-              case 361:
+              case 389:
                 resword = &wordlist[150];
                 goto compare;
-              case 362:
+              case 390:
                 resword = &wordlist[151];
                 goto compare;
-              case 364:
+              case 391:
                 resword = &wordlist[152];
                 goto compare;
-              case 367:
+              case 392:
                 resword = &wordlist[153];
                 goto compare;
-              case 369:
+              case 393:
                 resword = &wordlist[154];
                 goto compare;
-              case 370:
+              case 394:
                 resword = &wordlist[155];
                 goto compare;
-              case 371:
+              case 395:
                 resword = &wordlist[156];
                 goto compare;
-              case 372:
+              case 396:
                 resword = &wordlist[157];
                 goto compare;
-              case 374:
+              case 398:
                 resword = &wordlist[158];
                 goto compare;
-              case 377:
+              case 400:
                 resword = &wordlist[159];
                 goto compare;
-              case 378:
+              case 401:
                 resword = &wordlist[160];
                 goto compare;
-              case 379:
+              case 402:
                 resword = &wordlist[161];
                 goto compare;
-              case 380:
+              case 403:
                 resword = &wordlist[162];
                 goto compare;
-              case 381:
+              case 404:
                 resword = &wordlist[163];
                 goto compare;
-              case 384:
+              case 405:
                 resword = &wordlist[164];
                 goto compare;
-              case 386:
+              case 406:
                 resword = &wordlist[165];
                 goto compare;
-              case 389:
+              case 408:
                 resword = &wordlist[166];
                 goto compare;
-              case 390:
+              case 409:
                 resword = &wordlist[167];
                 goto compare;
-              case 392:
+              case 410:
                 resword = &wordlist[168];
                 goto compare;
-              case 393:
+              case 411:
                 resword = &wordlist[169];
                 goto compare;
-              case 394:
+              case 413:
                 resword = &wordlist[170];
                 goto compare;
-              case 395:
+              case 414:
                 resword = &wordlist[171];
                 goto compare;
-              case 398:
+              case 415:
                 resword = &wordlist[172];
                 goto compare;
-              case 399:
+              case 416:
                 resword = &wordlist[173];
                 goto compare;
-              case 401:
+              case 417:
                 resword = &wordlist[174];
                 goto compare;
-              case 402:
+              case 418:
                 resword = &wordlist[175];
                 goto compare;
-              case 403:
+              case 421:
                 resword = &wordlist[176];
                 goto compare;
-              case 404:
+              case 422:
                 resword = &wordlist[177];
                 goto compare;
-              case 407:
+              case 424:
                 resword = &wordlist[178];
                 goto compare;
-              case 412:
+              case 425:
                 resword = &wordlist[179];
                 goto compare;
-              case 413:
+              case 427:
                 resword = &wordlist[180];
                 goto compare;
-              case 417:
+              case 428:
                 resword = &wordlist[181];
                 goto compare;
-              case 419:
+              case 429:
                 resword = &wordlist[182];
                 goto compare;
-              case 420:
+              case 430:
                 resword = &wordlist[183];
                 goto compare;
-              case 422:
+              case 431:
                 resword = &wordlist[184];
                 goto compare;
-              case 426:
+              case 432:
                 resword = &wordlist[185];
                 goto compare;
-              case 427:
+              case 435:
                 resword = &wordlist[186];
                 goto compare;
-              case 429:
+              case 436:
                 resword = &wordlist[187];
                 goto compare;
-              case 434:
+              case 441:
                 resword = &wordlist[188];
                 goto compare;
-              case 439:
+              case 443:
                 resword = &wordlist[189];
                 goto compare;
-              case 440:
+              case 444:
                 resword = &wordlist[190];
                 goto compare;
-              case 441:
+              case 445:
                 resword = &wordlist[191];
                 goto compare;
-              case 442:
+              case 446:
                 resword = &wordlist[192];
                 goto compare;
-              case 445:
+              case 449:
                 resword = &wordlist[193];
                 goto compare;
-              case 446:
+              case 451:
                 resword = &wordlist[194];
                 goto compare;
-              case 447:
+              case 452:
                 resword = &wordlist[195];
                 goto compare;
-              case 449:
+              case 453:
                 resword = &wordlist[196];
                 goto compare;
-              case 450:
+              case 454:
                 resword = &wordlist[197];
                 goto compare;
-              case 451:
+              case 455:
                 resword = &wordlist[198];
                 goto compare;
-              case 455:
+              case 456:
                 resword = &wordlist[199];
                 goto compare;
-              case 460:
+              case 458:
                 resword = &wordlist[200];
                 goto compare;
-              case 461:
+              case 459:
                 resword = &wordlist[201];
                 goto compare;
-              case 462:
+              case 463:
                 resword = &wordlist[202];
                 goto compare;
               case 465:
                 resword = &wordlist[203];
                 goto compare;
-              case 466:
+              case 468:
                 resword = &wordlist[204];
                 goto compare;
-              case 468:
+              case 470:
                 resword = &wordlist[205];
                 goto compare;
-              case 469:
+              case 472:
                 resword = &wordlist[206];
                 goto compare;
-              case 470:
+              case 473:
                 resword = &wordlist[207];
                 goto compare;
-              case 471:
+              case 475:
                 resword = &wordlist[208];
                 goto compare;
-              case 475:
+              case 477:
                 resword = &wordlist[209];
                 goto compare;
-              case 476:
+              case 478:
                 resword = &wordlist[210];
                 goto compare;
-              case 477:
+              case 480:
                 resword = &wordlist[211];
                 goto compare;
-              case 479:
+              case 482:
                 resword = &wordlist[212];
                 goto compare;
-              case 480:
+              case 483:
                 resword = &wordlist[213];
                 goto compare;
               case 484:
                 resword = &wordlist[214];
                 goto compare;
-              case 486:
+              case 485:
                 resword = &wordlist[215];
                 goto compare;
-              case 488:
+              case 486:
                 resword = &wordlist[216];
                 goto compare;
-              case 489:
+              case 487:
                 resword = &wordlist[217];
                 goto compare;
               case 490:
                 resword = &wordlist[218];
                 goto compare;
-              case 492:
+              case 491:
                 resword = &wordlist[219];
                 goto compare;
-              case 493:
+              case 492:
                 resword = &wordlist[220];
                 goto compare;
-              case 494:
+              case 493:
                 resword = &wordlist[221];
                 goto compare;
-              case 496:
+              case 494:
                 resword = &wordlist[222];
                 goto compare;
-              case 497:
+              case 495:
                 resword = &wordlist[223];
                 goto compare;
-              case 499:
+              case 496:
                 resword = &wordlist[224];
                 goto compare;
-              case 501:
+              case 497:
                 resword = &wordlist[225];
                 goto compare;
-              case 502:
+              case 501:
                 resword = &wordlist[226];
                 goto compare;
-              case 504:
+              case 503:
                 resword = &wordlist[227];
                 goto compare;
-              case 506:
+              case 505:
                 resword = &wordlist[228];
                 goto compare;
-              case 507:
+              case 508:
                 resword = &wordlist[229];
                 goto compare;
-              case 511:
+              case 509:
                 resword = &wordlist[230];
                 goto compare;
-              case 512:
+              case 510:
                 resword = &wordlist[231];
                 goto compare;
-              case 513:
+              case 512:
                 resword = &wordlist[232];
                 goto compare;
-              case 514:
+              case 513:
                 resword = &wordlist[233];
                 goto compare;
               case 515:
@@ -1290,13 +1315,13 @@
               case 520:
                 resword = &wordlist[237];
                 goto compare;
-              case 522:
+              case 524:
                 resword = &wordlist[238];
                 goto compare;
-              case 524:
+              case 525:
                 resword = &wordlist[239];
                 goto compare;
-              case 525:
+              case 526:
                 resword = &wordlist[240];
                 goto compare;
               case 527:
@@ -1308,226 +1333,226 @@
               case 529:
                 resword = &wordlist[243];
                 goto compare;
-              case 530:
+              case 532:
                 resword = &wordlist[244];
                 goto compare;
-              case 531:
+              case 533:
                 resword = &wordlist[245];
                 goto compare;
-              case 532:
+              case 534:
                 resword = &wordlist[246];
                 goto compare;
-              case 533:
+              case 535:
                 resword = &wordlist[247];
                 goto compare;
-              case 535:
+              case 539:
                 resword = &wordlist[248];
                 goto compare;
-              case 536:
+              case 540:
                 resword = &wordlist[249];
                 goto compare;
-              case 540:
+              case 542:
                 resword = &wordlist[250];
                 goto compare;
-              case 541:
+              case 543:
                 resword = &wordlist[251];
                 goto compare;
-              case 547:
+              case 544:
                 resword = &wordlist[252];
                 goto compare;
-              case 549:
+              case 546:
                 resword = &wordlist[253];
                 goto compare;
-              case 550:
+              case 551:
                 resword = &wordlist[254];
                 goto compare;
               case 552:
                 resword = &wordlist[255];
                 goto compare;
-              case 553:
+              case 556:
                 resword = &wordlist[256];
                 goto compare;
-              case 555:
+              case 558:
                 resword = &wordlist[257];
                 goto compare;
-              case 557:
+              case 561:
                 resword = &wordlist[258];
                 goto compare;
               case 562:
                 resword = &wordlist[259];
                 goto compare;
-              case 565:
+              case 563:
                 resword = &wordlist[260];
                 goto compare;
-              case 569:
+              case 564:
                 resword = &wordlist[261];
                 goto compare;
-              case 570:
+              case 571:
                 resword = &wordlist[262];
                 goto compare;
-              case 571:
+              case 573:
                 resword = &wordlist[263];
                 goto compare;
-              case 578:
+              case 574:
                 resword = &wordlist[264];
                 goto compare;
-              case 581:
+              case 575:
                 resword = &wordlist[265];
                 goto compare;
-              case 585:
+              case 576:
                 resword = &wordlist[266];
                 goto compare;
-              case 586:
+              case 578:
                 resword = &wordlist[267];
                 goto compare;
-              case 587:
+              case 581:
                 resword = &wordlist[268];
                 goto compare;
-              case 588:
+              case 583:
                 resword = &wordlist[269];
                 goto compare;
-              case 589:
+              case 584:
                 resword = &wordlist[270];
                 goto compare;
-              case 590:
+              case 585:
                 resword = &wordlist[271];
                 goto compare;
-              case 591:
+              case 588:
                 resword = &wordlist[272];
                 goto compare;
-              case 594:
+              case 590:
                 resword = &wordlist[273];
                 goto compare;
-              case 597:
+              case 591:
                 resword = &wordlist[274];
                 goto compare;
-              case 599:
+              case 592:
                 resword = &wordlist[275];
                 goto compare;
-              case 600:
+              case 597:
                 resword = &wordlist[276];
                 goto compare;
-              case 604:
+              case 598:
                 resword = &wordlist[277];
                 goto compare;
-              case 605:
+              case 599:
                 resword = &wordlist[278];
                 goto compare;
-              case 606:
+              case 600:
                 resword = &wordlist[279];
                 goto compare;
-              case 610:
+              case 601:
                 resword = &wordlist[280];
                 goto compare;
-              case 611:
+              case 605:
                 resword = &wordlist[281];
                 goto compare;
-              case 612:
+              case 608:
                 resword = &wordlist[282];
                 goto compare;
-              case 613:
+              case 611:
                 resword = &wordlist[283];
                 goto compare;
-              case 614:
+              case 612:
                 resword = &wordlist[284];
                 goto compare;
-              case 615:
+              case 613:
                 resword = &wordlist[285];
                 goto compare;
-              case 617:
+              case 615:
                 resword = &wordlist[286];
                 goto compare;
-              case 618:
+              case 619:
                 resword = &wordlist[287];
                 goto compare;
-              case 619:
+              case 620:
                 resword = &wordlist[288];
                 goto compare;
-              case 620:
+              case 622:
                 resword = &wordlist[289];
                 goto compare;
-              case 622:
+              case 623:
                 resword = &wordlist[290];
                 goto compare;
-              case 624:
+              case 625:
                 resword = &wordlist[291];
                 goto compare;
-              case 625:
+              case 626:
                 resword = &wordlist[292];
                 goto compare;
-              case 626:
+              case 627:
                 resword = &wordlist[293];
                 goto compare;
-              case 627:
+              case 629:
                 resword = &wordlist[294];
                 goto compare;
               case 630:
                 resword = &wordlist[295];
                 goto compare;
-              case 632:
+              case 631:
                 resword = &wordlist[296];
                 goto compare;
-              case 633:
+              case 632:
                 resword = &wordlist[297];
                 goto compare;
-              case 636:
+              case 633:
                 resword = &wordlist[298];
                 goto compare;
-              case 637:
+              case 636:
                 resword = &wordlist[299];
                 goto compare;
-              case 639:
+              case 637:
                 resword = &wordlist[300];
                 goto compare;
               case 640:
                 resword = &wordlist[301];
                 goto compare;
-              case 642:
+              case 641:
                 resword = &wordlist[302];
                 goto compare;
-              case 645:
+              case 642:
                 resword = &wordlist[303];
                 goto compare;
-              case 646:
+              case 645:
                 resword = &wordlist[304];
                 goto compare;
-              case 649:
+              case 646:
                 resword = &wordlist[305];
                 goto compare;
-              case 651:
+              case 650:
                 resword = &wordlist[306];
                 goto compare;
-              case 652:
+              case 651:
                 resword = &wordlist[307];
                 goto compare;
-              case 654:
+              case 653:
                 resword = &wordlist[308];
                 goto compare;
-              case 655:
+              case 654:
                 resword = &wordlist[309];
                 goto compare;
-              case 656:
+              case 657:
                 resword = &wordlist[310];
                 goto compare;
               case 658:
                 resword = &wordlist[311];
                 goto compare;
-              case 660:
+              case 659:
                 resword = &wordlist[312];
                 goto compare;
-              case 661:
+              case 663:
                 resword = &wordlist[313];
                 goto compare;
               case 665:
                 resword = &wordlist[314];
                 goto compare;
-              case 666:
+              case 668:
                 resword = &wordlist[315];
                 goto compare;
-              case 667:
+              case 669:
                 resword = &wordlist[316];
                 goto compare;
-              case 669:
+              case 670:
                 resword = &wordlist[317];
                 goto compare;
               case 672:
@@ -1536,183 +1561,252 @@
               case 675:
                 resword = &wordlist[319];
                 goto compare;
-              case 677:
+              case 676:
                 resword = &wordlist[320];
                 goto compare;
-              case 679:
+              case 677:
                 resword = &wordlist[321];
                 goto compare;
-              case 694:
+              case 680:
                 resword = &wordlist[322];
                 goto compare;
-              case 697:
+              case 682:
                 resword = &wordlist[323];
                 goto compare;
-              case 700:
+              case 687:
                 resword = &wordlist[324];
                 goto compare;
-              case 703:
+              case 689:
                 resword = &wordlist[325];
                 goto compare;
-              case 704:
+              case 696:
                 resword = &wordlist[326];
                 goto compare;
-              case 706:
+              case 699:
                 resword = &wordlist[327];
                 goto compare;
-              case 708:
+              case 701:
                 resword = &wordlist[328];
                 goto compare;
-              case 709:
+              case 703:
                 resword = &wordlist[329];
                 goto compare;
-              case 713:
+              case 704:
                 resword = &wordlist[330];
                 goto compare;
-              case 717:
+              case 705:
                 resword = &wordlist[331];
                 goto compare;
-              case 719:
+              case 707:
                 resword = &wordlist[332];
                 goto compare;
-              case 721:
+              case 708:
                 resword = &wordlist[333];
                 goto compare;
-              case 722:
+              case 710:
                 resword = &wordlist[334];
                 goto compare;
-              case 729:
+              case 711:
                 resword = &wordlist[335];
                 goto compare;
-              case 731:
+              case 715:
                 resword = &wordlist[336];
                 goto compare;
-              case 734:
+              case 716:
                 resword = &wordlist[337];
                 goto compare;
-              case 741:
+              case 717:
                 resword = &wordlist[338];
                 goto compare;
-              case 745:
+              case 720:
                 resword = &wordlist[339];
                 goto compare;
-              case 747:
+              case 721:
                 resword = &wordlist[340];
                 goto compare;
-              case 750:
+              case 725:
                 resword = &wordlist[341];
                 goto compare;
-              case 751:
+              case 728:
                 resword = &wordlist[342];
                 goto compare;
-              case 753:
+              case 730:
                 resword = &wordlist[343];
                 goto compare;
-              case 755:
+              case 731:
                 resword = &wordlist[344];
                 goto compare;
-              case 757:
+              case 732:
                 resword = &wordlist[345];
                 goto compare;
-              case 759:
+              case 736:
                 resword = &wordlist[346];
                 goto compare;
-              case 766:
+              case 738:
                 resword = &wordlist[347];
                 goto compare;
-              case 772:
+              case 742:
                 resword = &wordlist[348];
                 goto compare;
-              case 775:
+              case 749:
                 resword = &wordlist[349];
                 goto compare;
-              case 777:
+              case 761:
                 resword = &wordlist[350];
                 goto compare;
-              case 779:
+              case 771:
                 resword = &wordlist[351];
                 goto compare;
-              case 792:
+              case 772:
                 resword = &wordlist[352];
                 goto compare;
-              case 805:
+              case 773:
                 resword = &wordlist[353];
                 goto compare;
-              case 810:
+              case 776:
                 resword = &wordlist[354];
                 goto compare;
-              case 814:
+              case 777:
                 resword = &wordlist[355];
                 goto compare;
-              case 815:
+              case 778:
                 resword = &wordlist[356];
                 goto compare;
-              case 821:
+              case 781:
                 resword = &wordlist[357];
                 goto compare;
-              case 825:
+              case 792:
                 resword = &wordlist[358];
                 goto compare;
-              case 829:
+              case 793:
                 resword = &wordlist[359];
                 goto compare;
-              case 830:
+              case 799:
                 resword = &wordlist[360];
                 goto compare;
-              case 833:
+              case 800:
                 resword = &wordlist[361];
                 goto compare;
-              case 836:
+              case 810:
                 resword = &wordlist[362];
                 goto compare;
-              case 837:
+              case 811:
                 resword = &wordlist[363];
                 goto compare;
-              case 841:
+              case 820:
                 resword = &wordlist[364];
                 goto compare;
-              case 845:
+              case 822:
                 resword = &wordlist[365];
                 goto compare;
-              case 854:
+              case 831:
                 resword = &wordlist[366];
                 goto compare;
-              case 864:
+              case 833:
                 resword = &wordlist[367];
                 goto compare;
-              case 870:
+              case 836:
                 resword = &wordlist[368];
                 goto compare;
-              case 876:
+              case 841:
                 resword = &wordlist[369];
                 goto compare;
-              case 885:
+              case 850:
                 resword = &wordlist[370];
                 goto compare;
-              case 893:
+              case 857:
                 resword = &wordlist[371];
                 goto compare;
-              case 922:
+              case 861:
                 resword = &wordlist[372];
                 goto compare;
-              case 960:
+              case 863:
                 resword = &wordlist[373];
                 goto compare;
-              case 968:
+              case 866:
                 resword = &wordlist[374];
                 goto compare;
-              case 1015:
+              case 867:
                 resword = &wordlist[375];
                 goto compare;
-              case 1050:
+              case 886:
                 resword = &wordlist[376];
                 goto compare;
-              case 1071:
+              case 892:
                 resword = &wordlist[377];
                 goto compare;
-              case 1176:
+              case 906:
                 resword = &wordlist[378];
                 goto compare;
+              case 907:
+                resword = &wordlist[379];
+                goto compare;
+              case 908:
+                resword = &wordlist[380];
+                goto compare;
+              case 911:
+                resword = &wordlist[381];
+                goto compare;
+              case 921:
+                resword = &wordlist[382];
+                goto compare;
+              case 925:
+                resword = &wordlist[383];
+                goto compare;
+              case 927:
+                resword = &wordlist[384];
+                goto compare;
+              case 935:
+                resword = &wordlist[385];
+                goto compare;
+              case 951:
+                resword = &wordlist[386];
+                goto compare;
+              case 953:
+                resword = &wordlist[387];
+                goto compare;
+              case 978:
+                resword = &wordlist[388];
+                goto compare;
+              case 989:
+                resword = &wordlist[389];
+                goto compare;
+              case 990:
+                resword = &wordlist[390];
+                goto compare;
+              case 993:
+                resword = &wordlist[391];
+                goto compare;
+              case 1017:
+                resword = &wordlist[392];
+                goto compare;
+              case 1018:
+                resword = &wordlist[393];
+                goto compare;
+              case 1041:
+                resword = &wordlist[394];
+                goto compare;
+              case 1070:
+                resword = &wordlist[395];
+                goto compare;
+              case 1083:
+                resword = &wordlist[396];
+                goto compare;
+              case 1127:
+                resword = &wordlist[397];
+                goto compare;
+              case 1205:
+                resword = &wordlist[398];
+                goto compare;
+              case 1212:
+                resword = &wordlist[399];
+                goto compare;
+              case 1223:
+                resword = &wordlist[400];
+                goto compare;
+              case 1463:
+                resword = &wordlist[401];
+                goto compare;
             }
           return 0;
         compare:
--- writerfilter/source/ooxml/gperfelements.hxx	14 May 2007 19:45:17 -0000	1.10
+++ writerfilter/source/ooxml/gperfelements.hxx	18 Jul 2007 11:45:28 -0000	1.10.4.2
@@ -34,7 +34,7 @@
 
 namespace ooxml { namespace tokenmap { namespace elements {
 struct token { const char * name; TokenEnum_t nToken; };
-/* maximum key range = 4486, duplicates = 0 */
+/* maximum key range = 4537, duplicates = 0 */
 
 class Perfect_Hash
 {
@@ -49,32 +49,32 @@
 {
   static unsigned short asso_values[] =
     {
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578,    0, 4578,    0,
-         0,   20, 4578,    5,    0, 4578,   25, 4578,   15, 4578,
-      4578, 4578, 4578, 4578, 4578,  850,  300,  512,  350,  230,
-       455,  265,  800,    0,    0, 4578,  960,  385,  200,  165,
-      1339, 4578,  705,  385,  152,   25,   85,   85,   15,   10,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578,   30,  901,  110,
-        25,    5,  905,  365,  680,  320,   15,  860,  265,  110,
-        45,    0,  530,   60,   15,    5,    0,  635,  755,  876,
-       315,  896,   40, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578, 4578,
-      4578, 4578, 4578, 4578, 4578, 4578
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629,    0, 4629,   30,
+        70,    5,   20,   10,    0, 4629,   25, 4629,   15, 4629,
+      4629, 4629, 4629, 4629, 4629,  555,  300,  512,  186,  230,
+       566,  195,  768,  205,    0, 4629,  960,  385,   65,   20,
+      1339, 4629,  581,  385,  700,   10,   85,   85,   25,    0,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629,   30,  901,  110,
+        25,    5,  905,  365,  680,  320,   20,  860,  265,  110,
+        45,    0,  530,  190,   15,    5,    0,  635,  996,  876,
+       685,  896,   40, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629, 4629,
+      4629, 4629, 4629, 4629, 4629, 4629
     };
   register int hval = len;
 
@@ -139,20 +139,22 @@
 {
   enum
     {
-      TOTAL_KEYWORDS = 877,
+      TOTAL_KEYWORDS = 911,
       MIN_WORD_LENGTH = 56,
       MAX_WORD_LENGTH = 96,
       MIN_HASH_VALUE = 92,
-      MAX_HASH_VALUE = 4577
+      MAX_HASH_VALUE = 4628
     };
 
   static struct token wordlist[] =
     {
       {"http://schemas.openxmlformats.org/drawingml/2006/main:sat", OOXML_ELEMENT_drawingml_sat},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:ea", OOXML_ELEMENT_drawingml_ea},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:red", OOXML_ELEMENT_drawingml_red},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:satMod", OOXML_ELEMENT_drawingml_satMod},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:redMod", OOXML_ELEMENT_drawingml_redMod},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:snd", OOXML_ELEMENT_drawingml_snd},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:cs", OOXML_ELEMENT_drawingml_cs},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:rect", OOXML_ELEMENT_drawingml_rect},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:t", OOXML_ELEMENT_math_t},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:e", OOXML_ELEMENT_math_e},
@@ -161,11 +163,10 @@
       {"http://schemas.openxmlformats.org/drawingml/2006/main:endCxn", OOXML_ELEMENT_drawingml_endCxn},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:r", OOXML_ELEMENT_math_r},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:t", OOXML_ELEMENT_wordprocessingml_t},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:scene3d", OOXML_ELEMENT_drawingml_scene3d},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:text", OOXML_ELEMENT_wordprocessingml_text},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:textInput", OOXML_ELEMENT_wordprocessingml_textInput},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rt", OOXML_ELEMENT_wordprocessingml_rt},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:d", OOXML_ELEMENT_math_d},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:scene3d", OOXML_ELEMENT_drawingml_scene3d},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:start", OOXML_ELEMENT_wordprocessingml_start},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:odso", OOXML_ELEMENT_wordprocessingml_odso},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:r", OOXML_ELEMENT_wordprocessingml_r},
@@ -186,14 +187,17 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:storeMappedDataAs", OOXML_ELEMENT_wordprocessingml_storeMappedDataAs},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsid", OOXML_ELEMENT_wordprocessingml_rsid},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:separator", OOXML_ELEMENT_wordprocessingml_separator},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:accent6", OOXML_ELEMENT_drawingml_accent6},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noBorder", OOXML_ELEMENT_wordprocessingml_noBorder},
       {"http://schemas.openxmlformats.org/drawingml/2006/picture:pic", OOXML_ELEMENT_picture_pic},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sz", OOXML_ELEMENT_wordprocessingml_sz},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:name", OOXML_ELEMENT_wordprocessingml_name},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:accent3", OOXML_ELEMENT_drawingml_accent3},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:den", OOXML_ELEMENT_math_den},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotUseEastAsianBreakRules", OOXML_ELEMENT_wordprocessingml_doNotUseEastAsianBreakRules},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotHyphenateCaps", OOXML_ELEMENT_wordprocessingml_doNotHyphenateCaps},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotSuppressIndentation", OOXML_ELEMENT_wordprocessingml_doNotSuppressIndentation},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:accent5", OOXML_ELEMENT_drawingml_accent5},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotUseLongFileNames", OOXML_ELEMENT_wordprocessingml_doNotUseLongFileNames},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotSuppressBlankLines", OOXML_ELEMENT_wordprocessingml_doNotSuppressBlankLines},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:nsid", OOXML_ELEMENT_wordprocessingml_nsid},
@@ -203,6 +207,7 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotDisplayPageBoundaries", OOXML_ELEMENT_wordprocessingml_doNotDisplayPageBoundaries},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:scr", OOXML_ELEMENT_math_scr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:endnotePr", OOXML_ELEMENT_wordprocessingml_endnotePr},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:accent4", OOXML_ELEMENT_drawingml_accent4},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:endnoteReference", OOXML_ELEMENT_wordprocessingml_endnoteReference},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cs", OOXML_ELEMENT_wordprocessingml_cs},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cols", OOXML_ELEMENT_wordprocessingml_cols},
@@ -212,75 +217,71 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotExpandShiftReturn", OOXML_ELEMENT_wordprocessingml_doNotExpandShiftReturn},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:src", OOXML_ELEMENT_wordprocessingml_src},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tcBorders", OOXML_ELEMENT_wordprocessingml_tcBorders},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:accent1", OOXML_ELEMENT_drawingml_accent1},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cr", OOXML_ELEMENT_wordprocessingml_cr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tcPr", OOXML_ELEMENT_wordprocessingml_tcPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:color", OOXML_ELEMENT_wordprocessingml_color},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:ext", OOXML_ELEMENT_drawingml_ext},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:equation", OOXML_ELEMENT_wordprocessingml_equation},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:extLst", OOXML_ELEMENT_drawingml_extLst},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotUseMarginsForDrawingGridOrigin", OOXML_ELEMENT_wordprocessingml_doNotUseMarginsForDrawingGridOrigin},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lt1", OOXML_ELEMENT_drawingml_lt1},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docVars", OOXML_ELEMENT_wordprocessingml_docVars},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:caps", OOXML_ELEMENT_wordprocessingml_caps},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:smartTagPr", OOXML_ELEMENT_wordprocessingml_smartTagPr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:zeroDesc", OOXML_ELEMENT_math_zeroDesc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docVar", OOXML_ELEMENT_wordprocessingml_docVar},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotWrapTextWithPunct", OOXML_ELEMENT_wordprocessingml_doNotWrapTextWithPunct},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:latin", OOXML_ELEMENT_drawingml_latin},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tcMar", OOXML_ELEMENT_wordprocessingml_tcMar},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:embedBold", OOXML_ELEMENT_wordprocessingml_embedBold},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:ln", OOXML_ELEMENT_drawingml_ln},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:m", OOXML_ELEMENT_math_m},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:tint", OOXML_ELEMENT_drawingml_tint},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:delText", OOXML_ELEMENT_wordprocessingml_delText},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tcW", OOXML_ELEMENT_wordprocessingml_tcW},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:gs", OOXML_ELEMENT_drawingml_gs},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:mcs", OOXML_ELEMENT_math_mcs},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:embedRegular", OOXML_ELEMENT_wordprocessingml_embedRegular},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:jc", OOXML_ELEMENT_math_jc},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:close", OOXML_ELEMENT_drawingml_close},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:jc", OOXML_ELEMENT_math_jc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:calendar", OOXML_ELEMENT_wordprocessingml_calendar},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sourceFileName", OOXML_ELEMENT_wordprocessingml_sourceFileName},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:clrTo", OOXML_ELEMENT_drawingml_clrTo},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:textInput", OOXML_ELEMENT_wordprocessingml_textInput},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:accent2", OOXML_ELEMENT_drawingml_accent2},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tc", OOXML_ELEMENT_wordprocessingml_tc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:em", OOXML_ELEMENT_wordprocessingml_em},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lt2", OOXML_ELEMENT_drawingml_lt2},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:comment", OOXML_ELEMENT_wordprocessingml_comment},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:notTrueType", OOXML_ELEMENT_wordprocessingml_notTrueType},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:jc", OOXML_ELEMENT_wordprocessingml_jc},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docDefaults", OOXML_ELEMENT_wordprocessingml_docDefaults},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:comments", OOXML_ELEMENT_wordprocessingml_comments},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:gd", OOXML_ELEMENT_drawingml_gd},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dataType", OOXML_ELEMENT_wordprocessingml_dataType},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:jc", OOXML_ELEMENT_wordprocessingml_jc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:commentReference", OOXML_ELEMENT_wordprocessingml_commentReference},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:description", OOXML_ELEMENT_wordprocessingml_description},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:green", OOXML_ELEMENT_drawingml_green},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:zeroAsc", OOXML_ELEMENT_math_zeroAsc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:zoom", OOXML_ELEMENT_wordprocessingml_zoom},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docGrid", OOXML_ELEMENT_wordprocessingml_docGrid},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:embedBoldItalic", OOXML_ELEMENT_wordprocessingml_embedBoldItalic},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveTo", OOXML_ELEMENT_wordprocessingml_moveTo},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:left", OOXML_ELEMENT_wordprocessingml_left},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:embedSystemFonts", OOXML_ELEMENT_wordprocessingml_embedSystemFonts},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:equation", OOXML_ELEMENT_wordprocessingml_equation},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:calcOnExit", OOXML_ELEMENT_wordprocessingml_calcOnExit},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rtl", OOXML_ELEMENT_wordprocessingml_rtl},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:style", OOXML_ELEMENT_wordprocessingml_style},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:styles", OOXML_ELEMENT_wordprocessingml_styles},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveToRangeStart", OOXML_ELEMENT_wordprocessingml_moveToRangeStart},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:lnTo", OOXML_ELEMENT_drawingml_lnTo},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:del", OOXML_ELEMENT_wordprocessingml_del},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:cxnLst", OOXML_ELEMENT_drawingml_cxnLst},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:mc", OOXML_ELEMENT_math_mc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:attachedTemplate", OOXML_ELEMENT_wordprocessingml_attachedTemplate},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:table", OOXML_ELEMENT_wordprocessingml_table},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveToRangeEnd", OOXML_ELEMENT_wordprocessingml_moveToRangeEnd},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marW", OOXML_ELEMENT_wordprocessingml_marW},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:stylePaneSortMethod", OOXML_ELEMENT_wordprocessingml_stylePaneSortMethod},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:stylePaneFormatFilter", OOXML_ELEMENT_wordprocessingml_stylePaneFormatFilter},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sdtEndPr", OOXML_ELEMENT_wordprocessingml_sdtEndPr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:acc", OOXML_ELEMENT_math_acc},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docGrid", OOXML_ELEMENT_wordprocessingml_docGrid},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:size", OOXML_ELEMENT_wordprocessingml_size},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:alias", OOXML_ELEMENT_wordprocessingml_alias},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:cxn", OOXML_ELEMENT_drawingml_cxn},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:aliases", OOXML_ELEMENT_wordprocessingml_aliases},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:settings", OOXML_ELEMENT_wordprocessingml_settings},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveInvalidXml", OOXML_ELEMENT_wordprocessingml_saveInvalidXml},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:trHeight", OOXML_ELEMENT_wordprocessingml_trHeight},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sourceFileName", OOXML_ELEMENT_wordprocessingml_sourceFileName},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:pt", OOXML_ELEMENT_drawingml_pt},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:aln", OOXML_ELEMENT_math_aln},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:startOverride", OOXML_ELEMENT_wordprocessingml_startOverride},
@@ -298,26 +299,24 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ddList", OOXML_ELEMENT_wordprocessingml_ddList},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:instrText", OOXML_ELEMENT_wordprocessingml_instrText},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:stCxn", OOXML_ELEMENT_drawingml_stCxn},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cellIns", OOXML_ELEMENT_wordprocessingml_cellIns},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:sp3d", OOXML_ELEMENT_drawingml_sp3d},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ind", OOXML_ELEMENT_wordprocessingml_ind},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:ctrlPr", OOXML_ELEMENT_math_ctrlPr},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:pathLst", OOXML_ELEMENT_drawingml_pathLst},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotOrganizeInFolder", OOXML_ELEMENT_wordprocessingml_doNotOrganizeInFolder},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:control", OOXML_ELEMENT_wordprocessingml_control},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tag", OOXML_ELEMENT_wordprocessingml_tag},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:divId", OOXML_ELEMENT_wordprocessingml_divId},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docDefaults", OOXML_ELEMENT_wordprocessingml_docDefaults},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:delInstrText", OOXML_ELEMENT_wordprocessingml_delInstrText},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:altName", OOXML_ELEMENT_wordprocessingml_altName},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotBreakWrappedTables", OOXML_ELEMENT_wordprocessingml_doNotBreakWrappedTables},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:scrollbar", OOXML_ELEMENT_wordprocessingml_scrollbar},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:zeroWid", OOXML_ELEMENT_math_zeroWid},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:sp3d", OOXML_ELEMENT_drawingml_sp3d},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:mcJc", OOXML_ELEMENT_math_mcJc},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:tile", OOXML_ELEMENT_drawingml_tile},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:colDelim", OOXML_ELEMENT_wordprocessingml_colDelim},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotAutofitConstrainedTables", OOXML_ELEMENT_wordprocessingml_doNotAutofitConstrainedTables},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:calcOnExit", OOXML_ELEMENT_wordprocessingml_calcOnExit},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotTrackMoves", OOXML_ELEMENT_wordprocessingml_doNotTrackMoves},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotEmbedSmartTags", OOXML_ELEMENT_wordprocessingml_doNotEmbedSmartTags},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:mainDocumentType", OOXML_ELEMENT_wordprocessingml_mainDocumentType},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tcFitText", OOXML_ELEMENT_wordprocessingml_tcFitText},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:clrFrom", OOXML_ELEMENT_drawingml_clrFrom},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:movie", OOXML_ELEMENT_wordprocessingml_movie},
@@ -326,7 +325,6 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:destination", OOXML_ELEMENT_wordprocessingml_destination},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noLeading", OOXML_ELEMENT_wordprocessingml_noLeading},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:targetScreenSz", OOXML_ELEMENT_wordprocessingml_targetScreenSz},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:sx", OOXML_ELEMENT_drawingml_sx},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:consecutiveHyphenLimit", OOXML_ELEMENT_wordprocessingml_consecutiveHyphenLimit},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotRelyOnCSS", OOXML_ELEMENT_wordprocessingml_doNotRelyOnCSS},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:captions", OOXML_ELEMENT_wordprocessingml_captions},
@@ -342,16 +340,15 @@
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:pos", OOXML_ELEMENT_math_pos},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:caption", OOXML_ELEMENT_wordprocessingml_caption},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:citation", OOXML_ELEMENT_wordprocessingml_citation},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dateFormat", OOXML_ELEMENT_wordprocessingml_dateFormat},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rFonts", OOXML_ELEMENT_wordprocessingml_rFonts},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotShadeFormData", OOXML_ELEMENT_wordprocessingml_doNotShadeFormData},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:ext", OOXML_ELEMENT_drawingml_ext},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:extLst", OOXML_ELEMENT_drawingml_extLst},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:tileRect", OOXML_ELEMENT_drawingml_tileRect},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:top", OOXML_ELEMENT_wordprocessingml_top},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cantSplit", OOXML_ELEMENT_wordprocessingml_cantSplit},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:altName", OOXML_ELEMENT_wordprocessingml_altName},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pos", OOXML_ELEMENT_wordprocessingml_pos},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:duotone", OOXML_ELEMENT_drawingml_duotone},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:shade", OOXML_ELEMENT_drawingml_shade},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveInvalidXml", OOXML_ELEMENT_wordprocessingml_saveInvalidXml},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sdtContent", OOXML_ELEMENT_wordprocessingml_sdtContent},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cnfStyle", OOXML_ELEMENT_wordprocessingml_cnfStyle},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:lit", OOXML_ELEMENT_math_lit},
@@ -359,86 +356,88 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marBottom", OOXML_ELEMENT_wordprocessingml_marBottom},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:truncateFontHeightsLikeWP6", OOXML_ELEMENT_wordprocessingml_truncateFontHeightsLikeWP6},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:ahXY", OOXML_ELEMENT_drawingml_ahXY},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveFormsData", OOXML_ELEMENT_wordprocessingml_saveFormsData},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:panose1", OOXML_ELEMENT_wordprocessingml_panose1},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:textDirection", OOXML_ELEMENT_wordprocessingml_textDirection},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotSnapToGridInCell", OOXML_ELEMENT_wordprocessingml_doNotSnapToGridInCell},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:comp", OOXML_ELEMENT_drawingml_comp},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:colDelim", OOXML_ELEMENT_wordprocessingml_colDelim},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:textAlignment", OOXML_ELEMENT_wordprocessingml_textAlignment},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:endChr", OOXML_ELEMENT_math_endChr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotSuppressParagraphBorders", OOXML_ELEMENT_wordprocessingml_doNotSuppressParagraphBorders},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noColumnBalance", OOXML_ELEMENT_wordprocessingml_noColumnBalance},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cellIns", OOXML_ELEMENT_wordprocessingml_cellIns},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotBreakConstrainedForcedTable", OOXML_ELEMENT_wordprocessingml_doNotBreakConstrainedForcedTable},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:mainDocumentType", OOXML_ELEMENT_wordprocessingml_mainDocumentType},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:panose1", OOXML_ELEMENT_wordprocessingml_panose1},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:majorFont", OOXML_ELEMENT_drawingml_majorFont},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:divId", OOXML_ELEMENT_wordprocessingml_divId},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:prstGeom", OOXML_ELEMENT_drawingml_prstGeom},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:commentRangeStart", OOXML_ELEMENT_wordprocessingml_commentRangeStart},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printerSettings", OOXML_ELEMENT_wordprocessingml_printerSettings},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lid", OOXML_ELEMENT_wordprocessingml_lid},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotUseIndentAsNumberingTabStop", OOXML_ELEMENT_wordprocessingml_doNotUseIndentAsNumberingTabStop},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotLeaveBackslashAlone", OOXML_ELEMENT_wordprocessingml_doNotLeaveBackslashAlone},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotVertAlignInTxbx", OOXML_ELEMENT_wordprocessingml_doNotVertAlignInTxbx},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noWrap", OOXML_ELEMENT_wordprocessingml_noWrap},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printTwoOnOne", OOXML_ELEMENT_wordprocessingml_printTwoOnOne},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:commentRangeEnd", OOXML_ELEMENT_wordprocessingml_commentRangeEnd},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveFromRangeStart", OOXML_ELEMENT_wordprocessingml_moveFromRangeStart},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidRoot", OOXML_ELEMENT_wordprocessingml_rsidRoot},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:eastAsianLayout", OOXML_ELEMENT_wordprocessingml_eastAsianLayout},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dateFormat", OOXML_ELEMENT_wordprocessingml_dateFormat},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rFonts", OOXML_ELEMENT_wordprocessingml_rFonts},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotShadeFormData", OOXML_ELEMENT_wordprocessingml_doNotShadeFormData},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printBodyTextBeforeHeader", OOXML_ELEMENT_wordprocessingml_printBodyTextBeforeHeader},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:i", OOXML_ELEMENT_wordprocessingml_i},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noSpaceRaiseLower", OOXML_ELEMENT_wordprocessingml_noSpaceRaiseLower},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tmpl", OOXML_ELEMENT_wordprocessingml_tmpl},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:qFormat", OOXML_ELEMENT_wordprocessingml_qFormat},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:statusText", OOXML_ELEMENT_wordprocessingml_statusText},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:greenMod", OOXML_ELEMENT_drawingml_greenMod},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tcPrChange", OOXML_ELEMENT_wordprocessingml_tcPrChange},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveFromRangeEnd", OOXML_ELEMENT_wordprocessingml_moveFromRangeEnd},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:smallCaps", OOXML_ELEMENT_wordprocessingml_smallCaps},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:cxnLst", OOXML_ELEMENT_drawingml_cxnLst},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:personalCompose", OOXML_ELEMENT_wordprocessingml_personalCompose},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:clrChange", OOXML_ELEMENT_drawingml_clrChange},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:prstClr", OOXML_ELEMENT_drawingml_prstClr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:compat", OOXML_ELEMENT_wordprocessingml_compat},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:smartTagType", OOXML_ELEMENT_wordprocessingml_smartTagType},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveFormsData", OOXML_ELEMENT_wordprocessingml_saveFormsData},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:alpha", OOXML_ELEMENT_drawingml_alpha},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveFrom", OOXML_ELEMENT_wordprocessingml_moveFrom},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:mappedName", OOXML_ELEMENT_wordprocessingml_mappedName},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:divBdr", OOXML_ELEMENT_wordprocessingml_divBdr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sig", OOXML_ELEMENT_wordprocessingml_sig},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:moveTo", OOXML_ELEMENT_drawingml_moveTo},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:paperSrc", OOXML_ELEMENT_wordprocessingml_paperSrc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:default", OOXML_ELEMENT_wordprocessingml_default},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:listItem", OOXML_ELEMENT_wordprocessingml_listItem},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:cxn", OOXML_ELEMENT_drawingml_cxn},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:shd", OOXML_ELEMENT_wordprocessingml_shd},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:exitMacro", OOXML_ELEMENT_wordprocessingml_exitMacro},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gridBefore", OOXML_ELEMENT_wordprocessingml_gridBefore},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hdr", OOXML_ELEMENT_wordprocessingml_hdr},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useNormalStyleForList", OOXML_ELEMENT_wordprocessingml_useNormalStyleForList},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printPostScriptOverText", OOXML_ELEMENT_wordprocessingml_printPostScriptOverText},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:alnScr", OOXML_ELEMENT_math_alnScr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:deg", OOXML_ELEMENT_math_deg},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:textDirection", OOXML_ELEMENT_wordprocessingml_textDirection},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:adjustRightInd", OOXML_ELEMENT_wordprocessingml_adjustRightInd},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numId", OOXML_ELEMENT_wordprocessingml_numId},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveSmartTagsAsXml", OOXML_ELEMENT_wordprocessingml_saveSmartTagsAsXml},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:delText", OOXML_ELEMENT_wordprocessingml_delText},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ignoreMixedContent", OOXML_ELEMENT_wordprocessingml_ignoreMixedContent},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:styleLockQFSet", OOXML_ELEMENT_wordprocessingml_styleLockQFSet},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveFromRangeStart", OOXML_ELEMENT_wordprocessingml_moveFromRangeStart},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:alignBordersAndEdges", OOXML_ELEMENT_wordprocessingml_alignBordersAndEdges},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noExtraLineSpacing", OOXML_ELEMENT_wordprocessingml_noExtraLineSpacing},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:headerReference", OOXML_ELEMENT_wordprocessingml_headerReference},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:underlineTabInNumList", OOXML_ELEMENT_wordprocessingml_underlineTabInNumList},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:quadBezTo", OOXML_ELEMENT_drawingml_quadBezTo},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:eqArr", OOXML_ELEMENT_math_eqArr},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:start", OOXML_ELEMENT_wordprocessingDrawing_start},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:extent", OOXML_ELEMENT_wordprocessingDrawing_extent},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rsidRoot", OOXML_ELEMENT_wordprocessingml_rsidRoot},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useWord2002TableStyleRules", OOXML_ELEMENT_wordprocessingml_useWord2002TableStyleRules},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:count", OOXML_ELEMENT_math_count},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:simplePos", OOXML_ELEMENT_wordprocessingDrawing_simplePos},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:sysClr", OOXML_ELEMENT_drawingml_sysClr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:glossaryDocument", OOXML_ELEMENT_wordprocessingml_glossaryDocument},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:snapToGrid", OOXML_ELEMENT_wordprocessingml_snapToGrid},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveFromRangeEnd", OOXML_ELEMENT_wordprocessingml_moveFromRangeEnd},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:scrgbClr", OOXML_ELEMENT_drawingml_scrgbClr},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:dk1", OOXML_ELEMENT_drawingml_dk1},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:imprint", OOXML_ELEMENT_wordprocessingml_imprint},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printTwoOnOne", OOXML_ELEMENT_wordprocessingml_printTwoOnOne},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dropDownList", OOXML_ELEMENT_wordprocessingml_dropDownList},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:lim", OOXML_ELEMENT_math_lim},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:font", OOXML_ELEMENT_drawingml_font},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:document", OOXML_ELEMENT_wordprocessingml_document},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cellMerge", OOXML_ELEMENT_wordprocessingml_cellMerge},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:graphic", OOXML_ELEMENT_drawingml_graphic},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:notTrueType", OOXML_ELEMENT_wordprocessingml_notTrueType},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:mirrorMargins", OOXML_ELEMENT_wordprocessingml_mirrorMargins},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:maxDist", OOXML_ELEMENT_math_maxDist},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlPr", OOXML_ELEMENT_wordprocessingml_customXmlPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlDelRangeStart", OOXML_ELEMENT_wordprocessingml_customXmlDelRangeStart},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:docPr", OOXML_ELEMENT_wordprocessingDrawing_docPr},
@@ -446,6 +445,8 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:num", OOXML_ELEMENT_wordprocessingml_num},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlDelRangeEnd", OOXML_ELEMENT_wordprocessingml_customXmlDelRangeEnd},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:anchor", OOXML_ELEMENT_wordprocessingDrawing_anchor},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dataType", OOXML_ELEMENT_wordprocessingml_dataType},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveFrom", OOXML_ELEMENT_wordprocessingml_moveFrom},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:monthShort", OOXML_ELEMENT_wordprocessingml_monthShort},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:mailSubject", OOXML_ELEMENT_wordprocessingml_mailSubject},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:insideV", OOXML_ELEMENT_wordprocessingml_insideV},
@@ -457,63 +458,70 @@
       {"http://schemas.openxmlformats.org/drawingml/2006/main:hslClr", OOXML_ELEMENT_drawingml_hslClr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:personal", OOXML_ELEMENT_wordprocessingml_personal},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:charset", OOXML_ELEMENT_wordprocessingml_charset},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printFormsData", OOXML_ELEMENT_wordprocessingml_printFormsData},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveTo", OOXML_ELEMENT_wordprocessingml_moveTo},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:mathPr", OOXML_ELEMENT_math_mathPr},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:align", OOXML_ELEMENT_wordprocessingDrawing_align},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlInsRangeStart", OOXML_ELEMENT_wordprocessingml_customXmlInsRangeStart},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marTop", OOXML_ELEMENT_wordprocessingml_marTop},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:softHyphen", OOXML_ELEMENT_wordprocessingml_softHyphen},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:rMargin", OOXML_ELEMENT_math_rMargin},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useWord2002TableStyleRules", OOXML_ELEMENT_wordprocessingml_useWord2002TableStyleRules},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:documentProtection", OOXML_ELEMENT_wordprocessingml_documentProtection},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlInsRangeEnd", OOXML_ELEMENT_wordprocessingml_customXmlInsRangeEnd},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveToRangeStart", OOXML_ELEMENT_wordprocessingml_moveToRangeStart},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lnTo", OOXML_ELEMENT_drawingml_lnTo},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cellDel", OOXML_ELEMENT_wordprocessingml_cellDel},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:iCs", OOXML_ELEMENT_wordprocessingml_iCs},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:mathFont", OOXML_ELEMENT_math_mathFont},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:headerSource", OOXML_ELEMENT_wordprocessingml_headerSource},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gridSpan", OOXML_ELEMENT_wordprocessingml_gridSpan},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotVertAlignCellWithSp", OOXML_ELEMENT_wordprocessingml_doNotVertAlignCellWithSp},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:chExt", OOXML_ELEMENT_drawingml_chExt},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:dk2", OOXML_ELEMENT_drawingml_dk2},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pict", OOXML_ELEMENT_wordprocessingml_pict},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:styleLockQFSet", OOXML_ELEMENT_wordprocessingml_styleLockQFSet},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:connectString", OOXML_ELEMENT_wordprocessingml_connectString},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:noFill", OOXML_ELEMENT_drawingml_noFill},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:softHyphen", OOXML_ELEMENT_wordprocessingml_softHyphen},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useNormalStyleForList", OOXML_ELEMENT_wordprocessingml_useNormalStyleForList},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:moveToRangeEnd", OOXML_ELEMENT_wordprocessingml_moveToRangeEnd},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pBdr", OOXML_ELEMENT_wordprocessingml_pBdr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotTrackFormatting", OOXML_ELEMENT_wordprocessingml_doNotTrackFormatting},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rtlGutter", OOXML_ELEMENT_wordprocessingml_rtlGutter},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:num", OOXML_ELEMENT_math_num},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lsdException", OOXML_ELEMENT_wordprocessingml_lsdException},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:textAlignment", OOXML_ELEMENT_wordprocessingml_textAlignment},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:removePersonalInformation", OOXML_ELEMENT_wordprocessingml_removePersonalInformation},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:custClr", OOXML_ELEMENT_drawingml_custClr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cachedColBalance", OOXML_ELEMENT_wordprocessingml_cachedColBalance},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:grayscl", OOXML_ELEMENT_drawingml_grayscl},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:contextualSpacing", OOXML_ELEMENT_wordprocessingml_contextualSpacing},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:recipients", OOXML_ELEMENT_wordprocessingml_recipients},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveThroughXslt", OOXML_ELEMENT_wordprocessingml_saveThroughXslt},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:qFormat", OOXML_ELEMENT_wordprocessingml_qFormat},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:lumMod", OOXML_ELEMENT_drawingml_lumMod},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pageBreakBefore", OOXML_ELEMENT_wordprocessingml_pageBreakBefore},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sizeAuto", OOXML_ELEMENT_wordprocessingml_sizeAuto},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:attachedSchema", OOXML_ELEMENT_wordprocessingml_attachedSchema},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:divsChild", OOXML_ELEMENT_wordprocessingml_divsChild},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveSubsetFonts", OOXML_ELEMENT_wordprocessingml_saveSubsetFonts},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:position", OOXML_ELEMENT_wordprocessingml_position},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:column", OOXML_ELEMENT_wordprocessingml_column},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:permEnd", OOXML_ELEMENT_wordprocessingml_permEnd},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:listItem", OOXML_ELEMENT_wordprocessingml_listItem},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:font", OOXML_ELEMENT_wordprocessingml_font},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:type", OOXML_ELEMENT_wordprocessingml_type},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:types", OOXML_ELEMENT_wordprocessingml_types},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:eqArr", OOXML_ELEMENT_math_eqArr},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:minorFont", OOXML_ELEMENT_drawingml_minorFont},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fonts", OOXML_ELEMENT_wordprocessingml_fonts},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ftr", OOXML_ELEMENT_wordprocessingml_ftr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pgBorders", OOXML_ELEMENT_wordprocessingml_pgBorders},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:result", OOXML_ELEMENT_wordprocessingml_result},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:udl", OOXML_ELEMENT_wordprocessingml_udl},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:eastAsianLayout", OOXML_ELEMENT_wordprocessingml_eastAsianLayout},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:bar", OOXML_ELEMENT_math_bar},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:br", OOXML_ELEMENT_wordprocessingml_br},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tab", OOXML_ELEMENT_wordprocessingml_tab},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dropDownList", OOXML_ELEMENT_wordprocessingml_dropDownList},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rtlGutter", OOXML_ELEMENT_wordprocessingml_rtlGutter},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:moveTo", OOXML_ELEMENT_drawingml_moveTo},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numId", OOXML_ELEMENT_wordprocessingml_numId},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:subDoc", OOXML_ELEMENT_wordprocessingml_subDoc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:recipientData", OOXML_ELEMENT_wordprocessingml_recipientData},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bdr", OOXML_ELEMENT_wordprocessingml_bdr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footerReference", OOXML_ELEMENT_wordprocessingml_footerReference},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:lum", OOXML_ELEMENT_drawingml_lum},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:sym", OOXML_ELEMENT_drawingml_sym},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bar", OOXML_ELEMENT_wordprocessingml_bar},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:graphicData", OOXML_ELEMENT_drawingml_graphicData},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:placeholder", OOXML_ELEMENT_wordprocessingml_placeholder},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:layoutTableRowsApart", OOXML_ELEMENT_wordprocessingml_layoutTableRowsApart},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:kern", OOXML_ELEMENT_wordprocessingml_kern},
@@ -521,23 +529,25 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:titlePg", OOXML_ELEMENT_wordprocessingml_titlePg},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footnote", OOXML_ELEMENT_wordprocessingml_footnote},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footnotes", OOXML_ELEMENT_wordprocessingml_footnotes},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:smallFrac", OOXML_ELEMENT_math_smallFrac},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:vertJc", OOXML_ELEMENT_math_vertJc},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:noFill", OOXML_ELEMENT_drawingml_noFill},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:entryMacro", OOXML_ELEMENT_wordprocessingml_entryMacro},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noProof", OOXML_ELEMENT_wordprocessingml_noProof},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:styleLockTheme", OOXML_ELEMENT_wordprocessingml_styleLockTheme},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footnotePr", OOXML_ELEMENT_wordprocessingml_footnotePr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblInd", OOXML_ELEMENT_wordprocessingml_tblInd},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotTrackFormatting", OOXML_ELEMENT_wordprocessingml_doNotTrackFormatting},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:delInstrText", OOXML_ELEMENT_wordprocessingml_delInstrText},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pgSz", OOXML_ELEMENT_wordprocessingml_pgSz},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defaultTableStyle", OOXML_ELEMENT_wordprocessingml_defaultTableStyle},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printFormsData", OOXML_ELEMENT_wordprocessingml_printFormsData},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gridAfter", OOXML_ELEMENT_wordprocessingml_gridAfter},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:naryPr", OOXML_ELEMENT_math_naryPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveXmlDataOnly", OOXML_ELEMENT_wordprocessingml_saveXmlDataOnly},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:maxDist", OOXML_ELEMENT_math_maxDist},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotVertAlignInTxbx", OOXML_ELEMENT_wordprocessingml_doNotVertAlignInTxbx},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:listSeparator", OOXML_ELEMENT_wordprocessingml_listSeparator},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:cellDel", OOXML_ELEMENT_wordprocessingml_cellDel},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:hideBot", OOXML_ELEMENT_math_hideBot},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveXmlDataOnly", OOXML_ELEMENT_wordprocessingml_saveXmlDataOnly},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:optimizeForBrowser", OOXML_ELEMENT_wordprocessingml_optimizeForBrowser},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:endnoteRef", OOXML_ELEMENT_wordprocessingml_endnoteRef},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveSubsetFonts", OOXML_ELEMENT_wordprocessingml_saveSubsetFonts},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:basedOn", OOXML_ELEMENT_wordprocessingml_basedOn},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sym", OOXML_ELEMENT_wordprocessingml_sym},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:lineTo", OOXML_ELEMENT_wordprocessingDrawing_lineTo},
@@ -548,6 +558,7 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:object", OOXML_ELEMENT_wordprocessingml_object},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlMoveToRangeEnd", OOXML_ELEMENT_wordprocessingml_customXmlMoveToRangeEnd},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:blend", OOXML_ELEMENT_drawingml_blend},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:clrScheme", OOXML_ELEMENT_drawingml_clrScheme},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lang", OOXML_ELEMENT_wordprocessingml_lang},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:effect", OOXML_ELEMENT_wordprocessingml_effect},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:permStart", OOXML_ELEMENT_wordprocessingml_permStart},
@@ -556,6 +567,7 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:frame", OOXML_ELEMENT_wordprocessingml_frame},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:frameLayout", OOXML_ELEMENT_wordprocessingml_frameLayout},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:matchSrc", OOXML_ELEMENT_wordprocessingml_matchSrc},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marRight", OOXML_ELEMENT_wordprocessingml_marRight},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:format", OOXML_ELEMENT_wordprocessingml_format},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:guid", OOXML_ELEMENT_wordprocessingml_guid},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sepChr", OOXML_ELEMENT_math_sepChr},
@@ -570,18 +582,22 @@
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lnNumType", OOXML_ELEMENT_wordprocessingml_lnNumType},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ulTrailSpace", OOXML_ELEMENT_wordprocessingml_ulTrailSpace},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numStart", OOXML_ELEMENT_wordprocessingml_numStart},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:unhideWhenUsed", OOXML_ELEMENT_wordprocessingml_unhideWhenUsed},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblW", OOXML_ELEMENT_wordprocessingml_tblW},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:inline", OOXML_ELEMENT_wordprocessingDrawing_inline},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:smallFrac", OOXML_ELEMENT_math_smallFrac},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:lMargin", OOXML_ELEMENT_math_lMargin},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hidden", OOXML_ELEMENT_wordprocessingml_hidden},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:unhideWhenUsed", OOXML_ELEMENT_wordprocessingml_unhideWhenUsed},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:exitMacro", OOXML_ELEMENT_wordprocessingml_exitMacro},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:mailAsAttachment", OOXML_ELEMENT_wordprocessingml_mailAsAttachment},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:objDist", OOXML_ELEMENT_math_objDist},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:fName", OOXML_ELEMENT_math_fName},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaMod", OOXML_ELEMENT_drawingml_alphaMod},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:abstractNumId", OOXML_ELEMENT_wordprocessingml_abstractNumId},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dynamicAddress", OOXML_ELEMENT_wordprocessingml_dynamicAddress},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:div", OOXML_ELEMENT_wordprocessingml_div},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:subDoc", OOXML_ELEMENT_wordprocessingml_subDoc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marLeft", OOXML_ELEMENT_wordprocessingml_marLeft},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:graphicData", OOXML_ELEMENT_drawingml_graphicData},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:removePersonalInformation", OOXML_ELEMENT_wordprocessingml_removePersonalInformation},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noExtraLineSpacing", OOXML_ELEMENT_wordprocessingml_noExtraLineSpacing},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ilvl", OOXML_ELEMENT_wordprocessingml_ilvl},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:formsDesign", OOXML_ELEMENT_wordprocessingml_formsDesign},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:transp", OOXML_ELEMENT_math_transp},
@@ -591,10 +607,11 @@
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:baseJc", OOXML_ELEMENT_math_baseJc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlMoveFromRangeStart", OOXML_ELEMENT_wordprocessingml_customXmlMoveFromRangeStart},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:softEdge", OOXML_ELEMENT_drawingml_softEdge},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblGrid", OOXML_ELEMENT_wordprocessingml_tblGrid},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:styleLink", OOXML_ELEMENT_wordprocessingml_styleLink},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:mwSmallCaps", OOXML_ELEMENT_wordprocessingml_mwSmallCaps},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:hue", OOXML_ELEMENT_drawingml_hue},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:txbxContent", OOXML_ELEMENT_wordprocessingml_txbxContent},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:semiHidden", OOXML_ELEMENT_wordprocessingml_semiHidden},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlMoveToRangeStart", OOXML_ELEMENT_wordprocessingml_customXmlMoveToRangeStart},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:gsLst", OOXML_ELEMENT_drawingml_gsLst},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:customXmlMoveFromRangeEnd", OOXML_ELEMENT_wordprocessingml_customXmlMoveFromRangeEnd},
@@ -602,429 +619,446 @@
       {"http://schemas.openxmlformats.org/schemaLibrary/2006/main:schema", OOXML_ELEMENT_schemaLibrary_schema},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:monthLong", OOXML_ELEMENT_wordprocessingml_monthLong},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tbl", OOXML_ELEMENT_wordprocessingml_tbl},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:xfrm", OOXML_ELEMENT_drawingml_xfrm},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marRight", OOXML_ELEMENT_wordprocessingml_marRight},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:richText", OOXML_ELEMENT_wordprocessingml_richText},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:degHide", OOXML_ELEMENT_math_degHide},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblGridChange", OOXML_ELEMENT_wordprocessingml_tblGridChange},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:abstractNum", OOXML_ELEMENT_wordprocessingml_abstractNum},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:gdLst", OOXML_ELEMENT_drawingml_gdLst},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:strikeTLBR", OOXML_ELEMENT_math_strikeTLBR},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlText", OOXML_ELEMENT_wordprocessingml_lvlText},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:semiHidden", OOXML_ELEMENT_wordprocessingml_semiHidden},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sizeAuto", OOXML_ELEMENT_wordprocessingml_sizeAuto},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblInd", OOXML_ELEMENT_wordprocessingml_tblInd},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gridCol", OOXML_ELEMENT_wordprocessingml_gridCol},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoSpaceDN", OOXML_ELEMENT_wordprocessingml_autoSpaceDN},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:strike", OOXML_ELEMENT_wordprocessingml_strike},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:hueMod", OOXML_ELEMENT_drawingml_hueMod},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:sx", OOXML_ELEMENT_drawingml_sx},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tl2br", OOXML_ELEMENT_wordprocessingml_tl2br},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:themeFontLang", OOXML_ELEMENT_wordprocessingml_themeFontLang},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:degHide", OOXML_ELEMENT_math_degHide},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:strikeBLTR", OOXML_ELEMENT_math_strikeBLTR},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressAutoHyphens", OOXML_ELEMENT_wordprocessingml_suppressAutoHyphens},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblGrid", OOXML_ELEMENT_wordprocessingml_tblGrid},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:vertJc", OOXML_ELEMENT_math_vertJc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblBorders", OOXML_ELEMENT_wordprocessingml_tblBorders},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hps", OOXML_ELEMENT_wordprocessingml_hps},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:fName", OOXML_ELEMENT_math_fName},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:isLgl", OOXML_ELEMENT_wordprocessingml_isLgl},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:active", OOXML_ELEMENT_wordprocessingml_active},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:invGamma", OOXML_ELEMENT_drawingml_invGamma},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:allowSpaceOfSameStyleInTable", OOXML_ELEMENT_wordprocessingml_allowSpaceOfSameStyleInTable},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hideGrammaticalErrors", OOXML_ELEMENT_wordprocessingml_hideGrammaticalErrors},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:outline", OOXML_ELEMENT_wordprocessingml_outline},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:reflection", OOXML_ELEMENT_drawingml_reflection},
       {"http://schemas.openxmlformats.org/drawingml/2006/picture:spPr", OOXML_ELEMENT_picture_spPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:multiLevelType", OOXML_ELEMENT_wordprocessingml_multiLevelType},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:updateFields", OOXML_ELEMENT_wordprocessingml_updateFields},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:revisionView", OOXML_ELEMENT_wordprocessingml_revisionView},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoCaptions", OOXML_ELEMENT_wordprocessingml_autoCaptions},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblGridChange", OOXML_ELEMENT_wordprocessingml_tblGridChange},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlJc", OOXML_ELEMENT_wordprocessingml_lvlJc},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:objDist", OOXML_ELEMENT_math_objDist},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lsdException", OOXML_ELEMENT_wordprocessingml_lsdException},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:enabled", OOXML_ELEMENT_wordprocessingml_enabled},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:borderBoxPr", OOXML_ELEMENT_math_borderBoxPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numFmt", OOXML_ELEMENT_wordprocessingml_numFmt},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uiCompat97To2003", OOXML_ELEMENT_wordprocessingml_uiCompat97To2003},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressLineNumbers", OOXML_ELEMENT_wordprocessingml_suppressLineNumbers},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:phant", OOXML_ELEMENT_math_phant},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:alwaysMergeEmptyNamespace", OOXML_ELEMENT_wordprocessingml_alwaysMergeEmptyNamespace},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:shapeLayoutLikeWW8", OOXML_ELEMENT_wordprocessingml_shapeLayoutLikeWW8},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:activeRecord", OOXML_ELEMENT_wordprocessingml_activeRecord},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:graphicFrameLocks", OOXML_ELEMENT_drawingml_graphicFrameLocks},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressSpacingAtTopOfPage", OOXML_ELEMENT_wordprocessingml_suppressSpacingAtTopOfPage},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:u", OOXML_ELEMENT_wordprocessingml_u},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoFormatOverride", OOXML_ELEMENT_wordprocessingml_autoFormatOverride},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numRestart", OOXML_ELEMENT_wordprocessingml_numRestart},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoCaption", OOXML_ELEMENT_wordprocessingml_autoCaption},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gridAfter", OOXML_ELEMENT_wordprocessingml_gridAfter},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:clrRepl", OOXML_ELEMENT_drawingml_clrRepl},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:clrSchemeMapping", OOXML_ELEMENT_wordprocessingml_clrSchemeMapping},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:posOffset", OOXML_ELEMENT_wordprocessingDrawing_posOffset},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvl", OOXML_ELEMENT_wordprocessingml_lvl},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:webSettings", OOXML_ELEMENT_wordprocessingml_webSettings},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noLineBreaksBefore", OOXML_ELEMENT_wordprocessingml_noLineBreaksBefore},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblStyle", OOXML_ELEMENT_wordprocessingml_tblStyle},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hideGrammaticalErrors", OOXML_ELEMENT_wordprocessingml_hideGrammaticalErrors},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noLineBreaksAfter", OOXML_ELEMENT_wordprocessingml_noLineBreaksAfter},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoFormatOverride", OOXML_ELEMENT_wordprocessingml_autoFormatOverride},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoRedefine", OOXML_ELEMENT_wordprocessingml_autoRedefine},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useAnsiKerningPairs", OOXML_ELEMENT_wordprocessingml_useAnsiKerningPairs},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:yearShort", OOXML_ELEMENT_wordprocessingml_yearShort},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblStylePr", OOXML_ELEMENT_wordprocessingml_tblStylePr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:legacy", OOXML_ELEMENT_wordprocessingml_legacy},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:snapToGrid", OOXML_ELEMENT_wordprocessingml_snapToGrid},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:documentType", OOXML_ELEMENT_wordprocessingml_documentType},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaOutset", OOXML_ELEMENT_drawingml_alphaOutset},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:stretch", OOXML_ELEMENT_drawingml_stretch},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:trackRevisions", OOXML_ELEMENT_wordprocessingml_trackRevisions},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:strikeBLTR", OOXML_ELEMENT_math_strikeBLTR},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:framesetSplitbar", OOXML_ELEMENT_wordprocessingml_framesetSplitbar},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:glow", OOXML_ELEMENT_drawingml_glow},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:comboBox", OOXML_ELEMENT_wordprocessingml_comboBox},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useFELayout", OOXML_ELEMENT_wordprocessingml_useFELayout},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:cGp", OOXML_ELEMENT_math_cGp},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:spacing", OOXML_ELEMENT_wordprocessingml_spacing},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useWord97LineBreakRules", OOXML_ELEMENT_wordprocessingml_useWord97LineBreakRules},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sPre", OOXML_ELEMENT_math_sPre},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:cNvGraphicFramePr", OOXML_ELEMENT_wordprocessingDrawing_cNvGraphicFramePr},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:div", OOXML_ELEMENT_wordprocessingml_div},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:drawingGridVerticalOrigin", OOXML_ELEMENT_wordprocessingml_drawingGridVerticalOrigin},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:readModeInkLockDown", OOXML_ELEMENT_wordprocessingml_readModeInkLockDown},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:rPr", OOXML_ELEMENT_math_rPr},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:gradFill", OOXML_ELEMENT_drawingml_gradFill},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:prstTxWarp", OOXML_ELEMENT_drawingml_prstTxWarp},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numFmt", OOXML_ELEMENT_wordprocessingml_numFmt},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:dPr", OOXML_ELEMENT_math_dPr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sPrePr", OOXML_ELEMENT_math_sPrePr},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:positionV", OOXML_ELEMENT_wordprocessingDrawing_positionV},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sectPr", OOXML_ELEMENT_wordprocessingml_sectPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rPr", OOXML_ELEMENT_wordprocessingml_rPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:allowSpaceOfSameStyleInTable", OOXML_ELEMENT_wordprocessingml_allowSpaceOfSameStyleInTable},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:helpText", OOXML_ELEMENT_wordprocessingml_helpText},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:mailAsAttachment", OOXML_ELEMENT_wordprocessingml_mailAsAttachment},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:allowPNG", OOXML_ELEMENT_wordprocessingml_allowPNG},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marTop", OOXML_ELEMENT_wordprocessingml_marTop},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:graphicFrameLocks", OOXML_ELEMENT_drawingml_graphicFrameLocks},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dayLong", OOXML_ELEMENT_wordprocessingml_dayLong},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fitText", OOXML_ELEMENT_wordprocessingml_fitText},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:convMailMergeEsc", OOXML_ELEMENT_wordprocessingml_convMailMergeEsc},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaFloor", OOXML_ELEMENT_drawingml_alphaFloor},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoSpaceLikeWord95", OOXML_ELEMENT_wordprocessingml_autoSpaceLikeWord95},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:radPr", OOXML_ELEMENT_math_radPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numRestart", OOXML_ELEMENT_wordprocessingml_numRestart},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoSpaceLikeWord95", OOXML_ELEMENT_wordprocessingml_autoSpaceLikeWord95},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPart", OOXML_ELEMENT_wordprocessingml_docPart},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:topLinePunct", OOXML_ELEMENT_wordprocessingml_topLinePunct},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sdtPr", OOXML_ELEMENT_wordprocessingml_sdtPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartList", OOXML_ELEMENT_wordprocessingml_docPartList},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:cGp", OOXML_ELEMENT_math_cGp},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docParts", OOXML_ELEMENT_wordprocessingml_docParts},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:type", OOXML_ELEMENT_math_type},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressSpacingAtTopOfPage", OOXML_ELEMENT_wordprocessingml_suppressSpacingAtTopOfPage},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:category", OOXML_ELEMENT_wordprocessingml_category},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartPr", OOXML_ELEMENT_wordprocessingml_docPartPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartObj", OOXML_ELEMENT_wordprocessingml_docPartObj},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:specVanish", OOXML_ELEMENT_wordprocessingml_specVanish},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bCs", OOXML_ELEMENT_wordprocessingml_bCs},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bordersDoNotSurroundFooter", OOXML_ELEMENT_wordprocessingml_bordersDoNotSurroundFooter},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fldData", OOXML_ELEMENT_wordprocessingml_fldData},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartObj", OOXML_ELEMENT_wordprocessingml_docPartObj},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useSingleBorderforContiguousCells", OOXML_ELEMENT_wordprocessingml_useSingleBorderforContiguousCells},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:noPunctuationKerning", OOXML_ELEMENT_wordprocessingml_noPunctuationKerning},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:rSp", OOXML_ELEMENT_math_rSp},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoRedefine", OOXML_ELEMENT_wordprocessingml_autoRedefine},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:subFontBySize", OOXML_ELEMENT_wordprocessingml_subFontBySize},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:quadBezTo", OOXML_ELEMENT_drawingml_quadBezTo},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:saveThroughXslt", OOXML_ELEMENT_wordprocessingml_saveThroughXslt},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:fillRect", OOXML_ELEMENT_drawingml_fillRect},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:preSp", OOXML_ELEMENT_math_preSp},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:schemeClr", OOXML_ELEMENT_drawingml_schemeClr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:temporary", OOXML_ELEMENT_wordprocessingml_temporary},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblCellMar", OOXML_ELEMENT_wordprocessingml_tblCellMar},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:allowPNG", OOXML_ELEMENT_wordprocessingml_allowPNG},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useFELayout", OOXML_ELEMENT_wordprocessingml_useFELayout},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:selectFldWithFirstOrLastChar", OOXML_ELEMENT_wordprocessingml_selectFldWithFirstOrLastChar},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:mPr", OOXML_ELEMENT_math_mPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tr2bl", OOXML_ELEMENT_wordprocessingml_tr2bl},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:cNvGraphicFramePr", OOXML_ELEMENT_wordprocessingDrawing_cNvGraphicFramePr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hMerge", OOXML_ELEMENT_wordprocessingml_hMerge},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wAfter", OOXML_ELEMENT_wordprocessingml_wAfter},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hideSpellingErrors", OOXML_ELEMENT_wordprocessingml_hideSpellingErrors},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoSpaceDN", OOXML_ELEMENT_wordprocessingml_autoSpaceDN},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaOutset", OOXML_ELEMENT_drawingml_alphaOutset},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:proofState", OOXML_ELEMENT_wordprocessingml_proofState},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useXSLTWhenSaving", OOXML_ELEMENT_wordprocessingml_useXSLTWhenSaving},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartUnique", OOXML_ELEMENT_wordprocessingml_docPartUnique},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:active", OOXML_ELEMENT_wordprocessingml_active},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:keepNext", OOXML_ELEMENT_wordprocessingml_keepNext},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:invGamma", OOXML_ELEMENT_drawingml_invGamma},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:proofErr", OOXML_ELEMENT_wordprocessingml_proofErr},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useXSLTWhenSaving", OOXML_ELEMENT_wordprocessingml_useXSLTWhenSaving},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:opEmu", OOXML_ELEMENT_math_opEmu},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:insideH", OOXML_ELEMENT_wordprocessingml_insideH},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlJc", OOXML_ELEMENT_wordprocessingml_lvlJc},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:doNotUseHTMLParagraphAutoSpacing", OOXML_ELEMENT_wordprocessingml_doNotUseHTMLParagraphAutoSpacing},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:flatBorders", OOXML_ELEMENT_wordprocessingml_flatBorders},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printColBlack", OOXML_ELEMENT_wordprocessingml_printColBlack},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:forgetLastTabAlignment", OOXML_ELEMENT_wordprocessingml_forgetLastTabAlignment},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:outlineLvl", OOXML_ELEMENT_wordprocessingml_outlineLvl},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:picture", OOXML_ELEMENT_wordprocessingml_picture},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:ahLst", OOXML_ELEMENT_drawingml_ahLst},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:wrapIndent", OOXML_ELEMENT_math_wrapIndent},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:naryLim", OOXML_ELEMENT_math_naryLim},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:box", OOXML_ELEMENT_math_box},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:shapeDefaults", OOXML_ELEMENT_wordprocessingml_shapeDefaults},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaFloor", OOXML_ELEMENT_drawingml_alphaFloor},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:pattFill", OOXML_ELEMENT_drawingml_pattFill},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:activeRecord", OOXML_ELEMENT_wordprocessingml_activeRecord},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:uLn", OOXML_ELEMENT_drawingml_uLn},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:altChunkPr", OOXML_ELEMENT_wordprocessingml_altChunkPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:insideH", OOXML_ELEMENT_wordprocessingml_insideH},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:intLim", OOXML_ELEMENT_math_intLim},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoSpaceDE", OOXML_ELEMENT_wordprocessingml_autoSpaceDE},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useAltKinsokuLineBreakRules", OOXML_ELEMENT_wordprocessingml_useAltKinsokuLineBreakRules},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoHyphenation", OOXML_ELEMENT_wordprocessingml_autoHyphenation},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wordWrap", OOXML_ELEMENT_wordprocessingml_wordWrap},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:cSp", OOXML_ELEMENT_math_cSp},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vMerge", OOXML_ELEMENT_wordprocessingml_vMerge},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvl", OOXML_ELEMENT_wordprocessingml_lvl},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:grpFill", OOXML_ELEMENT_drawingml_grpFill},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:borderBox", OOXML_ELEMENT_math_borderBox},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bordersDoNotSurroundFooter", OOXML_ELEMENT_wordprocessingml_bordersDoNotSurroundFooter},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:xfrm", OOXML_ELEMENT_drawingml_xfrm},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:chOff", OOXML_ELEMENT_drawingml_chOff},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:subFontBySize", OOXML_ELEMENT_wordprocessingml_subFontBySize},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hpsBaseText", OOXML_ELEMENT_wordprocessingml_hpsBaseText},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lineWrapLikeWord6", OOXML_ELEMENT_wordprocessingml_lineWrapLikeWord6},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autoHyphenation", OOXML_ELEMENT_wordprocessingml_autoHyphenation},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rPrDefault", OOXML_ELEMENT_wordprocessingml_rPrDefault},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fieldMapData", OOXML_ELEMENT_wordprocessingml_fieldMapData},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:activeWritingStyle", OOXML_ELEMENT_wordprocessingml_activeWritingStyle},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sSupPr", OOXML_ELEMENT_math_sSupPr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:mcPr", OOXML_ELEMENT_math_mcPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gallery", OOXML_ELEMENT_wordprocessingml_gallery},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:postSp", OOXML_ELEMENT_math_postSp},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rStyle", OOXML_ELEMENT_wordprocessingml_rStyle},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:avLst", OOXML_ELEMENT_drawingml_avLst},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:annotationRef", OOXML_ELEMENT_wordprocessingml_annotationRef},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblStyleColBandSize", OOXML_ELEMENT_wordprocessingml_tblStyleColBandSize},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:accPr", OOXML_ELEMENT_math_accPr},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:fill", OOXML_ELEMENT_drawingml_fill},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fldData", OOXML_ELEMENT_wordprocessingml_fldData},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:shadow", OOXML_ELEMENT_wordprocessingml_shadow},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:showXMLTags", OOXML_ELEMENT_wordprocessingml_showXMLTags},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:removeDateAndTime", OOXML_ELEMENT_wordprocessingml_removeDateAndTime},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:drawingGridHorizontalOrigin", OOXML_ELEMENT_wordprocessingml_drawingGridHorizontalOrigin},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:keepNext", OOXML_ELEMENT_wordprocessingml_keepNext},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useAnsiKerningPairs", OOXML_ELEMENT_wordprocessingml_useAnsiKerningPairs},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartUnique", OOXML_ELEMENT_wordprocessingml_docPartUnique},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:strikeTLBR", OOXML_ELEMENT_math_strikeTLBR},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:alignTablesRowByRow", OOXML_ELEMENT_wordprocessingml_alignTablesRowByRow},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:showXMLTags", OOXML_ELEMENT_wordprocessingml_showXMLTags},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:drawing", OOXML_ELEMENT_wordprocessingml_drawing},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vertAlign", OOXML_ELEMENT_wordprocessingml_vertAlign},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:uFill", OOXML_ELEMENT_drawingml_uFill},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:spaceForUL", OOXML_ELEMENT_wordprocessingml_spaceForUL},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:bgClr", OOXML_ELEMENT_drawingml_bgClr},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:sy", OOXML_ELEMENT_drawingml_sy},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:defaultTabStop", OOXML_ELEMENT_wordprocessingml_defaultTabStop},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:fgClr", OOXML_ELEMENT_drawingml_fgClr},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:wrapTight", OOXML_ELEMENT_wordprocessingDrawing_wrapTight},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:convMailMergeEsc", OOXML_ELEMENT_wordprocessingml_convMailMergeEsc},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:blue", OOXML_ELEMENT_drawingml_blue},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:wrapNone", OOXML_ELEMENT_wordprocessingDrawing_wrapNone},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:wrapSquare", OOXML_ELEMENT_wordprocessingDrawing_wrapSquare},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:decimalSymbol", OOXML_ELEMENT_wordprocessingml_decimalSymbol},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:blur", OOXML_ELEMENT_drawingml_blur},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:effect", OOXML_ELEMENT_drawingml_effect},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:removeDateAndTime", OOXML_ELEMENT_wordprocessingml_removeDateAndTime},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:fmtScheme", OOXML_ELEMENT_drawingml_fmtScheme},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pgNumType", OOXML_ELEMENT_wordprocessingml_pgNumType},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:layoutRawTableWidth", OOXML_ELEMENT_wordprocessingml_layoutRawTableWidth},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vertAlign", OOXML_ELEMENT_wordprocessingml_vertAlign},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:cGpRule", OOXML_ELEMENT_math_cGpRule},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:characterSpacingControl", OOXML_ELEMENT_wordprocessingml_characterSpacingControl},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:spacingInWholePoints", OOXML_ELEMENT_wordprocessingml_spacingInWholePoints},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sup", OOXML_ELEMENT_math_sup},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:solidFill", OOXML_ELEMENT_drawingml_solidFill},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:satOff", OOXML_ELEMENT_drawingml_satOff},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marH", OOXML_ELEMENT_wordprocessingml_marH},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:blueMod", OOXML_ELEMENT_drawingml_blueMod},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:plcHide", OOXML_ELEMENT_math_plcHide},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:redOff", OOXML_ELEMENT_drawingml_redOff},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:chOff", OOXML_ELEMENT_drawingml_chOff},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:hideRight", OOXML_ELEMENT_math_hideRight},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:annotationRef", OOXML_ELEMENT_wordprocessingml_annotationRef},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:fontScheme", OOXML_ELEMENT_drawingml_fontScheme},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblHeader", OOXML_ELEMENT_wordprocessingml_tblHeader},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:funcPr", OOXML_ELEMENT_math_funcPr},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:inv", OOXML_ELEMENT_drawingml_inv},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:behaviors", OOXML_ELEMENT_wordprocessingml_behaviors},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:behavior", OOXML_ELEMENT_wordprocessingml_behavior},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:plcHide", OOXML_ELEMENT_math_plcHide},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:comboBox", OOXML_ELEMENT_wordprocessingml_comboBox},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fHdr", OOXML_ELEMENT_wordprocessingml_fHdr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:shp", OOXML_ELEMENT_math_shp},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rPrDefault", OOXML_ELEMENT_wordprocessingml_rPrDefault},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:listEntry", OOXML_ELEMENT_wordprocessingml_listEntry},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:wrapPolygon", OOXML_ELEMENT_wordprocessingDrawing_wrapPolygon},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:richText", OOXML_ELEMENT_wordprocessingml_richText},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:prstTxWarp", OOXML_ELEMENT_drawingml_prstTxWarp},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:printFractionalCharacterWidth", OOXML_ELEMENT_wordprocessingml_printFractionalCharacterWidth},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblHeader", OOXML_ELEMENT_wordprocessingml_tblHeader},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:sectPrChange", OOXML_ELEMENT_wordprocessingml_sectPrChange},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:linkedToFile", OOXML_ELEMENT_wordprocessingml_linkedToFile},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:overflowPunct", OOXML_ELEMENT_wordprocessingml_overflowPunct},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressOverlap", OOXML_ELEMENT_wordprocessingml_suppressOverlap},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:argPr", OOXML_ELEMENT_math_argPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fHdr", OOXML_ELEMENT_wordprocessingml_fHdr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlRestart", OOXML_ELEMENT_wordprocessingml_lvlRestart},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:marH", OOXML_ELEMENT_wordprocessingml_marH},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:limUpp", OOXML_ELEMENT_math_limUpp},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bordersDoNotSurroundHeader", OOXML_ELEMENT_wordprocessingml_bordersDoNotSurroundHeader},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:swapBordersFacingPages", OOXML_ELEMENT_wordprocessingml_swapBordersFacingPages},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uniqueTag", OOXML_ELEMENT_wordprocessingml_uniqueTag},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:oMath", OOXML_ELEMENT_wordprocessingml_oMath},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wAfter", OOXML_ELEMENT_wordprocessingml_wAfter},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:w", OOXML_ELEMENT_wordprocessingml_w},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:limUpp", OOXML_ELEMENT_math_limUpp},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pgNum", OOXML_ELEMENT_wordprocessingml_pgNum},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numIdMacAtCleanup", OOXML_ELEMENT_wordprocessingml_numIdMacAtCleanup},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:rSpRule", OOXML_ELEMENT_math_rSpRule},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:lnStyleLst", OOXML_ELEMENT_drawingml_lnStyleLst},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sty", OOXML_ELEMENT_math_sty},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:picLocks", OOXML_ELEMENT_drawingml_picLocks},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bordersDoNotSurroundHeader", OOXML_ELEMENT_wordprocessingml_bordersDoNotSurroundHeader},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vMerge", OOXML_ELEMENT_wordprocessingml_vMerge},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:func", OOXML_ELEMENT_math_func},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:oMathParaPr", OOXML_ELEMENT_math_oMathParaPr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:f", OOXML_ELEMENT_math_f},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:checkErrors", OOXML_ELEMENT_wordprocessingml_checkErrors},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:solidFill", OOXML_ELEMENT_drawingml_solidFill},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:multiLevelType", OOXML_ELEMENT_wordprocessingml_multiLevelType},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uiCompat97To2003", OOXML_ELEMENT_wordprocessingml_uiCompat97To2003},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:begChr", OOXML_ELEMENT_math_begChr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:interSp", OOXML_ELEMENT_math_interSp},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:oMathPara", OOXML_ELEMENT_math_oMathPara},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:checked", OOXML_ELEMENT_wordprocessingml_checked},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:maxLength", OOXML_ELEMENT_wordprocessingml_maxLength},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vanish", OOXML_ELEMENT_wordprocessingml_vanish},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:splitPgBreakAndParaMark", OOXML_ELEMENT_wordprocessingml_splitPgBreakAndParaMark},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:activeWritingStyle", OOXML_ELEMENT_wordprocessingml_activeWritingStyle},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:intraSp", OOXML_ELEMENT_math_intraSp},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:b", OOXML_ELEMENT_wordprocessingml_b},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:useAltKinsokuLineBreakRules", OOXML_ELEMENT_wordprocessingml_useAltKinsokuLineBreakRules},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:avLst", OOXML_ELEMENT_drawingml_avLst},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:growAutofit", OOXML_ELEMENT_wordprocessingml_growAutofit},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:kinsoku", OOXML_ELEMENT_wordprocessingml_kinsoku},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hpsRaise", OOXML_ELEMENT_wordprocessingml_hpsRaise},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:summaryLength", OOXML_ELEMENT_wordprocessingml_summaryLength},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:between", OOXML_ELEMENT_wordprocessingml_between},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:blip", OOXML_ELEMENT_drawingml_blip},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:linkStyles", OOXML_ELEMENT_wordprocessingml_linkStyles},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:limLoc", OOXML_ELEMENT_math_limLoc},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:nary", OOXML_ELEMENT_math_nary},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:strikeH", OOXML_ELEMENT_math_strikeH},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlRestart", OOXML_ELEMENT_wordprocessingml_lvlRestart},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pixelsPerInch", OOXML_ELEMENT_wordprocessingml_pixelsPerInch},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rubyBase", OOXML_ELEMENT_wordprocessingml_rubyBase},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:cGpRule", OOXML_ELEMENT_math_cGpRule},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bidi", OOXML_ELEMENT_wordprocessingml_bidi},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ffData", OOXML_ELEMENT_wordprocessingml_ffData},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footnoteReference", OOXML_ELEMENT_wordprocessingml_footnoteReference},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:showBreaksInFrames", OOXML_ELEMENT_wordprocessingml_showBreaksInFrames},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:rSpRule", OOXML_ELEMENT_math_rSpRule},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uniqueTag", OOXML_ELEMENT_wordprocessingml_uniqueTag},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pPr", OOXML_ELEMENT_wordprocessingml_pPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fldSimple", OOXML_ELEMENT_wordprocessingml_fldSimple},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:txbxContent", OOXML_ELEMENT_wordprocessingml_txbxContent},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:clickAndTypeStyle", OOXML_ELEMENT_wordprocessingml_clickAndTypeStyle},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblLayout", OOXML_ELEMENT_wordprocessingml_tblLayout},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bidiVisual", OOXML_ELEMENT_wordprocessingml_bidiVisual},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:relyOnVML", OOXML_ELEMENT_wordprocessingml_relyOnVML},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblCellSpacing", OOXML_ELEMENT_wordprocessingml_tblCellSpacing},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bookmarkStart", OOXML_ELEMENT_wordprocessingml_bookmarkStart},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:hideLeft", OOXML_ELEMENT_math_hideLeft},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footnoteLayoutLikeWW8", OOXML_ELEMENT_wordprocessingml_footnoteLayoutLikeWW8},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:borderBox", OOXML_ELEMENT_math_borderBox},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:drawingGridHorizontalSpacing", OOXML_ELEMENT_wordprocessingml_drawingGridHorizontalSpacing},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:strikeH", OOXML_ELEMENT_math_strikeH},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:helpText", OOXML_ELEMENT_wordprocessingml_helpText},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:relOff", OOXML_ELEMENT_drawingml_relOff},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sSubPr", OOXML_ELEMENT_math_sSubPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bookmarkEnd", OOXML_ELEMENT_wordprocessingml_bookmarkEnd},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressBottomSpacing", OOXML_ELEMENT_wordprocessingml_suppressBottomSpacing},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fitText", OOXML_ELEMENT_wordprocessingml_fitText},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:ahPolar", OOXML_ELEMENT_drawingml_ahPolar},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:behaviors", OOXML_ELEMENT_wordprocessingml_behaviors},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:supHide", OOXML_ELEMENT_math_supHide},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:hlink", OOXML_ELEMENT_drawingml_hlink},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:highlight", OOXML_ELEMENT_wordprocessingml_highlight},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hpsRaise", OOXML_ELEMENT_wordprocessingml_hpsRaise},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:behavior", OOXML_ELEMENT_wordprocessingml_behavior},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numbering", OOXML_ELEMENT_wordprocessingml_numbering},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlOverride", OOXML_ELEMENT_wordprocessingml_lvlOverride},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:cubicBezTo", OOXML_ELEMENT_drawingml_cubicBezTo},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numIdMacAtCleanup", OOXML_ELEMENT_wordprocessingml_numIdMacAtCleanup},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlText", OOXML_ELEMENT_wordprocessingml_lvlText},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:overflowPunct", OOXML_ELEMENT_wordprocessingml_overflowPunct},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:personalReply", OOXML_ELEMENT_wordprocessingml_personalReply},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:supHide", OOXML_ELEMENT_math_supHide},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numStyleLink", OOXML_ELEMENT_wordprocessingml_numStyleLink},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lock", OOXML_ELEMENT_wordprocessingml_lock},
-      {"http://schemas.openxmlformats.org/drawingml/2006/picture:cNvPr", OOXML_ELEMENT_picture_cNvPr},
-      {"http://schemas.openxmlformats.org/drawingml/2006/picture:blipFill", OOXML_ELEMENT_picture_blipFill},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:fillToRect", OOXML_ELEMENT_drawingml_fillToRect},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:webHidden", OOXML_ELEMENT_wordprocessingml_webHidden},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vanish", OOXML_ELEMENT_wordprocessingml_vanish},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:forgetLastTabAlignment", OOXML_ELEMENT_wordprocessingml_forgetLastTabAlignment},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:wrapTopAndBottom", OOXML_ELEMENT_wordprocessingDrawing_wrapTopAndBottom},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:relyOnVML", OOXML_ELEMENT_wordprocessingml_relyOnVML},
+      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:positionH", OOXML_ELEMENT_wordprocessingDrawing_positionH},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numPr", OOXML_ELEMENT_wordprocessingml_numPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:webHidden", OOXML_ELEMENT_wordprocessingml_webHidden},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sSup", OOXML_ELEMENT_math_sSup},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:applyBreakingRules", OOXML_ELEMENT_wordprocessingml_applyBreakingRules},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:hideTop", OOXML_ELEMENT_math_hideTop},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pPrDefault", OOXML_ELEMENT_wordprocessingml_pPrDefault},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:gutterAtTop", OOXML_ELEMENT_wordprocessingml_gutterAtTop},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:group", OOXML_ELEMENT_wordprocessingml_group},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:checkBox", OOXML_ELEMENT_wordprocessingml_checkBox},
-      {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:positionH", OOXML_ELEMENT_wordprocessingDrawing_positionH},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:noBreak", OOXML_ELEMENT_math_noBreak},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pStyle", OOXML_ELEMENT_wordprocessingml_pStyle},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:showBreaksInFrames", OOXML_ELEMENT_wordprocessingml_showBreaksInFrames},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wBefore", OOXML_ELEMENT_wordprocessingml_wBefore},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressTopSpacing", OOXML_ELEMENT_wordprocessingml_suppressTopSpacing},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:grow", OOXML_ELEMENT_math_grow},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:eqArrPr", OOXML_ELEMENT_math_eqArrPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:displayVerticalDrawingGridEvery", OOXML_ELEMENT_wordprocessingml_displayVerticalDrawingGridEvery},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:wrapRight", OOXML_ELEMENT_math_wrapRight},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:growAutofit", OOXML_ELEMENT_wordprocessingml_growAutofit},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wrapTrailSpaces", OOXML_ELEMENT_wordprocessingml_wrapTrailSpaces},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:textboxTightWrap", OOXML_ELEMENT_wordprocessingml_textboxTightWrap},
+      {"http://schemas.openxmlformats.org/drawingml/2006/picture:blipFill", OOXML_ELEMENT_picture_blipFill},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wpJustification", OOXML_ELEMENT_wordprocessingml_wpJustification},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:brkBin", OOXML_ELEMENT_math_brkBin},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:dirty", OOXML_ELEMENT_wordprocessingml_dirty},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:fillToRect", OOXML_ELEMENT_drawingml_fillToRect},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:blockQuote", OOXML_ELEMENT_wordprocessingml_blockQuote},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaModFix", OOXML_ELEMENT_drawingml_alphaModFix},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:uLnTx", OOXML_ELEMENT_drawingml_uLnTx},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rubyAlign", OOXML_ELEMENT_wordprocessingml_rubyAlign},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:drawingGridVerticalSpacing", OOXML_ELEMENT_wordprocessingml_drawingGridVerticalSpacing},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:inv", OOXML_ELEMENT_drawingml_inv},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblStyleRowBandSize", OOXML_ELEMENT_wordprocessingml_tblStyleRowBandSize},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:background", OOXML_ELEMENT_wordprocessingml_background},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:spLocks", OOXML_ELEMENT_drawingml_spLocks},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:uiPriority", OOXML_ELEMENT_wordprocessingml_uiPriority},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:groupChr", OOXML_ELEMENT_math_groupChr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:groupChrPr", OOXML_ELEMENT_math_groupChrPr},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaInv", OOXML_ELEMENT_drawingml_alphaInv},
+      {"http://schemas.openxmlformats.org/drawingml/2006/picture:cNvPr", OOXML_ELEMENT_picture_cNvPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:displayHangulFixedWidth", OOXML_ELEMENT_wordprocessingml_displayHangulFixedWidth},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pPrDefault", OOXML_ELEMENT_wordprocessingml_pPrDefault},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:cxnSpLocks", OOXML_ELEMENT_drawingml_cxnSpLocks},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:box", OOXML_ELEMENT_math_box},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:fPr", OOXML_ELEMENT_math_fPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:yearLong", OOXML_ELEMENT_wordprocessingml_yearLong},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hideMark", OOXML_ELEMENT_wordprocessingml_hideMark},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:barPr", OOXML_ELEMENT_math_barPr},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:eqArrPr", OOXML_ELEMENT_math_eqArrPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblPr", OOXML_ELEMENT_wordprocessingml_tblPr},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblPrChange", OOXML_ELEMENT_wordprocessingml_tblPrChange},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:savePreviewPicture", OOXML_ELEMENT_wordprocessingml_savePreviewPicture},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numberingChange", OOXML_ELEMENT_wordprocessingml_numberingChange},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vAlign", OOXML_ELEMENT_wordprocessingml_vAlign},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlOverride", OOXML_ELEMENT_wordprocessingml_lvlOverride},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaRepl", OOXML_ELEMENT_drawingml_alphaRepl},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:link", OOXML_ELEMENT_wordprocessingml_link},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartCategory", OOXML_ELEMENT_wordprocessingml_docPartCategory},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblPrExChange", OOXML_ELEMENT_wordprocessingml_tblPrExChange},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:subHide", OOXML_ELEMENT_math_subHide},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pitch", OOXML_ELEMENT_wordprocessingml_pitch},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hyphenationZone", OOXML_ELEMENT_wordprocessingml_hyphenationZone},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ptab", OOXML_ELEMENT_wordprocessingml_ptab},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:showEnvelope", OOXML_ELEMENT_wordprocessingml_showEnvelope},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:vAlign", OOXML_ELEMENT_wordprocessingml_vAlign},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:widowControl", OOXML_ELEMENT_wordprocessingml_widowControl},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:subHide", OOXML_ELEMENT_math_subHide},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:altChunk", OOXML_ELEMENT_wordprocessingml_altChunk},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:numPicBullet", OOXML_ELEMENT_wordprocessingml_numPicBullet},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblOverlap", OOXML_ELEMENT_wordprocessingml_tblOverlap},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:formProt", OOXML_ELEMENT_wordprocessingml_formProt},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:keepLines", OOXML_ELEMENT_wordprocessingml_keepLines},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressSpBfAfterPgBrk", OOXML_ELEMENT_wordprocessingml_suppressSpBfAfterPgBrk},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:fldChar", OOXML_ELEMENT_wordprocessingml_fldChar},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:evenAndOddHeaders", OOXML_ELEMENT_wordprocessingml_evenAndOddHeaders},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:adjustLineHeightInTable", OOXML_ELEMENT_wordprocessingml_adjustLineHeightInTable},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:usePrinterMetrics", OOXML_ELEMENT_wordprocessingml_usePrinterMetrics},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:show", OOXML_ELEMENT_math_show},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sub", OOXML_ELEMENT_math_sub},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:family", OOXML_ELEMENT_wordprocessingml_family},
-      {"http://schemas.openxmlformats.org/drawingml/2006/picture:cNvPicPr", OOXML_ELEMENT_picture_cNvPicPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:adjustLineHeightInTable", OOXML_ELEMENT_wordprocessingml_adjustLineHeightInTable},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaRepl", OOXML_ELEMENT_drawingml_alphaRepl},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:blipFill", OOXML_ELEMENT_drawingml_blipFill},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:ruby", OOXML_ELEMENT_wordprocessingml_ruby},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rubyAlign", OOXML_ELEMENT_wordprocessingml_rubyAlign},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:checkBox", OOXML_ELEMENT_wordprocessingml_checkBox},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suff", OOXML_ELEMENT_wordprocessingml_suff},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblOverlap", OOXML_ELEMENT_wordprocessingml_tblOverlap},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hyperlink", OOXML_ELEMENT_wordprocessingml_hyperlink},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:evenAndOddHeaders", OOXML_ELEMENT_wordprocessingml_evenAndOddHeaders},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:fillStyleLst", OOXML_ELEMENT_drawingml_fillStyleLst},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:autofitToFirstFixedWidthCell", OOXML_ELEMENT_wordprocessingml_autofitToFirstFixedWidthCell},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:query", OOXML_ELEMENT_wordprocessingml_query},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:cubicBezTo", OOXML_ELEMENT_drawingml_cubicBezTo},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaCeiling", OOXML_ELEMENT_drawingml_alphaCeiling},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:off", OOXML_ELEMENT_drawingml_off},
-      {"http://schemas.openxmlformats.org/officeDocument/2006/math:boxPr", OOXML_ELEMENT_math_boxPr},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:biLevel", OOXML_ELEMENT_drawingml_biLevel},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:displayBackgroundShape", OOXML_ELEMENT_wordprocessingml_displayBackgroundShape},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rPrChange", OOXML_ELEMENT_wordprocessingml_rPrChange},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bookFoldPrintingSheets", OOXML_ELEMENT_wordprocessingml_bookFoldPrintingSheets},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartGallery", OOXML_ELEMENT_wordprocessingml_docPartGallery},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblPrEx", OOXML_ELEMENT_wordprocessingml_tblPrEx},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:highlight", OOXML_ELEMENT_drawingml_highlight},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:limUppPr", OOXML_ELEMENT_math_limUppPr},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartGallery", OOXML_ELEMENT_wordprocessingml_docPartGallery},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:effectDag", OOXML_ELEMENT_drawingml_effectDag},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:alwaysShowPlaceholderText", OOXML_ELEMENT_wordprocessingml_alwaysShowPlaceholderText},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:brk", OOXML_ELEMENT_math_brk},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:cxnSpLocks", OOXML_ELEMENT_drawingml_cxnSpLocks},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:effectLst", OOXML_ELEMENT_drawingml_effectLst},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lastRenderedPageBreak", OOXML_ELEMENT_wordprocessingml_lastRenderedPageBreak},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:phantPr", OOXML_ELEMENT_math_phantPr},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:query", OOXML_ELEMENT_wordprocessingml_query},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:lumOff", OOXML_ELEMENT_drawingml_lumOff},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wpSpaceWidth", OOXML_ELEMENT_wordprocessingml_wpSpaceWidth},
+      {"http://schemas.openxmlformats.org/drawingml/2006/picture:cNvPicPr", OOXML_ELEMENT_picture_cNvPicPr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:dispDef", OOXML_ELEMENT_math_dispDef},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:hlinkHover", OOXML_ELEMENT_drawingml_hlinkHover},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:wrapTrailSpaces", OOXML_ELEMENT_wordprocessingml_wrapTrailSpaces},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bookFoldPrintingSheets", OOXML_ELEMENT_wordprocessingml_bookFoldPrintingSheets},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:showingPlcHdr", OOXML_ELEMENT_wordprocessingml_showingPlcHdr},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:grpSpLocks", OOXML_ELEMENT_drawingml_grpSpLocks},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:hdrShapeDefaults", OOXML_ELEMENT_wordprocessingml_hdrShapeDefaults},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:body", OOXML_ELEMENT_wordprocessingml_body},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:showingPlcHdr", OOXML_ELEMENT_wordprocessingml_showingPlcHdr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlPicBulletId", OOXML_ELEMENT_wordprocessingml_lvlPicBulletId},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblLook", OOXML_ELEMENT_wordprocessingml_tblLook},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:viewMergedData", OOXML_ELEMENT_wordprocessingml_viewMergedData},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lastRenderedPageBreak", OOXML_ELEMENT_wordprocessingml_lastRenderedPageBreak},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:effectDag", OOXML_ELEMENT_drawingml_effectDag},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:footnoteRef", OOXML_ELEMENT_wordprocessingml_footnoteRef},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaBiLevel", OOXML_ELEMENT_drawingml_alphaBiLevel},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblpPr", OOXML_ELEMENT_wordprocessingml_tblpPr},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sSub", OOXML_ELEMENT_math_sSub},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:view", OOXML_ELEMENT_wordprocessingml_view},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:viewMergedData", OOXML_ELEMENT_wordprocessingml_viewMergedData},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:prstShdw", OOXML_ELEMENT_drawingml_prstShdw},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:hlinkHover", OOXML_ELEMENT_drawingml_hlinkHover},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaInv", OOXML_ELEMENT_drawingml_alphaInv},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:rubyPr", OOXML_ELEMENT_wordprocessingml_rubyPr},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bodyDiv", OOXML_ELEMENT_wordprocessingml_bodyDiv},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bookFoldPrinting", OOXML_ELEMENT_wordprocessingml_bookFoldPrinting},
+      {"http://schemas.openxmlformats.org/officeDocument/2006/math:boxPr", OOXML_ELEMENT_math_boxPr},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:effectStyle", OOXML_ELEMENT_drawingml_effectStyle},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:tblPrEx", OOXML_ELEMENT_wordprocessingml_tblPrEx},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:greenOff", OOXML_ELEMENT_drawingml_greenOff},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:hueOff", OOXML_ELEMENT_drawingml_hueOff},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:lvlPicBulletId", OOXML_ELEMENT_wordprocessingml_lvlPicBulletId},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:balanceSingleByteDoubleByteWidth", OOXML_ELEMENT_wordprocessingml_balanceSingleByteDoubleByteWidth},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bodyDiv", OOXML_ELEMENT_wordprocessingml_bodyDiv},
       {"http://schemas.openxmlformats.org/drawingml/2006/picture:nvPicPr", OOXML_ELEMENT_picture_nvPicPr},
       {"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing:wrapThrough", OOXML_ELEMENT_wordprocessingDrawing_wrapThrough},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaModFix", OOXML_ELEMENT_drawingml_alphaModFix},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bookFoldPrinting", OOXML_ELEMENT_wordprocessingml_bookFoldPrinting},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:diff", OOXML_ELEMENT_math_diff},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:view", OOXML_ELEMENT_wordprocessingml_view},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:suppressTopSpacingWP", OOXML_ELEMENT_wordprocessingml_suppressTopSpacingWP},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:pPrChange", OOXML_ELEMENT_wordprocessingml_pPrChange},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sSubSupPr", OOXML_ELEMENT_math_sSubSupPr},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:innerShdw", OOXML_ELEMENT_drawingml_innerShdw},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:greenOff", OOXML_ELEMENT_drawingml_greenOff},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:folHlink", OOXML_ELEMENT_drawingml_folHlink},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:hlinkMouseOver", OOXML_ELEMENT_drawingml_hlinkMouseOver},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:hlinkClick", OOXML_ELEMENT_drawingml_hlinkClick},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:docPartBody", OOXML_ELEMENT_wordprocessingml_docPartBody},
       {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:displayHorizontalDrawingGridEvery", OOXML_ELEMENT_wordprocessingml_displayHorizontalDrawingGridEvery},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:outerShdw", OOXML_ELEMENT_drawingml_outerShdw},
       {"http://schemas.openxmlformats.org/schemaLibrary/2006/main:schemaLibrary", OOXML_ELEMENT_schemaLibrary_schemaLibrary},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bookFoldRevPrinting", OOXML_ELEMENT_wordprocessingml_bookFoldRevPrinting},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:limLow", OOXML_ELEMENT_math_limLow},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:brkBinSub", OOXML_ELEMENT_math_brkBinSub},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bibliography", OOXML_ELEMENT_wordprocessingml_bibliography},
-      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:linkToQuery", OOXML_ELEMENT_wordprocessingml_linkToQuery},
       {"http://schemas.openxmlformats.org/drawingml/2006/main:alphaOff", OOXML_ELEMENT_drawingml_alphaOff},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bibliography", OOXML_ELEMENT_wordprocessingml_bibliography},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:uFillTx", OOXML_ELEMENT_drawingml_uFillTx},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:sSubSup", OOXML_ELEMENT_math_sSubSup},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:bookFoldRevPrinting", OOXML_ELEMENT_wordprocessingml_bookFoldRevPrinting},
       {"http://schemas.openxmlformats.org/officeDocument/2006/math:limLowPr", OOXML_ELEMENT_math_limLowPr},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:fillOverlay", OOXML_ELEMENT_drawingml_fillOverlay},
-      {"http://schemas.openxmlformats.org/drawingml/2006/main:blueOff", OOXML_ELEMENT_drawingml_blueOff}
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:effectStyleLst", OOXML_ELEMENT_drawingml_effectStyleLst},
+      {"http://schemas.openxmlformats.org/wordprocessingml/2006/main:linkToQuery", OOXML_ELEMENT_wordprocessingml_linkToQuery},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:bgFillStyleLst", OOXML_ELEMENT_drawingml_bgFillStyleLst},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:blueOff", OOXML_ELEMENT_drawingml_blueOff},
+      {"http://schemas.openxmlformats.org/drawingml/2006/main:fillOverlay", OOXML_ELEMENT_drawingml_fillOverlay}
     };
 
   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
@@ -1040,772 +1074,772 @@
               case 0:
                 resword = &wordlist[0];
                 goto compare;
-              case 35:
+              case 29:
                 resword = &wordlist[1];
                 goto compare;
-              case 53:
+              case 35:
                 resword = &wordlist[2];
                 goto compare;
-              case 63:
+              case 53:
                 resword = &wordlist[3];
                 goto compare;
-              case 65:
+              case 63:
                 resword = &wordlist[4];
                 goto compare;
-              case 96:
+              case 65:
                 resword = &wordlist[5];
                 goto compare;
-              case 108:
+              case 84:
                 resword = &wordlist[6];
                 goto compare;
-              case 118:
+              case 96:
                 resword = &wordlist[7];
                 goto compare;
-              case 121:
+              case 108:
                 resword = &wordlist[8];
                 goto compare;
-              case 122:
+              case 118:
                 resword = &wordlist[9];
                 goto compare;
-              case 133:
+              case 121:
                 resword = &wordlist[10];
                 goto compare;
-              case 138:
+              case 122:
                 resword = &wordlist[11];
                 goto compare;
-              case 140:
+              case 133:
                 resword = &wordlist[12];
                 goto compare;
-              case 148:
+              case 138:
                 resword = &wordlist[13];
                 goto compare;
-              case 153:
+              case 140:
                 resword = &wordlist[14];
                 goto compare;
-              case 156:
+              case 144:
                 resword = &wordlist[15];
                 goto compare;
-              case 158:
+              case 148:
                 resword = &wordlist[16];
                 goto compare;
-              case 159:
+              case 156:
                 resword = &wordlist[17];
                 goto compare;
-              case 164:
+              case 158:
                 resword = &wordlist[18];
                 goto compare;
-              case 168:
+              case 164:
                 resword = &wordlist[19];
                 goto compare;
-              case 170:
+              case 168:
                 resword = &wordlist[20];
                 goto compare;
-              case 171:
+              case 170:
                 resword = &wordlist[21];
                 goto compare;
-              case 172:
+              case 171:
                 resword = &wordlist[22];
                 goto compare;
-              case 183:
+              case 172:
                 resword = &wordlist[23];
                 goto compare;
-              case 185:
+              case 183:
                 resword = &wordlist[24];
                 goto compare;
-              case 188:
+              case 185:
                 resword = &wordlist[25];
                 goto compare;
-              case 193:
+              case 188:
                 resword = &wordlist[26];
                 goto compare;
-              case 194:
+              case 193:
                 resword = &wordlist[27];
                 goto compare;
-              case 198:
+              case 194:
                 resword = &wordlist[28];
                 goto compare;
-              case 199:
+              case 198:
                 resword = &wordlist[29];
                 goto compare;
-              case 200:
+              case 199:
                 resword = &wordlist[30];
                 goto compare;
-              case 203:
+              case 200:
                 resword = &wordlist[31];
                 goto compare;
-              case 205:
+              case 203:
                 resword = &wordlist[32];
                 goto compare;
-              case 208:
+              case 205:
                 resword = &wordlist[33];
                 goto compare;
-              case 209:
+              case 208:
                 resword = &wordlist[34];
                 goto compare;
-              case 211:
+              case 209:
                 resword = &wordlist[35];
                 goto compare;
-              case 213:
+              case 211:
                 resword = &wordlist[36];
                 goto compare;
-              case 218:
+              case 213:
                 resword = &wordlist[37];
                 goto compare;
-              case 222:
+              case 218:
                 resword = &wordlist[38];
                 goto compare;
-              case 223:
+              case 219:
                 resword = &wordlist[39];
                 goto compare;
-              case 226:
+              case 222:
                 resword = &wordlist[40];
                 goto compare;
-              case 228:
+              case 223:
                 resword = &wordlist[41];
                 goto compare;
-              case 230:
+              case 226:
                 resword = &wordlist[42];
                 goto compare;
-              case 231:
+              case 228:
                 resword = &wordlist[43];
                 goto compare;
-              case 232:
+              case 229:
                 resword = &wordlist[44];
                 goto compare;
-              case 238:
+              case 230:
                 resword = &wordlist[45];
                 goto compare;
-              case 240:
+              case 231:
                 resword = &wordlist[46];
                 goto compare;
-              case 242:
+              case 232:
                 resword = &wordlist[47];
                 goto compare;
-              case 243:
+              case 238:
                 resword = &wordlist[48];
                 goto compare;
-              case 246:
+              case 239:
                 resword = &wordlist[49];
                 goto compare;
-              case 247:
+              case 240:
                 resword = &wordlist[50];
                 goto compare;
-              case 249:
+              case 242:
                 resword = &wordlist[51];
                 goto compare;
-              case 250:
+              case 243:
                 resword = &wordlist[52];
                 goto compare;
-              case 255:
+              case 246:
                 resword = &wordlist[53];
                 goto compare;
-              case 258:
+              case 247:
                 resword = &wordlist[54];
                 goto compare;
-              case 260:
+              case 249:
                 resword = &wordlist[55];
                 goto compare;
-              case 261:
+              case 250:
                 resword = &wordlist[56];
                 goto compare;
-              case 263:
+              case 255:
                 resword = &wordlist[57];
                 goto compare;
-              case 265:
+              case 258:
                 resword = &wordlist[58];
                 goto compare;
-              case 268:
+              case 259:
                 resword = &wordlist[59];
                 goto compare;
-              case 270:
+              case 260:
                 resword = &wordlist[60];
                 goto compare;
-              case 271:
+              case 261:
                 resword = &wordlist[61];
                 goto compare;
-              case 272:
+              case 263:
                 resword = &wordlist[62];
                 goto compare;
-              case 278:
+              case 265:
                 resword = &wordlist[63];
                 goto compare;
-              case 281:
+              case 268:
                 resword = &wordlist[64];
                 goto compare;
-              case 283:
+              case 270:
                 resword = &wordlist[65];
                 goto compare;
-              case 284:
+              case 271:
                 resword = &wordlist[66];
                 goto compare;
-              case 285:
+              case 272:
                 resword = &wordlist[67];
                 goto compare;
-              case 287:
+              case 278:
                 resword = &wordlist[68];
                 goto compare;
-              case 288:
+              case 279:
                 resword = &wordlist[69];
                 goto compare;
-              case 289:
+              case 281:
                 resword = &wordlist[70];
                 goto compare;
-              case 291:
+              case 283:
                 resword = &wordlist[71];
                 goto compare;
-              case 293:
+              case 284:
                 resword = &wordlist[72];
                 goto compare;
-              case 294:
+              case 289:
                 resword = &wordlist[73];
                 goto compare;
-              case 295:
+              case 290:
                 resword = &wordlist[74];
                 goto compare;
-              case 300:
+              case 291:
                 resword = &wordlist[75];
                 goto compare;
-              case 301:
+              case 293:
                 resword = &wordlist[76];
                 goto compare;
-              case 314:
+              case 294:
                 resword = &wordlist[77];
                 goto compare;
-              case 318:
+              case 295:
                 resword = &wordlist[78];
                 goto compare;
-              case 319:
+              case 300:
                 resword = &wordlist[79];
                 goto compare;
-              case 328:
+              case 301:
                 resword = &wordlist[80];
                 goto compare;
-              case 331:
+              case 307:
                 resword = &wordlist[81];
                 goto compare;
-              case 333:
+              case 314:
                 resword = &wordlist[82];
                 goto compare;
-              case 337:
+              case 318:
                 resword = &wordlist[83];
                 goto compare;
-              case 339:
+              case 319:
                 resword = &wordlist[84];
                 goto compare;
-              case 340:
+              case 328:
                 resword = &wordlist[85];
                 goto compare;
-              case 341:
+              case 331:
                 resword = &wordlist[86];
                 goto compare;
-              case 344:
+              case 337:
                 resword = &wordlist[87];
                 goto compare;
-              case 347:
+              case 339:
                 resword = &wordlist[88];
                 goto compare;
-              case 352:
+              case 340:
                 resword = &wordlist[89];
                 goto compare;
-              case 357:
+              case 341:
                 resword = &wordlist[90];
                 goto compare;
-              case 361:
+              case 347:
                 resword = &wordlist[91];
                 goto compare;
-              case 366:
+              case 349:
                 resword = &wordlist[92];
                 goto compare;
-              case 371:
+              case 352:
                 resword = &wordlist[93];
                 goto compare;
-              case 372:
+              case 353:
                 resword = &wordlist[94];
                 goto compare;
-              case 376:
+              case 357:
                 resword = &wordlist[95];
                 goto compare;
-              case 377:
+              case 358:
                 resword = &wordlist[96];
                 goto compare;
-              case 379:
+              case 359:
                 resword = &wordlist[97];
                 goto compare;
-              case 389:
+              case 361:
                 resword = &wordlist[98];
                 goto compare;
-              case 390:
+              case 366:
                 resword = &wordlist[99];
                 goto compare;
-              case 395:
+              case 370:
                 resword = &wordlist[100];
                 goto compare;
-              case 397:
+              case 371:
                 resword = &wordlist[101];
                 goto compare;
-              case 399:
+              case 376:
                 resword = &wordlist[102];
                 goto compare;
-              case 403:
+              case 377:
                 resword = &wordlist[103];
                 goto compare;
-              case 409:
+              case 379:
                 resword = &wordlist[104];
                 goto compare;
-              case 412:
+              case 381:
                 resword = &wordlist[105];
                 goto compare;
-              case 413:
+              case 390:
                 resword = &wordlist[106];
                 goto compare;
-              case 415:
+              case 395:
                 resword = &wordlist[107];
                 goto compare;
-              case 422:
+              case 397:
                 resword = &wordlist[108];
                 goto compare;
-              case 424:
+              case 399:
                 resword = &wordlist[109];
                 goto compare;
-              case 425:
+              case 403:
                 resword = &wordlist[110];
                 goto compare;
-              case 427:
+              case 406:
                 resword = &wordlist[111];
                 goto compare;
-              case 428:
+              case 409:
                 resword = &wordlist[112];
                 goto compare;
-              case 437:
+              case 413:
                 resword = &wordlist[113];
                 goto compare;
-              case 438:
+              case 415:
                 resword = &wordlist[114];
                 goto compare;
-              case 439:
+              case 417:
                 resword = &wordlist[115];
                 goto compare;
-              case 440:
+              case 419:
                 resword = &wordlist[116];
                 goto compare;
-              case 449:
+              case 422:
                 resword = &wordlist[117];
                 goto compare;
-              case 450:
+              case 424:
                 resword = &wordlist[118];
                 goto compare;
-              case 453:
+              case 425:
                 resword = &wordlist[119];
                 goto compare;
-              case 458:
+              case 437:
                 resword = &wordlist[120];
                 goto compare;
-              case 465:
+              case 439:
                 resword = &wordlist[121];
                 goto compare;
-              case 467:
+              case 440:
                 resword = &wordlist[122];
                 goto compare;
-              case 470:
+              case 449:
                 resword = &wordlist[123];
                 goto compare;
-              case 476:
+              case 453:
                 resword = &wordlist[124];
                 goto compare;
-              case 478:
+              case 458:
                 resword = &wordlist[125];
                 goto compare;
-              case 479:
+              case 465:
                 resword = &wordlist[126];
                 goto compare;
-              case 480:
+              case 467:
                 resword = &wordlist[127];
                 goto compare;
-              case 481:
+              case 470:
                 resword = &wordlist[128];
                 goto compare;
-              case 482:
+              case 478:
                 resword = &wordlist[129];
                 goto compare;
-              case 483:
+              case 479:
                 resword = &wordlist[130];
                 goto compare;
-              case 487:
+              case 481:
                 resword = &wordlist[131];
                 goto compare;
-              case 488:
+              case 482:
                 resword = &wordlist[132];
                 goto compare;
-              case 494:
+              case 487:
                 resword = &wordlist[133];
                 goto compare;
-              case 495:
+              case 494:
                 resword = &wordlist[134];
                 goto compare;
-              case 497:
+              case 495:
                 resword = &wordlist[135];
                 goto compare;
-              case 498:
+              case 497:
                 resword = &wordlist[136];
                 goto compare;
-              case 499:
+              case 498:
                 resword = &wordlist[137];
                 goto compare;
-              case 500:
+              case 499:
                 resword = &wordlist[138];
                 goto compare;
-              case 502:
+              case 500:
                 resword = &wordlist[139];
                 goto compare;
-              case 505:
+              case 502:
                 resword = &wordlist[140];
                 goto compare;
-              case 506:
+              case 505:
                 resword = &wordlist[141];
                 goto compare;
-              case 511:
+              case 506:
                 resword = &wordlist[142];
                 goto compare;
-              case 512:
+              case 511:
                 resword = &wordlist[143];
                 goto compare;
-              case 515:
+              case 512:
                 resword = &wordlist[144];
                 goto compare;
-              case 516:
+              case 515:
                 resword = &wordlist[145];
                 goto compare;
-              case 517:
+              case 516:
                 resword = &wordlist[146];
                 goto compare;
-              case 520:
+              case 517:
                 resword = &wordlist[147];
                 goto compare;
-              case 528:
+              case 520:
                 resword = &wordlist[148];
                 goto compare;
-              case 529:
+              case 528:
                 resword = &wordlist[149];
                 goto compare;
-              case 531:
+              case 529:
                 resword = &wordlist[150];
                 goto compare;
-              case 532:
+              case 531:
                 resword = &wordlist[151];
                 goto compare;
-              case 533:
+              case 532:
                 resword = &wordlist[152];
                 goto compare;
-              case 534:
+              case 533:
                 resword = &wordlist[153];
                 goto compare;
-              case 535:
+              case 534:
                 resword = &wordlist[154];
                 goto compare;
-              case 536:
+              case 535:
                 resword = &wordlist[155];
                 goto compare;
-              case 537:
+              case 536:
                 resword = &wordlist[156];
                 goto compare;
-              case 539:
+              case 537:
                 resword = &wordlist[157];
                 goto compare;
-              case 540:
+              case 541:
                 resword = &wordlist[158];
                 goto compare;
-              case 541:
+              case 542:
                 resword = &wordlist[159];
                 goto compare;
-              case 542:
+              case 543:
                 resword = &wordlist[160];
                 goto compare;
-              case 543:
+              case 544:
                 resword = &wordlist[161];
                 goto compare;
-              case 544:
+              case 551:
                 resword = &wordlist[162];
                 goto compare;
-              case 546:
+              case 556:
                 resword = &wordlist[163];
                 goto compare;
-              case 551:
+              case 558:
                 resword = &wordlist[164];
                 goto compare;
-              case 556:
+              case 563:
                 resword = &wordlist[165];
                 goto compare;
-              case 563:
+              case 569:
                 resword = &wordlist[166];
                 goto compare;
-              case 564:
+              case 573:
                 resword = &wordlist[167];
                 goto compare;
-              case 569:
+              case 576:
                 resword = &wordlist[168];
                 goto compare;
-              case 573:
+              case 578:
                 resword = &wordlist[169];
                 goto compare;
-              case 578:
+              case 579:
                 resword = &wordlist[170];
                 goto compare;
-              case 579:
+              case 584:
                 resword = &wordlist[171];
                 goto compare;
-              case 584:
+              case 587:
                 resword = &wordlist[172];
                 goto compare;
-              case 587:
+              case 588:
                 resword = &wordlist[173];
                 goto compare;
-              case 588:
+              case 590:
                 resword = &wordlist[174];
                 goto compare;
-              case 590:
+              case 593:
                 resword = &wordlist[175];
                 goto compare;
-              case 593:
+              case 598:
                 resword = &wordlist[176];
                 goto compare;
-              case 598:
+              case 606:
                 resword = &wordlist[177];
                 goto compare;
-              case 599:
+              case 608:
                 resword = &wordlist[178];
                 goto compare;
-              case 606:
+              case 612:
                 resword = &wordlist[179];
                 goto compare;
-              case 608:
+              case 620:
                 resword = &wordlist[180];
                 goto compare;
-              case 612:
+              case 624:
                 resword = &wordlist[181];
                 goto compare;
-              case 620:
+              case 629:
                 resword = &wordlist[182];
                 goto compare;
-              case 624:
+              case 632:
                 resword = &wordlist[183];
                 goto compare;
-              case 629:
+              case 635:
                 resword = &wordlist[184];
                 goto compare;
-              case 632:
+              case 640:
                 resword = &wordlist[185];
                 goto compare;
-              case 635:
+              case 642:
                 resword = &wordlist[186];
                 goto compare;
-              case 640:
+              case 647:
                 resword = &wordlist[187];
                 goto compare;
-              case 642:
+              case 649:
                 resword = &wordlist[188];
                 goto compare;
-              case 647:
+              case 650:
                 resword = &wordlist[189];
                 goto compare;
-              case 649:
+              case 651:
                 resword = &wordlist[190];
                 goto compare;
-              case 650:
+              case 652:
                 resword = &wordlist[191];
                 goto compare;
-              case 651:
+              case 655:
                 resword = &wordlist[192];
                 goto compare;
-              case 652:
+              case 658:
                 resword = &wordlist[193];
                 goto compare;
-              case 664:
+              case 670:
                 resword = &wordlist[194];
                 goto compare;
-              case 665:
+              case 672:
                 resword = &wordlist[195];
                 goto compare;
-              case 667:
+              case 673:
                 resword = &wordlist[196];
                 goto compare;
-              case 670:
+              case 677:
                 resword = &wordlist[197];
                 goto compare;
-              case 672:
+              case 684:
                 resword = &wordlist[198];
                 goto compare;
-              case 673:
+              case 687:
                 resword = &wordlist[199];
                 goto compare;
-              case 676:
+              case 688:
                 resword = &wordlist[200];
                 goto compare;
-              case 677:
+              case 691:
                 resword = &wordlist[201];
                 goto compare;
-              case 684:
+              case 692:
                 resword = &wordlist[202];
                 goto compare;
-              case 687:
+              case 695:
                 resword = &wordlist[203];
                 goto compare;
-              case 691:
+              case 696:
                 resword = &wordlist[204];
                 goto compare;
-              case 692:
+              case 698:
                 resword = &wordlist[205];
                 goto compare;
-              case 695:
+              case 700:
                 resword = &wordlist[206];
                 goto compare;
-              case 696:
+              case 701:
                 resword = &wordlist[207];
                 goto compare;
-              case 698:
+              case 708:
                 resword = &wordlist[208];
                 goto compare;
-              case 700:
+              case 715:
                 resword = &wordlist[209];
                 goto compare;
-              case 701:
+              case 716:
                 resword = &wordlist[210];
                 goto compare;
-              case 707:
+              case 717:
                 resword = &wordlist[211];
                 goto compare;
-              case 711:
+              case 730:
                 resword = &wordlist[212];
                 goto compare;
-              case 715:
+              case 733:
                 resword = &wordlist[213];
                 goto compare;
-              case 716:
+              case 734:
                 resword = &wordlist[214];
                 goto compare;
-              case 722:
+              case 736:
                 resword = &wordlist[215];
                 goto compare;
-              case 730:
+              case 738:
                 resword = &wordlist[216];
                 goto compare;
-              case 733:
+              case 741:
                 resword = &wordlist[217];
                 goto compare;
-              case 734:
+              case 742:
                 resword = &wordlist[218];
                 goto compare;
-              case 738:
+              case 744:
                 resword = &wordlist[219];
                 goto compare;
-              case 740:
-                resword = &wordlist[220];
-                goto compare;
               case 745:
-                resword = &wordlist[221];
+                resword = &wordlist[220];
                 goto compare;
               case 746:
-                resword = &wordlist[222];
+                resword = &wordlist[221];
                 goto compare;
               case 749:
-                resword = &wordlist[223];
+                resword = &wordlist[222];
                 goto compare;
               case 752:
-                resword = &wordlist[224];
+                resword = &wordlist[223];
                 goto compare;
               case 756:
-                resword = &wordlist[225];
+                resword = &wordlist[224];
                 goto compare;
               case 758:
+                resword = &wordlist[225];
+                goto compare;
+              case 765:
                 resword = &wordlist[226];
                 goto compare;
-              case 764:
+              case 767:
                 resword = &wordlist[227];
                 goto compare;
-              case 765:
+              case 769:
                 resword = &wordlist[228];
                 goto compare;
-              case 769:
+              case 773:
                 resword = &wordlist[229];
                 goto compare;
-              case 772:
+              case 774:
                 resword = &wordlist[230];
                 goto compare;
-              case 779:
+              case 775:
                 resword = &wordlist[231];
                 goto compare;
-              case 780:
+              case 776:
                 resword = &wordlist[232];
                 goto compare;
-              case 781:
+              case 778:
                 resword = &wordlist[233];
                 goto compare;
-              case 783:
+              case 779:
                 resword = &wordlist[234];
                 goto compare;
-              case 786:
+              case 780:
                 resword = &wordlist[235];
                 goto compare;
-              case 789:
+              case 781:
                 resword = &wordlist[236];
                 goto compare;
-              case 790:
+              case 783:
                 resword = &wordlist[237];
                 goto compare;
-              case 791:
+              case 789:
                 resword = &wordlist[238];
                 goto compare;
-              case 795:
+              case 790:
                 resword = &wordlist[239];
                 goto compare;
-              case 798:
+              case 791:
                 resword = &wordlist[240];
                 goto compare;
-              case 809:
+              case 798:
                 resword = &wordlist[241];
                 goto compare;
-              case 811:
+              case 808:
                 resword = &wordlist[242];
                 goto compare;
-              case 814:
+              case 809:
                 resword = &wordlist[243];
                 goto compare;
-              case 815:
+              case 811:
                 resword = &wordlist[244];
                 goto compare;
-              case 816:
+              case 814:
                 resword = &wordlist[245];
                 goto compare;
-              case 822:
+              case 815:
                 resword = &wordlist[246];
                 goto compare;
-              case 827:
+              case 816:
                 resword = &wordlist[247];
                 goto compare;
-              case 829:
+              case 818:
                 resword = &wordlist[248];
                 goto compare;
-              case 830:
+              case 822:
                 resword = &wordlist[249];
                 goto compare;
-              case 832:
+              case 829:
                 resword = &wordlist[250];
                 goto compare;
-              case 833:
+              case 830:
                 resword = &wordlist[251];
                 goto compare;
-              case 837:
+              case 832:
                 resword = &wordlist[252];
                 goto compare;
-              case 841:
+              case 837:
                 resword = &wordlist[253];
                 goto compare;
-              case 842:
+              case 841:
                 resword = &wordlist[254];
                 goto compare;
-              case 852:
+              case 850:
                 resword = &wordlist[255];
                 goto compare;
-              case 853:
+              case 852:
                 resword = &wordlist[256];
                 goto compare;
               case 859:
@@ -1814,25 +1848,25 @@
               case 862:
                 resword = &wordlist[258];
                 goto compare;
-              case 867:
+              case 865:
                 resword = &wordlist[259];
                 goto compare;
-              case 868:
+              case 867:
                 resword = &wordlist[260];
                 goto compare;
-              case 870:
+              case 868:
                 resword = &wordlist[261];
                 goto compare;
-              case 872:
+              case 870:
                 resword = &wordlist[262];
                 goto compare;
               case 873:
                 resword = &wordlist[263];
                 goto compare;
-              case 874:
+              case 877:
                 resword = &wordlist[264];
                 goto compare;
-              case 877:
+              case 881:
                 resword = &wordlist[265];
                 goto compare;
               case 882:
@@ -1844,1830 +1878,1932 @@
               case 884:
                 resword = &wordlist[268];
                 goto compare;
-              case 887:
+              case 889:
                 resword = &wordlist[269];
                 goto compare;
-              case 889:
+              case 890:
                 resword = &wordlist[270];
                 goto compare;
-              case 890:
+              case 892:
                 resword = &wordlist[271];
                 goto compare;
-              case 893:
+              case 894:
                 resword = &wordlist[272];
                 goto compare;
-              case 894:
+              case 895:
                 resword = &wordlist[273];
                 goto compare;
-              case 895:
+              case 902:
                 resword = &wordlist[274];
                 goto compare;
-              case 897:
+              case 903:
                 resword = &wordlist[275];
                 goto compare;
-              case 900:
+              case 904:
                 resword = &wordlist[276];
                 goto compare;
-              case 902:
+              case 905:
                 resword = &wordlist[277];
                 goto compare;
-              case 903:
+              case 906:
                 resword = &wordlist[278];
                 goto compare;
-              case 904:
+              case 907:
                 resword = &wordlist[279];
                 goto compare;
-              case 905:
+              case 910:
                 resword = &wordlist[280];
                 goto compare;
-              case 906:
+              case 911:
                 resword = &wordlist[281];
                 goto compare;
-              case 907:
+              case 912:
                 resword = &wordlist[282];
                 goto compare;
-              case 911:
+              case 915:
                 resword = &wordlist[283];
                 goto compare;
-              case 912:
+              case 916:
                 resword = &wordlist[284];
                 goto compare;
-              case 915:
+              case 917:
                 resword = &wordlist[285];
                 goto compare;
-              case 917:
+              case 918:
                 resword = &wordlist[286];
                 goto compare;
-              case 918:
+              case 919:
                 resword = &wordlist[287];
                 goto compare;
-              case 919:
+              case 920:
                 resword = &wordlist[288];
                 goto compare;
               case 922:
                 resword = &wordlist[289];
                 goto compare;
-              case 924:
+              case 925:
                 resword = &wordlist[290];
                 goto compare;
-              case 925:
+              case 926:
                 resword = &wordlist[291];
                 goto compare;
-              case 926:
+              case 929:
                 resword = &wordlist[292];
                 goto compare;
-              case 929:
+              case 930:
                 resword = &wordlist[293];
                 goto compare;
-              case 930:
+              case 932:
                 resword = &wordlist[294];
                 goto compare;
-              case 932:
+              case 934:
                 resword = &wordlist[295];
                 goto compare;
-              case 934:
+              case 935:
                 resword = &wordlist[296];
                 goto compare;
-              case 935:
+              case 937:
                 resword = &wordlist[297];
                 goto compare;
-              case 939:
+              case 938:
                 resword = &wordlist[298];
                 goto compare;
-              case 940:
+              case 939:
                 resword = &wordlist[299];
                 goto compare;
-              case 941:
+              case 940:
                 resword = &wordlist[300];
                 goto compare;
-              case 942:
+              case 941:
                 resword = &wordlist[301];
                 goto compare;
-              case 943:
+              case 942:
                 resword = &wordlist[302];
                 goto compare;
-              case 945:
+              case 943:
                 resword = &wordlist[303];
                 goto compare;
-              case 946:
+              case 945:
                 resword = &wordlist[304];
                 goto compare;
-              case 947:
+              case 946:
                 resword = &wordlist[305];
                 goto compare;
-              case 948:
+              case 947:
                 resword = &wordlist[306];
                 goto compare;
-              case 952:
+              case 948:
                 resword = &wordlist[307];
                 goto compare;
-              case 956:
+              case 952:
                 resword = &wordlist[308];
                 goto compare;
-              case 963:
+              case 956:
                 resword = &wordlist[309];
                 goto compare;
-              case 964:
+              case 959:
                 resword = &wordlist[310];
                 goto compare;
-              case 966:
+              case 960:
                 resword = &wordlist[311];
                 goto compare;
-              case 967:
+              case 963:
                 resword = &wordlist[312];
                 goto compare;
-              case 969:
+              case 964:
                 resword = &wordlist[313];
                 goto compare;
-              case 972:
+              case 966:
                 resword = &wordlist[314];
                 goto compare;
-              case 974:
+              case 967:
                 resword = &wordlist[315];
                 goto compare;
-              case 979:
+              case 969:
                 resword = &wordlist[316];
                 goto compare;
-              case 980:
+              case 970:
                 resword = &wordlist[317];
                 goto compare;
-              case 981:
+              case 972:
                 resword = &wordlist[318];
                 goto compare;
-              case 982:
+              case 974:
                 resword = &wordlist[319];
                 goto compare;
-              case 983:
+              case 975:
                 resword = &wordlist[320];
                 goto compare;
-              case 987:
+              case 976:
                 resword = &wordlist[321];
                 goto compare;
-              case 993:
+              case 977:
                 resword = &wordlist[322];
                 goto compare;
-              case 997:
+              case 979:
                 resword = &wordlist[323];
                 goto compare;
-              case 998:
+              case 980:
                 resword = &wordlist[324];
                 goto compare;
-              case 999:
+              case 981:
                 resword = &wordlist[325];
                 goto compare;
-              case 1000:
+              case 982:
                 resword = &wordlist[326];
                 goto compare;
-              case 1003:
+              case 983:
                 resword = &wordlist[327];
                 goto compare;
-              case 1004:
+              case 987:
                 resword = &wordlist[328];
                 goto compare;
-              case 1010:
+              case 990:
                 resword = &wordlist[329];
                 goto compare;
-              case 1011:
+              case 993:
                 resword = &wordlist[330];
                 goto compare;
-              case 1012:
+              case 994:
                 resword = &wordlist[331];
                 goto compare;
-              case 1014:
+              case 997:
                 resword = &wordlist[332];
                 goto compare;
-              case 1015:
+              case 998:
                 resword = &wordlist[333];
                 goto compare;
-              case 1019:
+              case 1003:
                 resword = &wordlist[334];
                 goto compare;
-              case 1021:
+              case 1008:
                 resword = &wordlist[335];
                 goto compare;
-              case 1024:
+              case 1010:
                 resword = &wordlist[336];
                 goto compare;
-              case 1026:
+              case 1014:
                 resword = &wordlist[337];
                 goto compare;
-              case 1028:
+              case 1015:
                 resword = &wordlist[338];
                 goto compare;
-              case 1029:
+              case 1019:
                 resword = &wordlist[339];
                 goto compare;
-              case 1033:
+              case 1021:
                 resword = &wordlist[340];
                 goto compare;
-              case 1035:
+              case 1024:
                 resword = &wordlist[341];
                 goto compare;
-              case 1039:
+              case 1027:
                 resword = &wordlist[342];
                 goto compare;
-              case 1042:
+              case 1028:
                 resword = &wordlist[343];
                 goto compare;
-              case 1045:
+              case 1029:
                 resword = &wordlist[344];
                 goto compare;
-              case 1046:
+              case 1032:
                 resword = &wordlist[345];
                 goto compare;
-              case 1048:
+              case 1033:
                 resword = &wordlist[346];
                 goto compare;
-              case 1049:
+              case 1035:
                 resword = &wordlist[347];
                 goto compare;
-              case 1055:
+              case 1042:
                 resword = &wordlist[348];
                 goto compare;
-              case 1057:
+              case 1045:
                 resword = &wordlist[349];
                 goto compare;
-              case 1059:
+              case 1046:
                 resword = &wordlist[350];
                 goto compare;
-              case 1062:
+              case 1047:
                 resword = &wordlist[351];
                 goto compare;
-              case 1063:
+              case 1048:
                 resword = &wordlist[352];
                 goto compare;
-              case 1065:
+              case 1049:
                 resword = &wordlist[353];
                 goto compare;
-              case 1067:
+              case 1055:
                 resword = &wordlist[354];
                 goto compare;
-              case 1069:
+              case 1057:
                 resword = &wordlist[355];
                 goto compare;
-              case 1071:
+              case 1059:
                 resword = &wordlist[356];
                 goto compare;
-              case 1072:
+              case 1062:
                 resword = &wordlist[357];
                 goto compare;
-              case 1073:
+              case 1063:
                 resword = &wordlist[358];
                 goto compare;
-              case 1076:
+              case 1065:
                 resword = &wordlist[359];
                 goto compare;
-              case 1078:
+              case 1067:
                 resword = &wordlist[360];
                 goto compare;
-              case 1082:
+              case 1071:
                 resword = &wordlist[361];
                 goto compare;
-              case 1083:
+              case 1072:
                 resword = &wordlist[362];
                 goto compare;
-              case 1084:
+              case 1073:
                 resword = &wordlist[363];
                 goto compare;
-              case 1085:
+              case 1074:
                 resword = &wordlist[364];
                 goto compare;
-              case 1088:
+              case 1079:
                 resword = &wordlist[365];
                 goto compare;
-              case 1090:
+              case 1081:
                 resword = &wordlist[366];
                 goto compare;
-              case 1094:
+              case 1082:
                 resword = &wordlist[367];
                 goto compare;
-              case 1098:
+              case 1083:
                 resword = &wordlist[368];
                 goto compare;
-              case 1099:
+              case 1084:
                 resword = &wordlist[369];
                 goto compare;
-              case 1101:
+              case 1085:
                 resword = &wordlist[370];
                 goto compare;
-              case 1102:
+              case 1086:
                 resword = &wordlist[371];
                 goto compare;
-              case 1103:
+              case 1088:
                 resword = &wordlist[372];
                 goto compare;
-              case 1106:
+              case 1089:
                 resword = &wordlist[373];
                 goto compare;
-              case 1108:
+              case 1090:
                 resword = &wordlist[374];
                 goto compare;
-              case 1110:
+              case 1094:
                 resword = &wordlist[375];
                 goto compare;
-              case 1111:
+              case 1098:
                 resword = &wordlist[376];
                 goto compare;
-              case 1113:
+              case 1099:
                 resword = &wordlist[377];
                 goto compare;
-              case 1114:
+              case 1101:
                 resword = &wordlist[378];
                 goto compare;
-              case 1116:
+              case 1102:
                 resword = &wordlist[379];
                 goto compare;
-              case 1118:
+              case 1103:
                 resword = &wordlist[380];
                 goto compare;
-              case 1121:
+              case 1109:
                 resword = &wordlist[381];
                 goto compare;
-              case 1123:
+              case 1110:
                 resword = &wordlist[382];
                 goto compare;
-              case 1129:
+              case 1111:
                 resword = &wordlist[383];
                 goto compare;
-              case 1135:
+              case 1113:
                 resword = &wordlist[384];
                 goto compare;
-              case 1137:
+              case 1114:
                 resword = &wordlist[385];
                 goto compare;
-              case 1141:
+              case 1115:
                 resword = &wordlist[386];
                 goto compare;
-              case 1144:
+              case 1116:
                 resword = &wordlist[387];
                 goto compare;
-              case 1147:
+              case 1118:
                 resword = &wordlist[388];
                 goto compare;
-              case 1149:
+              case 1121:
                 resword = &wordlist[389];
                 goto compare;
-              case 1152:
+              case 1123:
                 resword = &wordlist[390];
                 goto compare;
-              case 1153:
+              case 1129:
                 resword = &wordlist[391];
                 goto compare;
-              case 1155:
+              case 1130:
                 resword = &wordlist[392];
                 goto compare;
-              case 1156:
+              case 1134:
                 resword = &wordlist[393];
                 goto compare;
-              case 1157:
+              case 1137:
                 resword = &wordlist[394];
                 goto compare;
-              case 1158:
+              case 1144:
                 resword = &wordlist[395];
                 goto compare;
-              case 1159:
+              case 1145:
                 resword = &wordlist[396];
                 goto compare;
-              case 1161:
+              case 1147:
                 resword = &wordlist[397];
                 goto compare;
-              case 1162:
+              case 1149:
                 resword = &wordlist[398];
                 goto compare;
-              case 1163:
+              case 1150:
                 resword = &wordlist[399];
                 goto compare;
-              case 1168:
+              case 1152:
                 resword = &wordlist[400];
                 goto compare;
-              case 1170:
+              case 1153:
                 resword = &wordlist[401];
                 goto compare;
-              case 1178:
+              case 1155:
                 resword = &wordlist[402];
                 goto compare;
-              case 1180:
+              case 1156:
                 resword = &wordlist[403];
                 goto compare;
-              case 1182:
+              case 1157:
                 resword = &wordlist[404];
                 goto compare;
-              case 1184:
+              case 1158:
                 resword = &wordlist[405];
                 goto compare;
-              case 1185:
+              case 1159:
                 resword = &wordlist[406];
                 goto compare;
-              case 1187:
+              case 1161:
                 resword = &wordlist[407];
                 goto compare;
-              case 1190:
+              case 1162:
                 resword = &wordlist[408];
                 goto compare;
-              case 1193:
+              case 1163:
                 resword = &wordlist[409];
                 goto compare;
-              case 1195:
+              case 1166:
                 resword = &wordlist[410];
                 goto compare;
-              case 1196:
+              case 1168:
                 resword = &wordlist[411];
                 goto compare;
-              case 1197:
+              case 1170:
                 resword = &wordlist[412];
                 goto compare;
-              case 1200:
+              case 1178:
                 resword = &wordlist[413];
                 goto compare;
-              case 1201:
+              case 1180:
                 resword = &wordlist[414];
                 goto compare;
-              case 1203:
+              case 1182:
                 resword = &wordlist[415];
                 goto compare;
-              case 1205:
+              case 1184:
                 resword = &wordlist[416];
                 goto compare;
-              case 1206:
+              case 1185:
                 resword = &wordlist[417];
                 goto compare;
-              case 1207:
+              case 1187:
                 resword = &wordlist[418];
                 goto compare;
-              case 1208:
+              case 1188:
                 resword = &wordlist[419];
                 goto compare;
-              case 1211:
+              case 1190:
                 resword = &wordlist[420];
                 goto compare;
-              case 1212:
+              case 1193:
                 resword = &wordlist[421];
                 goto compare;
-              case 1214:
+              case 1195:
                 resword = &wordlist[422];
                 goto compare;
-              case 1215:
+              case 1196:
                 resword = &wordlist[423];
                 goto compare;
-              case 1219:
+              case 1197:
                 resword = &wordlist[424];
                 goto compare;
-              case 1220:
+              case 1200:
                 resword = &wordlist[425];
                 goto compare;
-              case 1228:
+              case 1201:
                 resword = &wordlist[426];
                 goto compare;
-              case 1230:
+              case 1203:
                 resword = &wordlist[427];
                 goto compare;
-              case 1233:
+              case 1205:
                 resword = &wordlist[428];
                 goto compare;
-              case 1234:
+              case 1206:
                 resword = &wordlist[429];
                 goto compare;
-              case 1242:
+              case 1207:
                 resword = &wordlist[430];
                 goto compare;
-              case 1245:
+              case 1208:
                 resword = &wordlist[431];
                 goto compare;
-              case 1251:
+              case 1211:
                 resword = &wordlist[432];
                 goto compare;
-              case 1253:
+              case 1212:
                 resword = &wordlist[433];
                 goto compare;
-              case 1258:
+              case 1213:
                 resword = &wordlist[434];
                 goto compare;
-              case 1260:
+              case 1214:
                 resword = &wordlist[435];
                 goto compare;
-              case 1263:
+              case 1215:
                 resword = &wordlist[436];
                 goto compare;
-              case 1265:
+              case 1217:
                 resword = &wordlist[437];
                 goto compare;
-              case 1267:
+              case 1219:
                 resword = &wordlist[438];
                 goto compare;
-              case 1272:
+              case 1220:
                 resword = &wordlist[439];
                 goto compare;
-              case 1274:
+              case 1223:
                 resword = &wordlist[440];
                 goto compare;
-              case 1276:
+              case 1225:
                 resword = &wordlist[441];
                 goto compare;
-              case 1280:
+              case 1226:
                 resword = &wordlist[442];
                 goto compare;
-              case 1283:
+              case 1227:
                 resword = &wordlist[443];
                 goto compare;
-              case 1286:
+              case 1230:
                 resword = &wordlist[444];
                 goto compare;
-              case 1290:
+              case 1233:
                 resword = &wordlist[445];
                 goto compare;
-              case 1292:
+              case 1234:
                 resword = &wordlist[446];
                 goto compare;
-              case 1294:
+              case 1251:
                 resword = &wordlist[447];
                 goto compare;
-              case 1297:
+              case 1255:
                 resword = &wordlist[448];
                 goto compare;
-              case 1299:
+              case 1257:
                 resword = &wordlist[449];
                 goto compare;
-              case 1300:
+              case 1258:
                 resword = &wordlist[450];
                 goto compare;
-              case 1302:
+              case 1260:
                 resword = &wordlist[451];
                 goto compare;
-              case 1303:
+              case 1263:
                 resword = &wordlist[452];
                 goto compare;
-              case 1308:
+              case 1265:
                 resword = &wordlist[453];
                 goto compare;
-              case 1311:
+              case 1267:
                 resword = &wordlist[454];
                 goto compare;
-              case 1312:
+              case 1272:
                 resword = &wordlist[455];
                 goto compare;
-              case 1314:
+              case 1274:
                 resword = &wordlist[456];
                 goto compare;
-              case 1316:
+              case 1276:
                 resword = &wordlist[457];
                 goto compare;
-              case 1317:
+              case 1280:
                 resword = &wordlist[458];
                 goto compare;
-              case 1319:
+              case 1282:
                 resword = &wordlist[459];
                 goto compare;
-              case 1323:
+              case 1283:
                 resword = &wordlist[460];
                 goto compare;
-              case 1324:
+              case 1286:
                 resword = &wordlist[461];
                 goto compare;
-              case 1327:
+              case 1290:
                 resword = &wordlist[462];
                 goto compare;
-              case 1328:
+              case 1292:
                 resword = &wordlist[463];
                 goto compare;
-              case 1335:
+              case 1294:
                 resword = &wordlist[464];
                 goto compare;
-              case 1338:
+              case 1297:
                 resword = &wordlist[465];
                 goto compare;
-              case 1340:
+              case 1299:
                 resword = &wordlist[466];
                 goto compare;
-              case 1342:
+              case 1300:
                 resword = &wordlist[467];
                 goto compare;
-              case 1344:
+              case 1302:
                 resword = &wordlist[468];
                 goto compare;
-              case 1348:
+              case 1303:
                 resword = &wordlist[469];
                 goto compare;
-              case 1352:
+              case 1308:
                 resword = &wordlist[470];
                 goto compare;
-              case 1355:
+              case 1312:
                 resword = &wordlist[471];
                 goto compare;
-              case 1357:
+              case 1313:
                 resword = &wordlist[472];
                 goto compare;
-              case 1362:
+              case 1316:
                 resword = &wordlist[473];
                 goto compare;
-              case 1364:
+              case 1317:
                 resword = &wordlist[474];
                 goto compare;
-              case 1365:
+              case 1321:
                 resword = &wordlist[475];
                 goto compare;
-              case 1370:
+              case 1328:
                 resword = &wordlist[476];
                 goto compare;
-              case 1371:
+              case 1330:
                 resword = &wordlist[477];
                 goto compare;
-              case 1372:
+              case 1335:
                 resword = &wordlist[478];
                 goto compare;
-              case 1373:
+              case 1338:
                 resword = &wordlist[479];
                 goto compare;
-              case 1375:
+              case 1339:
                 resword = &wordlist[480];
                 goto compare;
-              case 1376:
+              case 1340:
                 resword = &wordlist[481];
                 goto compare;
-              case 1377:
+              case 1342:
                 resword = &wordlist[482];
                 goto compare;
-              case 1378:
+              case 1343:
                 resword = &wordlist[483];
                 goto compare;
-              case 1383:
+              case 1348:
                 resword = &wordlist[484];
                 goto compare;
-              case 1384:
+              case 1349:
                 resword = &wordlist[485];
                 goto compare;
-              case 1385:
+              case 1355:
                 resword = &wordlist[486];
                 goto compare;
-              case 1387:
+              case 1357:
                 resword = &wordlist[487];
                 goto compare;
-              case 1389:
+              case 1364:
                 resword = &wordlist[488];
                 goto compare;
-              case 1390:
+              case 1368:
                 resword = &wordlist[489];
                 goto compare;
-              case 1392:
+              case 1370:
                 resword = &wordlist[490];
                 goto compare;
-              case 1393:
+              case 1371:
                 resword = &wordlist[491];
                 goto compare;
-              case 1397:
+              case 1372:
                 resword = &wordlist[492];
                 goto compare;
-              case 1400:
+              case 1373:
                 resword = &wordlist[493];
                 goto compare;
-              case 1402:
+              case 1376:
                 resword = &wordlist[494];
                 goto compare;
-              case 1406:
+              case 1377:
                 resword = &wordlist[495];
                 goto compare;
-              case 1409:
+              case 1378:
                 resword = &wordlist[496];
                 goto compare;
-              case 1410:
+              case 1381:
                 resword = &wordlist[497];
                 goto compare;
-              case 1417:
+              case 1387:
                 resword = &wordlist[498];
                 goto compare;
-              case 1418:
+              case 1389:
                 resword = &wordlist[499];
                 goto compare;
-              case 1419:
+              case 1393:
                 resword = &wordlist[500];
                 goto compare;
-              case 1420:
+              case 1397:
                 resword = &wordlist[501];
                 goto compare;
-              case 1423:
+              case 1400:
                 resword = &wordlist[502];
                 goto compare;
-              case 1427:
+              case 1402:
                 resword = &wordlist[503];
                 goto compare;
-              case 1431:
+              case 1405:
                 resword = &wordlist[504];
                 goto compare;
-              case 1432:
+              case 1410:
                 resword = &wordlist[505];
                 goto compare;
-              case 1438:
+              case 1413:
                 resword = &wordlist[506];
                 goto compare;
-              case 1440:
+              case 1415:
                 resword = &wordlist[507];
                 goto compare;
-              case 1441:
+              case 1417:
                 resword = &wordlist[508];
                 goto compare;
-              case 1447:
+              case 1419:
                 resword = &wordlist[509];
                 goto compare;
-              case 1449:
+              case 1420:
                 resword = &wordlist[510];
                 goto compare;
-              case 1450:
+              case 1423:
                 resword = &wordlist[511];
                 goto compare;
-              case 1451:
+              case 1431:
                 resword = &wordlist[512];
                 goto compare;
-              case 1456:
+              case 1432:
                 resword = &wordlist[513];
                 goto compare;
-              case 1459:
+              case 1438:
                 resword = &wordlist[514];
                 goto compare;
-              case 1463:
+              case 1441:
                 resword = &wordlist[515];
                 goto compare;
-              case 1467:
+              case 1447:
                 resword = &wordlist[516];
                 goto compare;
-              case 1470:
+              case 1448:
                 resword = &wordlist[517];
                 goto compare;
-              case 1472:
+              case 1449:
                 resword = &wordlist[518];
                 goto compare;
-              case 1473:
+              case 1450:
                 resword = &wordlist[519];
                 goto compare;
-              case 1475:
+              case 1451:
                 resword = &wordlist[520];
                 goto compare;
-              case 1476:
+              case 1454:
                 resword = &wordlist[521];
                 goto compare;
-              case 1477:
+              case 1456:
                 resword = &wordlist[522];
                 goto compare;
-              case 1480:
+              case 1458:
                 resword = &wordlist[523];
                 goto compare;
-              case 1481:
+              case 1459:
                 resword = &wordlist[524];
                 goto compare;
-              case 1485:
+              case 1463:
                 resword = &wordlist[525];
                 goto compare;
-              case 1493:
+              case 1470:
                 resword = &wordlist[526];
                 goto compare;
-              case 1494:
+              case 1472:
                 resword = &wordlist[527];
                 goto compare;
-              case 1495:
+              case 1475:
                 resword = &wordlist[528];
                 goto compare;
-              case 1497:
+              case 1476:
                 resword = &wordlist[529];
                 goto compare;
-              case 1504:
+              case 1477:
                 resword = &wordlist[530];
                 goto compare;
-              case 1507:
+              case 1480:
                 resword = &wordlist[531];
                 goto compare;
-              case 1508:
+              case 1483:
                 resword = &wordlist[532];
                 goto compare;
-              case 1509:
+              case 1485:
                 resword = &wordlist[533];
                 goto compare;
-              case 1511:
+              case 1493:
                 resword = &wordlist[534];
                 goto compare;
-              case 1513:
+              case 1494:
                 resword = &wordlist[535];
                 goto compare;
-              case 1514:
+              case 1495:
                 resword = &wordlist[536];
                 goto compare;
-              case 1520:
+              case 1501:
                 resword = &wordlist[537];
                 goto compare;
-              case 1526:
+              case 1504:
                 resword = &wordlist[538];
                 goto compare;
-              case 1528:
+              case 1507:
                 resword = &wordlist[539];
                 goto compare;
-              case 1530:
+              case 1508:
                 resword = &wordlist[540];
                 goto compare;
-              case 1532:
+              case 1509:
                 resword = &wordlist[541];
                 goto compare;
-              case 1533:
+              case 1511:
                 resword = &wordlist[542];
                 goto compare;
-              case 1536:
+              case 1513:
                 resword = &wordlist[543];
                 goto compare;
-              case 1539:
+              case 1515:
                 resword = &wordlist[544];
                 goto compare;
-              case 1540:
+              case 1520:
                 resword = &wordlist[545];
                 goto compare;
-              case 1541:
+              case 1526:
                 resword = &wordlist[546];
                 goto compare;
-              case 1543:
+              case 1536:
                 resword = &wordlist[547];
                 goto compare;
-              case 1544:
+              case 1538:
                 resword = &wordlist[548];
                 goto compare;
-              case 1545:
+              case 1540:
                 resword = &wordlist[549];
                 goto compare;
-              case 1546:
+              case 1541:
                 resword = &wordlist[550];
                 goto compare;
-              case 1547:
+              case 1543:
                 resword = &wordlist[551];
                 goto compare;
-              case 1550:
+              case 1544:
                 resword = &wordlist[552];
                 goto compare;
-              case 1553:
+              case 1546:
                 resword = &wordlist[553];
                 goto compare;
-              case 1557:
+              case 1547:
                 resword = &wordlist[554];
                 goto compare;
-              case 1558:
+              case 1553:
                 resword = &wordlist[555];
                 goto compare;
-              case 1559:
+              case 1557:
                 resword = &wordlist[556];
                 goto compare;
-              case 1560:
+              case 1559:
                 resword = &wordlist[557];
                 goto compare;
-              case 1566:
+              case 1560:
                 resword = &wordlist[558];
                 goto compare;
-              case 1567:
+              case 1562:
                 resword = &wordlist[559];
                 goto compare;
-              case 1569:
+              case 1563:
                 resword = &wordlist[560];
                 goto compare;
-              case 1570:
+              case 1567:
                 resword = &wordlist[561];
                 goto compare;
-              case 1571:
+              case 1569:
                 resword = &wordlist[562];
                 goto compare;
-              case 1572:
+              case 1570:
                 resword = &wordlist[563];
                 goto compare;
-              case 1575:
+              case 1571:
                 resword = &wordlist[564];
                 goto compare;
-              case 1577:
+              case 1574:
                 resword = &wordlist[565];
                 goto compare;
-              case 1578:
+              case 1575:
                 resword = &wordlist[566];
                 goto compare;
-              case 1579:
+              case 1577:
                 resword = &wordlist[567];
                 goto compare;
-              case 1582:
+              case 1578:
                 resword = &wordlist[568];
                 goto compare;
-              case 1583:
+              case 1579:
                 resword = &wordlist[569];
                 goto compare;
-              case 1587:
+              case 1582:
                 resword = &wordlist[570];
                 goto compare;
-              case 1589:
+              case 1586:
                 resword = &wordlist[571];
                 goto compare;
-              case 1590:
+              case 1587:
                 resword = &wordlist[572];
                 goto compare;
-              case 1595:
+              case 1589:
                 resword = &wordlist[573];
                 goto compare;
-              case 1597:
+              case 1590:
                 resword = &wordlist[574];
                 goto compare;
-              case 1600:
+              case 1592:
                 resword = &wordlist[575];
                 goto compare;
-              case 1603:
+              case 1595:
                 resword = &wordlist[576];
                 goto compare;
-              case 1604:
+              case 1596:
                 resword = &wordlist[577];
                 goto compare;
-              case 1606:
+              case 1597:
                 resword = &wordlist[578];
                 goto compare;
-              case 1611:
+              case 1604:
                 resword = &wordlist[579];
                 goto compare;
-              case 1612:
+              case 1606:
                 resword = &wordlist[580];
                 goto compare;
-              case 1617:
+              case 1607:
                 resword = &wordlist[581];
                 goto compare;
-              case 1626:
+              case 1611:
                 resword = &wordlist[582];
                 goto compare;
-              case 1630:
+              case 1612:
                 resword = &wordlist[583];
                 goto compare;
-              case 1632:
+              case 1616:
                 resword = &wordlist[584];
                 goto compare;
-              case 1633:
+              case 1617:
                 resword = &wordlist[585];
                 goto compare;
-              case 1634:
+              case 1624:
                 resword = &wordlist[586];
                 goto compare;
-              case 1636:
+              case 1625:
                 resword = &wordlist[587];
                 goto compare;
-              case 1637:
+              case 1626:
                 resword = &wordlist[588];
                 goto compare;
-              case 1638:
+              case 1630:
                 resword = &wordlist[589];
                 goto compare;
-              case 1640:
+              case 1632:
                 resword = &wordlist[590];
                 goto compare;
-              case 1641:
+              case 1634:
                 resword = &wordlist[591];
                 goto compare;
-              case 1642:
+              case 1636:
                 resword = &wordlist[592];
                 goto compare;
-              case 1645:
+              case 1637:
                 resword = &wordlist[593];
                 goto compare;
-              case 1651:
+              case 1638:
                 resword = &wordlist[594];
                 goto compare;
-              case 1656:
+              case 1640:
                 resword = &wordlist[595];
                 goto compare;
-              case 1658:
+              case 1642:
                 resword = &wordlist[596];
                 goto compare;
-              case 1660:
+              case 1643:
                 resword = &wordlist[597];
                 goto compare;
-              case 1663:
+              case 1645:
                 resword = &wordlist[598];
                 goto compare;
-              case 1665:
+              case 1647:
                 resword = &wordlist[599];
                 goto compare;
-              case 1670:
+              case 1650:
                 resword = &wordlist[600];
                 goto compare;
-              case 1674:
+              case 1651:
                 resword = &wordlist[601];
                 goto compare;
-              case 1687:
+              case 1658:
                 resword = &wordlist[602];
                 goto compare;
-              case 1690:
+              case 1660:
                 resword = &wordlist[603];
                 goto compare;
-              case 1691:
+              case 1661:
                 resword = &wordlist[604];
                 goto compare;
-              case 1694:
+              case 1662:
                 resword = &wordlist[605];
                 goto compare;
-              case 1696:
+              case 1663:
                 resword = &wordlist[606];
                 goto compare;
-              case 1697:
+              case 1665:
                 resword = &wordlist[607];
                 goto compare;
-              case 1698:
+              case 1668:
                 resword = &wordlist[608];
                 goto compare;
-              case 1700:
+              case 1674:
                 resword = &wordlist[609];
                 goto compare;
-              case 1707:
+              case 1677:
                 resword = &wordlist[610];
                 goto compare;
-              case 1708:
+              case 1681:
                 resword = &wordlist[611];
                 goto compare;
-              case 1711:
+              case 1682:
                 resword = &wordlist[612];
                 goto compare;
-              case 1712:
+              case 1683:
                 resword = &wordlist[613];
                 goto compare;
-              case 1714:
+              case 1690:
                 resword = &wordlist[614];
                 goto compare;
-              case 1716:
+              case 1691:
                 resword = &wordlist[615];
                 goto compare;
-              case 1721:
+              case 1694:
                 resword = &wordlist[616];
                 goto compare;
-              case 1726:
+              case 1696:
                 resword = &wordlist[617];
                 goto compare;
-              case 1731:
+              case 1698:
                 resword = &wordlist[618];
                 goto compare;
-              case 1736:
+              case 1700:
                 resword = &wordlist[619];
                 goto compare;
-              case 1737:
+              case 1707:
                 resword = &wordlist[620];
                 goto compare;
-              case 1742:
+              case 1708:
                 resword = &wordlist[621];
                 goto compare;
-              case 1743:
+              case 1711:
                 resword = &wordlist[622];
                 goto compare;
-              case 1744:
+              case 1713:
                 resword = &wordlist[623];
                 goto compare;
-              case 1747:
+              case 1714:
                 resword = &wordlist[624];
                 goto compare;
-              case 1759:
+              case 1716:
                 resword = &wordlist[625];
                 goto compare;
-              case 1760:
+              case 1721:
                 resword = &wordlist[626];
                 goto compare;
-              case 1761:
+              case 1731:
                 resword = &wordlist[627];
                 goto compare;
-              case 1763:
+              case 1732:
                 resword = &wordlist[628];
                 goto compare;
-              case 1764:
+              case 1737:
                 resword = &wordlist[629];
                 goto compare;
-              case 1769:
+              case 1741:
                 resword = &wordlist[630];
                 goto compare;
-              case 1772:
+              case 1743:
                 resword = &wordlist[631];
                 goto compare;
-              case 1773:
+              case 1744:
                 resword = &wordlist[632];
                 goto compare;
-              case 1775:
+              case 1746:
                 resword = &wordlist[633];
                 goto compare;
-              case 1778:
+              case 1747:
                 resword = &wordlist[634];
                 goto compare;
-              case 1782:
+              case 1749:
                 resword = &wordlist[635];
                 goto compare;
-              case 1783:
+              case 1753:
                 resword = &wordlist[636];
                 goto compare;
-              case 1786:
+              case 1759:
                 resword = &wordlist[637];
                 goto compare;
-              case 1793:
+              case 1760:
                 resword = &wordlist[638];
                 goto compare;
-              case 1798:
+              case 1761:
                 resword = &wordlist[639];
                 goto compare;
-              case 1803:
+              case 1763:
                 resword = &wordlist[640];
                 goto compare;
-              case 1807:
+              case 1764:
                 resword = &wordlist[641];
                 goto compare;
-              case 1809:
+              case 1769:
                 resword = &wordlist[642];
                 goto compare;
-              case 1810:
+              case 1771:
                 resword = &wordlist[643];
                 goto compare;
-              case 1811:
+              case 1772:
                 resword = &wordlist[644];
                 goto compare;
-              case 1813:
+              case 1773:
                 resword = &wordlist[645];
                 goto compare;
-              case 1820:
+              case 1775:
                 resword = &wordlist[646];
                 goto compare;
-              case 1823:
+              case 1778:
                 resword = &wordlist[647];
                 goto compare;
-              case 1827:
+              case 1782:
                 resword = &wordlist[648];
                 goto compare;
-              case 1831:
+              case 1783:
                 resword = &wordlist[649];
                 goto compare;
-              case 1837:
+              case 1791:
                 resword = &wordlist[650];
                 goto compare;
-              case 1838:
+              case 1793:
                 resword = &wordlist[651];
                 goto compare;
-              case 1840:
+              case 1798:
                 resword = &wordlist[652];
                 goto compare;
-              case 1844:
+              case 1805:
                 resword = &wordlist[653];
                 goto compare;
-              case 1853:
+              case 1807:
                 resword = &wordlist[654];
                 goto compare;
-              case 1854:
+              case 1809:
                 resword = &wordlist[655];
                 goto compare;
-              case 1855:
+              case 1810:
                 resword = &wordlist[656];
                 goto compare;
-              case 1858:
+              case 1813:
                 resword = &wordlist[657];
                 goto compare;
-              case 1859:
+              case 1819:
                 resword = &wordlist[658];
                 goto compare;
-              case 1861:
+              case 1820:
                 resword = &wordlist[659];
                 goto compare;
-              case 1868:
+              case 1822:
                 resword = &wordlist[660];
                 goto compare;
-              case 1869:
+              case 1823:
                 resword = &wordlist[661];
                 goto compare;
-              case 1870:
+              case 1831:
                 resword = &wordlist[662];
                 goto compare;
-              case 1871:
+              case 1832:
                 resword = &wordlist[663];
                 goto compare;
-              case 1872:
+              case 1837:
                 resword = &wordlist[664];
                 goto compare;
-              case 1874:
+              case 1838:
                 resword = &wordlist[665];
                 goto compare;
-              case 1876:
+              case 1843:
                 resword = &wordlist[666];
                 goto compare;
-              case 1878:
+              case 1846:
                 resword = &wordlist[667];
                 goto compare;
-              case 1879:
+              case 1855:
                 resword = &wordlist[668];
                 goto compare;
-              case 1883:
+              case 1859:
                 resword = &wordlist[669];
                 goto compare;
-              case 1887:
+              case 1861:
                 resword = &wordlist[670];
                 goto compare;
-              case 1888:
+              case 1862:
                 resword = &wordlist[671];
                 goto compare;
-              case 1889:
+              case 1867:
                 resword = &wordlist[672];
                 goto compare;
-              case 1891:
+              case 1868:
                 resword = &wordlist[673];
                 goto compare;
-              case 1892:
+              case 1870:
                 resword = &wordlist[674];
                 goto compare;
-              case 1893:
+              case 1871:
                 resword = &wordlist[675];
                 goto compare;
-              case 1894:
+              case 1874:
                 resword = &wordlist[676];
                 goto compare;
-              case 1903:
+              case 1876:
                 resword = &wordlist[677];
                 goto compare;
-              case 1907:
+              case 1878:
                 resword = &wordlist[678];
                 goto compare;
-              case 1910:
+              case 1879:
                 resword = &wordlist[679];
                 goto compare;
-              case 1911:
+              case 1887:
                 resword = &wordlist[680];
                 goto compare;
-              case 1916:
+              case 1889:
                 resword = &wordlist[681];
                 goto compare;
-              case 1917:
+              case 1892:
                 resword = &wordlist[682];
                 goto compare;
-              case 1918:
+              case 1894:
                 resword = &wordlist[683];
                 goto compare;
-              case 1920:
+              case 1900:
                 resword = &wordlist[684];
                 goto compare;
-              case 1926:
+              case 1902:
                 resword = &wordlist[685];
                 goto compare;
-              case 1929:
+              case 1907:
                 resword = &wordlist[686];
                 goto compare;
-              case 1930:
+              case 1910:
                 resword = &wordlist[687];
                 goto compare;
-              case 1931:
+              case 1911:
                 resword = &wordlist[688];
                 goto compare;
-              case 1933:
+              case 1916:
                 resword = &wordlist[689];
                 goto compare;
-              case 1935:
+              case 1917:
                 resword = &wordlist[690];
                 goto compare;
-              case 1937:
+              case 1918:
                 resword = &wordlist[691];
                 goto compare;
-              case 1939:
+              case 1920:
                 resword = &wordlist[692];
                 goto compare;
-              case 1942:
+              case 1922:
                 resword = &wordlist[693];
                 goto compare;
-              case 1956:
+              case 1923:
                 resword = &wordlist[694];
                 goto compare;
-              case 1966:
+              case 1925:
                 resword = &wordlist[695];
                 goto compare;
-              case 1977:
+              case 1926:
                 resword = &wordlist[696];
                 goto compare;
-              case 1978:
+              case 1929:
                 resword = &wordlist[697];
                 goto compare;
-              case 1982:
+              case 1930:
                 resword = &wordlist[698];
                 goto compare;
-              case 1984:
+              case 1931:
                 resword = &wordlist[699];
                 goto compare;
-              case 1988:
+              case 1933:
                 resword = &wordlist[700];
                 goto compare;
-              case 1993:
+              case 1937:
                 resword = &wordlist[701];
                 goto compare;
-              case 1997:
+              case 1938:
                 resword = &wordlist[702];
                 goto compare;
-              case 1998:
+              case 1939:
                 resword = &wordlist[703];
                 goto compare;
-              case 1999:
+              case 1942:
                 resword = &wordlist[704];
                 goto compare;
-              case 2004:
+              case 1953:
                 resword = &wordlist[705];
                 goto compare;
-              case 2015:
+              case 1961:
                 resword = &wordlist[706];
                 goto compare;
-              case 2016:
+              case 1966:
                 resword = &wordlist[707];
                 goto compare;
-              case 2023:
+              case 1973:
                 resword = &wordlist[708];
                 goto compare;
-              case 2024:
+              case 1977:
                 resword = &wordlist[709];
                 goto compare;
-              case 2026:
+              case 1978:
                 resword = &wordlist[710];
                 goto compare;
-              case 2028:
+              case 1982:
                 resword = &wordlist[711];
                 goto compare;
-              case 2036:
+              case 1984:
                 resword = &wordlist[712];
                 goto compare;
-              case 2039:
+              case 1988:
                 resword = &wordlist[713];
                 goto compare;
-              case 2040:
+              case 1993:
                 resword = &wordlist[714];
                 goto compare;
-              case 2046:
+              case 1995:
                 resword = &wordlist[715];
                 goto compare;
-              case 2053:
+              case 1996:
                 resword = &wordlist[716];
                 goto compare;
-              case 2055:
+              case 1997:
                 resword = &wordlist[717];
                 goto compare;
-              case 2056:
+              case 1998:
                 resword = &wordlist[718];
                 goto compare;
-              case 2058:
+              case 2004:
                 resword = &wordlist[719];
                 goto compare;
-              case 2059:
+              case 2015:
                 resword = &wordlist[720];
                 goto compare;
-              case 2063:
+              case 2016:
                 resword = &wordlist[721];
                 goto compare;
-              case 2069:
+              case 2018:
                 resword = &wordlist[722];
                 goto compare;
-              case 2071:
+              case 2026:
                 resword = &wordlist[723];
                 goto compare;
-              case 2075:
+              case 2028:
                 resword = &wordlist[724];
                 goto compare;
-              case 2078:
+              case 2032:
                 resword = &wordlist[725];
                 goto compare;
-              case 2093:
+              case 2036:
                 resword = &wordlist[726];
                 goto compare;
-              case 2097:
+              case 2039:
                 resword = &wordlist[727];
                 goto compare;
-              case 2099:
+              case 2040:
                 resword = &wordlist[728];
                 goto compare;
-              case 2100:
+              case 2044:
                 resword = &wordlist[729];
                 goto compare;
-              case 2115:
+              case 2046:
                 resword = &wordlist[730];
                 goto compare;
-              case 2118:
+              case 2053:
                 resword = &wordlist[731];
                 goto compare;
-              case 2119:
+              case 2055:
                 resword = &wordlist[732];
                 goto compare;
-              case 2121:
+              case 2056:
                 resword = &wordlist[733];
                 goto compare;
-              case 2128:
+              case 2057:
                 resword = &wordlist[734];
                 goto compare;
-              case 2129:
+              case 2058:
                 resword = &wordlist[735];
                 goto compare;
-              case 2163:
+              case 2062:
                 resword = &wordlist[736];
                 goto compare;
-              case 2186:
+              case 2063:
                 resword = &wordlist[737];
                 goto compare;
-              case 2189:
+              case 2069:
                 resword = &wordlist[738];
                 goto compare;
-              case 2193:
+              case 2071:
                 resword = &wordlist[739];
                 goto compare;
-              case 2194:
+              case 2075:
                 resword = &wordlist[740];
                 goto compare;
-              case 2196:
+              case 2076:
                 resword = &wordlist[741];
                 goto compare;
-              case 2203:
+              case 2078:
                 resword = &wordlist[742];
                 goto compare;
-              case 2204:
+              case 2085:
                 resword = &wordlist[743];
                 goto compare;
-              case 2215:
+              case 2087:
                 resword = &wordlist[744];
                 goto compare;
-              case 2219:
+              case 2092:
                 resword = &wordlist[745];
                 goto compare;
-              case 2222:
+              case 2093:
                 resword = &wordlist[746];
                 goto compare;
-              case 2223:
+              case 2094:
                 resword = &wordlist[747];
                 goto compare;
-              case 2224:
+              case 2099:
                 resword = &wordlist[748];
                 goto compare;
-              case 2226:
+              case 2108:
                 resword = &wordlist[749];
                 goto compare;
-              case 2232:
+              case 2112:
                 resword = &wordlist[750];
                 goto compare;
-              case 2237:
+              case 2113:
                 resword = &wordlist[751];
                 goto compare;
-              case 2243:
+              case 2118:
                 resword = &wordlist[752];
                 goto compare;
-              case 2251:
+              case 2121:
                 resword = &wordlist[753];
                 goto compare;
-              case 2252:
+              case 2128:
                 resword = &wordlist[754];
                 goto compare;
-              case 2256:
+              case 2158:
                 resword = &wordlist[755];
                 goto compare;
-              case 2262:
+              case 2162:
                 resword = &wordlist[756];
                 goto compare;
-              case 2271:
+              case 2176:
                 resword = &wordlist[757];
                 goto compare;
-              case 2275:
+              case 2181:
                 resword = &wordlist[758];
                 goto compare;
-              case 2279:
+              case 2186:
                 resword = &wordlist[759];
                 goto compare;
-              case 2281:
+              case 2191:
                 resword = &wordlist[760];
                 goto compare;
-              case 2282:
+              case 2193:
                 resword = &wordlist[761];
                 goto compare;
-              case 2290:
+              case 2196:
                 resword = &wordlist[762];
                 goto compare;
-              case 2293:
+              case 2203:
                 resword = &wordlist[763];
                 goto compare;
-              case 2321:
+              case 2204:
                 resword = &wordlist[764];
                 goto compare;
-              case 2325:
+              case 2209:
                 resword = &wordlist[765];
                 goto compare;
-              case 2330:
+              case 2215:
                 resword = &wordlist[766];
                 goto compare;
-              case 2334:
+              case 2219:
                 resword = &wordlist[767];
                 goto compare;
-              case 2335:
+              case 2224:
                 resword = &wordlist[768];
                 goto compare;
-              case 2337:
+              case 2226:
                 resword = &wordlist[769];
                 goto compare;
-              case 2339:
+              case 2228:
                 resword = &wordlist[770];
                 goto compare;
-              case 2350:
+              case 2232:
                 resword = &wordlist[771];
                 goto compare;
-              case 2372:
+              case 2237:
                 resword = &wordlist[772];
                 goto compare;
-              case 2373:
+              case 2243:
                 resword = &wordlist[773];
                 goto compare;
-              case 2377:
+              case 2248:
                 resword = &wordlist[774];
                 goto compare;
-              case 2384:
+              case 2251:
                 resword = &wordlist[775];
                 goto compare;
-              case 2388:
+              case 2252:
                 resword = &wordlist[776];
                 goto compare;
-              case 2397:
+              case 2271:
                 resword = &wordlist[777];
                 goto compare;
-              case 2412:
+              case 2274:
                 resword = &wordlist[778];
                 goto compare;
-              case 2413:
+              case 2275:
                 resword = &wordlist[779];
                 goto compare;
-              case 2414:
+              case 2279:
                 resword = &wordlist[780];
                 goto compare;
-              case 2415:
+              case 2281:
                 resword = &wordlist[781];
                 goto compare;
-              case 2417:
+              case 2290:
                 resword = &wordlist[782];
                 goto compare;
-              case 2425:
+              case 2292:
                 resword = &wordlist[783];
                 goto compare;
-              case 2448:
+              case 2294:
                 resword = &wordlist[784];
                 goto compare;
-              case 2449:
+              case 2321:
                 resword = &wordlist[785];
                 goto compare;
-              case 2457:
+              case 2322:
                 resword = &wordlist[786];
                 goto compare;
-              case 2464:
+              case 2325:
                 resword = &wordlist[787];
                 goto compare;
-              case 2465:
+              case 2330:
                 resword = &wordlist[788];
                 goto compare;
-              case 2475:
+              case 2334:
                 resword = &wordlist[789];
                 goto compare;
-              case 2477:
+              case 2335:
                 resword = &wordlist[790];
                 goto compare;
-              case 2480:
+              case 2337:
                 resword = &wordlist[791];
                 goto compare;
-              case 2488:
+              case 2339:
                 resword = &wordlist[792];
                 goto compare;
-              case 2490:
+              case 2370:
                 resword = &wordlist[793];
                 goto compare;
-              case 2494:
+              case 2372:
                 resword = &wordlist[794];
                 goto compare;
-              case 2495:
+              case 2381:
                 resword = &wordlist[795];
                 goto compare;
-              case 2500:
+              case 2384:
                 resword = &wordlist[796];
                 goto compare;
-              case 2501:
+              case 2388:
                 resword = &wordlist[797];
                 goto compare;
-              case 2508:
+              case 2397:
                 resword = &wordlist[798];
                 goto compare;
-              case 2521:
+              case 2412:
                 resword = &wordlist[799];
                 goto compare;
-              case 2523:
+              case 2414:
                 resword = &wordlist[800];
                 goto compare;
-              case 2540:
+              case 2415:
                 resword = &wordlist[801];
                 goto compare;
-              case 2548:
+              case 2417:
                 resword = &wordlist[802];
                 goto compare;
-              case 2552:
+              case 2425:
                 resword = &wordlist[803];
                 goto compare;
-              case 2561:
+              case 2426:
                 resword = &wordlist[804];
                 goto compare;
-              case 2562:
+              case 2437:
                 resword = &wordlist[805];
                 goto compare;
-              case 2563:
+              case 2442:
                 resword = &wordlist[806];
                 goto compare;
-              case 2566:
+              case 2448:
                 resword = &wordlist[807];
                 goto compare;
-              case 2571:
+              case 2449:
                 resword = &wordlist[808];
                 goto compare;
-              case 2585:
+              case 2457:
                 resword = &wordlist[809];
                 goto compare;
-              case 2589:
+              case 2458:
                 resword = &wordlist[810];
                 goto compare;
-              case 2593:
+              case 2464:
                 resword = &wordlist[811];
                 goto compare;
-              case 2604:
+              case 2465:
                 resword = &wordlist[812];
                 goto compare;
-              case 2616:
+              case 2475:
                 resword = &wordlist[813];
                 goto compare;
-              case 2642:
+              case 2477:
                 resword = &wordlist[814];
                 goto compare;
-              case 2646:
+              case 2488:
                 resword = &wordlist[815];
                 goto compare;
-              case 2676:
+              case 2494:
                 resword = &wordlist[816];
                 goto compare;
-              case 2680:
+              case 2495:
                 resword = &wordlist[817];
                 goto compare;
-              case 2682:
+              case 2501:
                 resword = &wordlist[818];
                 goto compare;
-              case 2685:
+              case 2508:
                 resword = &wordlist[819];
                 goto compare;
-              case 2696:
+              case 2521:
                 resword = &wordlist[820];
                 goto compare;
-              case 2699:
+              case 2523:
                 resword = &wordlist[821];
                 goto compare;
-              case 2702:
+              case 2530:
                 resword = &wordlist[822];
                 goto compare;
-              case 2708:
+              case 2531:
                 resword = &wordlist[823];
                 goto compare;
-              case 2716:
+              case 2540:
                 resword = &wordlist[824];
                 goto compare;
-              case 2719:
+              case 2548:
                 resword = &wordlist[825];
                 goto compare;
-              case 2739:
+              case 2552:
                 resword = &wordlist[826];
                 goto compare;
-              case 2746:
+              case 2561:
                 resword = &wordlist[827];
                 goto compare;
-              case 2751:
+              case 2571:
                 resword = &wordlist[828];
                 goto compare;
-              case 2768:
+              case 2585:
                 resword = &wordlist[829];
                 goto compare;
-              case 2788:
+              case 2592:
                 resword = &wordlist[830];
                 goto compare;
-              case 2797:
+              case 2593:
                 resword = &wordlist[831];
                 goto compare;
-              case 2809:
+              case 2596:
                 resword = &wordlist[832];
                 goto compare;
-              case 2812:
+              case 2604:
                 resword = &wordlist[833];
                 goto compare;
-              case 2817:
+              case 2635:
                 resword = &wordlist[834];
                 goto compare;
-              case 2835:
+              case 2642:
                 resword = &wordlist[835];
                 goto compare;
-              case 2836:
+              case 2663:
                 resword = &wordlist[836];
                 goto compare;
-              case 2848:
+              case 2676:
                 resword = &wordlist[837];
                 goto compare;
-              case 2862:
+              case 2680:
                 resword = &wordlist[838];
                 goto compare;
-              case 2867:
+              case 2685:
                 resword = &wordlist[839];
                 goto compare;
-              case 2869:
+              case 2696:
                 resword = &wordlist[840];
                 goto compare;
-              case 2885:
+              case 2699:
                 resword = &wordlist[841];
                 goto compare;
-              case 2896:
+              case 2701:
                 resword = &wordlist[842];
                 goto compare;
-              case 2910:
+              case 2704:
                 resword = &wordlist[843];
                 goto compare;
-              case 2919:
+              case 2708:
                 resword = &wordlist[844];
                 goto compare;
-              case 2930:
+              case 2732:
                 resword = &wordlist[845];
                 goto compare;
-              case 2938:
+              case 2739:
                 resword = &wordlist[846];
                 goto compare;
-              case 2970:
+              case 2746:
                 resword = &wordlist[847];
                 goto compare;
-              case 2977:
+              case 2747:
                 resword = &wordlist[848];
                 goto compare;
-              case 3045:
+              case 2751:
                 resword = &wordlist[849];
                 goto compare;
-              case 3048:
+              case 2761:
                 resword = &wordlist[850];
                 goto compare;
-              case 3056:
+              case 2768:
                 resword = &wordlist[851];
                 goto compare;
-              case 3098:
+              case 2776:
                 resword = &wordlist[852];
                 goto compare;
-              case 3123:
+              case 2788:
                 resword = &wordlist[853];
                 goto compare;
-              case 3130:
+              case 2797:
                 resword = &wordlist[854];
                 goto compare;
-              case 3131:
+              case 2803:
                 resword = &wordlist[855];
                 goto compare;
-              case 3171:
+              case 2809:
                 resword = &wordlist[856];
                 goto compare;
-              case 3213:
+              case 2810:
                 resword = &wordlist[857];
                 goto compare;
-              case 3214:
+              case 2813:
                 resword = &wordlist[858];
                 goto compare;
-              case 3222:
+              case 2816:
                 resword = &wordlist[859];
                 goto compare;
-              case 3223:
+              case 2817:
                 resword = &wordlist[860];
                 goto compare;
-              case 3235:
+              case 2835:
                 resword = &wordlist[861];
                 goto compare;
-              case 3304:
+              case 2836:
                 resword = &wordlist[862];
                 goto compare;
-              case 3336:
+              case 2867:
                 resword = &wordlist[863];
                 goto compare;
-              case 3404:
+              case 2910:
                 resword = &wordlist[864];
                 goto compare;
-              case 3448:
+              case 2919:
                 resword = &wordlist[865];
                 goto compare;
-              case 3455:
+              case 2930:
                 resword = &wordlist[866];
                 goto compare;
-              case 3494:
+              case 2938:
                 resword = &wordlist[867];
                 goto compare;
-              case 3520:
+              case 2946:
                 resword = &wordlist[868];
                 goto compare;
-              case 3523:
+              case 2977:
                 resword = &wordlist[869];
                 goto compare;
-              case 3533:
+              case 3021:
                 resword = &wordlist[870];
                 goto compare;
-              case 3539:
+              case 3037:
                 resword = &wordlist[871];
                 goto compare;
-              case 3675:
+              case 3045:
                 resword = &wordlist[872];
                 goto compare;
-              case 3735:
+              case 3052:
                 resword = &wordlist[873];
                 goto compare;
-              case 4000:
+              case 3079:
                 resword = &wordlist[874];
                 goto compare;
-              case 4295:
+              case 3086:
                 resword = &wordlist[875];
                 goto compare;
-              case 4485:
+              case 3090:
                 resword = &wordlist[876];
                 goto compare;
+              case 3098:
+                resword = &wordlist[877];
+                goto compare;
+              case 3103:
+                resword = &wordlist[878];
+                goto compare;
+              case 3123:
+                resword = &wordlist[879];
+                goto compare;
+              case 3125:
+                resword = &wordlist[880];
+                goto compare;
+              case 3130:
+                resword = &wordlist[881];
+                goto compare;
+              case 3131:
+                resword = &wordlist[882];
+                goto compare;
+              case 3144:
+                resword = &wordlist[883];
+                goto compare;
+              case 3167:
+                resword = &wordlist[884];
+                goto compare;
+              case 3171:
+                resword = &wordlist[885];
+                goto compare;
+              case 3211:
+                resword = &wordlist[886];
+                goto compare;
+              case 3213:
+                resword = &wordlist[887];
+                goto compare;
+              case 3214:
+                resword = &wordlist[888];
+                goto compare;
+              case 3222:
+                resword = &wordlist[889];
+                goto compare;
+              case 3223:
+                resword = &wordlist[890];
+                goto compare;
+              case 3225:
+                resword = &wordlist[891];
+                goto compare;
+              case 3297:
+                resword = &wordlist[892];
+                goto compare;
+              case 3304:
+                resword = &wordlist[893];
+                goto compare;
+              case 3336:
+                resword = &wordlist[894];
+                goto compare;
+              case 3404:
+                resword = &wordlist[895];
+                goto compare;
+              case 3448:
+                resword = &wordlist[896];
+                goto compare;
+              case 3455:
+                resword = &wordlist[897];
+                goto compare;
+              case 3520:
+                resword = &wordlist[898];
+                goto compare;
+              case 3523:
+                resword = &wordlist[899];
+                goto compare;
+              case 3530:
+                resword = &wordlist[900];
+                goto compare;
+              case 3533:
+                resword = &wordlist[901];
+                goto compare;
+              case 3560:
+                resword = &wordlist[902];
+                goto compare;
+              case 3735:
+                resword = &wordlist[903];
+                goto compare;
+              case 3846:
+                resword = &wordlist[904];
+                goto compare;
+              case 4000:
+                resword = &wordlist[905];
+                goto compare;
+              case 4037:
+                resword = &wordlist[906];
+                goto compare;
+              case 4087:
+                resword = &wordlist[907];
+                goto compare;
+              case 4319:
+                resword = &wordlist[908];
+                goto compare;
+              case 4485:
+                resword = &wordlist[909];
+                goto compare;
+              case 4536:
+                resword = &wordlist[910];
+                goto compare;
             }
           return 0;
         compare:
--- writerfilter/source/ooxml/makefile.mk	15 Jun 2007 09:26:53 -0000	1.6
+++ writerfilter/source/ooxml/makefile.mk	2 Jul 2007 17:16:56 -0000	1.6.4.1
@@ -98,6 +98,7 @@
 
 OOXMLMODEL=model.xml
 OOXMLPREPROCESSXSL=modelpreprocess.xsl
+OOXMLRESOURCESTOOLSXSL=resourcestools.xsl
 OOXMLRESORUCETOKENSXSL=resourcestokens.xsl
 OOXMLRESOURCESXSL=resources.xsl
 OOXMLRESOURCESIMPLXSL=resourcesimpl.xsl
@@ -123,7 +124,7 @@
 XALANJAR=$(SOLARVER)$/$(INPATH)$/bin$(UPDMINOREXT)$/xalan.jar
 XALAN=$(JAVA) -jar $(XALANJAR)
 
-$(MODELPROCESSED): $(OOXMLPREPROCESSXSL) $(OOXMLMODEL)
+$(MODELPROCESSED): $(OOXMLPREPROCESSXSL) $(OOXMLMODEL) $(OOXMLRESOURCESTOOLSXSL)
 	$(XALAN) -xsl $(OOXMLPREPROCESSXSL) -in $(OOXMLMODEL) > $(MODELPROCESSED)
 
 $(OOXMLTOKENSHXX): $(OOXMLRESORUCETOKENSXSL) $(MODELPROCESSED)
--- writerfilter/source/ooxml/model.xml	27 Jun 2007 13:16:27 -0000	1.64
+++ writerfilter/source/ooxml/model.xml	18 Jul 2007 13:40:30 -0000	1.64.4.9
@@ -1,12 +1,640 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <model xmlns:rng="http://relaxng.org/ns/structure/1.0">
-  <namespace-alias name="http://schemas.openxmlformats.org/drawingml/2006/main" alias="drawingml"/>
-  <namespace-alias name="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing" alias="wordprocessingDrawing"/>
-  <namespace-alias name="http://schemas.openxmlformats.org/schemaLibrary/2006/main" alias="schemaLibrary"/>
-  <namespace-alias name="http://schemas.openxmlformats.org/officeDocument/2006/math" alias="math"/>
-  <namespace-alias name="http://schemas.openxmlformats.org/drawingml/2006/picture" alias="picture"/>
-  <namespace-alias name="http://schemas.openxmlformats.org/wordprocessingml/2006/main" alias="wordprocessingml"/>
-  <namespace-alias name="http://schemas.openxmlformats.org/officeDocument/2006/relationships" alias="relationships"/>
+  <namespace-alias alias="drawingml" name="http://schemas.openxmlformats.org/drawingml/2006/main"/>
+  <namespace-alias alias="wordprocessingDrawing" name="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing"/>
+  <namespace-alias alias="schemaLibrary" name="http://schemas.openxmlformats.org/schemaLibrary/2006/main"/>
+  <namespace-alias alias="math" name="http://schemas.openxmlformats.org/officeDocument/2006/math"/>
+  <namespace-alias alias="picture" name="http://schemas.openxmlformats.org/drawingml/2006/picture"/>
+  <namespace-alias alias="wordprocessingml" name="http://schemas.openxmlformats.org/wordprocessingml/2006/main"/>
+  <namespace-alias alias="relationships" name="http://schemas.openxmlformats.org/officeDocument/2006/relationships"/>
+  <namespace-alias alias="theme" name="http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme"/>
+  <namespace name="a" url="http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme">
+    <grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2006/xpath-functions" ns="http://schemas.openxmlformats.org/drawingml/2006/main" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
+<!-- ISO RELAX NG Schema -->
+      <define name="ST_StyleMatrixColumnIndex">
+        <data type="unsignedInt">
+          <xs:documentation>Style Matrix Column Index</xs:documentation>
+        </data>
+      </define>
+      <define name="ST_FontCollectionIndex">
+        <list>
+          <xs:documentation>Font Collection Index</xs:documentation>
+          <choice>
+<!-- Major Font -->
+            <value>major</value>
+<!-- Minor Font -->
+            <value>minor</value>
+<!-- None -->
+            <value>none</value>
+          </choice>
+        </list>
+      </define>
+      <define name="ST_ColorSchemeIndex">
+        <list>
+          <xs:documentation>Theme Color Reference</xs:documentation>
+          <choice>
+<!-- Dark 1 -->
+            <value>dk1</value>
+<!-- Light 1 -->
+            <value>lt1</value>
+<!-- Dark 2 -->
+            <value>dk2</value>
+<!-- Light 2 -->
+            <value>lt2</value>
+<!-- Accent 1 -->
+            <value>accent1</value>
+<!-- Accent 2 -->
+            <value>accent2</value>
+<!-- Accent 3 -->
+            <value>accent3</value>
+<!-- Accent 4 -->
+            <value>accent4</value>
+<!-- Accent 5 -->
+            <value>accent5</value>
+<!-- Accent 6 -->
+            <value>accent6</value>
+<!-- Hyperlink -->
+            <value>hlink</value>
+<!-- Followed Hyperlink -->
+            <value>folHlink</value>
+          </choice>
+        </list>
+      </define>
+      <define name="CT_ColorScheme">
+        <group>
+          <element name="dk1">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="lt1">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="dk2">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="lt2">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="accent1">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="accent2">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="accent3">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="accent4">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="accent5">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="accent6">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="hlink">
+            <ref name="CT_Color"/>
+          </element>
+          <element name="folHlink">
+            <ref name="CT_Color"/>
+          </element>
+          <optional>
+            <element name="extLst">
+              <ref name="CT_OfficeArtExtensionList"/>
+            </element>
+          </optional>
+        </group>
+        <attribute name="name">
+          <data type="string">
+            <xs:documentation>Name</xs:documentation>
+          </data>
+          <xs:documentation>Name</xs:documentation>
+        </attribute>
+      </define>
+      <define name="CT_CustomColor">
+        <ref name="EG_ColorChoice"/>
+        <optional>
+          <attribute name="name">
+            <data type="string">
+              <xs:documentation>Name</xs:documentation>
+            </data>
+            <xs:documentation>Name</xs:documentation>
+          </attribute>
+        </optional>
+      </define>
+      <define name="CT_SupplementalFont">
+        <attribute name="script">
+          <data type="string">
+            <xs:documentation>Script</xs:documentation>
+          </data>
+          <xs:documentation>Script</xs:documentation>
+        </attribute>
+        <attribute name="typeface">
+          <text/>
+          <xs:documentation>Typeface</xs:documentation>
+        </attribute>
+      </define>
+      <define name="CT_CustomColorList">
+        <zeroOrMore>
+          <element name="custClr">
+            <ref name="CT_CustomColor"/>
+          </element>
+        </zeroOrMore>
+      </define>
+      <define name="CT_FontCollection">
+        <element name="latin">
+          <ref name="CT_TextFont"/>
+        </element>
+        <element name="ea">
+          <ref name="CT_TextFont"/>
+        </element>
+        <element name="cs">
+          <ref name="CT_TextFont"/>
+        </element>
+        <zeroOrMore>
+          <element name="font">
+            <ref name="CT_SupplementalFont"/>
+          </element>
+        </zeroOrMore>
+        <optional>
+          <element name="extLst">
+            <ref name="CT_OfficeArtExtensionList"/>
+          </element>
+        </optional>
+      </define>
+      <define name="CT_EffectStyleItem">
+        <ref name="EG_EffectProperties"/>
+        <optional>
+          <element name="scene3d">
+            <ref name="CT_Scene3D"/>
+          </element>
+        </optional>
+        <optional>
+          <element name="sp3d">
+            <ref name="CT_Shape3D"/>
+          </element>
+        </optional>
+      </define>
+      <define name="CT_FontScheme">
+        <group>
+          <element name="majorFont">
+            <ref name="CT_FontCollection"/>
+          </element>
+          <element name="minorFont">
+            <ref name="CT_FontCollection"/>
+          </element>
+          <optional>
+            <element name="extLst">
+              <ref name="CT_OfficeArtExtensionList"/>
+            </element>
+          </optional>
+        </group>
+        <attribute name="name">
+          <data type="string">
+            <xs:documentation>Name</xs:documentation>
+          </data>
+          <xs:documentation>Name</xs:documentation>
+        </attribute>
+      </define>
+      <define name="CT_FillStyleList">
+        <oneOrMore>
+          <ref name="EG_FillProperties"/>
+        </oneOrMore>
+      </define>
+      <define name="CT_LineStyleList">
+        <oneOrMore>
+          <element name="ln">
+            <ref name="CT_LineProperties"/>
+          </element>
+        </oneOrMore>
+      </define>
+      <define name="CT_EffectStyleList">
+        <oneOrMore>
+          <element name="effectStyle">
+            <ref name="CT_EffectStyleItem"/>
+          </element>
+        </oneOrMore>
+      </define>
+      <define name="CT_BackgroundFillStyleList">
+        <oneOrMore>
+          <ref name="EG_FillProperties"/>
+        </oneOrMore>
+      </define>
+      <define name="CT_StyleMatrix">
+        <group>
+          <element name="fillStyleLst">
+            <ref name="CT_FillStyleList"/>
+          </element>
+          <element name="lnStyleLst">
+            <ref name="CT_LineStyleList"/>
+          </element>
+          <element name="effectStyleLst">
+            <ref name="CT_EffectStyleList"/>
+          </element>
+          <element name="bgFillStyleLst">
+            <ref name="CT_BackgroundFillStyleList"/>
+          </element>
+        </group>
+        <optional>
+          <attribute name="name">
+            <data type="string">
+              <xs:documentation>Name</xs:documentation>
+            </data>
+            <xs:documentation>Name</xs:documentation>
+          </attribute>
+        </optional>
+      </define>
+      <define name="CT_BaseStyles">
+        <element name="clrScheme">
+          <ref name="CT_ColorScheme"/>
+        </element>
+        <element name="fontScheme">
+          <ref name="CT_FontScheme"/>
+        </element>
+        <element name="fmtScheme">
+          <ref name="CT_StyleMatrix"/>
+        </element>
+        <optional>
+          <element name="extLst">
+            <ref name="CT_OfficeArtExtensionList"/>
+          </element>
+        </optional>
+      </define>
+    </grammar>
+    <grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2006/xpath-functions" ns="http://schemas.openxmlformats.org/drawingml/2006/main" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
+<!-- ISO RELAX NG Schema -->
+      <include href="dml-baseTypes.rng"/>
+      <include href="dml-shapeEffects.rng"/>
+      <include href="dml-shapeLineProperties.rng"/>
+      <define name="ST_TextPoint">
+        <data type="int">
+          <xs:documentation>Text Point</xs:documentation>
+          <param name="minInclusive">-400000</param>
+          <param name="maxInclusive">400000</param>
+        </data>
+      </define>
+      <define name="ST_TextNonNegativePoint">
+        <data type="int">
+          <xs:documentation>Text Non-Negative Point</xs:documentation>
+          <param name="minInclusive">0</param>
+          <param name="maxInclusive">400000</param>
+        </data>
+      </define>
+      <define name="ST_TextFontSize">
+        <data type="int">
+          <xs:documentation>Text Font Size</xs:documentation>
+          <param name="minInclusive">100</param>
+          <param name="maxInclusive">400000</param>
+        </data>
+      </define>
+      <define name="ST_Panose">
+        <data type="hexBinary">
+          <xs:documentation>Panose Type</xs:documentation>
+          <param name="length">10</param>
+        </data>
+      </define>
+      <define name="ST_TextTypeface">
+        <data type="string">
+          <xs:documentation>Text Typeface</xs:documentation>
+        </data>
+      </define>
+      <define name="CT_TextFont">
+        <attribute name="typeface">
+          <ref name="ST_TextTypeface"/>
+          <xs:documentation>Text Typeface</xs:documentation>
+        </attribute>
+        <optional>
+          <attribute name="panose">
+            <ref name="ST_Panose"/>
+            <xs:documentation>Panose Setting</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="pitchFamily">
+            <data type="byte">
+              <xs:documentation>Similar Font Family</xs:documentation>
+            </data>
+            <xs:documentation>Similar Font Family</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="charset">
+            <data type="byte">
+              <xs:documentation>Similar Character Set</xs:documentation>
+            </data>
+            <xs:documentation>Similar Character Set</xs:documentation>
+          </attribute>
+        </optional>
+      </define>
+      <define name="ST_TextLanguageID">
+        <data type="string">
+          <xs:documentation>Language ID</xs:documentation>
+        </data>
+      </define>
+      <define name="ST_TextUnderlineType">
+        <list>
+          <xs:documentation>Text Underline Types</xs:documentation>
+          <choice>
+<!-- Text Underline Enum ( None ) -->
+            <value>none</value>
+<!-- Text Underline Enum ( Words ) -->
+            <value>words</value>
+<!-- Text Underline Enum ( Single ) -->
+            <value>sng</value>
+<!-- Text Underline Enum ( Double ) -->
+            <value>dbl</value>
+<!-- Text Underline Enum ( Heavy ) -->
+            <value>heavy</value>
+<!-- Text Underline Enum ( Dotted ) -->
+            <value>dotted</value>
+<!-- Text Underline Enum ( Heavy Dotted  ) -->
+            <value>dottedHeavy</value>
+<!-- Text Underline Enum ( Dashed ) -->
+            <value>dash</value>
+<!-- Text Underline Enum ( Heavy Dashed ) -->
+            <value>dashHeavy</value>
+<!-- Text Underline Enum ( Long Dashed ) -->
+            <value>dashLong</value>
+<!-- Text Underline Enum ( Heavy Long Dashed ) -->
+            <value>dashLongHeavy</value>
+<!-- Text Underline Enum ( Dot Dash ) -->
+            <value>dotDash</value>
+<!-- Text Underline Enum ( Heavy Dot Dash ) -->
+            <value>dotDashHeavy</value>
+<!-- Text Underline Enum ( Dot Dot Dash ) -->
+            <value>dotDotDash</value>
+<!-- Text Underline Enum ( Heavy Dot Dot Dash ) -->
+            <value>dotDotDashHeavy</value>
+<!-- Text Underline Enum ( Wavy ) -->
+            <value>wavy</value>
+<!-- Text Underline Enum ( Heavy Wavy ) -->
+            <value>wavyHeavy</value>
+<!-- Text Underline Enum ( Double Wavy ) -->
+            <value>wavyDbl</value>
+          </choice>
+        </list>
+      </define>
+      <define name="CT_TextUnderlineLineFollowText">
+        <empty/>
+      </define>
+      <define name="CT_TextUnderlineFillFollowText">
+        <empty/>
+      </define>
+      <define name="CT_TextUnderlineFillGroupWrapper">
+        <ref name="EG_FillProperties"/>
+      </define>
+      <define name="EG_TextUnderlineLine">
+        <choice>
+          <element name="uLnTx">
+            <ref name="CT_TextUnderlineLineFollowText"/>
+          </element>
+          <optional>
+            <element name="uLn">
+              <ref name="CT_LineProperties"/>
+            </element>
+          </optional>
+        </choice>
+      </define>
+      <define name="EG_TextUnderlineFill">
+        <choice>
+          <element name="uFillTx">
+            <ref name="CT_TextUnderlineFillFollowText"/>
+          </element>
+          <element name="uFill">
+            <ref name="CT_TextUnderlineFillGroupWrapper"/>
+          </element>
+        </choice>
+      </define>
+      <define name="ST_TextStrikeType">
+        <list>
+          <xs:documentation>Text Strike Type</xs:documentation>
+          <choice>
+<!-- Text Strike Enum ( No Strike ) -->
+            <value>noStrike</value>
+<!-- Text Strike Enum ( Single Strike ) -->
+            <value>sngStrike</value>
+<!-- Text Strike Enum ( Double Strike ) -->
+            <value>dblStrike</value>
+          </choice>
+        </list>
+      </define>
+      <define name="ST_TextCapsType">
+        <list>
+          <xs:documentation>Text Cap Types</xs:documentation>
+          <choice>
+<!-- Text Caps Enum ( None ) -->
+            <value>none</value>
+<!-- Text Caps Enum ( Small ) -->
+            <value>small</value>
+<!-- Text Caps Enum ( All ) -->
+            <value>all</value>
+          </choice>
+        </list>
+      </define>
+      <define name="CT_TextCharacterProperties">
+        <group>
+          <optional>
+            <element name="ln">
+              <ref name="CT_LineProperties"/>
+            </element>
+          </optional>
+          <optional>
+            <ref name="EG_FillProperties"/>
+          </optional>
+          <optional>
+            <ref name="EG_EffectProperties"/>
+          </optional>
+          <optional>
+            <element name="highlight">
+              <ref name="CT_Color"/>
+            </element>
+          </optional>
+          <optional>
+            <ref name="EG_TextUnderlineLine"/>
+          </optional>
+          <optional>
+            <ref name="EG_TextUnderlineFill"/>
+          </optional>
+          <optional>
+            <element name="latin">
+              <ref name="CT_TextFont"/>
+            </element>
+          </optional>
+          <optional>
+            <element name="ea">
+              <ref name="CT_TextFont"/>
+            </element>
+          </optional>
+          <optional>
+            <element name="cs">
+              <ref name="CT_TextFont"/>
+            </element>
+          </optional>
+          <optional>
+            <element name="sym">
+              <ref name="CT_TextFont"/>
+            </element>
+          </optional>
+          <optional>
+            <element name="hlinkClick">
+              <ref name="CT_Hyperlink"/>
+            </element>
+          </optional>
+          <optional>
+            <element name="hlinkMouseOver">
+              <ref name="CT_Hyperlink"/>
+            </element>
+          </optional>
+          <optional>
+            <element name="extLst">
+              <ref name="CT_OfficeArtExtensionList"/>
+            </element>
+          </optional>
+        </group>
+        <optional>
+          <attribute name="kumimoji">
+            <data type="boolean">
+              <xs:documentation>Kumimoji</xs:documentation>
+            </data>
+            <xs:documentation>Kumimoji</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="lang">
+            <text/>
+            <xs:documentation>Language ID</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="altLang">
+            <text/>
+            <xs:documentation>Alternative Language</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="sz">
+            <text/>
+            <xs:documentation>Font Size</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="b">
+            <data type="boolean">
+              <xs:documentation>Bold</xs:documentation>
+            </data>
+            <xs:documentation>Bold</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="i">
+            <data type="boolean">
+              <xs:documentation>Italics</xs:documentation>
+            </data>
+            <xs:documentation>Italics</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="u">
+            <text/>
+            <xs:documentation>Underline</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="strike">
+            <text/>
+            <xs:documentation>Strikethrough</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="kern">
+            <text/>
+            <xs:documentation>Kerning</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="cap">
+            <text/>
+            <xs:documentation>Capitalization</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="spc">
+            <text/>
+            <xs:documentation>Spacing</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="normalizeH">
+            <data type="boolean">
+              <xs:documentation>Normalize Heights</xs:documentation>
+            </data>
+            <xs:documentation>Normalize Heights</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="baseline">
+            <text/>
+            <xs:documentation>Baseline</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="noProof">
+            <data type="boolean">
+              <xs:documentation>No Proofing</xs:documentation>
+            </data>
+            <xs:documentation>No Proofing</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="dirty">
+            <data type="boolean">
+              <xs:documentation>Dirty</xs:documentation>
+            </data>
+            <xs:documentation>Dirty</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="err">
+            <data type="boolean">
+              <xs:documentation>Spelling Error</xs:documentation>
+            </data>
+            <xs:documentation>Spelling Error</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="smtClean">
+            <data type="boolean">
+              <xs:documentation>SmartTag Clean</xs:documentation>
+            </data>
+            <xs:documentation>SmartTag Clean</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="smtId">
+            <data type="unsignedInt">
+              <xs:documentation>SmartTag ID</xs:documentation>
+            </data>
+            <xs:documentation>SmartTag ID</xs:documentation>
+          </attribute>
+        </optional>
+        <optional>
+          <attribute name="bmk">
+            <data type="string">
+              <xs:documentation>Bookmark Link Target</xs:documentation>
+            </data>
+            <xs:documentation>Bookmark Link Target</xs:documentation>
+          </attribute>
+        </optional>
+      </define>
+    </grammar>
+    <resource name="ST_StyleMatrixColumnIndex" resource="Integer" generated="yes"/>
+    <resource name="ST_TextPoint" resource="Integer" generated="yes"/>
+    <resource name="ST_TextNonNegativePoint" resource="Integer" generated="yes"/>
+    <resource name="ST_TextFontSize" resource="Integer" generated="yes"/>
+    <resource name="ST_Panose" resource="Hex" generated="yes"/>
+    <resource name="ST_TextTypeface" resource="String" generated="yes"/>
+    <resource name="ST_TextLanguageID" resource="String" generated="yes"/>
+  </namespace>
   <namespace name="a" url="http://schemas.openxmlformats.org/drawingml/2006/main">
     <start name="blip"/>
     <grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2006/xpath-functions" ns="http://schemas.openxmlformats.org/drawingml/2006/main" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
@@ -336,8 +964,10 @@
           </attribute>
         </optional>
         <optional>
-          <attribute name="fadeDir"><text/>index.ht
-            <xs:documentation>Fade Direction</xs:documentation></attribute>
+          <attribute name="fadeDir">
+            <text/>
+            <xs:documentation>Fade Direction</xs:documentation>
+          </attribute>
         </optional>
         <optional>
           <attribute name="sx">
@@ -1143,6 +1773,80 @@
         </element>
       </define>
     </grammar>
+    <resource name="CT_TileInfoProperties" resource="Properties">
+      <attribute name="tx" tokenid="ooxml:CT_TileInfoProperties_tx"/>
+      <attribute name="ty" tokenid="ooxml:CT_TileInfoProperties_ty"/>
+      <attribute name="sx" tokenid="ooxml:CT_TileInfoProperties_sx"/>
+      <attribute name="sy" tokenid="ooxml:CT_TileInfoProperties_sy"/>
+      <attribute name="flip" tokenid="ooxml:CT_TileInfoProperties_flip"/>
+      <attribute name="algn" tokenid="ooxml:CT_TileInfoProperties_algn"/>
+    </resource>
+    <resource name="CT_StretchInfoProperties" resource="Properties">
+      <sprm name="fillRect" tokenid="ooxml:CT_StretchInfoProperties_fillRect"/>
+    </resource>
+    <resource name="EG_FillModeProperties" resource="Properties">
+      <sprm name="tile" tokenid="ooxml:EG_FillModeProperties_tile"/>
+      <sprm name="stretch" tokenid="ooxml:EG_FillModeProperties_stretch"/>
+    </resource>
+    <resource name="CT_Blip" resource="Stream">
+      <sprm name="alphaBiLevel" tokenid="ooxml:CT_Blip_alphaBiLevel"/>
+      <sprm name="alphaCeiling" tokenid="ooxml:CT_Blip_alphaCeiling"/>
+      <sprm name="alphaFloor" tokenid="ooxml:CT_Blip_alphaFloor"/>
+      <sprm name="alphaInv" tokenid="ooxml:CT_Blip_alphaInv"/>
+      <sprm name="alphaMod" tokenid="ooxml:CT_Blip_alphaMod"/>
+      <sprm name="alphaModFix" tokenid="ooxml:CT_Blip_alphaModFix"/>
+      <sprm name="alphaRepl" tokenid="ooxml:CT_Blip_alphaRepl"/>
+      <sprm name="biLevel" tokenid="ooxml:CT_Blip_biLevel"/>
+      <sprm name="blur" tokenid="ooxml:CT_Blip_blur"/>
+      <sprm name="clrChange" tokenid="ooxml:CT_Blip_clrChange"/>
+      <sprm name="clrRepl" tokenid="ooxml:CT_Blip_clrRepl"/>
+      <sprm name="duotone" tokenid="ooxml:CT_Blip_duotone"/>
+      <sprm name="fillOverlay" tokenid="ooxml:CT_Blip_fillOverlay"/>
+      <sprm name="grayscl" tokenid="ooxml:CT_Blip_grayscl"/>
+      <sprm name="hsl" tokenid="ooxml:CT_Blip_hsl"/>
+      <sprm name="lum" tokenid="ooxml:CT_Blip_lum"/>
+      <sprm name="tint" tokenid="ooxml:CT_Blip_tint"/>
+      <sprm name="extLst" tokenid="ooxml:CT_Blip_extLst"/>
+      <attribute name="cstate" tokenid="ooxml:CT_Blip_cstate"/>
+    </resource>
+    <resource name="CT_BlipFillProperties" resource="Stream">
+      <sprm name="blip" tokenid="ooxml:CT_BlipFillProperties_blip"/>
+      <sprm name="srcRect" tokenid="ooxml:CT_BlipFillProperties_srcRect"/>
+      <attribute name="dpi" tokenid="ooxml:CT_BlipFillProperties_dpi"/>
+      <attribute name="rotWithShape" tokenid="ooxml:CT_BlipFillProperties_rotWithShape"/>
+    </resource>
+    <resource name="EG_Effect" resource="Properties">
+      <sprm name="cont" tokenid="ooxml:EG_Effect_cont"/>
+      <sprm name="effect" tokenid="ooxml:EG_Effect_effect"/>
+      <sprm name="alphaBiLevel" tokenid="ooxml:EG_Effect_alphaBiLevel"/>
+      <sprm name="alphaCeiling" tokenid="ooxml:EG_Effect_alphaCeiling"/>
+      <sprm name="alphaFloor" tokenid="ooxml:EG_Effect_alphaFloor"/>
+      <sprm name="alphaInv" tokenid="ooxml:EG_Effect_alphaInv"/>
+      <sprm name="alphaMod" tokenid="ooxml:EG_Effect_alphaMod"/>
+      <sprm name="alphaModFix" tokenid="ooxml:EG_Effect_alphaModFix"/>
+      <sprm name="alphaOutset" tokenid="ooxml:EG_Effect_alphaOutset"/>
+      <sprm name="alphaRepl" tokenid="ooxml:EG_Effect_alphaRepl"/>
+      <sprm name="biLevel" tokenid="ooxml:EG_Effect_biLevel"/>
+      <sprm name="blend" tokenid="ooxml:EG_Effect_blend"/>
+      <sprm name="blur" tokenid="ooxml:EG_Effect_blur"/>
+      <sprm name="clrChange" tokenid="ooxml:EG_Effect_clrChange"/>
+      <sprm name="clrRepl" tokenid="ooxml:EG_Effect_clrRepl"/>
+      <sprm name="duotone" tokenid="ooxml:EG_Effect_duotone"/>
+      <sprm name="fill" tokenid="ooxml:EG_Effect_fill"/>
+      <sprm name="fillOverlay" tokenid="ooxml:EG_Effect_fillOverlay"/>
+      <sprm name="glow" tokenid="ooxml:EG_Effect_glow"/>
+      <sprm name="grayscl" tokenid="ooxml:EG_Effect_grayscl"/>
+      <sprm name="hsl" tokenid="ooxml:EG_Effect_hsl"/>
+      <sprm name="innerShdw" tokenid="ooxml:EG_Effect_innerShdw"/>
+      <sprm name="lum" tokenid="ooxml:EG_Effect_lum"/>
+      <sprm name="outerShdw" tokenid="ooxml:EG_Effect_outerShdw"/>
+      <sprm name="prstShdw" tokenid="ooxml:EG_Effect_prstShdw"/>
+      <sprm name="reflection" tokenid="ooxml:EG_Effect_reflection"/>
+      <sprm name="relOff" tokenid="ooxml:EG_Effect_relOff"/>
+      <sprm name="softEdge" tokenid="ooxml:EG_Effect_softEdge"/>
+      <sprm name="tint" tokenid="ooxml:EG_Effect_tint"/>
+      <sprm name="xfrm" tokenid="ooxml:EG_Effect_xfrm"/>
+    </resource>
   </namespace>
   <namespace name="a">
     <grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" ns="http://schemas.openxmlformats.org/drawingml/2006/main">
@@ -1228,6 +1932,14 @@
         </optional>
       </define>
     </grammar>
+    <resource name="CT_ShapeProperties" resource="Properties">
+      <sprm name="xfrm" tokenid="ooxml:CT_ShapeProperties_xfrm"/>
+      <sprm name="ln" tokenid="ooxml:CT_ShapeProperties_ln"/>
+      <sprm name="scene3d" tokenid="ooxml:CT_ShapeProperties_scene3d"/>
+      <sprm name="sp3d" tokenid="ooxml:CT_ShapeProperties_sp3d"/>
+      <sprm name="extLst" tokenid="ooxml:CT_ShapeProperties_extLst"/>
+      <attribute name="bwMode" tokenid="ooxml:CT_ShapeProperties_bwMode"/>
+    </resource>
   </namespace>
   <namespace name="w">
     <grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2006/xpath-functions" ns="http://schemas.openxmlformats.org/drawingml/2006/main" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
@@ -2202,10 +2914,14 @@
       </define>
       <define name="AG_Blob">
         <optional>
-          <attribute name="r:embed"/>
+          <attribute name="r:embed">
+            <text/>
+          </attribute>
         </optional>
         <optional>
-          <attribute name="r:link"/>
+          <attribute name="r:link">
+            <text/>
+          </attribute>
         </optional>
       </define>
       <define name="CT_EmbeddedWAVAudioFile">
@@ -2306,16 +3022,43 @@
         </data>
       </define>
     </grammar>
+    <resource name="ST_Coordinate" resource="Integer" generated="yes"/>
+    <resource name="ST_Coordinate32" resource="Integer" generated="yes"/>
+    <resource name="ST_PositiveCoordinate" resource="Integer" generated="yes"/>
+    <resource name="ST_Angle" resource="Integer" generated="yes"/>
     <resource name="CT_Angle" resource="StringValue" generated="yes"/>
     <resource name="CT_PositiveFixedAngle" resource="StringValue" generated="yes"/>
+    <resource name="ST_Percentage" resource="Integer" generated="yes"/>
     <resource name="CT_Percentage" resource="StringValue" generated="yes"/>
     <resource name="CT_PositivePercentage" resource="StringValue" generated="yes"/>
     <resource name="CT_FixedPercentage" resource="StringValue" generated="yes"/>
     <resource name="CT_PositiveFixedPercentage" resource="StringValue" generated="yes"/>
+    <resource name="CT_Point2D" resource="Properties">
+      <attribute name="x" tokenid="ooxml:CT_Point2D_x"/>
+      <attribute name="y" tokenid="ooxml:CT_Point2D_y"/>
+    </resource>
+    <resource name="CT_PositiveSize2D" resource="Properties">
+      <attribute name="cx" tokenid="ooxml:CT_PositiveSize2D_cx"/>
+      <attribute name="cy" tokenid="ooxml:CT_PositiveSize2D_cy"/>
+    </resource>
+    <resource name="ST_HexBinary3" resource="Hex" generated="yes"/>
     <resource name="CT_SRgbColor" resource="StringValue" generated="yes"/>
     <resource name="CT_SystemColor" resource="StringValue" generated="yes"/>
     <resource name="CT_SchemeColor" resource="StringValue" generated="yes"/>
     <resource name="CT_PresetColor" resource="StringValue" generated="yes"/>
+    <resource name="CT_Transform2D" resource="Properties">
+      <sprm name="off" tokenid="ooxml:CT_Transform2D_off"/>
+      <sprm name="ext" tokenid="ooxml:CT_Transform2D_ext"/>
+      <attribute name="rot" tokenid="ooxml:CT_Transform2D_rot"/>
+      <attribute name="flipH" tokenid="ooxml:CT_Transform2D_flipH"/>
+      <attribute name="flipV" tokenid="ooxml:CT_Transform2D_flipV"/>
+    </resource>
+    <resource name="ST_Guid" resource="String" generated="yes"/>
+    <resource name="AG_Blob" resource="Stream">
+      <attribute name="r:embed" tokenid="ooxml:AG_Blob_r_embed"/>
+      <attribute name="r:link" tokenid="ooxml:AG_Blob_r_link"/>
+    </resource>
+    <resource name="ST_DrawingElementId" resource="Integer" generated="yes"/>
   </namespace>
   <namespace name="docPr">
     <grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2006/xpath-functions" ns="http://schemas.openxmlformats.org/drawingml/2006/main" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
@@ -2698,6 +3441,33 @@
         </optional>
       </define>
     </grammar>
+    <resource name="CT_GraphicalObjectFrameLocking" resource="Properties">
+      <sprm name="extLst" tokenid="ooxml:CT_GraphicalObjectFrameLocking_extLst"/>
+      <attribute name="noGrp" tokenid="ooxml:CT_GraphicalObjectFrameLocking_noGrp"/>
+      <attribute name="noDrilldown" tokenid="ooxml:CT_GraphicalObjectFrameLocking_noDrilldown"/>
+      <attribute name="noSelect" tokenid="ooxml:CT_GraphicalObjectFrameLocking_noSelect"/>
+      <attribute name="noChangeAspect" tokenid="ooxml:CT_GraphicalObjectFrameLocking_noChangeAspect"/>
+      <attribute name="noMove" tokenid="ooxml:CT_GraphicalObjectFrameLocking_noMove"/>
+      <attribute name="noResize" tokenid="ooxml:CT_GraphicalObjectFrameLocking_noResize"/>
+    </resource>
+    <resource name="CT_NonVisualDrawingProps" resource="Properties">
+      <sprm name="hlinkClick" tokenid="ooxml:CT_NonVisualDrawingProps_hlinkClick"/>
+      <sprm name="hlinkHover" tokenid="ooxml:CT_NonVisualDrawingProps_hlinkHover"/>
+      <sprm name="extLst" tokenid="ooxml:CT_NonVisualDrawingProps_extLst"/>
+      <attribute name="id" tokenid="ooxml:CT_NonVisualDrawingProps_id"/>
+      <attribute name="name" tokenid="ooxml:CT_NonVisualDrawingProps_name"/>
+      <attribute name="descr" tokenid="ooxml:CT_NonVisualDrawingProps_descr"/>
+      <attribute name="hidden" tokenid="ooxml:CT_NonVisualDrawingProps_hidden"/>
+    </resource>
+    <resource name="CT_NonVisualPictureProperties" resource="Properties">
+      <sprm name="picLocks" tokenid="ooxml:CT_NonVisualPictureProperties_picLocks"/>
+      <sprm name="extLst" tokenid="ooxml:CT_NonVisualPictureProperties_extLst"/>
+      <attribute name="preferRelativeResize" tokenid="ooxml:CT_NonVisualPictureProperties_preferRelativeResize"/>
+    </resource>
+    <resource name="CT_NonVisualGraphicFrameProperties" resource="Properties">
+      <sprm name="graphicFrameLocks" tokenid="ooxml:CT_NonVisualGraphicFrameProperties_graphicFrameLocks"/>
+      <sprm name="extLst" tokenid="ooxml:CT_NonVisualGraphicFrameProperties_extLst"/>
+    </resource>
   </namespace>
   <namespace name="a">
     <start name="graphic"/>
@@ -2730,6 +3500,13 @@
         </element>
       </define>
     </grammar>
+    <resource name="CT_GraphicalObjectData" resource="Properties">
+      <sprm name="" tokenid="ooxml:CT_GraphicalObjectData_"/>
+      <attribute name="uri" tokenid="ooxml:CT_GraphicalObjectData_uri"/>
+    </resource>
+    <resource name="CT_GraphicalObject" resource="Properties">
+      <sprm name="graphicData" tokenid="ooxml:CT_GraphicalObject_graphicData"/>
+    </resource>
   </namespace>
   <namespace name="a">
     <grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2006/xpath-functions" ns="http://schemas.openxmlformats.org/drawingml/2006/main" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
@@ -3532,7 +4309,7 @@
           </element>
         </optional>
         <attribute name="prst">
-          <text/>
+          <ref name="ST_ShapeType"/>
           <xs:documentation>Preset Shape</xs:documentation>
         </attribute>
       </define>
@@ -3598,6 +4375,216 @@
         </choice>
       </define>
     </grammar>
+    <resource name="ST_ShapeType" resource="List">
+      <value tokenid="ooxml:Value_ST_ShapeType_line">line</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_lineInv">lineInv</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_triangle">triangle</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_rtTriangle">rtTriangle</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_rect">rect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_diamond">diamond</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_parallelogram">parallelogram</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_trapezoid">trapezoid</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_nonIsoscelesTrapezoid">nonIsoscelesTrapezoid</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_pentagon">pentagon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_hexagon">hexagon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_heptagon">heptagon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_octagon">octagon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_decagon">decagon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_dodecagon">dodecagon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star4">star4</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star5">star5</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star6">star6</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star7">star7</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star8">star8</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star10">star10</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star12">star12</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star16">star16</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star24">star24</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_star32">star32</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_roundRect">roundRect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_round1Rect">round1Rect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_round2SameRect">round2SameRect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_round2DiagRect">round2DiagRect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_snipRoundRect">snipRoundRect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_snip1Rect">snip1Rect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_snip2SameRect">snip2SameRect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_snip2DiagRect">snip2DiagRect</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_plaque">plaque</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_ellipse">ellipse</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_teardrop">teardrop</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_homePlate">homePlate</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_chevron">chevron</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_pieWedge">pieWedge</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_pie">pie</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_blockArc">blockArc</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_donut">donut</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_noSmoking">noSmoking</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_rightArrow">rightArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftArrow">leftArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_upArrow">upArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_downArrow">downArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_stripedRightArrow">stripedRightArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_notchedRightArrow">notchedRightArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bentUpArrow">bentUpArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftRightArrow">leftRightArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_upDownArrow">upDownArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftUpArrow">leftUpArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftRightUpArrow">leftRightUpArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_quadArrow">quadArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftArrowCallout">leftArrowCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_rightArrowCallout">rightArrowCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_upArrowCallout">upArrowCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_downArrowCallout">downArrowCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftRightArrowCallout">leftRightArrowCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_upDownArrowCallout">upDownArrowCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_quadArrowCallout">quadArrowCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bentArrow">bentArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_uturnArrow">uturnArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_circularArrow">circularArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftCircularArrow">leftCircularArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftRightCircularArrow">leftRightCircularArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_curvedRightArrow">curvedRightArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_curvedLeftArrow">curvedLeftArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_curvedUpArrow">curvedUpArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_curvedDownArrow">curvedDownArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_swooshArrow">swooshArrow</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_cube">cube</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_can">can</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_lightningBolt">lightningBolt</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_heart">heart</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_sun">sun</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_moon">moon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_smileyFace">smileyFace</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_irregularSeal1">irregularSeal1</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_irregularSeal2">irregularSeal2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_foldedCorner">foldedCorner</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bevel">bevel</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_frame">frame</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_halfFrame">halfFrame</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_corner">corner</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_diagStripe">diagStripe</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_chord">chord</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_arc">arc</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftBracket">leftBracket</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_rightBracket">rightBracket</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftBrace">leftBrace</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_rightBrace">rightBrace</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bracketPair">bracketPair</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bracePair">bracePair</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_straightConnector1">straightConnector1</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bentConnector2">bentConnector2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bentConnector3">bentConnector3</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bentConnector4">bentConnector4</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_bentConnector5">bentConnector5</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_curvedConnector2">curvedConnector2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_curvedConnector3">curvedConnector3</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_curvedConnector4">curvedConnector4</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_curvedConnector5">curvedConnector5</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_callout1">callout1</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_callout2">callout2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_callout3">callout3</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_accentCallout1">accentCallout1</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_accentCallout2">accentCallout2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_accentCallout3">accentCallout3</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_borderCallout1">borderCallout1</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_borderCallout2">borderCallout2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_borderCallout3">borderCallout3</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_accentBorderCallout1">accentBorderCallout1</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_accentBorderCallout2">accentBorderCallout2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_accentBorderCallout3">accentBorderCallout3</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_wedgeRectCallout">wedgeRectCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_wedgeRoundRectCallout">wedgeRoundRectCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_wedgeEllipseCallout">wedgeEllipseCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_cloudCallout">cloudCallout</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_cloud">cloud</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_ribbon">ribbon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_ribbon2">ribbon2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_ellipseRibbon">ellipseRibbon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_ellipseRibbon2">ellipseRibbon2</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_leftRightRibbon">leftRightRibbon</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_verticalScroll">verticalScroll</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_horizontalScroll">horizontalScroll</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_wave">wave</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_doubleWave">doubleWave</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_plus">plus</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartProcess">flowChartProcess</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartDecision">flowChartDecision</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartInputOutput">flowChartInputOutput</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartPredefinedProcess">flowChartPredefinedProcess</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartInternalStorage">flowChartInternalStorage</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartDocument">flowChartDocument</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartMultidocument">flowChartMultidocument</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartTerminator">flowChartTerminator</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartPreparation">flowChartPreparation</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartManualInput">flowChartManualInput</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartManualOperation">flowChartManualOperation</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartConnector">flowChartConnector</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartPunchedCard">flowChartPunchedCard</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartPunchedTape">flowChartPunchedTape</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartSummingJunction">flowChartSummingJunction</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartOr">flowChartOr</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartCollate">flowChartCollate</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartSort">flowChartSort</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartExtract">flowChartExtract</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartMerge">flowChartMerge</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartOfflineStorage">flowChartOfflineStorage</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartOnlineStorage">flowChartOnlineStorage</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartMagneticTape">flowChartMagneticTape</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartMagneticDisk">flowChartMagneticDisk</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartMagneticDrum">flowChartMagneticDrum</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartDisplay">flowChartDisplay</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartDelay">flowChartDelay</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartAlternateProcess">flowChartAlternateProcess</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_flowChartOffpageConnector">flowChartOffpageConnector</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonBlank">actionButtonBlank</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonHome">actionButtonHome</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonHelp">actionButtonHelp</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonInformation">actionButtonInformation</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonForwardNext">actionButtonForwardNext</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonBackPrevious">actionButtonBackPrevious</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonEnd">actionButtonEnd</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonBeginning">actionButtonBeginning</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonReturn">actionButtonReturn</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonDocument">actionButtonDocument</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonSound">actionButtonSound</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_actionButtonMovie">actionButtonMovie</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_gear6">gear6</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_gear9">gear9</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_funnel">funnel</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_mathPlus">mathPlus</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_mathMinus">mathMinus</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_mathMultiply">mathMultiply</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_mathDivide">mathDivide</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_mathEqual">mathEqual</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_mathNotEqual">mathNotEqual</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_cornerTabs">cornerTabs</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_squareTabs">squareTabs</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_plaqueTabs">plaqueTabs</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_chartX">chartX</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_chartStar">chartStar</value>
+      <value tokenid="ooxml:Value_ST_ShapeType_chartPlus">chartPlus</value>
+    </resource>
+    <resource name="ST_GeomGuideName" resource="String" generated="yes"/>
+    <resource name="ST_GeomGuideFormula" resource="String" generated="yes"/>
+    <resource name="CT_GeomGuideList" resource="Properties">
+      <sprm name="gd" tokenid="ooxml:CT_GeomGuideList_gd"/>
+    </resource>
+    <resource name="CT_PresetGeometry2D" resource="Properties">
+      <sprm name="avLst" tokenid="ooxml:CT_PresetGeometry2D_avLst"/>
+      <attribute name="prst" tokenid="ooxml:CT_PresetGeometry2D_prst"/>
+    </resource>
+    <resource name="CT_CustomGeometry2D" resource="Properties">
+      <sprm name="avLst" tokenid="ooxml:CT_CustomGeometry2D_avLst"/>
+      <sprm name="gdLst" tokenid="ooxml:CT_CustomGeometry2D_gdLst"/>
+      <sprm name="ahLst" tokenid="ooxml:CT_CustomGeometry2D_ahLst"/>
+      <sprm name="cxnLst" tokenid="ooxml:CT_CustomGeometry2D_cxnLst"/>
+      <sprm name="rect" tokenid="ooxml:CT_CustomGeometry2D_rect"/>
+      <sprm name="pathLst" tokenid="ooxml:CT_CustomGeometry2D_pathLst"/>
+    </resource>
+    <resource name="EG_Geometry" resource="Properties">
+      <sprm name="custGeom" tokenid="ooxml:EG_Geometry_custGeom"/>
+      <sprm name="prstGeom" tokenid="ooxml:EG_Geometry_prstGeom"/>
+    </resource>
   </namespace>
   <namespace name="wp">
     <start name="inline"/>
@@ -4055,6 +5042,25 @@
         </element>
       </define>
     </grammar>
+    <resource name="CT_EffectExtent" resource="Properties">
+      <attribute name="l" tokenid="ooxml:CT_EffectExtent_l"/>
+      <attribute name="t" tokenid="ooxml:CT_EffectExtent_t"/>
+      <attribute name="r" tokenid="ooxml:CT_EffectExtent_r"/>
+      <attribute name="b" tokenid="ooxml:CT_EffectExtent_b"/>
+    </resource>
+    <resource name="ST_WrapDistance" resource="Integer" generated="yes"/>
+    <resource name="CT_Inline" resource="Properties">
+      <sprm name="extent" tokenid="ooxml:CT_Inline_extent"/>
+      <sprm name="effectExtent" tokenid="ooxml:CT_Inline_effectExtent"/>
+      <sprm name="docPr" tokenid="ooxml:CT_Inline_docPr"/>
+      <sprm name="cNvGraphicFramePr" tokenid="ooxml:CT_Inline_cNvGraphicFramePr"/>
+      <sprm name="a:graphic" tokenid="ooxml:CT_Inline_a_graphic"/>
+      <attribute name="distT" tokenid="ooxml:CT_Inline_distT"/>
+      <attribute name="distB" tokenid="ooxml:CT_Inline_distB"/>
+      <attribute name="distL" tokenid="ooxml:CT_Inline_distL"/>
+      <attribute name="distR" tokenid="ooxml:CT_Inline_distR"/>
+    </resource>
+    <resource name="ST_PositionOffset" resource="Integer" generated="yes"/>
   </namespace>
   <namespace name="s">
     <start name="schemaLibrary"/>
@@ -4395,7 +5401,9 @@
       <define name="CT_Text">
         <ref name="ST_String"/>
         <optional>
-          <attribute name="xml:space"/>
+          <attribute name="xml:space">
+            <text/>
+          </attribute>
         </optional>
       </define>
       <define name="CT_R">
@@ -5353,13 +6361,18 @@
         </element>
       </define>
     </grammar>
+    <resource name="ST_Integer255" resource="Integer" generated="yes"/>
     <resource name="CT_Integer255" resource="StringValue" generated="yes"/>
+    <resource name="ST_Integer2" resource="Integer" generated="yes"/>
     <resource name="CT_Integer2" resource="StringValue" generated="yes"/>
+    <resource name="ST_SpacingRule" resource="Integer" generated="yes"/>
     <resource name="CT_SpacingRule" resource="StringValue" generated="yes"/>
+    <resource name="ST_UnSignedInteger" resource="Integer" generated="yes"/>
     <resource name="CT_UnSignedInteger" resource="StringValue" generated="yes"/>
+    <resource name="ST_Char" resource="String" generated="yes"/>
     <resource name="CT_Char" resource="StringValue" generated="yes"/>
     <resource name="CT_OnOff" resource="BooleanValue"/>
-    <resource name="CT_String" resource="StringValue" generated="yes"/>
+    <resource name="ST_String" resource="String" generated="yes"/>
     <resource name="CT_XAlign" resource="StringValue" generated="yes"/>
     <resource name="CT_YAlign" resource="StringValue" generated="yes"/>
     <resource name="CT_Shp" resource="StringValue" generated="yes"/>
@@ -5375,6 +6388,7 @@
     </resource>
     <resource name="CT_Style" resource="ListValue"/>
     <resource name="CT_OMathJc" resource="StringValue" generated="yes"/>
+    <resource name="ST_TwipsMeasure" resource="Integer" generated="yes"/>
     <resource name="CT_TwipsMeasure" resource="StringValue" generated="yes"/>
     <resource name="CT_BreakBin" resource="StringValue" generated="yes"/>
     <resource name="CT_BreakBinSub" resource="StringValue" generated="yes"/>
@@ -5427,6 +6441,7 @@
         </attribute>
       </define>
     </grammar>
+    <resource name="ST_RelationshipId" resource="String" generated="yes"/>
   </namespace>
   <namespace name="pic">
     <start name="pic"/>
@@ -5460,6 +6475,11 @@
         </element>
       </define>
     </grammar>
+    <resource name="CT_PictureNonVisual" resource="Properties">
+      <sprm name="cNvPr" tokenid="ooxml:CT_PictureNonVisual_cNvPr"/>
+      <sprm name="cNvPicPr" tokenid="ooxml:CT_PictureNonVisual_cNvPicPr"/>
+    </resource>
+    <resource name="CT_Picture" resource="Stream"/>
   </namespace>
   <namespace name="w">
     <start name="recipients"/>
@@ -7484,8 +8504,15 @@
           </attribute>
         </optional>
       </define>
-      <define name="CT_BookmarkRange">
+      <define name="CT_MarkupRangeBookmark">
+        <attribute name="id">
+          <text/>
+          <xs:documentation>Annotation Identifier</xs:documentation>
+        </attribute>
         <ref name="CT_MarkupRange"/>
+      </define>
+      <define name="CT_BookmarkRange">
+        <ref name="CT_MarkupRangeBookmark"/>
         <optional>
           <attribute name="colFirst">
             <text/>
@@ -7632,7 +8659,7 @@
             <ref name="CT_Bookmark"/>
           </element>
           <element name="bookmarkEnd">
-            <ref name="CT_MarkupRange"/>
+            <ref name="CT_MarkupRangeBookmark"/>
           </element>
           <element name="moveFromRangeStart">
             <ref name="CT_MoveBookmark"/>
@@ -8179,7 +9206,7 @@
           </optional>
         </choice>
         <attribute name="fldCharType">
-          <text/>
+          <ref name="ST_FldCharType"/>
           <xs:documentation>Field Character Type</xs:documentation>
         </attribute>
         <attribute name="fldLock">
@@ -9220,7 +10247,9 @@
       <define name="CT_Text">
         <ref name="ST_String"/>
         <optional>
-          <attribute name="xml:space"/>
+          <attribute name="xml:space">
+            <text/>
+          </attribute>
         </optional>
       </define>
       <define name="CT_FtnEdnRefChar">
@@ -14110,14 +15139,18 @@
     <resource name="CT_UcharHexNumber" resource="HexValue"/>
     <resource name="ST_DecimalNumber" resource="Integer"/>
     <resource name="CT_DecimalNumber" resource="IntegerValue"/>
+    <resource name="ST_UnsignedDecimalNumber" resource="Integer" generated="yes"/>
     <resource name="ST_TwipsMeasure" resource="Integer"/>
     <resource name="CT_TwipsMeasure" resource="IntegerValue"/>
     <resource name="ST_SignedTwipsMeasure" resource="Integer"/>
     <resource name="CT_SignedTwipsMeasure" resource="IntegerValue"/>
+    <resource name="ST_PixelsMeasure" resource="Integer" generated="yes"/>
     <resource name="ST_HpsMeasure" resource="Integer"/>
     <resource name="CT_HpsMeasure" resource="IntegerValue"/>
     <resource name="ST_SignedHpsMeasure" resource="Integer"/>
     <resource name="CT_SignedHpsMeasure" resource="IntegerValue"/>
+    <resource name="ST_DateTime" resource="String" generated="yes"/>
+    <resource name="ST_MacroName" resource="String" generated="yes"/>
     <resource name="CT_MacroName" resource="StringValue" generated="yes"/>
     <resource name="ST_EighthPointMeasure" resource="Integer"/>
     <resource name="ST_PointMeasure" resource="Integer"/>
@@ -14158,6 +15191,7 @@
       <attribute name="themeTint" tokenid="ooxml:CT_Color_themeTint"/>
       <attribute name="themeShade" tokenid="ooxml:CT_Color_themeShade"/>
     </resource>
+    <resource name="ST_LangCode" resource="Hex" generated="yes"/>
     <resource name="ST_Lang" resource="String"/>
     <resource name="CT_Lang" resource="StringValue">
       <attribute name="val" tokenid="ooxml:CT_Lang_val"/>
@@ -14590,6 +15624,21 @@
       <attribute name="author" tokenid="ooxml:CT_TrackChange_author"/>
       <attribute name="date" tokenid="ooxml:CT_TrackChange_date"/>
     </resource>
+    <resource name="CT_MarkupRange" resource="Properties">
+      <attribute name="displacedByCustomXml" tokenid="ooxml:CT_MarkupRange_displacedByCustomXml"/>
+    </resource>
+    <resource name="CT_MarkupRangeBookmark" resource="Properties">
+      <attribute name="id" tokenid="rtf:IBKL"/>
+    </resource>
+    <resource name="CT_BookmarkRange" resource="Properties">
+      <type name="Bookmark"/>
+      <attribute name="colFirst" tokenid="ooxml:CT_BookmarkRange_colFirst"/>
+      <attribute name="colLast" tokenid="ooxml:CT_BookmarkRange_colLast"/>
+    </resource>
+    <resource name="CT_Bookmark" resource="Properties">
+      <type name="Bookmark"/>
+      <attribute name="name" tokenid="rtf:BOOKMARKNAME"/>
+    </resource>
     <resource name="CT_Comment" resource="XNote">
       <attribute name="id" action="checkId"/>
       <attribute name="initials" tokenid="ooxml:CT_Comment_initials"/>
@@ -14661,8 +15710,46 @@
     <resource xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" name="CT_Rel" resource="Properties">
       <attribute name="r:id" tokenid="ooxml:CT_Rel_id"/>
     </resource>
+    <resource name="CT_Drawing" resource="Properties"/>
+    <resource name="CT_SimpleField" resource="Stream">
+      <sprm name="fldData" tokenid="ooxml:CT_SimpleField_fldData"/>
+      <attribute name="instr" tokenid="ooxml:CT_SimpleField_instr"/>
+      <attribute name="fldLock" tokenid="ooxml:CT_SimpleField_fldLock"/>
+      <attribute name="dirty" tokenid="ooxml:CT_SimpleField_dirty"/>
+      <action name="start" action="fieldstart"/>
+      <action name="start" action="startCharacterGroup"/>
+      <action name="start" action="printproperty" tokenid="ooxml:CT_SimpleField_instr"/>
+      <action name="start" action="endCharacterGroup"/>
+      <action name="start" action="fieldsep"/>
+      <action name="end" action="fieldend"/>
+    </resource>
+    <resource name="ST_FldCharType" resource="List">
+      <value name="begin" tokenid="ooxml:Value_ST_FldCharType_begin">begin</value>
+      <value name="separate" tokenid="ooxml:Value_ST_FldCharType_separate">separate</value>
+      <value name="end" tokenid="ooxml:Value_ST_FldCharType_end">end</value>
+    </resource>
+    <resource name="ST_FFHelpTextVal" resource="String" generated="yes"/>
+    <resource name="ST_FFStatusTextVal" resource="String" generated="yes"/>
+    <resource name="ST_FFName" resource="String" generated="yes"/>
     <resource name="CT_FFTextType" resource="StringValue" generated="yes"/>
     <resource name="CT_FFName" resource="StringValue" generated="yes"/>
+    <resource name="CT_FldChar" resource="Stream">
+      <sprm name="fldData" tokenid="ooxml:CT_FldChar_fldData"/>
+      <sprm name="ffData" tokenid="ooxml:CT_FldChar_ffData"/>
+      <sprm name="numberingChange" tokenid="ooxml:CT_FldChar_numberingChange"/>
+      <attribute name="fldCharType" tokenid="ooxml:CT_FldChar_fldCharType"/>
+      <attribute name="fldLock" tokenid="ooxml:CT_FldChar_fldLock"/>
+      <attribute name="dirty" tokenid="ooxml:CT_FldChar_dirty"/>
+      <action name="start" action="fieldstart">
+        <cond tokenid="ooxml:CT_FldChar_fldCharType" value="ooxml:Value_ST_FldCharType_begin"/>
+      </action>
+      <action name="start" action="fieldsep">
+        <cond tokenid="ooxml:CT_FldChar_fldCharType" value="ooxml:Value_ST_FldCharType_separate"/>
+      </action>
+      <action name="start" action="fieldend">
+        <cond tokenid="ooxml:CT_FldChar_fldCharType" value="ooxml:Value_ST_FldCharType_end"/>
+      </action>
+    </resource>
     <resource name="CT_FFHelpText" resource="StringValue" generated="yes"/>
     <resource name="CT_FFStatusText" resource="StringValue" generated="yes"/>
     <resource name="ST_SectionMark" resource="List">
@@ -14810,7 +15897,10 @@
       <attribute name="headerReference" tokenid="ooxml:EG_HdrFtrReferences_headerReference"/>
       <attribute name="footerReference" tokenid="ooxml:EG_HdrFtrReferences_footerReference"/>
     </resource>
-    <resource name="CT_HdrFtr" resource="Stream"/>
+    <resource name="CT_HdrFtr" resource="Stream">
+      <action name="start" action="startSectionGroup"/>
+      <action name="end" action="endSectionGroup"/>
+    </resource>
     <resource name="EG_SectPrContents" resource="Properties">
       <attribute name="bidi" tokenid="ooxml:EG_SectPrContents_bidi"/>
       <attribute name="cols" tokenid="ooxml:EG_SectPrContents_cols"/>
@@ -14834,7 +15924,7 @@
     </resource>
     <resource name="CT_SectPr" resource="Properties">
       <attribute name="sectPrChange" tokenid="ooxml:CT_SectPr_sectPrChange"/>
-      <action name="end" action="setLastParagraphInSection"/>
+      <action name="start" action="setLastParagraphInSection"/>
     </resource>
     <resource name="ST_BrType" resource="List">
       <value tokenid="ooxml:Value_ST_BrType_column">column</value>
@@ -14877,6 +15967,7 @@
       <attribute name="char" tokenid="ooxml:CT_Sym_char"/>
     </resource>
     <resource name="CT_Text" resource="Stream">
+      <attribute name="xml:space" tokenid="ooxml:CT_Text_space"/>
       <action name="characters" action="text"/>
     </resource>
     <resource name="CT_FtnEdnRefChar" resource="Stream">
@@ -14984,7 +16075,6 @@
     <resource name="CT_P" resource="Stream">
       <action name="start" action="startParagraphGroup"/>
       <action name="start" action="sendTableDepth"/>
-      <action name="end" action="endOfCharacterGroup"/>
       <action name="end" action="endOfParagraph"/>
     </resource>
     <resource name="ST_TblWidth" resource="List">
@@ -15051,11 +16141,11 @@
     <resource name="CT_TcPr" resource="Properties"/>
     <resource name="CT_TcPrInner" resource="Properties"/>
     <resource name="CT_Tc" resource="TextTableCell">
-      <action name="start" action="startParagraphGroup"/>
       <action name="start" action="startCell"/>
       <action name="end" action="endCell"/>
       <action name="end" action="endParagraphGroup"/>
     </resource>
+    <resource name="ST_Cnf" resource="String" generated="yes"/>
     <resource name="CT_Cnf" resource="StringValue" generated="yes"/>
     <resource name="CT_TrPrBase" resource="Properties">
       <kind name="table"/>
@@ -15079,6 +16169,12 @@
       <value tokenid="ooxml:Value_ST_TblOverlap_overlap">overlap</value>
     </resource>
     <resource name="CT_TblOverlap" resource="ListValue"/>
+    <resource name="CT_TblCellMar" resource="Properties">
+      <sprm name="top" tokenid="ooxml:CT_TblCellMar_top"/>
+      <sprm name="left" tokenid="ooxml:CT_TblCellMar_left"/>
+      <sprm name="bottom" tokenid="ooxml:CT_TblCellMar_bottom"/>
+      <sprm name="right" tokenid="ooxml:CT_TblCellMar_right"/>
+    </resource>
     <resource name="CT_TblBorders" resource="Properties">
       <kind name="table"/>
       <sprm name="top" tokenid="ooxml:CT_TblBorders_top"/>
--- writerfilter/source/ooxml/modelcleanup.xsl	14 May 2007 20:14:16 -0000	1.2
+++ writerfilter/source/ooxml/modelcleanup.xsl	18 Jul 2007 12:55:58 -0000	1.2.4.1
@@ -46,7 +46,22 @@
 
 
   <xsl:key name="resources"
-           match="resource" use="@name" />
+           match="resource[not(@generated)]" use="@name" />
+
+  <xsl:template name="generateresource">
+    <xsl:param name="resource"/>
+    <xsl:element name="resource">
+      <xsl:attribute name="name">
+        <xsl:value-of select="@name"/>
+      </xsl:attribute>
+      <xsl:attribute name="resource">
+        <xsl:value-of select="$resource"/>
+      </xsl:attribute>
+      <xsl:attribute name="generated">
+        <xsl:text>yes</xsl:text>
+      </xsl:attribute>
+    </xsl:element>
+  </xsl:template>
 
   <xsl:template match="namespace">
     <xsl:variable name="nsid" select="generate-id(.)"/>
@@ -61,17 +76,61 @@
         <xsl:if test="count($resources) = 0">
           <xsl:if test="substring(@name, 1, 3) = 'CT_'">
             <xsl:if test="./rng:attribute[@name='val']/rng:text">
-              <xsl:element name="resource">
-                <xsl:attribute name="name">
-                  <xsl:value-of select="@name"/>
-                </xsl:attribute>
-                <xsl:attribute name="resource">
-                  <xsl:text>StringValue</xsl:text>
-                </xsl:attribute>
-                <xsl:attribute name="generated">
-                  <xsl:text>yes</xsl:text>
-                </xsl:attribute>
-              </xsl:element>
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">StringValue</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+          </xsl:if>
+          <xsl:if test="substring(@name, 1, 3) = 'ST_'">
+            <xsl:if test="./rng:data[@type='int']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">Integer</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='integer']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">Integer</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='long']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">Integer</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='unsignedInt']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">Integer</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='unsignedLong']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">Integer</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='boolean']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">Boolean</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='token']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">String</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='string']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">String</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='dateTime']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">String</xsl:with-param>
+              </xsl:call-template>
+            </xsl:if>
+            <xsl:if test="./rng:data[@type='hexBinary']">
+              <xsl:call-template name="generateresource">
+                <xsl:with-param name="resource">Hex</xsl:with-param>
+              </xsl:call-template>
             </xsl:if>
           </xsl:if>
         </xsl:if>
--- writerfilter/source/ooxml/resources.xsl	16 May 2007 14:35:31 -0000	1.5
+++ writerfilter/source/ooxml/resources.xsl	2 Jul 2007 17:16:56 -0000	1.5.4.1
@@ -127,10 +127,13 @@
 using namespace ::std;
 using namespace ::com::sun::star;
 using namespace doctok;
+
+/// @cond GENERATED
       </xsl:text>
       <xsl:call-template name="contextdecls"><xsl:with-param name="prefix">w</xsl:with-param></xsl:call-template>
       <xsl:call-template name="valueconstantdecls"/>
       <xsl:text>
+/// @endcond
 }
 #endif //INCLUDED_OOXML_RESOURCES_HXX&#xa;</xsl:text></out></xsl:template>
 
--- writerfilter/source/ooxml/resourcesimpl.xsl	29 May 2007 15:38:47 -0000	1.14
+++ writerfilter/source/ooxml/resourcesimpl.xsl	12 Jul 2007 08:35:08 -0000	1.14.4.2
@@ -122,6 +122,8 @@
 #include "OOXMLPropertySetImpl.hxx"
 #include "TokenMap.hxx"
 
+/// @cond GENERATED
+
 namespace ooxml {
 using namespace ::std;
 
@@ -131,12 +133,17 @@
 static const sal_uInt8 sFtnEdnCont[] = { 0x4, 0x0 }; 
 static const sal_uInt8 sTab[] = { 0x9, 0x0 }; 
 static const sal_uInt8 sPgNum[] = { 0x0, 0x0 }; 
+static const sal_uInt8 sFieldStart[] = { 0x13  }; 
+static const sal_uInt8 sFieldSep[] = { 0x14 }; 
+static const sal_uInt8 sFieldEnd[] = { 0x15 }; 
 
       </xsl:text>
       <xsl:call-template name="sprmkind"/>
       <xsl:call-template name="contextimpls"><xsl:with-param name="prefix">w</xsl:with-param></xsl:call-template>
       <xsl:text>
-}&#xa;</xsl:text></out></xsl:template>
+}
+/// @endcond GENERATED
+&#xa;</xsl:text></out></xsl:template>
 
   <xsl:template match="*"/>
 </xsl:stylesheet>
--- writerfilter/source/ooxml/resourcestools.xsl	27 Jun 2007 09:21:44 -0000	1.41
+++ writerfilter/source/ooxml/resourcestools.xsl	18 Jul 2007 12:59:32 -0000	1.41.4.4
@@ -544,7 +544,7 @@
     <xsl:variable name="name" select="@name"/>
     <xsl:choose>
       <xsl:when test="ancestor::namespace//start[@name=$name]">1</xsl:when>
-      <xsl:when test="(starts-with(@name, 'CT_') or starts-with(@name, 'EG_'))">1</xsl:when>
+      <xsl:when test="(starts-with(@name, 'CT_') or starts-with(@name, 'EG_') or starts-with(@name, 'AG_'))">1</xsl:when>
       <xsl:otherwise>0</xsl:otherwise>
     </xsl:choose>
   </xsl:template>
@@ -789,7 +789,7 @@
             <xsl:call-template name="classfordefine"/>
           </xsl:for-each>
         </xsl:variable>
-        <xsl:if test="$do = '1'">
+        <xsl:if test="$do = '1' or ./rng:ref/@name='BUILT_IN_ANY_TYPE'">
           <xsl:variable name="myelement" select="@name"/>
           <xsl:call-template name="caselabelelement"/>
           <xsl:choose>
@@ -885,11 +885,12 @@
       <xsl:call-template name="contextresource"/>
     </xsl:variable>
     <xsl:variable name="mydefine" select="@name"/>
+    <xsl:variable name="mynsid" select="generate-id(ancestor::namespace)"/>
     <xsl:variable name="switchbody">
       <!--
           Generates the body for the switch over the token id.
       -->
-      <xsl:if test="$resource = 'Properties' or $resource = 'Property' or $resource = 'SingleElement'">
+      <xsl:if test="$resource = 'Properties' or $resource = 'Property' or $resource = 'SingleElement' or $resource='Stream'">
         <xsl:for-each select="//resource[@name=$mydefine]">
           <xsl:for-each select="attribute|sprm">
             <xsl:variable name="sprmname" select="@name"/>
@@ -898,7 +899,9 @@
               <xsl:call-template name="caselabelelement"/>
             </xsl:for-each>
             <xsl:for-each select="key('defines-with-name', $mydefine)//rng:attribute[@name=$sprmname]">
-              <xsl:call-template name="caselabelattribute"/>
+              <xsl:if test="$mynsid=generate-id(ancestor::namespace)">
+                <xsl:call-template name="caselabelattribute"/>
+              </xsl:if>
             </xsl:for-each>
             <xsl:text>
         nResult = </xsl:text>
@@ -986,18 +989,57 @@
   -->
   <xsl:template name="contextattributeimplpropcaseinner">
     <xsl:variable name="mynsid" select="generate-id(ancestor::namespace)"/>
-    <xsl:if test=".//rng:text">
-      <xsl:text>
+    <xsl:choose>
+      <xsl:when test=".//rng:text">
+        <xsl:text>
         {
             OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
             newProperty(nToken, pVal);
         }</xsl:text>
-    </xsl:if>
+      </xsl:when>
+      <xsl:when test=".//rng:data[@type='string']">
+        <xsl:text>
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }</xsl:text>
+      </xsl:when>
+      <xsl:when test=".//rng:data[@type='unsignedInt']">
+        <xsl:text>
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLIntegerValue(rValue));
+            newProperty(nToken, pVal);
+        }</xsl:text>
+      </xsl:when>
+      <xsl:when test=".//rng:data[@type='boolean']">
+        <xsl:text>
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLBooleanValue(rValue));
+            newProperty(nToken, pVal);
+        }</xsl:text>
+      </xsl:when>
+      <xsl:when test=".//rng:data[@type='token']">
+        <xsl:text>
+        {
+            OOXMLValue::Pointer_t pVal(new OOXMLStringValue(rValue));
+            newProperty(nToken, pVal);
+        }</xsl:text>
+      </xsl:when>
+    </xsl:choose>
     <xsl:for-each select=".//rng:ref">
       <xsl:variable name="refclassname">
-        <xsl:for-each select="key('defines-with-name', @name)[generate-id(ancestor::namespace) = $mynsid]">
-          <xsl:call-template name="valuenamefordefine"/>
-        </xsl:for-each>
+        <xsl:choose>
+          <xsl:when test="count(key('defines-with-name', @name)) = 1">
+            <xsl:for-each select="key('defines-with-name', @name)">
+              <xsl:call-template name="valuenamefordefine"/>
+            </xsl:for-each>
+          </xsl:when>
+          <xsl:otherwise>
+            <xsl:for-each select="key('defines-with-name', @name)[generate-id(ancestor::namespace) = $mynsid]">
+              <xsl:call-template name="valuenamefordefine"/>
+            </xsl:for-each>
+          </xsl:otherwise>
+        </xsl:choose>
       </xsl:variable>
       <xsl:text>
         {
@@ -1121,6 +1163,13 @@
       break;</xsl:text>
   </xsl:template>
 
+  <xsl:template name="contextattributeimplstream">
+    <xsl:call-template name="caselabelattribute"/>
+    <xsl:call-template name="contextattributeimplpropcaseinner"/>
+    <xsl:text>
+      break;</xsl:text>
+  </xsl:template>
+
   <!--
       Generates the inner of the switch over the given token id in the
       ::attribute method of the class for the current <define>.
@@ -1160,6 +1209,9 @@
         <xsl:when test="$resource = 'XNote'">
           <xsl:call-template name="contextattributeimplxnote"/>
         </xsl:when>
+        <xsl:when test="$resource = 'Stream'">
+          <xsl:call-template name="contextattributeimplstream"/>
+        </xsl:when>
         <xsl:otherwise/>
       </xsl:choose>
     </xsl:for-each>
@@ -1317,14 +1369,42 @@
     <xsl:call-template name="contextparent"/>
     <xsl:text>(rContext)
 {</xsl:text>
+    <xsl:choose>
+      <xsl:when test="$resource/@resource='Properties'">
+        <xsl:for-each select="$resource/type">
+          <xsl:text>
+    mpPropertySet->setType("</xsl:text>
+    <xsl:value-of select="@name"/>
+    <xsl:text>");</xsl:text>
+        </xsl:for-each>
+      </xsl:when>
+    </xsl:choose>
     <xsl:text>
-}&#xa;</xsl:text>
+}
+</xsl:text>
   </xsl:template>
 
   <!--
       Chooses the action for the current <action> element.
   -->
   <xsl:template name="chooseaction">
+    <xsl:for-each select="./cond">
+      <xsl:text>
+    {
+        OOXMLPropertySetEntryToInteger aHandler(</xsl:text>
+        <xsl:call-template name="idtoqname">
+          <xsl:with-param name="id" select="@tokenid"/>
+        </xsl:call-template>
+        <xsl:text>);
+        getPropertySetAttrs()->resolve(aHandler);
+        
+        if (aHandler.getValue() == </xsl:text>
+        <xsl:call-template name="idtoqname">
+          <xsl:with-param name="id" select="@value"/>
+        </xsl:call-template>
+        <xsl:text>)
+        {</xsl:text>
+    </xsl:for-each>
     <xsl:choose>
       <xsl:when test="@action='sendTableDepth'">
         <xsl:text>
@@ -1346,6 +1426,27 @@
         <xsl:text>
     startSectionGroup();</xsl:text>
       </xsl:when>
+      <xsl:when test="@action='fieldstart'">
+        <xsl:text>
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldStart, 1);</xsl:text>
+    endCharacterGroup();
+      </xsl:when>
+      <xsl:when test="@action='fieldsep'">
+        <xsl:text>
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldSep, 1);</xsl:text>
+    endCharacterGroup();
+      </xsl:when>
+      <xsl:when test="@action='fieldend'">
+        <xsl:text>
+    startCharacterGroup();
+    if (isForwardEvents())        
+        mrStream.text(sFieldEnd, 1);</xsl:text>
+    endCharacterGroup();
+      </xsl:when>
       <xsl:when test="@action='ftnednref'">
         <xsl:text>
     if (isForwardEvents())        
@@ -1359,7 +1460,7 @@
       <xsl:when test="@action='ftnedncont'">
         <xsl:text>
     if (isForwardEvents())        
-        mrStream.utext(sFtnEdnCont, 1);</xsl:text>
+        mrStream.text(sFtnEdnCont, 1);</xsl:text>
       </xsl:when>
       <xsl:when test="@action='pgNum'">
         <xsl:text>
@@ -1373,6 +1474,8 @@
       </xsl:when>
       <xsl:when test="@action='endOfParagraph'">
         <xsl:text>
+    if (! mpParserState->isInCharacterGroup())
+       startCharacterGroup();
     if (isForwardEvents())        
         mrStream.utext(sCR, 1);</xsl:text>
       </xsl:when>
@@ -1442,7 +1545,27 @@
         mpPropertySet->resolve(aCommentHandler);
     }
         </xsl:when>
+        <xsl:when test="@action='printproperty'">
+          <xsl:text>
+    {
+        OOXMLPropertySetEntryToString aHandler(</xsl:text>
+        <xsl:call-template name="idtoqname">
+          <xsl:with-param name="id" select="@tokenid"/>
+        </xsl:call-template>
+        <xsl:text>);
+        getPropertySetAttrs()->resolve(aHandler);
+        const ::rtl::OUString &amp; sText = aHandler.getString();
+        mrStream.utext(reinterpret_cast &lt; const sal_uInt8 * &gt; 
+                   (sText.getStr()), 
+                   sText.getLength());        
+    }</xsl:text>
+        </xsl:when>
     </xsl:choose>
+    <xsl:for-each select="./cond">
+      <xsl:text>
+        }
+    }</xsl:text>
+    </xsl:for-each>
   </xsl:template>
 
   <!--
@@ -1528,13 +1651,16 @@
       <xsl:call-template name="contextnamefordefine"/>
     </xsl:variable>
     <xsl:variable name="resource" select="key('context-resource', @name)"/>
-    <xsl:value-of select="$classname"/>
-    <xsl:text>::~</xsl:text>
-    <xsl:value-of select="$classname"/>
-    <xsl:text>()
-{</xsl:text>
     <xsl:text>
-}&#xa;</xsl:text>
+</xsl:text>
+<xsl:value-of select="$classname"/>
+<xsl:text>::~</xsl:text>
+<xsl:value-of select="$classname"/>
+<xsl:text>()
+{</xsl:text>
+<xsl:text>
+}
+</xsl:text>
   </xsl:template>
 
   <!--
--- writerfilter/source/resourcemodel/qnametostr.cxx	27 Jun 2007 09:22:14 -0000	1.29
+++ writerfilter/source/resourcemodel/qnametostr.cxx	18 Jul 2007 13:01:10 -0000	1.29.4.4
@@ -60,6 +60,133 @@
 
     /* ooxml */
     
+    mMap[NS_ooxml::LN_CT_TileInfoProperties_tx] = "ooxml:CT_TileInfoProperties_tx";
+    mMap[NS_ooxml::LN_CT_TileInfoProperties_ty] = "ooxml:CT_TileInfoProperties_ty";
+    mMap[NS_ooxml::LN_CT_TileInfoProperties_sx] = "ooxml:CT_TileInfoProperties_sx";
+    mMap[NS_ooxml::LN_CT_TileInfoProperties_sy] = "ooxml:CT_TileInfoProperties_sy";
+    mMap[NS_ooxml::LN_CT_TileInfoProperties_flip] = "ooxml:CT_TileInfoProperties_flip";
+    mMap[NS_ooxml::LN_CT_TileInfoProperties_algn] = "ooxml:CT_TileInfoProperties_algn";
+    mMap[NS_ooxml::LN_CT_StretchInfoProperties_fillRect] = "ooxml:CT_StretchInfoProperties_fillRect";
+    mMap[NS_ooxml::LN_EG_FillModeProperties_tile] = "ooxml:EG_FillModeProperties_tile";
+    mMap[NS_ooxml::LN_EG_FillModeProperties_stretch] = "ooxml:EG_FillModeProperties_stretch";
+    mMap[NS_ooxml::LN_CT_Blip_alphaBiLevel] = "ooxml:CT_Blip_alphaBiLevel";
+    mMap[NS_ooxml::LN_CT_Blip_alphaCeiling] = "ooxml:CT_Blip_alphaCeiling";
+    mMap[NS_ooxml::LN_CT_Blip_alphaFloor] = "ooxml:CT_Blip_alphaFloor";
+    mMap[NS_ooxml::LN_CT_Blip_alphaInv] = "ooxml:CT_Blip_alphaInv";
+    mMap[NS_ooxml::LN_CT_Blip_alphaMod] = "ooxml:CT_Blip_alphaMod";
+    mMap[NS_ooxml::LN_CT_Blip_alphaModFix] = "ooxml:CT_Blip_alphaModFix";
+    mMap[NS_ooxml::LN_CT_Blip_alphaRepl] = "ooxml:CT_Blip_alphaRepl";
+    mMap[NS_ooxml::LN_CT_Blip_biLevel] = "ooxml:CT_Blip_biLevel";
+    mMap[NS_ooxml::LN_CT_Blip_blur] = "ooxml:CT_Blip_blur";
+    mMap[NS_ooxml::LN_CT_Blip_clrChange] = "ooxml:CT_Blip_clrChange";
+    mMap[NS_ooxml::LN_CT_Blip_clrRepl] = "ooxml:CT_Blip_clrRepl";
+    mMap[NS_ooxml::LN_CT_Blip_duotone] = "ooxml:CT_Blip_duotone";
+    mMap[NS_ooxml::LN_CT_Blip_fillOverlay] = "ooxml:CT_Blip_fillOverlay";
+    mMap[NS_ooxml::LN_CT_Blip_grayscl] = "ooxml:CT_Blip_grayscl";
+    mMap[NS_ooxml::LN_CT_Blip_hsl] = "ooxml:CT_Blip_hsl";
+    mMap[NS_ooxml::LN_CT_Blip_lum] = "ooxml:CT_Blip_lum";
+    mMap[NS_ooxml::LN_CT_Blip_tint] = "ooxml:CT_Blip_tint";
+    mMap[NS_ooxml::LN_CT_Blip_extLst] = "ooxml:CT_Blip_extLst";
+    mMap[NS_ooxml::LN_CT_Blip_cstate] = "ooxml:CT_Blip_cstate";
+    mMap[NS_ooxml::LN_CT_BlipFillProperties_blip] = "ooxml:CT_BlipFillProperties_blip";
+    mMap[NS_ooxml::LN_CT_BlipFillProperties_srcRect] = "ooxml:CT_BlipFillProperties_srcRect";
+    mMap[NS_ooxml::LN_CT_BlipFillProperties_dpi] = "ooxml:CT_BlipFillProperties_dpi";
+    mMap[NS_ooxml::LN_CT_BlipFillProperties_rotWithShape] = "ooxml:CT_BlipFillProperties_rotWithShape";
+    mMap[NS_ooxml::LN_EG_Effect_cont] = "ooxml:EG_Effect_cont";
+    mMap[NS_ooxml::LN_EG_Effect_effect] = "ooxml:EG_Effect_effect";
+    mMap[NS_ooxml::LN_EG_Effect_alphaBiLevel] = "ooxml:EG_Effect_alphaBiLevel";
+    mMap[NS_ooxml::LN_EG_Effect_alphaCeiling] = "ooxml:EG_Effect_alphaCeiling";
+    mMap[NS_ooxml::LN_EG_Effect_alphaFloor] = "ooxml:EG_Effect_alphaFloor";
+    mMap[NS_ooxml::LN_EG_Effect_alphaInv] = "ooxml:EG_Effect_alphaInv";
+    mMap[NS_ooxml::LN_EG_Effect_alphaMod] = "ooxml:EG_Effect_alphaMod";
+    mMap[NS_ooxml::LN_EG_Effect_alphaModFix] = "ooxml:EG_Effect_alphaModFix";
+    mMap[NS_ooxml::LN_EG_Effect_alphaOutset] = "ooxml:EG_Effect_alphaOutset";
+    mMap[NS_ooxml::LN_EG_Effect_alphaRepl] = "ooxml:EG_Effect_alphaRepl";
+    mMap[NS_ooxml::LN_EG_Effect_biLevel] = "ooxml:EG_Effect_biLevel";
+    mMap[NS_ooxml::LN_EG_Effect_blend] = "ooxml:EG_Effect_blend";
+    mMap[NS_ooxml::LN_EG_Effect_blur] = "ooxml:EG_Effect_blur";
+    mMap[NS_ooxml::LN_EG_Effect_clrChange] = "ooxml:EG_Effect_clrChange";
+    mMap[NS_ooxml::LN_EG_Effect_clrRepl] = "ooxml:EG_Effect_clrRepl";
+    mMap[NS_ooxml::LN_EG_Effect_duotone] = "ooxml:EG_Effect_duotone";
+    mMap[NS_ooxml::LN_EG_Effect_fill] = "ooxml:EG_Effect_fill";
+    mMap[NS_ooxml::LN_EG_Effect_fillOverlay] = "ooxml:EG_Effect_fillOverlay";
+    mMap[NS_ooxml::LN_EG_Effect_glow] = "ooxml:EG_Effect_glow";
+    mMap[NS_ooxml::LN_EG_Effect_grayscl] = "ooxml:EG_Effect_grayscl";
+    mMap[NS_ooxml::LN_EG_Effect_hsl] = "ooxml:EG_Effect_hsl";
+    mMap[NS_ooxml::LN_EG_Effect_innerShdw] = "ooxml:EG_Effect_innerShdw";
+    mMap[NS_ooxml::LN_EG_Effect_lum] = "ooxml:EG_Effect_lum";
+    mMap[NS_ooxml::LN_EG_Effect_outerShdw] = "ooxml:EG_Effect_outerShdw";
+    mMap[NS_ooxml::LN_EG_Effect_prstShdw] = "ooxml:EG_Effect_prstShdw";
+    mMap[NS_ooxml::LN_EG_Effect_reflection] = "ooxml:EG_Effect_reflection";
+    mMap[NS_ooxml::LN_EG_Effect_relOff] = "ooxml:EG_Effect_relOff";
+    mMap[NS_ooxml::LN_EG_Effect_softEdge] = "ooxml:EG_Effect_softEdge";
+    mMap[NS_ooxml::LN_EG_Effect_tint] = "ooxml:EG_Effect_tint";
+    mMap[NS_ooxml::LN_EG_Effect_xfrm] = "ooxml:EG_Effect_xfrm";
+    mMap[NS_ooxml::LN_CT_ShapeProperties_xfrm] = "ooxml:CT_ShapeProperties_xfrm";
+    mMap[NS_ooxml::LN_CT_ShapeProperties_ln] = "ooxml:CT_ShapeProperties_ln";
+    mMap[NS_ooxml::LN_CT_ShapeProperties_scene3d] = "ooxml:CT_ShapeProperties_scene3d";
+    mMap[NS_ooxml::LN_CT_ShapeProperties_sp3d] = "ooxml:CT_ShapeProperties_sp3d";
+    mMap[NS_ooxml::LN_CT_ShapeProperties_extLst] = "ooxml:CT_ShapeProperties_extLst";
+    mMap[NS_ooxml::LN_CT_ShapeProperties_bwMode] = "ooxml:CT_ShapeProperties_bwMode";
+    mMap[NS_ooxml::LN_CT_Point2D_x] = "ooxml:CT_Point2D_x";
+    mMap[NS_ooxml::LN_CT_Point2D_y] = "ooxml:CT_Point2D_y";
+    mMap[NS_ooxml::LN_CT_PositiveSize2D_cx] = "ooxml:CT_PositiveSize2D_cx";
+    mMap[NS_ooxml::LN_CT_PositiveSize2D_cy] = "ooxml:CT_PositiveSize2D_cy";
+    mMap[NS_ooxml::LN_CT_Transform2D_off] = "ooxml:CT_Transform2D_off";
+    mMap[NS_ooxml::LN_CT_Transform2D_ext] = "ooxml:CT_Transform2D_ext";
+    mMap[NS_ooxml::LN_CT_Transform2D_rot] = "ooxml:CT_Transform2D_rot";
+    mMap[NS_ooxml::LN_CT_Transform2D_flipH] = "ooxml:CT_Transform2D_flipH";
+    mMap[NS_ooxml::LN_CT_Transform2D_flipV] = "ooxml:CT_Transform2D_flipV";
+    mMap[NS_ooxml::LN_AG_Blob_r_embed] = "ooxml:AG_Blob_r_embed";
+    mMap[NS_ooxml::LN_AG_Blob_r_link] = "ooxml:AG_Blob_r_link";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectFrameLocking_extLst] = "ooxml:CT_GraphicalObjectFrameLocking_extLst";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noGrp] = "ooxml:CT_GraphicalObjectFrameLocking_noGrp";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noDrilldown] = "ooxml:CT_GraphicalObjectFrameLocking_noDrilldown";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noSelect] = "ooxml:CT_GraphicalObjectFrameLocking_noSelect";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noChangeAspect] = "ooxml:CT_GraphicalObjectFrameLocking_noChangeAspect";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noMove] = "ooxml:CT_GraphicalObjectFrameLocking_noMove";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectFrameLocking_noResize] = "ooxml:CT_GraphicalObjectFrameLocking_noResize";
+    mMap[NS_ooxml::LN_CT_NonVisualDrawingProps_hlinkClick] = "ooxml:CT_NonVisualDrawingProps_hlinkClick";
+    mMap[NS_ooxml::LN_CT_NonVisualDrawingProps_hlinkHover] = "ooxml:CT_NonVisualDrawingProps_hlinkHover";
+    mMap[NS_ooxml::LN_CT_NonVisualDrawingProps_extLst] = "ooxml:CT_NonVisualDrawingProps_extLst";
+    mMap[NS_ooxml::LN_CT_NonVisualDrawingProps_id] = "ooxml:CT_NonVisualDrawingProps_id";
+    mMap[NS_ooxml::LN_CT_NonVisualDrawingProps_name] = "ooxml:CT_NonVisualDrawingProps_name";
+    mMap[NS_ooxml::LN_CT_NonVisualDrawingProps_descr] = "ooxml:CT_NonVisualDrawingProps_descr";
+    mMap[NS_ooxml::LN_CT_NonVisualDrawingProps_hidden] = "ooxml:CT_NonVisualDrawingProps_hidden";
+    mMap[NS_ooxml::LN_CT_NonVisualPictureProperties_picLocks] = "ooxml:CT_NonVisualPictureProperties_picLocks";
+    mMap[NS_ooxml::LN_CT_NonVisualPictureProperties_extLst] = "ooxml:CT_NonVisualPictureProperties_extLst";
+    mMap[NS_ooxml::LN_CT_NonVisualPictureProperties_preferRelativeResize] = "ooxml:CT_NonVisualPictureProperties_preferRelativeResize";
+    mMap[NS_ooxml::LN_CT_NonVisualGraphicFrameProperties_graphicFrameLocks] = "ooxml:CT_NonVisualGraphicFrameProperties_graphicFrameLocks";
+    mMap[NS_ooxml::LN_CT_NonVisualGraphicFrameProperties_extLst] = "ooxml:CT_NonVisualGraphicFrameProperties_extLst";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectData_] = "ooxml:CT_GraphicalObjectData_";
+    mMap[NS_ooxml::LN_CT_GraphicalObjectData_uri] = "ooxml:CT_GraphicalObjectData_uri";
+    mMap[NS_ooxml::LN_CT_GraphicalObject_graphicData] = "ooxml:CT_GraphicalObject_graphicData";
+    mMap[NS_ooxml::LN_CT_GeomGuideList_gd] = "ooxml:CT_GeomGuideList_gd";
+    mMap[NS_ooxml::LN_CT_PresetGeometry2D_avLst] = "ooxml:CT_PresetGeometry2D_avLst";
+    mMap[NS_ooxml::LN_CT_PresetGeometry2D_prst] = "ooxml:CT_PresetGeometry2D_prst";
+    mMap[NS_ooxml::LN_CT_CustomGeometry2D_avLst] = "ooxml:CT_CustomGeometry2D_avLst";
+    mMap[NS_ooxml::LN_CT_CustomGeometry2D_gdLst] = "ooxml:CT_CustomGeometry2D_gdLst";
+    mMap[NS_ooxml::LN_CT_CustomGeometry2D_ahLst] = "ooxml:CT_CustomGeometry2D_ahLst";
+    mMap[NS_ooxml::LN_CT_CustomGeometry2D_cxnLst] = "ooxml:CT_CustomGeometry2D_cxnLst";
+    mMap[NS_ooxml::LN_CT_CustomGeometry2D_rect] = "ooxml:CT_CustomGeometry2D_rect";
+    mMap[NS_ooxml::LN_CT_CustomGeometry2D_pathLst] = "ooxml:CT_CustomGeometry2D_pathLst";
+    mMap[NS_ooxml::LN_EG_Geometry_custGeom] = "ooxml:EG_Geometry_custGeom";
+    mMap[NS_ooxml::LN_EG_Geometry_prstGeom] = "ooxml:EG_Geometry_prstGeom";
+    mMap[NS_ooxml::LN_CT_EffectExtent_l] = "ooxml:CT_EffectExtent_l";
+    mMap[NS_ooxml::LN_CT_EffectExtent_t] = "ooxml:CT_EffectExtent_t";
+    mMap[NS_ooxml::LN_CT_EffectExtent_r] = "ooxml:CT_EffectExtent_r";
+    mMap[NS_ooxml::LN_CT_EffectExtent_b] = "ooxml:CT_EffectExtent_b";
+    mMap[NS_ooxml::LN_CT_Inline_extent] = "ooxml:CT_Inline_extent";
+    mMap[NS_ooxml::LN_CT_Inline_effectExtent] = "ooxml:CT_Inline_effectExtent";
+    mMap[NS_ooxml::LN_CT_Inline_docPr] = "ooxml:CT_Inline_docPr";
+    mMap[NS_ooxml::LN_CT_Inline_cNvGraphicFramePr] = "ooxml:CT_Inline_cNvGraphicFramePr";
+    mMap[NS_ooxml::LN_CT_Inline_a_graphic] = "ooxml:CT_Inline_a_graphic";
+    mMap[NS_ooxml::LN_CT_Inline_distT] = "ooxml:CT_Inline_distT";
+    mMap[NS_ooxml::LN_CT_Inline_distB] = "ooxml:CT_Inline_distB";
+    mMap[NS_ooxml::LN_CT_Inline_distL] = "ooxml:CT_Inline_distL";
+    mMap[NS_ooxml::LN_CT_Inline_distR] = "ooxml:CT_Inline_distR";
+    mMap[NS_ooxml::LN_CT_PictureNonVisual_cNvPr] = "ooxml:CT_PictureNonVisual_cNvPr";
+    mMap[NS_ooxml::LN_CT_PictureNonVisual_cNvPicPr] = "ooxml:CT_PictureNonVisual_cNvPicPr";
     mMap[NS_ooxml::LN_CT_Highlight_val] = "ooxml:CT_Highlight_val";
     mMap[NS_ooxml::LN_CT_Color_val] = "ooxml:CT_Color_val";
     mMap[NS_ooxml::LN_CT_Color_themeColor] = "ooxml:CT_Color_themeColor";
@@ -127,6 +254,9 @@
     mMap[NS_ooxml::LN_CT_Markup_id] = "ooxml:CT_Markup_id";
     mMap[NS_ooxml::LN_CT_TrackChange_author] = "ooxml:CT_TrackChange_author";
     mMap[NS_ooxml::LN_CT_TrackChange_date] = "ooxml:CT_TrackChange_date";
+    mMap[NS_ooxml::LN_CT_MarkupRange_displacedByCustomXml] = "ooxml:CT_MarkupRange_displacedByCustomXml";
+    mMap[NS_ooxml::LN_CT_BookmarkRange_colFirst] = "ooxml:CT_BookmarkRange_colFirst";
+    mMap[NS_ooxml::LN_CT_BookmarkRange_colLast] = "ooxml:CT_BookmarkRange_colLast";
     mMap[NS_ooxml::LN_CT_Comment_initials] = "ooxml:CT_Comment_initials";
     mMap[NS_ooxml::LN_CT_SectPrChange_sectPr] = "ooxml:CT_SectPrChange_sectPr";
     mMap[NS_ooxml::LN_CT_NumPr_numberingChange] = "ooxml:CT_NumPr_numberingChange";
@@ -150,6 +280,16 @@
     mMap[NS_ooxml::LN_CT_PPr_sectPr] = "ooxml:CT_PPr_sectPr";
     mMap[NS_ooxml::LN_CT_PPr_pPrChange] = "ooxml:CT_PPr_pPrChange";
     mMap[NS_ooxml::LN_CT_Rel_id] = "ooxml:CT_Rel_id";
+    mMap[NS_ooxml::LN_CT_SimpleField_fldData] = "ooxml:CT_SimpleField_fldData";
+    mMap[NS_ooxml::LN_CT_SimpleField_instr] = "ooxml:CT_SimpleField_instr";
+    mMap[NS_ooxml::LN_CT_SimpleField_fldLock] = "ooxml:CT_SimpleField_fldLock";
+    mMap[NS_ooxml::LN_CT_SimpleField_dirty] = "ooxml:CT_SimpleField_dirty";
+    mMap[NS_ooxml::LN_CT_FldChar_fldData] = "ooxml:CT_FldChar_fldData";
+    mMap[NS_ooxml::LN_CT_FldChar_ffData] = "ooxml:CT_FldChar_ffData";
+    mMap[NS_ooxml::LN_CT_FldChar_numberingChange] = "ooxml:CT_FldChar_numberingChange";
+    mMap[NS_ooxml::LN_CT_FldChar_fldCharType] = "ooxml:CT_FldChar_fldCharType";
+    mMap[NS_ooxml::LN_CT_FldChar_fldLock] = "ooxml:CT_FldChar_fldLock";
+    mMap[NS_ooxml::LN_CT_FldChar_dirty] = "ooxml:CT_FldChar_dirty";
     mMap[NS_ooxml::LN_CT_PageSz_w] = "ooxml:CT_PageSz_w";
     mMap[NS_ooxml::LN_CT_PageSz_h] = "ooxml:CT_PageSz_h";
     mMap[NS_ooxml::LN_CT_PageSz_orient] = "ooxml:CT_PageSz_orient";
@@ -206,6 +346,7 @@
     mMap[NS_ooxml::LN_CT_PTab_leader] = "ooxml:CT_PTab_leader";
     mMap[NS_ooxml::LN_CT_Sym_font] = "ooxml:CT_Sym_font";
     mMap[NS_ooxml::LN_CT_Sym_char] = "ooxml:CT_Sym_char";
+    mMap[NS_ooxml::LN_CT_Text_space] = "ooxml:CT_Text_space";
     mMap[NS_ooxml::LN_CT_Fonts_hint] = "ooxml:CT_Fonts_hint";
     mMap[NS_ooxml::LN_CT_Fonts_ascii] = "ooxml:CT_Fonts_ascii";
     mMap[NS_ooxml::LN_CT_Fonts_hAnsi] = "ooxml:CT_Fonts_hAnsi";
@@ -271,6 +412,10 @@
     mMap[NS_ooxml::LN_CT_TrPrBase_tblCellSpacing] = "ooxml:CT_TrPrBase_tblCellSpacing";
     mMap[NS_ooxml::LN_CT_TrPrBase_jc] = "ooxml:CT_TrPrBase_jc";
     mMap[NS_ooxml::LN_CT_TrPrBase_hidden] = "ooxml:CT_TrPrBase_hidden";
+    mMap[NS_ooxml::LN_CT_TblCellMar_top] = "ooxml:CT_TblCellMar_top";
+    mMap[NS_ooxml::LN_CT_TblCellMar_left] = "ooxml:CT_TblCellMar_left";
+    mMap[NS_ooxml::LN_CT_TblCellMar_bottom] = "ooxml:CT_TblCellMar_bottom";
+    mMap[NS_ooxml::LN_CT_TblCellMar_right] = "ooxml:CT_TblCellMar_right";
     mMap[NS_ooxml::LN_CT_TblBorders_top] = "ooxml:CT_TblBorders_top";
     mMap[NS_ooxml::LN_CT_TblBorders_left] = "ooxml:CT_TblBorders_left";
     mMap[NS_ooxml::LN_CT_TblBorders_bottom] = "ooxml:CT_TblBorders_bottom";
