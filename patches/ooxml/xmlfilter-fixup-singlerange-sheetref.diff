Index: sc/source/core/tool/rangelst.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/tool/rangelst.cxx,v
retrieving revision 1.10
diff -u -p -r1.10 rangelst.cxx
--- sc/source/core/tool/rangelst.cxx	27 Feb 2007 12:18:02 -0000	1.10
+++ sc/source/core/tool/rangelst.cxx	23 Oct 2007 14:35:47 -0000
@@ -109,15 +109,19 @@ USHORT ScRangeList::Parse( const String&
 		for ( USHORT i=0; i<nTCount; i++ )
 		{
 			aOne = rStr.GetToken( i, cDelimiter );
-			// FIXME : broken for Lotus
-			if ( aOne.Search( ':' ) == STRING_NOTFOUND )
-			{	// Range muss es sein
-				String aStrTmp( aOne );
-				aOne += ':';
-				aOne += aStrTmp;
-			}
 			aRange.aStart.SetTab( nTab );	// Default Tab wenn nicht angegeben
-			USHORT nRes = aRange.Parse( aOne, pDoc, eConv );
+			USHORT nRes = aRange.ParseAny( aOne, pDoc, eConv );
+
+			USHORT nEndRangeBits = SCA_VALID_COL2 | SCA_VALID_ROW2 | SCA_VALID_TAB2;
+			USHORT nStartRangeBits =   SCA_VALID_COL | SCA_VALID_ROW | SCA_VALID_TAB;
+			USHORT nTmp1 = ( nRes & nStartRangeBits );
+			USHORT nTmp2 = ( nRes & nEndRangeBits );
+			// If we have a valid single range with
+			// any of the address bits we are interested in
+			// set - set the equiv end range bits
+			if ( (nRes & SCA_VALID ) && nTmp1 && ( nTmp2 != nEndRangeBits ) ) 
+					nRes |= ( nTmp1 << 4 );
+	
 			if ( (nRes & nMask) == nMask )
 				Append( aRange );
 			nResult &= nRes;		// alle gemeinsamen Bits bleiben erhalten
