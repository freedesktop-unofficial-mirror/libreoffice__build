--- svx/source/unodraw/unoshap2.cxx	18 Jul 2007 10:58:28 -0000	1.65
+++ svx/source/unodraw/unoshap2.cxx	24 Jul 2007 19:18:00 -0000	1.51.276.9
@@ -602,14 +602,14 @@ DBG_NAME(SvxShapeControl)
 SvxShapeControl::SvxShapeControl( SdrObject* pObj )  throw() :
 	SvxShapeText( pObj, aSvxMapProvider.GetMap(SVXMAP_CONTROL) )
 {
-    DBG_CTOR(SvxShapeControl,NULL);    
+    DBG_CTOR(SvxShapeControl,NULL);
 	setShapeKind( OBJ_UNO );
 }
 
 //----------------------------------------------------------------------
 SvxShapeControl::~SvxShapeControl() throw()
 {
-    DBG_DTOR(SvxShapeControl,NULL);    
+    DBG_DTOR(SvxShapeControl,NULL);
 }
 
 //----------------------------------------------------------------------
@@ -1465,14 +1465,14 @@ basegfx::B2DPolyPolygon SvxConvertPolyPo
 
 			// the previous writes used the B2DPolyPoygon -> PolyPolygon converter
 			// which did not create minimal PolyPolygons, but created all control points
-			// as null vectors (identical points). Because of the former P(CA)(CB)-norm of 
-			// B2DPolygon and it's unused sign of being the zero-vector and CA and CB being 
-			// relative to P, an empty edge was exported as P == CA == CB. Luckily, the new 
-			// export format can be read without errors by the old OOo-versions, so we need only 
+			// as null vectors (identical points). Because of the former P(CA)(CB)-norm of
+			// B2DPolygon and it's unused sign of being the zero-vector and CA and CB being
+			// relative to P, an empty edge was exported as P == CA == CB. Luckily, the new
+			// export format can be read without errors by the old OOo-versions, so we need only
 			// to correct here at read and do not need to export a wrong but compatible version
 			// for the future.
 			if(bControlA
-				&& aControlA.equal(aControlB) 
+				&& aControlA.equal(aControlB)
 				&& aControlA.equal(aNewPolygon.getB2DPoint(aNewPolygon.count() - 1)))
 			{
 				bControlA = bControlB = false;
@@ -1497,7 +1497,7 @@ basegfx::B2DPolyPolygon SvxConvertPolyPo
 		// #i72807# API import uses old line start/end-equal definition for closed,
 		// so we need to correct this to closed state here
 		basegfx::tools::checkClosed(aNewPolygon);
-		
+
 		// add new subpolygon
 		aNewPolyPolygon.append(aNewPolygon);
 	}
@@ -1735,6 +1735,15 @@ void SAL_CALL SvxGraphicObject::setPrope
 				}
 			}
 		}
+		else if( aValue.getValueType() == INTERFACE_TYPE( graphic::XGraphic ))
+		{
+			Reference< graphic::XGraphic > xGraphic( aValue, UNO_QUERY );
+			if( xGraphic.is() )
+			{
+				Graphic aGraphic( xGraphic );
+				((SdrGrafObj*)mpObj.get())->SetGraphic(aGraphic);
+			}
+		}
 	}
 	else if( mpObj.is() && aPropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM(UNO_NAME_GRAPHOBJ_GRAFURL)))
 	{
@@ -1822,7 +1831,7 @@ void SAL_CALL SvxGraphicObject::setPrope
 
 		if( !xGraphic.is() )
 			throw lang::IllegalArgumentException();
-            
+
     	static_cast< SdrGrafObj*>( mpObj.get() )->SetGraphic( xGraphic );
     }
 	else
@@ -1884,7 +1893,7 @@ uno::Any SAL_CALL SvxGraphicObject::getP
 	}
 	else if( mpObj.is() && aPropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM(UNO_NAME_GRAPHOBJ_GRAPHIC)) )
     {
-        Reference< graphic::XGraphic > xGraphic( static_cast< SdrGrafObj* >( mpObj.get() )->GetGraphic().GetXGraphic() ); 
+        Reference< graphic::XGraphic > xGraphic( static_cast< SdrGrafObj* >( mpObj.get() )->GetGraphic().GetXGraphic() );
         return uno::Any( xGraphic );
     }
 	else if( mpObj.is() && aPropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM("GraphicStream" ) ) )
@@ -2157,6 +2166,7 @@ void SAL_CALL SvxCustomShape::setPropert
 
 	if ( bCustomShapeGeometry )
 	{
+		((SdrObjCustomShape*)pObject)->MergeDefaultAttributes(0);
 		Rectangle aRect( pObject->GetSnapRect() );
 
 		// #i38892#
--- svx/source/unodraw/unoshap4.cxx	27 Jun 2007 19:26:50 -0000	1.30
+++ svx/source/unodraw/unoshap4.cxx	6 Sep 2007 21:36:27 -0000	1.30.50.2
@@ -166,6 +166,22 @@ void SAL_CALL SvxOle2Shape::setPropertyV
 
 		throw IllegalArgumentException();
 	}
+	else if( aPropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "Graphic" ) ) )
+	{
+		uno::Reference< graphic::XGraphic > xGraphic;
+		if( aValue >>= xGraphic )
+		{
+			SdrOle2Obj* pOle = dynamic_cast< SdrOle2Obj* >( mpObj.get() );
+			if( pOle )
+			{
+				GraphicObject aGrafObj( xGraphic );
+				const Graphic aGraphic( aGrafObj.GetGraphic() );
+				pOle->SetGraphicToObj( aGraphic, rtl::OUString() );
+			}
+			return;
+		}
+		throw IllegalArgumentException();
+	}
     else if( aPropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( UNO_NAME_OLE2_PERSISTNAME ) ) )
     {
 		OUString aPersistName;
--- svx/source/unodraw/unoshape.cxx	28 Aug 2007 13:45:51 -0000	1.164
+++ svx/source/unodraw/unoshape.cxx	31 Oct 2007 15:35:15 -0000	1.164.36.1
@@ -3016,7 +3016,6 @@ void SAL_CALL SvxShape::setPropertyValue
 			catch( beans::UnknownPropertyException& e )
 			{
 				(void)e;
-				DBG_ERROR("svx::SvxShape::setPropertyValues(), unknown property!" );
 			}
             catch( uno::Exception& ex )
             {
@@ -3039,7 +3038,6 @@ void SAL_CALL SvxShape::setPropertyValue
 			catch( beans::UnknownPropertyException& e )
 			{
 				(void)e;
-				DBG_ERROR("svx::SvxShape::setPropertyValues(), unknown property!" );
 			}
             catch( uno::Exception& ex )
             {
--- svx/source/xoutdev/xattrbmp.cxx	27 Jun 2007 19:33:53 -0000	1.16
+++ svx/source/xoutdev/xattrbmp.cxx	24 Jul 2007 19:23:25 -0000	1.13.276.3
@@ -36,6 +36,7 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_svx.hxx"
 #include <com/sun/star/awt/XBitmap.hpp>
+#include <com/sun/star/graphic/XGraphic.hpp>
 #include <tools/stream.hxx>
 #include <vcl/window.hxx>
 #include <vcl/virdev.hxx>
@@ -802,6 +803,7 @@ sal_Bool XFillBitmapItem::PutValue( cons
     ::rtl::OUString aName;
     ::rtl::OUString aURL;
     ::com::sun::star::uno::Reference< ::com::sun::star::awt::XBitmap > xBmp;
+    ::com::sun::star::uno::Reference< ::com::sun::star::graphic::XGraphic > xGraphic;
 
     bool bSetName   = false;
     bool bSetURL    = false;
@@ -812,7 +814,11 @@ sal_Bool XFillBitmapItem::PutValue( cons
     else if( nMemberId == MID_GRAFURL )
 		bSetURL = (rVal >>= aURL);
 	else if( nMemberId == MID_BITMAP )
+	{
         bSetBitmap = (rVal >>= xBmp);
+		if ( !bSetBitmap )
+			bSetBitmap = (rVal >>= xGraphic );
+	}
     else
     {
         DBG_ASSERT( nMemberId == 0, "invalid member-id" );
@@ -843,8 +849,17 @@ sal_Bool XFillBitmapItem::PutValue( cons
     }
     if( bSetBitmap )
     {
-        BitmapEx aInputEx( VCLUnoHelper::GetBitmap( xBmp ) );
-        Bitmap aInput( aInputEx.GetBitmap() );
+		Bitmap aInput;
+		if ( xBmp.is() )
+		{
+	        BitmapEx aInputEx( VCLUnoHelper::GetBitmap( xBmp ) );
+		    aInput = aInputEx.GetBitmap();
+		}
+		else if ( xGraphic.is() )
+		{
+			Graphic aGraphic( xGraphic );
+		    aInput = aGraphic.GetBitmap();
+		}
 
         // note: aXOBitmap is the member bitmap
         aXOBitmap.SetBitmap( aInput );
