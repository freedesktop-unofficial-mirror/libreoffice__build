--- goodies/source/unographic/graphic.cxx	10 May 2007 09:14:09 -0000	1.5
+++ goodies/source/unographic/graphic.cxx	24 Sep 2007 15:53:58 -0000	1.5.32.1
@@ -50,6 +50,10 @@
 #include <com/sun/star/graphic/GraphicType.hpp>
 #endif
 
+#ifndef _COM_SUN_STAR_GRAPHIC_XGRAPHICTRANSOFMER_HPP_
+#include <com/sun/star/graphic/XGraphicTransformer.hpp>
+#endif
+
 #include <vcl/graph.hxx>
 #include "graphic.hxx"
 
@@ -90,7 +94,6 @@ uno::Any SAL_CALL Graphic::queryAggregat
 	throw( uno::RuntimeException )
 {
 	uno::Any aAny;
-
 	if( rType == ::getCppuType((const uno::Reference< graphic::XGraphic >*)0) )
 		aAny <<= uno::Reference< graphic::XGraphic >( this );
 	else if( rType == ::getCppuType((const uno::Reference< awt::XBitmap >*)0) )
@@ -108,7 +111,10 @@ uno::Any SAL_CALL Graphic::queryAggregat
 uno::Any SAL_CALL Graphic::queryInterface( const uno::Type & rType )
 	throw( uno::RuntimeException )
 {
-	return ::unographic::GraphicDescriptor::queryInterface( rType );
+    ::com::sun::star::uno::Any aReturn = ::unographic::GraphicDescriptor::queryInterface( rType );
+    if ( !aReturn.hasValue() )
+		aReturn = ::cppu::queryInterface ( rType, static_cast< graphic::XGraphicTransformer*>( this ) );
+	return aReturn;
 }
 
 // ------------------------------------------------------------------------------
--- goodies/source/unographic/graphic.hxx	10 May 2007 09:14:22 -0000	1.5
+++ goodies/source/unographic/graphic.hxx	24 Sep 2007 15:53:58 -0000	1.5.32.1
@@ -48,6 +48,7 @@
 #include <com/sun/star/awt/XBitmap.hpp>
 
 #include "descriptor.hxx"
+#include "transformer.hxx"
 
 using namespace com::sun::star;
 
@@ -62,7 +63,8 @@ namespace unographic {
 class Graphic : public ::com::sun::star::graphic::XGraphic,
 				public ::com::sun::star::awt::XBitmap,
 				public ::com::sun::star::lang::XUnoTunnel, 
-				public ::unographic::GraphicDescriptor
+				public ::unographic::GraphicDescriptor,
+				public ::unographic::GraphicTransformer
 {
 public:
 		
--- goodies/source/unographic/makefile.mk	6 Feb 2007 14:28:14 -0000	1.4
+++ goodies/source/unographic/makefile.mk	24 Sep 2007 15:53:58 -0000	1.4.52.1
@@ -50,14 +50,16 @@ CXXFILES=							\
 			descriptor.cxx			\
 			provider.cxx			\
 			graphic.cxx				\
-			renderer.cxx			
+			renderer.cxx			\
+			transformer.cxx
 
 SLOFILES=							\
 			$(SLO)$/graphicuno.obj	\
 			$(SLO)$/descriptor.obj	\
 			$(SLO)$/provider.obj	\
 			$(SLO)$/graphic.obj		\
-			$(SLO)$/renderer.obj	
+			$(SLO)$/renderer.obj	\
+			$(SLO)$/transformer.obj
 
 # --- Target -------------------------------------------------------
 
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ goodies/source/unographic/transformer.cxx	5 Oct 2007 13:49:02 -0000	1.1.2.3
@@ -0,0 +1,177 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_goodies.hxx"
+
+#ifndef _RTL_UUID_H_ 
+#include <rtl/uuid.h>
+#endif
+#ifndef _VOS_MUTEX_HXX_ 
+#include <vos/mutex.hxx>
+#endif
+#ifndef _SV_SVAPP_HXX_ 
+#include <vcl/svapp.hxx>
+#endif
+#ifndef _SV_IMAGE_HXX_ 
+#include <vcl/image.hxx>
+#endif
+#ifndef _SV_METAACT_HXX
+#include <vcl/metaact.hxx>
+#endif
+#include <tools/rcid.h>
+#include <tools/resid.hxx>
+#include <tools/resmgr.hxx>
+#include <unotools/ucbstreamhelper.hxx>
+#include <svtools/solar.hrc>
+#include <vcl/salbtype.hxx>
+#include <vcl/virdev.hxx>
+#include <vcl/bmpacc.hxx>
+
+#ifndef _COM_SUN_STAR_TEXT_GRAPHICCROP_HPP_
+#include <com/sun/star/text/GraphicCrop.hpp>
+#endif
+
+#include "graphic.hxx"
+#include "transformer.hxx"
+
+using namespace com::sun::star;
+
+namespace unographic {
+
+// ----------------------
+// - GraphicTransformer -
+// ----------------------
+
+GraphicTransformer::GraphicTransformer()
+{
+}
+
+// ------------------------------------------------------------------------------
+
+GraphicTransformer::~GraphicTransformer()
+{
+}
+
+// ------------------------------------------------------------------------------
+
+void setAlpha( Bitmap& rBitmap, AlphaMask& rAlpha, sal_Int32 nColorFrom, sal_Int8 nAlphaTo )
+{
+	BitmapWriteAccess* pWriteAccess = rAlpha.AcquireWriteAccess();
+	BitmapReadAccess* pReadAccess = rBitmap.AcquireReadAccess();
+	BitmapColor aColorFrom( static_cast< sal_uInt8 >( nColorFrom >> 16 ),
+		static_cast< sal_uInt8 >( nColorFrom >> 8 ),
+		static_cast< sal_uInt8 >( nColorFrom ) );
+	if ( pReadAccess && pWriteAccess )
+	{
+		for ( sal_Int32 nY = 0; nY < pReadAccess->Height(); nY++ )
+		{
+			for ( sal_Int32 nX = 0; nX < pReadAccess->Width(); nX++ )
+			{
+				BitmapColor aColor( pReadAccess->GetPixel( nY, nX ) );
+				if ( aColor == aColorFrom )
+					pWriteAccess->SetPixel( nY, nX, nAlphaTo );
+			}
+		}
+	}
+	rBitmap.ReleaseAccess( pReadAccess );
+	rAlpha.ReleaseAccess( pWriteAccess );
+}
+
+// XGraphicTransformer
+uno::Reference< graphic::XGraphic > SAL_CALL GraphicTransformer::colorChange( 
+	const uno::Reference< graphic::XGraphic >& rxGraphic, sal_Int32 nColorFrom, sal_Int8 nTolerance, sal_Int32 nColorTo, sal_Int8 nAlphaTo )
+		throw ( lang::IllegalArgumentException, uno::RuntimeException)
+{
+	const uno::Reference< uno::XInterface > xIFace( rxGraphic, uno::UNO_QUERY );
+	::Graphic aGraphic( *::unographic::Graphic::getImplementation( xIFace ) );
+
+	BitmapColor aColorFrom( static_cast< sal_uInt8 >( nColorFrom ), static_cast< sal_uInt8 >( nColorFrom >> 16 ), static_cast< sal_uInt8 >( nColorFrom >> 24 ) );
+	BitmapColor aColorTo( static_cast< sal_uInt8 >( nColorTo ), static_cast< sal_uInt8 >( nColorTo >> 16 ), static_cast< sal_uInt8 >( nColorTo  >> 24 ) );
+
+	if ( aGraphic.GetType() == GRAPHIC_BITMAP )
+	{
+		BitmapEx	aBitmapEx( aGraphic.GetBitmapEx() );
+		Bitmap		aBitmap( aBitmapEx.GetBitmap() );
+
+		if ( aBitmapEx.IsAlpha() )
+		{
+			AlphaMask aAlphaMask( aBitmapEx.GetAlpha() );
+			setAlpha( aBitmap, aAlphaMask, aColorFrom, nAlphaTo );
+			aBitmap.Replace( aColorFrom, aColorTo, nTolerance );
+			aGraphic = ::Graphic( BitmapEx( aBitmap, aAlphaMask ) );
+		}
+		else if ( aBitmapEx.IsTransparent() )
+		{
+			if ( ( nAlphaTo == 0 ) || ( nAlphaTo == sal::static_int_cast<sal_Int8>(0xff) ) )
+			{
+				Bitmap aMask( aBitmapEx.GetMask() );
+				Bitmap aMask2( aBitmap.CreateMask( aColorFrom, nTolerance ) );
+				aMask.CombineSimple( aMask2, BMP_COMBINE_OR );
+				aBitmap.Replace( aColorFrom, aColorTo, nTolerance );
+				aGraphic = ::Graphic( BitmapEx( aBitmap, aMask ) );
+			}
+			else
+			{
+				AlphaMask aAlphaMask( aBitmapEx.GetMask() );
+				setAlpha( aBitmap, aAlphaMask, aColorFrom, nAlphaTo );
+				aBitmap.Replace( aColorFrom, aColorTo, nTolerance );
+				aGraphic = ::Graphic( BitmapEx( aBitmap, aAlphaMask ) );
+			}
+		}
+		else
+		{
+			if ( ( nAlphaTo == 0 ) || ( nAlphaTo == sal::static_int_cast<sal_Int8>(0xff) ) )
+			{
+				Bitmap aMask( aBitmap.CreateMask( aColorFrom, nTolerance ) );
+				aBitmap.Replace( aColorFrom, aColorTo, nTolerance );
+				aGraphic = ::Graphic( BitmapEx( aBitmap, aMask ) );
+			}
+			else
+			{
+				AlphaMask aAlphaMask( aBitmapEx.GetSizePixel() );
+				setAlpha( aBitmap, aAlphaMask, aColorFrom, nAlphaTo );
+				aBitmap.Replace( aColorFrom, aColorTo, nTolerance );
+				aGraphic = ::Graphic( BitmapEx( aBitmap, aAlphaMask ) );
+			}
+		}
+	}
+	::unographic::Graphic* pUnoGraphic = new ::unographic::Graphic();
+	pUnoGraphic->init( aGraphic );
+	uno::Reference< graphic::XGraphic > xRet( pUnoGraphic );
+	return xRet;
+}
+
+}
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ goodies/source/unographic/transformer.hxx	24 Sep 2007 15:52:22 -0000	1.1.2.1
@@ -0,0 +1,76 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+#ifndef _GOODIES_GRAPHICTRANSFORMER_HXX 
+#define _GOODIES_GRAPHICTRANSFORMER_HXX 
+
+#include <cppuhelper/implbase1.hxx> 
+
+#ifndef _COM_SUN_STAR_LANG_XSERVICEINFO_HPP_
+#include <com/sun/star/lang/XServiceInfo.hpp>
+#endif
+#ifndef _COM_SUN_STAR_GRAPHIC_XGRAPHICTRANSFORMER_HPP_
+#include <com/sun/star/graphic/XGraphicTransformer.hpp>
+#endif
+
+using namespace com::sun::star;
+
+namespace unographic {
+
+// ----------------------
+// - GraphicTransformer -
+// ----------------------
+
+typedef ::cppu::WeakAggImplHelper1<
+    ::com::sun::star::graphic::XGraphicTransformer
+	> GraphicTransformer_UnoImplHelper1;
+class GraphicTransformer : public GraphicTransformer_UnoImplHelper1
+{
+	public:
+
+	GraphicTransformer();
+	~GraphicTransformer();
+		
+	// XGraphicTransformer
+    virtual ::com::sun::star::uno::Reference< ::com::sun::star::graphic::XGraphic > SAL_CALL colorChange( 
+		const ::com::sun::star::uno::Reference< ::com::sun::star::graphic::XGraphic >& rGraphic,
+			sal_Int32 nColorFrom, sal_Int8 nTolerance, sal_Int32 nColorTo, sal_Int8 nAlphaTo )
+				throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
+	
+};
+
+}
+
+#endif 
