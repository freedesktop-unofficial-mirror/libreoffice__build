RCS file: /cvs/gsl/vcl/inc/bitmapex.hxx,v
retrieving revision 1.3
diff -u -r1.3 bitmapex.hxx
--- vcl/inc/bitmapex.hxx	7 Dec 2000 13:37:15 -0000	1.3
+++ vcl/inc/bitmapex.hxx	14 Nov 2002 16:25:46 -0000
@@ -145,6 +145,10 @@
 	void				SetEmpty();
 	void				Clear();
 
+        void                            SetCrop( const BitmapEx& rBitmapEx,
+						 Point &rCropOffset,
+						 const Size &rCropSize);
+
 	void				Draw( OutputDevice* pOutDev, 
 							  const Point& rDestPt ) const;
 	void				Draw( OutputDevice* pOutDev, 


RCS file: /cvs/gsl/vcl/source/gdi/bitmapex.cxx,v
retrieving revision 1.3
diff -u -r1.3 bitmapex.cxx
--- vcl/source/gdi/bitmapex.cxx	20 Mar 2001 10:03:56 -0000	1.3
+++ vcl/source/gdi/bitmapex.cxx	14 Nov 2002 16:25:50 -0000
@@ -104,6 +104,37 @@
 		bAlpha				( rBitmapEx.bAlpha )
 {
 }
+#include <stdio.h>
+void BitmapEx::SetCrop( const BitmapEx& rBitmapEx,
+			Point &rCropOffset,
+			const Size &rCropSize)
+{
+  if (rCropSize.Width () < rBitmapEx.aBitmapSize.Width () / 2 ||
+      rCropSize.Height () < rBitmapEx.aBitmapSize.Height () / 2) {
+    /* FIXME: also check total size ? */
+
+    const Bitmap srcPixels (rBitmapEx.GetBitmap());
+    const Bitmap srcMask (rBitmapEx.GetMask());
+    
+    aBitmap = Bitmap (rCropSize, srcPixels.GetBitCount()); // FIXME: pallette ?
+    aMask = Bitmap (rCropSize, srcMask.GetBitCount()); // FIXME: pallette ?
+
+    aBitmap.CopyPixel (Rectangle (Point (0,0), rCropSize),
+		       Rectangle (rCropOffset, rCropSize),
+		       &srcPixels);
+    aMask.CopyPixel (Rectangle (Point (0,0), rCropSize),
+		     Rectangle (rCropOffset, rCropSize),
+		     &srcMask);
+    rCropOffset = Point (0, 0);
+
+    aBitmapSize = aBitmap.GetSizePixel();
+    aTransparentColor = rBitmapEx.aTransparentColor;
+    eTransparent = rBitmapEx.eTransparent;
+    bAlpha = rBitmapEx.bAlpha;
+
+  } else
+	*this = rBitmapEx;
+}
 
 // ------------------------------------------------------------------
 

Index: vcl/source/gdi/outdev2.cxx
===================================================================
RCS file: /cvs/oo/gsl/vcl/source/gdi/outdev2.cxx,v
retrieving revision 1.5
diff -u -p -u -r1.5 outdev2.cxx
--- vcl/source/gdi/outdev2.cxx	27 Jul 2001 13:35:51 -0000	1.5
+++ vcl/source/gdi/outdev2.cxx	29 Apr 2003 15:49:37 -0000
@@ -712,7 +712,8 @@ void OutputDevice::DrawBitmapEx( const P
 {
 	DBG_TRACE( "OutputDevice::DrawBitmapEx()" );
 
-	if( TRANSPARENT_NONE == rBitmapEx.GetTransparentType() )
+	if( TRANSPARENT_NONE == rBitmapEx.GetTransparentType() &&
+	    rBitmapEx.GetBitCount() != 32)
 		DrawBitmap( rDestPt, rBitmapEx.GetBitmap() );
 	else
 	{
@@ -751,12 +752,14 @@ void OutputDevice::DrawBitmapEx( const P
 // ------------------------------------------------------------------
 
 void OutputDevice::ImplDrawBitmapEx( const Point& rDestPt, const Size& rDestSize,
-									 const Point& rSrcPtPixel, const Size& rSrcSizePixel,
-									 const BitmapEx& rBitmapEx, const ULONG nAction )
+				     const Point& rSrcPtPixelOld, const Size& rSrcSizePixel,
+				     const BitmapEx& rBitmapEx, const ULONG nAction )
 {
+	Point rSrcPtPixel (rSrcPtPixelOld);
 	DBG_CHKTHIS( OutputDevice, ImplDbgCheckOutputDevice );
 
-	BitmapEx aBmpEx( rBitmapEx );
+	BitmapEx aBmpEx;
+	aBmpEx.SetCrop( rBitmapEx, rSrcPtPixel, rSrcSizePixel );
 
 	if ( mnDrawMode & DRAWMODE_NOBITMAP )
 		return;
