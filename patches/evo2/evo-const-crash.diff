--- connectivity/source/drivers/evoab2/NStatement.cxx.bakj	2005-08-16 18:07:32.000000000 +0530
+++ connectivity/source/drivers/evoab2/NStatement.cxx	2005-08-16 21:41:40.000000000 +0530
@@ -221,8 +221,7 @@
 EBookQuery *
 OStatement_Base::createTrue()
 { // Not the world's most efficient unconditional true but ...
-//FIXME: make enum hack to make it gud integer (E_CONTACT_FULL_NAME);
-return  e_book_query_field_exists (3);
+	return e_book_query_from_string("(exists \"full_name\")");
 }
 
 EBookQuery *
--- connectivity/source/drivers/evoab2/NResultSet.cxx.bakj	2005-08-16 21:24:53.000000000 +0530
+++ connectivity/source/drivers/evoab2/NResultSet.cxx	2005-08-17 18:29:50.000000000 +0530
@@ -347,23 +347,29 @@
 		case HOME_CITY:
 		case HOME_STATE:
 		case HOME_COUNTRY:
-		case HOME_ZIP:
-			bIsEVO_2_2 ? fieldEnum=89:fieldEnum=88/*E_CONTACT_ADDRESS_HOME*/;break; 
+		case HOME_ZIP: 
+			fieldEnum = e_contact_field_id("address_home");
+			break;
+
 		case WORK_ADDR_LINE1:
 		case WORK_ADDR_LINE2:
 		case WORK_CITY:
 		case WORK_STATE:
 		case WORK_COUNTRY:
 		case WORK_ZIP: 
-			bIsEVO_2_2 ? fieldEnum = 90:fieldEnum=89/*E_CONTACT_ADDRESS_WORK*/;break;
+			fieldEnum = e_contact_field_id("address_work");
+			break;
+
 		case OTHER_ADDR_LINE1:
 		case OTHER_ADDR_LINE2:
 		case OTHER_CITY:
 		case OTHER_STATE:
 		case OTHER_COUNTRY:
-		case OTHER_ZIP:
-			bIsEVO_2_2 ? fieldEnum=91:fieldEnum= 90/*E_	CONTACT_ADDRESS_OTHER*/; break;
-    	default: fieldEnum=89;        
+		case OTHER_ZIP: 
+			fieldEnum = e_contact_field_id("address_other");
+			break;
+
+	    	default: fieldEnum = e_contact_field_id("address_home");
 	  }
 	return fieldEnum;
 }
--- connectivity/source/drivers/evoab2/EApi.h.bakj	2005-08-16 21:22:38.000000000 +0530
+++ connectivity/source/drivers/evoab2/EApi.h	2005-08-17 19:04:14.000000000 +0530
@@ -84,7 +84,6 @@
 #endif
 
 
-EAPI_EXTERN bool bIsEVO_2_2;
 typedef void EContact;
 #define E_CONTACT(a) ((EContact *)(a))
 #define E_TYPE_CONTACT (e_contact_get_type())
@@ -158,6 +157,7 @@
 EAPI_EXTERN EBookQuery* (*e_book_query_not)          (EBookQuery *q, gboolean unref);
 EAPI_EXTERN void        (*e_book_query_unref)        (EBookQuery *q);
 EAPI_EXTERN char*       (*e_book_query_to_string)    (EBookQuery *q);
+EAPI_EXTERN EBookQuery* (*e_book_query_from_string)   (const char *query_string);
 
 typedef struct {
         char *address_format; /* the two letter country code that
--- connectivity/source/drivers/evoab2/EApi.cxx.bakj	2005-08-16 18:14:53.000000000 +0530
+++ connectivity/source/drivers/evoab2/EApi.cxx	2005-08-19 14:50:11.000000000 +0530
@@ -68,7 +68,8 @@
 #endif
 static char *eBookLibNames[] = {
 	"libebook.so.8",	// evolution-2.0
-	"libebook-1.2.so.3"	// evolution-2.2
+	"libebook-1.2.so.3",	// evolution-2.2
+	"libebook-1.2.so.5"	// evolution-2.4
 	// FIXME: ask JPR about ABI compatibility going forwards
 	// "libebook-1.3.so.0",
 	// "libebook-1.4.so.0",
@@ -102,6 +103,7 @@
 	SYM_MAP( e_book_query_or ),
 	SYM_MAP( e_book_query_not ),
 	SYM_MAP( e_book_query_unref ),
+	SYM_MAP( e_book_query_from_string ),
 	SYM_MAP( e_book_query_to_string ),
 	SYM_MAP( e_book_query_field_exists ),
 	SYM_MAP( e_source_group_peek_base_uri)
@@ -139,8 +141,7 @@
 	if( aModule)
 	{
 	    if ( tryLink( aModule, eBookLibNames[ j ] ) ) {
-		if (j==1) bIsEVO_2_2 = true;
 		return true;
 		}
 	    osl_unloadModule( aModule );

--- connectivity/source/drivers/evoab2/NDatabaseMetaData.hxx.bakj	2005-08-16 17:59:59.000000000 +0530
+++ connectivity/source/drivers/evoab2/NDatabaseMetaData.hxx	2005-08-16 19:46:37.000000000 +0530
@@ -111,10 +111,10 @@
 			};
 
 		const ColumnProperty *getField(guint n);
-		guint            getFieldCount() G_GNUC_CONST;
-		sal_Int32	 getFieldType(sal_Int32 nCol) G_GNUC_CONST;
-		rtl::OUString	 getFieldTypeName(sal_Int32 nCol) G_GNUC_CONST;
-		rtl::OUString    getFieldName(sal_Int32 nCol) G_GNUC_CONST;
+		guint            getFieldCount() ;
+		sal_Int32	 getFieldType(sal_Int32 nCol) ;
+		rtl::OUString	 getFieldTypeName(sal_Int32 nCol) ;
+		rtl::OUString    getFieldName(sal_Int32 nCol) ;
 
 		void free_column_resources();
 		class OEvoabDatabaseMetaData : public ODatabaseMetaDataBase
