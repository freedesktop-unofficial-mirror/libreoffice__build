--- connectivity/source/drivers/evoab2/NConnection.hxx.bakj	2005-08-16 18:03:51.000000000 +0530
+++ connectivity/source/drivers/evoab2/NConnection.hxx	2005-08-16 18:04:24.000000000 +0530
@@ -143,7 +143,7 @@
 			inline const OEvoabDriver*	getDriver()				const { return static_cast< const OEvoabDriver* >( m_pDriver );			}
 			
 			SDBCAddress::sdbc_address_type getSDBCAddressType() const { return m_eSDBCAddressType;}
-			SDBCAddress::sdbc_address_type setSDBCAddressType(SDBCAddress::sdbc_address_type _eSDBCAddressType) {m_eSDBCAddressType = _eSDBCAddressType;}
+			void setSDBCAddressType(SDBCAddress::sdbc_address_type _eSDBCAddressType) {m_eSDBCAddressType = _eSDBCAddressType;}
 						
 			// OComponentHelper
 			virtual void SAL_CALL disposing(void);
--- connectivity/source/drivers/evoab2/NDatabaseMetaData.hxx.bakj	2005-08-16 17:59:59.000000000 +0530
+++ connectivity/source/drivers/evoab2/NDatabaseMetaData.hxx	2005-08-16 19:46:37.000000000 +0530
@@ -111,10 +111,10 @@
 			};
 
 		const ColumnProperty *getField(guint n);
-		guint            getFieldCount() G_GNUC_CONST;
-		sal_Int32	 getFieldType(sal_Int32 nCol) G_GNUC_CONST;
-		rtl::OUString	 getFieldTypeName(sal_Int32 nCol) G_GNUC_CONST;
-		rtl::OUString    getFieldName(sal_Int32 nCol) G_GNUC_CONST;
+		guint            getFieldCount() ;
+		sal_Int32	 getFieldType(sal_Int32 nCol) ;
+		rtl::OUString	 getFieldTypeName(sal_Int32 nCol) ;
+		rtl::OUString    getFieldName(sal_Int32 nCol) ;
 
 		void free_column_resources();
 		class OEvoabDatabaseMetaData : public ODatabaseMetaDataBase
--- connectivity/source/drivers/evoab2/EApi.h.bakj	2005-08-16 21:22:38.000000000 +0530
+++ connectivity/source/drivers/evoab2/EApi.h	2005-08-16 18:14:04.000000000 +0530
@@ -158,6 +158,7 @@
 EAPI_EXTERN EBookQuery* (*e_book_query_not)          (EBookQuery *q, gboolean unref);
 EAPI_EXTERN void        (*e_book_query_unref)        (EBookQuery *q);
 EAPI_EXTERN char*       (*e_book_query_to_string)    (EBookQuery *q);
+EAPI_EXTERN EBookQuery* (*e_book_query_from_string)   (const char *query_string);
 
 typedef struct {
         char *address_format; /* the two letter country code that
--- connectivity/source/drivers/evoab2/EApi.cxx.bakj	2005-08-16 18:14:53.000000000 +0530
+++ connectivity/source/drivers/evoab2/EApi.cxx	2005-08-16 19:47:00.000000000 +0530
@@ -102,6 +102,7 @@
 	SYM_MAP( e_book_query_or ),
 	SYM_MAP( e_book_query_not ),
 	SYM_MAP( e_book_query_unref ),
+	SYM_MAP( e_book_query_from_string ),
 	SYM_MAP( e_book_query_to_string ),
 	SYM_MAP( e_book_query_field_exists ),
 	SYM_MAP( e_source_group_peek_base_uri)
--- connectivity/source/drivers/evoab2/NResultSet.cxx.bakj	2005-08-16 21:24:53.000000000 +0530
+++ connectivity/source/drivers/evoab2/NResultSet.cxx	2005-08-16 21:24:18.000000000 +0530
@@ -348,22 +348,22 @@
 		case HOME_STATE:
 		case HOME_COUNTRY:
 		case HOME_ZIP:
-			bIsEVO_2_2 ? fieldEnum=89:fieldEnum=88/*E_CONTACT_ADDRESS_HOME*/;break; 
+			bIsEVO_2_2 ? fieldEnum=90:fieldEnum=88/*E_CONTACT_ADDRESS_HOME*/;break; 
 		case WORK_ADDR_LINE1:
 		case WORK_ADDR_LINE2:
 		case WORK_CITY:
 		case WORK_STATE:
 		case WORK_COUNTRY:
 		case WORK_ZIP: 
-			bIsEVO_2_2 ? fieldEnum = 90:fieldEnum=89/*E_CONTACT_ADDRESS_WORK*/;break;
+			bIsEVO_2_2 ? fieldEnum = 91:fieldEnum=89/*E_CONTACT_ADDRESS_WORK*/;break;
 		case OTHER_ADDR_LINE1:
 		case OTHER_ADDR_LINE2:
 		case OTHER_CITY:
 		case OTHER_STATE:
 		case OTHER_COUNTRY:
 		case OTHER_ZIP:
-			bIsEVO_2_2 ? fieldEnum=91:fieldEnum= 90/*E_	CONTACT_ADDRESS_OTHER*/; break;
-    	default: fieldEnum=89;        
+			bIsEVO_2_2 ? fieldEnum=92:fieldEnum= 90/*E_	CONTACT_ADDRESS_OTHER*/; break;
+    	default: bIsEVO_2_2 ? fieldEnum=90: fieldEnum=88;        
 	  }
 	return fieldEnum;
 }
--- connectivity/source/drivers/evoab2/NStatement.cxx.bakj	2005-08-16 18:07:32.000000000 +0530
+++ connectivity/source/drivers/evoab2/NStatement.cxx	2005-08-16 21:41:40.000000000 +0530
@@ -221,8 +221,7 @@
 EBookQuery *
 OStatement_Base::createTrue()
 { // Not the world's most efficient unconditional true but ...
-//FIXME: make enum hack to make it gud integer (E_CONTACT_FULL_NAME);
-return  e_book_query_field_exists (3);
+	return e_book_query_from_string("(exists \"full_name\")");
 }
 
 EBookQuery *
