--- /dev/null	
+++ vcl/unx/gtk/a11y/atkfactory.cxx	
@@ -0,0 +1,59 @@
+#include <plugins/gtk/atkfactory.hxx>
+#include "atkwrapper.hxx"
+
+extern "C" {
+
+static GType
+wrapper_factory_get_accessible_type(void)
+{
+  return atk_object_wrapper_get_type();
+}
+
+static AtkObject*
+wrapper_factory_create_accessible( GObject *pObj )
+{
+	g_warning ("wrapper_factory_create_accessible...");
+	return NULL;
+}
+
+static void
+wrapper_factory_class_init( AtkObjectFactoryClass *klass )
+{
+  klass->create_accessible   = wrapper_factory_create_accessible;
+  klass->get_accessible_type = wrapper_factory_get_accessible_type;
+}
+
+static GType
+wrapper_factory_get_type (void)
+{
+  static GType t = 0;
+
+  if (!t) {
+    static const GTypeInfo tinfo =
+    {
+      sizeof (AtkObjectFactoryClass),
+      NULL, NULL, (GClassInitFunc) wrapper_factory_class_init,
+      NULL, NULL, sizeof (AtkObjectFactory), 0, NULL, NULL
+    };
+
+    t = g_type_register_static (
+	    ATK_TYPE_OBJECT_FACTORY, "OOoAtkObjectWrapperFactory",
+		&tinfo, (GTypeFlags) 0);
+  }										
+										
+  return t;									
+}
+
+}; // extern C
+
+void RegisterAtkFactory( GType nWindowType )
+{
+	AtkRegistry *pReg = atk_get_default_registry();
+	if( pReg )
+	{
+		g_warning( "Registering factory" );
+		atk_registry_set_factory_type
+			( pReg, nWindowType,
+			  wrapper_factory_get_type() );
+	}
+}
