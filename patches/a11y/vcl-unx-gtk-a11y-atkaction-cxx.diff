--- /dev/null	
+++ vcl/unx/gtk/a11y/atkaction.cxx	
@@ -0,0 +1,102 @@
+#include <com/sun/star/accessibility/XAccessibleKeyBinding.hpp>
+
+static uno::Reference< accessibility::XAccessibleAction >
+	getAction( AtkAction *pAction )
+{
+	AtkObjectWrapper *pWrap = ATK_OBJECT_WRAPPER( pAction );
+	uno::Reference< accessibility::XAccessibleAction > xAction;
+	xAction = uno::Reference< accessibility::XAccessibleAction >(
+		pWrap->mpContext, uno::UNO_QUERY );
+	if( !xAction.is() )
+		g_error( "%p claimed to have action, but now does not",
+				 pWrap->mpContext );
+	return xAction;
+}
+
+static G_CONST_RETURN gchar *
+makeConstString( AtkAction *pAction, rtl::OUString aString )
+{
+	AtkObjectWrapper *pWrap = ATK_OBJECT_WRAPPER( pAction );
+	*(pWrap->pConstCache) = rtl::OUStringToOString( aString, RTL_TEXTENCODING_UTF8 );
+	return (const sal_Char *) *(pWrap->pConstCache);
+}
+
+static gboolean
+action_wrapper_do_action (AtkAction *action,
+						  gint       i)
+{
+	TRY_START
+	return getAction( action )->doAccessibleAction( i );
+	TRY_END_RETURN( FALSE )
+}
+
+static gint
+action_wrapper_get_n_actions (AtkAction *action)
+{
+	TRY_START
+	gint nActions = getAction( action )->getAccessibleActionCount();
+	fprintf( stderr, "GetnActions returns %d", nActions );
+	return nActions;
+	TRY_END_RETURN( 0 )
+}
+
+static G_CONST_RETURN gchar *
+action_wrapper_get_description (AtkAction *action,
+								gint       i)
+{
+	TRY_START
+// FIXME - at least two of these are wrong
+	return makeConstString( action, getAction( action )->getAccessibleActionDescription( i ) );
+	TRY_END_RETURN( "" )
+}
+
+static G_CONST_RETURN gchar *
+action_wrapper_get_localized_name (AtkAction *action,
+								   gint       i)
+{
+	TRY_START
+// FIXME - at least two of these are wrong
+	return makeConstString( action, getAction( action )->getAccessibleActionDescription( i ) );
+	TRY_END_RETURN( "" )
+}
+
+static G_CONST_RETURN gchar *
+action_wrapper_get_name (AtkAction *action,
+						 gint       i)
+{
+	TRY_START
+// FIXME - at least two of these are wrong
+	return makeConstString( action, getAction( action )->getAccessibleActionDescription( i ) );
+	TRY_END_RETURN( "" )
+}
+
+static G_CONST_RETURN gchar *
+action_wrapper_get_keybinding (AtkAction *action,
+							   gint       i)
+{
+//	uno::Reference< accessibility::XAccessibleKeyBinding > xBinding;
+//	xBinding = getAction( action )->getAccessibleActionKeyBinding( i );
+	g_warning( "FIXME: AtkAction::get_keybinding unimplemented" );
+	return "";
+}
+
+static gboolean
+action_wrapper_set_description (AtkAction   *action,
+								gint         i,
+								const gchar *desc)
+{
+	return FALSE;
+}
+
+static void
+actionIfaceInit (AtkActionIface *iface)
+{
+  g_return_if_fail (iface != NULL);
+
+  iface->do_action = action_wrapper_do_action;
+  iface->get_n_actions = action_wrapper_get_n_actions;
+  iface->get_description = action_wrapper_get_description;
+  iface->get_keybinding = action_wrapper_get_keybinding;
+  iface->get_name = action_wrapper_get_name;
+  iface->set_description = action_wrapper_set_description;
+}
