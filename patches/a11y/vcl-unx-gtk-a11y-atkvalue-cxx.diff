--- /dev/null	
+++ vcl/unx/gtk/a11y/atkvalue.cxx	
@@ -0,0 +1,69 @@
+static uno::Reference< accessibility::XAccessibleValue >
+	getValue( AtkValue *pValue )
+{
+	AtkObjectWrapper *pWrap = ATK_OBJECT_WRAPPER( pValue );
+	return uno::Reference< accessibility::XAccessibleValue >(
+		pWrap->mpContext, uno::UNO_QUERY );
+}
+
+static void anyToGValue( uno::Any aAny, GValue *pValue )
+{
+	// FIXME: expand to lots of types etc.
+	double aDouble;
+	aAny >>= aDouble;
+
+	memset( pValue,  0, sizeof( GValue ) );
+	g_value_init( pValue, G_TYPE_DOUBLE );
+	g_value_set_double( pValue, aDouble );
+}
+
+static void
+value_wrapper_get_current_value( AtkValue *pObj,
+								 GValue   *pValue )
+{
+	TRY_START
+	anyToGValue( getValue( pObj )->getCurrentValue(), pValue );;
+	TRY_END
+}
+
+static void
+value_wrapper_get_maximum_value( AtkValue *pObj,
+								 GValue   *pValue )
+{
+	TRY_START
+	anyToGValue( getValue( pObj )->getMaximumValue(), pValue );
+	TRY_END
+}
+
+static void
+value_wrapper_get_minimum_value( AtkValue *pObj,
+								 GValue   *pValue )
+{
+	TRY_START
+	anyToGValue( getValue( pObj )->getMinimumValue(), pValue );
+	TRY_END
+}
+
+static gboolean
+value_wrapper_set_current_value( AtkValue     *pObj,
+								 const GValue *pValue )
+{
+	TRY_START
+	// FIXME - this needs expanding
+	double aDouble = g_value_get_double( pValue );
+	uno::Any aAny;
+	aAny <<= aDouble;
+	return getValue( pObj )->setCurrentValue( aAny );
+	TRY_END_RETURN( 0 )
+}
+
+static void
+valueIfaceInit (AtkValueIface *iface)
+{
+  g_return_if_fail (iface != NULL);
+
+  iface->get_current_value = value_wrapper_get_current_value;
+  iface->get_maximum_value = value_wrapper_get_maximum_value;
+  iface->get_minimum_value = value_wrapper_get_minimum_value;
+  iface->set_current_value = value_wrapper_set_current_value;
+}
