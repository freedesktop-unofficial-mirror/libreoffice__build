--- neon/neon.patch.orig	2004-06-08 20:32:52.000000000 +0200
+++ neon/neon.patch	2004-06-08 20:33:00.369904697 +0200
@@ -438,3 +438,88 @@
       /* RFC850/1036 style dates: Sunday, 06-Nov-94 08:49:37 GMT */
       n = sscanf(date, RFC1036_FORMAT,
   		wkday, &gmt.tm_mday, mon, &gmt.tm_year,
+*** misc/neon-0.23.5/src/ne_session.c	2002-09-17 22:08:01.000000000 +0200
+--- misc/build/neon-0.23.5/src/ne_session.c	2004-06-08 19:21:04.683116987 +0200
+***************
+*** 33,38 ****
+--- 33,40 ----
+  #include <errno.h>
+  #endif
+  
++ #include <ctype.h> /* for cleanse() */
++ 
+  #ifdef NEON_SSL
+  #include <openssl/ssl.h>
+  #include <openssl/err.h>
+***************
+*** 242,250 ****
+      uri->scheme = ne_strdup(sess->scheme);
+  }
+  
+  const char *ne_get_error(ne_session *sess)
+  {
+!     return sess->error;
+  }
+  
+  void ne_close_connection(ne_session *sess)
+--- 244,263 ----
+      uri->scheme = ne_strdup(sess->scheme);
+  }
+  
++ /* Cleanse 'str' of non-printable characters.  Duplicated in
++  * ne_utils.c for the duration of neon 0.23.x to prevent ABI
++  * change. */
++ static char *cleanse(char *str)
++ {
++     char *pnt;
++     for (pnt = str; *pnt; pnt++)
++         if (iscntrl(*pnt) || !isprint(*pnt)) *pnt = ' ';
++     return str;
++ }
++ 
+  const char *ne_get_error(ne_session *sess)
+  {
+!     return cleanse(sess->error);
+  }
+  
+  void ne_close_connection(ne_session *sess)
+diff -cr misc/neon-0.23.5/src/ne_utils.c misc/build/neon-0.23.5/src/ne_utils.c
+*** misc/neon-0.23.5/src/ne_utils.c	2002-07-18 00:19:46.000000000 +0200
+--- misc/build/neon-0.23.5/src/ne_utils.c	2004-06-08 19:21:04.684116818 +0200
+***************
+*** 129,134 ****
+--- 129,145 ----
+  #endif
+  }
+  
++ /* Cleanse 'str' of non-printable characters.  Duplicated in
++  * ne_session.c for the duration of neon 0.23.x to prevent ABI
++  * change. */
++ static char *cleanse(char *str)
++ {
++     char *pnt;
++     for (pnt = str; *pnt; pnt++)
++         if (iscntrl(*pnt) || !isprint(*pnt)) *pnt = ' ';
++     return str;
++ }
++ 
+  int ne_parse_statusline(const char *status_line, ne_status *st)
+  {
+      const char *part;
+***************
+*** 177,183 ****
+      /* Fill in the results */
+      st->major_version = major;
+      st->minor_version = minor;
+!     st->reason_phrase = ne_strdup(part);
+      st->code = status_code;
+      st->klass = klass;
+      return 0;
+--- 188,194 ----
+      /* Fill in the results */
+      st->major_version = major;
+      st->minor_version = minor;
+!     st->reason_phrase = cleanse(ne_strdup(part));
+      st->code = status_code;
+      st->klass = klass;
+      return 0;
