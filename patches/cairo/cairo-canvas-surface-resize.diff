Index: canvas/source/cairo/cairo_cairo.cxx
===================================================================
diff -u -p -r1.1.2.1 cairo_cairo.cxx
--- canvas/source/cairo/cairo_cairo.cxx	19 Dec 2005 22:28:28 -0000	1.1.2.1
+++ canvas/source/cairo/cairo_cairo.cxx	19 Dec 2005 22:29:05 -0000
@@ -74,4 +74,10 @@ namespace cairo
 		} else
 			return new Surface( mpSysData, mpDisplay, 0, NULL, cairo_surface_create_similar( mpSurface, aContent, width, height ) );
 	}
+
+	void
+	Surface::Resize( int width, int height )
+	{
+		cairo_xlib_surface_set_size( mpSurface, width, height );
+	}
 }
Index: canvas/source/cairo/cairo_cairo.hxx
===================================================================
diff -u -p -r1.1.2.3 cairo_cairo.hxx
--- canvas/source/cairo/cairo_cairo.hxx	14 Dec 2005 15:38:04 -0000	1.1.2.3
+++ canvas/source/cairo/cairo_cairo.hxx	19 Dec 2005 22:29:05 -0000
@@ -76,6 +76,9 @@ namespace cairo {
 		{
 			return mpRenderFormat;
 		}
+
+		// use only for surfaces made on X Drawables
+		void Resize( int width, int height );
 	};
 }
 
Index: cairo_devicehelper.cxx
===================================================================
diff -u -p -r1.1.2.3 cairo_devicehelper.cxx
--- canvas/source/cairo/cairo_devicehelper.cxx	14 Dec 2005 15:38:05 -0000	1.1.2.3
+++ canvas/source/cairo/cairo_devicehelper.cxx	19 Dec 2005 22:29:05 -0000
@@ -310,34 +310,39 @@ namespace cairocanvas
     {
 		OSL_TRACE("set device size %d x %d", rSize.getX(), rSize.getY() );
 
-        maSize = rSize;
-
 		if( mpWindowSurface )
 		{
-			mpWindowSurface->Unref();
-		}
-		mpWindowSurface = new Surface( mpSysData,
-									   mpOutputWindow->GetOutOffXPixel(), mpOutputWindow->GetOutOffYPixel(),
-									   maSize.getX(), maSize.getY() );
+			mpWindowSurface->Resize( rSize.getX() + mpOutputWindow->GetOutOffXPixel(), rSize.getY() + mpOutputWindow->GetOutOffYPixel() );
+		} else
+			mpWindowSurface = new Surface( mpSysData,
+										   mpOutputWindow->GetOutOffXPixel(), mpOutputWindow->GetOutOffYPixel(),
+										   rSize.getX(), rSize.getY() );
 
-		if( mpBufferSurface )
+		if( mpBufferSurface && maSize != rSize )
 		{
 				mpBufferSurface->Unref();
+				mpBufferSurface = NULL;
 		}
-		mpBufferSurface = mpWindowSurface->getSimilar( CAIRO_CONTENT_COLOR, maSize.getX(), maSize.getY() );
+		if( !mpBufferSurface )
+			mpBufferSurface = mpWindowSurface->getSimilar( CAIRO_CONTENT_COLOR, rSize.getX(), rSize.getY() );
 
-		if( mpBufferCairo )
+		if( mpBufferCairo && maSize != rSize )
 		{
 			cairo_destroy( mpBufferCairo );
+			mpBufferCairo = NULL;
 		}
-		mpBufferCairo = mpBufferSurface->getCairo();
+		if( !mpBufferCairo )
+			mpBufferCairo = mpBufferSurface->getCairo();
+
+		if( maSize != rSize )
+			maSize = rSize;
 
 		mpSpriteCanvas->setSizePixel( maSize );
     }
 
     const ::basegfx::B2ISize& DeviceHelper::getSizePixel()
     {
-	return maSize;
+		return maSize;
     }
 
     void DeviceHelper::notifySizeUpdate( const awt::Rectangle& rBounds )
