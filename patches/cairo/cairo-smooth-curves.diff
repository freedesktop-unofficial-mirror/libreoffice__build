--- svx/source/svdraw/svdopath.cxx	2004-11-03 12:01:41 +01:00
+++ svx/source/svdraw/svdopath.cxx	2005-09-12 10:46:03 +02:00
@@ -354,108 +354,97 @@ void SdrPathObj::RecalcBoundRect()
 
 sal_Bool SdrPathObj::DoPaintObject(XOutputDevice& rXOut, const SdrPaintInfoRec& rInfoRec) const
 {
-	// #110094#-16 Moved to ViewContactOfSdrObj::ShouldPaintObject(..)
-	//// Hidden objects on masterpages, draw nothing
-	//if((rInfoRec.nPaintMode & SDRPAINTMODE_MASTERPAGE) && bNotVisibleAsMaster)
-	//	return TRUE; 
-
-	BOOL bHideContour(IsHideContour());
-	BOOL bIsFillDraft(0 != (rInfoRec.nPaintMode & SDRPAINTMODE_DRAFTFILL));
-	BOOL bIsLineDraft(0 != (rInfoRec.nPaintMode & SDRPAINTMODE_DRAFTLINE));
-
-	// prepare ItemSet of this object
-	const SfxItemSet& rSet = GetObjectItemSet();
-
-	// perepare ItemSet to avoid old XOut line drawing
-	SfxItemSet aEmptySet(*rSet.GetPool());
-	aEmptySet.Put(XLineStyleItem(XLINE_NONE));
-	aEmptySet.Put(XFillStyleItem(XFILL_NONE));
+    // #110094#-16 Moved to ViewContactOfSdrObj::ShouldPaintObject(..)
+    //// Hidden objects on masterpages, draw nothing
+    //if((rInfoRec.nPaintMode & SDRPAINTMODE_MASTERPAGE) && bNotVisibleAsMaster)
+    //	return TRUE; 
+
+    BOOL bHideContour(IsHideContour());
+    BOOL bIsFillDraft(0 != (rInfoRec.nPaintMode & SDRPAINTMODE_DRAFTFILL));
+    BOOL bIsLineDraft(0 != (rInfoRec.nPaintMode & SDRPAINTMODE_DRAFTLINE));
+
+    // prepare ItemSet of this object
+    const SfxItemSet& rSet = GetObjectItemSet();
+
+    // perepare ItemSet to avoid old XOut line drawing
+    SfxItemSet aEmptySet(*rSet.GetPool());
+    aEmptySet.Put(XLineStyleItem(XLINE_NONE));
+    aEmptySet.Put(XFillStyleItem(XFILL_NONE));
 
-	// #b4899532# if not filled but fill draft, avoid object being invisible in using
-	// a hair linestyle and COL_LIGHTGRAY
+    // #b4899532# if not filled but fill draft, avoid object being invisible in using
+    // a hair linestyle and COL_LIGHTGRAY
     SfxItemSet aItemSet(rSet);
-	if(bIsFillDraft && XLINE_NONE == ((const XLineStyleItem&)(rSet.Get(XATTR_LINESTYLE))).GetValue())
-	{
-		ImpPrepareLocalItemSetForDraftLine(aItemSet);
-	}
+    if(bIsFillDraft && XLINE_NONE == ((const XLineStyleItem&)(rSet.Get(XATTR_LINESTYLE))).GetValue()) {
+	ImpPrepareLocalItemSetForDraftLine(aItemSet);
+    }
 
-	// #103692# prepare ItemSet for shadow fill attributes
+    // #103692# prepare ItemSet for shadow fill attributes
     SfxItemSet aShadowSet(aItemSet);
 
-	// prepare line geometry
-	::std::auto_ptr< SdrLineGeometry > pLineGeometry( ImpPrepareLineGeometry(rXOut, aItemSet, bIsLineDraft) );
+    // Shadows
+    if (!bHideContour && ImpSetShadowAttributes(aItemSet, aShadowSet)) {
+	if( !IsClosed() || bIsFillDraft )
+	    rXOut.SetFillAttr(aEmptySet);
+	else
+	    rXOut.SetFillAttr(aShadowSet);
+
+	UINT32 nXDist=((SdrShadowXDistItem&)(aItemSet.Get(SDRATTR_SHADOWXDIST))).GetValue();
+	UINT32 nYDist=((SdrShadowYDistItem&)(aItemSet.Get(SDRATTR_SHADOWYDIST))).GetValue();
+	XPolyPolygon aTmpXPoly(aPathPolygon);
+	aTmpXPoly.Move(nXDist,nYDist);
 
-	// Shadows
-	if (!bHideContour && ImpSetShadowAttributes(aItemSet, aShadowSet))
-	{
-        if( !IsClosed() || bIsFillDraft )
-            rXOut.SetFillAttr(aEmptySet);
-        else
-            rXOut.SetFillAttr(aShadowSet);
-
-		UINT32 nXDist=((SdrShadowXDistItem&)(aItemSet.Get(SDRATTR_SHADOWXDIST))).GetValue();
-		UINT32 nYDist=((SdrShadowYDistItem&)(aItemSet.Get(SDRATTR_SHADOWYDIST))).GetValue();
-		XPolyPolygon aTmpXPoly(aPathPolygon);
-		aTmpXPoly.Move(nXDist,nYDist);
-
-		// avoid shadow line drawing in XOut
-		rXOut.SetLineAttr(aEmptySet);
+	// avoid shadow line drawing in XOut
+	rXOut.SetLineAttr(aEmptySet);
 		
-        if (!IsClosed()) {
-            USHORT nPolyAnz=aTmpXPoly.Count();
-            for (USHORT nPolyNum=0; nPolyNum<nPolyAnz; nPolyNum++) {
-                rXOut.DrawXPolyLine(aTmpXPoly.GetObject(nPolyNum));
-            }
-        } else {
-            // #100127# Output original geometry for metafiles
-            ImpGraphicFill aFill( *this, rXOut, aShadowSet, true );
+	if (!IsClosed()) {
+	    USHORT nPolyAnz=aTmpXPoly.Count();
+	    for (USHORT nPolyNum=0; nPolyNum<nPolyAnz; nPolyNum++) {
+		rXOut.DrawXPolyLine(aTmpXPoly.GetObject(nPolyNum));
+	    }
+	} else {
+	    // #100127# Output original geometry for metafiles
+	    ImpGraphicFill aFill( *this, rXOut, aShadowSet, true );
             
-            rXOut.DrawXPolyPolygon(aTmpXPoly);
-        }
-
-		// new shadow line drawing
-		if( pLineGeometry.get() )
-		{
-			// draw the line geometry
-			ImpDrawShadowLineGeometry(rXOut, aItemSet, *pLineGeometry);
-		}
+	    rXOut.DrawXPolyPolygon(aTmpXPoly);
 	}
+
+	// new shadow line drawing
+	rXOut.SetLineAttr( aItemSet );
+	rXOut.SetFillAttr( aEmptySet );
+	rXOut.DrawXPolyPolygon(aPathPolygon);
+    }
 	
-	// Before here the LineAttr were set: if(pLineAttr) rXOut.SetLineAttr(*pLineAttr);
-	// avoid line drawing in XOut
-	rXOut.SetLineAttr(aEmptySet);
+    // Before here the LineAttr were set: if(pLineAttr) rXOut.SetLineAttr(*pLineAttr);
+    // avoid line drawing in XOut
+    rXOut.SetLineAttr(aEmptySet);
 
     rXOut.SetFillAttr( bIsFillDraft || !IsClosed() ? aEmptySet : aItemSet );
 
-	if( !bHideContour )
-    {
-        if( IsClosed() )
-        {
-            // #100127# Output original geometry for metafiles
-            ImpGraphicFill aFill( *this, rXOut, bIsFillDraft || !IsClosed() ? aEmptySet : aItemSet );
-
-            rXOut.DrawXPolyPolygon(aPathPolygon);
-        }
-
-        // Own line drawing
-        if( pLineGeometry.get() )
-        {
-            // draw the line geometry
-            ImpDrawColorLineGeometry(rXOut, aItemSet, *pLineGeometry);
-        }
-    }
+    if( !bHideContour ) {
 
-	sal_Bool bOk(sal_True);
-	if (HasText()) {
-		bOk = SdrTextObj::DoPaintObject(rXOut,rInfoRec);
+	if( IsClosed() ) {
+	    // #100127# Output original geometry for metafiles
+	    ImpGraphicFill aFill( *this, rXOut, bIsFillDraft || !IsClosed() ? aEmptySet : aItemSet );
+		
+	    rXOut.DrawXPolyPolygon(aPathPolygon);
 	}
 
-	// #110094#-13
-	//if (bOk && (rInfoRec.nPaintMode & SDRPAINTMODE_GLUEPOINTS) !=0) {
-	//	bOk=PaintGluePoints(rXOut,rInfoRec);
-	//}
+	rXOut.SetLineAttr( aItemSet );
+	rXOut.SetFillAttr( aEmptySet );
+	rXOut.DrawXPolyPolygon(aPathPolygon);
+    }
+
+    sal_Bool bOk(sal_True);
+    if (HasText()) {
+	bOk = SdrTextObj::DoPaintObject(rXOut,rInfoRec);
+    }
+
+    // #110094#-13
+    //if (bOk && (rInfoRec.nPaintMode & SDRPAINTMODE_GLUEPOINTS) !=0) {
+    //	bOk=PaintGluePoints(rXOut,rInfoRec);
+    //}
 
-	return bOk;
+    return bOk;
 }
 
 SdrObject* SdrPathObj::CheckHit(const Point& rPnt, USHORT nTol, const SetOfByte* pVisiLayer) const
--- svx/source/xoutdev/xline.cxx	2004-11-03 12:09:38 +01:00
+++ svx/source/xoutdev/xline.cxx	2005-09-12 10:40:25 +02:00
@@ -389,14 +389,14 @@ Polygon XOutCreatePolygon(const XPolygon
 
 	if(rXPoly.GetPointCount())
 	{
-		::basegfx::B2DPolygon aB2DPolygon(rXPoly.getB2DPolygon());
+	        //::basegfx::B2DPolygon aB2DPolygon(rXPoly.getB2DPolygon());
 
-		if(aB2DPolygon.areControlPointsUsed())
-		{
-			aB2DPolygon = ::basegfx::tools::adaptiveSubdivideByAngle(aB2DPolygon);
-		}
+		//if(aB2DPolygon.areControlPointsUsed())
+		//{
+		//	aB2DPolygon = ::basegfx::tools::adaptiveSubdivideByAngle(aB2DPolygon);
+		//}
 
-		aRetval = Polygon(aB2DPolygon);
+		aRetval = Polygon(rXPoly.getB2DPolygon());
 	}
 
 	return aRetval;
Index: svx/source/svdraw/svdocirc.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/svdraw/svdocirc.cxx,v
retrieving revision 1.24
diff -u -p -r1.24 svdocirc.cxx
--- svx/source/svdraw/svdocirc.cxx	9 Sep 2005 00:32:38 -0000	1.24
+++ svx/source/svdraw/svdocirc.cxx	6 Dec 2005 08:29:29 -0000
@@ -192,8 +192,8 @@ FASTBOOL SdrCircObj::PaintNeedsXPoly() c
 	// und Kreis-/Ellipsenboegen (wg. Genauigkeit)
 	FASTBOOL bNeed=aGeo.nDrehWink!=0 || aGeo.nShearWink!=0 || eKind==OBJ_CCUT;
 #ifndef WIN
-	// Wenn nicht Win, dann fuer alle ausser Vollkreis (erstmal!!!)
-	if (eKind!=OBJ_CIRC) bNeed=TRUE;
+	// draw everything with Bezier polygons so that we have smooth circles/ellipses
+	return TRUE;
 #endif
 
 	const SfxItemSet& rSet = GetObjectItemSet();
