---
 cli_ure/prj/build.lst                |   18 +++++-----
 cli_ure/prj/d.lst                    |    1 +
 cli_ure/source/basetypes/makefile.mk |    2 +-
 cli_ure/source/native/makefile.mk    |    4 +-
 cli_ure/source/ure/makefile.mk       |    2 +-
 cli_ure/util/makefile.pmk            |    2 +-
 cli_ure/util/target.pmk              |    2 +-
 configure.in                         |   58 ++++++++++++++++++++++++++++++++-
 set_soenv.in                         |    6 +++
 9 files changed, 78 insertions(+), 17 deletions(-)

diff --git cli_ure/prj/build.lst cli_ure/prj/build.lst
index ea7b486..00f7f53 100644
--- cli_ure/prj/build.lst
+++ cli_ure/prj/build.lst
@@ -2,13 +2,13 @@
 ure	cli_ure						usr1	-	all	ure_mkout NULL
 ure	cli_ure\inc					nmake   -   all   ure_inc NULL
 ure	cli_ure\version				nmake   -   all   ure_source_version ure_inc NULL
-ure	cli_ure\source				nmake   -   w,vc7   ure_source_source ure_inc NULL
-ure	cli_ure\source\basetypes	nmake	-	w,vc7	ure_source_basetypes ure_source_version ure_source_source.w ure_inc NULL
-ure	cli_ure\source\bootstrap        nmake   -       u       ure_source_bootstrap ure_source_source ure_source_basetypes ure_inc NULL
-ure	cli_ure\source\climaker		nmake	-	w,vc7	ure_source_climaker ure_source_basetypes.w ure_inc NULL
-ure	cli_ure\unotypes			nmake	-	w,vc7	ure_unotypes ure_source_version ure_source_source.w ure_source_climaker.w ure_inc NULL
-ure	cli_ure\source\ure			nmake	-	w,vc7	ure_source_ure ure_source_version ure_source_source.w ure_source_basetypes.w ure_unotypes.w ure_inc NULL
-ure	cli_ure\source\uno_bridge	nmake	-	w,vc7	ure_source_uno_bridge ure_source_basetypes.w ure_unotypes.w ure_source_ure.w ure_inc NULL
+ure cli_ure\source				nmake	-	all		ure_source_source ure_inc NULL
+ure cli_ure\source\basetypes	nmake	-	all		ure_source_basetypes ure_source_version ure_source_source ure_inc NULL
+ure cli_ure\source\bootstrap	nmake	-	u		ure_source_bootstrap ure_source_source ure_source_basetypes ure_inc NULL
+ure cli_ure\source\climaker		nmake	-	all		ure_source_climaker ure_source_basetypes ure_inc NULL
+ure cli_ure\unotypes			nmake	-	all		ure_unotypes ure_source_version ure_source_source ure_source_climaker ure_source_basetypes ure_inc NULL
+ure cli_ure\source\ure			nmake	-	all		ure_source_ure ure_source_version ure_source_source ure_source_basetypes ure_unotypes ure_inc NULL
+ure cli_ure\source\uno_bridge	nmake	-	w,vc7	ure_source_uno_bridge ure_source_basetypes ure_unotypes ure_source_ure ure_inc NULL
 ure	cli_ure\source\mono_bridge	nmake	-	u		ure_source_mono_bridge ure_unotypes ure_source_ure ure_inc NULL
-ure	cli_ure\source\native		nmake	-	w,vc7	ure_source_native ure_source_version ure_source_source.w ure_source_ure.w ure_unotypes.w ure_source_uno_bridge.w ure_inc NULL
-#ure	cli_ure\util			nmake	-	w,vc7	ure_util ure_source_ure.w ure_source_native.w NULL
+ure cli_ure\source\native		nmake	-	w,vc7	ure_source_native ure_source_version ure_source_source ure_source_ure ure_unotypes ure_source_uno_bridge ure_inc NULL
+#ure cli_ure\util				nmake	-	w,vc7	ure_util ure_source_ure ure_source_native NULL
diff --git cli_ure/prj/d.lst cli_ure/prj/d.lst
index 261bb2c..56eab2d 100644
--- cli_ure/prj/d.lst
+++ cli_ure/prj/d.lst
@@ -3,6 +3,7 @@
 ..\%__SRC%\bin\climaker.exe.config %_DEST%\bin%_EXT%\climaker.exe.config
 
 ..\%__SRC%\bin\cli_*.dll %_DEST%\bin%_EXT%\cli_*.dll
+..\%__SRC%\lib\libcli*.so %_DEST%\lib%_EXT%\libcli*.so
 ..\%__SRC%\bin\cli_*.pdb %_DEST%\bin%_EXT%\cli_*.pdb
 ..\%__SRC%\bin\cli_*.config %_DEST%\bin%_EXT%\cli_*.config
 ..\%__SRC%\bin\policy*.dll %_DEST%\bin%_EXT%\policy*.dll
diff --git cli_ure/source/basetypes/makefile.mk cli_ure/source/basetypes/makefile.mk
index 5547c32..8ea251b 100644
--- cli_ure/source/basetypes/makefile.mk
+++ cli_ure/source/basetypes/makefile.mk
@@ -88,7 +88,7 @@ $(BIN)$/cli_basetypes.dll : $(CSFILES) $(BIN)$/cliureversion.mk
 
 #do not forget to deliver cli_uretypes.config. It is NOT embedded in the policy file.
 $(POLICY_ASSEMBLY_FILE) : $(BIN)$/cli_basetypes.config
-    $(WRAPCMD) AL.exe -out:$@ \
+    $(WRAPCMD) $(AL) -out:$@ \
             -version:$(CLI_BASETYPES_POLICY_VERSION) \
             -keyfile:$(BIN)$/cliuno.snk \
             -link:$(BIN)$/cli_basetypes.config
diff --git cli_ure/source/native/makefile.mk cli_ure/source/native/makefile.mk
index 2c8be1a..c03ad9a 100644
--- cli_ure/source/native/makefile.mk
+++ cli_ure/source/native/makefile.mk
@@ -161,7 +161,7 @@ $(SIGN): $(SHL1TARGETN)
 # cli_cppuhelper.dll but the system cannot locate it. It possibly assumes that the
 # assembly is also 'MSIL'  like its policy file.
 $(POLICY_ASSEMBLY_FILE) : $(BIN)$/cli_cppuhelper.config
-    $(WRAPCMD) AL.exe -out:$@ \
+    $(WRAPCMD) $(AL) -out:$@ \
             -version:$(CLI_CPPUHELPER_POLICY_VERSION) \
             -keyfile:$(BIN)$/cliuno.snk \
             -link:$(BIN)$/cli_cppuhelper.config \
@@ -169,7 +169,7 @@ $(POLICY_ASSEMBLY_FILE) : $(BIN)$/cli_cppuhelper.config
 .ELSE
 #.NET 1.1: platform flag not needed
 $(POLICY_ASSEMBLY_FILE) : $(BIN)$/cli_cppuhelper.config
-    $(WRAPCMD) AL.exe -out:$@ \
+    $(WRAPCMD) $(AL) -out:$@ \
             -version:$(CLI_CPPUHELPER_POLICY_VERSION) \
             -keyfile:$(BIN)$/cliuno.snk \
             -link:$(BIN)$/cli_cppuhelper.config		
diff --git cli_ure/source/ure/makefile.mk cli_ure/source/ure/makefile.mk
index 3e02908..22aa0ba 100644
--- cli_ure/source/ure/makefile.mk
+++ cli_ure/source/ure/makefile.mk
@@ -86,7 +86,7 @@ $(BIN)$/cli_ure.dll : $(CSFILES) $(BIN)$/cli_uretypes.dll $(BIN)$/cliureversion.
 
 #do not forget to deliver cli_ure.config. It is NOT embedded in the policy file.
 $(POLICY_ASSEMBLY_FILE) : $(BIN)$/cli_ure.config
-    $(WRAPCMD) AL.exe -out:$@ \
+    $(WRAPCMD) $(AL) -out:$@ \
             -version:$(CLI_URE_POLICY_VERSION) \
             -keyfile:$(BIN)$/cliuno.snk \
             -link:$(BIN)$/cli_ure.config
diff --git cli_ure/util/makefile.pmk cli_ure/util/makefile.pmk
index 6a3ea0d..7dbe191 100644
--- cli_ure/util/makefile.pmk
+++ cli_ure/util/makefile.pmk
@@ -27,7 +27,7 @@
 
 # no translation here anyway
 .IF "$(L10N_framework)"==""
-.IF "$(COM)" == "MSC"
+.IF "$(COM)$(COMEX)" == "MSC11" || "$(COM)$(COMEX)"== "MSC10" || "$(ENABLE_MONO)" == "YES"
 BUILD_FOR_CLI = "true"
 CFLAGSENABLESYMBOLS:=-Z7
 .ENDIF
diff --git cli_ure/util/target.pmk cli_ure/util/target.pmk
index 3a99d5a..cb922fa 100644
--- cli_ure/util/target.pmk
+++ cli_ure/util/target.pmk
@@ -34,7 +34,7 @@ CSCFLAGS = -warnaserror+ -noconfig
 .IF "$(product)" == ""
 CSCFLAGS += -checked+ -define:DEBUG -define:TRACE
 .ELSE
-CSCFLAGS += -o
+CSCFLAGS += -optimize
 .ENDIF
 
 .ELSE # debug
diff --git configure.in configure.in
index 12fbec8..9c8aa00 100644
--- configure.in
+++ configure.in
@@ -456,6 +456,10 @@
     fi ,
 )

+AC_ARG_ENABLE(mono,
+[  --enable-mono           Enables the compilation of the Mono bindings
+],,)
+
 dnl ===================================================================
 dnl Optional Packages (--with/without-)
 dnl ===================================================================
@@ -1992,7 +1992,6 @@
 dnl in fact apply equally to what we actually support, i.e.
 dnl Visual Studio 2008 and 2010?)
 dnl ===================================================================
-if test "$_os" = "WINNT"; then
 if test "$WITH_MINGWIN" = "yes" || test "$COMEX" -ge "10"; then
     dnl Check midl.exe
     AC_PATH_PROG(MIDL_PATH, midl.exe)
@@ -2049,7 +2048,9 @@
     # Convert to posix path with 8.3 filename restrictions ( No spaces )
     CSC_PATH=`cygpath -d "$CSC_PATH"`
     CSC_PATH=`cygpath -u "$CSC_PATH"`
-
+    CSC="$CSC_PATH/csc.exe"
+    AL="$CSC_PATH/al.exe"
+
     dnl Check mscoree.lib / .NET Framework dir
         AC_MSG_CHECKING(.NET Framework)
         if test -n "$with_frame_home"; then
@@ -1936,9 +1940,59 @@ if test "$WITH_MINGWIN" = "yes" || test "$COMEX" -ge "10"; then
 	FRAME_HOME=`cygpath -u "$FRAME_HOME"`
 fi
 AC_SUBST(MIDL_PATH)
-AC_SUBST(CSC_PATH)
 AC_SUBST(FRAME_HOME)
+
+if test "$_os" = "Linux"; then
+    AC_MSG_CHECKING([whether to enable Mono bindings])
+    CSC_PATH=
+    CSC=
+    ENABLE_MONO=NO
+    if test "$enable_mono" != "no" ; then
+        AC_MSG_RESULT([yes])
+        if test "z$with_csc_path" != "z"; then
+                if test -x "$with_csc_path/mcs"; then
+                        CSC_PATH="$with_csc_path"
+                fi
+                if test -x "$with_csc_path/bin/mcs"; then
+                        CSC_PATH="$with_csc_path/bin"
+                fi
+        fi
+            if test "z$CSC_PATH" = "z"; then
+            AC_PATH_PROG(MCS, mcs)
+            test -z "$MCS" || CSC_PATH=`dirname $MCS`
+            fi
+                AL="$CSC_PATH/al"
+        if test -x "$MCS" -a -x "$AL"; then
+            MCS_VERSION=`$MCS --version | cut -d" " -f5`
+            if test "`echo $MCS_VERSION | cut -d"." -f1`" -gt "1" || \
+               test "`echo $MCS_VERSION | cut -d"." -f1`" = "1" -a \
+                    "`echo $MCS_VERSION | cut -d"." -f2`" -ge "2" || \
+               test "`echo $MCS_VERSION | cut -d"." -f1`" = "1" -a \
+                    "`echo $MCS_VERSION | cut -d"." -f2`" = "1" -a \
+                        "`echo $MCS_VERSION | cut -d"." -f3`" -ge "8"; then
+                ENABLE_MONO=YES
+                CSC=$MCS
+            else
+                if test -n "$enable_mono" ; then
+                    AC_MSG_ERROR([no, mcs >= 1.1.8 is needed.])
+                fi
+            fi
+        else
+            if test -n "$enable_mono"; then
+                AC_MSG_ERROR([mcs or al not found. Make sure they're in the path or use --with-csc-path])
+            fi
+            fi
+        PKG_CHECK_MODULES(MONO, mono >= 1.1.8)
+    else
+        AC_MSG_RESULT([no])
+    fi
 fi
+AC_SUBST(CSC_PATH)
+AC_SUBST(CSC)
+AC_SUBST(AL)
+AC_SUBST(ENABLE_MONO)
+AC_SUBST(MONO_CFLAGS)
+AC_SUBST(MONO_LIBS)
 
 dnl ===================================================================
 dnl Check if stdc headers are available excluding windows.
diff --git set_soenv.in set_soenv.in
index 51ca48d..6bf714f 100644
--- set_soenv.in
+++ set_soenv.in
@@ -1670,6 +1670,12 @@ ToFile( "DO_FETCH_TARBALLS", "@DO_FETCH_TARBALLS@",  "e" );
 # (c = comment, e = environment variable, a = alias )
 ToFile( "Platform dependent constant values.", $empty, "c" );
 ToFile( "SOLAR_JAVA",        $SOLAR_JAVA,        "e" );
+ToFile( "ENABLE_MONO",       "@ENABLE_MONO@",    "e" );
+ToFile( "CSC",               "@CSC@",            "e" );
+ToFile( "AL",                "@AL@",             "e" );
+ToFile( "CSC_PATH",          "@CSC_PATH@",       "e" );
+ToFile( "MONO_CFLAGS",       "@MONO_CFLAGS@",    "e" );
+ToFile( "MONO_LIBS",         "@MONO_LIBS@",      "e" );
 ToFile( "BIG_SVX",           $BIG_SVX,           "e" );
 ToFile( "COM",               $COM,               "e" );
 ToFile( "COMPATH",           $COMPATH,           "e" );
-- 
1.7.0.1

