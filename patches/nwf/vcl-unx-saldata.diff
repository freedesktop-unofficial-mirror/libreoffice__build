unchanged:
--- vcl/unx/source/app/saldata.cxx	2003-08-26 16:15:59.000000000 +0200
+++ vcl/unx/source/app/saldata.cxx	2004-06-22 14:31:21.487345480 +0200
@@ -67,6 +67,15 @@
 
 // -=-= #includes =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
+#ifdef WIDGETSET_KDE
+#define Region QtXRegion
+#include <kaboutdata.h>
+#include <kapplication.h>
+#include <kcmdlineargs.h>
+#include <qpaintdevice.h>
+#undef Region
+#endif
+
 #include <unistd.h>
 #include <fcntl.h>
 
@@ -148,6 +157,15 @@
 #include "i18n_xkb.hxx"
 #endif
 
+#ifdef WIDGETSET_GTK
+#include <gtk/gtk.h>
+#undef _PREX_H
+#undef _POSTX_H
+#include <prex.h>
+#include <gdk/gdkx.h>
+#include <postx.h>
+#endif
+
 // -=-= <signal.h> -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 #ifndef UNX
 #ifndef SIGBUS
@@ -537,6 +555,54 @@ void SalXLib::Init( int *pArgc, char *pp
 	sal_uInt32 nParams = aCommandLine.getCommandArgCount();
 	rtl::OUString aParam;
 	rtl::OString aDisplay;
+
+#if defined( WIDGETSET_GTK )
+	gtk_init( NULL, NULL );
+#elif defined( WIDGETSET_KDE )
+	KAboutData *kAboutData = new KAboutData( "OpenOffice.org",
+			I18N_NOOP( "OpenOffice.org" ),
+			"1.1.0",
+			I18N_NOOP( "OpenOffice.org with KDE Native Widget Support." ),
+			KAboutData::License_LGPL,
+			"(c) 2003, Jan Holesovsky",
+			I18N_NOOP( "OpenOffice.org is an office suite.\n" ),
+			"http://kde.openoffice.org/index.html",
+			"dev@kde.openoffice.org");
+	kAboutData->addAuthor( "Jan Holesovsky",
+			I18N_NOOP( "Original author and maintainer of the KDE NWF." ),
+			"kendy@artax.karlin.mff.cuni.cz",
+			"http://artax.karlin.mff.cuni.cz/~kendy" );
+
+	int nFakeArgc = 1;
+	char** pFakeArgv = NULL;
+	USHORT nIdx;
+	for ( nIdx = 0; nIdx < nParams; ++nIdx ) 
+	{
+		aCommandLine.getCommandArg( nIdx, aParam );
+		if ( !pFakeArgv && aParam.equalsAscii( "-display" ) && nIdx + 1 < nParams )
+		{
+			aCommandLine.getCommandArg( nIdx + 1, aParam );
+			aDisplay = rtl::OUStringToOString( aParam, osl_getThreadTextEncoding() );
+
+			nFakeArgc = 3;
+			pFakeArgv = new char*[ nFakeArgc ];
+			pFakeArgv[ 1 ] = strdup( "-display" );
+			pFakeArgv[ 2 ] = strdup( aDisplay.getStr() );
+		}
+	}
+	if ( !pFakeArgv )
+		pFakeArgv = new char*[ nFakeArgc ];
+
+	rtl::OUString aBin = pSalData->GetCommandLineParam(0);
+	rtl::OUString aBinURL;
+	osl_getSystemPathFromFileURL( aBin.pData, &aBinURL.pData );
+	pFakeArgv[0] = strdup( rtl::OUStringToOString( aBinURL, osl_getThreadTextEncoding() ).getStr() );
+
+	KCmdLineArgs::init( nFakeArgc, pFakeArgv, kAboutData );
+
+	new KApplication();
+#endif
+
 	for (USHORT i=0; i<nParams; i++) 
 	{
 		aCommandLine.getCommandArg(i, aParam);
@@ -545,7 +611,14 @@ void SalXLib::Init( int *pArgc, char *pp
 			aCommandLine.getCommandArg(i+1, aParam);
 			aDisplay = rtl::OUStringToOString(
 				   aParam, osl_getThreadTextEncoding());
+
+		#if defined( WIDGETSET_GTK )
+			if ((pDisp = GDK_DISPLAY_XDISPLAY( gdk_display_get_default() )))
+		#elif defined( WIDGETSET_KDE )
+			if ( pDisp = QPaintDevice::x11AppDisplay() )
+		#else
 			if ((pDisp = XOpenDisplay(aDisplay.getStr()))!=NULL)
+		#endif
 			{
 				/*
 			 	* if a -display switch was used, we need
@@ -568,7 +641,13 @@ void SalXLib::Init( int *pArgc, char *pp
 		char *pDisplay = getenv("DISPLAY");
 		if (pDisplay != NULL)
 			aDisplay = rtl::OString(pDisplay);
+	#if defined( WIDGETSET_GTK )
+		pDisp = GDK_DISPLAY_XDISPLAY( gdk_display_get_default() );
+	#elif defined( WIDGETSET_KDE )
+		pDisp = QPaintDevice::x11AppDisplay();
+	#else
 		pDisp  = XOpenDisplay(pDisplay);
+	#endif
 	}
 
 	if ( !pDisp )
