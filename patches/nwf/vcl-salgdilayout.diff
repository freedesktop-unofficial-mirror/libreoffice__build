unchanged:
--- vcl/source/gdi/salgdilayout.cxx	27 Mar 2003 17:58:03 -0000	1.12
+++ vcl/source/gdi/salgdilayout.cxx	3 Mar 2004 15:32:07 -0000
@@ -268,6 +268,18 @@ BOOL SalGraphicsLayout::mirror( sal_uInt
 		return FALSE;
 }
 
+void SalGraphicsLayout::mirror( Region& rRgn, const OutputDevice *pOutDev )
+{
+    // mirror the bounding rect and move Region by resulting offset
+    Rectangle aRect( rRgn.GetBoundRect() );
+    long nWidth = aRect.GetWidth();
+    long x      = aRect.Left();
+    long x_org = x;
+
+    mirror( x, nWidth, pOutDev );
+    rRgn.Move( x - x_org, 0 );
+}
+
 // ----------------------------------------------------------------------------
 
 BOOL	SalGraphicsLayout::UnionClipRegion( long nX, long nY, long nWidth, long nHeight, const OutputDevice *pOutDev )
@@ -484,3 +496,68 @@ BOOL	SalGraphicsLayout::DrawEPS( long nX
 	return SalGraphics::DrawEPS( nX, nY, nWidth, nHeight,  pPtr, nSize, NULL );
 }
 
+BOOL SalGraphicsLayout::HitTestNativeControl( ControlType nType, ControlPart nPart, const Region& rControlRegion,
+                                                const Point& aPos, SalControlHandle& rControlHandle, BOOL& rIsInside, const OutputDevice *pOutDev )
+{
+	if( (mnLayout & SAL_LAYOUT_BIDI_RTL) )
+    {
+        Point pt( aPos );
+        Region rgn( rControlRegion );
+        mirror( pt.X(), pOutDev );
+        mirror( rgn, pOutDev );
+        return SalGraphics::HitTestNativeControl( nType, nPart, rgn, pt, rControlHandle, rIsInside, NULL );
+    }
+    else
+        return SalGraphics::HitTestNativeControl( nType, nPart, rControlRegion, aPos, rControlHandle, rIsInside, NULL );
+}
+
+BOOL SalGraphicsLayout::DrawNativeControl( ControlType nType, ControlPart nPart, const Region& rControlRegion,
+                                                ControlState nState, const ImplControlValue& aValue, SalControlHandle& rControlHandle,
+                                                OUString aCaption, const OutputDevice *pOutDev )
+{
+	if( (mnLayout & SAL_LAYOUT_BIDI_RTL) )
+    {
+        Region rgn( rControlRegion );
+        mirror( rgn, pOutDev );
+        return SalGraphics::DrawNativeControl( nType, nPart, rgn, nState, aValue, rControlHandle, aCaption, NULL );
+    }
+    else
+        return SalGraphics::DrawNativeControl( nType, nPart, rControlRegion, nState, aValue, rControlHandle, aCaption, NULL );
+}
+
+BOOL SalGraphicsLayout::DrawNativeControlText( ControlType nType, ControlPart nPart, const Region& rControlRegion,
+                                                ControlState nState, const ImplControlValue& aValue,
+                                                SalControlHandle& rControlHandle, OUString aCaption, const OutputDevice *pOutDev )
+{
+	if( (mnLayout & SAL_LAYOUT_BIDI_RTL) )
+    {
+        Region rgn( rControlRegion );
+        mirror( rgn, pOutDev );
+        return SalGraphics::DrawNativeControlText( nType, nPart, rgn, nState, aValue, rControlHandle, aCaption, NULL );
+    }
+    else
+        return SalGraphics::DrawNativeControlText( nType, nPart, rControlRegion, nState, aValue, rControlHandle, aCaption, NULL );
+}
+
+BOOL SalGraphicsLayout::GetNativeControlRegion( ControlType nType, ControlPart nPart, const Region& rControlRegion, ControlState nState,
+                                                const ImplControlValue& aValue, SalControlHandle& rControlHandle, OUString aCaption,
+                                                Region &rNativeBoundingRegion, Region &rNativeContentRegion, const OutputDevice *pOutDev )
+{
+	if( (mnLayout & SAL_LAYOUT_BIDI_RTL) )
+    {
+        Region rgn( rControlRegion );
+        mirror( rgn, pOutDev );
+        if( GetNativeControlRegion( nType, nPart, rgn, nState, aValue, rControlHandle, aCaption, 
+                                                rNativeBoundingRegion, rNativeContentRegion, NULL ) )
+        {
+            mirror( rNativeBoundingRegion, pOutDev );
+            mirror( rNativeContentRegion, pOutDev );
+            return TRUE;
+        }
+        else
+            return FALSE;
+    }
+    else
+        return SalGraphics::GetNativeControlRegion( nType, nPart, rControlRegion, nState, aValue, rControlHandle, aCaption, 
+                                                rNativeBoundingRegion, rNativeContentRegion, NULL );
+}
