Index: vcl/source/gdi/impimage.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/gdi/impimage.cxx,v
retrieving revision 1.10
diff -u -p -u -r1.10 impimage.cxx
--- vcl/source/gdi/impimage.cxx	22 Aug 2002 13:57:18 -0000	1.10
+++ vcl/source/gdi/impimage.cxx	28 May 2003 15:19:15 -0000
@@ -482,7 +482,7 @@ void ImplImageBmp::Draw( USHORT nPos, Ou
 
 				if( !aDisa )
 				{
-					aDisa = Bitmap( aBmpEx.GetSizePixel(), 1 );
+					aDisa = Bitmap( aBmpEx.GetSizePixel(), aBmpEx.GetBitCount() );
 					ImplUpdateDisaBmp( DISA_ALL );
 #ifndef REMOTE_APPSERVER
 					aDisaDisp = aDisa.CreateDisplayBitmap( pOutDev );
@@ -494,10 +494,18 @@ void ImplImageBmp::Draw( USHORT nPos, Ou
 				if( !aDisaDisp && !!aDisa )
 					aDisaDisp = aDisa.CreateDisplayBitmap( pOutDev );
 
-				pOutDev->DrawMask( aOutPos1, aOutSize, aPos, aSize,
-								   aDisaDisp, rSettings.GetLightColor() );
-				pOutDev->DrawMask( aOutPos, aOutSize, aPos, aSize,
-								   aDisaDisp, rSettings.GetShadowColor() );
+				if (aDisaDisp.GetBitCount() == 1)
+				  { // A mask
+				    pOutDev->DrawMask( aOutPos1, aOutSize, aPos, aSize,
+						       aDisaDisp, rSettings.GetLightColor() );
+				    pOutDev->DrawMask( aOutPos, aOutSize, aPos, aSize,
+						       aDisaDisp, rSettings.GetShadowColor() );
+				  }
+				else
+				  {
+				    BitmapEx tBmpEx = BitmapEx( aDisa, aBmpEx.GetMask() );
+				    pOutDev->DrawBitmapEx( aOutPos, aOutSize, aPos, aSize, tBmpEx );
+				  }
 			}
 			else
 			{
@@ -741,22 +749,51 @@ void ImplImageBmp::ImplUpdateDisaBmp( US
 					}
 				}
 			}
-			else
-			{	
+			else if (pAcc->GetBitCount() == 32)
+			{
 				for( long nY = nTop; nY < nBottom; nY++ )
 				{
-					for( long nX = nCurLeft; nX < nCurRight; nX++ )
-					{
-						if( ( aMskWhite == pMsk->GetPixel( nY, nX ) ) || 
-							( aAccWhite == pAcc->GetPixel( nY, nX ) ) )
+	 				for( long nX = nCurLeft; nX < nCurRight; nX++ )
+	 				{
+						BitmapColor col = pAcc->GetPixel( nY, nX );
+
+						if ((nY + nX) % 2 == 0)
 						{
-							pDis->SetPixel( nY, nX, aDisWhite );
+							unsigned char i;
+							i = ( col.GetRed() * 0.3 + // magic numbers from gdk-pixbuf
+							      col.GetGreen() * 0.59 +
+							      col.GetBlue () * 0.11 );
+ 
+							col.SetRed   (i / 2 + 127);
+							col.SetGreen (i / 2 + 127);
+							col.SetBlue  (i / 2 + 127);
 						}
 						else
 						{
-							pDis->SetPixel( nY, nX, aDisBlack );
-							++nBlackCount;
+#define GT_ZERO(c) (((c) >= 0) ? c : 0)
+							col.SetRed   (GT_ZERO (( col.GetRed ())   * 0.7));
+							col.SetGreen (GT_ZERO (( col.GetGreen ()) * 0.7));
+							col.SetBlue  (GT_ZERO (( col.GetBlue ())  * 0.7));
+#undef GT_ZERO
 						}
+						col.SetAlpha( col.GetAlpha() / 2 );
+						pDis->SetPixel( nY, nX, col );
+					}
+				}
+				nBlackCount = nBlackThreshold;
+			}
+			else
+			{	
+				for( long nY = nTop; nY < nBottom; nY++ )
+	  			{
+	  				for( long nX = nCurLeft; nX < nCurRight; nX++ )
+					{
+						if( ( aMskWhite == pMsk->GetPixel( nY, nX )  ||
+						      pAcc->GetPixel( nY, nX ).GetAlpha() > 127 ) &&
+						    ( aAccWhite != pAcc->GetPixel( nY, nX ) ) )
+							pDis->SetPixel( nY, nX, aDisBlack );
+						else
+							pDis->SetPixel( nY, nX, aDisWhite );
 					}
 				}
 			}
