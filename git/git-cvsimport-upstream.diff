--- git-cvsimport.save	2007-12-01 09:26:14.000000000 +0100
+++ git-cvsimport	2007-12-01 12:08:05.000000000 +0100
@@ -30,7 +30,8 @@ use IPC::Open2;
 $SIG{'PIPE'}="IGNORE";
 $ENV{'TZ'}="UTC";
 
-our ($opt_h,$opt_o,$opt_v,$opt_k,$opt_u,$opt_d,$opt_p,$opt_C,$opt_z,$opt_i,$opt_P, $opt_s,$opt_m,$opt_M,$opt_A,$opt_S,$opt_L, $opt_a, $opt_r);
+our
+($opt_h,$opt_o,$opt_v,$opt_k,$opt_u,$opt_d,$opt_p,$opt_C,$opt_z,$opt_i,$opt_P, $opt_s,$opt_m,$opt_M,$opt_A,$opt_S,$opt_L, $opt_a, $opt_r, $opt_w);
 my (%conv_author_name, %conv_author_email);
 
 sub usage(;$) {
@@ -41,7 +42,7 @@ Usage: ${\basename $0}     # fetch/updat
        [-o branch-for-HEAD] [-h] [-v] [-d CVSROOT] [-A author-conv-file]
        [-p opts-for-cvsps] [-P file] [-C GIT_repository] [-z fuzz] [-i] [-k]
        [-u] [-s subst] [-a] [-m] [-M regex] [-S regex] [-L commitlimit]
-       [-r remote] [CVS_module]
+       [-r remote] [-w cws_done.csv] [CVS_module]
 END
 	exit(1);
 }
@@ -115,7 +116,7 @@ sub read_repo_config {
     }
 }
 
-my $opts = "haivmkuo:d:p:r:C:z:s:M:P:A:S:L:";
+my $opts = "haivmkuo:d:p:r:C:z:s:M:P:A:S:L:w:";
 read_repo_config($opts);
 getopts($opts) or usage();
 usage if $opt_h;
@@ -373,6 +374,18 @@ $ignorebranch{'#CVSPS_NO_BRANCH'} = 1;
 
 # ooo specific
 $ignorebranch{'ausetestcwswarumgehtunderscorenicht'} = 1;
+if ( defined $opt_w ) {
+    open( IGNORE, "<$opt_w" ) or die "Cannot find cws_done.csv";
+    while( <IGNORE> ) {
+	if ( /"?([^,"]*)"?,"?([^"]*)"?/ ) {
+	    my $br = $1;
+	    $br =~ s/cws_...6.._//;
+	    $br =~ s/CWS_...6.._(.*)_ANCHOR/$1/;
+	    $ignorebranch{$1} = 1;
+	}
+    }
+    close( IGNORE );
+}
 
 sub commit {
 	if ($branch eq $opt_o && !$index{branch} && !get_headref($branch, $git_dir)) {
@@ -464,7 +477,10 @@ sub commit {
 		$xtag =~ s/[\/]/$opt_s/g;
 
 		# ooo specific
-		if ( -f "$git_dir/refs/heads/$xtag" ) {
+		if ( exists $ignorebranch{$xtag} ) {
+			print STDERR "Ignoring tag '$xtag'.\n";
+		}
+		elsif ( -f "$git_dir/refs/heads/$xtag" ) {
 			print STDERR "Ignoring tag '$xtag', already exists as a branch.\n";
 		}
 		elsif ( -f "$git_dir/refs/tags/$xtag" ) {
