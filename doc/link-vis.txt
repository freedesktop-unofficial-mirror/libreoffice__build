More linking acceleration work (with visibility attribute)

* potential fixes:
	+ static linking / aggregation & altering library deps etc.
	    + potentially factor of 10 improvement
	    + aggregate all non-components used during startup
	      into 1 monster library:
		+ ensure this is the 1st entry in the link deps.
		+ unfortately the largest libraries: libsvx, libsfx
		  are also components themselves ...
	    + post-aggregate these (somehow?) & re-link 'desktop'
		+ how can we re-link that stuff ?

	+ Adding markup: may remove: 5000 more relocations == ~6%

	+ Doing internal compiler fixups - may remove: 20k+ == ~25% speedup

	+ removing libraries from link time
	    + potential 1/20th improvement per library
	    + plus - wastefulness: why was it there ?
	    + should do for audio pieces in vcl
		- 350K of unused code - force/paged into memory




** Latest worst-offender library results: (preloc):

libvos3gcc3.so : used 31 internal(withsym) 406 total 437
libsc680li.so : used 1937 internal(withsym) 409 total 2346
i18npool.uno.so : used 64 internal(withsym) 420 total 484
libicuuc.so : used 109 internal(withsym) 429 total 538
libucbhelper3gcc3.so : used 165 internal(withsym) 487 total 652
libcppcanvas680li.so : used 29 internal(withsym) 490 total 519
libgo680li.so : used 104 internal(withsym) 500 total 604
libxsec_xmlsec.so : used 70 internal(withsym) 545 total 615
libfwe680li.so : used 324 internal(withsym) 546 total 870
libcomphelp4gcc3.so : used 486 internal(withsym) 566 total 1052
libsfx680li.so : used 1259 internal(withsym) 622 total 1881
libxcr680li.so : used 118 internal(withsym) 652 total 770
libdbu680li.so : used 1649 internal(withsym) 656 total 2305
libfile680li.so : used 1173 internal(withsym) 742 total 1915
libfrm680li.so : used 935 internal(withsym) 743 total 1678
configmgr2.uno.so : used 263 internal(withsym) 764 total 1027
liblng680li.so : used 256 internal(withsym) 792 total 1048
slideshow.uno.so : used 72 internal(withsym) 961 total 1033
libstlport_gcc.so : used 40 internal(withsym) 973 total 1013
libstdc++.so : used 37 internal(withsym) 1002 total 1039
libsw680li.so : used 2691 internal(withsym) 1035 total 3726

libicui18n.so : used 103 internal(withsym) 1091 total 1194  - no vis markup
libso680li.so : used 347 internal(withsym) 1197 total 1544  - no vis markup
libvcl680li.so : used 631 internal(withsym) 1403 total 2034 - marked up[!]
libsb680li.so : used 297 internal(withsym) 1455 total 1752  - no vis markup

libsvt680li.so : used 2489 internal(withsym) 2277 total 4766  - marked up[!]
libsvx680li.so : used 3960 internal(withsym) 5926 total 9886  - marked up[!]
Total relocs: 92477

was [ Total relocs: 183315 ]



** Interesting:

#0  osl_psz_loadModule (pszModuleName=0xbfffccb0 "libdtransX11680li.so", nRtldMode=257) at module.c:253
#1  0x408e3298 in osl_loadModule (ustrModuleName=0x44f5bab0, nRtldMode=257) at module.c:152
#2  0x408874a3 in cppu::loadSharedLibComponentFactory () from /opt/OOInstall/program/libuno_cppuhelpergcc3.so.3
#3  0x42054fbd in component_getFactory () from /opt/OOInstall/program/shlibloader.uno.so
#4  0x408807c4 in cppu::createFactoryProxy () from /opt/OOInstall/program/libuno_cppuhelpergcc3.so.3
#5  0x40880957 in cppu::createFactoryProxy () from /opt/OOInstall/program/libuno_cppuhelpergcc3.so.3
#6  0x4203e4a2 in component_getFactory () from /opt/OOInstall/program/servicemgr.uno.so
#7  0x4203de64 in component_getFactory () from /opt/OOInstall/program/servicemgr.uno.so
#8  0x401d5a8d in Window::GetDragSource () from /opt/OOInstall/program/libvcl680li.so
#9  0x401d010b in Window::GetDropTarget () from /opt/OOInstall/program/libvcl680li.so
#10 0x40b20e34 in non-virtual thunk to VCLXMenu::execute(com::sun::star::uno::Reference<com::sun::star::awt::XWindowPeer> const&, com::sun::star::awt::Rectangle const&, short) () from /opt/OOInstall/program/libtk680li.so
#11 0x43c44ec4 in ?? () from /opt/OOInstall/program/libfwk680li.so
#12 0x43c45753 in ?? () from /opt/OOInstall/program/libfwk680li.so
#13 0x43c668d0 in component_getFactory () from /opt/OOInstall/program/libfwk680li.so
#14 0x43c66b73 in component_getFactory () from /opt/OOInstall/program/libfwk680li.so
#15 0x43c2a73f in ?? () from /opt/OOInstall/program/libfwk680li.so
#16 0x43cd6672 in component_getFactory () from /opt/OOInstall/program/libfwk680li.so
#17 0x43cd6c5d in component_getFactory () from /opt/OOInstall/program/libfwk680li.so
#18 0x43cd6d16 in component_getFactory () from /opt/OOInstall/program/libfwk680li.so
#19 0x43c2aa99 in ?? () from /opt/OOInstall/program/libfwk680li.so
#20 0x080739d3 in desktop::DispatchWatcher::executeDispatchRequests ()
#21 0x0806d6bb in desktop::OfficeIPCThread::ExecuteCmdLineRequests ()
#22 0x0806234f in desktop::Desktop::OpenDefault ()
#23 0x08065dc1 in desktop::Desktop::OpenClients ()
#24 0x08067b23 in desktop::Desktop::OpenClients_Impl ()
#25 0x400921de in Help::ShowTip () from /opt/OOInstall/program/libvcl680li.so
#26 0x401e5fb7 in Window::DrawNativeControl () from /opt/OOInstall/program/libvcl680li.so
#27 0x41c7b72c in X11SalFrame::GetWindowState () from /opt/OOInstall/program/libvclplug_gen680li.so
#28 0x41c9eef1 in SalDisplay::DispatchInternalEvent () from /opt/OOInstall/program/libvclplug_gen680li.so
#29 0x41778873 in ?? () from /opt/OOInstall/program/libvclplug_gtk680li.so
#30 0x40c3c5a0 in ?? ()
#31 0x40c3c5a0 in ?? ()
#32 0x40c3b260 in ?? ()
#33 0x41c58578 in __JCR_LIST__ () from /opt/gnome/lib/libglib-2.0.so.0
#34 0x00000000 in ?? ()
#35 0x080f4470 in ?? ()
#36 0xbfffeaac in ?? ()
#37 0x41bfc221 in g_idle_dispatch () from /opt/gnome/lib/libglib-2.0.so.0
Previous frame identical to this frame (corrupt stack?)



Helper libraries: glup into 1 ?:

helper: ./libavmedia680li.so
helper: ./libbasegfx680li.so
helper: ./libfwe680li.so
helper: ./libfwi680li.so
helper: ./libgcc3_uno.so
helper: ./libi18nutilgcc3.so
helper: ./libicudata.so.26
helper: ./libicui18n.so.26
helper: ./libicule.so.26
helper: ./libicuuc.so.26
helper: ./libj680li_g.so
helper: ./libjvmaccessgcc3.so.3
helper: ./libjvmfwk.so.3
helper: ./liblocaledata_en.so
helper: ./libportaudio.so.0
helper: ./libpsp680li.so
helper: ./libreg.so.3
helper: ./libsb680li.so
helper: ./libsndfile.so.1
helper: ./libstlport_gcc.so
helper: ./libstore.so.3
helper: ./libsvl680li.so
helper: ./libtl680li.so
helper: ./libucbhelper3gcc3.so
helper: ./libuno_cppu.so.3
helper: ./libuno_salhelpergcc3.so.3
helper: ./libuno_sal.so.3
helper: ./libvclplug_gen680li.so
helper: ./libvclplug_gtk680li.so
helper: ./libvos3gcc3.so

Components:
component: ./behelper.uno.so
component: ./configmgr2.uno.so
component: ./fsstorage.uno.so
component: ./gconfbe1.uno.so
component: ./i18npool.uno.so
component: ./ldapbe2.uno.so
component: ./libcomphelp4gcc3.so
component: ./libdbtools680li.so
component: ./libdtransX11680li.so
component: ./libfileacc.so
component: ./libfilterconfig1.so
component: ./libfwk680li.so
component: ./libfwl680li.so
component: ./libgo680li.so
component: ./liblng680li.so
component: ./libmcnttype.so
component: ./libpackage2.so
component: ./libsfx680li.so
component: ./libsot680li.so
component: ./libspl680li.so
component: ./libsvt680li.so
component: ./libsvx680li.so
component: ./libsw680li.so
component: ./libtk680li.so [!]
component: ./libucb1.so
component: ./libucpfile1.so
component: ./libuno_cppuhelpergcc3.so.3
component: ./libutl680li.so
component: ./libuui680li.so
component: ./libvcl680li.so
component: ./libxcr680li.so
component: ./libxo680li.so
component: ./libxstor.so
component: ./localebe1.uno.so
component: ./sax.uno.so
component: ./streams.uno.so
component: ./sysmgr1.uno.so
component: ./typeconverter.uno.so
component: ./ucpgvfs1.uno.so
component: ./uriproc.uno.so
component: implreg.uno.so
component: nestedreg.uno.so
component: regtypeprov.uno.so
component: security.uno.so
component: servicemgr.uno.so
component: shlibloader.uno.so
component: simplereg.uno.so
component: typemgr.uno.so


Gcc 4 research:
    + ld -Bsymbolic breaks stuff; - should avoid weak symbols (?)

    + before: (objdump -R)
000019f0 R_386_GLOB_DAT    _ZTV9BaseClass
00001a2c R_386_32          _ZTS9BaseClass
00001a34 R_386_32          _ZTI9BaseClass
00001a38 R_386_32          _ZN9BaseClass5doFooEv
00001a40 R_386_32          _ZTS11MyException

    + after:
000019fc R_386_RELATIVE    *ABS*
00001a04 R_386_RELATIVE    *ABS*
00001a08 R_386_RELATIVE    *ABS*
00001a10 R_386_RELATIVE    *ABS*
00001a18 R_386_RELATIVE    *ABS*

    + Of these symbols:
class BaseClass {
public:
	BaseClass();
	virtual void doFoo() throw (MyException);
	int inlineFoo() { return 1; }
};
    + we should be able to -Bsymbolic the local symbols: surely [!?]
0000079c g    DF .text  00000056  Base        _ZN9BaseClassC2Ev
00000746 g    DF .text  00000056  Base        _ZN9BaseClassC1Ev
000007fb  w   DO .rodata        0000000b  Base        _ZTS9BaseClass
00001a28  w   DO .data  00000008  Base        _ZTI9BaseClass
000006ee g    DF .text  00000057  Base        _ZN9BaseClass5doFooEv
00001a30  w   DO .data  0000000c  Base        _ZTV9BaseClass

    + libsvx - grep '_ZN...' - 14k symbols,

    + Fix 'ld -Bsymbolic' to use weakness too...
    + get a nice run-time test of that ...
	+ bfd/elf32-i386.c '->symbolic' usage

