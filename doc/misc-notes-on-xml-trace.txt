Note: The doc is updated with latest findings updated at the top

So, as noted below the xStorage does the complete xml file processing taking share/config/soffice.cfg/ as the toplevel directory and processes the xml files for everyfile available under soffice.cfg/ which includes the simpress/, global/ and the modules/ directories. So that gives some options as to whether to load all these at this point of execution or go further down and modify the processing. Did a couple of experiments with changed top-level directory name to soffice.cfg/global/ and also with completely skipping this altogether. To my surprise in both these cases, openoffice.org comes up without any issues  - much faster. Ofcourse, the first expecriment just reads the files that are under global/ only and the second experiment doesn't process any of those xml files; so has to be faster. One thing that I notice with these two experiments is that although OOo comes up fast, when you try to browse the menu bar it seems to be taking bit more time to get the menus rendered. Yet to confirm this though.
If so, we may have to look at the possibilities of loading these at a defered point of execution.    

Now, on to sfx2; SfxConfigManager seems to be the one that invoking all the xml process as part of createInstance...
Turns out that the xStorage thing --
 SotStorageRef xStorage( GetStorage( aCfgFileName, STREAM_STD_READ ) ); --
in sfx2\source\config\cfgmgr.cxx::SfxConfigManager() does all the xml storage stuff...

Though initially thought that the code in framework/ is the one handling these, the stuff in framework/  - like Moduleuiconfigurationmanager.cxx under source/configuration - comes in the path only after all the xml processing is done.

After the locale settings and creation of Resource manager, the createInstance invokes a series of library loads, speciafically libsfx and libfwe and like. The sfx and framework libraries.


cmduicollector.cxx - Seems to be handling all the xml files for menu, status toolbar and accelerator stuff.
Though, initially thought this could be the one processing, looks like it's some cmd line stuff.

Needs to explore these...
xml2cmp/source/xcd/filebuff.cxx::loadxmlfile()
xmlwrap.hxx::ScXMLImportWrapper
