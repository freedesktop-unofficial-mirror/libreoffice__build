* References:
    * svx/source/msfilter/msvbasic.cxx
    * Costin Raiu, Kaspersky Labs, 'Apple of Discord'
    * Virus bulletin's bontchev.pdf, svajcer.pdf

Using a hacked libgsf's test-cp-msole.c:

      * round-trip - works fine, 'security warning from OXP'
      * deleting the __SRP_* streams: works fine ...

'Simple' stream:
      * Simple: 'SGetThree' -> 'SGetThack' - no pcode changes ...
	    + no visible changes
      * VBA 5 -> VBA 6 ... (?)
      * pcode line table start marker: FE CA 01 00
	    + following 2 bytes : seemingly not a clobberable version.
	    + blanking (0x00) pcode between 42 81 0C 00 and ff ff ff ff -
	      gives empty 1st macro in spreadsheet.
	    + clobbering with 0xff's results in XP crasher.
      * clobbering the pcode results in the text changing ie.
	   For i = 0 To 10 -> For i = 0 To 31 - with no other change.

'_VBA_PROJECT' stream:
      * clobber macro name - reflected in re-load in
	    <module-name> [functions] list - ordering odd there though.


Something that works:
      * clobber byte 3 of _VBA_PROJECT to 0xa8 - also works going backwards: 0x01
	    + no need to clobber pcode table ... [ presumably not read !? ]
	    + 0d 0a is the line terminator
      * ToDo: discover what of the remaining data is important
	      discover a minimal skeleton of text.
	    + Screwing up the compression can cause _serious_
	      artefacts - ie. Excel loop/lock / crash etc.

Progressive destruction.
      * clobbered pcode with 0's from & inc. feca0100
      * ie. pcode totally ignored.
      * Can totally wipe all data from start to "01 ae b0 00'A''t''t',"
	none of it used (seemingly)

'_VBA_PRJOECT' stream:
      * offsets to VBA streams: 
	    + unicode name/attr/name/offset blocks
	    + clobbering that offset: still works
      * seem to be able to junk complete 'Simple' stringsets in project.


TODO:
    * unicode macros ?