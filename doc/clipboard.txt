offapi/com/sun/star/datatransfer/clipboard/XClipboard.idl:
    + 3 methods:
	XTransferable getContents();
	[oneway] void setContents( [in] XTransferable xTrans, [in] XClipboardOwner xClipboardOwner );
	string getName();

offapi/com/sun/star/datatransfer/XTransferable.idl:
    + 3 methods:
	any getTransferData( [in] DataFlavor aFlavor )
		raises ( UnsupportedFlavorException, com::sun::star::io::IOException );
	sequence < DataFlavor > getTransferDataFlavors();
	boolean isDataFlavorSupported( [in] DataFlavor aFlavor );

offapi/com/sun/star/datatransfer/DataFlavour.idl:
    struct DataFlavor
    {
	string MimeType;
	string HumanPresentableName;
	type DataType;
    }

* Main Access points:

vcl/source/window/window.cxx (Window::GetClipboard):
	+ Reference< XClipboard > Window::GetClipboard()
	+ creates & initialises the service:
	    "com.sun.star.datatransfer.clipboard.SystemClipboard"
or eg.
vcl/source/control/window.cxx (Windo::GetSelection):
	+ again, creates the same service.


* X / backend implementation:
    dtrans/source/X11/*.[ch]*
	+ implements the interfaces for X11

* Client access / helper code
	svtools/inc/transfer.hxx
	svtools/source/misc/transfer.cxx (TransferableDataHelper)

