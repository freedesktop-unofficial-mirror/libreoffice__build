* Splashperform *

** Closed issues
    + we will have another shell-script wrapper
	+ will point to the real, absolute path of the binary

** Open issues
    + how do we provide status / exit for splash
	+ g_spawn_async ... - progress fd ?
	+ fprintf (out_fd, "2%"); etc. ?
	+ 'SetSplashScreenProgress (25)' eg.
	        m_rSplashScreen = Reference<XStatusIndicator>(
		    comphelper::getProcessServiceFactory()->createInstanceWithArguments(
		    OUString::createFromAscii("com.sun.star.office.SplashScreen"),
		    aSeq), UNO_QUERY);
		if(m_rSplashScreen.is())
		    m_rSplashScreen->start(OUString::createFromAscii("SplashScreen"), 100);
	    + desktop/source/splash/splash:
		+ 
    + stop using -splash-pipe as a file name ! ;-)
	+ elide elsewhere ...
		
	
    + how do we get the install path ?
	+ hard code at compile time ?
	+ special elf section ?
	+ special (large) symbol that can be over-written ?
	+ symlink ?

    + why use foo when we can use install path
      as the key & avoid parsing bootstraprc
      at all ...
	    + getExecutableFile(aIniName);

    A fast / native startup app ...

    + CWS 'unxsplash'


** What does 'ooo-wrapper do ?
    + grab it's symlink name & fork that component
	+ [ if no args ]
	+ eg. oowriter -> -writer ...
	+ -oofromtemplate => 'slot:5500' ...
    + .lock file ... [ now obsolete ? ]
	+ used for dynamic install ...
    + quickstart junk ...
    + '--widgets-set gtk'
	+ [ just sets SAL_USE_VCLPLUGIN ]
    + '--version" 'built with ooo-build-$OOO_BUILDVERSION'
	( can be done up-stream )
    + sets 'SAL_NOEXPANDFPICKER' [ an anachronism ? ]
    + access writes
	+ fix ~/.ooo-2.0* privs.
	+ fix ~/.recently-used privs.
    + check /proc/version exists [ won't work without a mounted /proc ]

** Rename binary to 'openoffice' ?
    + pass '-writer' etc. in from the .desktop file ?
    + so we can foo the baa's ?

** What does soffice do ?
    + 
 
