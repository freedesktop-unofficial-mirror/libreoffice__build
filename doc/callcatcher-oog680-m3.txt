(anonymous namespace)::AdjustPosAndSize(Control&, Point&, long)
(anonymous namespace)::ImpUndoDeleteWarning::ImpUndoDeleteWarning(Window*)
(anonymous namespace)::IsFileURL(String const&)
(anonymous namespace)::PreviewCreationRequest::CompareToken::CompareToken(int)
(anonymous namespace)::PreviewCreationRequest::PreviewCreationRequest(int, int)
(anonymous namespace)::TraceEventCode(int)
(anonymous namespace)::VCLSettings::VCLSettings()
(anonymous namespace)::_strensurelast(unsigned short*, unsigned short)
(anonymous namespace)::checkNoTypeArguments(_STL::vector<rtl::OString, _STL::allocator<rtl::OString> > const&)
(anonymous namespace)::getState(_STL::vector<cppcanvas::internal::OutDevState, _STL::allocator<cppcanvas::internal::OutDevState> > const&)
(anonymous namespace)::lcl_ChartTypeIsMemberOfCooSys(com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&, com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
(anonymous namespace)::lcl_DecoratedFilter(String const&)
(anonymous namespace)::lcl_convertGraphicPosition(SvxGraphicPosition)
(anonymous namespace)::lcl_convertGraphicPosition(com::sun::star::style::GraphicLocation)
(anonymous namespace)::lcl_convertPaperFormat(SvxPaper)
(anonymous namespace)::lcl_convertPaperFormat(com::sun::star::view::PaperFormat)
(anonymous namespace)::lcl_getAxesHoldingCategoriesFromDiagram(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
(anonymous namespace)::lcl_getCategoriesFromTable(SchXMLTable const&, bool)
(anonymous namespace)::lcl_getColor(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
(anonymous namespace)::lcl_getSwappedArray(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&)
(anonymous namespace)::lcl_setNumberFormat(SvNumberFormatter*, long, double, String&)
(anonymous namespace)::unoenv_getStaticOIdPart()
(anonymous namespace)::update_recently_used_enabled()
(anonymous namespace)::ustrcat(unsigned short const*, unsigned short*)
(anonymous namespace)::ustrncpy(unsigned short const*, unsigned short*, unsigned int)
(anonymous namespace)::writeU1(FileStream&, unsigned char)
Accelerator::Call(KeyCode const&, unsigned short)
Accelerator::Clear()
Accelerator::EnableItem(KeyCode, unsigned char)
Accelerator::EnableItem(unsigned short, unsigned char)
Accelerator::GetAccel(KeyCode) const
Accelerator::GetAccel(unsigned short) const
Accelerator::GetItemId(KeyCode const&) const
Accelerator::GetItemId(unsigned short) const
Accelerator::GetItemKeyCode(unsigned short) const
Accelerator::IsIdValid(unsigned short) const
Accelerator::IsItemEnabled(KeyCode) const
Accelerator::IsItemEnabled(unsigned short) const
Accelerator::IsKeyCodeValid(KeyCode) const
Accelerator::RemoveItem(KeyCode)
Accelerator::RemoveItem(unsigned short)
Accelerator::SetAccel(KeyCode, Accelerator*)
AccessibleDialogWindow::ChildDescriptor::ChildDescriptor()
AccessibleDialogWindow::ChildDescriptor::ChildDescriptor(DlgEdObj*, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
AccessibleSlideView::FocusHasChanged(unsigned short, unsigned short)
AccessibleSlideView::SetPageVisible(unsigned short, unsigned char)
AccessibleStateSetHelperImpl::~AccessibleStateSetHelperImpl()
ActDicArray::Insert(ActDic const*, unsigned short, unsigned short)
ActDicArray::_ForEach(unsigned short, unsigned short, unsigned char (*)(ActDic const&, void*), void*)
AddDate(int, int&, int, int, int)
AddNumber_Impl(String&, unsigned int)
AddressMultiLineEdit::Modified()
AdjustLastDayInMonth(int, int, int)
Adler32::Adler32()
Adler32::getValue()
Adler32::reset()
Adler32::update(com::sun::star::uno::Sequence<signed char> const&)
Adler32::updateByte(signed char)
Adler32::updateSegment(com::sun::star::uno::Sequence<signed char> const&, int, int)
Adler32::~Adler32()
AffixMgr::get_checknum()
AffixMgr::get_compoundbegin()
AffixMgr::get_compoundroot()
AffixMgr::get_suffix()
AllSettings::SetLocale(com::sun::star::lang::Locale const&)
AlphaMask::Crop(Rectangle const&)
AlphaMask::Expand(unsigned long, unsigned long, unsigned char*)
AlphaMask::Invert()
AlphaMask::Mirror(unsigned long)
AlphaMask::Replace(unsigned char*, unsigned char*, unsigned long, unsigned long*)
AlphaMask::Rotate(long, unsigned char)
AlphaMask::Scale(Size const&, unsigned long)
Animation::Dither(unsigned long)
Animation::IsEqual(Animation const&) const
Application::AddHotKey(KeyCode const&, Link const&, void*)
Application::CallEvent(NotifyEvent&)
Application::CallPreNotify(NotifyEvent&)
Application::FlushAccel()
Application::GetDialogScaleX()
Application::GetFilterHdl()
Application::GetReservedKeyCodeDescription(unsigned long)
Application::InitAppRes(ResId const&)
Application::IsAccessibilityEnabled()
Application::IsShutDown()
Application::IsUserActive(unsigned short)
Application::PostUserEvent(unsigned long, void*)
Application::RemoveHotKey(unsigned long)
Application::SetFontPath(String const&)
ArgInput::GetArgSelection()
ArgInput::ReplaceSelOfArg(String const&)
AssistentDlg::GetInformation() const
AssistentDlg::GetTopic() const
AssistentDlg::GetUserName() const
AstExpression::AstExpression(AstExpression*, ExprType)
AstExpression::AstExpression(float)
AstExpression::AstExpression(short)
AstExpression::AstExpression(unsigned int)
AstExpression::AstExpression(unsigned short)
AstExpression::eval(EvalKind)
AstOperation::isVoid()
AstUnionLabel::AstUnionLabel()
AttributeList::RemoveAttribute(rtl::OUString)
AttributeList::SetAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
B3dCamera::SetBankAngle(double)
B3dCamera::SetFocalLength(double)
B3dCamera::SetLookAt(basegfx::B3DVector const&)
B3dCamera::SetPosition(basegfx::B3DPoint const&)
B3dCamera::SetPositionAndLookAt(basegfx::B3DPoint const&, basegfx::B3DVector const&)
B3dCamera::SetUseFocalLength(unsigned char)
B3dColor::GetDistance(Color&)
B3dEdgeEntryBucket::B3dEdgeEntryBucket()
B3dEdgeEntryBucket::ImplRemove()
B3dEdgeEntryBucketMemArr::Replace(char const*&, unsigned short)
B3dEdgeEntryBucketMemArr::Replace(char const**, unsigned short, unsigned short)
B3dEdgeEntryBucketMemArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(char const*&, void*), void*)
B3dEdgeListBucket::B3dEdgeListBucket()
B3dEdgeListBucket::ImplRemove()
B3dEdgeListBucketMemArr::Replace(char const*&, unsigned short)
B3dEdgeListBucketMemArr::Replace(char const**, unsigned short, unsigned short)
B3dEdgeListBucketMemArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(char const*&, void*), void*)
B3dEntity::CalcMiddle(B3dEntity&, B3dEntity&, B3dEntity&)
B3dEntity::ForceEqualBase(B3dTransformationSet*, B3dEntity&, B3dEntity&)
B3dEntityBucket::B3dEntityBucket()
B3dEntityBucketMemArr::Replace(char const*&, unsigned short)
B3dEntityBucketMemArr::Replace(char const**, unsigned short, unsigned short)
B3dEntityBucketMemArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(char const*&, void*), void*)
B3dGeometry::Empty()
B3dGeometry::RemoveNormals()
B3dGeometry::RemoveTexture()
B3dLightGroup::GetConstantAttenuation(Base3DLightNumber)
B3dLightGroup::GetLinearAttenuation(Base3DLightNumber)
B3dLightGroup::GetQuadraticAttenuation(Base3DLightNumber)
B3dLightGroup::GetSpotCutoff(Base3DLightNumber)
B3dLightGroup::GetSpotDirection(Base3DLightNumber)
B3dLightGroup::GetSpotExponent(Base3DLightNumber)
B3dLightGroup::SetConstantAttenuation(double, Base3DLightNumber)
B3dLightGroup::SetLinearAttenuation(double, Base3DLightNumber)
B3dLightGroup::SetPosition(basegfx::B3DPoint const&, Base3DLightNumber)
B3dLightGroup::SetQuadraticAttenuation(double, Base3DLightNumber)
B3dLightGroup::SetSpotCutoff(double, Base3DLightNumber)
B3dLightGroup::SetSpotDirection(basegfx::B3DVector const&, Base3DLightNumber)
B3dLightGroup::SetSpotExponent(unsigned short, Base3DLightNumber)
B3dMaterialBucket::B3dMaterialBucket()
B3dMaterialBucket::B3dMaterialBucket(unsigned short)
B3dMaterialBucket::ImplAppend()
B3dMaterialBucket::ImplRemove()
B3dMaterialBucket::~B3dMaterialBucket()
B3dMaterialBucketMemArr::Replace(char const*&, unsigned short)
B3dMaterialBucketMemArr::Replace(char const**, unsigned short, unsigned short)
B3dMaterialBucketMemArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(char const*&, void*), void*)
B3dTextureStore::DeleteAndDestroy(unsigned short, unsigned short)
B3dTransformationSet::DeviceToViewCoor(basegfx::B3DPoint const&)
B3dTransformationSet::EyeToDeviceCoor(basegfx::B3DPoint const&)
B3dTransformationSet::GetDeviceRectangle(double&, double&, double&, double&)
B3dTransformationSet::GetMatFromObjectToView()
B3dTransformationSet::SetOrientation(basegfx::B3DHomMatrix&)
B3dTransformationSet::SetRatioMode(Base3DRatio)
B3dTransformationSet::ViewToDeviceCoor(basegfx::B3DPoint const&)
B3dTransformationSet::ViewToWorldCoor(basegfx::B3DPoint const&)
B3dTransformationSet::WorldToObjectCoor(basegfx::B3DPoint const&)
B3dViewport::SetVPN(basegfx::B3DVector const&)
B3dViewport::SetVRP(basegfx::B3DPoint const&)
BITS
Base3D::AddVertex(basegfx::B3DPoint&, basegfx::B3DVector&, basegfx::B2DPoint&)
Base3D::DeleteAllTextures()
Base3D::DeleteTexture(TextureAttributes&)
Base3D::GetShininess(Base3DMaterialMode) const
Base3DOpenGL::SetPhongDivideSize(long)
BasicCheckBox::GetCheckedEntryCount() const
BasicCheckBox::GetSelectEntryPos() const
BasicCheckBox::RemoveEntry(unsigned long)
BasicCheckBox::SelectEntryPos(unsigned long, unsigned char)
BasicDocShell::Execute(SfxRequest&)
BasicDocShell::GetState(SfxItemSet&)
BasicError::BasicError()
BasicIDE::BasicIDE()
BasicIDE::CreateMacro()
BasicIDE::DecBasicDialogCount()
BasicIDE::FindMacro(SbModule*, String const&)
BasicIDE::GetBasicDialogCount()
BasicIDE::IncBasicDialogCount()
BasicIDE::~BasicIDE()
BasicIDEDLL::Exit()
BasicIDEData::InitAccelerator()
BasicIDEShell::BasicIDEShell(SfxViewFrame*, BasicIDEShell const&)
BasicIDEShell::BasicIDEShell(SfxViewFrame*, Window*)
BasicIDEShell::HasBasic() const
BasicIDEShell::LinkStubAccelSelectHdl(void*, void*)
BasicLibInfo::BasicLibInfo(String const&)
BasicLibInfo::Store(SotStorageStream&, String const&, unsigned char)
BasicManager::BasicManager()
BasicManager::ClearErrors()
BasicManager::SetFlagToAllLibs(short, unsigned char) const
BasicToolBox::BasicToolBox(Window*, IDEResId)
BasicTreeListBox::ExpandAllTrees()
BibBookContainer::GetBottomComponentInterface(unsigned char)
BibBookContainer::GetTopComponentInterface(unsigned char)
BibBookContainer::SetBottomComponentInterface(com::sun::star::awt::XWindowPeer*)
BibBookContainer::SetTopComponentInterface(com::sun::star::awt::XWindowPeer*)
BibDataManager::moveRelative(int)
BibDataManager::saveCtrModel(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&)
BibFrameController_Impl::BibFrameController_Impl(com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&)
BibFrameController_Impl::GetDataManager()
BibToolBarListener::GetIndex()
BibToolBarListener::SetCommand(rtl::OUString const&)
BibToolBarListener::SetIndex(unsigned short)
BibWindowContainer::BibWindowContainer(Window*, long)
BigInt::DivMod(BigInt const&, BigInt&)
BitSet::BitSet(Range const&)
BitSet::BitSet(unsigned short*, unsigned short)
Bitmap::Bitmap(SalBitmap*)
Bitmap::GetSourceSizePixel() const
Bitmap::SetSizePixel(Size const&)
BitmapEx::Draw(OutputDevice*, Point const&, Size const&, Point const&, Size const&) const
BitmapEx::Replace(Color const&, Color const&, unsigned long)
BitmapLB::SelectEntryByList(XBitmapList const*, String const&, Bitmap const&)
BitmapReadAccess::Flush()
BitmapReadAccess::ReAccess(unsigned char)
BitmapWriteAccess::DrawPolyPolygon(PolyPolygon const&)
BitmapWriteAccess::GetFillColor() const
BitmapWriteAccess::GetLineColor() const
BitmapWriteAccess::SetFillColor()
BitmapWriteAccess::SetLineColor()
BmpSum::BmpSum()
BmpSum::~BmpSum()
BrowseBox::GetEventWindow() const
BrowseBox::GetHeaderBar() const
BrowseBox::GoToRowAndDoNotModifySelection(long)
BrowseBox::InsertDataColumn(unsigned short, Image const&, String const&, long, unsigned short, unsigned short, String const*)
BrowseBox::InsertDataColumn(unsigned short, Image const&, long, unsigned short, unsigned short)
BrowseBox::IsAllSelected() const
BrowseBox::IsInCommandEvent() const
BrowseBox::NextSelectedColumn() const
BrowseBox::PrevSelectedRow()
BrowseBox::ScrollPages(long)
BrowseBox::SetColumnMode(unsigned short, int)
BrowseBox::SetSelection(MultiSelection const&)
BufferNode::childAt(int) const
Button::Button(Window*, ResId const&)
Button::Button(Window*, long)
Button::GetFocusRect() const
Button::GetModeBitmap(BmpColorMode) const
Button::IsImageDisplayEnabled()
Button::IsTextDisplayEnabled()
ButtonDialog::AddButton(PushButton*, unsigned short, unsigned short, long)
ButtonDialog::ButtonDialog(Window*, ResId const&)
ButtonDialog::GetButtonHelpId(unsigned short) const
ButtonDialog::GetButtonHelpText(unsigned short) const
ButtonDialog::GetButtonText(unsigned short) const
ButtonDialog::SetButtonHelpId(unsigned short, unsigned long)
ByteArr::Append(char)
ByteArr::ByteArr(unsigned char, unsigned char)
ByteArr::Contains(char) const
ByteArr::Insert(unsigned short, char)
ByteArr::Remove(char)
ByteArr::~ByteArr()
ByteChucker::closeOutput()
ByteChucker::flush()
ByteChucker::getLength()
ByteChucker::seek(long)
ByteGrabber::available()
ByteGrabber::closeInput()
ByteGrabber::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
ByteGrabber::skipBytes(int)
ByteString::CreateFromDouble(double)
ByteString::CreateFromFloat(float)
ByteString::EmptyString()
ByteString::Equals(ByteString const&, unsigned short, unsigned short) const
ByteString::EqualsIgnoreCaseAscii(ByteString const&, unsigned short, unsigned short) const
ByteString::EqualsIgnoreCaseAscii(char const*, unsigned short, unsigned short) const
ByteString::GetQuotedToken(unsigned short, ByteString const&, char, unsigned short&) const
ByteString::GetQuotedTokenCount(ByteString const&, char) const
ByteString::Insert(ByteString const&, unsigned short, unsigned short, unsigned short)
ByteString::Match(char const*) const
ByteString::Reverse()
ByteString::SearchChar(char const*, unsigned short) const
ByteString::ToDouble() const
ByteString::ToFloat() const
CCommandd::CCommandd(ByteString&, unsigned long)
CCommandd::CCommandd(char const*, unsigned long)
CGM::CGM(unsigned int)
CGM::CGM(unsigned int, Graphic&)
CGM::ImplDoClass16()
CGM::Write(unsigned char*)
CGMChart::GetFirstTextEntry()
CGMChart::GetTextEntry(unsigned int, unsigned int)
CGMImpressOutAct::ImplGetFrameSet(int, NodeFrameSet&)
CGMOutAct::SetGradientEdge(long)
CNames::Insert(CNames const*, unsigned short, unsigned short)
CNames::Insert(ControlItem const*&, unsigned short&)
CNames::Insert(ControlItem const**, unsigned short)
CNames::Remove(ControlItem const*&, unsigned short)
CNames::Remove(unsigned short, unsigned short)
CRC32::updateByte(signed char)
CachedContentResultSet::applyPositionToOrigin()
Calendar::AddDateInfo(Date const&, String const&, Color const*, Color const*, unsigned short)
Calendar::Calendar(Window*, ResId const&)
Calendar::ClearDateInfo()
Calendar::GetDateInfoText(Date const&)
Calendar::GetDropDate(Date&) const
Calendar::GetSelectDateCount() const
Calendar::RemoveDateInfo(Date const&)
Calendar::SelectDateRange(Date const&, Date const&, unsigned char)
Calendar::SetMinimumNumberOfDaysInWeek(short)
Calendar::SetSaturdayColor(Color const&)
Calendar::SetStandardColor(Color const&)
Calendar::SetSundayColor(Color const&)
Calendar::SetWeekStart(short)
Calendar::ShowDropPos(Point const&, Date&)
CalendarField::CalendarField(Window*, ResId const&)
CalendarWrapper::getMinimumNumberOfDaysForFirstWeek() const
Camera3D::Reset()
Camera3D::Rotate(double, double)
Camera3D::RotateAroundLookAt(double, double)
Camera3D::SetFocalLengthWithCorrect(double)
CertificateExtension_XmlSecImpl::setCertExtn(com::sun::star::uno::Sequence<signed char>, com::sun::star::uno::Sequence<signed char>, unsigned char)
CfgParser::WorkOnRessourceEnd()
CfgStack::Push(CfgStackData*)
CharAttribList::DbgCheckAttribs()
CharAttribList::HasAttrib(unsigned short) const
CharClass::getCharacterDirection(String const&, unsigned short) const
CharClass::isAlpha(String const&) const
CharClass::isAlphaNumeric(String const&) const
CharClass::isAsciiAlphaNumeric(String const&)
CharPosArray::Replace(int const&, unsigned short)
CharPosArray::Replace(int const*, unsigned short, unsigned short)
CharPosArray::_ForEach(unsigned short, unsigned short, unsigned char (*)(int const&, void*), void*)
CloneList::Count() const
CmdBaseStream::GenReturn(unsigned short, SmartId*, unsigned short, unsigned char)
CmdStream::GenCmdFlow(unsigned short, String)
CmdStream::GenCmdFlow(unsigned short, unsigned short)
CmpUS_Impl(void const*, void const*)
CntByteItem::CntByteItem(unsigned short, SvStream&)
CntContentTypeItem::CntContentTypeItem(unsigned short, INetContentType)
CntContentTypeItem::SetPresentation(String const&)
CollatorWrapper::compareSubstring(rtl::OUString const&, int, int, rtl::OUString const&, int, int) const
CollatorWrapper::listCollatorOptions(rtl::OUString const&) const
CollatorWrapper::loadCollatorAlgorithmWithEndUserOption(rtl::OUString const&, com::sun::star::lang::Locale const&, com::sun::star::uno::Sequence<int> const&)
Color::IncreaseContrast(unsigned char)
ColorMixingControl::ColorMixingControl(Window*, long, unsigned short, unsigned short)
ColorMixingControl::SetColumns(unsigned short)
ColorMixingControl::SetRows(unsigned short)
ColorPreviewControl::ColorPreviewControl(Window*, long)
ComboBox::GetEntryPos(void const*) const
ComboBox::GetListPosSizePixel() const
ComboBox::GetMRUEntries(unsigned short) const
ComboBox::GetSeparatorPos() const
ComboBox::GetUserItemSize() const
ComboBox::InsertEntry(String const&, Image const&, unsigned short)
ComboBox::IsDDAutoWidthEnabled() const
ComboBox::IsUserDrawEnabled() const
ComboBox::SetMRUEntries(String const&, unsigned short)
ComboBox::SetSeparatorPos()
ComboBox::SetTopEntry(unsigned short)
CommandExtTextInputData::CommandExtTextInputData()
CommandLine::CommandLine(CommandLine const&, unsigned char)
CommandLine::CommandLine(char const*, unsigned char)
CommandLine::CommandLine(unsigned char)
CommandLine::Print()
CommunicationLinkList::DeleteAndDestroy(unsigned short, unsigned short)
CommunicationLinkList::Insert(CommunicationLink const*&, unsigned short&)
CommunicationLinkList::Insert(CommunicationLink const**, unsigned short)
CommunicationLinkList::Insert(CommunicationLinkList const*, unsigned short, unsigned short)
CommunicationLinkList::Remove(CommunicationLink const*&, unsigned short)
CommunicationManagerClientViaSocket::CommunicationManagerClientViaSocket(ByteString, unsigned long, unsigned char)
Config::EnterLock()
Config::GetLineEnd() const
Config::LeaveLock()
Config::SetLineEnd(LineEnd)
Config::Update()
Config::WriteKey(ByteString const&, String const&, unsigned short)
Container::GetObjectPtr(unsigned long)
Container::GetPos(void const*, unsigned long, unsigned char) const
Container::Insert(void*, void*)
ContextTables::findIndexBin(int)
ContextTables::firstParentWithCode(int, int)
ContextTables::firstParentWithCode2(int, int, int)
ContextTables::firstParentWithCode3(int, int, int)
ContextTables::firstParentWithCode4(int, _STL::vector<int, _STL::allocator<int> > const&)
ContextTables::firstParentWithCode5(int, _STL::vector<int, _STL::allocator<int> > const&)
ContextTables::firstParentWithCode7(int, int, int)
ContextTables::linkName(int)
ContextTables::parentContext(int)
Control::GetLineCount() const
ControlItem::ControlItem(ControlData*)
Convention_A1::MakeColStr(short)
Convention_A1::MakeRowStr(int)
ConvertBrushStyle(Color const&, Color const&, unsigned char)
ConvertIniStringToPosSize(String const&, Point&, Size&)
ConvertMathMLToMath(unsigned short)
ConvertMathToMathType(unsigned short)
ConvertMathTypeToMath(unsigned short)
ConvertPosSizeToIniString(Point const&, Size const&)
ConvertToStore_Impl(String const&)
ConvertValueToMap(long, SfxMapUnit)
ConvertValueToUnit(long, SfxMapUnit)
CppDep::CppDep(ByteString)
CppUnit::NotEqualException::NotEqualException(_STL::basic_string<char, _STL::char_traits<char>, _STL::allocator<char> > const&, _STL::basic_string<char, _STL::char_traits<char>, _STL::allocator<char> > const&, CppUnit::SourceLine const&, _STL::basic_string<char, _STL::char_traits<char>, _STL::allocator<char> > const&)
CppUnit::NotEqualException::actualValue() const
CppUnit::NotEqualException::additionalMessage() const
CppUnit::NotEqualException::expectedValue() const
CreateApplicationServiceManager()
CreateDialogFactory
CreateSdXTextViewCursor(sd::View*)
CreateUnoWrapper
CreateWindow
CurrencyBox::CurrencyBox(Window*, ResId const&)
CurrencyBox::GetValue(unsigned short) const
CurrencyBox::GetValuePos(long) const
CurrencyBox::InsertValue(long, unsigned short)
CurrencyBox::RemoveValue(long)
CurrencyField::CurrencyField(Window*, ResId const&)
CurrencyFormatter::SetCurrencySymbol(String const&)
Cursor::SetHeight(long)
Cursor::SetOffsetY(long)
Cursor::SetSlant(long)
DBSaveData::Clear()
DInfo::GetSection(unsigned char const*)
DInfo::Read()
DXFGroupReader::FillIBuff()
DXFGroupReader::SetI(unsigned short, long)
DXFTables::SearchStyle(char const*) const
DateBox::GetDate(unsigned short) const
DateBox::GetDatePos(Date const&) const
DateBox::InsertDate(Date const&, unsigned short)
DateBox::RemoveDate(Date const&)
DateFormatter::GetRealDate() const
DateFormatter::IsDateModified() const
DateTime::MakeDateTimeFromSec(Date const&, unsigned long)
DaysInMonth(unsigned short, unsigned short, unsigned char)
DbGridControl::IsForceHideScrollbars() const
DbGridControl::SetMultiSelection(unsigned char)
DbGridControl::forceROController(unsigned char)
DbGridControl::forceSyncDisplay()
DbgEndStackTree()
DbgFreeStackTree(void*, unsigned long)
DbgFunc(unsigned short, void*)
DbgGetStackTree(unsigned long)
DbgOut(char const*, unsigned short, char const*, unsigned short)
DbgOutTypef(unsigned short, char const*, ...)
DbgOutf(char const*, ...)
DbgPrintStackTree(void*)
DbgProf(unsigned short, DbgDataType*)
DbgStartStackTree()
DbgXtor(DbgDataType*, unsigned short, void const*, char const* (*)(void const*))
DdeGetPutItem::DdeGetPutItem(DdeItem const&)
DdeTopic::RemoveItem(DdeItem const&)
DecoToolBox::DecoToolBox(Window*, ResId const&)
Decompressor::readNext(int, CompressorIterator&)
DecryptBlockName_Imp(String&)
Deflater::Deflater()
Deflater::Deflater(int)
Deflater::doDeflate(com::sun::star::uno::Sequence<signed char>&)
Deflater::getAdler()
Deflater::setDictionary(com::sun::star::uno::Sequence<signed char> const&)
Deflater::setDictionarySegment(com::sun::star::uno::Sequence<signed char> const&, int, int)
Deflater::setInput(com::sun::star::uno::Sequence<signed char> const&)
Deflater::setStrategy(int)
DeleteOnIdleItems()
DffPropSet::SetPropertyValue(unsigned int, unsigned int) const
Dialog::Dialog(Window*, ResId const&)
Dialog::ImplCenterDialog()
Dialog::IsStartedModal() const
DicEntry::DicEntry()
DicUserData::SetChecked(unsigned char)
DictionaryNeo::isSorted()
DictionaryNeo_CreateInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
Dir::Dir()
Dir::Dir(DirEntry const&, int, int, ...)
Dir::SetSort(int, ...)
DirEntry::ConvertNameToSystem(String const&)
DirEntry::ConvertSystemToName(String const&)
DirEntry::CutRelParents()
DirEntry::GetMaxNameLen(FSysPathStyle)
DirEntry::ImpGetPreTopPtr()
DirEntry::IsLongNameOnFAT() const
DirEntry::IsRFSAvailable()
DirEntry::NameCompare(DirEntry const&) const
DirEntry::ToRel()
DirEntry::ToRel(DirEntry const&)
DlgEdEvtContListenerImpl::DlgEdEvtContListenerImpl()
DlgEdObj::LinkStubOnCreate(void*, void*)
DlgEdPropListenerImpl::DlgEdPropListenerImpl()
DlgEdTransferableImpl::DlgEdTransferableImpl()
DoExportDialog
DockingAreaWindow::ImplData::~ImplData()
DockingManager::IsInPopupMode(Window const*)
DockingWindow::GetMaxOutputSizePixel() const
DockingWindow::ImplData::~ImplData()
DockingWindow::IsTitleButtonVisible(unsigned short) const
DockingWindow::SetTabStop()
DockingWindow::ShowTitleButton(unsigned short, unsigned char)
DocumentCollector::_writeBegin()
DocumentHolder::Hide()
DocumentHolder::SetContainerName(rtl::OUString const&)
DocumentHolder::SetTitle(rtl::OUString const&)
DomBuilderContext::getNode()
DomExport::qualifiedName(com::sun::star::uno::Reference<com::sun::star::xml::dom::XNode> const&)
DosToUnixPath(char*)
DropListBox_Impl::LinkStubOnAsyncExecuteError(void*, void*)
E3dCompoundObject::SetBackMaterial(B3dMaterial const&)
E3dCompoundObject::SetCreateNormals(unsigned char)
E3dCompoundObject::SetCreateTexture(unsigned char)
E3dCompoundObject::SetMaterialAmbientColor(Color const&)
E3dCompoundObject::SetUseDifferentBackMaterial(unsigned char)
E3dCubeObj::SetSideFlags(unsigned short)
E3dLatheObj::ReSegment(unsigned int, unsigned int)
E3dPointObj::E3dPointObj(basegfx::B3DPoint const&)
E3dPolygonObj::E3dPolygonObj(E3dDefaultAttributes&, basegfx::B3DPolyPolygon const&, basegfx::B3DPolyPolygon const&, basegfx::B2DPolyPolygon const&, unsigned char)
E3dPolygonObj::E3dPolygonObj(E3dDefaultAttributes&, basegfx::B3DPolyPolygon const&, basegfx::B3DPolyPolygon const&, unsigned char)
E3dPolygonObj::E3dPolygonObj(E3dDefaultAttributes&, basegfx::B3DPolyPolygon const&, unsigned char)
E3dScene::SetClipping(int)
E3dScene::SetDoubleBuffered(int)
E3dScene::SetFitInSnapRect(int)
E3dScene::SetShadowPlaneDirection(basegfx::B3DVector const&)
E3dSphereObj::ReSegment(unsigned int, unsigned int)
E3dView::HasMarkedScene()
E3dView::MergeScenes()
EECharAttribArray::Replace(EECharAttrib const&, unsigned short)
EECharAttribArray::Replace(EECharAttrib const*, unsigned short, unsigned short)
EECharAttribArray::_ForEach(unsigned short, unsigned short, unsigned char (*)(EECharAttrib const&, void*), void*)
EditDLL::~EditDLL()
EditEngine::CreateFontFromItemSet(SfxItemSet const&)
EditEngine::CursorLeft(ESelection const&, unsigned short) const
EditEngine::CursorRight(ESelection const&, unsigned short) const
EditEngine::EnableIdleFormatter(unsigned char)
EditEngine::EnablePasteSpecial(unsigned char)
EditEngine::GetActiveView() const
EditEngine::GetAvailableSearchOptions()
EditEngine::GetGroupChars() const
EditEngine::IsFirstWordCapitalization() const
EditEngine::IsIdleFormatterEnabled() const
EditEngine::IsParagraphVisible(unsigned short)
EditEngine::IsPasteSpecialEnabled() const
EditEngine::RegisterClipboardFormatName()
EditEngine::SetActiveView(EditView*)
EditEngine::SetGroupChars(String const&)
EditEngine::SetModified()
EditEngine::SetText(unsigned short, EditTextObject const&)
EditEngine::StopSelectionMode()
EditEngine::TransliterateText(ESelection const&, int)
EditEngine::WordLeft(ESelection const&, unsigned short) const
EditEngine::WordRight(ESelection const&, unsigned short) const
EditSelection::DbgIsBuggy(EditDoc&)
EditSelection::IsInvalid() const
EditSelectionEngine::GetCurView()
EditTextObject::Skip(SvStream&)
EditView::CreateTextObject()
EditView::Drop(DropEvent const&)
EditView::GetDropPos()
EditView::GetSelectionMode() const
EditView::GetWordUnderMousePointer() const
EditView::IndentBlock()
EditView::IsPasteEnabled() const
EditView::MatchGroup()
EditView::QueryDrop(DropEvent&)
EditView::SetCursor(Cursor const&)
EditView::SetParaAttribs(SfxItemSet const&, unsigned short)
EditView::SetPointer(Pointer const&)
EditView::UnindentBlock()
ElementCollector::isAbleToNotify() const
ElementCollector::setSecurityId(int)
EntryArray::Remove(unsigned short, unsigned short)
EntryArray::Replace(SvLBoxEntry const*&, unsigned short)
EntryArray::Replace(SvLBoxEntry const**, unsigned short, unsigned short)
EntryArray::_ForEach(unsigned short, unsigned short, unsigned char (*)(SvLBoxEntry const*&, void*), void*)
EntryList_Impl::EntryList_Impl(SvxIconChoiceCtrl_Impl*, unsigned short, unsigned short, unsigned short)
Enumeration::Enumeration(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&)
ErrorHandler::ForwCreateString(ErrorInfo const*, String&, unsigned short&) const
ErrorHandler::warning1(WarningCode, AstDeclaration*)
ErrorHandler::warning2(WarningCode, AstDeclaration*, AstDeclaration*)
EscherEx::SeekBehindRecHeader(unsigned short)
EscherPersistTable::PtReplace(unsigned int, unsigned int)
EscherPropertyContainer::GetCustomShapeType(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, unsigned int&)
ExcBofC8::ExcBofC8()
Exception::Exception()
Exception::Exception(char const*)
ExitProgram()
Explosion::ClearAll()
Export::LanguageAllowed(ByteString const&)
Export::ListExists(ResData*, unsigned short)
Export::UnmergeUTF8(ByteString&)
Export::getCurrentDirectory(rtl::OUString&, rtl::OUString&)
Export::getRandomName(ByteString&)
ExportPPT
ExportWK1::Blank(unsigned short, unsigned short, ScPatternAttr const&)
ExportWK1::WKString(unsigned short, unsigned short, ScFormulaCell const*, ScPatternAttr const&)
ExtName::IsName() const
ExtName::IsOLE() const
ExtSheetBuffer::IsExternal(unsigned short) const
ExtendedMultiLineEdit::ExtendedMultiLineEdit(Window*, IDEResId)
ExtensionsTabPage::ExtensionsTabPage(Window*, ResId const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::awt::XContainerWindowProvider> const&)
ExtensionsTabPage::HideWindow()
ExtraKernInfo::HasKernPairs() const
ExtraPortionInfo::DestroyOrgDXArray()
FSysEnableSysErrorBox(unsigned char)
FadeEffectLB::FadeEffectLB(Window*, long)
FieldToMapUnit(SfxFieldUnit)
FileControl::ResetButtonText()
FileControl::SetButtonText(String const&)
FileCopier::FileCopier()
FileCopier::GetError() const
FileCopier::GetErrorHdl() const
FileCopier::GetErrorSource() const
FileCopier::GetErrorTarget() const
FileCopier::SetErrorHdl(Link const&)
FileDialog::GetCurFilter() const
FileDialog::GetFilterCount() const
FileDialog::GetFilterName(unsigned short) const
FileDialog::RemoveAllFilter()
FileDialog::RemoveFilter(String const&)
FileDialog::SetCancelButtonText(String const&)
FileDialog::SetOkButtonText(String const&)
FileDialog::qt_static_property(QObject*, int, int, QVariant*)
FileDialog::tr(char const*, char const*)
FileDialog::trUtf8(char const*, char const*)
FileHelper::getTempPath()
FileList::GetFormat()
FileStat::FileStat()
FileStat::FileStat(void const*, void const*)
FileStat::HasReadOnlyFlag()
FileStat::QueryDiskSpace(String const&, BigInt&, BigInt&)
FileStat::SetDateTime(String const&, DateTime const&)
FileStream::FileStream(rtl::OString const&, FileAccessMode)
FileStream::getSize()
FillAttrLB::FillAttrLB(Window*, ResId)
FillAttrLB::SelectEntryByList(XBitmapList const*, String const&, Bitmap const&)
FilterConfigCache::FilterConfigCacheEntry::IsValid()
FilterConfigCache::IsImportDialog(unsigned short)
FilterConfigItem::WriteString(rtl::OUString const&, rtl::OUString const&)
FilterWarningDialog_Impl::FilterWarningDialog_Impl(Window*)
FilterWarningDialog_Impl::SetFilterName(String const&)
FixedBitmap::GetModeBitmap(BmpColorMode) const
FixedBitmap::SetModeBitmap(Bitmap const&, BmpColorMode)
FixedBorder::FixedBorder(Window*, long)
FixedBorder::SetBorderType(unsigned short)
FixedBorder::SetTransparent(unsigned char)
FixedImage::CalcImagePos(Point const&, Size const&, Size const&)
FixedImage::GetModeImage(BmpColorMode) const
FloatingWindow::ImplData::~ImplData()
FloatingWindow::RemovePopupModeWindow(Window*)
FmEntryDataArray::DeleteAndDestroy(unsigned short, unsigned short)
FmEntryDataArray::Insert(FmEntryData* const&, unsigned short&)
FmEntryDataArray::Insert(FmEntryData* const*, unsigned short)
FmEntryDataArray::Insert(FmEntryDataArray const*, unsigned short, unsigned short)
FmEntryDataArray::Remove(FmEntryData* const&, unsigned short)
FmFieldWinData::FmFieldWinData()
FmFieldWinData::~FmFieldWinData()
FmFieldWinMgr::GetChildWindowId()
FmFormModel::FmFormModel(SfxItemPool*, SfxObjectShell*, int)
FmFormObj::getType() const
FmGridControl::restored(com::sun::star::lang::EventObject const&)
FmPropBrwMgr::GetChildWindowId()
FmXFilterCell::getImplementation(com::sun::star::uno::Reference<com::sun::star::awt::XControl> const&)
FmXFilterCell_CreateInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
FmXGridPeer_CreateInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
Font::identifyFont(void const*, unsigned int)
FontCharMap::GetLastChar() const
FontInfo::SupportsCJK() const
FontInfo::SupportsCTL() const
FontInfo::SupportsLatin() const
FontList::GetFontNameType(String const&) const
FontSizeBox::GetValue(unsigned short, FieldUnit) const
FontSizeBox::SetUserValue(long, FieldUnit)
FontStyleBox::FontStyleBox(Window*, long)
FontStyleMenu::Fill(String const&, FontList const*)
FontStyleMenu::FontStyleMenu()
FormattedField::SetValidateText(String const&, String const*)
FormatterBase::SetFieldText(String const&, unsigned char)
Formula::makeDelimeter(Node*)
Formula::makeOperator(Node*)
Formula::makeUnderOver(Node*)
Fraction::Fraction(long, long, long, long)
FuncData::Advice(void (*)(double&, void*))
GDIMetaFile::GetActionPos(String const&)
GDIMetaFile::GetLabel(unsigned long)
GDIMetaFile::GetLabelCount() const
GDIMetaFile::InsertLabel(String const&, unsigned long)
GDIMetaFile::IsEqual(GDIMetaFile const&) const
GDIMetaFile::Play(GDIMetaFile&, unsigned long)
GDIMetaFile::RemoveLabel(String const&)
GDIMetaFile::RenameLabel(String const&, String const&)
GDIMetaFile::ReplaceColors(Color const&, Color const&, unsigned long)
GDIMetaFile::Wind(unsigned long)
GDIMetaFile::WindNext()
GHEditWindow::Clear()
Gallery::CreateImportTheme(INetURLObject const&, String const&)
GalleryExplorer::DrawCentered(OutputDevice*, FmFormModel const&)
GalleryExplorer::GetObjCount(unsigned long)
GalleryExplorer::GetVCDrawModel(FmFormModel&) const
GalleryExplorer::InsertGraphicObj(unsigned long, Graphic const&)
GalleryExplorer::InsertSdrObj(unsigned long, FmFormModel&)
Gamma(double)
GammaN(double, unsigned int)
GconfBackend::notifyListeners(rtl::OUString const&)
GenericInformation::InsertSubInfo(ByteString const&, ByteString const&, unsigned char, unsigned char)
GenericInformation::InsertSubInfo(GenericInformation*)
GenericInformation::RemoveSubInfo(GenericInformation*, unsigned char)
GeometryIndexValueBucket::GeometryIndexValueBucket()
GeometryIndexValueBucket::ImplAppend()
GeometryIndexValueBucket::ImplRemove()
GeometryIndexValueBucketMemArr::Replace(char const*&, unsigned short)
GeometryIndexValueBucketMemArr::Replace(char const**, unsigned short, unsigned short)
GeometryIndexValueBucketMemArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(char const*&, void*), void*)
GetBServerRoot()
GetDictionaryList()
GetDistance(_STL::vector<com::sun::star::beans::PropertyValue, _STL::allocator<com::sun::star::beans::PropertyValue> >&, rtl::OUString const&, xmloff::EnhancedCustomShapeToken::EnhancedCustomShapeTokenEnum)
GetEnv(char const*, char const*)
GetFILTER_TEXT()
GetFunctionCount
GetFunctionData
GetIniRoot()
GetInt32(SdrCustomShapeGeometryItem&, rtl::OUString const&, int)
GetLineType(unsigned short)
GetMapFactor(FieldUnit, MapUnit)
GetMapFactor(MapUnit, FieldUnit)
GetOpt::hasVars()
GetParameterDescription
GetPictureFilename(char const*)
GetPoint(SdrCustomShapeGeometryItem&, rtl::OUString const&, com::sun::star::awt::Point const&)
GetRegularExpression_Impl(String const&)
GetSSCommon()
GetSSolarIni()
GetSchnittBit(unsigned char)
GetSpecialCharsForEdit
GetTextLines(OutputDevice*, Rectangle const&, String const&, unsigned short, long*)
GetTokenChar(unsigned short, unsigned char)
GetVersionInfo
GlobalEventConfig_Impl::getEvents()
GlyphCache::CalcByteCount() const
GlyphCache::ClearFontPath()
GlyphCache::LoadFonts()
Gradient::Gradient(GradientStyle)
GradientLB::GradientLB(Window*, long, unsigned char)
GraphCtrl::GetStringFromDouble(double const&)
GraphCtrl::GraphCtrl(Window*, long)
Graphic::Draw(OutputDevice*, String const&, Font&, Bitmap const&, Point const&, Size const&)
Graphic::GetGraphicsCompressMode(SvStream&)
Graphic::GetUnlimitedBitmapEx(Size const*) const
Graphic::StartAnimation(OutputDevice*, Point const&, long, OutputDevice*)
Graphic::WriteEmbedded(SvStream&)
GraphicConverter::ImplConvert(unsigned long, void*, unsigned long, void**, unsigned long)
GraphicDescriptor::GetRequestedByteCount() const
GraphicDescriptor::GraphicDescriptor(String const*)
GraphicDescriptor::IsDataReady() const
GraphicDescriptor::IsWideSearch() const
GraphicDescriptor::SetRequestHdl(Link const&)
GraphicExport
GraphicFilter::DoExportDialog(Window*, unsigned short)
GraphicFilter::GetExportOSFileType(unsigned short)
GraphicFilter::GetImportOSFileType(unsigned short)
GraphicFilter::HasExportDialog(unsigned short)
GraphicFilter::Setup(unsigned short)
GraphicImport
GraphicManager::ClearCache()
GraphicManager::GetCacheTimeout() const
GraphicManager::GetFreeCacheSize() const
GraphicManager::GetMaxCacheSize() const
GraphicManager::GetMaxObjCacheSize() const
GraphicManager::GetUsedCacheSize() const
GraphicObject::GetAnimationInfoList() const
GraphicObject::GetChecksum() const
GraphicObject::GetSwapStreamHdl() const
GraphicObject::GraphicObject(Graphic const&, String const&, GraphicManager const*)
GraphicObject::ResetAnimationLoopCount()
GraphicObject::SetAnimationNotifyHdl(Link const&)
GraphicObject::SetGraphicManager(GraphicManager const&)
GraphicObject::SwapIn(SvStream*)
GraphicReader::IsPreviewModeEnabled() const
GridWindow::drawPoint(double, double)
GroupTable::SkipCurrentGroup()
GtkSalFrame::IMHandler::setInputContext(SalInputContext*)
Guess::GetOrder()
Guess::Guess(_STL::basic_string<char, _STL::char_traits<char>, _STL::allocator<char> >&, _STL::basic_string<char, _STL::char_traits<char>, _STL::allocator<char> >&, _STL::basic_string<char, _STL::char_traits<char>, _STL::allocator<char> >&, int)
HBox::HBox()
HIGHEST_BIT
HTMLControls::Insert(HTMLControl const*&, unsigned short&)
HTMLControls::Insert(HTMLControl const**, unsigned short)
HTMLControls::Insert(HTMLControls const*, unsigned short, unsigned short)
HTMLControls::Remove(HTMLControl const*&, unsigned short)
HTMLControls::Remove(unsigned short, unsigned short)
HWPFile::Close()
HWPFile::Flush()
HWPFile::GetFileName() const
HWPFile::GetFontCount(int)
HWPFile::GetFontName(int, int)
HWPFile::GetPaperKind() const
HWPFile::GetPaperOrientation() const
HWPFile::GetPaperSize(int&, int&) const
HWPFile::HWPFile(HStream&)
HWPFile::IsCompressedFile() const
HWPInfo::PageEditLen()
HWPInfo::PageEditWid()
HWPPara::GetLineInfo(int)
HasDocumentValidSignature(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
Hatch::SetStyle(HatchStyle)
HatchingLB::HatchingLB(Window*, long, unsigned char)
HatchingLB::SelectEntryByList(XHatchList const*, String const&, XHatch const&, unsigned short)
HeaderBar::GetItemData(unsigned short) const
HeaderBar::GetItemImage(unsigned short) const
HeaderBar::SetHelpId(unsigned short, unsigned long)
HeaderBar::SetItemData(unsigned short, void*)
HeaderBar::SetItemImage(unsigned short, Image const&)
HeaderFooterEntry::GetMaskForInstance(unsigned int)
HeaderFooterEntry::~HeaderFooterEntry()
Help::IsExtHelpActive()
Help::IsExtHelpEnabled()
Help::StartContextHelp()
HelpInterceptor_Impl::SetStartURL(String const&)
HelpTextWindow::RegisterAccessibleParent()
HelpTextWindow::RevokeAccessibleParent()
HighlightPortions::Remove(unsigned short, unsigned short)
HighlightPortions::Replace(HighlightPortion const&, unsigned short)
HighlightPortions::Replace(HighlightPortion const*, unsigned short, unsigned short)
HighlightPortions::_ForEach(unsigned short, unsigned short, unsigned char (*)(HighlightPortion const&, void*), void*)
HtmlErrorContext::SetContext(unsigned short)
HttpRequest::Abort()
HttpRequest::GetStatus()
HttpRequest::~HttpRequest()
Hunspell::analyze(char***, char const*)
Hunspell::get_csconv()
Hunspell::get_forbidden_compound()
Hunspell::get_prevcompound()
Hunspell::get_prevroot()
Hunspell::get_utf_conv()
Hunspell::get_version()
Hunspell::get_wordchars()
Hunspell::get_wordchars_utf16(int*)
Hunspell::mkallcap2(char*, w_char*, int)
Hunspell::morph_with_correction(char const*)
Hunspell::stem(char***, char const*)
Hunspell::suggest_auto(char***, char const*)
Hunspell::suggest_pos_stems(char***, char const*)
HwpReader::makeCompose(Compose*)
HwpReader::makeFixedSpace(FixedSpace*)
HwpReader::makeHeaderFooter(HeaderFooter*)
HwpReader::makeHyphen(Hyphen*)
HwpReader::makeKeepSpace(KeepSpace*)
HwpReader::makeNewNum(NewNum*)
HwpReader::makePageNumCtrl(PageNumCtrl*)
HwpReader::makePictureOLE(Picture*)
IMServerKinput2()
IMapObject::GetLogPoint(Point const&)
IMapObject::GetPixelPoint(Point const&)
IMapWindow::GetSdrObj(IMapObject const*) const
INetContentTypes::GetExtension(String const&)
INetContentTypes::MapStringToContentType(String const&)
INetContentTypes::Uninitialize()
INetContentTypes::appendUSASCIIParameter(ByteString const&, ByteString const&, ByteString const&)
INetContentTypes::appendUSASCIIParameter(String const&, String const&, String const&)
INetIStream::Decode64(SvStream&, SvStream&)
INetIStream::Encode64(SvStream&, SvStream&)
INetMIME::decodeUTF8(ByteString const&, unsigned short)
INetMIME::equalIgnoreCase(char const*, char const*, char const*, char const*)
INetMIME::getBase64Digit(int)
INetMIME::getCharsetEncoding(unsigned short const*, unsigned short const*)
INetMIME::scanAtom(char const*, char const*)
INetMIME::scanAtom(unsigned short const*, unsigned short const*)
INetMIME::scanQuotedBlock(char const*, char const*, unsigned int, unsigned int, unsigned long&, bool&)
INetMIME::scanUnsignedHex(char const*&, char const*, bool, unsigned int&)
INetMIME::scanUnsignedHex(unsigned short const*&, unsigned short const*, bool, unsigned int&)
INetMIME::skipLinearWhiteSpace(char const*, char const*)
INetMIME::writeDateTime(INetMIMEOutputSink&, DateTime const&)
INetMIME::writeHeaderFieldBody(INetMIMEOutputSink&, INetMIME::HeaderFieldType, ByteString const&, unsigned short, bool)
INetMIMEMessage::DetachChild(unsigned long, INetMIMEMessage&) const
INetMIMEMessage::SetContentDescription(String const&)
INetMIMEMessage::SetContentID(String const&)
INetMessage::SetHeaderField(String const&, String const&, unsigned long)
INetMessageHeaderIterator::INetMessageHeaderIterator(INetMessage const&, String const&)
INetRFC822Message::GenerateDateField(DateTime const&, String&)
INetRFC822Message::SetBCC(String const&)
INetRFC822Message::SetCC(String const&)
INetRFC822Message::SetComments(String const&)
INetRFC822Message::SetDate(String const&)
INetRFC822Message::SetFrom(String const&)
INetRFC822Message::SetInReplyTo(String const&)
INetRFC822Message::SetKeywords(String const&)
INetRFC822Message::SetMessageID(String const&)
INetRFC822Message::SetReferences(String const&)
INetRFC822Message::SetReplyTo(String const&)
INetRFC822Message::SetReturnPath(String const&)
INetRFC822Message::SetReturnReceiptTo(String const&)
INetRFC822Message::SetSender(String const&)
INetRFC822Message::SetSubject(String const&)
INetRFC822Message::SetTo(String const&)
INetRFC822Message::SetXMailer(String const&)
INetURLHistory_Impl::heapsort(INetURLHistory_Impl::hash_entry*, unsigned short)
INetURLHistory_Impl::~INetURLHistory_Impl()
INetURLObject::CutName(INetURLObject::DecodeMechanism, unsigned short)
INetURLObject::GetHostPort(INetURLObject::DecodeMechanism, unsigned short)
INetURLObject::HasMsgId() const
INetURLObject::createFragment(rtl::OUString const&)
INetURLObject::encodeHostPort(rtl::OUString const&, bool, INetURLObject::EncodeMechanism, unsigned short)
INetURLObject::getFTPType() const
INetURLObject::getIMAPUID() const
INetURLObject::hasPassword() const
INetURLObject::makeAuthCanonic()
INetURLObject::makePortCanonic()
IcnGridMap_Impl::OccupyGrids(Rectangle const&, unsigned char)
IconChoiceDialog::AddTabPage(unsigned short, String const&, Image const&, IconChoicePage* (*)(Window*, SfxItemSet const&), unsigned short* (*)(), unsigned char, unsigned long)
IconChoiceDialog::CreateIconTextAutoMnemonics()
IconChoiceDialog::FillOutputItemSet()
IconChoiceDialog::GetOutputItemSet(unsigned short)
IconChoiceDialog::RemoveResetButton()
IconChoiceDialog::RemoveTabPage(unsigned short)
IconChoiceDialog::SetCtrlColor(Color const&)
IconChoicePage::GetExchangeItem(SfxItemSet const&, unsigned short)
ImageAryData::ImageAryData()
ImageButton::ImageButton(unsigned short)
ImageConsumer::GetData(BitmapEx&) const
ImageConsumer::GetStatus() const
ImageControl::GetModeBitmap(BmpColorMode) const
ImageControl::SetModeBitmap(BitmapEx const&, BmpColorMode)
ImageList::Clear()
ImageList::GetImageIds(_STL::vector<unsigned short, _STL::allocator<unsigned short> >&) const
ImageList::RemoveImage(rtl::OUString const&)
ImageList::ReplaceImage(rtl::OUString const&, rtl::OUString const&)
ImageMap::GetBoundRect() const
ImageProducer::SetImage(Graphic const&)
ImpATan2(short, short)
ImpBitmap::ImplDestroy()
ImpCartToPolar(short, short, Fix&, unsigned short&)
ImpDefaultMapper::ImpDefaultMapper(com::sun::star::uno::Reference<com::sun::star::beans::XPropertyState>&)
ImpEditEngine::CursorEndOfParagraph(EditPaM const&)
ImpEditEngine::CursorStartOfParagraph(EditPaM const&)
ImpEditEngine::Repeat(EditView*)
ImpEditEngine::WriteHTML(SvStream&, EditSelection)
ImpEditView::CalcSelectedRegion()
ImpGetDefaultFontsLanguage(SvxFontItem&, SvxFontItem&, SvxFontItem&)
ImpIcnCursor::ExpandGrid()
ImpMultBig2(FixCpx const&, FixCpx const&)
ImpPolarToCart(Fix const&, unsigned short, short&, short&)
ImpRemap3DDepth::~ImpRemap3DDepth()
ImpSdrGDIMetaFileImport::DoAction(MetaPixelAction&)
ImpSdrGDIMetaFileImport::DoAction(MetaPointAction&)
ImpSdrHdcMerk::ImpSdrHdcMerk(OutputDevice const&, unsigned short, int)
ImpSdrHdcMerk::Restore(OutputDevice&, unsigned short) const
ImpSdrHdcMerk::~ImpSdrHdcMerk()
ImpSvMEdit::SetInsertMode(unsigned char)
ImpSvMEdit::SetTextWindowOffset(Point const&)
ImpSvtData::~ImpSvtData()
ImpTextPortionHandler::DrawFitText(XOutputDevice&, Point const&, Fraction const&)
ImplBorderWindow::ImplBorderWindow(Window*, long, unsigned short, com::sun::star::uno::Any const&)
ImplBorderWindow::SetHelpButton(unsigned char)
ImplColorMapper::~ImplColorMapper()
ImplDevFontList::GetFallback(int) const
ImplDevFontList::HasFallbacks() const
ImplDevFontList::SetFallbacks(ImplDevFontListData**, int)
ImplDllArr::DeleteAndDestroy(unsigned short, unsigned short)
ImplDllArr::Insert(ByteString* const&, unsigned short&)
ImplDllArr::Insert(ByteString* const*, unsigned short)
ImplDllArr::Insert(ImplDllArr const*, unsigned short, unsigned short)
ImplDllArr::Remove(ByteString* const&, unsigned short)
ImplDockingWindowWrapper::GetFloatingPos() const
ImplDockingWindowWrapper::GetMaxOutputSizePixel() const
ImplDockingWindowWrapper::GetMinOutputSizePixel() const
ImplDockingWindowWrapper::GetOutputSizePixel() const
ImplDockingWindowWrapper::GetRollUpOutputSizePixel() const
ImplDockingWindowWrapper::IsPined() const
ImplDockingWindowWrapper::IsRollUp() const
ImplDockingWindowWrapper::IsTitleButtonVisible(unsigned short) const
ImplDockingWindowWrapper::Pin()
ImplDockingWindowWrapper::PopupModeEnd()
ImplDockingWindowWrapper::Roll()
ImplDockingWindowWrapper::RollDown()
ImplDockingWindowWrapper::RollUp()
ImplDockingWindowWrapper::SetFloatingPos(Point const&)
ImplDockingWindowWrapper::SetOutputSizePixel(Size const&)
ImplDockingWindowWrapper::SetPin(unsigned char)
ImplDockingWindowWrapper::SetRollUpOutputSizePixel(Size const&)
ImplEESdrWriter::MapRect(ImplEESdrObject&)
ImplEntryList::IsEntrySelected(String const&) const
ImplFindWindow(SalFrame const*, Point&)
ImplFontCharMap::GetGlyphIndex(unsigned int)
ImplGet1ByteUnicodeTab(unsigned short)
ImplImageBmp::ColorTransform(BmpColorMode)
ImplImageBmp::Create(long, long, unsigned short)
ImplImageBmp::Expand(unsigned short)
ImplImageBmp::GetBitmapEx(unsigned short, unsigned short*) const
ImplImageBmp::Invert()
ImplImageBmp::Replace(unsigned short, BitmapEx const&)
ImplImageBmp::Replace(unsigned short, ImplImageBmp const&, unsigned short)
ImplImageBmp::Replace(unsigned short, unsigned short)
ImplImageBmp::ReplaceColors(Color const*, Color const*, unsigned long)
ImplImageList::GetImageCount() const
ImplListBox::GetEntryFlags(unsigned short) const
ImplRegionBand::IsInside(long, long)
ImplRegionBand::IsOver(long, long)
ImplRemoteControl::GetReturnStream()
ImplSvEditObjectProtocol::ClassInvariant() const
ImplSvEditObjectProtocol::SetTopUIActiveClient(unsigned char, unsigned char)
ImplTaskBarFloat::ImplTaskBarFloat(TaskBar*)
ImplWin::GetModeImage(BmpColorMode) const
ImplWin::SetModeImage(Image const&, BmpColorMode)
ImplWritePoly(SvStream&, Polygon const&)
ImplXMLShapeExportInfo::~ImplXMLShapeExportInfo()
ImportCGM
ImportExcel::Password()
IndexAccessor::clear()
Inflater::doInflate(com::sun::star::uno::Sequence<signed char>&)
Inflater::finish()
Inflater::getAdler()
Inflater::getRemaining()
Inflater::getTotalIn()
Inflater::getTotalOut()
Inflater::needsInput()
Inflater::reset()
Inflater::setDictionary(com::sun::star::uno::Sequence<signed char> const&)
Inflater::setDictionarySegment(com::sun::star::uno::Sequence<signed char> const&, int, int)
Inflater::setInputSegment(com::sun::star::uno::Sequence<signed char> const&, int, int)
InformationParser::Execute(Dir&, GenericInformationList*)
InformationParser::Execute(SvMemoryStream&, GenericInformationList*)
InformationParser::GetErrorCode()
InformationParser::GetErrorText()
InformationParser::Save(SvMemoryStream&, GenericInformationList const*)
IniManager::IniManager(ByteString&)
IniManager::IniManager(ByteString&, ByteString&)
InputFile(char const*, char const*)
InsCapOptArr::Insert(InsCapOptArr const*, unsigned short, unsigned short)
InsCapOptArr::Insert(InsCaptionOpt* const&, unsigned short&)
InsCapOptArr::Insert(InsCaptionOpt* const*, unsigned short)
InsCapOptArr::Remove(InsCaptionOpt* const&, unsigned short)
InsCapOptArr::Remove(unsigned short, unsigned short)
Interceptor::dispose()
InternalResMgr::GetBitmapStream(unsigned int)
IntlWrapper::ImplNewCalendar() const
IntlWrapper::ImplNewCharClass() const
IntroWindow_Impl::IntroWindow_Impl(Bitmap const&)
IntroWindow_Impl::Slide()
IsFormComponentList(SdrMarkList const&)
IsJavaInstalled_Impl()
IsPointInsidePoly(PolyPolygon const&, Point const&)
IsRectTouchesLine(PolyPolygon const&, Rectangle const&)
ItemList::FindAttrib(unsigned short)
JavaChildWindow::JavaChildWindow(Window*, ResId const&)
JavaChildWindow::JavaChildWindow(Window*, long)
JavaChildWindow::getParentWindowHandleForJava()
JavaScriptDisableQueryBox_Impl::JavaScriptDisableQueryBox_Impl(Window*)
Java_com_sun_star_beans_LocalOfficeWindow_getNativeWindow
Java_com_sun_star_beans_LocalOfficeWindow_getNativeWindowSystemType
Java_com_sun_star_bridges_jni_1uno_JNI_1info_1holder_finalize(__complex)
Java_com_sun_star_bridges_jni_1uno_JNI_1proxy_finalize(__complex)
Java_com_sun_star_comp_beans_LocalOfficeWindow_getNativeWindowSystemType
Java_com_sun_star_comp_helper_Bootstrap_cppuhelper_1bootstrap
Java_com_sun_star_comp_helper_RegistryServiceFactory_createRegistryServiceFactory
Java_com_sun_star_comp_helper_SharedLibraryLoader_component_1getFactory
Java_com_sun_star_comp_helper_SharedLibraryLoader_component_1writeInfo
Java_com_sun_star_lib_connections_pipe_PipeConnection_closeJNI
Java_com_sun_star_lib_connections_pipe_PipeConnection_createJNI
Java_com_sun_star_lib_connections_pipe_PipeConnection_flushJNI
Java_com_sun_star_lib_connections_pipe_PipeConnection_readJNI
Java_com_sun_star_lib_connections_pipe_PipeConnection_writeJNI
Java_com_sun_star_lib_uno_environments_remote_NativeThreadPool_attach
Java_com_sun_star_lib_uno_environments_remote_NativeThreadPool_create
Java_com_sun_star_lib_uno_environments_remote_NativeThreadPool_destroy
Java_com_sun_star_lib_uno_environments_remote_NativeThreadPool_detach
Java_com_sun_star_lib_uno_environments_remote_NativeThreadPool_dispose
Java_com_sun_star_lib_uno_environments_remote_NativeThreadPool_enter
Java_com_sun_star_lib_uno_environments_remote_NativeThreadPool_putJob
Java_com_sun_star_lib_uno_environments_remote_NativeThreadPool_threadId
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_close
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_getFilePointer
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_length
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_openStream
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_readInt
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_read__Ljava_lang_String_2Ljava_lang_String_2
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_read__Ljava_lang_String_2Ljava_lang_String_2_3BII
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_seek
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_write
Java_com_sun_star_sdbcx_comp_hsqldb_NativeStorageAccess_writeInt
Java_com_sun_star_sdbcx_comp_hsqldb_StorageFileAccess_isStreamElement
Java_com_sun_star_sdbcx_comp_hsqldb_StorageFileAccess_removeElement
Java_com_sun_star_sdbcx_comp_hsqldb_StorageFileAccess_renameElement
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeInputStream_available
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeInputStream_close
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeInputStream_openStream
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeInputStream_read__Ljava_lang_String_2Ljava_lang_String_2
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeInputStream_read__Ljava_lang_String_2Ljava_lang_String_2_3B
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeInputStream_read__Ljava_lang_String_2Ljava_lang_String_2_3BII
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeInputStream_skip
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeOutputStream_close
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeOutputStream_flush
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeOutputStream_openStream
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeOutputStream_sync
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeOutputStream_write__Ljava_lang_String_2Ljava_lang_String_2I
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeOutputStream_write__Ljava_lang_String_2Ljava_lang_String_2_3B
Java_com_sun_star_sdbcx_comp_hsqldb_StorageNativeOutputStream_write__Ljava_lang_String_2Ljava_lang_String_2_3BII
KernGlyphs
KeyCode::GetSymbolName(String const&, Window*) const
KeyboardSettings::CopyData()
LangConfigItem_Impl::LangConfigItem_Impl(rtl::OUString const&, rtl::OUString const&)
LibInfoItem::LibInfoItem()
LibInfoKey::LibInfoKey()
Line::Enum(Link const&)
Line::NearestPoint(Point const&) const
LineLB::SelectEntryByList(XDashList const*, String const&, XDash const&, unsigned short)
LineListBox::LineListBox(Window*, long)
LinguMgr::UpdateAll()
LinkStructArr::DeleteAndDestroy(unsigned short, unsigned short)
ListBox::CalcWindowSizePixel(unsigned short) const
ListBox::GetMRUEntries(unsigned short) const
ListBox::GetMaxMRUCount() const
ListBox::GetSeparatorPos() const
ListBox::GetUserItemSize() const
ListBox::IsDDAutoWidthEnabled() const
ListBox::IsUserDrawEnabled() const
ListBox::SetMRUEntries(String const&, unsigned short)
ListBox::SetMaxMRUCount(unsigned short)
ListBox::SetSeparatorPos()
LngSvcMgr::RemoveLngSvcEvtBroadcaster(com::sun::star::uno::Reference<com::sun::star::linguistic2::XLinguServiceEventBroadcaster> const&)
LngSvcMgr::SetAvailableCfgServiceLists(LinguDispatcher&, SvcInfoArray const&)
LocaleDataWrapper::getCollatorImplementations() const
LocaleDataWrapper::getTransliterations() const
LongCurrencyBox::GetValue(unsigned short) const
LongCurrencyBox::GetValuePos(BigInt) const
LongCurrencyBox::InsertValue(BigInt, unsigned short)
LongCurrencyBox::LongCurrencyBox(Window*, ResId const&)
LongCurrencyBox::RemoveValue(BigInt)
LongCurrencyField::ImplLoadRes(ResId const&)
LongCurrencyField::LongCurrencyField(Window*, ResId const&)
LongCurrencyFormatter::Denormalize(BigInt) const
LongCurrencyFormatter::IsValueModified() const
LongCurrencyFormatter::Normalize(BigInt) const
LongCurrencyFormatter::SetEmptyValue()
LotusConverterBase::Reset(int)
LotusConverterBase::Reset(int, ScAddress const&)
METWriter::METArc(Point, Point, Point)
METWriter::METArcAtCurPos(Point, Point)
MSDffImportRecords::Insert(MSDffImportRecords const*, unsigned short, unsigned short)
MSDffImportRecords::Insert(SvxMSDffImportRec* const&, unsigned short&)
MSDffImportRecords::Insert(SvxMSDffImportRec* const*, unsigned short)
MSDffImportRecords::Remove(SvxMSDffImportRec* const&, unsigned short)
MSDffImportRecords::Remove(unsigned short, unsigned short)
MSFilterTracer::EndElement(rtl::OUString const&)
MSFilterTracer::SetProperty(rtl::OUString const&, com::sun::star::uno::Any const&)
MSFilterTracer::StartElement(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList>)
MachineSettings::CopyData()
MacroOptionsDialog::MacroOptionsDialog(Window*, SbxVariable*)
MacroOrganizer(short)
MacroParser(RscFileInst&)
MacroRecorder::GetParentWithID(Window*)
MakeDefineName(ByteString const&)
MakeObjectShellForOrganizer_Impl(String const&, unsigned char)
MakeVariable(StarBASIC*, SbxObject*, char const*, unsigned int, SbxDataType, SbxClassType)
MapCommandGroupToGroupID(short)
MaskSet::MaskSet(SvxBmpMask*, long)
Menu::ConvertPoint(Point&, Window*) const
Menu::GetAccessibleDescription(unsigned short) const
Menu::GetDisplayItemId(long) const
Menu::GetDisplayText() const
Menu::GetItemImageAngle(unsigned short) const
Menu::GetItemImageMirrorMode(unsigned short) const
Menu::GetItemStartEnd(unsigned short) const
Menu::GetLineCount() const
Menu::GetLogo() const
Menu::IsItemVisible(unsigned short) const
Menu::SetAccessibleDescription(unsigned short, String const&)
Menu::SetLogo()
Menu::SetLogo(MenuLogo const&)
Menu::doLazyDelete()
MenuBar::ShowFloatButton(unsigned char)
MenuBar::ShowHideButton(unsigned char)
MenuItemList::GetCharClass() const
MenuMENU_CLIENT::MenuMENU_CLIENT(ResId const&, unsigned char)
MergeDataFile::Dump()
MergeDataFile::WriteError(ByteString const&)
MessBox::GetModeImage(BmpColorMode) const
MessBox::MessBox(unsigned short)
MessBox::SetDefaultCheckBoxText()
MessBox::SetModeImage(Image const&, BmpColorMode)
MetaCommentAction::MetaCommentAction(unsigned char const*, unsigned int)
MetricBox::RemoveValue(long, FieldUnit)
MetricField::ConvertValue(long, unsigned short, FieldUnit, MapUnit)
MirrorPoly(PolyPolygon&, Point const&, Point const&)
MirrorRect(Rectangle&, Point const&, Point const&, int)
MirrorXPoly(XPolyPolygon&, Point const&, Point const&)
MiscSettings::SetDisablePrinting(unsigned char)
MiscSettings::SetEnableATToolSupport(unsigned char)
ModalityFilter::ModalityFilter(unsigned long)
ModulWindow::LinkStubBasicErrorHdl(void*, void*)
MoreButton::RemoveWindow(Window*)
MoveXPoly(XPolyPolygon&, Size const&)
MsLangId::convertIsoByteStringToLanguage(rtl::OString const&, char)
MsLangId::convertLocaleToLanguageWithFallback(com::sun::star::lang::Locale const&)
MsLangId::getFallbackLanguage(unsigned short)
MsLangId::getRealLanguageWithoutConfig(unsigned short)
MsLangId::getReplacementForObsoleteLanguage(unsigned short)
MultiLineEdit::GetHScrollBar() const
MultiLineEdit::GetLeftMargin() const
MultiLineEdit::GetTextLines() const
MultiLineEdit::IsFocusSelectionHideEnabled() const
MultiLineEdit::IsRightToLeft() const
MultiPropertySetHelper::MultiPropertySetHelper(rtl::OUString const*)
MultiSelection::Append(long)
MzString::MzString(MzString const*)
MzString::MzString(char const*)
MzString::MzString(char const*, int)
MzString::MzString(int)
MzString::append(char)
MzString::c_str() const
MzString::chop(int)
MzString::empty() const
MzString::length() const
NPP_Destroy
NPP_DestroyStream
NPP_GetMIMEDescription
NPP_GetValue
NPP_Initialize
NPP_New
NPP_NewStream
NPP_Print
NPP_SetWindow
NPP_Shutdown
NPP_StreamAsFile
NPP_URLNotify
NPP_Write
NPP_WriteReady
NWPixmapCache::~NWPixmapCache()
NameBuffer::Find(char const*, unsigned short&)
NameBuffer::Reset()
NameNode::IsOrderTree() const
NameTranslator_Impl::NameTranslator_Impl()
NameTranslator_Impl::UpdateTranslationTable()
NativeNumberWrapper::isValidNatNum(com::sun::star::lang::Locale const&, short) const
NeverRunsEver()
NfCurrencyEntry::ApplyVariableInformation(NfCurrencyEntry const&)
NfCurrencyEntry::IsEuro() const
NfCurrencyEntry::NfCurrencyEntry()
NfCurrencyEntry::SetEuro()
NfShCurrencyEntries::DeleteAndDestroy(unsigned short, unsigned short)
NoChaos::ReleaseItemPool()
NotificationSettings::CopyData()
NumberFormatCodeWrapper::getDefault(short, short) const
NumericBox::GetValue(unsigned short) const
NumericBox::GetValuePos(long) const
NumericBox::RemoveValue(long)
NumericFormatter::ConvertToFraction(long)
NumericFormatter::ConvertToLong(Fraction const&)
OChildCommitListen_Impl::OChildCommitListen_Impl(SfxBaseModel&)
OChildCommitListen_Impl::OwnerIsDisposed()
OInputSeekStream::OInputSeekStream(OWriteStream_Impl&, com::sun::star::uno::Reference<com::sun::star::io::XStream>, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, short)
OInputSeekStream::OInputSeekStream(com::sun::star::uno::Reference<com::sun::star::io::XStream>, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, short)
OInstanceProvider::OInstanceProvider(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
OLEObjCache::SetSize(unsigned long)
OOo2OasisTransformer::getImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface>)
OP_Text(SvStream&, unsigned short)
ORegKey::ORegKey()
ORegKey::closeSubKeys(void**, unsigned int)
ORegistry::countSubKeys(ORegKey*)
ORegistry::createLink(void*, rtl::OUString const&, rtl::OUString const&)
ORegistry::isKeyOpen(rtl::OUString const&) const
OUStringsSort_Impl::Insert(OUStringsSort_Impl const*, unsigned short, unsigned short)
OUStringsSort_Impl::Insert(rtl::OUString* const&, unsigned short&)
OUStringsSort_Impl::Insert(rtl::OUString* const*, unsigned short)
OUStringsSort_Impl::Remove(rtl::OUString* const&, unsigned short)
OUStringsSort_Impl::Remove(unsigned short, unsigned short)
Oasis2OOoTransformer::getImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface>)
Octree::AddColor(BitmapColor const&)
Octree::Octree(unsigned long)
OffSetAccumulator<unsigned int, unsigned short>::offset()
OffSetAccumulator<unsigned short, unsigned int>::offset()
OleEmbeddedObject::CreateOleComponentAndLoad_Impl(OleComponent*)
OleEmbeddedObject::CreateOleComponentFromClipboard_Impl(OleComponent*)
OleEmbeddedObject::CreateOleComponent_Impl(OleComponent*)
OleEmbeddedObject::CreateTempURLEmpty_Impl()
OleEmbeddedObject::GetIntermediateVerbsSequence_Impl(int)
OleEmbeddedObject::GetReachableStatesList_Impl(com::sun::star::uno::Sequence<com::sun::star::embed::VerbDescriptor> const&)
OleEmbeddedObject::GetStreamForSaving()
OleEmbeddedObject::GetTempURL_Impl()
OleEmbeddedObject::OleEmbeddedObject(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
OleEmbeddedObject::OnClosed_Impl()
OleEmbeddedObject::OnIconChanged_Impl()
OleEmbeddedObject::OnShowWindow_Impl(unsigned char)
OleEmbeddedObject::OnViewChanged_Impl()
OleEmbeddedObject::StoreObjectToStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream>)
OleEmbeddedObject::SwitchComponentToRunningState_Impl()
OlePicture::~OlePicture()
OpenGL::AreTexturesResident(int, unsigned int const*, unsigned char*)
OpenGL::ArrayElement(int)
OpenGL::ColorPointer(int, unsigned int, int, void const*)
OpenGL::CopyTexImage1D(unsigned int, int, unsigned int, int, int, int, int)
OpenGL::CopyTexImage2D(unsigned int, int, unsigned int, int, int, int, int, int)
OpenGL::CopyTexSubImage1D(unsigned int, int, int, int, int, int)
OpenGL::CopyTexSubImage2D(unsigned int, int, int, int, int, int, int, int)
OpenGL::DrawElements(unsigned int, int, unsigned int, void const*)
OpenGL::GetIntegerv(unsigned int, int*)
OpenGL::GetTexLevelParameterfv(unsigned int, int, unsigned int, float*)
OpenGL::GetTexLevelParameteriv(unsigned int, int, unsigned int, int*)
OpenGL::GetTexParameterfv(unsigned int, unsigned int, float*)
OpenGL::GetTexParameteriv(unsigned int, unsigned int, int*)
OpenGL::IndexPointer(unsigned int, int, void const*)
OpenGL::InterleavedArrays(unsigned int, int, void const*)
OpenGL::PixelStoref(unsigned int, float)
OpenGL::PixelStorei(unsigned int, int)
OpenGL::PixelTransferf(unsigned int, float)
OpenGL::PixelTransferi(unsigned int, int)
OpenGL::PrioritizeTextures(int, unsigned int const*, float const*)
OpenGL::TexEnvf(unsigned int, unsigned int, float)
OpenGL::TexEnviv(unsigned int, unsigned int, int const*)
OpenGL::TexGend(unsigned int, unsigned int, double)
OpenGL::TexGendv(unsigned int, unsigned int, double const*)
OpenGL::TexGenf(unsigned int, unsigned int, float)
OpenGL::TexGenfv(unsigned int, unsigned int, float const*)
OpenGL::TexGeni(unsigned int, unsigned int, int)
OpenGL::TexGeniv(unsigned int, unsigned int, int const*)
OpenGL::TexImage1D(unsigned int, int, int, int, int, unsigned int, unsigned int, void const*)
OpenGL::TexParameterf(unsigned int, unsigned int, float)
OpenGL::TexParameterfv(unsigned int, unsigned int, float const*)
OpenGL::TexParameteriv(unsigned int, unsigned int, int const*)
OpenGL::TexSubImage1D(unsigned int, int, int, int, unsigned int, unsigned int, void const*)
OpenGL::TexSubImage2D(unsigned int, int, int, int, int, int, unsigned int, unsigned int, void const*)
OptionHelper::showErrors()
OptionHelper::showTests()
Options::getInputFile(unsigned short)
Options::getNumberOfOptions() const
Options::getOptions()
OptionsUserData::SetChecked(unsigned char)
Outliner::Draw(OutputDevice*, Rectangle const&, Point const&)
Outliner::EndSpelling()
Outliner::GetAsianCompressionMode() const
Outliner::GetBeginDropHdl() const
Outliner::GetBigTextObjectStart() const
Outliner::GetDefTab() const
Outliner::GetDefaultLanguage() const
Outliner::GetDocPos(Paragraph*)
Outliner::GetEndDropHdl() const
Outliner::GetFirstLineOffset(unsigned long)
Outliner::GetForbiddenCharsTable() const
Outliner::GetGlobalCharStretching(unsigned short&, unsigned short&)
Outliner::GetHyphenator() const
Outliner::GetModifyHdl() const
Outliner::GetNotifyHdl() const
Outliner::GetPolygon()
Outliner::HasOnlineSpellErrors() const
Outliner::ImpDropped(OutlinerView*)
Outliner::IsAddExtLeading() const
Outliner::IsAutoColorEnabled() const
Outliner::IsFixedCellHeight() const
Outliner::IsKernAsianPunctuation() const
Outliner::SetBigTextObjectStart(unsigned short)
Outliner::SetModifyHdl(Link const&)
Outliner::SetPolygon(basegfx::B2DPolyPolygon const&)
Outliner::SetVisible(Paragraph*, unsigned char)
OutlinerInfo::GetParaCharCount(unsigned long) const
OutlinerInfo::GetParaRect(unsigned long) const
OutlinerInfo::OutlinerInfo()
OutlinerInfo::SetTextObj(SdDrawDocument*, SdrRectObj*, OutputDevice*)
OutlinerInfo::~OutlinerInfo()
OutlinerParaObject::Create(SvStream&, SfxItemPool*)
OutlinerParaObject::FinishStore()
OutlinerParaObject::MergeParaAttribs(SfxItemSet const&, unsigned short, unsigned short)
OutlinerParaObject::PrepareStore(SfxStyleSheetPool*)
OutlinerParaObject::RemoveCharAttribs(unsigned short)
OutlinerParaObject::RemoveParaAttribs(unsigned short)
OutlinerParaObject::SetLRSpaceItemFlags(unsigned char)
OutlinerParaObject::Store(SvStream&) const
OutlinerView::AdjustDepth(Paragraph*, short, unsigned char)
OutlinerView::AdjustHeight(Paragraph*, long, unsigned char)
OutlinerView::Collapse(Paragraph*)
OutlinerView::CompleteAutoCorrect()
OutlinerView::EnablePaste(unsigned char)
OutlinerView::Expand(Paragraph*)
OutlinerView::GetFieldUnderMousePointer(unsigned short&, unsigned short&) const
OutlinerView::ImpDragScroll(Point const&)
OutlinerView::ImpGetDocPos(Point const&)
OutlinerView::ImpGetInsertionPara(Point const&)
OutlinerView::ImpShowDDCursor()
OutlinerView::Redo()
OutlinerView::RemoveCharAttribs(unsigned long, unsigned short)
OutlinerView::SetOutliner(Outliner*)
OutlinerView::SetReadOnly(unsigned char)
OutlinerView::SetStyleSheet(SfxStyleSheet*)
OutlinerView::SetVisArea(Rectangle const&)
OutlinerView::ShowBullets(unsigned char, unsigned char)
OutlinerView::SpellIgnoreWord()
OutlinerView::StartSpeller(unsigned char)
OutlinerView::Undo()
OutlinerView::Write(SvStream&, EETextFormat)
OutputDevice::GetFontCharMap(FontCharMap&) const::CharMapCacheItem::CharMapCacheItem()
OutputDevice::GetFontCharMap(FontCharMap&) const::CharMapCacheItem::~CharMapCacheItem()
OutputDevice::GetFontSubstitute(unsigned short, String&, String&, unsigned short&)
OutputDevice::GetOpenGL()
OutputDevice::GetPixel(Polygon const&) const
OutputDevice::ImplGetTextWidth(SalLayout const&) const
OutputDevice::IsTextUnderlineAbove(Font const&)
OutputDevice::LogicToLogic(long*, unsigned short, MapMode const*, MapMode const*) const
PBMWriter::ImplCallback(unsigned short)
PGMWriter::ImplCallback(unsigned short)
PPMWriter::ImplCallback(unsigned short)
PPTTextCharacterStyleAtomInterpreter::Read(SvStream&, DffRecordHeader const&)
PPTTextCharacterStyleAtomInterpreter::~PPTTextCharacterStyleAtomInterpreter()
PPTTextObj::PPTTextObj(PPTTextObj&)
PPTTextParagraphStyleAtomInterpreter::~PPTTextParagraphStyleAtomInterpreter()
PPTTextSpecInfo::~PPTTextSpecInfo()
PSDReader::ImplCallback(unsigned short)
PSWriter::ImplGenerateBitmap(unsigned short, int, VirtualDevice&, Point const&, Size const&, int)
PSWriter::MayCallback(unsigned long)
PageSpan::getMarginLeft() const
PageSpan::getMarginRight() const
ParaPortionList::DbgCheck(EditDoc&)
ParagraphList::GetVisPos(Paragraph*)
ParagraphList::PrevVisible(Paragraph*) const
ParagraphObj::ImplMapSize(com::sun::star::awt::Size const&)
ParagraphObj::ParagraphObj(ParagraphObj&)
Path::NewImp()
PathDialog::SetPath(Edit const&)
PatternBox::GetString(unsigned short) const
PatternBox::GetStringPos(String const&) const
PatternBox::InsertString(String const&, unsigned short)
PatternBox::PatternBox(Window*, ResId const&)
PatternBox::RemoveString(String const&)
PatternField::PatternField(Window*, ResId const&)
PatternFormatter::SelectFixedFont()
PictWriter::WriteOpcode_BkPat(unsigned char)
PictWriter::WriteOpcode_FillPat(unsigned char)
PluginManager::~PluginManager()
PluginModel::getImplementationName()
PluginModel::supportsService(rtl::OUString const&)
PolyPolygon::Distort(Rectangle const&, Polygon const&)
PolyPolygon::GetSimple(PolyPolygon&) const
Polygon::GetArea() const
Polygon::GetDifference(PolyPolygon const&, PolyPolygon&) const
Polygon::GetIntersection(PolyPolygon const&, PolyPolygon&) const
Polygon::GetUnion(PolyPolygon const&, PolyPolygon&) const
Polygon::GetXOR(PolyPolygon const&, PolyPolygon&) const
Polygon::ImplGetFlagAry()
Polygon::ImplGetPointAry()
Polygon::IsControl(unsigned short) const
Polygon::IsSmooth(unsigned short) const
Polygon::Remove(unsigned short, unsigned short)
Ppt97Animation::HasAfterEffect_DimAfterEffect() const
Ppt97Animation::Ppt97Animation()
PrintArgs
Printer::GetCurrentPaperInfo() const
Printer::Printer(Window const*)
Printer::SetPaperFromInfo(vcl::PaperInfo const&)
Prj::GetDirectoryData(ByteString)
Prj::GetDirectoryList(unsigned short, unsigned short)
Prj::InsertDirectory(ByteString, unsigned short, unsigned short, ByteString, ByteString const&)
Prj::Prj()
Prj::RemoveDirectory(ByteString)
PropBrwMgr::GetChildWindowId()
PropItem::Read(String&)
ProposalList::Remove(rtl::OUString const&)
PushButton::GetSymbolAlign() const
QProToSc::DecToken(TokenId&)
QProToSc::NegToken(TokenId&)
QuitAgain_Impl(void*, void*)
RASReader::ImplCallback(unsigned short)
RBGroup::add(OCX_Control*)
REResourceList::REResourceList()
REResourceList::~REResourceList()
RTFColorTbl::Remove(unsigned short, unsigned short)
RTFColorTbl::Replace(Color const&, unsigned short)
RTFColorTbl::Replace(Color const*, unsigned short, unsigned short)
RTFColorTbl::_ForEach(unsigned short, unsigned short, unsigned char (*)(Color const&, void*), void*)
RangeUniqueIdContainer::CreateId(UniqueItemId*)
RangeUniqueIdContainer::CreateId(unsigned int, UniqueItemId*)
RangeUniqueIdContainer::RangeUniqueIdContainer()
RangeUniqueIdContainer::RangeUniqueIdContainer(Range const&)
RangeUniqueIdContainer::~RangeUniqueIdContainer()
ReadFileType(char const*)
RegInfo::DeleteAppGroup(String const&)
RegInfo::DeleteKey(String const&)
RegInfo::GetKeyCount() const
RegInfo::GetKeyName(unsigned short) const
RegInfo::ReadKey(String const&) const
RegInfo::ReadKey(String const&, String const&) const
RegInfo::RegInfo()
RegInfo::SetAppGroup(String const&)
RegInfo::WriteKey(String const&, String const&)
RegInfo::~RegInfo()
RegisterAdditionalFunctions
ReplaceWith(char*, char, char)
ReportCrash
RequestDocumentPassword::isAbort()
ResData::Dump()
ResMgr::GetFileName() const
ResMgr::ImplGetLocale()
ResMgr::ImplGetPrefix()
ResizePoly(PolyPolygon&, Point const&, Fraction const&, Fraction const&)
ResizeXPoly(XPolyPolygon&, Point const&, Fraction const&, Fraction const&)
Resource::TestRes()
Rot13
RotatePoly(PolyPolygon&, Point const&, double, double)
RscChar::MakeUTF8FromL(char*)
RscCompiler::GetTmpFileName()
RscCompiler::OpenInput(ByteString const&)
RscDefineList::Befor(RscDefine const*, RscDefine const*)
RscFileInst::RscFileInst(RscTypCont*, unsigned long, unsigned long, ByteString const&)
RscFileTab::ChangeDef(ByteString const&, RscExpression*)
RscFileTab::ChangeDef(ByteString const&, int)
RscFileTab::ChangeDefName(ByteString const&, ByteString const&)
RscFileTab::DeleteDef(ByteString const&)
RscFileTab::DeleteFile(unsigned long)
RscFileTab::IsDefUsed(ByteString const&)
RscFirstSysDepend::RscFirstSysDepend(unsigned int, unsigned int, RscTop*)
RscId::GetMacro() const
RscId::IsSetNames()
RscNameTable::Put(char const*, unsigned int, RscTop*)
RscNameTable::Put(unsigned int, unsigned int)
RscTypCont::Delete(unsigned int, RscId const&)
RscTypCont::FillNameIdList(REResourceList*, unsigned long)
RscTypCont::MakeConsistent(RscInconsList*)
RscTypCont::Search(unsigned int, RscId const&)
RtfParserStates_Impl::Replace(RtfParserState_Impl const&, unsigned short)
RtfParserStates_Impl::Replace(RtfParserState_Impl const*, unsigned short, unsigned short)
RtfParserStates_Impl::_ForEach(unsigned short, unsigned short, unsigned char (*)(RtfParserState_Impl const&, void*), void*)
Ruler::GetArrowCount() const
Ruler::GetArrows() const
Ruler::GetBorderCount() const
Ruler::GetBorders() const
Ruler::GetDocType(Point const&, RulerType, unsigned short*) const
Ruler::GetIndentCount() const
Ruler::GetIndents() const
Ruler::GetLineCount() const
Ruler::GetLines() const
Ruler::GetMargin1Style() const
Ruler::GetMargin2Style() const
Ruler::GetPageWidth() const
Ruler::SetArrows(unsigned short, RulerArrow const*)
SByteStringList::CleanUp()
SByteStringList::RemoveString(ByteString const&)
SFTreeListBox::ExpandAllTrees()
SFTreeListBox::FindEntry(SvLBoxEntry*, String const&, unsigned char)
SFTreeListBox::UpdateEntries()
SFTreeListBox::dialogSort1(com::sun::star::uno::Reference<com::sun::star::script::browse::XBrowseNode>, com::sun::star::uno::Reference<com::sun::star::script::browse::XBrowseNode>)
SQLyy_scan_string(char const*)
SQLyyget_debug()
SQLyyget_in()
SQLyyget_leng()
SQLyyget_out()
SQLyyget_text()
SQLyylex_destroy()
SQLyypush_buffer_state(yy_buffer_state*)
SQLyyset_debug(int)
SQLyyset_in(_IO_FILE*)
SQLyyset_out(_IO_FILE*)
SScrAreas::DeleteAndDestroy(unsigned short, unsigned short)
SScrAreas::Insert(SScrAreas const*, unsigned short, unsigned short)
SScrAreas::Insert(SwScrollArea* const&, unsigned short&)
SScrAreas::Insert(SwScrollArea* const*, unsigned short)
SUniStringList::IsString(String*)
SUniStringList::PutString(String*)
SUniStringList::RemoveString(String const&)
SUniStringList::SUniStringList()
SUniStringList::~SUniStringList()
SalConverterCache::GetT2UConverter(unsigned short)
SalConverterCache::~SalConverterCache()
SalDisplay::PrintEvent(ByteString const&, _XEvent*) const
SalDisplay::PrintInfo() const
SalGraphics::DrawBitmap(SalTwoRect const*, SalBitmap const&, unsigned int, OutputDevice const*)
SalGraphics::drawAlphaBitmap(SalTwoRect const&, SalBitmap const&, SalBitmap const&)
SalGtkFilePicker::dialogSizeChanged()
SalGtkFilePicker::helpRequested(com::sun::star::ui::dialogs::FilePickerEvent) const
SalI18N_InputContext::CommitStringCallback(unsigned short*, unsigned long)
SalI18N_InputContext::SetPreeditState(int)
SalI18N_KeyboardExtension::LookupKeysymInGroup(unsigned int, unsigned int, unsigned int) const
SalLayout::Reference() const
SalVisual::Convert(int&, int&, int&, int&)
Sal_queryFaxNumber
Sane::Stop()
SbCompare_Properties_Impl(void const*, void const*)
SbCompare_PropertyValues_Impl(void const*, void const*)
SbGetIoSystem()
SbMethod::GetLocals()
SbMethod::GetStatics()
SbPropertyContainer::SbPropertyContainer()
SbPropertySetInfo::SbPropertySetInfo()
SbRtl_LINEPROP(StarBASIC*, SbxArray&, unsigned char)
SbRtl_LINE_1(StarBASIC*, SbxArray&, unsigned char)
SbRtl_LINE_15(StarBASIC*, SbxArray&, unsigned char)
SbRtl_LINE_2(StarBASIC*, SbxArray&, unsigned char)
SbTextPortions::Remove(unsigned short, unsigned short)
SbTextPortions::Replace(SbTextPortion const&, unsigned short)
SbTextPortions::Replace(SbTextPortion const*, unsigned short, unsigned short)
SbTextPortions::SbTextPortions(unsigned short, unsigned char)
SbTextPortions::_ForEach(unsigned short, unsigned short, unsigned char (*)(SbTextPortion const&, void*), void*)
SbiBreakpoints::Insert(unsigned short const&, unsigned short)
SbiBreakpoints::Replace(unsigned short const&, unsigned short)
SbiBreakpoints::Replace(unsigned short const*, unsigned short, unsigned short)
SbiBreakpoints::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned short const&, void*), void*)
SbiBuffer::Add(void const*, unsigned short)
SbiBuffer::Align(int)
SbiDisas::Disas(SvStream&)
SbiDisas::PromptOp(String&)
SbiExprList::Get(short)
SbiExprNode::IsString()
SbiExpression::SbiExpression(SbiParser*, SbiToken, unsigned char)
SbiExpression::SbiExpression(SbiParser*, String const&, unsigned char)
SbiGlobals::~SbiGlobals()
SbiImage::Load(SvStream&)
SbiIoSystem::NextChannel()
SbiParser::CloseJavaBlock()
SbiParser::JavaBreak()
SbiParser::JavaContinue()
SbiParser::JavaFor()
SbiParser::JavaFunction()
SbiParser::JavaIf()
SbiParser::JavaNew()
SbiParser::JavaReturn()
SbiParser::JavaStmntBlock(SbiToken)
SbiParser::JavaThis()
SbiParser::JavaVar()
SbiParser::JavaWhile()
SbiParser::JavaWith()
SbiParser::OpenJavaBlock(SbiToken, SbiExprNode*)
SbiRuntime::GetParams()
SbiSymPool::Clear()
SbxAlias::SbxAlias(String const&, SbxVariable*)
SbxAppData::~SbxAppData()
SbxBase::StaticEnableBroadcasting(unsigned char)
SbxDecimal::SbxDecimal()
SbxDecimal::getByte(unsigned char&)
SbxDecimal::getChar(unsigned short&)
SbxDecimal::getInt(int&)
SbxDecimal::getLong(int&)
SbxDecimal::getShort(short&)
SbxDecimal::getString(String&)
SbxDecimal::getUInt(unsigned int&)
SbxDecimal::getULong(unsigned int&)
SbxDecimal::getUShort(unsigned short&)
SbxDecimal::setShort(short)
SbxDecimal::setString(String*)
SbxDecimal::setUShort(unsigned short)
SbxDimArray::GetRef(SbxArray*)
SbxDimArray::GetRef(short const*)
SbxDimArray::GetRef32(int const*)
SbxDimArray::Offset(SbxArray*)
SbxDimArray::Put(SbxVariable*, SbxArray*)
SbxInfo::AddParam(SbxParamInfo const&)
SbxMethod::Run(SbxValues*)
SbxObject::GarbageCollection(unsigned long)
SbxObject::SetPos(SbxVariable*, unsigned short)
SbxObject::VCPtrInsert(SbxVariable*)
SbxObject::VCPtrRemove(SbxVariable*)
SbxValue::GetData() const
SbxValue::GetErr() const
SbxValue::GetInt() const
SbxValue::GetLong64() const
SbxValue::GetNoBroadcast(SbxValues&)
SbxValue::GetULong64() const
SbxValue::HasObject() const
SbxValue::PutData(void*)
SbxValue::PutDecimal(SbxDecimal*)
SbxValue::PutLong64(SbxINT64 const&)
SbxValue::PutString(unsigned short const*)
SbxValue::PutULong64(SbxUINT64 const&)
SbxValue::PutpChar(unsigned short const*)
SbxValues::SbxValues(BigInt const&)
ScAcceptChgDlg::SetMyStaticData()
ScAccessibilityEditSource::IsDirty() const
ScAccessibilityEditSource::SetDoUpdateData(unsigned char)
ScAccessibleContextBase::CommitDefunc() const
ScAccessibleCsvControl::implGetRelPos(Point const&) const
ScAccessiblePreviewCell::IsSelected(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessibleStateSet> const&)
ScAccessiblePreviewCellTextData::LinkStubNotifyHdl(void*, void*)
ScAccessiblePreviewHeaderCellTextData::LinkStubNotifyHdl(void*, void*)
ScAddInAsyncs::Insert(ScAddInAsync* const&, unsigned short&)
ScAddInAsyncs::Insert(ScAddInAsync* const*, unsigned short)
ScAddInAsyncs::Insert(ScAddInAsyncs const*, unsigned short, unsigned short)
ScAddInDocs::DeleteAndDestroy(unsigned short, unsigned short)
ScAddInDocs::Insert(ScAddInDocs const*, unsigned short, unsigned short)
ScAddInDocs::Insert(ScDocument* const&, unsigned short&)
ScAddInDocs::Insert(ScDocument* const*, unsigned short)
ScAddInDocs::Remove(ScDocument* const&, unsigned short)
ScAddress::Details::SetPos(ScDocument const*, ScAddress const&)
ScAddress::GetText() const
ScArea::Clear()
ScArea::GetString(String&, unsigned char, ScDocument*, ScAddress::Details const&) const
ScAttrArray::TestData() const
ScAutoFormatData::SetNumFormat(unsigned short, ScNumFormatAbbrev const&)
ScBackgroundCollector::AddRange(ScRange const&)
ScBackgroundCollector::GetHighlightColor() const
ScBackgroundCollector::ScBackgroundCollector(ScDocument*)
ScBaseCell::LoadNote(SvStream&, ScDocument*)
ScBitMaskCompressedArray<int, unsigned char>::CopyFromOred(ScBitMaskCompressedArray<int, unsigned char> const&, int, int, unsigned char const&, long)
ScBitMaskCompressedArray<int, unsigned char>::ScBitMaskCompressedArray(int, unsigned char const&, unsigned long)
ScBitMaskCompressedArray<int, unsigned char>::ScBitMaskCompressedArray(int, unsigned char const*, unsigned long)
ScCellFieldObj::ScCellFieldObj()
ScChangeAction::DependsOn(ScChangeAction*) const
ScChangeAction::RemoveDeleted(ScChangeAction const*)
ScChangeAction::RemoveDependent(ScChangeAction*)
ScChangeAction::RemoveLink(ScChangeAction*)
ScChangeAction::StoreCell(ScBaseCell*, SvStream&, ScMultipleWriteHeader&)
ScChangeTrack::AppendContent(ScAddress const&, ScBaseCell const*, ScDocument*)
ScChangeTrack::AppendContent(ScAddress const&, String const&)
ScChangeTrack::SearchGeneratedDelContentAt(ScBigAddress const&, ScChangeActionType) const
ScChangeTrackingExportHelper::WriteChangeViewSettings()
ScChartPositioner::AddToRangeList(ScRange const&)
ScChartPositioner::AddToRangeList(ScRangeListRef const&)
ScChartPositioner::IsAtCursor(ScAddress const&) const
ScColumn::GetFirstEntryPos() const
ScColumn::GetLastAttrPos() const
ScColumn::GetLastEntryPos() const
ScColumn::Load(SvStream&, ScMultipleReadHeader&)
ScColumn::Save(SvStream&, ScMultipleWriteHeader&) const
ScColumn::SetNewRow(int, int)
ScCompiler::AdjustReference(SingleRefData&)
ScCompressedArray<int, unsigned char>::CopyFrom(ScCompressedArray<int, unsigned char> const&, int, int, long)
ScCompressedArray<int, unsigned char>::DataEntry::DataEntry()
ScCompressedArray<int, unsigned char>::FillDataArray(int, int, unsigned char*) const
ScCompressedArray<int, unsigned char>::GetDataEntry(unsigned long) const
ScCompressedArray<int, unsigned char>::GetLastUnequalAccess(int, unsigned char const&)
ScCompressedArray<int, unsigned char>::GetPrevValue(unsigned long&, int&) const
ScCompressedArray<int, unsigned char>::GetValue(int, unsigned long&, int&, int&) const
ScCompressedArray<int, unsigned short>::DataEntry::DataEntry()
ScCompressedArray<int, unsigned short>::FillDataArray(int, int, unsigned short*) const
ScCompressedArray<int, unsigned short>::GetPrevValue(unsigned long&, int&) const
ScCompressedArray<int, unsigned short>::GetValue(int, unsigned long&, int&, int&) const
ScConditionalFormats_Impl::Insert(ScConditionalFormat* const&, unsigned short&)
ScConditionalFormats_Impl::Insert(ScConditionalFormat* const*, unsigned short)
ScConditionalFormats_Impl::Insert(ScConditionalFormats_Impl const*, unsigned short, unsigned short)
ScConditionalFormats_Impl::Remove(ScConditionalFormat* const&, unsigned short)
ScConditionalFormats_Impl::Remove(unsigned short, unsigned short)
ScContentTree::AdjustTitle()
ScCoupledCompressedArrayIterator<int, unsigned char, unsigned short>::GetIterStart() const
ScCoupledCompressedArrayIterator<int, unsigned char, unsigned short>::Resync(int)
ScCsvTableBox::SetByteStrings(ByteString const*, unsigned short, String const&, unsigned short, bool)
ScDBData::GetTargetName(String const&) const
ScDLL::Exit()
ScDLL::FillStatusBar(StatusBar&)
ScDPDateGroupHelper::~ScDPDateGroupHelper()
ScDPFunctionDlg_Dummy()
ScDPFunctionListBox::ScDPFunctionListBox(Window*, long)
ScDPSaveData::Store(SvStream&) const
ScDPSaveDimension::ResetLayoutName()
ScDPSaveDimension::SetSubTotals(unsigned char)
ScDPSource::DumpState(ScDocument*, ScAddress const&)
ScDataPilotSourceTypeDlg::IsSelection() const
ScDatabaseRangeObj::GetImportParam(ScImportParam&) const
ScDatabaseRangeObj::GetSortParam(ScSortParam&) const
ScDatabaseRangeObj::SetImportParam(ScImportParam const&)
ScDatabaseRangeObj::SetSortParam(ScSortParam const&)
ScDate_DaysInMonth
ScDate_DaysInYear
ScDate_GetDiffWeeks
ScDate_GetDiffYears
ScDate_IsLeapYear
ScDate_WeeksInYear
ScDdeLink::NewData(unsigned long, unsigned long)
ScDocShell::GetTabParam(SfxItemSet const*, unsigned short, short&)
ScDocShell::RemoveUnknownObjects()
ScDocument::AddToImpExpLog(ScImpExpLogMsg const&)
ScDocument::AddToImpExpLog(ScImpExpLogMsg*)
ScDocument::ApplyFlags(short, int, short, int, ScMarkData const&, short)
ScDocument::ClearDrawPage(short)
ScDocument::DeleteObjects(short)
ScDocument::GetErrCode(short, int, short, unsigned short&)
ScDocument::GetErrorData(short, int, short) const
ScDocument::GetLastFlaggedCol(short) const
ScDocument::GetWeightedCount() const
ScDocument::HasControl(short, Rectangle const&)
ScDocument::HasLines(ScRange const&, Rectangle&) const
ScDocument::HasMacroCallsAfterLoad()
ScDocument::InvalidateControls(Window*, short, Rectangle const&)
ScDocument::IsOverlapped(short, int, short) const
ScDocument::IsSelectedBlockEditable(short, int, short, int, ScMarkData const&) const
ScDocument::IsSelectedOrBlockEditable(short, int, short, int, ScMarkData const&) const
ScDocument::IsSelectionOrBlockEditable(short, short, int, short, int, ScMarkData const&) const
ScDocument::Load(SvStream&, ScProgress*)
ScDocument::LoadPool(SvStream&, unsigned char)
ScDocument::PutCell(ScAddress const&, ScBaseCell*, unsigned long, unsigned char)
ScDocument::RemoveFlags(short, int, short, int, ScMarkData const&, short)
ScDocument::Save(SvStream&, ScProgress*) const
ScDocument::SavePool(SvStream&) const
ScDocument::SetChartCollection(ScChartCollection*)
ScDocument::SetConditionalUsed(unsigned long)
ScDocument::SetDirtyVar()
ScDocument::SetLinkManager(SvxLinkManager*)
ScDocument::SetValidationUsed(unsigned long)
ScDocument::StopAnimations(short, Window*)
ScDocument::UpdatePageBreaks()
ScDocumentPool::MyLoadCompleted()
ScDoubleField::ScDoubleField(Window*, long)
ScDrawLayer::GetDefTextHeight() const
ScDrawStringsVars::IsRightToLeftAttr() const
ScDrawStringsVars::ResetText()
ScDrawView::ScDrawView(OutputDevice*, ScDocument*, short)
ScEditBox::ScEditBox(Window*, long)
ScEditCell::Clone(ScDocument*) const
ScEditCell::ScEditCell(ScDocument*)
ScEditCell::ScEditCell(SvStream&, unsigned short, ScDocument*)
ScEditEngineTextObj::SetText(String const&)
ScEditViewForwarder::GrabFocus()
ScEditViewHint::ScEditViewHint()
ScEditableTester::Reset()
ScEmptyEnumerationAccess::ScEmptyEnumerationAccess()
ScExpandedFixedText::ScExpandedFixedText(Window*, long)
ScExportExcel234(SvStream&, ScDocument*, ExportFormatExcel, unsigned short)
ScExportLotus123(SvStream&, ScDocument*, ExportFormatLotus, unsigned short)
ScFilterDetect::impl_createFactory(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
ScFormEditData::RestoreValues()
ScFormatShell::ExecBckCol(SfxRequest&)
ScFormatShell::GetBckColState(SfxItemSet&)
ScFormulaCell::HasDBArea() const
ScFormulaCell::ScFormulaCell()
ScFormulaCell::ScFormulaCell(ScDocument*, ScAddress const&, SvStream&, ScMultipleReadHeader&)
ScFormulaDlg::EditFuncParas(unsigned short)
ScFormulaDlg::LinkStubScrollHdl(void*, void*)
ScFormulaDlg::UpdateFunctionDesc()
ScFormulaUtil::GetDefaultFuncDesc()
ScGridWindow::DrawRefMark(short, int, short, int, Color const&, unsigned char)
ScGridWindow::OutlinerViewPaint(Rectangle const&)
ScGroupDlg::GetRowsChecked() const
ScHTMLColOffset::Insert(ScHTMLColOffset const*, unsigned short, unsigned short)
ScHTMLColOffset::Insert(unsigned long const&, unsigned short&)
ScHTMLColOffset::Insert(unsigned long const*, unsigned short)
ScHTMLColOffset::Remove(unsigned long const&, unsigned short)
ScHTMLColOffset_SAR::Replace(unsigned long const&, unsigned short)
ScHTMLColOffset_SAR::Replace(unsigned long const*, unsigned short, unsigned short)
ScHTMLColOffset_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned long const&, void*), void*)
ScHTMLQueryParser::GetTable(unsigned short) const
ScHeaderFieldObj::ScHeaderFieldObj()
ScHeaderFooterContentObj::ScHeaderFooterContentObj()
ScImpExpLogMsg::GetMsg(ScImpExpMsg)
ScImpExpLogMsg::ScImpExpLogMsg(ScImpExpMsg)
ScImpExpLogMsg::ScImpExpLogMsg(ScImpExpMsg, String const&)
ScImpExpLogMsg::ScImpExpLogMsg(ScImpExpMsg, String const&, String const&)
ScImpExpLogMsg::Set(ScImpExpMsg, String const*, String const*)
ScImportExcel(SfxMedium&, ScDocument*)
ScImportParam::Clear()
ScInputHandler::ActivateInputWindow(String const&, ESelection const&)
ScInputHandler::SetAllUpdateMode(unsigned char)
ScInputStatusItem::ScInputStatusItem(unsigned short, short, short, int, short, int, short, int, String const&, EditTextObject const*)
ScInputWindow::GetTextString()
ScInterpreter::MFastMult(ScMatrix*, ScMatrix*, ScMatrix*, unsigned long, unsigned long, unsigned long)
ScInterpreter::MFastSub(ScMatrix*, ScMatrix*, ScMatrix*, unsigned long, unsigned long)
ScInterpreter::MFastTrans(ScMatrix*, ScMatrix*, unsigned long, unsigned long)
ScInterpreter::ScDefPar()
ScLeftFooterEditPage::GetRanges()
ScLeftHeaderEditPage::GetRanges()
ScLibOptions::ScLibOptions()
ScListBox::ScListBox(Window*, long)
ScMarkArray::MoveTo(int, int, ScMarkArray&)
ScMarkArray::SetMark(int, unsigned char)
ScMarkArray::SwapCol(ScMarkArray&)
ScMatrix::FillDoubleLowerLeft(double, unsigned long)
ScMatrix::MatCopyUpperLeft(ScMatrix&) const
ScMatrix::PutDoubleAndResetString(double, unsigned long, unsigned long)
ScModelObj::GetOutputFactor() const
ScModelObj::IsEmbedded() const
ScModule::CloseDialogs()
ScModule::SetInputWindow(ScInputWindow*)
ScMyCellInfo::ScMyCellInfo()
ScMyStylesImportHelper::AddCell(ScAddress const&)
ScMyStylesImportHelper::AddRange(com::sun::star::table::CellRangeAddress const&)
ScMyTableData::FindNextCol(int) const
ScMyTables::CloseRow()
ScNavigatorDlg::GetAreaAtCursor(String&)
ScNavigatorDlg::GetDBAtCursor(String&)
ScNoteCell::ScNoteCell(SvStream&, unsigned short)
ScOutlineTable::Load(SvStream&)
ScOutlineTable::Store(SvStream&)
ScOutlineWindow::ScrollRel(long)
ScOutputData::ConnectObject(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, SdrOle2Obj*)
ScOutputData::DrawMark(Window*)
ScOutputData::DrawPageBorder(short, int, short, int)
ScOutputData::GetAvailableWidth(short, int, long)
ScOutputData::PrintNoteMarks(List const&)
ScPaintHint::ScPaintHint()
ScPivot::DrawData()
ScPivot::GetHeader() const
ScPivot::SetFontBold(short, int, short, int)
ScPivot::SetJustifyLeft(short, int, short, int)
ScPivot::SetJustifyRight(short, int, short, int)
ScPivotParam::Clear()
ScPreviewLocationData::GetCell(Point const&, ScAddress&, Rectangle&) const
ScPreviewShell::ScPreviewShell(SfxViewFrame*, ScPreviewShell const&)
ScPreviewShell::ScPreviewShell(SfxViewFrame*, Window*)
ScPreviewViewForwarder::FillTableInfo() const
ScPrintCfg::OptionsChanged()
ScPrintSettingsObj::ScPrintSettingsObj()
ScPrivatSplit::SetXRange(Range)
ScProgress::SetAllowInterpret(unsigned char)
ScQProReader::IsEndOfFile()
ScQueryEntry::Load(SvStream&)
ScQueryEntry::Store(SvStream&) const
ScQueryParam::Load(SvStream&)
ScRTFColTwips::Insert(ScRTFColTwips const*, unsigned short, unsigned short)
ScRTFColTwips::Insert(unsigned long const&, unsigned short&)
ScRTFColTwips::Insert(unsigned long const*, unsigned short)
ScRTFColTwips::Remove(unsigned long const&, unsigned short)
ScRTFColTwips_SAR::Replace(unsigned long const&, unsigned short)
ScRTFColTwips_SAR::Replace(unsigned long const*, unsigned short, unsigned short)
ScRTFColTwips_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned long const&, void*), void*)
ScRange::ExtendOne()
ScRangeList::Clone() const
ScRangeList::Find(ScRange const&) const
ScRangeStringConverter::AppendString(rtl::OUString&, rtl::OUString const&, unsigned short)
ScRawToken::GetReference()
ScRawToken::Load(SvStream&, unsigned short)
ScRawToken::Load30(SvStream&)
ScRawToken::SetInt(int)
ScRawToken::SetMatrix(ScMatrix*)
ScRawToken::SetReference(ComplRefData&)
ScRefEdit::SilentGrabFocus()
ScRightFooterEditPage::GetRanges()
ScRightHeaderEditPage::GetRanges()
ScSelEntryDlg::GetSelectEntryPos() const
ScServiceProvider::GetProviderName(unsigned short)
ScShapeChilds::FindShape(_STL::vector<ScShapeChild, _STL::allocator<ScShapeChild> >&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, ScShapeChild*&) const
ScSimpleRefDlg::GetLastRefString()
ScSpreadsheetSettingsObj::ScSpreadsheetSettingsObj(ScDocShell*)
ScStringCell::ScStringCell(SvStream&, unsigned short)
ScStyleObj::ScStyleObj()
ScSubTotalDescriptorBase::GetData(ScSubTotalParam&) const
ScSubTotalDescriptorBase::PutData(ScSubTotalParam const&)
ScSummableCompressedArray<int, unsigned short>::ScSummableCompressedArray(int, unsigned short const&, unsigned long)
ScSummableCompressedArray<int, unsigned short>::ScSummableCompressedArray(int, unsigned short const*, unsigned long)
ScTPValidationError::GetRanges()
ScTPValidationHelp::GetRanges()
ScTPValidationValue::GetRanges()
ScTabPageSortFields::GetRanges()
ScTabPageSortOptions::GetRanges()
ScTabView::ActiveCaptureMouse()
ScTabView::ActivePixelToLogic(Point const&)
ScTabView::ActiveReleaseMouse()
ScTabView::DrawDragRect(short, int, short, int, ScSplitPos)
ScTabView::EndSelection()
ScTabView::GetSelectedChartName() const
ScTabView::PaintCell(short, int, short)
ScTabView::PaintLeftRow(int)
ScTabView::PaintTopCol(short)
ScTabView::SetActivePointer(ResId const&)
ScTabViewObj::ScTabViewObj()
ScTabViewObj::StartMouseListening()
ScTabViewShell::ExecuteShowNIY(SfxRequest&)
ScTabViewShell::GetEditChartName() const
ScTabViewShell::IsChartDlgEdit() const
ScTabViewShell::ResetChartArea()
ScTabViewShell::ScTabViewShell(SfxViewFrame*, ScTabViewShell const&)
ScTabViewShell::SetMySubShell(SfxShell*)
ScTabViewShell::StateDisabled(SfxItemSet&)
ScTabViewShell::TestFunction(unsigned short)
ScTable::UpdateInsertTabOnlyCells(short)
ScTableConditionalEntry::ScTableConditionalEntry()
ScTableConditionalFormat::DataChanged()
ScTableConditionalFormat::ScTableConditionalFormat()
ScTableListItem::GetTableList(List&) const
ScTableValidationObj::DataChanged()
ScTableValidationObj::ScTableValidationObj()
ScToken::IsRPNReferenceAbsName() const
ScToken::Store(SvStream&) const
ScTokenArray::HasName() const
ScTokenArray::Store(SvStream&, ScAddress const&) const
ScTokenIterator::First()
ScTpCalcItem::ScTpCalcItem(unsigned short)
ScTpCalcOptions::GetRanges()
ScTpPrintItem::ScTpPrintItem(unsigned short)
ScTpPrintOptions::GetRanges()
ScTpSubTotalGroup::GetRanges()
ScTpUserLists::GetRanges()
ScTpViewItem::ScTpViewItem(unsigned short)
ScUndoPivot::ScUndoPivot(ScDocShell*, ScArea const&, ScArea const&, ScDocument*, ScDocument*, ScPivot const*, ScPivot const*)
ScUnoAddInHelpIdGenerator::ScUnoAddInHelpIdGenerator()
ScUpdateRect::GetContDiff(short&, int&, short&, int&)
ScUpdateRect::GetXorDiff(short&, int&, short&, int&, unsigned char&)
ScValidationEntries_Impl::Insert(ScValidationData* const&, unsigned short&)
ScValidationEntries_Impl::Insert(ScValidationData* const*, unsigned short)
ScValidationEntries_Impl::Insert(ScValidationEntries_Impl const*, unsigned short, unsigned short)
ScValidationEntries_Impl::Remove(ScValidationData* const&, unsigned short)
ScValidationEntries_Impl::Remove(unsigned short, unsigned short)
ScValueCell::ScValueCell(SvStream&, unsigned short)
ScValueIterator::ScValueIterator(ScDocument*, short, int, short, short, int, short, unsigned char, unsigned char)
ScVbaChart::DataLabels(com::sun::star::uno::Reference<org::openoffice::excel::XSeries>)
ScVbaChart::getHasDataCaption(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
ScVbaChart::getSeriesCount()
ScVbaChart::getSeriesIndex(rtl::OUString)
ScVbaChart::getSeriesName(int)
ScVbaChart::getValue(int, int)
ScVbaChart::getValuesCount(int)
ScVbaChart::setHasDataCaption(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
ScVbaChart::setSeriesName(int, rtl::OUString)
ScVbaChartObject::getHeight()
ScVbaChartObject::getLeft()
ScVbaChartObject::getTop()
ScVbaChartObject::getUnoObject()
ScVbaChartObject::getWidth()
ScVbaChartObject::setHeight(double)
ScVbaChartObject::setLeft(double)
ScVbaChartObject::setTop(double)
ScVbaChartObject::setWidth(double)
ScVbaCharts::ScVbaCharts(com::sun::star::uno::Reference<org::openoffice::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
ScVbaColorFormat::setColorFormat(short)
ScVbaControl::SetControl(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>, com::sun::star::uno::Reference<com::sun::star::drawing::XControlShape>)
ScVbaControl::SetControl(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>, com::sun::star::uno::Reference<com::sun::star::drawing::XControlShape>)
ScVbaControlFactory::ScVbaControlFactory(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XControlShape>)
ScVbaControlFactory::createControl(short)
ScVbaFormat<org::openoffice::excel::XRange>::getDefaultLocale()
ScVbaFormat<org::openoffice::excel::XRange>::getXServiceInfo()
ScVbaFormat<org::openoffice::excel::XRange>::setNumberFormat(com::sun::star::lang::Locale, rtl::OUString const&)
ScVbaFormat<org::openoffice::excel::XStyle>::getAddIndent()
ScVbaFormat<org::openoffice::excel::XStyle>::getDefaultLocale()
ScVbaFormat<org::openoffice::excel::XStyle>::getXServiceInfo()
ScVbaFormat<org::openoffice::excel::XStyle>::setAddIndent(com::sun::star::uno::Any const&)
ScVbaFormat<org::openoffice::excel::XStyle>::setNumberFormat(com::sun::star::lang::Locale, rtl::OUString const&)
ScVbaFormatConditions::ScVbaFormatConditions(com::sun::star::uno::Reference<org::openoffice::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::sheet::XSheetConditionalEntries> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
ScVbaLineFormat::calculateArrowheadSize()
ScVbaListBox::ScVbaListBox(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XControlShape>)
ScVbaSeriesCollection::ScVbaSeriesCollection(com::sun::star::uno::Reference<org::openoffice::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
ScVbaShape::ScVbaShape(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape>)
ScVbaWorkbooks::getCurrentDelim()
ScViewData::InitFrom(ScViewData const*)
ScViewData::LastCellsX(ScHSplitPos) const
ScViewData::LastCellsY(ScVSplitPos) const
ScViewData::SetDocShell(ScDocShell*)
ScViewData::UpdateOle(ScSplitPos)
ScViewDataTable::~ScViewDataTable()
ScViewFunc::DoSpellingChecker(unsigned char)
ScViewFunc::LinkStubSpellError(void*, void*)
ScViewFunc::PaintWidthHeight(unsigned char, int, int)
ScXMLConverter::ConvertStringToDateTime(rtl::OUString const&, DateTime&, SvXMLUnitConverter*)
ScXMLExport::GetMerge(com::sun::star::uno::Reference<com::sun::star::sheet::XSpreadsheet> const&, int, int, com::sun::star::table::CellRangeAddress&)
ScXMLExport::IsAnnotationEqual(com::sun::star::uno::Reference<com::sun::star::table::XCell> const&, com::sun::star::uno::Reference<com::sun::star::table::XCell> const&)
ScXMLExport::IsEditCell(com::sun::star::uno::Reference<com::sun::star::table::XCell> const&) const
ScXMLExport::IsMatrix(com::sun::star::uno::Reference<com::sun::star::table::XCellRange> const&, com::sun::star::uno::Reference<com::sun::star::sheet::XSpreadsheet> const&, int, int, com::sun::star::table::CellRangeAddress&, unsigned char&) const
ScXMLImport::GetStyleElemTokenMap()
ScXMLImport::GetStylesAttrTokenMap()
ScXMLImport::GetStylesElemTokenMap()
ScXMLImport::GetTableRowCellAttrTokenMap()
ScXMLImportWrapper::GetStatusIndicator(com::sun::star::uno::Reference<com::sun::star::frame::XModel>&)
ScaDoubleList::Append(ScaAnyConverter&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Any const&, unsigned char)
ScaDoubleList::Append(ScaAnyConverter&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::uno::Any> > const&, unsigned char)
ScaList::Insert(void*, unsigned int)
ScaStringList::Contains(rtl::OUString const&) const
ScalableBitmapXlfd::ScalableBitmapXlfd()
ScannerManager::getImplementationName()
ScannerManager::supportsService(rtl::OUString const&)
ScfApiHelper::CreateInstanceWithArgs(SfxObjectShell*, rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
ScfApiHelper::CreateInstanceWithArgs(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
ScfStreamProgressBar::ScfStreamProgressBar(SvStream&, SfxObjectShell*, String const&)
SchXMLExport::SetProgress(int)
SchXMLExportHelper::getCellAddress(int, int)
SchXMLExportHelper::swapDataArray(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> >&)
SchXMLImport::SchXMLImport(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel>, com::sun::star::uno::Reference<com::sun::star::document::XGraphicObjectResolver>&, unsigned char, unsigned char)
SchXMLImportHelper::GetAutoStyleAttrTokenMap()
SchXMLImportHelper::GetLengthOfSeries()
SchXMLImportHelper::GetNewLabeledDataSequence()
SchXMLImportHelper::GetNumberOfSeries()
SchXMLImportHelper::ResizeChartData(int, int)
SchXMLSeriesHelper::getFirstCandleStickSeries(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
ScriptEventFactory::instance()
ScriptTypePosInfos::Replace(ScriptTypePosInfo const&, unsigned short)
ScriptTypePosInfos::Replace(ScriptTypePosInfo const*, unsigned short, unsigned short)
ScriptTypePosInfos::_ForEach(unsigned short, unsigned short, unsigned char (*)(ScriptTypePosInfo const&, void*), void*)
ScrollBarBox::ScrollBarBox(Window*, ResId const&)
ScrollableWindow::MakeVisible(Rectangle const&, unsigned char)
ScrollableWindow::ScrollLines(long, long)
ScrollableWindow::ScrollPages(long, unsigned long, long, unsigned long)
ScrollableWindow::ScrollableWindow(Window*, ResId const&, unsigned short)
ScrollableWindow::SetLineSize(unsigned long, unsigned long)
ScrollableWindow::SetVisibleSize(Size const&)
SdAnimationPrmsUndoAction::SdAnimationPrmsUndoAction(SdDrawDocument*, SdrObject*)
SdDLL::Exit()
SdDocPreviewWin::SdDocPreviewWin(Window*)
SdDocPreviewWin::SetGDIFile(GDIMetaFile*)
SdDrawDocument::CreatePage(unsigned short)
SdDrawDocument::MakeUniqueLayerNames()
SdExportFileDialog::Execute()
SdExportFileDialog::GetPath() const
SdExportFileDialog::IsExportSelection() const
SdExportFileDialog::ReqCurrentFilter() const
SdExportFileDialog::SdExportFileDialog(unsigned char)
SdExportFileDialog::SetPath(String const&)
SdExportFileDialog::~SdExportFileDialog()
SdFilterDetect::impl_createFactory(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
SdGenericDrawPage::getImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface>)
SdHtmlAttrPreview::GetColors(Color&, Color&, Color&, Color&, Color&) const
SdModule::GetDefaultWritingMode() const
SdOptions::SetRangeDefaults(unsigned long)
SdOptionsGridItem::SdOptionsGridItem(unsigned short)
SdOptionsPrint::SetPrinterOptions(SdOptionsPrint const*)
SdOptionsZoomItem::SdOptionsZoomItem(unsigned short)
SdOptionsZoomItem::SdOptionsZoomItem(unsigned short, SdOptions*, sd::FrameView*)
SdOptionsZoomItem::SetOptions(SdOptions*) const
SdPageObjsTLB::GetBookmarkList(unsigned short)
SdPrintOptions::GetRanges()
SdStyleSheetPool::EraseLayoutStyleSheets(String const&)
SdStyleSheetPool::GetLayoutName() const
SdTPAction::GetMacroName(String const&)
SdTPAction::GetRanges()
SdTpOptionsMisc::LinkStubModifyOriginalScaleHdl(void*, void*)
SdTpOptionsMisc::LinkStubModifyScaleHdl(void*, void*)
SdUndoGroup::GetAction(unsigned long) const
SdUnoPseudoStyleFamily::getInternalStyleName(rtl::OUString const&, SdPage*)
SdUnoSearchReplaceShape::SdUnoSearchReplaceShape(com::sun::star::drawing::XShape*)
SdXCustomPresentationAccess::getSdCustomShowIdx(rtl::OUString const&) const
SdXMLImExTransform2D::AddMatrix(basegfx::B2DHomMatrix const&)
SdXMLImExTransform2D::AddScale(basegfx::B2DTuple const&)
SdXMLImExTransform2D::AddSkewY(double)
SdXMLImExTransform2D::SdXMLImExTransform2D(rtl::OUString const&, SvXMLUnitConverter const&)
SdXMLImExTransform3D::AddRotateX(double)
SdXMLImExTransform3D::AddRotateY(double)
SdXMLImExTransform3D::AddRotateZ(double)
SdXMLImExTransform3D::AddScale(basegfx::B3DTuple const&)
SdXMLImExTransform3D::AddTranslate(basegfx::B3DTuple const&)
SdXMLImport::ImportPoolDefaults(XMLPropStyleContext const*)
SdXMLImport::SetProgress(int)
SdXMLViewSettingsContext::SdXMLViewSettingsContext(SdXMLImport&, unsigned short, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
SdXShape::SdXShape()
SdrCreateView::ImpDelCreateAttr()
SdrCreateView::ImpMakeCreateAttr()
SdrCustomShapeDataItem::SdrCustomShapeDataItem(String const&)
SdrCustomShapeEngineItem::SdrCustomShapeEngineItem(String const&)
SdrCustomShapeGeometryItem::ClearPropertyValue(rtl::OUString const&, rtl::OUString const&)
SdrCustomShapeReplacementURLItem::SdrCustomShapeReplacementURLItem(String const&)
SdrDragView::ImpDelDragAttr()
SdrDragView::ImpMakeDragAttr()
SdrDragView::IsMoveOnlyDragObj(unsigned char) const
SdrDragView::SetDetailedEdgeDragging(unsigned char)
SdrDragView::SetDetailedEdgeDraggingLimit(unsigned short)
SdrDragView::SetRubberEdgeDragging(unsigned char)
SdrDragView::SetRubberEdgeDraggingLimit(unsigned short)
SdrEdgeObj::ImpStripPolyPoints(XPolygon&) const
SdrEditView::ImpBundleVirtObjOfMarkList()
SdrEditView::MoveLayer(String const&, unsigned short)
SdrEngineDefaults::LanguageHasChanged()
SdrEscherImport::CheckMonotypeSorts() const
SdrEscherImport::CheckTimesNewRoman() const
SdrEscherImport::CheckWingdings() const
SdrEscherImport::GetCharSet(unsigned int) const
SdrEscherImport::IsFontAvailable(unsigned int) const
SdrExchangeView::CutMarked(unsigned long)
SdrExchangeView::GetPastePos(SdrObjList*, OutputDevice*)
SdrExchangeView::IsExchangeFormatSupported(unsigned long) const
SdrExchangeView::Paste(Bitmap const&, Point const&, SdrObjList*, unsigned int)
SdrExchangeView::Paste(GDIMetaFile const&, Point const&, SdrObjList*, unsigned int)
SdrExchangeView::YankMarked(unsigned long)
SdrGlobalData::~SdrGlobalData()
SdrGlueEditView::IsDeleteMarkedGluePointsPossible() const
SdrGluePoint::Draw(OutputDevice&, SdrObject const*) const
SdrGluePoint::Mirror(Point const&, Point const&, SdrObject const*)
SdrGrafObj::GetGDIMetaFile() const
SdrGrafObj::ImpSetGrafInfoToAttr()
SdrGrafObj::SetFileName(String const&)
SdrGrafObj::SetFilterName(String const&)
SdrHdlBitmapSet::~SdrHdlBitmapSet()
SdrHint::GetObjList() const
SdrHint::GetRect() const
SdrHint::SdrHint()
SdrHint::SdrHint(SdrObject const&, Rectangle const&)
SdrHint::SetObjList(SdrObjList const*)
SdrHint::SetRect(Rectangle const&)
SdrItemBrowser::ForceParent()
SdrItemBrowser::SdrItemBrowser(SdrView&)
SdrLayerAdmin::MoveLayer(SdrLayer*, unsigned short)
SdrMark::GetObjList() const
SdrMark::GetPage() const
SdrMarkView::IsMoveOutside() const
SdrMarkView::PickSomething(Point const&, short) const
SdrMarkView::UnmarkGluePoint(SdrHdl const&)
SdrMediaObj::getPreferredSize() const
SdrMediaObj::hasPreferredSize() const
SdrModel::BegUndo(SdrUndoGroup*)
SdrModel::CheckConsistence() const
SdrModel::GetNumberFormatter() const
SdrObjEditView::AddTextEditOfs(MouseEvent&) const
SdrObjEditView::Cut(unsigned long)
SdrObjEditView::IsTextEditFrame() const
SdrObjEditView::Paste(Window*, unsigned long)
SdrObjEditView::SdrBeginTextEdit(SdrObject*, SdrPageView*, Window*, SdrOutliner*, OutlinerView*, unsigned char, unsigned char)
SdrObjEditView::Yank(unsigned long)
SdrObjFactory::MakeNewObjUserData(unsigned int, unsigned short, SdrObject*)
SdrObject::ClearObjectItem(unsigned short)
SdrObject::ForceAutoTimer()
SdrObject::FreeGlobalDrawObjectItemPool()
SdrObject::GetHTMLName() const
SdrObject::SetHTMLName(String const&)
SdrOle2Obj::CreatePersistName(SfxObjectShell*)
SdrOle2Obj::SdrOle2Obj(svt::EmbeddedObjectRef const&, String const&, int)
SdrOle2Obj::SdrOle2Obj(svt::EmbeddedObjectRef const&, int)
SdrOle2Obj::SetGraphicToObj(Graphic const&, rtl::OUString const&)
SdrPage::AddComment(sdr::Comment const&)
SdrPage::GetBitmap(SetOfByte const&, int) const
SdrPage::GetCommentByIndex(unsigned int)
SdrPage::GetMetaFile(SetOfByte const&, int)
SdrPage::ReplaceCommentByIndex(unsigned int, sdr::Comment const&)
SdrPageView::GetActualGroupName() const
SdrPageView::GetActualPathName(unsigned short) const
SdrPageView::InvalidateAllWin(Rectangle const&, unsigned char)
SdrPageView::RemovePageWindow(unsigned int)
SdrPaintView::SetAllLayersLocked(unsigned char)
SdrPaintView::SetAllLayersPrintable(unsigned char)
SdrPaintView::SetAllLayersVisible(unsigned char)
SdrPaintView::getColorConfig() const
SdrPaintWindow::HideOverlay(Region const&)
SdrPolyEditView::ImpCopyMarkedPoints()
SdrPolyEditView::ShutMarkedObjects()
SdrPowerPointImport::PPTSubstitute(unsigned short, unsigned short, unsigned int&, Font&, char) const
SdrRectObj::SdrRectObj(SdrObjKind, Rectangle const&, SvStream&, String const&, unsigned short)
SdrTextObj::NbcSetAutoGrowHeight(bool)
SdrTextObj::NbcSetAutoGrowWidth(bool)
SdrTextObj::NbcSetFitToSize(SdrFitToSizeType)
SdrTextObj::NbcSetMaxTextFrameHeight(long)
SdrTextObj::NbcSetMaxTextFrameWidth(long)
SdrTextObj::StartTextAnimation(OutputDevice*, Point const&, long)
SdrTextObj::StopTextAnimation(OutputDevice*, long)
SdrUndoAttrObj::SetRepeatAttr(SfxItemSet const&)
SdrUndoGroup::SdrUndoGroup(SdrModel&, String const&)
SdrUndoGroup::push_front(SdrUndoAction*)
SdrView::IsAllMarkPrevNextPossible() const
SdrView::IsAllMarked() const
SdrView::IsDeleteMarkedPossible() const
SdrView::IsMarkPossible() const
SdrView::MarkNext(Point const&, unsigned char)
SdrView::MarkNext(unsigned char)
SdrView::SetMarkedRect(Rectangle const&)
SdrViewIter::FirstOutDev()
SdrViewIter::FirstPageView()
SdrViewIter::FirstWindow()
SdrViewIter::NextOutDev()
SdrViewIter::NextPageView()
SdrViewIter::NextWindow()
SdrViewIter::SdrViewIter(SdrModel const*)
SdrVirtObj::SdrVirtObj(SdrObject&, Point const&)
SearchAndReplace(String const&, String const&, String const&)
SectReprArr::Insert(SectRepr* const&, unsigned short&)
SectReprArr::Insert(SectRepr* const*, unsigned short)
SectReprArr::Insert(SectReprArr const*, unsigned short, unsigned short)
SectReprArr::Remove(SectRepr* const&, unsigned short)
SectReprArr::Remove(unsigned short, unsigned short)
SecurityEnvironment_NssImpl::getImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface>)
SelectionEngine::ActivateDragMode()
ServerFont::TransformPoint(Point const&) const
SetLanguage
SetLevel(unsigned char*, unsigned char)
SetOfByte::GetClearBit(unsigned short) const
SetOfByte::GetClearCount() const
SetOfByte::GetSetBit(unsigned short) const
SetOfByte::IsFull() const
SetStreamMediaType_Impl(com::sun::star::uno::Reference<com::sun::star::io::XStream> const&, rtl::OUString const&)
SfxAcceleratorConfigPage::CopySource2Target(com::sun::star::uno::Reference<com::sun::star::ui::XAcceleratorConfiguration> const&, com::sun::star::uno::Reference<com::sun::star::ui::XAcceleratorConfiguration> const&)
SfxAcceleratorConfigPage::GetFunctionName(KeyFuncType) const
SfxAcceleratorConfigPage::MapPosToKeyCode(unsigned short) const
SfxAcceleratorConfigPage::SelectMacro(SfxMacroInfoItem const*)
SfxAllEnumItem::RemoveAllValues()
SfxAllEnumItem::SfxAllEnumItem(unsigned short, unsigned short, String const&)
SfxAppMenuControl_Impl::RegisterControl(unsigned short, SfxModule*)
SfxApplication::DdeCreateLinkSource(String const&)
SfxApplication::DdeGetData(String const&, String const&, com::sun::star::uno::Any&)
SfxApplication::DdeSetData(String const&, String const&, com::sun::star::uno::Any const&)
SfxApplication::EnterAsynchronCall_Impl()
SfxApplication::GetLabelResManager() const
SfxApplication::GetResourceManager() const
SfxApplication::InitializeDde()
SfxApplication::InitializeDisplayName_Impl()
SfxApplication::IsInAsynchronCall_Impl() const
SfxApplication::LeaveAsynchronCall_Impl()
SfxApplication::Main()
SfxApplication::RegisterBasicConstants(char const*, SfxConstant const*, unsigned short)
SfxApplication::SaveAll_Impl(unsigned char, unsigned char)
SfxAsyncEvent_Impl::SfxAsyncEvent_Impl(SfxObjectShell*, SvxMacro const*, String const&)
SfxBaseController::FrameIsReleasedWithController(unsigned char)
SfxBaseModel::IsDisposed() const
SfxBaseModel::NotifyStorageListeners_Impl()
SfxBaseModel::impl_change()
SfxBaseModel::impl_getObjectShell() const
SfxBigIntItem::SfxBigIntItem(unsigned short, BigInt const&)
SfxBindings::ExecuteGlobal_Impl(unsigned short)
SfxBindings::GetDispatchProvider_Impl() const
SfxBindings::GetPopupAction_Impl() const
SfxBindings::GetSlot(unsigned short)
SfxBindings::GetSystemWindow() const
SfxBindings::Invalidate(unsigned short, unsigned char)
SfxBroadcaster::BroadcastDelayed(SfxHint const&)
SfxBroadcaster::BroadcastInIdle(SfxHint const&)
SfxBrushItemLink::Set(SfxBrushItemLink*)
SfxCallMacro(BasicManager*, String const&, SbxArray*, SbxValue*)
SfxChildWinController_Impl::SfxChildWinController_Impl(unsigned short, SfxWorkWindow*)
SfxChildWindow::SetHideAtToggle(unsigned char)
SfxChildWindow::SetPosSizePixel(Point const&, Size&)
SfxChildWindowContext::GetAlignment() const
SfxColumnDateTimeItem::SfxColumnDateTimeItem(SfxDateTimeItem const&)
SfxColumnDateTimeItem::SfxColumnDateTimeItem(unsigned short)
SfxColumnDateTimeItem::SfxColumnDateTimeItem(unsigned short, DateTime const&)
SfxCommonTemplateDialog_Impl::InfoOffsetToStyleNr(unsigned short)
SfxConfigFunctionListBox_Impl::GetEntry_Impl(String const&)
SfxConfigFunctionListBox_Impl::GetEntry_Impl(unsigned short)
SfxConfigFunctionListBox_Impl::GetId(SvLBoxEntry*)
SfxConfigGroupListBox_Impl::InitBasic()
SfxConfigGroupListBox_Impl::InitStyles()
SfxContentHelper::CopyTo(String const&, String const&)
SfxContentHelper::Exists(String const&)
SfxContentHelper::Find(String const&, String const&, String&)
SfxContentHelper::GetFolderContentProperties(String const&, unsigned char)
SfxContentHelper::GetFolderContents(String const&, unsigned char, unsigned char)
SfxContentHelper::GetTitle(String const&, String&)
SfxContentHelper::IsFolder(String const&)
SfxContentHelper::MakeFolder(String const&)
SfxContentHelper::MoveTo(String const&, String const&, int)
SfxContentHelper::QueryDiskSpace(String const&, long&)
SfxControllerItem::GetCoreMetric() const
SfxControllerItem::UpdateSlot()
SfxCrawlStatusItem::SfxCrawlStatusItem(unsigned short)
SfxDateTimeRangeItem::SfxDateTimeRangeItem(unsigned short)
SfxDispatchController_Impl::isMasterSlaveCommand() const
SfxDispatcher::DebugOutput_Impl() const
SfxDispatcher::EnterAction(String const&)
SfxDispatcher::ExecutePopup(unsigned short, Window*, Point const*, SfxPoolItem const*, ...)
SfxDispatcher::GetSlotId(String const&)
SfxDispatcher::HasSlot_Impl(unsigned short)
SfxDispatcher::LeaveAction()
SfxDispatcher::ResetObjectBars_Impl()
SfxDispatcher::SetModalMode_Impl(unsigned char)
SfxDispatcher::_Execute(SfxSlotServer const&)
SfxDocTemplate_Impl::GetTemplates(ucbhelper::Content&, ucbhelper::Content&, RegionData_Impl*)
SfxDockingWindow::GetSplitWindow_Impl() const
SfxDockingWindow::IsPinned_Impl() const
SfxDocumentInfo::Clear()
SfxDocumentInfo::GetMimeType() const
SfxDocumentInfo::SfxDocumentInfo(com::sun::star::uno::Reference<com::sun::star::document::XDocumentInfo> const&)
SfxDocumentTemplateDlg::GetTemplatePath()
SfxDocumentTemplateDlg::NewTemplate(String const&)
SfxDocumentTemplates::GetCount(String const&) const
SfxDocumentTemplates::GetRegionNo(String const&) const
SfxDocumentTemplates::SaveDir()
SfxEnumMenu::SfxEnumMenu(unsigned short, SfxBindings*, SfxEnumItem const&)
SfxEventConfiguration::GetEventId(String const&) const
SfxEventConfiguration::GetEventName(unsigned short) const
SfxEventConfiguration::~SfxEventConfiguration()
SfxExecuteItem::SfxExecuteItem(unsigned short, unsigned short, unsigned short)
SfxExecuteItem::SfxExecuteItem(unsigned short, unsigned short, unsigned short, SfxPoolItem const*, ...)
SfxFilterContainer::GetFilter4ClipBoardId(unsigned int, unsigned long, unsigned long) const
SfxFilterContainer::GetFilter4Mime(String const&, unsigned long, unsigned long) const
SfxFilterContainer::GetFilter4UIName(String const&, unsigned long, unsigned long) const
SfxFilterPtrArr::DeleteAndDestroy(unsigned short, unsigned short)
SfxFlagItem::SetFlag(unsigned char, int)
SfxFlagItem::SfxFlagItem(unsigned short, SvStream&)
SfxFontSizeInfo::HasSize(Size const&) const
SfxFontSizeInfo::SfxFontSizeInfo(SfxFont const&, OutputDevice const&)
SfxFontSizeInfo::~SfxFontSizeInfo()
SfxFoundCacheArr_Impl::Insert(SfxFoundCacheArr_Impl const*, unsigned short, unsigned short)
SfxFoundCacheArr_Impl::Insert(SfxFoundCache_Impl const*&, unsigned short&)
SfxFoundCacheArr_Impl::Insert(SfxFoundCache_Impl const**, unsigned short)
SfxFoundCacheArr_Impl::Remove(SfxFoundCache_Impl const*&, unsigned short)
SfxFoundCacheArr_Impl::Remove(unsigned short, unsigned short)
SfxFrame::Activate_Impl(unsigned char)
SfxFrame::BrowseInFrame(int)
SfxFrame::CheckContentForLoad_Impl()
SfxFrame::ClearHistory()
SfxFrame::Clear_Impl()
SfxFrame::CloseChildFrames()
SfxFrame::CopyHistory_Impl(SfxFrame*) const
SfxFrame::ExecuteHistoryMenu_Impl(unsigned short, Rectangle const&, unsigned short)
SfxFrame::GetBorder_Impl() const
SfxFrame::GetBroadcaster() const
SfxFrame::GetContent() const
SfxFrame::GetFrameId_Impl() const
SfxFrame::GetInterceptor_Impl()
SfxFrame::IsFocusLocked_Impl() const
SfxFrame::IsTop() const
SfxFrame::LoadFinished_Impl()
SfxFrame::LoadSfxComponent(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, SfxObjectFactory const*)
SfxFrame::SetCurrentDocument_Impl(SfxObjectShell*)
SfxFrame::SetDescriptor(SfxFrameDescriptor*)
SfxFrame::SetFrameIdName_Impl(String const&)
SfxFrame::SetFrameId_Impl(unsigned short)
SfxFrame::SetFrameName(String const&)
SfxFrame::SetWorkWindow_Impl(SfxWorkWindow*)
SfxFrame::UpdateCurrentHistory_Impl(SfxObjectShell*, String const*)
SfxFrame::UpdateHistory(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, rtl::OUString const&)
SfxFrame::UpdatePickEntries()
SfxFrame::UpdatePickEntries(com::sun::star::uno::Any const&)
SfxFrame::UpdateUndoHistory_Impl(SfxObjectShell*, String const*, String const*)
SfxFrame::findFrame(rtl::OUString const&, int)
SfxFrameDescriptor::CheckContent() const
SfxFrameDescriptor::CompareOriginal(SfxFrameDescriptor&) const
SfxFrameDescriptor::GetItemPos() const
SfxFrameDescriptor::GetSize() const
SfxFrameDescriptor::GetWallpaper() const
SfxFrameDescriptor::GetWinBits() const
SfxFrameDescriptor::SetURL(INetURLObject const&)
SfxFrameDescriptor::TakeProperties(SfxFrameProperties const&)
SfxFrameDescriptor::UnifyContent(unsigned char)
SfxFrameHTMLWriter::CreateURL(SfxFrame*)
SfxFrameProperties::SfxFrameProperties(SfxFrameDescriptor const*)
SfxFrequencyItem::CalcNextTick(DateTime const&, unsigned char)
SfxFrequencyItem::SfxFrequencyItem(unsigned short)
SfxHTMLParser::FileDownloadDone(SfxHTMLParser*, void*)
SfxHTMLParser::GetFileDownloadMIME(String&)
SfxHelpWindow_Impl::splitHelpURL(rtl::OUString const&, rtl::OUString&, rtl::OUString&, rtl::OUString&)
SfxHelp_Impl::HasModule(rtl::OUString const&)
SfxHelp_Impl::IsHelpInstalled()
SfxHintPoster::RegisterEvent()
SfxHintPoster::SfxHintPoster()
SfxImageItem::GetURL() const
SfxImageItem::SfxImageItem(unsigned short, String const&)
SfxImageManager::SetImages(ToolBox&)
SfxImageManager::SetImages(ToolBox&, unsigned char, unsigned char)
SfxImageManager_Impl::~SfxImageManager_Impl()
SfxInPlaceClient::GetActiveWindow(SfxObjectShell*, com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&)
SfxInPlaceClient::IsObjectActive() const
SfxIniManagerAddressEntry::get(String const&, AddressToken)
SfxItemIter::PrevItem()
SfxItemModifyArr_Impl::Remove(unsigned short, unsigned short)
SfxItemModifyArr_Impl::Replace(SfxItemModifyImpl const&, unsigned short)
SfxItemModifyArr_Impl::Replace(SfxItemModifyImpl const*, unsigned short, unsigned short)
SfxItemModifyArr_Impl::_ForEach(unsigned short, unsigned short, unsigned char (*)(SfxItemModifyImpl const&, void*), void*)
SfxItemPool::Cleanup()
SfxItemPool::GetVersion() const
SfxItemPool::SetStoringPool(SfxItemPool const*)
SfxItemSetHint::SfxItemSetHint(SfxItemSet*)
SfxListener::EndListening(unsigned short)
SfxLockBytesItem::SfxLockBytesItem(unsigned short, SvLockBytes*)
SfxMacro::GenerateSource() const
SfxMacro::GetLastStatement() const
SfxMacro::GetMode() const
SfxMacro::Record(SfxMacroStatement*)
SfxMacro::Remove()
SfxMacro::Replace(SfxMacroStatement*)
SfxMacro::SfxMacro(SfxMacroMode)
SfxMacroConfig::CheckMacro(SfxObjectShell*, SvxMacro const*) const
SfxMacroConfig::CheckMacro(unsigned short) const
SfxMacroConfig::GetMacroInfo_Impl(SvxMacro const*) const
SfxMacroConfig::LinkStubCallbackHdl_Impl(void*, void*)
SfxMacroConfig::Release_Impl()
SfxMacroConfig::RequestHelp(unsigned short)
SfxMacroInfo::GetURL() const
SfxMacroInfo::Load(SvStream&)
SfxMacroInfo::SfxMacroInfo(SfxObjectShell*)
SfxMacroInfo::SfxMacroInfo(SfxObjectShell*, String const&)
SfxMacroStatement::SfxMacroStatement(SfxShell const&, String const&, unsigned char, SfxSlot const&, unsigned char, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
SfxMacroStatement::SfxMacroStatement(String const&)
SfxMacroStatement::SfxMacroStatement(String const&, SfxSlot const&, unsigned char, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
SfxMailModel::GetCount() const
SfxMailModel::MakeValueList(AddressList_Impl*, String&)
SfxMedium::Cancel_Impl()
SfxMedium::DataAvailable_Impl()
SfxMedium::GetCharset()
SfxMedium::GetDataAvailableLink() const
SfxMedium::GetDoneLink() const
SfxMedium::GetFileVersion() const
SfxMedium::GetHdl()
SfxMedium::GetPreRedirectedURL() const
SfxMedium::GetReferer() const
SfxMedium::IsDownloadDone_Impl()
SfxMedium::IsOpen() const
SfxMedium::IsTemporary() const
SfxMedium::MoveStorageTo_Impl(SfxMedium*)
SfxMedium::MoveTempTo_Impl(SfxMedium*)
SfxMedium::RefreshName_Impl()
SfxMedium::SetClassFilter(SvGlobalName const&)
SfxMedium::SetItemSet(SfxItemSet*)
SfxMedium::SetOrigFilter_Impl(SfxFilter const*)
SfxMedium::StartDownload()
SfxMedium::TryStorage()
SfxMedium::TryToSwitchToRepairedTemp()
SfxMenuControl::IsSpecialControl(unsigned short, SfxModule*)
SfxMenuControl::RemovePopup()
SfxMenuControl::SetOwnMenu(SfxVirtualMenu*)
SfxMenuManager::Construct_Impl(Menu*, unsigned char)
SfxMenuManager::UseDefault()
SfxMiniRecordReader::ScanRecordType(SvStream*)
SfxMiniRecordReader::SfxMiniRecordReader(SvStream*)
SfxModelessDialog::SfxModelessDialog(SfxBindings*, SfxChildWindow*, Window*, long)
SfxModule::GetImageList_Impl(unsigned char)
SfxModule::IsActive() const
SfxModule::RegisterChildWindowContext(unsigned short, SfxChildWinContextFactory*)
SfxModuleArr_Impl::DeleteAndDestroy(unsigned short, unsigned short)
SfxMultiFixRecordWriter::SfxMultiFixRecordWriter(SvStream*, unsigned short, unsigned char, unsigned int)
SfxMultiRecordReader::SfxMultiRecordReader(SvStream*)
SfxNavigatorWrapper::GetChildWindowId()
SfxNewFileDialog::GetTemplateName() const
SfxNewFileDialog::GetTemplateRegion() const
SfxObjectFactory::GetDocumentTypeName() const
SfxObjectFactory::SetDocumentTypeNameResource(ResId const&)
SfxObjectFactory::~SfxObjectFactory()
SfxObjectList::GetFileName(unsigned short) const
SfxObjectShell::Call(String const&, unsigned char, SbxObject*)
SfxObjectShell::Count()
SfxObjectShell::GetLastMark_Impl() const
SfxObjectShell::IsBasic(String const&, SbxObject*)
SfxObjectShell::IsSecure()
SfxObjectShell::LockAutoLoad(unsigned char)
SfxObjectShell::NoDependencyFromManifest_Impl(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxObjectShell::SetFlags(unsigned int)
SfxObjectShell::SetLastMark_Impl(String const&)
SfxObjectShell::SetTemplate(unsigned char)
SfxObjectShell::StartLoading_Impl()
SfxObjectShell::StateView_Impl(SfxItemSet&)
SfxObjectVerbsControl::RegisterControl(unsigned short, SfxModule*)
SfxOfficeDispatch::IsMasterUnoCommand() const
SfxOrganizeDlg_Impl::OkHdl(Button*)
SfxPartChildWnd_Impl::GetChildWindowId()
SfxPickList::Delete()
SfxPickList::GetMenuEntryTitle(unsigned int)
SfxPointItem::SfxPointItem(unsigned short, SvStream&)
SfxPopupMenuManager::AddClipboardFunctions()
SfxPopupMenuManager::CheckItem(unsigned short, unsigned char)
SfxPopupMenuManager::EndInsert()
SfxPopupMenuManager::Execute(Point const&, Window*, SfxPoolItem const*, ...)
SfxPopupMenuManager::InsertItem(unsigned short, String const&, unsigned short, unsigned short)
SfxPopupMenuManager::InsertSeparator(unsigned short)
SfxPopupMenuManager::RemoveItem(unsigned short)
SfxPopupMenuManager::SfxPopupMenuManager(ResId const&, SfxBindings&)
SfxPopupMenuManager::StartInsert()
SfxPopupWindow::EndCascading()
SfxPopupWindow::LinkStubDelete(void*, void*)
SfxPopupWindow::RemoveStatusListener(rtl::OUString const&)
SfxPopupWindow::UpdateStatus(rtl::OUString const&)
SfxPreviewBase_Impl::SetGDIFile(GDIMetaFile*)
SfxPreviewWin::SfxPreviewWin(Window*, ResId const&, SfxObjectShellLock&)
SfxPreviewWin_Impl::PreviewFactory(SfxFrame*, String const&)
SfxPrinter::DisableRange(unsigned short)
SfxPrinter::EnableRange(unsigned short)
SfxProgress::GetWaitMode() const
SfxProgress::StatusBarManagerGone_Impl(SfxStatusBarManager*)
SfxPtrArr::Replace(void*, void*)
SfxRangeItem::SfxRangeItem(unsigned short, SvStream&)
SfxRecordingFloatWrapper_Impl::GetChildWindowId()
SfxRectangleItem::SfxRectangleItem(unsigned short, SvStream&)
SfxRequest::IsRecording() const
SfxRequest::SetTarget(String const&)
SfxScriptOrganizerItem::SfxScriptOrganizerItem(String const&)
SfxShell::GetBroadcaster()
SfxShell::RemoveItem(unsigned short)
SfxSimpleLockBytesFactory::SfxSimpleLockBytesFactory(SvLockBytes*, String const&)
SfxSimpleLockBytesFactory::SfxSimpleLockBytesFactory(SvLockBytes*, String const&, String const&)
SfxSimpleLockBytesFactory::TempURL(String const&)
SfxSimpleResId::SfxSimpleResId(unsigned short)
SfxSingleRecordReader::SfxSingleRecordReader(SvStream*)
SfxSingleRecordWriter::SfxSingleRecordWriter(SvStream*, unsigned short, unsigned char, unsigned int)
SfxSingleTabDialog::GetInputRanges(SfxItemPool const&)
SfxSizeItem::SfxSizeItem(unsigned short, SvStream&)
SfxSlotPool::NextInterface()
SfxStatusListener::Bind()
SfxStatusListener::Bind(unsigned short, rtl::OUString const&)
SfxStringListItem::Sort(unsigned char, List*)
SfxStyleSheetBasePool::GetStreamName()
SfxStyleSheetHintExtended::SfxStyleSheetHintExtended(unsigned short, String const&)
SfxTabDialog::FillOutputItemSet()
SfxTabDialog::GetApplyButton()
SfxTabDialog::GetApplyButton() const
SfxTabDialog::GetApplyHandler() const
SfxTabDialog::GetOutputItemSet(unsigned short) const
SfxTabDialog::SfxTabDialog(Window*, ResId const&, unsigned short, SfxBindings&, unsigned char, String const*)
SfxTabPage::GetExchangeItem(SfxItemSet const&, unsigned short)
SfxTabPage::SfxTabPage(Window*, long, SfxItemSet const&)
SfxTargetFrameItem::GetTargetFrame(SfxOpenMode) const
SfxTargetFrameItem::SfxTargetFrameItem(unsigned short, String const&, String const&, String const&)
SfxToDoStack_Implarr_::Contains(SfxToDo_Impl const&) const
SfxToDoStack_Implarr_::Insert(unsigned short, SfxToDo_Impl const&, unsigned short)
SfxToDoStack_Implarr_::Remove(SfxToDo_Impl const&)
SfxTopFrame::CheckMenuCloser_Impl(MenuBar*)
SfxTopFrame::GetWindowData()
SfxTopWindow_Impl::LinkStubCloserHdl(void*, void*)
SfxUINT32s::Remove(unsigned short, unsigned short)
SfxUINT32s::Replace(unsigned int const&, unsigned short)
SfxUINT32s::Replace(unsigned int const*, unsigned short, unsigned short)
SfxUINT32s::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned int const&, void*), void*)
SfxULongRangeItem::SfxULongRangeItem(unsigned short, SvStream&)
SfxULongRanges::Contains(unsigned long) const
SfxULongRanges::Intersects(SfxULongRanges const&) const
SfxULongRanges::SfxULongRanges(int, int, int, ...)
SfxULongRanges::SfxULongRanges(unsigned long const*)
SfxULongRanges::SfxULongRanges(unsigned long, unsigned long)
SfxULongRangesItem::SfxULongRangesItem(unsigned short, unsigned int const*)
SfxURLToolBoxControl_Impl::LinkStubWindowEventListener(void*, void*)
SfxUShortRanges::Contains(unsigned short) const
SfxUShortRanges::Intersects(SfxUShortRanges const&) const
SfxUShortRanges::SfxUShortRanges(int, int, int, ...)
SfxUShortRangesItem::SfxUShortRangesItem(unsigned short, unsigned short const*)
SfxUnoMenuControl::Select()
SfxUpdateDialog::LinkStubCancelHdl_Impl(void*, void*)
SfxUrlDialog::SfxUrlDialog(Window*)
SfxVersionTableDtor::GetVersions() const
SfxViewFactory::InitFactory()
SfxViewFactory::~SfxViewFactory()
SfxViewFrame::ClearEventFlag_Impl()
SfxViewFrame::CloseHiddenFrames_Impl()
SfxViewFrame::Count(void* (*)())
SfxViewFrame::DoAdjustPosSize(SfxViewShell*, Point, Size const&)
SfxViewFrame::ExecReload_Impl(SfxRequest&, unsigned char)
SfxViewFrame::GetImportingObjectShell_Impl() const
SfxViewFrame::GetRecordingMacro_Impl()
SfxViewFrame::Hide()
SfxViewFrame::SearchViewFrame(SfxViewFrame*, String const&)
SfxViewFrame::SetImportingObjectShell_Impl(SfxObjectShell*)
SfxViewFrame::SetMargin_Impl(Size const&)
SfxViewFrame::SetParentViewFrame_Impl(SfxViewFrame*)
SfxViewFrame::SetSetViewFrameAllowed_Impl(unsigned char)
SfxViewFrame::SfxViewFrame(SfxObjectShell&, SfxBindings&, SfxFrame*, unsigned int)
SfxViewFrame::SfxViewFrame(SfxViewFrame const&, SfxBindings&, SfxFrame*)
SfxViewFrameClose_Impl(void*, void*)
SfxViewShell::AdjustVisArea(Rectangle const&)
SfxViewShell::GetContextMenuInterceptors() const
SfxViewShell::IsPrinterLocked() const
SfxViewShell::LockPrinter(unsigned char)
SfxViewShell::PlugInsActive() const
SfxViewShell::SetScrollingMode(SfxScrollingMode)
SfxViewShell::SetSubShell(SfxShell*)
SfxVirtualMenu::GetItemHelpText(unsigned short) const
SfxVirtualMenu::GetItemText(unsigned short) const
SfxVirtualMenu::GetPopupMenu(unsigned short) const
SfxVirtualMenu::SetHelpIds(ResMgr*)
SfxWhichIter::LastWhich()
SfxWorkWindow::AlignChild_Impl(Window&, Size const&, SfxChildAlignment)
SfxWorkWindow::ChangeWindow_Impl(Window*)
SfxWorkWindow::CreateDispatch(String const&)
SfxWorkWindow::GetActiveChild_Impl()
SfxWorkWindow::GetObjectBar_Impl(unsigned short, unsigned int)
SfxWorkWindow::GetTopWindow() const
SfxWorkWindow::HasNextObjectBar_Impl(unsigned short, String*)
SfxWorkWindow::NextObjectBar_Impl(unsigned short)
SfxWorkWindow::SetObjectBarCustomizeMode_Impl(unsigned char)
Sgf2hPoint(short)
SgfFilterPScr(SvStream&, SgfHeader&, SgfEntry&)
ShearPoly(PolyPolygon&, Point const&, double, int)
ShearXPoly(XPolyPolygon&, Point const&, double, int)
SimpleConfig::SimpleConfig(DirEntry&)
SimpleErrorHandler::SimpleErrorHandler()
SimpleGuesser::SimpleGuesser(char const*, char const*)
SimpleResMgr::FreeBlob(void*)
SimpleResMgr::GetLocale() const
SimpleResMgr::ReadBlob(unsigned int, void**)
SimpleTokenizer_Impl::getTokStr(unsigned short const*, unsigned short const*)
Simstr::Simstr(char const*, int)
Simstr::ch(int)
Simstr::count(char) const
Simstr::empty()
Simstr::get(int) const
Simstr::get_back() const
Simstr::get_first_token(char) const
Simstr::get_front() const
Simstr::get_last_token(char) const
Simstr::insert(int, Simstr const&)
Simstr::insert(int, char)
Simstr::pos_first_after(char, int) const
Simstr::pos_last(Simstr const&) const
Simstr::rem_back_from(int)
Simstr::remove_all(Simstr const&)
Simstr::remove_all(char)
Simstr::replace(int, char)
Simstr::replace_all(Simstr const&, Simstr const&)
Simstr::strip(char)
Simstr::take_first_token(char)
Simstr::take_last_token(char)
Simstr::to_lower()
SingleCommunicationManagerClientViaSocket::SingleCommunicationManagerClientViaSocket(ByteString, unsigned long, unsigned char)
SingleCommunicationManagerClientViaSocket::SingleCommunicationManagerClientViaSocket(unsigned char)
SingleRefData::CreateFlagsFromLoadByte(unsigned char)
SingleRefData::CreateStoreByteFromFlags() const
SingleRefData::OldBoolsToNewFlags(OldSingleRefBools const&)
SjApplet2::GetJScriptApplet()
SjApplet2::appletReload()
SjApplet2::appletRestart()
SjApplet2::appletStart()
SjApplet2::appletStop()
Slider::SetRangeMax(long)
Slider::SetRangeMin(long)
Slider::Slider(Window*, ResId const&)
SmAboutDialog::SmAboutDialog(Window*, unsigned char)
SmDLL::Exit()
SmEditAccessible::GetDoc_Impl()
SmFilterDetect::impl_createFactory(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
SmFntFmtListEntryArr::Insert(SmFntFmtListEntry const*, unsigned short, unsigned short)
SmFntFmtListEntryArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(SmFntFmtListEntry const&, void*), void*)
SmFontPickListBox::SmFontPickListBox(Window*, long, unsigned short)
SmMathConfig::GetSymbol(unsigned short) const
SmMathConfig::GetSymbolCount() const
SmMathConfig::IsToolboxVisible() const
SmMathConfig::SetToolboxVisible(unsigned char)
SmModel_createInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
SmPickList::Contains(void const*) const
SmPickList::SetSize(unsigned short)
SmRect::Draw(OutputDevice&, Point const&, int) const
SmSymSet::SetName(String&)
SmSymSetManager::Exit()
SmSymSetManager::Init()
SmXMLExport::SmXMLExport(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory>, SmNode const*, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler>&)
SmXMLImport::SmXMLImport(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory>, com::sun::star::uno::Reference<com::sun::star::frame::XModel>&, rtl::OUString const&)
SmartId::SmartId(String const&, unsigned long)
SoPluginInstance::SetPosSize(int, int, int, int)
SoPluginInstance::Setflag(int)
SoPluginInstance::ShutDown()
SortedINT16Array::Insert(SortedINT16Array const*, unsigned short, unsigned short)
SortedINT16Array::Insert(short const&, unsigned short&)
SortedINT16Array::Insert(short const*, unsigned short)
SortedINT16Array::Remove(short const&, unsigned short)
SortedINT16Array::Remove(unsigned short, unsigned short)
SortedINT16Array_SAR::Replace(short const&, unsigned short)
SortedINT16Array_SAR::Replace(short const*, unsigned short, unsigned short)
SortedINT16Array_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(short const&, void*), void*)
SortedIndividualInt32List::CountCondition(int, int) const
SortedIndividualInt32List::InsertHolidayList(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<int> > const&, int, unsigned char)
SortedIndividualInt32List::InsertHolidayList(com::sun::star::uno::Sequence<double> const&, int, unsigned char)
SortedPositions::Insert(SortedPositions const*, unsigned short, unsigned short)
SortedPositions::Insert(unsigned int const&, unsigned short&)
SortedPositions::Insert(unsigned int const*, unsigned short)
SortedPositions::Remove(unsigned int const&, unsigned short)
SortedPositions::Remove(unsigned short, unsigned short)
SortedPositions_SAR::Replace(unsigned int const&, unsigned short)
SortedPositions_SAR::Replace(unsigned int const*, unsigned short, unsigned short)
SortedPositions_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned int const&, void*), void*)
SotExchange::GetExchangeAction(com::sun::star::uno::Reference<com::sun::star::datatransfer::XTransferable> const&, unsigned short, unsigned short, unsigned short, unsigned long&, unsigned short&, unsigned long)
SotExchange::GetFormatStaticName(unsigned long)
SotExchange::GetMaxFormat()
SotExchange::GetStaticNameFormat(String const&)
SotFactory::AggCastAndAddRef(SotObject*) const
SotFactory::TestInvariant()
SotObject::AddInterface(SotFactory*)
SotObject::AddInterface(SotObject*)
SotObject::IsSvObject() const
SotObject::RemoveInterface(SotObject*)
SotObject::RemoveOwnerLock()
SotStorage::GetSvStream()
SotStorage::GetTargetSvStream() const
SotStorage::GetUNOAPIDuplicate(String const&, int)
SotStorage::OpenEncryptedSotStream(String const&, ByteString const&, unsigned short, short)
SotStorage::OpenOLEStorage(String const&, unsigned short, short)
SotStorage::SetKey(ByteString const&)
SotStorage::SetName(String const&)
SotStorage::SotStorage(ucbhelper::Content const&, String const&, unsigned short, short)
SotStorageStream::GetProperty(String const&, com::sun::star::uno::Any&)
SotStorageStream::GetXInputStream() const
Sound::GetSoundPath()
Sound::Pause()
Sound::SetLoopMode(unsigned char)
Sound::SetPlayTime(unsigned long)
Sound::SetSoundPath(String const&)
Sound::SetStartTime(unsigned long)
SoundSettings::CopyData()
SourceDirectory::CreateRootDirectory(ByteString const&, ByteString const&, unsigned char)
SourceTreeIterator::EndExecute()
SpinButton::SpinButton(Window*, ResId const&)
SplitWindow::CalcWindowSizePixel(Size const&, WindowAlign, long, unsigned char)
SplitWindow::GetBaseSet() const
SplitWindow::GetFadeInRect() const
SplitWindow::GetFadeOutRect() const
SplitWindow::GetItemBackground(unsigned short) const
SplitWindow::GetItemBitmap(unsigned short) const
SplitWindow::GetItemBits(unsigned short) const
SplitWindow::GetItemId(Window*) const
SplitWindow::GetItemWindow(unsigned short) const
SplitWindow::GetSet(unsigned short, unsigned short&, unsigned short&) const
SplitWindow::GetSplitSize(unsigned short) const
SplitWindow::IsItemBackground(unsigned short) const
SplitWindow::MoveItem(unsigned short, unsigned short, unsigned short)
SplitWindow::SetBaseSet(unsigned short)
SplitWindow::SetItemBackground(unsigned short)
SplitWindow::SetItemBitmap(unsigned short, Bitmap const&)
SplitWindow::SetItemBits(unsigned short, unsigned short)
SplitWindow::SetNoAlign(unsigned char)
SplitWindow::SetSplitSize(unsigned short, long, unsigned char)
SplitWindow::SplitWindow(Window*, ResId const&)
Splitter::GetKeyboardStepSize() const
SrchAttrItemList::Replace(SearchAttrItem const&, unsigned short)
SrchAttrItemList::Replace(SearchAttrItem const*, unsigned short, unsigned short)
SrchAttrItemList::_ForEach(unsigned short, unsigned short, unsigned char (*)(SearchAttrItem const&, void*), void*)
StandardErrorInfo::StandardErrorInfo(unsigned long, unsigned long, unsigned short)
Star::GetPrjName(DirEntry&)
Star::NeedsUpdate()
Star::Star(SolarFileList*)
Star::Star(String, unsigned short)
StarBASIC::ActivateObject(String const*, unsigned char)
StarBASIC::ClearGlobalVars()
StarBASIC::Disassemble(SbModule*, String&)
StarBASIC::FindVarInCurrentScopy(String const&, unsigned short&)
StarBASIC::GetGlobalBreakHdl()
StarBASIC::GetGlobalLanguageMode()
StarBASIC::GetLanguageMode()
StarBASIC::Highlight(String const&, SbTextPortions&)
StarBASIC::LoadOldModules(SvStream&)
StarBASIC::SetGlobalLanguageMode(SbLanguageMode)
StarBASIC::StaticEnableReschedule(unsigned char)
StarBASIC::StaticSuppressSfxResource(unsigned char)
StarWriter::CleanUp()
StarWriter::InsertProject(Prj*)
StarWriter::RemoveProject(ByteString)
StarWriter::StarWriter(GenericInformationList*, ByteString&, unsigned char, char const*)
StarWriter::StarWriter(SolarFileList*, unsigned char)
StarWriter::StarWriter(String, unsigned char, unsigned short)
StarWriter::Write(String)
StarWriter::WriteMultiple(String)
StartInvader
StatusBar::CopyItems(StatusBar const&)
StatusBar::GetItemBits(unsigned short) const
StatusBar::GetItemData(unsigned short) const
StatusBar::GetItemWidth(unsigned short) const
StatusBar::HideItem(unsigned short)
StatusBar::ImplData::~ImplData()
StatusBar::ResetProgressMode()
StatusBar::SetBottomBorder(unsigned char)
StatusBar::SetTopBorder(unsigned char)
StatusBar::ShowItem(unsigned short)
StatusBar::StatusBar(Window*, ResId const&)
StgAvlIterator::Last()
StgCache::Pos2Page(int)
StgDirEntry::Copy(StgDirEntry&)
StgEntry::GetTime(StgEntryTime) const
StgEntry::SetTime(StgEntryTime, int*)
StgHeader::SetClassId(ClsId const&)
StorageStream::ValidateMode(unsigned short, StgDirEntry*) const
StoragesOfUnknownMediaTypeAreCopied_Impl(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
String::CompareIgnoreCaseToAscii(unsigned short const*, unsigned short) const
String::CompareTo(unsigned short const*, unsigned short) const
String::CreateFromFloat(float)
String::Equals(unsigned short const*) const
String::EqualsIgnoreCaseAscii(unsigned short const*, unsigned short, unsigned short) const
String::Insert(unsigned short const*, unsigned short)
String::Match(unsigned short const*) const
String::SearchAndReplace(unsigned short const*, String const&, unsigned short)
String::SearchAndReplaceAll(unsigned short const*, String const&)
StringList::Contains(rtl::OUString const&) const
SttResId::SttResId(unsigned int)
SuggestMgr::doubledsyllable(char**, char const*, int, int)
SuggestMgr::mystrlen(char const*)
SupportsCommandGroup(short)
SvAddressParser::createRFC822Mailbox(String const&, String const&, String&)
SvAppFrame::SvAppFrame(SvContainerEnvironment*)
SvAppletObject::GetApplet() const
SvAppletObject::GetName() const
SvAppletObject::IsMayScript() const
SvAppletObject::SetCodeBase(INetURLObject const&)
SvAppletObject::SetDocBase(INetURLObject const&)
SvAppletObject::SetMayScript(unsigned char)
SvAppletObject::SetName(String const&)
SvAreaConstrain::ComputeConstrain(Size const&, Fraction*, Fraction*) const
SvBaseEventDescriptor::mapEventIDToName(unsigned short) const
SvBasicPropertyDataControl::GetData()
SvBasicPropertyDataControl::GetName() const
SvBasicPropertyDataControl::GetProperty() const
SvBindStatusCallback::SetProgressCallback(Link const&)
SvBinding::GetCookie() const
SvBinding::GetHeaders() const
SvBinding::GetMimeType(String&)
SvBinding::GetStream(SvStream*&)
SvBinding::PutStream(SvStream*)
SvBinding::Resume()
SvBinding::SetCancelManager(SfxCancelManager*)
SvBinding::SetCookie(String const&)
SvBinding::SetHeaders(SvKeyValueIteratorRef&)
SvBinding::ShouldUseFtpProxy(String const&)
SvBinding::Suspend()
SvBindingTransport::HasTransport(String const&)
SvBools::Replace(unsigned char const&, unsigned short)
SvBools::Replace(unsigned char const*, unsigned short, unsigned short)
SvBools::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned char const&, void*), void*)
SvBorder::SvBorder(Rectangle const&, Rectangle const&)
SvByteStrings::DeleteAndDestroy(unsigned short, unsigned short)
SvByteStringsDtor::DeleteAndDestroy(unsigned short, unsigned short)
SvByteStringsISort::DeleteAndDestroy(unsigned short, unsigned short)
SvByteStringsISort::Insert(ByteString* const&)
SvByteStringsISort::Insert(ByteString* const&, unsigned short&)
SvByteStringsISort::Insert(ByteString* const*, unsigned short)
SvByteStringsISort::Insert(SvByteStringsISort const*, unsigned short, unsigned short)
SvByteStringsISort::Remove(ByteString* const&, unsigned short)
SvByteStringsISort::Remove(unsigned short, unsigned short)
SvByteStringsISortDtor::DeleteAndDestroy(unsigned short, unsigned short)
SvByteStringsISortDtor::Insert(ByteString* const&)
SvByteStringsISortDtor::Insert(ByteString* const&, unsigned short&)
SvByteStringsISortDtor::Insert(ByteString* const*, unsigned short)
SvByteStringsISortDtor::Insert(SvByteStringsISortDtor const*, unsigned short, unsigned short)
SvByteStringsISortDtor::Remove(ByteString* const&, unsigned short)
SvByteStringsISortDtor::Remove(unsigned short, unsigned short)
SvByteStringsSort::DeleteAndDestroy(unsigned short, unsigned short)
SvByteStringsSort::Insert(ByteString* const&)
SvByteStringsSort::Insert(ByteString* const&, unsigned short&)
SvByteStringsSort::Insert(ByteString* const*, unsigned short)
SvByteStringsSort::Insert(SvByteStringsSort const*, unsigned short, unsigned short)
SvByteStringsSort::Remove(ByteString* const&, unsigned short)
SvByteStringsSort::Remove(unsigned short, unsigned short)
SvByteStringsSortDtor::Insert(ByteString* const&)
SvByteStringsSortDtor::Insert(ByteString* const*, unsigned short)
SvByteStringsSortDtor::Insert(SvByteStringsSortDtor const*, unsigned short, unsigned short)
SvByteStringsSortDtor::Remove(ByteString* const&, unsigned short)
SvByteStringsSortDtor::Remove(unsigned short, unsigned short)
SvBytes::Replace(unsigned char const&, unsigned short)
SvBytes::Replace(unsigned char const*, unsigned short, unsigned short)
SvBytes::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned char const&, void*), void*)
SvCacheStream::GetFilenameHdl() const
SvCacheStream::SetFilenameHdl(Link const&)
SvCacheStream::SvCacheStream(String const&, unsigned long, unsigned long)
SvChar::MakeChar(char*, char**)
SvColorControl::SvColorControl(Window*, long)
SvCommand::SvCommand()
SvCompositeLockBytes::Append(SvLockBytes*, unsigned long, unsigned long)
SvCompositeLockBytes::GetLastLockBytes() const
SvCompositeLockBytes::RelativeOffset(unsigned long) const
SvCompositeLockBytes::SetIsPending(unsigned char)
SvCompositeLockBytes::SvCompositeLockBytes()
SvContainerEnvironment::DeleteMenu()
SvContainerEnvironment::DoQueryMenu(unsigned short*, unsigned short*, unsigned short*)
SvContainerEnvironment::SetAccel(Accelerator const&)
SvContainerEnvironment::SetClipAreaPixel(Rectangle const&)
SvContainerEnvironment::SetMenu(MenuBar*, unsigned short, unsigned short, unsigned short)
SvContainerEnvironment::SvContainerEnvironment(SvInPlaceClient*, SvContainerEnvironment*)
SvDeathObject::SvDeathObject(Rectangle const&)
SvDocFrame::SvDocFrame(SvContainerEnvironment*)
SvEditObjectProtocol::CanEmbedProtocol() const
SvEditObjectProtocol::CanPlugInProtocol() const
SvEditObjectProtocol::CanUIProtocol() const
SvEditObjectProtocol::DocWinActivate(unsigned char)
SvEditObjectProtocol::IsDocWinActive() const
SvEditObjectProtocol::IsInClosed() const
SvEditObjectProtocol::IsTopWinActive() const
SvEditObjectProtocol::TopWinActivate(unsigned char)
SvEmbeddedClient::SetAspect(unsigned short, unsigned char)
SvEmbeddedClient::SvEmbeddedClient(Window*)
SvEmbeddedInfoObject::GetViewAspect() const
SvEmbeddedInfoObject::SvEmbeddedInfoObject(String const&, SvGlobalName const&)
SvEmbeddedInfoObject::SvEmbeddedInfoObject(SvEmbeddedObject*)
SvEmbeddedObject::ConvertToOle2(SvStream&, unsigned int, GDIMetaFile const*, SotStorageRef const&)
SvEmbeddedObject::DoConnect(SvEmbeddedClient*)
SvEmbeddedObject::DoVerb(long)
SvEmbeddedObject::GetGDIMetaFile(GDIMetaFile&)
SvEmbeddedObject::InsertStarObject(String const&, String const&, SvStream&, SvPersist*)
SvEmbeddedObject::LoadStarObjectPicture(SvStream&, GDIMetaFile&)
SvEmbeddedObject::SetDocumentName(String const&)
SvEmbeddedObject::SetVisAreaSize(Size const&)
SvFactory::CreateAndInit(com::sun::star::uno::Reference<com::sun::star::datatransfer::XTransferable> const&, SvStorage*, unsigned char, unsigned char) const
SvFactory::DeInit()
SvFactory::GetAutoTreatAs(SvGlobalName const&)
SvFactory::GetConfigFileName()
SvFactory::GetServerName(long)
SvFactory::GetSvClass31(SvGlobalName const&)
SvFactory::Init()
SvFactory::Register()
SvFactory::SetAutoConvertTo(SvGlobalName const&, String const&, SvGlobalName const&)
SvFactory::SetAutoTreatAs(SvGlobalName const&, String const&, SvGlobalName const&)
SvFileInformationManager::GetFileImage(INetURLObject const&, unsigned char)
SvFileInformationManager::GetImageNoDefault(INetURLObject const&, unsigned char)
SvFileObject::SetTransferPriority(unsigned short)
SvFileStream::ReOpen()
SvFileStream::UnlockFile()
SvFillLockBytes::FillAppend(void const*, unsigned long, unsigned long*)
SvFillLockBytes::SvFillLockBytes(SvLockBytes*)
SvFillLockBytes::Terminate()
SvGlobalNameList::Append(SvGlobalName const&)
SvGlobalNameList::GetObject(unsigned long)
SvGlobalNameList::IsEntry(SvGlobalName const&)
SvGlobalNameList::SvGlobalNameList()
SvGlobalNameList::~SvGlobalNameList()
SvI18NMap_Impl::Insert(SvI18NMapEntry_Impl* const&, unsigned short&)
SvI18NMap_Impl::Insert(SvI18NMapEntry_Impl* const*, unsigned short)
SvI18NMap_Impl::Insert(SvI18NMap_Impl const*, unsigned short, unsigned short)
SvI18NMap_Impl::Remove(SvI18NMapEntry_Impl* const&, unsigned short)
SvI18NMap_Impl::Remove(unsigned short, unsigned short)
SvINT16::ReadSvIdl(SvStringHashEntry*, SvTokenStream&)
SvINT16::WriteSvIdl(SvStringHashEntry*, SvStream&)
SvINT32::ReadSvIdl(SvStringHashEntry*, SvTokenStream&)
SvINT32::WriteSvIdl(SvStringHashEntry*, SvStream&)
SvIconView::AdjustAtGrid(SvLBoxEntry*)
SvIconView::CalcScrollOffsets(Point const&, long&, long&, unsigned char, unsigned short)
SvIconView::DisconnectFromModel()
SvIconView::EnableInplaceEditing(unsigned char)
SvIconView::EndTracking()
SvIconView::GetCollapsedEntryBmp(SvLBoxEntry*) const
SvIconView::GetCurParent() const
SvIconView::GetEntryFromLogicPos(Point const&) const
SvIconView::GetEntryPosition(SvLBoxEntry*) const
SvIconView::GetExpandedEntryBmp(SvLBoxEntry*) const
SvIconView::GetFocusRect(SvLBoxEntry*)
SvIconView::GetNextEntry(Point const&, SvLBoxEntry*, unsigned char) const
SvIconView::GetPrevEntry(Point const&, SvLBoxEntry*, unsigned char) const
SvIconView::GetTextMode(SvLBoxEntry const*) const
SvIconView::HideDDIcon()
SvIconView::HideShowDDIcon(SvLBoxEntry*, Point const&)
SvIconView::InsertEntry(String const&, Image const&, Image const&, SvLBoxEntry*, unsigned char, unsigned long)
SvIconView::InvalidateEntry(SvLBoxEntry*)
SvIconView::IsEntryPosLocked(SvLBoxEntry const*) const
SvIconView::LockEntryPos(SvLBoxEntry*, unsigned char)
SvIconView::SelectRect(Rectangle const&, unsigned char, SvPtrarr*, short)
SvIconView::SetCollapsedEntryBmp(SvLBoxEntry*, Image const&)
SvIconView::SetCurParent(SvLBoxEntry*)
SvIconView::SetEntryPosition(SvLBoxEntry*, Point const&)
SvIconView::SetEntryPosition(SvLBoxEntry*, Point const&, unsigned char)
SvIconView::SetEntryText(SvLBoxEntry*, String const&)
SvIconView::SetExpandedEntryBmp(SvLBoxEntry*, Image const&)
SvIconView::SetGrid(long, long)
SvIconView::SetModel(SvLBoxTreeList*)
SvIconView::SetSpaceBetweenEntries(long, long)
SvIconView::SetTextMode(SvIconViewTextMode, SvLBoxEntry*)
SvIconView::SetWindowBits(long)
SvIconView::ShowDDIcon(SvLBoxEntry*, Point const&)
SvIconView::ShowFocusRect(SvLBoxEntry const*)
SvIconView::SvIconView(Window*, ResId const&)
SvIconView::SvIconView(Window*, long)
SvIdlDataBase::FillTypeList(SvMetaTypeList&, SvToken*)
SvIdlDataBase::FindAttr(SvMetaAttributeMemberList*, SvMetaAttribute*) const
SvIdlDataBase::FindName(ByteString const&, ByteStringList&)
SvIdlDataBase::IsModified() const
SvIdlWorkingBase::WriteCHeader(SvStream&)
SvIdlWorkingBase::WriteCSource(SvStream&)
SvIdlWorkingBase::WriteCxx(SvStream&)
SvIdlWorkingBase::WriteHxx(SvStream&)
SvIdlWorkingBase::WriteOdl(SvStream&)
SvIdlWorkingBase::WriteSrc(SvStream&)
SvImpIconView::CollapsingEntry(SvLBoxEntry*)
SvImpIconView::EntryCollapsed(SvLBoxEntry*)
SvImpIconView::EntryExpanded(SvLBoxEntry*)
SvImpIconView::GetEntryTextModeSmart(SvLBoxEntry const*, SvIcnVwDataEntry const*) const
SvImpIconView::InvalidateBoundingRect(SvLBoxEntry*)
SvImpIconView::IsEntryInView(SvLBoxEntry*)
SvImpIconView::RepaintSelectionItems()
SvImpIconView::SetNoSelection()
SvImpIconView::UpdateBoundingRects()
SvImpLBox::IndentChanged(short)
SvImpLBox::RepaintSelectionItems()
SvInPlaceClient::SvInPlaceClient(WorkWindow*, WorkWindow*, Window*)
SvInPlaceClipWindow::SetBorderPixel(SvBorder const&)
SvInPlaceEnvironment::DeleteBorderWin()
SvInPlaceEnvironment::DeleteClipWin()
SvInPlaceEnvironment::DeleteEditWin()
SvInPlaceEnvironment::MakeScale(Size const&, MapUnit, Size const&)
SvInPlaceEnvironment::MakeUI(unsigned char)
SvInPlaceMenuBar::PopActivateHdl()
SvInPlaceMenuBar::PopDeactivateHdl()
SvInPlaceMenuBar::PopHighlightHdl()
SvInPlaceMenuBar::PopSelectHdl()
SvInPlaceMenuBar::PushActivateHdl(Link const&)
SvInPlaceMenuBar::PushDeactivateHdl(Link const&)
SvInPlaceMenuBar::PushHighlightHdl(Link const&)
SvInPlaceMenuBar::PushSelectHdl(Link const&)
SvInPlaceMenuBar::SvInPlaceMenuBar(MenuBar*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
SvInPlaceMenuBar::SvInPlaceMenuBar(ResId const&)
SvInPlaceObject::CreateObject(SvGlobalName const&)
SvInfoObject::SetDeleted(unsigned char)
SvInplaceEdit::StopEditing(unsigned char)
SvInplaceEdit::SvInplaceEdit(Window*, Point const&, Size const&, String const&, Link const&, Selection const&)
SvInsertOleDlg::FillObjectServerList(SvObjectServerList*)
SvInsertPlugInDialog::Execute(Window*, SvStorage*)
SvInt32Array::Insert(int const*, unsigned short, unsigned short)
SvInt32Array::_ForEach(unsigned short, unsigned short, unsigned char (*)(int const&, void*), void*)
SvLBox::GetTargetView() const
SvLBox::HasCursorEmphasis(SvLBoxEntry*) const
SvLBox::SetCursorEmphasis(SvLBoxEntry*, unsigned char)
SvLBox::SetInUseEmphasis(SvLBoxEntry*, unsigned char)
SvLBoxBmp::SvLBoxBmp(SvLBoxEntry*, unsigned short, Image)
SvLBoxButton::Check(SvLBox*, SvLBoxEntry*, unsigned char)
SvLBoxButtonData::SvLBoxButtonData()
SvLBoxEntryArr::DeleteAndDestroy(unsigned short, unsigned short)
SvLBoxItem::GetSize(SvLBoxEntry*, SvViewDataEntry*)
SvListBoxForProperties::SvListBoxForProperties(Window*, ResId const&)
SvListView::SvListView(SvTreeList*)
SvLongs::Replace(long const&, unsigned short)
SvLongs::Replace(long const*, unsigned short, unsigned short)
SvLongs::_ForEach(unsigned short, unsigned short, unsigned char (*)(long const&, void*), void*)
SvLongsSort::Insert(SvLongsSort const*, unsigned short, unsigned short)
SvLongsSort::Insert(long const&, unsigned short&)
SvLongsSort::Insert(long const*, unsigned short)
SvLongsSort::Remove(long const&, unsigned short)
SvLongsSort::Remove(unsigned short, unsigned short)
SvLongsSort_SAR::Replace(long const&, unsigned short)
SvLongsSort_SAR::Replace(long const*, unsigned short, unsigned short)
SvLongsSort_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(long const&, void*), void*)
SvMetaAttribute::GetAttributeList()
SvMetaAttribute::MakeClone() const
SvMetaClass::GetAttributeList()
SvMetaClass::MakeClone() const
SvMetaEnumValue::GetAttributeList()
SvMetaEnumValue::MakeClone() const
SvMetaExtern::GetAttributeList()
SvMetaExtern::MakeClone() const
SvMetaModule::GetAttributeList()
SvMetaModule::MakeClone() const
SvMetaName::GetAttributeList()
SvMetaName::MakeClone() const
SvMetaObject::GetAttributeList()
SvMetaObject::MakeClone() const
SvMetaReference::GetAttributeList()
SvMetaReference::MakeClone() const
SvMetaSlot::CompareSlotAttributes(SvMetaSlot*)
SvMetaSlot::GetAttributeList()
SvMetaType::GetAttributeList()
SvMetaType::MakeClone() const
SvMetaTypeEnum::GetAttributeList()
SvMetaTypeEnum::MakeClone() const
SvMetaTypeString::GetAttributeList()
SvMetaTypeString::MakeClone() const
SvMetaTypevoid::GetAttributeList()
SvMetaTypevoid::MakeClone() const
SvNumberFormatter::HasTextFormat(unsigned int) const
SvNumberFormatter::PrepareSave()
SvNumberFormatter::SetFormatUsed(unsigned int)
SvNumberFormatter::SkipNumberFormatterInStream(SvStream&)
SvNumberNatNum::MapNatNumToDBNum(unsigned char, unsigned short, unsigned char)
SvNumberformat::EraseComment(String&)
SvNumberformat::ImpSwitchToSpecifiedCalendar(String&, double&, ImpSvNumFor const&) const
SvNumberformat::SetComment(String const&, String&, String&)
SvObjectDyingHint::SvObjectDyingHint(SvObject*, unsigned char)
SvOutPlaceObject::ClearCache()
SvOutPlaceObject::CreateFromClipboard(SvStorage*)
SvOutPlaceObject::CreateFromData(com::sun::star::uno::Reference<com::sun::star::datatransfer::XTransferable> const&, SvStorage*)
SvOutPlaceObject::GetObjectCLSID()
SvOutPlaceObject::GetUnoComponent() const
SvOutPlaceObject::GetWorkingStorage()
SvPasteObjectDialog::Execute(Window*, DataFlavorExVector const&, TransferableObjectDescriptor const&)
SvPersist::AssertInit() const
SvPersist::Clear()
SvPersist::CopyObject(String const&, String const&, SvPersist*)
SvPersist::CopyObject(SvStorage*)
SvPersist::GetClassName() const
SvPersist::GetFileFormat() const
SvPersist::GetFullTypeName() const
SvPersist::GetObjectStorage(String const&)
SvPersist::HasObject(String const&)
SvPersist::IsRoot() const
SvPersist::LoadChilds()
SvPersist::Move(SvInfoObject*, String const&, unsigned char)
SvPersist::Remove(String const&)
SvPersist::SaveAsChilds(SvStorage*)
SvPersist::SaveChilds()
SvPersist::SaveCompletedChilds(SvStorage*)
SvPersist::StartActivation(SvPersist*)
SvPersist::Unload(SvPersist*)
SvPersistBaseMemberList::SvPersistBaseMemberList(unsigned short, unsigned short)
SvPersistStream::InsertObj(SvPersistBase*)
SvPersistStream::RemoveObj(SvPersistBase*)
SvPersistStream::SvPersistStream(SvClassManager&, SvStream*, SvPersistStream const&)
SvPlugInObject::SetMimeType(String const&)
SvPropertyBox::SvPropertyBox(Window*, ResId const&)
SvPropertyBox::SvPropertyBox(Window*, long)
SvPropertyLine::GetName() const
SvPropertyLine::IsLineLocked()
SvPropertyLine::IsShownAsHyperlink()
SvPropertyLine::IsVisibleXButton()
SvPropertyLine::SvPropertyLine(Window*, ResId const&)
SvPseudoObject::AppendVerbs(Menu&)
SvPseudoObject::GetAppName() const
SvPseudoObject::GetClassName() const
SvPseudoObject::GetFullTypeName() const
SvPseudoObject::GetShortTypeName() const
SvPseudoObject::GetVerb(unsigned short) const
SvPtrarr::Replace(void* const*, unsigned short, unsigned short)
SvPtrarrPlain::GetPos(void*) const
SvPtrarrPlain::Insert(void*, unsigned short)
SvPtrarrPlain::Remove(unsigned short, unsigned short)
SvPtrarrPlain::Replace(void* const*, unsigned short, unsigned short)
SvPtrarrPlain::Replace(void*, unsigned short)
SvPtrarrPlain::SvPtrarrPlain(unsigned short, unsigned char)
SvPtrarrPlain::_ForEach(unsigned short, unsigned short, unsigned char (*)(void*, void*), void*)
SvRemoteStream::Commit()
SvRemoteStream::SetDataAvailableLink(Link const&)
SvRemoteStream::SetDoneLink(Link const&)
SvRemoteStream::SvRemoteStream(String const&, unsigned short)
SvResizeHelper::SelectBegin(Window*, short)
SvResizeWindow::CalcOuterRectPixel(Point const&, Size const&) const
SvResizeWindow::GetAllBorderPixel() const
SvResizeWindow::TerminateResizing()
SvShorts::Replace(short const&, unsigned short)
SvShorts::Replace(short const*, unsigned short, unsigned short)
SvShorts::_ForEach(unsigned short, unsigned short, unsigned char (*)(short const&, void*), void*)
SvStorage::IsStorageFile(String const&)
SvStorage::SvStorage(SvStream*, unsigned char)
SvStorageInfoList::Get(String const&)
SvStorageStream::SvStorageStream(String const&, unsigned short, short)
SvStream::PutBack(char)
SvStream::ReadNumber(double&)
SvStream::ReadNumber(long&)
SvStream::ReadNumber(unsigned int&)
SvStream::WriteNumber(double const&)
SvStream::WriteUniOrByteStringLine(String const&, unsigned short)
SvStream::WriteUniOrByteStringLines(String const&, unsigned short)
SvStringsISort::DeleteAndDestroy(unsigned short, unsigned short)
SvStringsISort::Insert(String* const&)
SvStringsISort::Insert(String* const&, unsigned short&)
SvStringsISort::Insert(String* const*, unsigned short)
SvStringsISort::Insert(SvStringsISort const*, unsigned short, unsigned short)
SvStringsISort::Remove(String* const&, unsigned short)
SvStringsISort::Remove(unsigned short, unsigned short)
SvStringsISortDtor::Insert(String* const*, unsigned short)
SvStringsSort::DeleteAndDestroy(unsigned short, unsigned short)
SvStringsSort::Insert(String* const&, unsigned short&)
SvStringsSort::Insert(String* const*, unsigned short)
SvStringsSort::Insert(SvStringsSort const*, unsigned short, unsigned short)
SvStringsSort::Remove(String* const&, unsigned short)
SvStringsSortDtor::Insert(String* const*, unsigned short)
SvStringsSortDtor::Insert(SvStringsSortDtor const*, unsigned short, unsigned short)
SvStringsSortDtor::Remove(String* const&, unsigned short)
SvStringsSortDtor::Remove(unsigned short, unsigned short)
SvTabListBox::GetTabJustify(unsigned short) const
SvToken::Print() const
SvTokenStream::GetHexValue(ByteString const&, BigInt*)
SvTokenStream::Skip(char, char, unsigned int*)
SvTreeList::CheckIntegrity() const
SvTreeList::Copy(SvListEntry*, SvListEntry*)
SvTreeList::InsertTree(SvListEntry*, SvListEntry*)
SvTreeList::IsInChildList(SvListEntry*, SvListEntry*) const
SvTreeList::SelectChilds(SvListView*, SvListEntry*, unsigned char)
SvTreeListBox::CancelEditing()
SvTreeListBox::GetCollapsedNodeBmp(BmpColorMode) const
SvTreeListBox::GetExtendedWinBits() const
SvTreeListBox::GetFirstDynamicItem(SvLBoxEntry*)
SvTreeListBox::GetTextOffset() const
SvTreeListBox::IsAddMode() const
SvTreeListBox::IsNodeButton(Point const&) const
SvTreeListBox::IsSublistOpenWithLeftRight() const
SvTreeListBox::IsSublistOpenWithReturn() const
SvTreeListBox::RemoveHighlightRange()
SvTreeListBox::SetAddMode(unsigned char)
SvTreeListBox::SetDontKnowNodeBitmap(Image const&, BmpColorMode)
SvTreeListBox::SetTabBar(TabBar*)
SvTreeListBox::SetUpdateModeFast(unsigned char)
SvTreeListBox::ShowExpandBitmapOnCursor(unsigned char)
SvUINT16::ReadSvIdl(SvStringHashEntry*, SvTokenStream&)
SvUINT16::WriteSvIdl(SvStringHashEntry*, SvStream&)
SvUINT32::ReadSvIdl(SvStringHashEntry*, SvTokenStream&)
SvUINT32::WriteSvIdl(SvStringHashEntry*, SvStream&)
SvULongs::Replace(unsigned long const*, unsigned short, unsigned short)
SvULongs::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned long const&, void*), void*)
SvULongsSort::Insert(SvULongsSort const*, unsigned short, unsigned short)
SvULongsSort::Insert(unsigned long const*, unsigned short)
SvULongsSort_SAR::Replace(unsigned long const&, unsigned short)
SvULongsSort_SAR::Replace(unsigned long const*, unsigned short, unsigned short)
SvULongsSort_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned long const&, void*), void*)
SvUShorts::Replace(unsigned short const*, unsigned short, unsigned short)
SvUShorts::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned short const&, void*), void*)
SvUShortsSort::Insert(unsigned short const*, unsigned short)
SvUnoAttributeContainer::getImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface>)
SvUnoWeakContainer::remove(com::sun::star::uno::WeakReference<com::sun::star::uno::XInterface>)
SvViewDataItem::~SvViewDataItem()
SvXMLAttributeList::SetAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
SvXMLAutoStylePoolNamesP_Impl::GetPos(rtl::OUString const*) const
SvXMLAutoStylePoolNamesP_Impl::Remove(rtl::OUString*)
SvXMLAutoStylePoolP::Add(rtl::OUString&, int, _STL::vector<XMLPropertyState, _STL::allocator<XMLPropertyState> > const&)
SvXMLAutoStylePoolP::AddAndCache(int, _STL::vector<XMLPropertyState, _STL::allocator<XMLPropertyState> > const&)
SvXMLAutoStylePoolP::AddAndCache(int, rtl::OUString const&)
SvXMLAutoStylePoolP::AddAndCache(int, rtl::OUString const&, _STL::vector<XMLPropertyState, _STL::allocator<XMLPropertyState> > const&)
SvXMLAutoStylePoolP::Find(int, _STL::vector<XMLPropertyState, _STL::allocator<XMLPropertyState> > const&) const
SvXMLAutoStylePoolP::FindAndRemoveCached(int) const
SvXMLAutoStylePoolP::SvXMLAutoStylePoolP()
SvXMLAutoStylePoolParentsP_Impl::GetPos(SvXMLAutoStylePoolParentP_Impl const*) const
SvXMLAutoStylePoolParentsP_Impl::Remove(SvXMLAutoStylePoolParentP_Impl*)
SvXMLElementExport::SvXMLElementExport(SvXMLExport&, unsigned char, unsigned short, char const*, unsigned char, unsigned char)
SvXMLElementExport::SvXMLElementExport(SvXMLExport&, unsigned char, unsigned short, rtl::OUString const&, unsigned char, unsigned char)
SvXMLEmbeddedElementArr::Insert(SvXMLEmbeddedElement* const&, unsigned short&)
SvXMLEmbeddedElementArr::Insert(SvXMLEmbeddedElement* const*, unsigned short)
SvXMLEmbeddedElementArr::Insert(SvXMLEmbeddedElementArr const*, unsigned short, unsigned short)
SvXMLEmbeddedElementArr::Remove(SvXMLEmbeddedElement* const&, unsigned short)
SvXMLEmbeddedElementArr::Remove(unsigned short, unsigned short)
SvXMLExport::GetErrors()
SvXMLExport::SvXMLExport(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::document::XGraphicObjectResolver> const&, short)
SvXMLExportHelper::AddPercentage(int, rtl::OUStringBuffer&)
SvXMLExportPropertyMapper::exportXML(SvXMLAttributeList&, XMLPropertyState const&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, unsigned short) const
SvXMLImport::GetErrors()
SvXMLImport::GetMasterStyles()
SvXMLImport::GetMasterStyles() const
SvXMLImport::SetError(int, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvXMLImport::SetError(int, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvXMLImport::getImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface>)
SvXMLImportContexts_Impl::DeleteAndDestroy(unsigned short, unsigned short)
SvXMLNamespaceMap::GetKeyByIndex(unsigned short) const
SvXMLNumFmtDefaults::IsSystemLongDay(SvtSysLocale const&, unsigned char)
SvXMLNumFmtDefaults::IsSystemLongDayOfWeek(SvtSysLocale const&, unsigned char)
SvXMLNumFmtDefaults::IsSystemLongEra(SvtSysLocale const&, unsigned char)
SvXMLNumFmtDefaults::IsSystemLongMonth(SvtSysLocale const&, unsigned char)
SvXMLNumFmtDefaults::IsSystemTextualMonth(SvtSysLocale const&, unsigned char)
SvXMLNumFormatContext::AddCondition(int, rtl::OUString const&, LocaleDataWrapper const&)
SvXMLStyleIndices_Impl::GetPos(SvXMLStyleIndex_Impl const*) const
SvXMLStyleIndices_Impl::Remove(SvXMLStyleIndex_Impl*)
SvXMLTokenMap_Impl::Insert(SvXMLTokenMapEntry_Impl* const&, unsigned short&)
SvXMLTokenMap_Impl::Insert(SvXMLTokenMapEntry_Impl* const*, unsigned short)
SvXMLTokenMap_Impl::Insert(SvXMLTokenMap_Impl const*, unsigned short, unsigned short)
SvXMLTokenMap_Impl::Remove(SvXMLTokenMapEntry_Impl* const&, unsigned short)
SvXMLTokenMap_Impl::Remove(unsigned short, unsigned short)
SvXMLUnitConverter::clearUndefinedChars(rtl::OUString&, rtl::OUString const&)
SvXMLUnitConverter::convertEnum(rtl::OUStringBuffer&, unsigned short, SvXMLEnumStringMapEntry const*, char*)
SvXMLUnitConverter::convertNumber64(rtl::OUStringBuffer&, long)
SvXMLUnitConverter::initXMLStrings()
SvXPropEvListener::GetKeyCode() const
SvXPropertyComboBox::SvXPropertyComboBox(Window*, ResId const&)
SvXPropertyEdit::SvXPropertyEdit(Window*, ResId const&)
SvXPropertyListBox::SvXPropertyListBox(Window*, ResId const&)
SvXPropertyListBox::SvXPropertyListBox(Window*, long)
SvXub_StrLens::Replace(unsigned short const&, unsigned short)
SvXub_StrLens::Replace(unsigned short const*, unsigned short, unsigned short)
SvXub_StrLens::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned short const&, void*), void*)
SvXub_StrLensSort::Insert(SvXub_StrLensSort const*, unsigned short, unsigned short)
SvXub_StrLensSort::Insert(unsigned short const&)
SvXub_StrLensSort::Insert(unsigned short const&, unsigned short&)
SvXub_StrLensSort::Insert(unsigned short const*, unsigned short)
SvXub_StrLensSort::Remove(unsigned short const&, unsigned short)
SvXub_StrLensSort::Remove(unsigned short, unsigned short)
SvXub_StrLensSort_SAR::Replace(unsigned short const&, unsigned short)
SvXub_StrLensSort_SAR::Replace(unsigned short const*, unsigned short, unsigned short)
SvXub_StrLensSort_SAR::SvXub_StrLensSort_SAR(unsigned short, unsigned char)
SvXub_StrLensSort_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned short const&, void*), void*)
Svint::ReadSvIdl(SvStringHashEntry*, SvTokenStream&)
Svint::WriteSvIdl(SvStringHashEntry*, SvStream&)
SvpSalInstance::CancelEvent(SalFrame const*, void*, unsigned short)
SvtAcceleratorConfiguration::CreateFromStream(SvStream&)
SvtAcceleratorConfiguration::GetCommand(com::sun::star::awt::KeyEvent const&)
SvtAcceleratorConfiguration::GetItems()
SvtAcceleratorConfiguration::SetItems(_STL::list<SvtAcceleratorConfigItem, _STL::allocator<SvtAcceleratorConfigItem> > const&, bool)
SvtAccessibilityOptions::GetIsForDrawings() const
SvtAddXMLToStorageOptions::IsCalc_Add_XML_to_Storage() const
SvtAddXMLToStorageOptions::IsDraw_Add_XML_to_Storage() const
SvtAddXMLToStorageOptions::IsImpress_Add_XML_to_Storage() const
SvtAddXMLToStorageOptions::IsWriter_Add_XML_to_Storage() const
SvtBroadcaster::Forward(SvtBroadcaster&, SfxHint const&)
SvtCommandOptions::AddCommand(SvtCommandOptions::CmdOption, rtl::OUString const&)
SvtCommandOptions::Clear(SvtCommandOptions::CmdOption)
SvtCommandOptions::GetList(SvtCommandOptions::CmdOption) const
SvtDocumentTemplateDialog::GetSelectedFileURL() const
SvtDocumentTemplateDialog::IsFileSelected() const
SvtDocumentTemplateDialog::SvtDocumentTemplateDialog(Window*, SvtDocumentTemplateDialog::SelectOnly)
SvtDynamicMenuOptions::AppendItem(EDynamicMenuType, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvtDynamicMenuOptions::Clear(EDynamicMenuType)
SvtExpFileDlg_Impl::FindFilter(String const&)
SvtExtendedSecurityOptions::GetSecureExtensionList() const
SvtExtendedSecurityOptions::IsOpenHyperlinkModeReadOnly() const
SvtExtendedSecurityOptions::IsSecureHyperlink(rtl::OUString const&) const
SvtExtendedSecurityOptions::SetOpenHyperlinkMode(SvtExtendedSecurityOptions::OpenHyperlinkMode)
SvtFileDialog::GetFilterType(unsigned short) const
SvtFileDialog::SetDefaultButtonText(String const&, unsigned long)
SvtFileView::GetUrlFilter() const
SvtFileView::ResetCursor()
SvtFontOptions::EnableReplacementTable(unsigned char)
SvtFontOptions::IsReplacementTableEnabled() const
SvtFrameWindow_Impl::ExecuteHdl_Impl(SvtFrameWindow_Impl*, SvtFrameWindow_Impl::SvtExecuteInfo*)
SvtGraphicFill::setFillColor(Color)
SvtGraphicFill::setFillRule(SvtGraphicFill::FillRule)
SvtGraphicFill::setFillType(SvtGraphicFill::FillType)
SvtGraphicFill::setGradient1stColor(Color)
SvtGraphicFill::setGradient2ndColor(Color)
SvtGraphicFill::setGradientStepCount(int)
SvtGraphicFill::setGradientType(SvtGraphicFill::GradientType)
SvtGraphicFill::setGraphic(Graphic const&)
SvtGraphicFill::setHatchColor(Color)
SvtGraphicFill::setHatchType(SvtGraphicFill::HatchType)
SvtGraphicFill::setTiling(bool)
SvtGraphicFill::setTransform(SvtGraphicFill::Transform const&)
SvtGraphicFill::setTransparency(double)
SvtGraphicFill::toString() const
SvtGraphicStroke::setCapType(SvtGraphicStroke::CapType)
SvtGraphicStroke::setDashArray(_STL::vector<double, _STL::allocator<double> > const&)
SvtGraphicStroke::setEndArrow(PolyPolygon const&)
SvtGraphicStroke::setJoinType(SvtGraphicStroke::JoinType)
SvtGraphicStroke::setMiterLimit(double)
SvtGraphicStroke::setStartArrow(PolyPolygon const&)
SvtGraphicStroke::setStrokeWidth(double)
SvtGraphicStroke::setTransparency(double)
SvtGraphicStroke::toString() const
SvtHelpOptions::AddToPIStarterList(int)
SvtHelpOptions::GetHelpAgentRetryLimit() const
SvtHelpOptions::GetLocale() const
SvtHelpOptions::GetPIStarterList()
SvtHelpOptions::RemoveFromPIStarterList(int)
SvtHelpOptions::SetHelpAgentRetryLimit(int)
SvtIconChoiceCtrl::Clear()
SvtIconChoiceCtrl::Flush()
SvtIconChoiceCtrl::GetEntryTextMode(SvxIconChoiceCtrlEntry const*) const
SvtIconChoiceCtrl::GetLogicPos(Point const&) const
SvtIconChoiceCtrl::GetNextEntry(Point const&, SvxIconChoiceCtrlEntry*, unsigned char) const
SvtIconChoiceCtrl::GetPrevEntry(Point const&, SvxIconChoiceCtrlEntry*, unsigned char) const
SvtIconChoiceCtrl::HandleShortCutKey(KeyEvent const&)
SvtIconChoiceCtrl::InsertEntry(unsigned long, Point const*, unsigned short)
SvtIconChoiceCtrl::SetEntryTextMode(SvxIconChoiceCtrlTextMode, SvxIconChoiceCtrlEntry*)
SvtIconChoiceCtrl::SetUpdateMode(unsigned char)
SvtIconChoiceCtrl::SvtIconChoiceCtrl(Window*, ResId const&)
SvtIconWindow_Impl::GetSelectedIconText() const
SvtInternalOptions::CrashMailEnabled() const
SvtInternalOptions::IsRemoveMenuEntryBackToWebtop() const
SvtInternalOptions::IsRemoveMenuEntryClose() const
SvtInternalOptions::IsRemoveMenuEntryLogout() const
SvtInternalOptions::IsRemoveMenuEntryNewWebtop() const
SvtJavaOptions::GetNetAccess() const
SvtJavaOptions::GetUserClassPath() const
SvtJavaOptions::IsEnabled() const
SvtJavaOptions::IsReadOnly(SvtJavaOptions::EOption) const
SvtJavaOptions::IsSecurity() const
SvtJavaOptions::SetEnabled(unsigned char)
SvtJavaOptions::SetExecuteApplets(unsigned char)
SvtJavaOptions::SetNetAccess(int)
SvtJavaOptions::SetSecurity(unsigned char)
SvtJavaOptions::SetUserClassPath(rtl::OUString const&)
SvtLanguageOptions::IsCTLSequenceChecking() const
SvtLanguageOptions::IsCTLSequenceCheckingRestricted() const
SvtLanguageOptions::IsCTLSequenceCheckingTypeAndReplace() const
SvtLanguageOptions::IsChangeCaseMapEnabled() const
SvtLanguageOptions::IsDoubleLinesEnabled() const
SvtLanguageOptions::IsEmphasisMarksEnabled() const
SvtLanguageOptions::IsRubyEnabled() const
SvtLanguageOptions::IsVerticalCallOutEnabled() const
SvtLinguConfig::IsReadOnly(int) const
SvtLinguConfig::SetOptions(SvtLinguOptions const&)
SvtListener::IsListening(SvtBroadcaster&) const
SvtListenerIter::First(void* (*)())
SvtListenerIter::GetCurr() const
SvtListenerIter::GoEnd()
SvtListenerIter::GoPrev()
SvtListenerIter::GoRoot()
SvtListenerIter::Next()
SvtLocalisationOptions::SetAutoMnemonic(unsigned char)
SvtLocalisationOptions::SetDialogScale(int)
SvtMenuOptions::IsFollowMouseEnabled() const
SvtMenuOptions::SetEntryHidingState(unsigned char)
SvtMenuOptions::SetFollowMouseState(unsigned char)
SvtMiscOptions::IsGetSymbolsSizeReadOnly() const
SvtMiscOptions::IsGetSymbolsStyleReadOnly() const
SvtMiscOptions::IsGetToolboxStyleReadOnly() const
SvtMiscOptions::IsPluginsEnabledReadOnly() const
SvtMiscOptions::SetPluginsEnabled(unsigned char)
SvtModuleOptions::GetFactoryWindowAttributes(SvtModuleOptions::EFactory) const
SvtModuleOptions::GetFeatures() const
SvtModuleOptions::GetModuleName(SvtModuleOptions::EFactory) const
SvtModuleOptions::GetModuleName(SvtModuleOptions::EModule) const
SvtModuleOptions::SetFactoryWindowAttributes(SvtModuleOptions::EFactory, rtl::OUString const&)
SvtOptionsDrawinglayer::SetMaximumPaperBottomMargin(unsigned int)
SvtOptionsDrawinglayer::SetMaximumPaperHeight(unsigned int)
SvtOptionsDrawinglayer::SetMaximumPaperLeftMargin(unsigned int)
SvtOptionsDrawinglayer::SetMaximumPaperRightMargin(unsigned int)
SvtOptionsDrawinglayer::SetMaximumPaperTopMargin(unsigned int)
SvtOptionsDrawinglayer::SetMaximumPaperWidth(unsigned int)
SvtOptionsDrawinglayer::SetOverlayBuffer(unsigned char)
SvtOptionsDrawinglayer::SetOverlayBuffer_Calc(unsigned char)
SvtOptionsDrawinglayer::SetOverlayBuffer_DrawImpress(unsigned char)
SvtOptionsDrawinglayer::SetOverlayBuffer_Writer(unsigned char)
SvtOptionsDrawinglayer::SetPaintBuffer(unsigned char)
SvtOptionsDrawinglayer::SetPaintBuffer_Calc(unsigned char)
SvtOptionsDrawinglayer::SetPaintBuffer_DrawImpress(unsigned char)
SvtOptionsDrawinglayer::SetPaintBuffer_Writer(unsigned char)
SvtOptionsDrawinglayer::SetStripeColorA(Color)
SvtOptionsDrawinglayer::SetStripeColorB(Color)
SvtOptionsDrawinglayer::SetStripeLength(unsigned short)
SvtPathOptions::GetPath(SvtPathOptions::Pathes) const
SvtPathOptions::IsPathReadonly(SvtPathOptions::Pathes) const
SvtPathOptions::SetPath(SvtPathOptions::Pathes, String const&)
SvtPrintWarningOptions::IsNotFound() const
SvtPrintWarningOptions::SetNotFound(unsigned char)
SvtSaveOptions::SetSaveUnpacked(unsigned char)
SvtScriptedTextHelper::GetText() const
SvtScriptedTextHelper::GetTextHeight() const
SvtScriptedTextHelper::GetTextWidth() const
SvtScriptedTextHelper::SvtScriptedTextHelper(OutputDevice&, Font*, Font*, Font*)
SvtSearchOptions::IsSearchForStyles() const
SvtSecurityOptions::IsTrustedAuthorsEnabled()
SvtStartOptions::EnableIntro(unsigned char)
SvtStartOptions::IsIntroEnabled() const
SvtStartOptions::SetConnectionURL(rtl::OUString const&)
SvtTabAppearanceCfg::SetDragMode(unsigned short)
SvtTabAppearanceCfg::SetLookNFeel(unsigned short)
SvtURLBox::GetUrlFilter() const
SvtUserOptions::GetLocale() const
SvtWorkingSetOptions::GetWindowList() const
SvtWorkingSetOptions::SetWindowList(com::sun::star::uno::Sequence<rtl::OUString> const&)
Svx3DPreviewControl::Get3DAttributes() const
Svx3DPreviewControl::Set3DObject(E3dObject const*)
Svx3DPreviewControl::Svx3DPreviewControl(Window*, long)
Svx3DWin::LinkStubClickLightHdl(void*, void*)
Svx3DWin::LinkStubDoubleClickHdl(void*, void*)
SvxAcceptChgCtr::IsFilterPageVisible()
SvxAcceptChgCtr::IsViewPageVisible()
SvxAcceptChgCtr::SvxAcceptChgCtr(Window*, long)
SvxAccessibleTextIndex::IsEditable() const
SvxAccessibleTextPropertySet::getServiceName()
SvxAngleCtl::SvxAngleCtl(Window*, ResId const&)
SvxAngleCtl::SvxAngleCtl(Window*, ResId const&, Size)
SvxAreaTabPage::LinkStubClickBitmapHdl_Impl(void*, void*)
SvxAreaTabPage::LinkStubClickColorHdl_Impl(void*, void*)
SvxAreaTabPage::LinkStubClickGradientHdl_Impl(void*, void*)
SvxAreaTabPage::LinkStubClickHatchingHdl_Impl(void*, void*)
SvxAreaTabPage::LinkStubClickInvisibleHdl_Impl(void*, void*)
SvxAutoCorrect::SetShareAutoCorrFileName(String const&)
SvxAutoCorrect::SetUserAutoCorrFileName(String const&)
SvxAutocorrWordList::Insert(SvxAutocorrWord* const&, unsigned short&)
SvxAutocorrWordList::Insert(SvxAutocorrWord* const*, unsigned short)
SvxAutocorrWordList::Insert(SvxAutocorrWordList const*, unsigned short, unsigned short)
SvxAutocorrWordList::Remove(SvxAutocorrWord* const&, unsigned short)
SvxAutocorrWordList::Remove(unsigned short, unsigned short)
SvxB3DVectorItem::SvxB3DVectorItem(unsigned short, SvStream&)
SvxBmpMask::ImpMask(BitmapEx const&)
SvxBrushItem::CreateCntWallpaperItem() const
SvxBrushItem::PurgeGraphic() const
SvxBulletItem::SvxBulletItem(Bitmap const&, unsigned short)
SvxBulletItem::SvxBulletItem(Font const&, unsigned short, unsigned short)
SvxBulletItem::SvxBulletItem(GraphicObject const&, unsigned short)
SvxBulletItem::SvxBulletItem(unsigned char, Font const&, unsigned short, unsigned short)
SvxCSS1Map::Insert(SvxCSS1Map const*, unsigned short, unsigned short)
SvxCSS1Map::Insert(SvxCSS1MapEntry* const&, unsigned short&)
SvxCSS1Map::Insert(SvxCSS1MapEntry* const*, unsigned short)
SvxCSS1Map::Remove(SvxCSS1MapEntry* const&, unsigned short)
SvxCSS1Map::Remove(unsigned short, unsigned short)
SvxCaptionTabPage::Construct()
SvxCharNamePage::FillItemSetColor_Impl(SfxItemSet&)
SvxChartTextOrientItem::SvxChartTextOrientItem(SvxChartTextOrient, unsigned short)
SvxColorBox::LinkStubDelayHdl_Impl(void*, void*)
SvxColorValueSet::SvxColorValueSet(Window*, long)
SvxColumnItem::GetVisibleRight() const
SvxComboBox::Clear()
SvxComboBox::GetEntry(unsigned short) const
SvxComboBox::GetEntryPos(SvxBoxEntry const&) const
SvxComboBox::GetModifiedCount() const
SvxComboBox::GetModifiedEntry(unsigned short) const
SvxComboBox::GetNewCount() const
SvxComboBox::GetNewEntry(unsigned short) const
SvxComboBox::GetRemovedCount() const
SvxComboBox::GetRemovedEntry(unsigned short) const
SvxComboBox::InsertEntry(SvxBoxEntry const&)
SvxComboBox::InsertNewEntry(SvxBoxEntry const&)
SvxComboBox::ModifyEntry(unsigned short, String const&)
SvxComboBox::RemoveEntry(SvxBoxEntry const&)
SvxComboBox::SvxComboBox(Window*, ResId const&, unsigned short)
SvxComboBox::SvxComboBox(Window*, long, unsigned short)
SvxCommonLinguisticControl::GetNewEditWord()
SvxCommonLinguisticControl::SetNewEditWord(String const&)
SvxCommonLinguisticControl::UpdateChangesHelp(String const&)
SvxCommonLinguisticControl::UpdateIgnoreHelp()
SvxConfigDialog::ActivateTabPage(unsigned short)
SvxConfigEntry::GetProperties(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
SvxConfigEntry::SvxConfigEntry(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
SvxConfigFunctionListBox_Impl::GetEntry_Impl(String const&)
SvxConfigFunctionListBox_Impl::GetEntry_Impl(unsigned short)
SvxContourDlg::ScaleContour(PolyPolygon&, Graphic const&, MapUnit, Size const&)
SvxContourDlg::SetEditingObject(void*)
SvxContourDlg::SetExecState(unsigned char)
SvxContourDlg::SetGraphic(Graphic const&)
SvxContourDlg::SetGraphicLinked(unsigned char)
SvxContourDlg::SetPolyPolygon(PolyPolygon const&)
SvxContourDlgChildWindow::UpdateContourDlg(Graphic const&, unsigned char, PolyPolygon const*, void*)
SvxDashListItem::SetDashList(XDashList*)
SvxDistributePage::Create(Window*, SfxItemSet const&, SvxDistributeHorizontal, SvxDistributeVertical)
SvxDoCapitals::Do(String const&, unsigned short, unsigned short, unsigned char)
SvxDoubleItem::SvxDoubleItem(SvStream&, unsigned short)
SvxDrawOutlinerViewForwarder::SetShapePos(Point const&)
SvxDrawPage::GetPageForSdrPage(SdrPage*)
SvxDrawPage::SvxDrawPage()
SvxEditEngineViewForwarder::SvxEditEngineViewForwarder(EditView&)
SvxEditSourceHelper::UserSpaceToEE(Rectangle const&, Size const&, bool)
SvxEditSourceHint::SetEndValue(unsigned long)
SvxEditSourceHint::SetStartValue(unsigned long)
SvxEditSourceHint::SetValue(unsigned long)
SvxFont::DrawText(OutputDevice*, Point const&, String const&, unsigned short, unsigned short) const
SvxFontPrevWindow::IsTwoLines() const
SvxFontPrevWindow::SetCJKFont(SvxFont const&)
SvxFontPrevWindow::SetCTLFont(SvxFont const&)
SvxFrameDirectionItem::SvxFrameDirectionItem(unsigned short)
SvxGetNumRule(com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace>, SvxNumRule&)
SvxGrafToolBoxControl::RegisterControl(unsigned short, SfxModule*)
SvxGraphCtrlAccessibleContext::checkChildIndex(long)
SvxGraphCtrlAccessibleContext::setDescription(rtl::OUString const&)
SvxGraphCtrlAccessibleContext::setName(rtl::OUString const&)
SvxHyperlinkDlg::LinkStubBookmarkFoundHdl(void*, void*)
SvxHyperlinkNewDocTp::ReadURLFile(String const&, String&, String&, int&, unsigned char*)
SvxHyphenWordDialog::LinkStubLangError_Impl(void*, void*)
SvxIMapDlg::GetTargetList() const
SvxIconChoiceCtrlEntry::LockPos(unsigned char)
SvxIconChoiceCtrlEntry::SetMoved(unsigned char)
SvxIconChoiceCtrl_Impl::GetEntryPredecessor(SvxIconChoiceCtrlEntry*, SvxIconChoiceCtrlEntry**)
SvxIconChoiceCtrl_Impl::GetGridCount(Size const&, unsigned char, unsigned char) const
SvxIconChoiceCtrl_Impl::GetItem(SvxIconChoiceCtrlEntry*, Point const&)
SvxIconChoiceCtrl_Impl::GetItemColumn(unsigned short, long&) const
SvxIconChoiceCtrl_Impl::GetPopupMenuPosPixel() const
SvxIconChoiceCtrl_Impl::GetTextMode(SvxIconChoiceCtrlEntry const*) const
SvxIconChoiceCtrl_Impl::GoLeftRight(SvxIconChoiceCtrlEntry*, unsigned char)
SvxIconChoiceCtrl_Impl::GoUpDown(SvxIconChoiceCtrlEntry*, unsigned char)
SvxIconChoiceCtrl_Impl::HideFocus()
SvxIconChoiceCtrl_Impl::HideShowDDIcon(SvxIconChoiceCtrlEntry*, Point const&)
SvxIconChoiceCtrl_Impl::InvalidateBoundingRect(SvxIconChoiceCtrlEntry*)
SvxIconChoiceCtrl_Impl::LockEntryPos(SvxIconChoiceCtrlEntry*, unsigned char)
SvxIconChoiceCtrl_Impl::PrepareCommandEvent(CommandEvent const&)
SvxIconChoiceCtrl_Impl::RecalcAllBoundingRects()
SvxIconChoiceCtrl_Impl::SaveSelection(List**)
SvxIconChoiceCtrl_Impl::SetEntryFlags(SvxIconChoiceCtrlEntry*, unsigned short)
SvxIconChoiceCtrl_Impl::SetEntryListPos(SvxIconChoiceCtrlEntry*, unsigned long)
SvxIconChoiceCtrl_Impl::ShowEntryFocusRect(SvxIconChoiceCtrlEntry const*)
SvxIconChoiceCtrl_Impl::Tracking(TrackingEvent const&)
SvxIconChoiceCtrl_Impl::UpdateBoundingRects()
SvxJSearchOptionsDialog::SetTransliterationFlags(int)
SvxJavaTable::SvxJavaTable(Window*, ResId const&)
SvxLanguageBox::SvxLanguageBox(Window*, long, unsigned char)
SvxLanguageTable::GetType(String const&) const
SvxLightCtl3D::GetVector()
SvxLightCtl3D::SetVector(basegfx::B3DVector const&)
SvxLightCtl3D::SvxLightCtl3D(Window*, long)
SvxLightPrevievCtl3D::SetDistanceToObject(double)
SvxLightPrevievCtl3D::SetLampSize(double)
SvxLightPrevievCtl3D::SetObjectRadius(double)
SvxLightPrevievCtl3D::SetScaleSizeSelected(double)
SvxLightPrevievCtl3D::SvxLightPrevievCtl3D(Window*, ResId const&)
SvxLineColorItem::SvxLineColorItem(Color const&, unsigned short)
SvxLineColorItem::SvxLineColorItem(SvStream&, unsigned short)
SvxLinguTabPage::GetRanges()
SvxLinkManager::InsertFileLink(sfx2::SvBaseLink&)
SvxListBox::GetEntryPos(SvxBoxEntry const&) const
SvxListBox::GetModifiedCount() const
SvxListBox::GetModifiedEntry(unsigned short) const
SvxListBox::GetNewCount() const
SvxListBox::GetNewEntry(unsigned short) const
SvxListBox::GetRemovedCount() const
SvxListBox::GetRemovedEntry(unsigned short) const
SvxListBox::GetSelectSvxBoxEntry(unsigned short) const
SvxListBox::GetSvxBoxEntry(unsigned short) const
SvxListBox::InsertEntry(SvxBoxEntry const&, unsigned short)
SvxListBox::InsertNewEntry(SvxBoxEntry const&)
SvxListBox::ModifyEntry(unsigned short, String const&)
SvxListBox::RemoveEntry(SvxBoxEntry const&)
SvxListBox::SvxListBox(Window*, ResId const&)
SvxListBox::SvxListBox(Window*, long)
SvxListBoxControl::RegisterControl(unsigned short, SfxModule*)
SvxMSConvertOCXControls::WriteOCXExcelKludgeStream(SotStorageStreamRef&, com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&, com::sun::star::awt::Size const&, String&)
SvxMSDffCustomShape::GetShapeTypeFromSdrObject(SdrObject const*)
SvxMSDffManager::ReadObjText(SvStream&, SdrObject*) const
SvxMSDffManager::Scale(PolyPolygon&) const
SvxMSDffManager::Scale(Rectangle&) const
SvxMSDffManager::lcl_GetMetaFileFromGrf_Impl(Graphic const&, GDIMetaFile&)
SvxMSDffManager::removeShapeId(SdrObject*)
SvxMSDffShapeInfos::Insert(SvxMSDffShapeInfo* const&, unsigned short&)
SvxMSDffShapeInfos::Insert(SvxMSDffShapeInfo* const*, unsigned short)
SvxMSDffShapeInfos::Insert(SvxMSDffShapeInfos const*, unsigned short, unsigned short)
SvxMSDffShapeInfos::Remove(SvxMSDffShapeInfo* const&, unsigned short)
SvxMSDffShapeTxBxSort::DeleteAndDestroy(unsigned short, unsigned short)
SvxMSDffShapeTxBxSort::Insert(SvxMSDffShapeOrder* const&, unsigned short&)
SvxMSDffShapeTxBxSort::Insert(SvxMSDffShapeOrder* const*, unsigned short)
SvxMSDffShapeTxBxSort::Insert(SvxMSDffShapeTxBxSort const*, unsigned short, unsigned short)
SvxMSDffShapeTxBxSort::Remove(SvxMSDffShapeOrder* const&, unsigned short)
SvxMSDffShapeTxBxSort::Remove(unsigned short, unsigned short)
SvxNumRule::SetLevel(unsigned short, SvxNumberFormat const*)
SvxNumberFormatShell::GetCurCurrencyEntry()
SvxNumberFormatShell::GetCurrencyFormats(SvStrings&)
SvxNumberFormatShell::IsBankingSymbol(unsigned short)
SvxNumberInfoItem::SetDoubleValue(double const&)
SvxNumberInfoItem::SetNumberFormatter(SvNumberFormatter*)
SvxNumberInfoItem::SetStringValue(String const&)
SvxOle2Shape::SvxOle2Shape(SdrObject*)
SvxOpenGraphicDialog::SetControlHelpIds(short const*, int const*)
SvxOpenGraphicDialog::SetDialogHelpId(int)
SvxParaPrevWindow::OutputSizeChanged()
SvxPixelCtl::GetBitmapPixel(unsigned short)
SvxPluginFileDlg::SetDialogHelpId(int)
SvxPopupWindowListBox::StartSelection()
SvxPositionSizeTabPage::LinkStubChangePosXHdl(void*, void*)
SvxPositionSizeTabPage::LinkStubChangePosYHdl(void*, void*)
SvxPostItDialog::GetRanges()
SvxPreviewCtl3D::GetMaterial(Base3DMaterialValue)
SvxPreviewCtl3D::GetShininess()
SvxPreviewCtl3D::SetNormalMode(unsigned short)
SvxPreviewCtl3D::SetSegments(unsigned short, unsigned short)
SvxPreviewCtl3D::SetShadeMode(unsigned short)
SvxPreviewCtl3D::SetUserDistance(double)
SvxRectCtlAccessibleContext::setDescription(rtl::OUString const&)
SvxRectCtlAccessibleContext::setName(rtl::OUString const&)
SvxRedlinTable::IsValidCalcEntry(String const&, RedlinData*)
SvxRedlinTable::IsValidWriterEntry(String const&, RedlinData*)
SvxRedlinTable::SvxRedlinTable(Window*, long)
SvxRelativeField::SvxRelativeField(Window*, long)
SvxReloadControllerItem::RegisterControl(unsigned short, SfxModule*)
SvxRubyChildWindow::GetChildWindowId()
SvxRuler::GetDefTabDist() const
SvxScriptOrgDialog::EnableButton(Button&, unsigned char)
SvxScriptOrgDialog::LinkStubMacroDoubleClickHdl(void*, void*)
SvxScriptSelectorDialog::GetSelectedId()
SvxSearchDialog::GetReplaceItems(SfxItemSet&)
SvxSearchDialog::GetSearchItems(SfxItemSet&)
SvxSearchDialog::SvxSearchDialog(Window*, SfxBindings&)
SvxSearchItem::GetFromDescriptor(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
SvxSearchItem::SetToDescriptor(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor>&)
SvxSecurityTabPage::LinkStubAdvancedPBHdl(void*, void*)
SvxServiceInfoHelper::concatSequences(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::GetFillAttributeByName(rtl::OUString const&, rtl::OUString const&, SdrModel*)
SvxShape::GetShapeForSdrObj(SdrObject*)
SvxShape::getMaster()
SvxShape::getMaster() const
SvxShapePolyPolygonBezier::GetPolygonKind() const
SvxShapeText::SvxShapeText()
SvxShape_NewInstance()
SvxShowCharSet::ImplFireAccessibleEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
SvxSimpleTable::ClearAll()
SvxSimpleTable::GetOutputSizePixel() const
SvxSimpleTable::GetSelectedCol()
SvxSimpleTable::HideTable()
SvxSimpleTable::IsVisible() const
SvxSimpleTable::SetPosSize(Point const&, Size const&)
SvxSimpleTable::TableToTop()
SvxStdParagraphTabPage::SetMaxDistance(unsigned short)
SvxStringArray::GetStringByType(long) const
SvxStringArray::GetValueByStr(String const&) const
SvxSuperContourDlg::DoAutoCreate()
SvxSuperContourDlg::ReducePoints(long)
SvxTPFilter::DisableRange(unsigned char)
SvxTPFilter::GetSelectedAuthorPos()
SvxTPFilter::HideClocks(unsigned char)
SvxTabStop::GetValueString() const
SvxTabStopArr::Insert(SvxTabStop const&, unsigned short&)
SvxTabStopArr::Insert(SvxTabStop const*, unsigned short)
SvxTabStopArr::Remove(SvxTabStop const&, unsigned short)
SvxTabStopArr_SAR::Replace(SvxTabStop const&, unsigned short)
SvxTabStopArr_SAR::Replace(SvxTabStop const*, unsigned short, unsigned short)
SvxTabStopArr_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(SvxTabStop const&, void*), void*)
SvxTextAnimationPage::Construct()
SvxTextEditSource::GetSdrObject() const
SvxTextEditSourceImpl::UpdateOutliner()
SvxTextEncodingBox::IsTextEncodingSelected(unsigned short) const
SvxTextEncodingBox::RemoveTextEncoding(unsigned short)
SvxThesaurusDialog::GetLanguage() const
SvxThesaurusDialog::LinkStubSpellErrorHdl_Impl(void*, void*)
SvxUnoFontDescriptor::getPropertyState(SfxItemSet const&)
SvxUnoTextBase::InsertField(SvxFieldItem const&)
SvxUnoTextBase::SvxUnoTextBase(SvxEditSource const*, SfxItemPropertyMap const*)
SvxUnoTextContent::SvxUnoTextContent()
SvxUnoTextCursor_NewInstance()
SvxUnoTextRange_NewInstance()
SvxXMLNumRuleExport::Export(rtl::OUString const&, unsigned char)
SvxXMLNumRuleExport::ExportOutline()
SvxZoomDialog::GetRanges()
SvxZoomDialog::SetButtonText(unsigned short, String const&)
SvxZoomDialog::SetSpinSize(unsigned short)
SwAddPrinterTabPage::Init()
SwBlinkList::Insert(SwBlinkList const*, unsigned short, unsigned short)
SwBlinkList::Insert(SwBlinkPortion* const&, unsigned short&)
SwBlinkList::Insert(SwBlinkPortion* const*, unsigned short)
SwBlinkList::Remove(SwBlinkPortion* const&, unsigned short)
SwBlockNames::Insert(SwBlockName const*&, unsigned short&)
SwBlockNames::Insert(SwBlockName const**, unsigned short)
SwBlockNames::Insert(SwBlockNames const*, unsigned short, unsigned short)
SwBlockNames::Remove(SwBlockName const*&, unsigned short)
SwBlockNames::Remove(unsigned short, unsigned short)
SwBookmarks::Insert(SwBookmark* const&, unsigned short&)
SwBookmarks::Insert(SwBookmark* const*, unsigned short)
SwBookmarks::Insert(SwBookmarks const*, unsigned short, unsigned short)
SwBookmarks::Remove(SwBookmark* const&, unsigned short)
SwCellFrms::DeleteAndDestroy(unsigned short, unsigned short)
SwChartBoxes::DeleteAndDestroy(unsigned short, unsigned short)
SwChartDataSequence::GetDataRowSource() const
SwColumnPage::LinkStubTimeout(void*, void*)
SwContentArr::Insert(SwContent* const&, unsigned short&)
SwContentArr::Insert(SwContent* const*, unsigned short)
SwContentArr::Insert(SwContentArr const*, unsigned short, unsigned short)
SwContentArr::Remove(SwContent* const&, unsigned short)
SwContentArr::Remove(unsigned short, unsigned short)
SwCurrShells::DeleteAndDestroy(unsigned short, unsigned short)
SwCurrShells::Insert(CurrShell* const&, unsigned short&)
SwCurrShells::Insert(CurrShell* const*, unsigned short)
SwCurrShells::Insert(SwCurrShells const*, unsigned short, unsigned short)
SwCurrShells::Remove(unsigned short, unsigned short)
SwDLL::Exit()
SwDependentFields::DeleteAndDestroy(unsigned short, unsigned short)
SwDestroyList::DeleteAndDestroy(unsigned short, unsigned short)
SwDestroyList::Insert(SwDestroyList const*, unsigned short, unsigned short)
SwDestroyList::Insert(SwSectionFrm* const&, unsigned short&)
SwDestroyList::Insert(SwSectionFrm* const*, unsigned short)
SwDestroyList::Remove(SwSectionFrm* const&, unsigned short)
SwDoc::LinkStubDoUpdateAllCharts(void*, void*)
SwDrawBaseShell::InitInterface_Impl()
SwEditShell::GetChartName(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&)
SwEditShell::UpdateChartData(String const&)
SwFilterDetect::impl_createFactory(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
SwFldDataOnlyDlgWrapper::GetChildWindowId()
SwFormatTablePage::LinkStubRightModifyHdl(void*, void*)
SwGlblDocContents::Insert(SwGlblDocContent* const&, unsigned short&)
SwGlblDocContents::Insert(SwGlblDocContent* const*, unsigned short)
SwGlblDocContents::Insert(SwGlblDocContents const*, unsigned short, unsigned short)
SwGlblDocContents::Remove(SwGlblDocContent* const&, unsigned short)
SwGlosDocShell::InitInterface_Impl()
SwGlossaryDlg::SetActGroup(String const&)
SwHTMLFmtInfos::Insert(SwHTMLFmtInfo const*&, unsigned short&)
SwHTMLFmtInfos::Insert(SwHTMLFmtInfo const**, unsigned short)
SwHTMLFmtInfos::Insert(SwHTMLFmtInfos const*, unsigned short, unsigned short)
SwHTMLFmtInfos::Remove(SwHTMLFmtInfo const*&, unsigned short)
SwHTMLFmtInfos::Remove(unsigned short, unsigned short)
SwHTMLPosFlyFrms::Insert(SwHTMLPosFlyFrm* const&, unsigned short&)
SwHTMLPosFlyFrms::Insert(SwHTMLPosFlyFrm* const*, unsigned short)
SwHTMLPosFlyFrms::Insert(SwHTMLPosFlyFrms const*, unsigned short, unsigned short)
SwHTMLPosFlyFrms::Remove(SwHTMLPosFlyFrm* const&, unsigned short)
SwHyphWrapper::LinkStubSpellError(void*, void*)
SwInsDBColumns::Insert(SwInsDBColumn* const&, unsigned short&)
SwInsDBColumns::Insert(SwInsDBColumn* const*, unsigned short)
SwInsDBColumns::Insert(SwInsDBColumns const*, unsigned short, unsigned short)
SwInsDBColumns::Remove(SwInsDBColumn* const&, unsigned short)
SwInsDBColumns::Remove(unsigned short, unsigned short)
SwLRects::Replace(SwLineRect const&, unsigned short)
SwLRects::Replace(SwLineRect const*, unsigned short, unsigned short)
SwLRects::_ForEach(unsigned short, unsigned short, unsigned char (*)(SwLineRect const&, void*), void*)
SwListArr::Replace(SwListEntry const&, unsigned short)
SwListArr::Replace(SwListEntry const*, unsigned short, unsigned short)
SwListArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(SwListEntry const&, void*), void*)
SwLoadOptPage::LinkStubCaptionHdl(void*, void*)
SwMailDispatcherListener_Impl::DeleteAttachments(com::sun::star::uno::Reference<com::sun::star::mail::XMailMessage>&)
SwMailMergeChildWindow::GetChildWindowId()
SwNumberTreeNodeGreaterEqual(SwNumberTreeNode const*, SwNumberTreeNode const*)
SwOutlineNodes::Insert(SwNode* const&, unsigned short&)
SwOutlineNodes::Insert(SwNode* const*, unsigned short)
SwOutlineNodes::Insert(SwOutlineNodes const*, unsigned short, unsigned short)
SwPosFlyFrms::DeleteAndDestroy(unsigned short, unsigned short)
SwPosFlyFrms::Insert(SwPosFlyFrm* const&, unsigned short&)
SwPosFlyFrms::Insert(SwPosFlyFrm* const*, unsigned short)
SwPosFlyFrms::Insert(SwPosFlyFrms const*, unsigned short, unsigned short)
SwPosFlyFrms::Remove(SwPosFlyFrm* const&, unsigned short)
SwPosFlyFrms::Remove(unsigned short, unsigned short)
SwRects::Replace(SwRect const&, unsigned short)
SwRects::Replace(SwRect const*, unsigned short, unsigned short)
SwRects::_ForEach(unsigned short, unsigned short, unsigned char (*)(SwRect const&, void*), void*)
SwRedlineDataParentSortArr::DeleteAndDestroy(unsigned short, unsigned short)
SwRedlineDataParentSortArr::Insert(SwRedlineDataParent* const&)
SwRedlineDataParentSortArr::Insert(SwRedlineDataParent* const*, unsigned short)
SwRedlineDataParentSortArr::Insert(SwRedlineDataParentSortArr const*, unsigned short, unsigned short)
SwRetrievedInputStreamDataManager::ReleaseData(unsigned long)
SwScrollStripes::DeleteAndDestroy(unsigned short, unsigned short)
SwScrollStripes::Insert(SwScrollStripes const*, unsigned short, unsigned short)
SwScrollStripes::Insert(SwStripes* const&, unsigned short&)
SwScrollStripes::Insert(SwStripes* const*, unsigned short)
SwScrollStripes::Remove(SwStripes* const&, unsigned short)
SwSections::DeleteAndDestroy(unsigned short, unsigned short)
SwSelBoxes::Insert(SwTableBox* const&, unsigned short&)
SwSelBoxes::Remove(SwTableBox* const&, unsigned short)
SwSortElements::Insert(SwSortElement* const&, unsigned short&)
SwSortElements::Insert(SwSortElement* const*, unsigned short)
SwSortElements::Insert(SwSortElements const*, unsigned short, unsigned short)
SwSortElements::Remove(SwSortElement* const&, unsigned short)
SwSortElements::Remove(unsigned short, unsigned short)
SwSortTableLines::DeleteAndDestroy(unsigned short, unsigned short)
SwSortTableLines::Insert(SwTableLine* const&)
SwSortTableLines::Insert(SwTableLine* const&, unsigned short&)
SwSortTableLines::Insert(SwTableLine* const*, unsigned short)
SwSortTableLines::Remove(SwTableLine* const&, unsigned short)
SwSortTableLines::Remove(unsigned short, unsigned short)
SwStripeArr::Replace(SwStripe const&, unsigned short)
SwStripeArr::Replace(SwStripe const*, unsigned short, unsigned short)
SwStripeArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(SwStripe const&, void*), void*)
SwSyncChildWin::GetChildWindowId()
SwTOXMarks::DeleteAndDestroy(unsigned short, unsigned short)
SwTOXSelectTabPage::LinkStubTOXAreaHdl(void*, void*)
SwTOXSources::Remove(unsigned short, unsigned short)
SwTOXSources::Replace(SwTOXSource const&, unsigned short)
SwTOXSources::Replace(SwTOXSource const*, unsigned short, unsigned short)
SwTOXSources::_ForEach(unsigned short, unsigned short, unsigned char (*)(SwTOXSource const&, void*), void*)
SwTOXStylesTabPage::LinkStubModifyHdl(void*, void*)
SwTableSortBoxes::DeleteAndDestroy(unsigned short, unsigned short)
SwTableSortBoxes::Insert(SwTableBox* const&, unsigned short&)
SwTableSortBoxes::Insert(SwTableBox* const*, unsigned short)
SwTextPortions::Replace(SwTextPortion const&, unsigned short)
SwTextPortions::Replace(SwTextPortion const*, unsigned short, unsigned short)
SwTextPortions::_ForEach(unsigned short, unsigned short, unsigned char (*)(SwTextPortion const&, void*), void*)
SwThreadJoiner::ExistsThreadJoiner()
SwThreadManager::~SwThreadManager()
SwTxtNode::Replace(SwIndex const&, unsigned short)
SwUnoCrsr::SwUnoCrsr(SwUnoCrsr&)
SwView::LinkStubSpellError(void*, void*)
SwWebGlosDocShell::InitInterface_Impl()
SwWriteTableCols::Insert(SwWriteTableCol* const&, unsigned short&)
SwWriteTableCols::Insert(SwWriteTableCol* const*, unsigned short)
SwWriteTableCols::Insert(SwWriteTableCols const*, unsigned short, unsigned short)
SwWriteTableCols::Remove(SwWriteTableCol* const&, unsigned short)
SwWriteTableCols::Remove(unsigned short, unsigned short)
SwWriteTableRows::Insert(SwWriteTableRow* const&, unsigned short&)
SwWriteTableRows::Insert(SwWriteTableRow* const*, unsigned short)
SwWriteTableRows::Insert(SwWriteTableRows const*, unsigned short, unsigned short)
SwWriteTableRows::Remove(SwWriteTableRow* const&, unsigned short)
SwWriteTableRows::Remove(unsigned short, unsigned short)
SwXCellRange::GetLabeledDataSequences(SwChartDataProvider&, unsigned char, unsigned char)
SwXMLTableColumnsSortByWidth_Impl::GetPos(SwXMLTableColumn_Impl const*) const
SwXMLTableColumnsSortByWidth_Impl::Remove(SwXMLTableColumn_Impl*)
SwXMLTableColumns_Impl::Insert(SwXMLTableColumn_Impl* const&, unsigned short&)
SwXMLTableColumns_Impl::Insert(SwXMLTableColumn_Impl* const*, unsigned short)
SwXMLTableColumns_Impl::Insert(SwXMLTableColumns_Impl const*, unsigned short, unsigned short)
SwXMLTableColumns_Impl::Remove(SwXMLTableColumn_Impl* const&, unsigned short)
SwXMLTableColumns_Impl::Remove(unsigned short, unsigned short)
SwpFmts::DeleteAndDestroy(unsigned short, unsigned short)
SwpFmts::Insert(SwFmt const*&, unsigned short&)
SwpFmts::Insert(SwFmt const**, unsigned short)
SwpFmts::Insert(SwpFmts const*, unsigned short, unsigned short)
SwpFmts::Remove(SwFmt const*&, unsigned short)
SwpFmts::Remove(unsigned short, unsigned short)
SwpHtEnd::Insert(SwTxtAttr const*&, unsigned short&)
SwpHtEnd::Insert(SwTxtAttr const**, unsigned short)
SwpHtEnd::Insert(SwpHtEnd const*, unsigned short, unsigned short)
SwpHtEnd::Remove(SwTxtAttr const*&, unsigned short)
SwpHtStart::Insert(SwTxtAttr const*&, unsigned short&)
SwpHtStart::Insert(SwTxtAttr const**, unsigned short)
SwpHtStart::Insert(SwpHtStart const*, unsigned short, unsigned short)
SwpHtStart::Remove(SwTxtAttr const*&, unsigned short)
SymCharConverter::Convert(Font&, String&, OutputDevice*)
SymbolArray::DeleteAndDestroy(unsigned short, unsigned short)
SystemChildWindow::IsEraseBackgroundEnabled()
SystemChildWindow::SystemChildWindow(Window*, long, SystemWindowData*)
SystemWindow::GetZLevel() const
SystemWindow::SetZLevel(unsigned char)
T602ImportFilter::CreateInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
T602ImportFilter::getSupportedServiceNames()
TESortedPositions::Insert(TESortedPositions const*, unsigned short, unsigned short)
TESortedPositions::Insert(unsigned long const&, unsigned short&)
TESortedPositions::Insert(unsigned long const*, unsigned short)
TESortedPositions::Remove(unsigned long const&, unsigned short)
TESortedPositions::Remove(unsigned short, unsigned short)
TESortedPositions_SAR::Replace(unsigned long const&, unsigned short)
TESortedPositions_SAR::Replace(unsigned long const*, unsigned short, unsigned short)
TESortedPositions_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned long const&, void*), void*)
TEWritingDirectionInfos::Replace(TEWritingDirectionInfo const&, unsigned short)
TEWritingDirectionInfos::Replace(TEWritingDirectionInfo const*, unsigned short, unsigned short)
TEWritingDirectionInfos::_ForEach(unsigned short, unsigned short, unsigned char (*)(TEWritingDirectionInfo const&, void*), void*)
TGAReader::Callback(unsigned short)
TPGalleryThemeProperties::LinkStubClickCloseBrowserHdl(void*, void*)
TTBasic::CreateMyBasic()
TTProfiler::Dec(unsigned long)
TTProperties::Img(Bitmap*)
TabBar::EnablePage(unsigned short, unsigned char)
TabBar::GetMinSize() const
TabBar::GetSelectPage(unsigned short) const
TabBar::SelectPageRange(unsigned char, unsigned short, unsigned short)
TabBar::SetHelpId(unsigned short, unsigned long)
TabBar::SetHelpText(unsigned short, String const&)
TabBar::SetSelectColor()
TabBar::SetSelectColor(Color const&)
TabBar::SetSelectTextColor()
TabBar::SetSelectTextColor(Color const&)
TabControl::GetTabPageBounds(unsigned short) const
TabControl::GetTabPageResId(unsigned short) const
TabControl::ImplSetFirstPagePos(unsigned short)
TabControl::SetFirstPageId(unsigned short)
TabControl::SetHelpId(unsigned short, unsigned long)
Table::GetUniqueKey(unsigned long) const
TaskBar::EnableAutoHide(unsigned char)
TaskBar::HideStatusText()
TaskBar::SetLines(unsigned short)
TaskBar::ShowStatusText(String const&)
TaskBar::TaskBar(Window*, long)
TaskStatusBar::AddStatusFieldItem(unsigned short, TaskStatusFieldItem const&, unsigned short)
TaskStatusBar::GetStatusFieldItem(unsigned short, TaskStatusFieldItem&) const
TaskStatusBar::InsertStatusField(long, unsigned short, unsigned short)
TaskStatusBar::ModifyStatusFieldItem(unsigned short, TaskStatusFieldItem const&)
TaskStatusBar::RemoveStatusFieldItem(unsigned short)
TaskStatusBar::SetFieldFlags(unsigned short)
TaskStatusFieldItem::TaskStatusFieldItem(ITaskStatusNotify*, Image const&, String const&, String const&, unsigned short)
TaskToolBox::EndUpdateTask()
TaskToolBox::StartUpdateTask()
TaskToolBox::UpdateTask(Image const&, String const&, unsigned char)
TempFile::GetTempNameBaseDirectory()
TempFile::SetTempNameBaseDirectory(String const&)
TemplateCache::AddFileInfo(String const&)
TemplateCache::ClearInvalidEntrys()
TemplateCache::GetFileInfo(String const&)
TemplateCache::Load()
TemplateCache::Save()
TemplateCache::TemplateCache()
TemplateCache::~TemplateCache()
TemplateCacheInfo::TemplateCacheInfo(String const&, DateTime const&, unsigned char)
TestInSendMessage()
TextAttrib::Clone() const
TextAttrib::SetFont(Font&) const
TextAttribHyperLink::TextAttribHyperLink(String const&)
TextAttribHyperLink::TextAttribHyperLink(String const&, String const&)
TextConvWrapper::ConvEnd_impl()
TextDoc::IsValidPaM(TextPaM const&)
TextEngine::DoesKeyMoveCursor(KeyEvent const&)
TextEngine::SetDefTab(unsigned short)
TextEngine::SetUpdateMode(unsigned char, TextView*, unsigned char)
TextObj::TextObj(TextObj&)
TextUndoManager::UndoRedoStart()
TextUndoSetAttribs::TextUndoSetAttribs(TextEngine*, TextSelection const&)
TextView::CursorEndOfParagraph(TextPaM const&)
TextView::CursorLeft(TextPaM const&, unsigned char)
TextView::CursorRight(TextPaM const&, unsigned char)
TextView::CursorStartOfParagraph(TextPaM const&)
TextView::IsAutoIndentMode() const
TextView::IsHighlightSelection() const
TextView::IsPaintSelection() const
TextView::SetHighlightSelection(unsigned char)
TextView::Write(SvStream&)
TimeBox::GetTime(unsigned short) const
TimeBox::GetTimePos(Time const&) const
TimeBox::InsertTime(Time const&, unsigned short)
TimeBox::RemoveTime(Time const&)
TimeBox::TimeBox(Window*, ResId const&)
TimeFormatter::GetRealTime() const
TimeFormatter::IsTimeModified() const
TimeOut_Impl(void*, void*)
TokenPool::GetString(TokenId const&) const
ToolBox::EndCustomizeMode()
ToolBox::GetDisplayItemId(long) const
ToolBox::GetItemDropDownRect(unsigned short) const
ToolBox::GetItemHighImage(unsigned short) const
ToolBox::GetItemImageAngle(unsigned short) const
ToolBox::GetItemImageMirrorMode(unsigned short) const
ToolBox::GetMenuButtonHdl() const
ToolBox::GetMenubuttonRect() const
ToolBox::GetPageScroll()
ToolBox::GetTextCount() const
ToolBox::GetTextStartEnd(long) const
ToolBox::ImplGetLastValidItem(unsigned short)
ToolBox::IsCustomizeMode()
ToolBox::IsItemDown(unsigned short) const
ToolBox::SetCustomizeMode(unsigned char)
ToolBox::SetItemHighImage(unsigned short, Image const&)
ToolBox::SetToolArrowClipregion(ToolBox*, long, long, unsigned char, unsigned char, long)
ToolBox::StartCustomize(Rectangle const&, void*)
ToolBox::StartCustomizeMode()
ToolbarMenu::appendEntry(int, Image const&, unsigned short)
ToolbarMenu::appendEntry(int, String const&, Control*, unsigned short)
ToolbarMenu::getEntryImage(int) const
ToolbarMenu::getEntryText(int) const
ToolbarMenu::getHighlightedEntryId() const
ToolbarMenu::isEntryChecked(int) const
ToolbarMenu::isEntryEnabled(int) const
ToolbarSaveInData::ReloadToolbar(rtl::OUString const&)
TpBorderRGBColor(Color const&)
TpBorderRGBColor(unsigned int)
TransferDataContainer::ClearData()
TransferableDataHelper::GetInterface(unsigned long, com::sun::star::uno::Reference<com::sun::star::uno::XInterface>&)
TransferableHelper::SetFileList(FileList const&, com::sun::star::datatransfer::DataFlavor const&)
TransferableHelper::SetInterface(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, com::sun::star::datatransfer::DataFlavor const&)
TypeName::TypeName(char*, unsigned int, unsigned int, unsigned short, int, int)
UCBStorageStream::UCBStorageStream(String const&, unsigned short, unsigned char, ByteString const*)
UCBStream::UCBStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream>&)
URIHelper::queryFSysStyle(String const&, bool)
UShortCont::Sort()
UniqueIndex::Replace(unsigned long, void*)
UnoControlBase::ImplGetPropertyValue_UINT16(unsigned short)
UnoControlBase::ImplGetPropertyValue_UINT32(unsigned short)
UnoControlModel::Clone() const
UnoControlModel::GetImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
UnoControlModel::getInfoHelper()
UnoMemoryStream::UnoMemoryStream(unsigned int, unsigned int)
UnxFilePicker::controlActionInfo(short, rtl::OUString&)::ElementToName::~ElementToName()
UpdateCheck::createService(rtl::OUString const&) const
UpdateCheck::dispose()
UpdateCheckROModel::isAutoDownloadEnabled() const
VCLUnoHelper::CreatePointer()
VCLXAccessibleBox::SetIndexInParent(int)
VCLXDevice::IsCreatedWithToolkit() const
VCLXPrinterServer::getImplementationId()
VCLXPrinterServer::getTypes()
ValueNotFoundException::ValueNotFoundException()
ValueSet::CopyItems(ValueSet const&)
ValueSet::GetItemBits(unsigned short) const
ValueSet::HideDropPos()
ValueSet::InsertSpace(unsigned short, unsigned short)
ValueSet::IsRTLActive()
ValueSet::SetFirstLine(unsigned short)
ValueSet::SetItemBits(unsigned short, unsigned short)
ValueSet::ShowDropPos(Point const&)
ValueSetAcc::IsDisposed()
ValueSetItem::ClearAccessible()
VectorBtree::memcmp(_STL::vector<unsigned char, _STL::allocator<unsigned char> > const&, _STL::vector<unsigned char, _STL::allocator<unsigned char> > const&, int, int)
VerbExecutionController::EndControlExecution_WasModified()
VerbExecutionController::StartControlExecution()
Viewport3D::GetViewWindow(double&, double&, double&, double&) const
Viewport3D::SetFarClipDist(double)
Viewport3D::SetNearClipDist(double)
WLevDistance::WLD(rtl::OUString const&)
WLevDistance::WLD(unsigned short const*)
WLevDistance::WLevDistance(rtl::OUString const&)
WLevDistance::WLevDistance(unsigned short const*)
WMFWriter::WMFRecord_SetBkColor(Color const&)
WW8Bytes::Replace(unsigned char const&, unsigned short)
WW8Bytes::Replace(unsigned char const*, unsigned short, unsigned short)
WW8Bytes::_ForEach(unsigned short, unsigned short, unsigned char (*)(unsigned char const&, void*), void*)
WW8OleMaps::Insert(WW8OleMap* const&, unsigned short&)
WW8OleMaps::Insert(WW8OleMap* const*, unsigned short)
WW8OleMaps::Insert(WW8OleMaps const*, unsigned short, unsigned short)
WW8OleMaps::Remove(WW8OleMap* const&, unsigned short)
WW8OleMaps::Remove(unsigned short, unsigned short)
WW8_WrSepInfoPtrs::Remove(unsigned short, unsigned short)
WW8_WrSepInfoPtrs::Replace(WW8_SepInfo const&, unsigned short)
WW8_WrSepInfoPtrs::Replace(WW8_SepInfo const*, unsigned short, unsigned short)
WW8_WrSepInfoPtrs::_ForEach(unsigned short, unsigned short, unsigned char (*)(WW8_SepInfo const&, void*), void*)
Wallpaper::SetBitmap()
Wallpaper::SetGradient()
Wallpaper::SetRect()
Wallpaper::Wallpaper(BitmapEx const&)
Wallpaper::Wallpaper(Gradient const&)
WinMtfOutput::DrawLine(Point const&, Point const&)
WinMtfOutput::GetTextLayoutMode() const
WinMtfOutput::SetFont(Font const&)
Window::DrawNativeControlText(unsigned int, unsigned int, Region const&, unsigned int, ImplControlValue const&, rtl::OUString)
Window::EnableChildNotify(unsigned char)
Window::GetDragSourceDropTarget(com::sun::star::uno::Reference<com::sun::star::datatransfer::dnd::XDragSource>&, com::sun::star::uno::Reference<com::sun::star::datatransfer::dnd::XDropTarget>&)
Window::GetExtendedStyle() const
Window::GetFontResolution(int&, int&) const
Window::GetPrevExtendedStyle() const
Window::GetSystemDataAny() const
Window::HasCompoundControlFocus() const
Window::ImplCalcChildOverlapToTop(ImplCalcToTopData*)
Window::ImplFrameToOutput(Rectangle&)
Window::ImplGetSameParent(Window const*) const
Window::ImplInit(Window*, long, com::sun::star::uno::Any const&)
Window::ImplInitSalControlHandle()
Window::ImplIsInTaskPaneList()
Window::ImplIsMouseTransparent() const
Window::ImplIsToolbox() const
Window::ImplOutputToFrame(Rectangle&)
Window::ImplSetActive(unsigned char)
Window::IsAllResizeEnabled() const
Window::IsAutoScroll() const
Window::IsChildNotify() const
Window::IsChildPointerOverwrite() const
Window::IsClipSiblingsEnabled() const
Window::IsExtTextInput() const
Window::IsParentPathVisible() const
Window::IsParentUpdateMode() const
Window::IsPointerVisible() const
Window::PostUserEvent(unsigned long, void*)
Window::SetAccessibleDescription(String const&)
Window::SetExtendedStyle(long)
Window::Validate(Rectangle const&, unsigned short)
Window::Validate(Region const&, unsigned short)
WindowArrange::Arrange(unsigned short, Rectangle const&)
WindowArrange::WindowArrange()
WindowArrange::~WindowArrange()
WizardDialog::IsButtonFixedLineVisible()
WizardDialog::WizardDialog(Window*, long, unsigned char, short)
WordArr::Remove(short)
WriteWindowMetafile(SvStream&, GDIMetaFile const&)
WritingDirectionInfos::Replace(WritingDirectionInfo const&, unsigned short)
WritingDirectionInfos::Replace(WritingDirectionInfo const*, unsigned short, unsigned short)
WritingDirectionInfos::_ForEach(unsigned short, unsigned short, unsigned char (*)(WritingDirectionInfo const&, void*), void*)
WrongRanges::Replace(WrongRange const&, unsigned short)
WrongRanges::Replace(WrongRange const*, unsigned short, unsigned short)
WrongRanges::_ForEach(unsigned short, unsigned short, unsigned char (*)(WrongRange const&, void*), void*)
X11SalFrame::PostExtTextEvent(unsigned short, void*)
X11SalFrame::SetWindowGravity(int) const
X11SalGraphics::SetMask(int&, int&, unsigned int&, unsigned int&, int&, int&, unsigned long)
X509Certificate_NssImpl::getImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface>)
XBitmapList::Replace(XBitmapEntry*, long)
XBitmapTable::Remove(long)
XBitmapTable::Replace(long, XBitmapEntry*)
XBitmapTable::XBitmapTable(String const&, XOutdevItemPool*, unsigned short, unsigned short)
XClipPolyPolygon::GetClippedPolyPolygon()
XColorList::GetColor(long) const
XColorList::Remove(long)
XColorList::Replace(XColorEntry*, long)
XColorList::XColorList(String const&, XOutdevItemPool*, unsigned short, unsigned short)
XDashTable::Remove(long)
XDashTable::Replace(long, XDashEntry*)
XDashTable::XDashTable(String const&, XOutdevItemPool*, unsigned short, unsigned short)
XEditAttribute::XEditAttribute(SfxPoolItem const&)
XFillBitmapItem::XFillBitmapItem(SfxItemPool*)
XFillBitmapItem::XFillBitmapItem(long, XOBitmap const&)
XFillExchangeData::RegisterClipboardFormatName()
XFillFloatTransparenceItem::XFillFloatTransparenceItem(SfxItemPool*)
XFillFloatTransparenceItem::XFillFloatTransparenceItem(long, XGradient const&, unsigned char)
XFillGradientItem::XFillGradientItem(SfxItemPool*)
XFillHatchItem::XFillHatchItem(SfxItemPool*)
XFillHatchItem::XFillHatchItem(long, XHatch const&)
XFormTextShadowColorItem::XFormTextShadowColorItem(long, Color const&)
XGradientTable::Remove(long)
XGradientTable::Replace(long, XGradientEntry*)
XGradientTable::XGradientTable(String const&, XOutdevItemPool*, unsigned short, unsigned short)
XHatchTable::Remove(long)
XHatchTable::Replace(long, XHatchEntry*)
XHatchTable::XHatchTable(String const&, XOutdevItemPool*, unsigned short, unsigned short)
XKeyEventOp::~XKeyEventOp()
XLineDashItem::XLineDashItem(SfxItemPool*)
XLineDashItem::XLineDashItem(long, XDash const&)
XLineEndItem::XLineEndItem(SfxItemPool*)
XLineEndList::Replace(XLineEndEntry*, long)
XLineEndTable::Remove(long)
XLineEndTable::Replace(long, XLineEndEntry*)
XLineEndTable::XLineEndTable(String const&, XOutdevItemPool*, unsigned short, unsigned short)
XLineStartItem::XLineStartItem(SfxItemPool*)
XMLAutoTextEventExport::XMLAutoTextEventExport(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, unsigned short)
XMLElement::Equals(rtl::OUString)
XMLElement::GetAttribute(String const&)
XMLEmbeddedObjectExportFilter::XMLEmbeddedObjectExportFilter()
XMLFamilyDataList_Impl::GetPos(XMLFamilyData_Impl const*) const
XMLFamilyDataList_Impl::Remove(XMLFamilyData_Impl*)
XMLFile::View()
XMLFile::showType(XMLParentNode*)
XMLFileWindow::SyntaxColorsChanged()
XMLFilterListBox::LinkStubHeaderSelect_Impl(void*, void*)
XMLFilterTabDialog::LinkStubCancelHdl(void*, void*)
XMLFilterTestDialog::getFilterInfo() const
XMLFontAutoStylePoolNames_Impl::GetPos(rtl::OUString const*) const
XMLFontAutoStylePoolNames_Impl::Remove(rtl::OUString*)
XMLFontAutoStylePool_Impl::GetPos(XMLFontAutoStylePoolEntry_Impl const*) const
XMLFontAutoStylePool_Impl::Remove(XMLFontAutoStylePoolEntry_Impl*)
XMLFormsContext::XMLFormsContext(SvXMLImport&, unsigned short, rtl::OUString const&)
XMLMutableAttributeList::getImplementation(com::sun::star::uno::Reference<com::sun::star::uno::XInterface>)
XMLPagePropertySetMapper::XMLPagePropertySetMapper(UniReference<XMLPropertyHandlerFactory> const&)
XMLParentNode::GetChildElement(XMLElement*)
XMLParentNode::RemoveChild(XMLElement*)
XMLPersTextContentTContext::XMLPersTextContentTContext(XMLTransformerBase&, rtl::OUString const&, unsigned short)
XMLPersTextContentTContext::XMLPersTextContentTContext(XMLTransformerBase&, rtl::OUString const&, unsigned short, xmloff::token::XMLTokenEnum, unsigned short)
XMLProcAddAttrTransformerContext::XMLProcAddAttrTransformerContext(XMLTransformerBase&, rtl::OUString const&, unsigned short, unsigned short, xmloff::token::XMLTokenEnum, xmloff::token::XMLTokenEnum)
XMLPropertyBackpatcher<rtl::OUString>::XMLPropertyBackpatcher(char const*)
XMLPropertyBackpatcher<rtl::OUString>::XMLPropertyBackpatcher(char const*, char const*, unsigned char, rtl::OUString)
XMLPropertyBackpatcher<rtl::OUString>::XMLPropertyBackpatcher(rtl::OUString const&, rtl::OUString const&, unsigned char, rtl::OUString)
XMLPropertyBackpatcher<short>::XMLPropertyBackpatcher(char const*)
XMLPropertyBackpatcher<short>::XMLPropertyBackpatcher(char const*, char const*, unsigned char, short)
XMLPropertyBackpatcher<short>::XMLPropertyBackpatcher(rtl::OUString const&, rtl::OUString const&, unsigned char, short)
XMLShapeImportHelper::CreateExternalShapePropMapper(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, SvXMLImport&)
XMLShapeImportHelper::Get3DSceneShapeAttrTokenMap()
XMLShapeImportHelper::GetPathShapeAttrTokenMap()
XMLShapeImportHelper::GetPolygonShapeAttrTokenMap()
XMLSignatureHelper::CreateAndWriteSignature(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
XMLSignatureHelper::GetSecurityEnvironmentByIndex(int)
XMLSignatureHelper::GetSecurityEnvironmentNumber()
XMLSignatureHelper::GetUriBinding() const
XMLSignatureHelper::SetUriBinding(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XUriBinding>&)
XMLSignatureHelper::SetX509Certificate(int, int, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
XMLTextFrameContext::CreateIfNotThere()
XMLTextImportHelper::CreateCharExtPropMapper(SvXMLImport&, XMLFontStylesContext*)
XMLTextImportHelper::HasDrawNameAttribute(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&, SvXMLNamespaceMap&)
XMLTextListAutoStylePool::HasName(rtl::OUString const&) const
XMLTextListAutoStylePoolNames_Impl::GetPos(rtl::OUString const*) const
XMLTextListAutoStylePoolNames_Impl::Remove(rtl::OUString*)
XMLTextListAutoStylePool_Impl::GetPos(XMLTextListAutoStylePoolEntry_Impl const*) const
XMLTextListAutoStylePool_Impl::Remove(XMLTextListAutoStylePoolEntry_Impl*)
XMLTextParagraphExport::CreateCharExtPropMapper(SvXMLExport&)
XMLTextParagraphExport::FindTextStyle(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, unsigned char&) const
XMLTextParagraphExport::collectFrames()
XMLTextPropertyHandlerFactory_Impl::XMLTextPropertyHandlerFactory_Impl()
XMLTextPropertyHandlerFactory_Impl::~XMLTextPropertyHandlerFactory_Impl()
XMLUtil::GetIsoLangByIndex(unsigned short)
XMLUtil::dump()
XMLVersionImExportOOO_createInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
XMLVersionImExportOOO_getImplementationName()
XMLVersionImExportOOO_getSupportedServiceNames()
XMLVisAreaContext::XMLVisAreaContext(SvXMLImport&, unsigned short, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&, Rectangle&, MapUnit)
XMLVisAreaExport::XMLVisAreaExport(SvXMLExport&, char const*, Rectangle const&, MapUnit)
XMLVisAreaExport::XMLVisAreaExport(SvXMLExport&, char const*, com::sun::star::awt::Rectangle const&, short)
XMLVisAreaExport::~XMLVisAreaExport()
XOutBitmap::CreateQuickDrawBitmapEx(Graphic const&, OutputDevice const&, MapMode const&, Size const&, Point const&, Size const&)
XOutBitmap::DrawQuickDrawBitmapEx(OutputDevice*, Point const&, Size const&, BitmapEx const&)
XOutBitmap::DrawTiledBitmapEx(OutputDevice*, Point const&, Size const&, Rectangle const&, BitmapEx const&)
XOutputDevice::DrawPolygon(Polygon const&)
XOutputDevice::GetMapMode() const
XOutputDevice::SetMapMode(MapMode const&)
XPluginManager_Impl::getFirstXPlugin()
XPolyPolygon::Replace(XPolygon const&, unsigned short)
XPolyPolygon::Rotate(Point const&, unsigned short)
XPolyPolygon::Rotate20()
XPolyPolygon::Scale(double, double)
XPolyPolygon::SlantX(long, double, double)
XPolyPolygon::SlantY(long, double, double)
XPolyPolygon::Translate(Point const&)
XPolyPolygon::XPolyPolygon(PolyPolygon const&)
XPolyPolygon::XPolyPolygon(XPolygon const&)
XPolygon::GetSize() const
XPolygon::Insert(unsigned short, Polygon const&)
XPolygon::Rotate(Point const&, unsigned short)
XPolygon::SetSize(unsigned short)
XPropertyList::Clear()
XPropertyList::XPropertyList(SvStream&)
XPropertyTable::Clear()
XPropertyTable::GetBitmap(long) const
XPropertyTable::XPropertyTable(SvStream&)
XSecController::getErrorMessage()
XSecController::setSAXChainConnector(com::sun::star::uno::Reference<com::sun::star::xml::sax::XParser> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::xml::crypto::sax::XElementStackKeeper> const&)
XSecondaryFillColorItem::XSecondaryFillColorItem(long, Color const&)
XclDConRef::XclDConRef(ScRange const&, String const&)
XclExpAddressConverter::CheckRangeList(ScRangeList const&, bool)
XclExpAddressConverter::CreateValidRange(ScRange const&, bool)
XclExpDefaultXF::SetAlignment(XclExpCellAlign const&)
XclExpDefaultXF::SetArea(XclExpCellArea const&)
XclExpDefaultXF::SetBorder(XclExpCellBorder const&)
XclExpDefaultXF::SetParent(unsigned int)
XclExpDefaultXF::SetProtection(XclExpCellProt const&)
XclExpDefaultXF::SetUsedFlags(bool, bool, bool, bool, bool, bool)
XclExpDummyRecord::XclExpDummyRecord(unsigned short, void const*, unsigned long)
XclExpErrorCell::XclExpErrorCell(XclExpRoot, XclAddress const&, ScPatternAttr const*, unsigned int, unsigned char)
XclExpName::IsHidden() const
XclExpPTField::GetItem(String const&) const
XclExpPalette::GetColorData(unsigned short) const
XclExpPivotCache::AddCalcFields(ScDPObject const&)
XclExpRecordBase::SaveRepeated(XclExpStream&, unsigned long)
XclExpStream::WriteByteStringBuffer(ByteString const&, unsigned short)
XclExpStream::WriteUnicodeBuffer(unsigned short const*, unsigned long, unsigned char)
XclExpString::Append(rtl::OUString const&)
XclExpString::AssignByte(unsigned short, unsigned short, unsigned short, unsigned short)
XclExpString::XclExpString(String const&, _STL::vector<XclFormatRun, _STL::allocator<XclFormatRun> > const&, unsigned short, unsigned short)
XclExpString::XclExpString(rtl::OUString const&, _STL::vector<XclFormatRun, _STL::allocator<XclFormatRun> > const&, unsigned short, unsigned short)
XclExpTabInfo::GetSortedScTab(short) const
XclFontData::SetApiFontEncoding(short)
XclImpAddressConverter::CheckRangeList(XclRangeList const&, bool)
XclImpAddressConverter::CreateValidRange(XclRange const&, short, short, bool)
XclImpColRowSettings::HideRow(int)
XclImpOutlineBuffer::Reset(ScOutlineArray*)
XclImpPCField::GetItemCount() const
XclImpPTField::GetVisItemName(unsigned short) const
XclImpSolverContainer::ReadSolverContainer(SvStream&)
XclImpStream::CopyRecordToStream(SvStream&)
XclImpStream::IgnoreByteString(bool)
XclImpStream::IgnoreUniString()
XclImpStream::ReadFloat()
XclImpStream::ReadInt8()
XclImpStream::RejectPosition()
XclNumFmtBuffer::GetFormat(unsigned short) const
XclObjId::XclObjId()
XclPCField::IsCalculatedField() const
XclPCNumGroupInfo::IsNumType() const
XclTools::GetXclCodePage(unsigned short)
XclTracer::AddAttribute(rtl::OUString const&, int)
XclTracer::Trace(rtl::OUString const&, int)
XclTracer::TraceChartAxisAutoCross()
XclTracer::TraceChartAxisManualCross()
XclTracer::TraceChartDSName()
XclTracer::TraceChartErrorBars()
XclTracer::TraceChartInvalidXY()
XclTracer::TraceChartRange()
XclTracer::TraceChartTextFormatting()
XclTracer::TraceChartTrendLines()
XclTracer::TraceInvisibleGrid(bool)
XclTxoData::SetXclHorAlignment(unsigned char)
XclTxoData::SetXclVerAlignment(unsigned char)
Xlfd::Xlfd()
XmlIndexBuilder::clearIndex()
XmlSec::GetContentPart(String const&, String const&)
XmlSec::GetDateTimeString(rtl::OUString const&, rtl::OUString const&)
XvaCloseIM(_XIM*)
XvaOpenIM
ZCodec::UpdateCRC(unsigned long, unsigned long)
ZipFile::getName()
ZipFile::getSize()
ZipOutputStream::close()
ZipOutputStream::setComment(rtl::OUString const&)
ZipPackageBuffer::ZipPackageBuffer(com::sun::star::uno::Sequence<signed char>&)
_CpyTabFrms::Insert(_CpyTabFrm const&, unsigned short&)
_CpyTabFrms::Insert(_CpyTabFrm const*, unsigned short)
_CpyTabFrms::Insert(_CpyTabFrms const*, unsigned short, unsigned short)
_CpyTabFrms::Remove(_CpyTabFrm const&, unsigned short)
_CpyTabFrms_SAR::Replace(_CpyTabFrm const&, unsigned short)
_CpyTabFrms_SAR::Replace(_CpyTabFrm const*, unsigned short, unsigned short)
_CpyTabFrms_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(_CpyTabFrm const&, void*), void*)
_MapTblFrmFmts::Remove(unsigned short, unsigned short)
_MapTblFrmFmts::Replace(_MapTblFrmFmt const&, unsigned short)
_MapTblFrmFmts::Replace(_MapTblFrmFmt const*, unsigned short, unsigned short)
_MergePos::Insert(_CmpLPt const&, unsigned short&)
_MergePos::Insert(_CmpLPt const*, unsigned short)
_MergePos::Insert(_MergePos const*, unsigned short, unsigned short)
_MergePos::Remove(_CmpLPt const&, unsigned short)
_MergePos_SAR::Replace(_CmpLPt const&, unsigned short)
_MergePos_SAR::Replace(_CmpLPt const*, unsigned short, unsigned short)
_MergePos_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(_CmpLPt const&, void*), void*)
_STL::_Vector_base<com::sun::star::uno::Reference<com::sun::star::report::XReportComponent>, _STL::allocator<com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> > >::~_Vector_base()
_STL::hashtable<rtl::OString, rtl::OString, rtl::OStringHash, _STL::_Identity<rtl::OString>, _STL::equal_to<rtl::OString>, _STL::allocator<rtl::OString> >::_M_delete_node(_STL::_Hashtable_node<rtl::OString>*)
_STL::pair<boost::shared_ptr<rptui::OReportSection>, rtl::Reference<comphelper::OPropertyChangeMultiplexer> >::~pair()
_STL::pair<boost::shared_ptr<slideshow::internal::UnoView>, boost::shared_ptr<cppcanvas::CustomSprite> >::~pair()
_SaveFlyArr::Remove(unsigned short, unsigned short)
_SaveFlyArr::Replace(_SaveFly const&, unsigned short)
_SaveFlyArr::Replace(_SaveFly const*, unsigned short, unsigned short)
_SaveFlyArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(_SaveFly const&, void*), void*)
_SetGetExpFlds::Insert(_SetGetExpFld* const&, unsigned short&)
_SetGetExpFlds::Insert(_SetGetExpFld* const*, unsigned short)
_SetGetExpFlds::Insert(_SetGetExpFlds const*, unsigned short, unsigned short)
_SetGetExpFlds::Remove(_SetGetExpFld* const&, unsigned short)
_SfxMacroTabPage::GetFocus_Impl(_SfxMacroTabPage*, Edit*)
_SfxMacroTabPage::GetGetMacrosOfRangeLink() const
_SfxMacroTabPage::GetGetRangeLink() const
_SfxMacroTabPage::SelectEvent(String const&, unsigned short)
_SfxMacroTabPage::SetGetMacrosOfRangeLink(SvStringsDtor* (*)(_SfxMacroTabPage*, String const&, String const&))
_SfxMacroTabPage::SetReadOnly(unsigned char)
_SfxObjectList::Insert(_FileListEntry const*&, unsigned short&)
_SfxObjectList::Insert(_FileListEntry const**, unsigned short)
_SfxObjectList::Insert(_SfxObjectList const*, unsigned short, unsigned short)
_SfxObjectList::Remove(_FileListEntry const*&, unsigned short)
_SfxObjectList::Remove(unsigned short, unsigned short)
_SfxPoolItems::DeleteAndDestroy(unsigned short, unsigned short)
_Sort_CellFrms::Remove(unsigned short, unsigned short)
_Sort_CellFrms::Replace(_Sort_CellFrm const&, unsigned short)
_Sort_CellFrms::Replace(_Sort_CellFrm const*, unsigned short, unsigned short)
_Sort_CellFrms::_ForEach(unsigned short, unsigned short, unsigned char (*)(_Sort_CellFrm const&, void*), void*)
_SwFtnIdxs::Insert(SwTxtFtn* const&, unsigned short&)
_SwFtnIdxs::Insert(SwTxtFtn* const*, unsigned short)
_SwFtnIdxs::Remove(SwTxtFtn* const&, unsigned short)
_SwPamRanges::Insert(SwPamRange const&, unsigned short&)
_SwPamRanges::Insert(SwPamRange const*, unsigned short)
_SwPamRanges::Insert(_SwPamRanges const*, unsigned short, unsigned short)
_SwPamRanges::Remove(SwPamRange const&, unsigned short)
_SwPamRanges_SAR::Replace(SwPamRange const&, unsigned short)
_SwPamRanges_SAR::Replace(SwPamRange const*, unsigned short, unsigned short)
_SwPamRanges_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(SwPamRange const&, void*), void*)
_SwRedlineTbl::Insert(SwRedline* const*, unsigned short)
_SwRedlineTbl::Insert(_SwRedlineTbl const*, unsigned short, unsigned short)
_SwRedlineTbl::Remove(SwRedline* const&, unsigned short)
_ZSortFlys::Insert(_ZSortFly const&, unsigned short&)
_ZSortFlys::Insert(_ZSortFly const*, unsigned short)
_ZSortFlys::Insert(_ZSortFlys const*, unsigned short, unsigned short)
_ZSortFlys::Remove(_ZSortFly const&, unsigned short)
_ZSortFlys_SAR::Replace(_ZSortFly const&, unsigned short)
_ZSortFlys_SAR::Replace(_ZSortFly const*, unsigned short, unsigned short)
_ZSortFlys_SAR::_ForEach(unsigned short, unsigned short, unsigned char (*)(_ZSortFly const&, void*), void*)
__builtin_delete
__builtin_new
__builtin_vec_delete
__builtin_vec_new
__lxstat64
__pure_virtual
accessibility::AccessibleEditableTextPara::GetParaInterface(int)
accessibility::AccessibleEditableTextPara::GetText(int)
accessibility::AccessibleEditableTextPara::HasState(short)
accessibility::AccessibleEditableTextPara::IsActive() const
accessibility::AccessibleEditableTextPara::IsVisible() const
accessibility::AccessibleIconChoiceCtrlEntry::NotifyAccessibleEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
accessibility::AccessibleImageBullet::GetIndexInParent() const
accessibility::AccessibleListBoxEntry::NotifyAccessibleEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
accessibility::AccessibleShapeTreeInfo::AccessibleShapeTreeInfo(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessibleComponent> const&, com::sun::star::uno::Reference<com::sun::star::document::XEventBroadcaster> const&)
accessibility::AccessibleShapeTreeInfo::GetDocumentWindow() const
accessibility::AccessibleStaticTextBase_Impl::UpdateChildren()
accessibility::AccessibleTabListBoxTable::ensureValidPosition(int, int) const
accessibility::AccessibleTextEventQueue::Append(SfxHint const&)
accessibility::AccessibleTextEventQueue::Append(SfxSimpleHint const&)
accessibility::AccessibleTextHelper::GetAdditionalChildStates() const
accessibility::AccessibleViewForwarder::AccessibleViewForwarder(SdrPaintView*, unsigned short)
accessibility::AccessibleViewForwarder::SetView(SdrPaintView*)
accessibility::ChildrenManagerImpl::GetChild(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
accessibility::ChildrenManagerImpl::GetChildIndex(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&) const
accessibility::DGColorNameLookUp::~DGColorNameLookUp()
accessibility::DescriptionGenerator::AddPropertyNames()
accessibility::DescriptionGenerator::AddUnknown(rtl::OUString const&, rtl::OUString const&)
accessibility::ShapeTypeHandler::GetServiceName(int) const
addRButtons(_STL::vector<OCX_Control*, _STL::allocator<OCX_Control*> >&, _STL::vector<OCX_Control*, _STL::allocator<OCX_Control*> >&, bool)
adjustOutlineLevel(SwDoc&)
alaw2ulaw(unsigned char)
apphelper::MediaDescriptorHelper::getAll()
avmedia::MediaControl::execute(avmedia::MediaItem const&)
avmedia::MediaControl::getState(avmedia::MediaItem&) const
avmedia::MediaControl::update()
avmedia::MediaWindow::disable()
avmedia::MediaWindow::enable()
avmedia::MediaWindow::getDuration() const
avmedia::MediaWindow::getMediaTime() const
avmedia::MediaWindow::getPointer() const
avmedia::MediaWindow::getPosSize() const
avmedia::MediaWindow::getRate() const
avmedia::MediaWindow::getStopTime() const
avmedia::MediaWindow::getZoom() const
avmedia::MediaWindow::isMute() const
avmedia::MediaWindow::isPlaybackLoop() const
avmedia::MediaWindow::isPlaying() const
avmedia::MediaWindow::setMediaTime(double)
avmedia::MediaWindow::setMute(bool)
avmedia::MediaWindow::setPlaybackLoop(bool)
avmedia::MediaWindow::setRate(double)
avmedia::MediaWindow::setStopTime(double)
avmedia::MediaWindow::setZoom(com::sun::star::media::ZoomLevel)
avmedia::MediaWindow::stop()
avmedia::priv::MediaWindowImpl::hasInternalMediaControl() const
avmedia::xine::Window::fireMouseMovedEvent(com::sun::star::awt::MouseEvent const&)
avmedia::xine::Window::fireMousePressedEvent(com::sun::star::awt::MouseEvent const&)
avmedia::xine::Window::fireMouseReleasedEvent(com::sun::star::awt::MouseEvent const&)
avmedia::xine::Window::fireSetFocusEvent(com::sun::star::awt::FocusEvent const&)
baseDecode(rtl::OUString const&, BaseType)
basegfx::B1DRange::B1DRange(basegfx::B1IRange const&)
basegfx::B2DCubicBezier::B2DCubicBezier(basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::B2DHomMatrix::isNormalized() const
basegfx::B2DHomMatrix::makeUnique()
basegfx::B2DHomMatrix::normalize()
basegfx::B2DHomMatrix::trace() const
basegfx::B2DHomMatrix::transpose()
basegfx::B2DHomPoint::getB2DPoint() const
basegfx::B2DHomPoint::setX(double)
basegfx::B2DHomPoint::setY(double)
basegfx::B2DMultiRange::B2DMultiRange(basegfx::B2DRange const&)
basegfx::B2DMultiRange::getBounds() const
basegfx::B2DMultiRange::isInside(basegfx::B2DRange const&) const
basegfx::B2DMultiRange::isInside(basegfx::B2DTuple const&) const
basegfx::B2DPolyPolygonRasterConverter::rasterConvert(basegfx::FillRule)
basegfx::B2DQuadraticBezier::B2DQuadraticBezier()
basegfx::B2DQuadraticBezier::B2DQuadraticBezier(basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::B2DQuadraticBezier::B2DQuadraticBezier(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::B2DQuadraticBezier::isBezier() const
basegfx::B2DQuadraticBezier::~B2DQuadraticBezier()
basegfx::B2DTuple::correctValues(double)
basegfx::B2DTuple::equalZero(double const&) const
basegfx::B2DVector::isNormalized() const
basegfx::B2I64Tuple::getEmptyTuple()
basegfx::B2IVector::angle(basegfx::B2IVector const&) const
basegfx::B2IVector::cross(basegfx::B2IVector const&) const
basegfx::B2IVector::getEmptyVector()
basegfx::B2IVector::getLength() const
basegfx::B3DHomMatrix::isInvertible() const
basegfx::B3DHomMatrix::isNormalized() const
basegfx::B3DHomMatrix::makeUnique()
basegfx::B3DHomMatrix::normalize()
basegfx::B3DHomMatrix::orientation(basegfx::B3DPoint, basegfx::B3DVector, basegfx::B3DVector)
basegfx::B3DHomMatrix::shearXZ(double, double)
basegfx::B3DHomMatrix::shearYZ(double, double)
basegfx::B3DHomMatrix::trace() const
basegfx::B3DHomPoint::implHomogenize()
basegfx::B3DPolygon::B3DPolygon(basegfx::B3DPolygon const&, unsigned int, unsigned int)
basegfx::B3DPolygon::append(basegfx::B3DPolygon const&, unsigned int, unsigned int)
basegfx::B3DPolygon::insert(unsigned int, basegfx::B3DPoint const&, unsigned int)
basegfx::B3DPolygon::insert(unsigned int, basegfx::B3DPolygon const&, unsigned int, unsigned int)
basegfx::B3DRange::B3DRange(basegfx::B3IRange const&)
basegfx::B3DTuple::B3DTuple(basegfx::B3ITuple const&)
basegfx::B3DVector::getProjectionOnPlane(basegfx::B3DVector const&) const
basegfx::B3I64Tuple::getEmptyTuple()
basegfx::B3ITuple::getEmptyTuple()
basegfx::absolute(basegfx::B2DHomPoint const&)
basegfx::absolute(basegfx::B2ITuple const&)
basegfx::average(basegfx::B2DHomPoint&, basegfx::B2DHomPoint&)
basegfx::average(basegfx::B2DHomPoint&, basegfx::B2DHomPoint&, basegfx::B2DHomPoint&)
basegfx::average(basegfx::B2ITuple const&, basegfx::B2ITuple const&)
basegfx::average(basegfx::B2ITuple const&, basegfx::B2ITuple const&, basegfx::B2ITuple const&)
basegfx::computeSetDifference(_STL::vector<basegfx::B2IBox, _STL::allocator<basegfx::B2IBox> >&, basegfx::B2IBox const&, basegfx::B2IBox const&)
basegfx::fround(basegfx::B1DRange const&)
basegfx::fround(basegfx::B2DRange const&)
basegfx::fround(basegfx::B3DRange const&)
basegfx::fround(basegfx::B3DTuple const&)
basegfx::getContinuity(basegfx::B2IVector const&, basegfx::B2IVector const&)
basegfx::getOrientation(basegfx::B2IVector const&, basegfx::B2IVector const&)
basegfx::getPerpendicular(basegfx::B2IVector const&)
basegfx::interpolate(basegfx::B2DHomPoint&, basegfx::B2DHomPoint&, double)
basegfx::interpolate(basegfx::B2ITuple const&, basegfx::B2ITuple const&, double)
basegfx::maximum(basegfx::B2DHomPoint const&, basegfx::B2DHomPoint const&)
basegfx::maximum(basegfx::B2ITuple const&, basegfx::B2ITuple const&)
basegfx::minimum(basegfx::B2DHomPoint const&, basegfx::B2DHomPoint const&)
basegfx::minimum(basegfx::B2ITuple const&, basegfx::B2ITuple const&)
basegfx::tools::adaptiveSubdivideByDistance(basegfx::B2DPolyPolygon const&, double)
basegfx::tools::addPointsAtCutsAndTouches(basegfx::B2DPolyPolygon const&, basegfx::B2DPolyPolygon const&)
basegfx::tools::applyLineDashing(basegfx::B2DPolyPolygon const&, _STL::vector<double, _STL::allocator<double> > const&, double)
basegfx::tools::clipPolyPolygonOnEdge(basegfx::B2DPolyPolygon const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, bool, bool)
basegfx::tools::clipPolyPolygonOnRange(basegfx::B2DPolyPolygon const&, basegfx::B2DRange const&, bool, bool)
basegfx::tools::clipPolygonOnEdge(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, bool, bool)
basegfx::tools::clipPolygonOnPolyPolygon(basegfx::B2DPolygon const&, basegfx::B2DPolyPolygon const&, bool, bool)
basegfx::tools::createPolygonFromRect(basegfx::B2DRange const&, double)
basegfx::tools::findCut(basegfx::B2DPolygon const&, unsigned int, basegfx::B2DPolygon const&, unsigned int, unsigned short, double*, double*)
basegfx::tools::findCut(basegfx::B2DPolygon const&, unsigned int, unsigned int, unsigned short, double*, double*)
basegfx::tools::getArea(basegfx::B2DPolygon const&)
basegfx::tools::getIndexOfPredecessor(unsigned int, basegfx::B3DPolygon const&)
basegfx::tools::getPositionRelative(basegfx::B3DPolygon const&, double, double)
basegfx::tools::getSnippetRelative(basegfx::B2DPolygon const&, double, double, double)
basegfx::tools::isPolyPolygonEqualRectangle(basegfx::B2DPolyPolygon const&, basegfx::B2DRange const&)
basegfx::tools::isRectangle(basegfx::B2DPolyPolygon const&)
basegfx::tools::liangBarskyClip2D(basegfx::B2DPoint&, basegfx::B2DPoint&, basegfx::B2DRange const&)
basegfx::tools::removeIntersections(basegfx::B2DPolyPolygon const&)
basegfx::tools::removeIntersections(basegfx::B2DPolygon const&, bool)
basegfx::tools::rotateAroundPoint(basegfx::B2DPolyPolygon const&, basegfx::B2DPoint const&, double)
basegfx::tools::setContinuity(basegfx::B2DPolyPolygon const&, basegfx::B2VectorContinuity)
basegfx::unotools::awtPointFromB2IPoint(basegfx::B2IPoint const&)
basegfx::unotools::awtRectangleFromB2IRectangle(basegfx::B2IRange const&)
basegfx::unotools::awtSizeFromB2ISize(basegfx::B2IVector const&)
basegfx::unotools::b2DSizeFromRealSize2D(com::sun::star::geometry::RealSize2D const&)
basegfx::unotools::b2IPointFromAwtPoint(com::sun::star::awt::Point const&)
basegfx::unotools::b2IPointFromIntegerPoint2D(com::sun::star::geometry::IntegerPoint2D const&)
basegfx::unotools::b2ISizeFromAwtSize(com::sun::star::awt::Size const&)
basegfx::unotools::integerPoint2DFromB2IPoint(basegfx::B2IPoint const&)
basegfx::unotools::integerRectangle2DFromB2IRectangle(basegfx::B2IRange const&)
basicide_handle_basic_error
basicide_macro_organizer
berkeleydbproxy::Db::set_alloc(void* (*)(unsigned long), void* (*)(void*, unsigned long), void (*)(void*))
berkeleydbproxy::DbEnv::DbEnv(unsigned int)
berkeleydbproxy::DbEnv::close(unsigned int)
berkeleydbproxy::DbEnv::open(char const*, unsigned int, int)
berkeleydbproxy::DbEnv::set_alloc(void* (*)(unsigned long), void* (*)(void*, unsigned long), void (*)(void*))
berkeleydbproxy::DbEnv::~DbEnv()
berkeleydbproxy::Dbc::del(unsigned int)
bib::BibGridwin::changeGridModel(com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&)
bib::OComponentAdapterBase::disposing()
bib::OComponentAdapterBase::lock()
bib::OComponentAdapterBase::unlock()
boost::shared_ptr<sd::CustomAnimationPreset>* _STL::__uninitialized_copy<boost::shared_ptr<sd::CustomAnimationPreset>*, boost::shared_ptr<sd::CustomAnimationPreset>*>(boost::shared_ptr<sd::CustomAnimationPreset>*, boost::shared_ptr<sd::CustomAnimationPreset>*, boost::shared_ptr<sd::CustomAnimationPreset>*, _STL::__false_type const&)
bridges::cpp_uno::shared::isSimpleType(_typelib_TypeDescriptionReference const*)
bridges_urp::PropertyObject::localGetPropertiesFromRemote(bridges_urp::Properties*)
bridges_urp::test_cache()
bridges_urp::urp_BridgeImpl::dumpErrors(_IO_FILE*)
cairoHelperGetDefaultScreen(void*)
cairoHelperGetDepth(void const*)
cairoHelperGetGlitzDrawable(SystemEnvData const*, int, int)
cairoHelperGetGlitzSurface(SystemEnvData const*, void*, int, int, int, int)
cairoHelperGetVisual(void const*)
cairocanvas::CanvasHelper::flush() const
cairocanvas::SpriteCanvas::getSurface(cairo::_cairo_content)
cairocanvas::TextLayout::draw(cairo::_cairo*)
calculateTopLeftMargin(com::sun::star::uno::Reference<org::openoffice::vba::XHelperInterface>)
canvas::ParametricPolyPolygon::ParametricPolyPolygon(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, basegfx::B2DPolygon const&, canvas::ParametricPolyPolygon::GradientType, com::sun::star::uno::Sequence<double> const&, com::sun::star::uno::Sequence<double> const&)
canvas::tools::ElapsedTime::getTimeBase() const
canvas::tools::PriorityBooster::PriorityBooster(int)
canvas::tools::PriorityBooster::~PriorityBooster()
canvas::tools::appendToViewState(com::sun::star::rendering::ViewState&, basegfx::B2DHomMatrix const&)
canvas::tools::calcRectToRectTransform(basegfx::B2DHomMatrix&, basegfx::B2DRange const&, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
canvas::tools::clipBlit(basegfx::B2IRange&, basegfx::B2IPoint&, basegfx::B2IRange const&, basegfx::B2IRange const&)
canvas::tools::getDeviceColor(double&, double&, double&, double&, com::sun::star::rendering::RenderState const&)
canvas::tools::mergeViewAndRenderState(com::sun::star::rendering::ViewState&, com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&, com::sun::star::uno::Reference<com::sun::star::rendering::XCanvas> const&)
canvas::tools::prependToViewState(com::sun::star::rendering::ViewState&, basegfx::B2DHomMatrix const&)
canvas::tools::verifyInput(com::sun::star::geometry::RealSize2D const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::rendering::FloatingPointBitmapLayout const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
certificateValidityToOUString(int)
chart::(anonymous namespace)::Point3D::Point3D(double, double, double)
chart::(anonymous namespace)::lcl_ReadNumberFormatFromItemSet(SfxItemSet const&, unsigned short, unsigned short, unsigned long&, bool&)
chart::(anonymous namespace)::lcl_getIdentifierForTitle(chart::TitleHelper::eTitleType)
chart::(anonymous namespace)::lcl_getSortedPolyPolygonShape3D(com::sun::star::drawing::PolyPolygonShape3D const&, com::sun::star::drawing::PolyPolygonShape3D&)
chart::(anonymous namespace)::makeVector(com::sun::star::drawing::PolyPolygonShape3D const&, int)
chart::B3DVectorToPosition3D(basegfx::B3DVector const&)
chart::CachedDataSequence::CachedDataSequence(_STL::vector<com::sun::star::uno::Any, _STL::allocator<com::sun::star::uno::Any> > const&)
chart::CachedDataSequence::CachedDataSequence(_STL::vector<double, _STL::allocator<double> > const&)
chart::CachedDataSequence::CachedDataSequence(_STL::vector<rtl::OUString, _STL::allocator<rtl::OUString> > const&)
chart::CachedDataSequence::PreferMixedData()
chart::CachedDataSequence::PreferNumericalData()
chart::CachedDataSequence::PreferTextualData()
chart::CachedDataSequence::fireModifyEvent()
chart::CategoryPositionHelper::CategoryPositionHelper()
chart::ChartController::executeDispatch_ObjectToDefault()
chart::ChartModelHelper::getCoordinateSystemOfChartType(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
chart::ChartModelHelper::setPageSize(com::sun::star::awt::Size const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
chart::ConfigurationAccess::~ConfigurationAccess()
chart::ContextHelper::createContext(_STL::map<rtl::OUString, com::sun::star::uno::Any, _STL::less<rtl::OUString>, _STL::allocator<_STL::pair<rtl::OUString const, com::sun::star::uno::Any> > > const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
chart::DataBrowser::GetCursorMovedHdl() const
chart::DataBrowser::IsDirty() const
chart::DataBrowserModel::applyToModel()
chart::DataBrowserModel::getDataOfColumn(int) const
chart::DataBrowserModel::restoreModel(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&, com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&)
chart::DataBrowserModel::setModel(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&)
chart::DataLabelsTabPage::SetNumberFormatter(SvNumberFormatter*)
chart::DataPoint::DataPoint()
chart::DataPointStyle::DataPointStyle(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, osl::Mutex&)
chart::DataPointStyle::GetMutex()
chart::DataSeriesHelper::SetRole(com::sun::star::uno::Reference<com::sun::star::chart2::data::XLabeledDataSequence> const&, rtl::OUString const&)
chart::DataSeriesStyle::DataSeriesStyle(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, osl::Mutex&)
chart::DataSeriesStyle::GetMutex()
chart::DataSource::DataSource(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> > const&)
chart::DataSource::DataSource(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> > const&, com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> > const&)
chart::DataSourceHelper::migrateData(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&, com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataProvider> const&)
chart::DataSourceTabPage::disableAll()
chart::DiagramHelper::getIndexOfSeriesWithinChartType(com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> const&, com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
chart::Dim3DLookResourceGroup::getPosition()
chart::Direction3DToSequence(com::sun::star::drawing::Direction3D const&)
chart::FormattedString::FormattedString(rtl::OUString const&)
chart::GeometryResourceGroup::getPosition()
chart::GetChartItemPool()
chart::GridProperties::GetMutex()
chart::HomogenMatrix3ToB2DHomMatrix(com::sun::star::drawing::HomogenMatrix3 const&)
chart::LabelPositionHelper::transformScaledLogicToScreenPosition(com::sun::star::drawing::Position3D const&) const
chart::LabeledDataSequence::fireModifyEvent()
chart::LocationTabPage::LocationTabPage(svt::OWizardMachine*, com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
chart::MakeLine3D(com::sun::star::drawing::Position3D const&, com::sun::star::drawing::Position3D const&)
chart::ModifyListenerHelper::ModifyEventForwarder::FireEvent(com::sun::star::uno::Reference<com::sun::star::uno::XWeak> const&)
chart::ModifyListenerHelper::ModifyListenerOnDemmandRefresh::ModifyListenerOnDemmandRefresh(osl::Mutex&)
chart::ModifyListenerHelper::ModifyListenerOnDemmandRefresh::listenAtDocument(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&)
chart::ModifyListenerHelper::ModifyListenerOnDemmandRefresh::needsUpdate() const
chart::ModifyListenerHelper::ModifyListenerOnDemmandRefresh::update()
chart::ObjectIdentifier::ObjectIdentifier()
chart::ObjectPropertiesDialogParameter::HasLineProperties() const
chart::PointSequenceToPoly(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::awt::Point> > const&)
chart::PolyToToolsPoly(com::sun::star::drawing::PolyPolygonShape3D const&)
chart::RangeChooserTabPage::changeModelAccordingToControls()
chart::RangeSelectionHelper::getCellRangeContent(rtl::OUString const&)
chart::ReferenceSizeProvider::getAutoResizeState() const
chart::RegressionCurveHelper::createMeanValueLineCalculator()
chart::SequenceToB3DPoint(com::sun::star::uno::Sequence<double> const&)
chart::SequenceToDirection3D(com::sun::star::uno::Sequence<double> const&)
chart::SeriesPlotterContainer::shouldKeep2DAspectRatio()
chart::ShapeFactory::createSymbol3D(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::drawing::Position3D const&, com::sun::star::drawing::Direction3D const&, int, int, int)
chart::SortByXValuesResourceGroup::getPosition()
chart::Stripe::GetDirectionTo4() const
chart::StyleFamilies::AddStyleFamily(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
chart::StyleFamilies::StyleFamilies()
chart::StyleFamily::AddStyle(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&)
chart::StyleFamily::StyleFamily()
chart::TickmarkHelper::getScaledWidth() const
chart::TickmarkHelper::isPostEquidistant(int) const
chart::ToolsPolyToPoly(Polygon const&, double)
chart::VCoordinateSystem::getMaximumIncrementIndexByDimension(int) const
chart::VLegendSymbolFactory::createJapaneseCandleStickSymbol(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes>, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
chart::VLegendSymbolFactory::createStockLineSymbol(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes>, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, chart::VLegendSymbolFactory::tStockLineType)
chart::VPolarGrid::create2DAngleGrid(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, _STL::vector<_STL::vector<chart::TickInfo, _STL::allocator<chart::TickInfo> >, _STL::allocator<_STL::vector<chart::TickInfo, _STL::allocator<chart::TickInfo> > > >&, _STL::vector<_STL::vector<chart::TickInfo, _STL::allocator<chart::TickInfo> >, _STL::allocator<_STL::vector<chart::TickInfo, _STL::allocator<chart::TickInfo> > > >&, _STL::vector<chart::VLineProperties, _STL::allocator<chart::VLineProperties> > const&)
chart::WeakModifyListenerAdapter::WeakModifyListenerAdapter(com::sun::star::uno::Reference<com::sun::star::util::XModifyListener> const&)
chart::WeakSelectionChangeListenerAdapter::WeakSelectionChangeListenerAdapter(com::sun::star::uno::WeakReference<com::sun::star::view::XSelectionChangeListener> const&)
chart::WritingMode2ToWritingMode1(short)
chart::createPolyPolygon_PieSegment(double, double, double)
chart::debug::ChartDebugTraceDiagram(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&, int)
chart::debug::ChartDebugTraceDocument(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&, int)
chart::impl::ChartConfigItem::removePropertyNotification(rtl::OUString const&)
chart::impl::ImplChartModel::GetData()
chart::impl::ImplChartModel::RemoveDiagram(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
chart::impl::ImplChartModel::SetChartTypeTemplate(com::sun::star::uno::Reference<com::sun::star::chart2::XChartTypeTemplate> const&)
chart::impl::SeriesHeader::GetEditChangedHdl() const
chart::impl::SeriesHeader::GetSeriesNameEditField() const
chart::impl::SeriesHeader::Hide()
chart::impl::UndoStack::getCurrentLimitation() const
chart::setShapeName(com::sun::star::uno::Reference<com::sun::star::drawing::XShape>&, rtl::OUString const&)
chart::wrapper::Chart2ModelContact::GetDiagramPosition() const
chart::wrapper::WrappedNamedProperty::addWrappedProperties(_STL::vector<chart::WrappedProperty*, _STL::allocator<chart::WrappedProperty*> >&, boost::shared_ptr<chart::wrapper::Chart2ModelContact>)
checkFileContent(rtl::OString const&, rtl::OString const&)
chelp::Databases::errorDocument(rtl::OUString const&, char**, int*)
chelp::Databases::getInstallPathAsURLWithOutEncoding()
chelp::Databases::getURLMode()
chelp::Databases::variant(rtl::OUString const&)
chelp::URLParameter::URLParameter(rtl::OUString const&, rtl::OUString const&, chelp::Databases*)
cli_uno_environment_createMonoProxyAndRegister
cli_uno_environment_getObjectIdentifier
cli_uno_environment_getRegisteredInterface
cli_uno_environment_registerInterface
cli_uno_interface_acquire
cli_uno_interface_dispatch
cli_uno_interface_release
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::AccessibleTableModelChange const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::TextSegment const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessible const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleAction const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleComponent const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleContext const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleEditableText const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleEventBroadcaster const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleEventListener const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleExtendedComponent const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleHyperlink const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleHypertext const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleImage const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleKeyBinding const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleRelationSet const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleSelection const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleStateSet const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleTable const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleText const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleTextAttributes const*)
com::sun::star::accessibility::cppu_detail_getUnoType(com::sun::star::accessibility::XAccessibleValue const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::Event const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::TargetProperties const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::TimeFilterPair const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::Timing const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::ValuePair const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XAnimate const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XAnimateColor const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XAnimateMotion const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XAnimateSet const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XAnimateTransform const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XAnimationNode const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XAnimationNodeSupplier const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XAudio const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XCommand const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XIterateContainer const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XTargetPropertiesCreator const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XTimeContainer const*)
com::sun::star::animations::cppu_detail_getUnoType(com::sun::star::animations::XTransitionFilter const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::FontDescriptor const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::Gradient const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::KeyEvent const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::KeyStroke const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::MouseEvent const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::Point const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::Rectangle const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::SystemDependentXWindow const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XActionListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XAdjustmentListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XBitmap const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XButton const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XCheckBox const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XComboBox const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XContainerWindowEventHandler const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XContainerWindowProvider const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XControlContainer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XControlModel const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XCurrencyField const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDataTransferProviderAccess const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDateField const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDevice const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDialog const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDialogEventHandler const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDialogProvider2 const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDisplayBitmap const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDisplayConnection const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDockableWindow const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XDockableWindowListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XEventHandler const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XExtendedToolkit const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XFixedText const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XFocusListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XFont const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XFont2 const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XGraphics const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XImageConsumer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XImageProducer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XInfoPrinter const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XItemEventBroadcaster const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XItemListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XKeyHandler const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XKeyListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XLayoutConstrains const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XListBox const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMenu const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMenuBar const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMenuExtended const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMenuListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMessageBox const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMessageBoxFactory const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMetricField const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMouseClickHandler const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMouseListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XMouseMotionListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XNumericField const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XPaintListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XPatternField const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XPointer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XPopupMenu const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XPrinter const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XPrinterPropertySet const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XPrinterServer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XProgressBar const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XProgressMonitor const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XRadioButton const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XRegion const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XReschedule const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XScrollBar const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XSimpleAnimation const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XSimpleTabController const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XSpinField const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XSpinListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XSpinValue const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XSystemChildFactory const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XSystemDependentMenuPeer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XSystemDependentWindowPeer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTabController const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTabControllerModel const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTabListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTextArea const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTextComponent const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTextEditField const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTextLayoutConstrains const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTextListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XThrobber const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTimeField const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XToggleButton const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XToolkit const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTopWindow const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XTopWindowListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XUnoControlContainer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XUserInputInterception const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XVclContainer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XVclContainerListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XVclContainerPeer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XVclWindowPeer const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XView const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XWindow const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XWindow2 const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XWindowListener const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XWindowListener2 const*)
com::sun::star::awt::cppu_detail_getUnoType(com::sun::star::awt::XWindowPeer const*)
com::sun::star::awt::tree::cppu_detail_getUnoType(com::sun::star::awt::tree::XMutableTreeDataModel const*)
com::sun::star::awt::tree::cppu_detail_getUnoType(com::sun::star::awt::tree::XMutableTreeNode const*)
com::sun::star::awt::tree::cppu_detail_getUnoType(com::sun::star::awt::tree::XTreeControl const*)
com::sun::star::awt::tree::cppu_detail_getUnoType(com::sun::star::awt::tree::XTreeDataModel const*)
com::sun::star::awt::tree::cppu_detail_getUnoType(com::sun::star::awt::tree::XTreeDataModelListener const*)
com::sun::star::awt::tree::cppu_detail_getUnoType(com::sun::star::awt::tree::XTreeEditListener const*)
com::sun::star::awt::tree::cppu_detail_getUnoType(com::sun::star::awt::tree::XTreeExpansionListener const*)
com::sun::star::awt::tree::cppu_detail_getUnoType(com::sun::star::awt::tree::XTreeNode const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::GetDirectPropertyTolerantResult const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::GetPropertyTolerantResult const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::IllegalTypeException const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::PropertyExistException const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::PropertyState const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::SetPropertyTolerantFailed const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::StringPair const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XExactName const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XHierarchicalPropertySet const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XIntrospection const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XIntrospectionAccess const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XMaterialHolder const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XMultiHierarchicalPropertySet const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XMultiPropertyStates const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XPropertiesChangeNotifier const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XProperty const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XPropertyContainer const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XPropertySetInfoChangeListener const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XPropertySetInfoChangeNotifier const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XPropertyWithState const*)
com::sun::star::beans::cppu_detail_getUnoType(com::sun::star::beans::XTolerantMultiPropertySet const*)
com::sun::star::bridge::cppu_detail_getUnoType(com::sun::star::bridge::BridgeExistsException const*)
com::sun::star::bridge::oleautomation::cppu_detail_getUnoType(com::sun::star::bridge::oleautomation::Currency const*)
com::sun::star::bridge::oleautomation::cppu_detail_getUnoType(com::sun::star::bridge::oleautomation::Date const*)
com::sun::star::bridge::oleautomation::cppu_detail_getUnoType(com::sun::star::bridge::oleautomation::Decimal const*)
com::sun::star::bridge::oleautomation::cppu_detail_getUnoType(com::sun::star::bridge::oleautomation::NamedArgument const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::Break const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::CurveStyle const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::DataPointLabel const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::ErrorBarStyle const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::ExplicitIncrementData const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::ExplicitScaleData const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::ExplicitSubIncrement const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::FillBitmap const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::LegendExpansion const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::LegendPosition const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::PieChartOffsetMode const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::RelativePosition const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::RelativeSize const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::StackingDirection const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::SubIncrement const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::Symbol const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::ViewLegendEntry const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XAxis const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XChartDocument const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XChartType const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XChartTypeContainer const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XChartTypeManager const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XChartTypeTemplate const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XColorScheme const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XCoordinateSystem const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XCoordinateSystemContainer const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XDataInterpreter const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XDataSeries const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XDataSeriesContainer const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XDiagram const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XDiagramProvider const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XFormattedString const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XInternalDataProvider const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XLegend const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XLegendEntry const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XRegressionCurve const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XRegressionCurveCalculator const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XRegressionCurveContainer const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XScaling const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XTitle const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XTitled const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XTransformation const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XUndoHelper const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XUndoManager const*)
com::sun::star::chart2::cppu_detail_getUnoType(com::sun::star::chart2::XUndoSupplier const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::HighlightedRange const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XDataProvider const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XDataReceiver const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XDataSequence const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XDataSink const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XDataSource const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XLabeledDataSequence const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XNumericalDataSequence const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XRangeHighlighter const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XRangeXMLConversion const*)
com::sun::star::chart2::data::cppu_detail_getUnoType(com::sun::star::chart2::data::XTextualDataSequence const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::ChartAxisArrangeOrderType const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::ChartDataRowSource const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::ChartErrorCategory const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::ChartErrorIndicatorType const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::ChartLegendPosition const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::ChartRegressionCurveType const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::ChartSeriesAddress const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::X3DDisplay const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XAxisXSupplier const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XAxisYSupplier const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XAxisZSupplier const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XChartData const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XChartDataArray const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XChartDataChangeEventListener const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XChartDocument const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XDiagram const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XStatisticDisplay const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XTwoAxisXSupplier const*)
com::sun::star::chart::cppu_detail_getUnoType(com::sun::star::chart::XTwoAxisYSupplier const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::AuthenticationFailedException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::BackendAccessException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::BackendSetupException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::CannotConnectException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::ConnectionLostException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::InsufficientAccessRightsException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::InvalidAuthenticationMechanismException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::MalformedDataException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::MergeRecoveryRequest const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::PropertyInfo const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::StratumCreationException const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XBackend const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XBackendChangesListener const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XBackendChangesNotifier const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XBackendEntities const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XCompositeLayer const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XLayer const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XLayerContentDescriber const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XLayerHandler const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XLayerImporter const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XMultiLayerStratum const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XSchema const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XSchemaHandler const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XSchemaSupplier const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XSingleLayerStratum const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XUpdatableLayer const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XUpdateHandler const*)
com::sun::star::configuration::backend::cppu_detail_getUnoType(com::sun::star::configuration::backend::XVersionedSchemaSupplier const*)
com::sun::star::configuration::cppu_detail_getUnoType(com::sun::star::configuration::CannotLoadConfigurationException const*)
com::sun::star::configuration::cppu_detail_getUnoType(com::sun::star::configuration::InstallationIncompleteException const*)
com::sun::star::configuration::cppu_detail_getUnoType(com::sun::star::configuration::InvalidBootstrapFileException const*)
com::sun::star::configuration::cppu_detail_getUnoType(com::sun::star::configuration::MissingBootstrapFileException const*)
com::sun::star::configuration::cppu_detail_getUnoType(com::sun::star::configuration::XTemplateContainer const*)
com::sun::star::configuration::cppu_detail_getUnoType(com::sun::star::configuration::XTemplateInstance const*)
com::sun::star::connection::cppu_detail_getUnoType(com::sun::star::connection::AlreadyAcceptingException const*)
com::sun::star::connection::cppu_detail_getUnoType(com::sun::star::connection::ConnectionSetupException const*)
com::sun::star::connection::cppu_detail_getUnoType(com::sun::star::connection::NoConnectException const*)
com::sun::star::connection::cppu_detail_getUnoType(com::sun::star::connection::XConnectionBroadcaster const*)
com::sun::star::connection::cppu_detail_getUnoType(com::sun::star::connection::XConnector const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::ElementExistException const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::NoSuchElementException const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XChild const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XContainer const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XContainerApproveBroadcaster const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XContainerApproveListener const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XContainerListener const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XContainerQuery const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XHierarchicalName const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XHierarchicalNameContainer const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XIdentifierAccess const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XIdentifierContainer const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XIdentifierReplace const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XIndexContainer const*)
com::sun::star::container::cppu_detail_getUnoType(com::sun::star::container::XStringKeyMap const*)
com::sun::star::datatransfer::clipboard::cppu_detail_getUnoType(com::sun::star::datatransfer::clipboard::XClipboard const*)
com::sun::star::datatransfer::clipboard::cppu_detail_getUnoType(com::sun::star::datatransfer::clipboard::XClipboardEx const*)
com::sun::star::datatransfer::clipboard::cppu_detail_getUnoType(com::sun::star::datatransfer::clipboard::XClipboardListener const*)
com::sun::star::datatransfer::clipboard::cppu_detail_getUnoType(com::sun::star::datatransfer::clipboard::XClipboardManager const*)
com::sun::star::datatransfer::clipboard::cppu_detail_getUnoType(com::sun::star::datatransfer::clipboard::XClipboardNotifier const*)
com::sun::star::datatransfer::clipboard::cppu_detail_getUnoType(com::sun::star::datatransfer::clipboard::XClipboardOwner const*)
com::sun::star::datatransfer::clipboard::cppu_detail_getUnoType(com::sun::star::datatransfer::clipboard::XFlushableClipboard const*)
com::sun::star::datatransfer::cppu_detail_getUnoType(com::sun::star::datatransfer::DataFlavor const*)
com::sun::star::datatransfer::cppu_detail_getUnoType(com::sun::star::datatransfer::XMimeContentType const*)
com::sun::star::datatransfer::cppu_detail_getUnoType(com::sun::star::datatransfer::XMimeContentTypeFactory const*)
com::sun::star::datatransfer::cppu_detail_getUnoType(com::sun::star::datatransfer::XTransferable const*)
com::sun::star::datatransfer::cppu_detail_getUnoType(com::sun::star::datatransfer::XTransferableSupplier const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDragGestureListener const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDragGestureRecognizer const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDragSource const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDragSourceContext const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDragSourceListener const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDropTarget const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDropTargetDragContext const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDropTargetDropContext const*)
com::sun::star::datatransfer::dnd::cppu_detail_getUnoType(com::sun::star::datatransfer::dnd::XDropTargetListener const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::DependencyException const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::DeploymentException const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::InstallException const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::LicenseException const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::LicenseIndividualAgreementException const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::UpdateInformationEntry const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::VersionException const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::XPackage const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::XPackageInformationProvider const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::XPackageManager const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::XPackageManagerFactory const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::XPackageRegistry const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::XPackageTypeInfo const*)
com::sun::star::deployment::cppu_detail_getUnoType(com::sun::star::deployment::XUpdateInformationProvider const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::AmbigousFilterRequest const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::BrokenPackageRequest const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::FilterOptionsRequest const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::NoSuchFilterRequest const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XActionLockable const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XBinaryStreamResolver const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XDocumentInfo const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XDocumentInfoSupplier const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XDocumentInsertable const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XDocumentRevisionListPersistence const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XDocumentSubStorageSupplier const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XEmbeddedObjectResolver const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XEmbeddedObjectSupplier const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XEmbeddedObjectSupplier2 const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XEventBroadcaster const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XEventListener const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XEventsSupplier const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XExtendedFilterDetection const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XFilter const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XGraphicObjectResolver const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XImporter const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XInteractionFilterOptions const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XInteractionFilterSelect const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XLinkTargetSupplier const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XMimeTypeInfo const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XRedlinesSupplier const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XStandaloneDocumentInfo const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XStorageBasedDocument const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XStorageChangeListener const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XTypeDetection const*)
com::sun::star::document::cppu_detail_getUnoType(com::sun::star::document::XViewDataSupplier const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::BitmapMode const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::CameraGeometry const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::ColorMode const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::ConnectorType const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::DashStyle const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::Direction3D const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::EnhancedCustomShapeAdjustmentValue const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::EnhancedCustomShapeParameter const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::EnhancedCustomShapeParameterPair const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::EnhancedCustomShapeSegment const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::EnhancedCustomShapeTextFrame const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::EnhancedCustomShapeTextPathMode const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::GluePoint2 const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::GraphicFilterRequest const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::Hatch const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::HatchStyle const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::HomogenMatrix const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::HomogenMatrix3 const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::LineDash const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::LineJoint const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::LineStyle const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::MeasureKind const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::MeasureTextHorzPos const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::MeasureTextVertPos const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::NormalsKind const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::PolyPolygonBezierCoords const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::PolyPolygonShape3D const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::PolygonFlags const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::PolygonKind const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::Position3D const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::ProjectionMode const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::RectanglePoint const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::ShadeMode const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextAdjust const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextAnimationDirection const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextAnimationKind const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextFitToSizeType const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextHorizontalAdjust const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextVerticalAdjust const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextureKind const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextureMode const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::TextureProjectionMode const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XConnectorShape const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XCustomShapeEngine const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XCustomShapeHandle const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XDrawPageDuplicator const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XDrawPageSupplier const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XDrawPages const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XDrawView const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XGluePointsSupplier const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XLayer const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XLayerManager const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XLayerSupplier const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XShapeBinder const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XShapeCombiner const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XShapeDescriptor const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XShapeGroup const*)
com::sun::star::drawing::cppu_detail_getUnoType(com::sun::star::drawing::XShapeGrouper const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::TabBarButton const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XCommandController const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XConfiguration const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XConfigurationChangeListener const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XConfigurationChangeRequest const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XConfigurationController const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XControllerManager const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XModuleController const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XPane const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XPaneController const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XPaneFactory const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XRelocatableResource const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XResource const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XResourceController const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XResourceId const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XTabBar const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XToolBar const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XToolBarController const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XToolBarFactory const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XView const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XViewController const*)
com::sun::star::drawing::framework::cppu_detail_getUnoType(com::sun::star::drawing::framework::XViewFactory const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::UseBackupException const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XActionsApproval const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XClassifiedObject const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XCommonEmbedPersist const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XComponentSupplier const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XEmbedObjectClipboardCreator const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XEmbedObjectCreator const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XEmbedObjectFactory const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XEmbedPersist const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XEmbeddedClient const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XEmbeddedObject const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XEncryptionProtectedSource const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XExtendedStorageStream const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XHatchWindow const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XHatchWindowController const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XHatchWindowFactory const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XHierarchicalStorageAccess const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XInplaceClient const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XInplaceObject const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XInsertObjectDialog const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XLinkCreator const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XLinkFactory const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XLinkageSupport const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XOptimizedStorage const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XPackageStructureCreator const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XRelationshipAccess const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XStateChangeBroadcaster const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XStateChangeListener const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XStorage const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XStorageRawAccess const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XTransactedObject const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XTransactionBroadcaster const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XTransactionListener const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XVisualObject const*)
com::sun::star::embed::cppu_detail_getUnoType(com::sun::star::embed::XWindowSupplier const*)
com::sun::star::form::binding::cppu_detail_getUnoType(com::sun::star::form::binding::XBindableValue const*)
com::sun::star::form::binding::cppu_detail_getUnoType(com::sun::star::form::binding::XListEntryListener const*)
com::sun::star::form::binding::cppu_detail_getUnoType(com::sun::star::form::binding::XListEntrySink const*)
com::sun::star::form::binding::cppu_detail_getUnoType(com::sun::star::form::binding::XListEntrySource const*)
com::sun::star::form::binding::cppu_detail_getUnoType(com::sun::star::form::binding::XValueBinding const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::FormButtonType const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::FormSubmitEncoding const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::FormSubmitMethod const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::ListSourceType const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::NavigationBarMode const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::TabulatorCycle const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XApproveActionBroadcaster const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XBoundComponent const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XBoundControl const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XChangeBroadcaster const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XChangeListener const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XConfirmDeleteBroadcaster const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XConfirmDeleteListener const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XDatabaseParameterBroadcaster const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XDatabaseParameterBroadcaster2 const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XDatabaseParameterListener const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XForm const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XFormComponent const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XFormController const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XFormControllerListener const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XFormsSupplier const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XFormsSupplier2 const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XGrid const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XGridColumnFactory const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XGridFieldDataSupplier const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XGridPeer const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XImageProducerSupplier const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XLoadListener const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XLoadable const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XReset const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XResetListener const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XSubmit const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XSubmitListener const*)
com::sun::star::form::cppu_detail_getUnoType(com::sun::star::form::XUpdateListener const*)
com::sun::star::form::runtime::cppu_detail_getUnoType(com::sun::star::form::runtime::XFeatureInvalidation const*)
com::sun::star::form::runtime::cppu_detail_getUnoType(com::sun::star::form::runtime::XFormOperations const*)
com::sun::star::form::submission::cppu_detail_getUnoType(com::sun::star::form::submission::XSubmission const*)
com::sun::star::form::submission::cppu_detail_getUnoType(com::sun::star::form::submission::XSubmissionSupplier const*)
com::sun::star::form::submission::cppu_detail_getUnoType(com::sun::star::form::submission::XSubmissionVetoListener const*)
com::sun::star::form::validation::cppu_detail_getUnoType(com::sun::star::form::validation::XFormComponentValidityListener const*)
com::sun::star::form::validation::cppu_detail_getUnoType(com::sun::star::form::validation::XValidatableFormComponent const*)
com::sun::star::form::validation::cppu_detail_getUnoType(com::sun::star::form::validation::XValidator const*)
com::sun::star::form::validation::cppu_detail_getUnoType(com::sun::star::form::validation::XValidityConstraintListener const*)
com::sun::star::formula::cppu_detail_getUnoType(com::sun::star::formula::SymbolDescriptor const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::ControlCommand const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::DispatchInformation const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::DispatchResultEvent const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::DispatchStatement const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XBorderResizeListener const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XComponentLoader const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XConfigManager const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XControlNotificationListener const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XController const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XControllerBorder const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDesktop const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDispatch const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDispatchHelper const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDispatchInformationProvider const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDispatchProviderInterception const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDispatchProviderInterceptor const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDispatchRecorder const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDispatchRecorderSupplier const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDispatchResultListener const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XDocumentTemplates const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XFrameActionListener const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XFrameLoader const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XFrames const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XInplaceLayout const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XInterceptorInfo const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XLayoutManager const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XLayoutManagerEventBroadcaster const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XLayoutManagerListener const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XLoadEventListener const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XLoadable const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XMenuBarMergingAcceptor const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XModel const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XModel2 const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XModule const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XModuleManager const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XNotifyingDispatch const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XPopupMenuController const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XRecordableDispatch const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XSessionManagerClient const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XSessionManagerListener const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XStatusbarController const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XStorable const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XStorable2 const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XSubToolbarController const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XSynchronousDispatch const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XSynchronousFrameLoader const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XTasksSupplier const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XTerminateListener const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XTerminateListener2 const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XToolbarController const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XTransientDocumentsDocumentContentFactory const*)
com::sun::star::frame::cppu_detail_getUnoType(com::sun::star::frame::XUIControllerRegistration const*)
com::sun::star::frame::status::cppu_detail_getUnoType(com::sun::star::frame::status::ClipboardFormats const*)
com::sun::star::frame::status::cppu_detail_getUnoType(com::sun::star::frame::status::FontHeight const*)
com::sun::star::frame::status::cppu_detail_getUnoType(com::sun::star::frame::status::ItemStatus const*)
com::sun::star::frame::status::cppu_detail_getUnoType(com::sun::star::frame::status::LeftRightMargin const*)
com::sun::star::frame::status::cppu_detail_getUnoType(com::sun::star::frame::status::Template const*)
com::sun::star::frame::status::cppu_detail_getUnoType(com::sun::star::frame::status::UpperLowerMargin const*)
com::sun::star::frame::status::cppu_detail_getUnoType(com::sun::star::frame::status::UpperLowerMarginScale const*)
com::sun::star::frame::status::cppu_detail_getUnoType(com::sun::star::frame::status::Visibility const*)
com::sun::star::gallery::cppu_detail_getUnoType(com::sun::star::gallery::XGalleryItem const*)
com::sun::star::gallery::cppu_detail_getUnoType(com::sun::star::gallery::XGalleryTheme const*)
com::sun::star::gallery::cppu_detail_getUnoType(com::sun::star::gallery::XGalleryThemeProvider const*)
com::sun::star::geometry::cppu_detail_getUnoType(com::sun::star::geometry::AffineMatrix2D const*)
com::sun::star::geometry::cppu_detail_getUnoType(com::sun::star::geometry::RealBezierSegment2D const*)
com::sun::star::geometry::cppu_detail_getUnoType(com::sun::star::geometry::RealPoint2D const*)
com::sun::star::geometry::cppu_detail_getUnoType(com::sun::star::geometry::RealRectangle2D const*)
com::sun::star::graphic::cppu_detail_getUnoType(com::sun::star::graphic::XGraphic const*)
com::sun::star::graphic::cppu_detail_getUnoType(com::sun::star::graphic::XGraphicProvider const*)
com::sun::star::graphic::cppu_detail_getUnoType(com::sun::star::graphic::XGraphicRenderer const*)
com::sun::star::i18n::NumToCharHalfwidth::NumToCharHalfwidth()
com::sun::star::i18n::Transliteration_simplecaseignore::Transliteration_simplecaseignore()
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::Calendar const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::CalendarItem const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::Currency const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::Currency2 const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::FormatElement const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::Implementation const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::NumberFormatCode const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::UnicodeScript const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XCalendar const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XCharacterClassification const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XCollator const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XExtendedCalendar const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XExtendedIndexEntrySupplier const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XExtendedInputSequenceChecker const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XExtendedTextConversion const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XExtendedTransliteration const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XForbiddenCharacters const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XLocaleData const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XLocaleData2 const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XNativeNumberSupplier const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XNumberFormatCode const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XOrdinalSuffix const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XScriptTypeDetector const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XTextConversion const*)
com::sun::star::i18n::cppu_detail_getUnoType(com::sun::star::i18n::XTransliteration const*)
com::sun::star::i18n::xdictionary::setCellBoundary(int*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::PropertyCategoryDescriptor const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XHyperlinkControl const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XNumericControl const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XObjectInspector const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XObjectInspectorModel const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XObjectInspectorUI const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XPropertyControl const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XPropertyControlContext const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XPropertyControlFactory const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XPropertyControlObserver const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XPropertyHandler const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XStringListControl const*)
com::sun::star::inspection::cppu_detail_getUnoType(com::sun::star::inspection::XStringRepresentation const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::BufferSizeExceededException const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::IOException const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::NotConnectedException const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XActiveDataControl const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XActiveDataSink const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XActiveDataStreamer const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XAsyncOutputMonitor const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XConnectable const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XDataInputStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XDataOutputStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XInputStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XInputStreamProvider const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XMarkableStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XObjectInputStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XObjectOutputStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XPersist const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XPersistObject const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XSeekable const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XSeekableInputStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XStreamListener const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XTextInputStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XTextOutputStream const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XTruncate const*)
com::sun::star::io::cppu_detail_getUnoType(com::sun::star::io::XXMLExtractor const*)
com::sun::star::java::cppu_detail_getUnoType(com::sun::star::java::InvalidJavaSettingsException const*)
com::sun::star::java::cppu_detail_getUnoType(com::sun::star::java::JavaDisabledException const*)
com::sun::star::java::cppu_detail_getUnoType(com::sun::star::java::JavaNotFoundException const*)
com::sun::star::java::cppu_detail_getUnoType(com::sun::star::java::JavaVMCreationFailureException const*)
com::sun::star::java::cppu_detail_getUnoType(com::sun::star::java::RestartRequiredException const*)
com::sun::star::java::cppu_detail_getUnoType(com::sun::star::java::WrongJavaVersionException const*)
com::sun::star::java::cppu_detail_getUnoType(com::sun::star::java::XJavaThreadRegister_11 const*)
com::sun::star::java::cppu_detail_getUnoType(com::sun::star::java::XJavaVM const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::DisposedException const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::IllegalAccessException const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::IndexOutOfBoundsException const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::NoSupportException const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::WrappedTargetRuntimeException const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::XConnectionPoint const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::XConnectionPointContainer const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::XServiceDisplayName const*)
com::sun::star::lang::cppu_detail_getUnoType(com::sun::star::lang::XUnoTunnel const*)
com::sun::star::ldap::cppu_detail_getUnoType(com::sun::star::ldap::LdapConnectionException const*)
com::sun::star::ldap::cppu_detail_getUnoType(com::sun::star::ldap::LdapGenericException const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::DictionaryEvent const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XAvailableLocales const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XConversionDictionary const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XConversionDictionaryList const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XConversionPropertyType const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XDictionary const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XDictionary1 const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XDictionaryEntry const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XDictionaryEventListener const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XDictionaryList const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XDictionaryListEventListener const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XHyphenatedWord const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XHyphenator const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XLanguageGuessing const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XLinguServiceEventBroadcaster const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XLinguServiceEventListener const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XLinguServiceManager const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XMeaning const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XPossibleHyphens const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XSearchableDictionaryList const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XSpellAlternatives const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XSpellChecker const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XSpellChecker1 const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XSupportedLocales const*)
com::sun::star::linguistic2::cppu_detail_getUnoType(com::sun::star::linguistic2::XThesaurus const*)
com::sun::star::loader::cppu_detail_getUnoType(com::sun::star::loader::CannotActivateFactoryException const*)
com::sun::star::logging::cppu_detail_getUnoType(com::sun::star::logging::XConsoleHandler const*)
com::sun::star::logging::cppu_detail_getUnoType(com::sun::star::logging::XLogFormatter const*)
com::sun::star::logging::cppu_detail_getUnoType(com::sun::star::logging::XLogHandler const*)
com::sun::star::logging::cppu_detail_getUnoType(com::sun::star::logging::XLogger const*)
com::sun::star::logging::cppu_detail_getUnoType(com::sun::star::logging::XLoggerPool const*)
com::sun::star::mail::cppu_detail_getUnoType(com::sun::star::mail::MailAttachment const*)
com::sun::star::mail::cppu_detail_getUnoType(com::sun::star::mail::XAuthenticator const*)
com::sun::star::mail::cppu_detail_getUnoType(com::sun::star::mail::XConnectionListener const*)
com::sun::star::mail::cppu_detail_getUnoType(com::sun::star::mail::XMailMessage const*)
com::sun::star::mail::cppu_detail_getUnoType(com::sun::star::mail::XMailService const*)
com::sun::star::mail::cppu_detail_getUnoType(com::sun::star::mail::XMailServiceProvider const*)
com::sun::star::mail::cppu_detail_getUnoType(com::sun::star::mail::XSmtpService const*)
com::sun::star::media::cppu_detail_getUnoType(com::sun::star::media::XManager const*)
com::sun::star::media::cppu_detail_getUnoType(com::sun::star::media::XPlayer const*)
com::sun::star::media::cppu_detail_getUnoType(com::sun::star::media::XPlayerWindow const*)
com::sun::star::media::cppu_detail_getUnoType(com::sun::star::media::ZoomLevel const*)
com::sun::star::mozilla::cppu_detail_getUnoType(com::sun::star::mozilla::XMozillaBootstrap const*)
com::sun::star::packages::cppu_detail_getUnoType(com::sun::star::packages::XDataSinkEncrSupport const*)
com::sun::star::packages::manifest::cppu_detail_getUnoType(com::sun::star::packages::manifest::XManifestReader const*)
com::sun::star::packages::manifest::cppu_detail_getUnoType(com::sun::star::packages::manifest::XManifestWriter const*)
com::sun::star::packages::zip::cppu_detail_getUnoType(com::sun::star::packages::zip::XZipFileAccess const*)
com::sun::star::packages::zip::cppu_detail_getUnoType(com::sun::star::packages::zip::ZipIOException const*)
com::sun::star::plugin::cppu_detail_getUnoType(com::sun::star::plugin::PluginDescription const*)
com::sun::star::plugin::cppu_detail_getUnoType(com::sun::star::plugin::XPlugin const*)
com::sun::star::plugin::cppu_detail_getUnoType(com::sun::star::plugin::XPluginContext const*)
com::sun::star::plugin::cppu_detail_getUnoType(com::sun::star::plugin::XPluginManager const*)
com::sun::star::presentation::cppu_detail_getUnoType(com::sun::star::presentation::AnimationSpeed const*)
com::sun::star::presentation::cppu_detail_getUnoType(com::sun::star::presentation::FadeEffect const*)
com::sun::star::presentation::cppu_detail_getUnoType(com::sun::star::presentation::ParagraphTarget const*)
com::sun::star::presentation::cppu_detail_getUnoType(com::sun::star::presentation::XCustomPresentationSupplier const*)
com::sun::star::presentation::cppu_detail_getUnoType(com::sun::star::presentation::XHandoutMasterSupplier const*)
com::sun::star::presentation::cppu_detail_getUnoType(com::sun::star::presentation::XPresentation const*)
com::sun::star::presentation::cppu_detail_getUnoType(com::sun::star::presentation::XPresentationSupplier const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::InvocationTargetException const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::MethodMode const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::ParamMode const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XArrayTypeDescription const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XConstantTypeDescription const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XConstantsTypeDescription const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XModuleTypeDescription const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XParameter const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XPropertyTypeDescription const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XProxyFactory const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XPublished const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XServiceConstructorDescription const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XServiceTypeDescription const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XServiceTypeDescription2 const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XSingletonTypeDescription const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XSingletonTypeDescription2 const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XTypeDescriptionEnumeration const*)
com::sun::star::reflection::cppu_detail_getUnoType(com::sun::star::reflection::XTypeDescriptionEnumerationAccess const*)
com::sun::star::registry::cppu_detail_getUnoType(com::sun::star::registry::CannotRegisterImplementationException const*)
com::sun::star::registry::cppu_detail_getUnoType(com::sun::star::registry::InvalidRegistryException const*)
com::sun::star::registry::cppu_detail_getUnoType(com::sun::star::registry::InvalidValueException const*)
com::sun::star::registry::cppu_detail_getUnoType(com::sun::star::registry::MergeConflictException const*)
com::sun::star::registry::cppu_detail_getUnoType(com::sun::star::registry::RegistryKeyType const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::FontInfo const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::Texture const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XBezierPolyPolygon2D const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XBitmap const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XBitmapCanvas const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XBitmapPalette const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XBufferController const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XCachedPrimitive const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XCanvas const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XCanvasFont const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XColorSpace const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XCustomSprite const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XGraphicDevice const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XIntegerBitmap const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XLinePolyPolygon2D const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XParametricPolyPolygon2D const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XParametricPolyPolygon2DFactory const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XPolyPolygon2D const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XSimpleCanvas const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XSprite const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XSpriteCanvas const*)
com::sun::star::rendering::cppu_detail_getUnoType(com::sun::star::rendering::XTextLayout const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XFixedLine const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XFixedText const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XFormatCondition const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XFormattedField const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XFunction const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XFunctions const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XFunctionsSupplier const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XGroup const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XGroups const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XImageControl const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XReportComponent const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XReportControlFormat const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XReportControlModel const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XReportDefinition const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XReportEngine const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XSection const*)
com::sun::star::report::cppu_detail_getUnoType(com::sun::star::report::XShape const*)
com::sun::star::resource::cppu_detail_getUnoType(com::sun::star::resource::XResourceBundle const*)
com::sun::star::resource::cppu_detail_getUnoType(com::sun::star::resource::XResourceBundleLoader const*)
com::sun::star::resource::cppu_detail_getUnoType(com::sun::star::resource::XStringResourceManager const*)
com::sun::star::resource::cppu_detail_getUnoType(com::sun::star::resource::XStringResourcePersistence const*)
com::sun::star::resource::cppu_detail_getUnoType(com::sun::star::resource::XStringResourceResolver const*)
com::sun::star::resource::cppu_detail_getUnoType(com::sun::star::resource::XStringResourceSupplier const*)
com::sun::star::resource::cppu_detail_getUnoType(com::sun::star::resource::XStringResourceWithLocation const*)
com::sun::star::resource::cppu_detail_getUnoType(com::sun::star::resource::XStringResourceWithStorage const*)
com::sun::star::scanner::cppu_detail_getUnoType(com::sun::star::scanner::ScannerContext const*)
com::sun::star::scanner::cppu_detail_getUnoType(com::sun::star::scanner::XScannerManager const*)
com::sun::star::script::browse::cppu_detail_getUnoType(com::sun::star::script::browse::XBrowseNode const*)
com::sun::star::script::browse::cppu_detail_getUnoType(com::sun::star::script::browse::XBrowseNodeFactory const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::ArrayWrapper const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::BasicErrorException const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::InvocationInfo const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::ModuleSizeExceededRequest const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::ScriptEventDescriptor const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XAllListener const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XDefaultMethod const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XDefaultProperty const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XEventAttacher const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XEventAttacherManager const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XInvocation const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XInvocation2 const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XInvocationAdapterFactory const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XInvocationAdapterFactory2 const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XLibraryContainer const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XLibraryContainer2 const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XLibraryContainerExport const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XLibraryContainerPassword const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XPersistentLibraryContainer const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XScriptEventsAttacher const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XScriptEventsSupplier const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XScriptListener const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XStarBasicAccess const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XStarBasicDialogInfo const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XStarBasicLibraryInfo const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XStarBasicModuleInfo const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XStorageBasedLibraryContainer const*)
com::sun::star::script::cppu_detail_getUnoType(com::sun::star::script::XTypeConverter const*)
com::sun::star::script::provider::cppu_detail_getUnoType(com::sun::star::script::provider::ScriptErrorRaisedException const*)
com::sun::star::script::provider::cppu_detail_getUnoType(com::sun::star::script::provider::ScriptExceptionRaisedException const*)
com::sun::star::script::provider::cppu_detail_getUnoType(com::sun::star::script::provider::ScriptFrameworkErrorException const*)
com::sun::star::script::provider::cppu_detail_getUnoType(com::sun::star::script::provider::XScript const*)
com::sun::star::script::provider::cppu_detail_getUnoType(com::sun::star::script::provider::XScriptProvider const*)
com::sun::star::script::provider::cppu_detail_getUnoType(com::sun::star::script::provider::XScriptProviderFactory const*)
com::sun::star::script::provider::cppu_detail_getUnoType(com::sun::star::script::provider::XScriptProviderSupplier const*)
com::sun::star::script::provider::cppu_detail_getUnoType(com::sun::star::script::provider::XScriptURIHelper const*)
com::sun::star::sdb::application::cppu_detail_getUnoType(com::sun::star::sdb::application::XDatabaseDocumentUI const*)
com::sun::star::sdb::application::cppu_detail_getUnoType(com::sun::star::sdb::application::XTableUIProvider const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::DocumentSaveRequest const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::ParametersRequest const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::SQLContext const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XBookmarksSupplier const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XColumn const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XColumnUpdate const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XCommandPreparation const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XCompletedConnection const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XCompletedExecution const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XDocumentDataSource const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XFormDocumentsSupplier const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XInteractionDocumentSave const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XInteractionSupplyParameters const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XOfficeDatabaseDocument const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XParametersSupplier const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XQueriesSupplier const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XQueryDefinitionsSupplier const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XReportDocumentsSupplier const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XResultSetAccess const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XRowSetApproveBroadcaster const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XRowSetApproveListener const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XRowSetSupplier const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XSQLErrorBroadcaster const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XSQLErrorListener const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XSQLQueryComposer const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XSQLQueryComposerFactory const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XSingleSelectQueryAnalyzer const*)
com::sun::star::sdb::cppu_detail_getUnoType(com::sun::star::sdb::XSingleSelectQueryComposer const*)
com::sun::star::sdb::tools::cppu_detail_getUnoType(com::sun::star::sdb::tools::XConnectionTools const*)
com::sun::star::sdb::tools::cppu_detail_getUnoType(com::sun::star::sdb::tools::XDataSourceMetaData const*)
com::sun::star::sdb::tools::cppu_detail_getUnoType(com::sun::star::sdb::tools::XObjectNames const*)
com::sun::star::sdb::tools::cppu_detail_getUnoType(com::sun::star::sdb::tools::XTableName const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::DriverPropertyInfo const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::SQLException const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::SQLWarning const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XArray const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XBatchExecution const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XBlob const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XClob const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XCloseable const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XColumnLocate const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XConnection const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XDataSource const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XDatabaseMetaData const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XDatabaseMetaData2 const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XDriver const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XDriverAccess const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XDriverManager const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XGeneratedResultSet const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XIsolatedConnection const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XMultipleResults const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XOutParameters const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XParameters const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XPooledConnection const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XPreparedBatchExecution const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XPreparedStatement const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XRef const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XResultSet const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XResultSetMetaData const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XResultSetMetaDataSupplier const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XResultSetUpdate const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XRow const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XRowSet const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XRowSetListener const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XRowUpdate const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XStatement const*)
com::sun::star::sdbc::cppu_detail_getUnoType(com::sun::star::sdbc::XWarningsSupplier const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XAlterTable const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XAppend const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XAuthorizable const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XColumnsSupplier const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XCreateCatalog const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XDataDefinitionSupplier const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XDataDescriptorFactory const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XDeleteRows const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XDrop const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XGroupsSupplier const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XIndexesSupplier const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XKeysSupplier const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XRename const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XRowLocate const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XTablesSupplier const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XUser const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XUsersSupplier const*)
com::sun::star::sdbcx::cppu_detail_getUnoType(com::sun::star::sdbcx::XViewsSupplier const*)
com::sun::star::security::cppu_detail_getUnoType(com::sun::star::security::AllPermission const*)
com::sun::star::security::cppu_detail_getUnoType(com::sun::star::security::DocumentSignatureInformation const*)
com::sun::star::security::cppu_detail_getUnoType(com::sun::star::security::RuntimePermission const*)
com::sun::star::security::cppu_detail_getUnoType(com::sun::star::security::XCertificate const*)
com::sun::star::security::cppu_detail_getUnoType(com::sun::star::security::XCertificateExtension const*)
com::sun::star::security::cppu_detail_getUnoType(com::sun::star::security::XDocumentDigitalSignatures const*)
com::sun::star::security::cppu_detail_getUnoType(com::sun::star::security::XPolicy const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::ComplexReference const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::ConditionOperator const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::DataImportMode const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::DataPilotFieldAutoShowInfo const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::DataPilotFieldGroupInfo const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::DataPilotFieldLayoutInfo const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::DataPilotFieldOrientation const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::DataPilotFieldReference const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::DataPilotFieldSortInfo const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::DataResult const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::FormulaOpCodeMapEntry const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::FormulaToken const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::FunctionArgument const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::GeneralFunction const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::MemberResult const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::SingleReference const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::SubTotalColumn const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::TableFilterField const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::TablePageBreakData const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::ValidationAlertStyle const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::ValidationType const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XActivationBroadcaster const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XAreaLink const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XAreaLinks const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XArrayFormulaRange const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XArrayFormulaTokens const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCalculatable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellAddressable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellFormatRangesSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellRangeAddressable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellRangeData const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellRangeFormula const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellRangeMovement const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellRangeReferrer const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellRangesAccess const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellRangesQuery const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XCellSeries const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XConsolidatable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XConsolidationDescriptor const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDDELink const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDataPilotDescriptor const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDataPilotField const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDataPilotFieldGrouping const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDataPilotMemberResults const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDataPilotResults const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDataPilotTable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDataPilotTables const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDataPilotTablesSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDatabaseRange const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDatabaseRanges const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDimensionsSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XDocumentAuditing const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XEnhancedMouseClickBroadcaster const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XFormulaOpCodeMapper const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XFormulaParser const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XFormulaQuery const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XFormulaTokens const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XFunctionAccess const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XFunctionDescriptions const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XGoalSeek const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XHeaderFooterContent const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XHierarchiesSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XLabelRange const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XLabelRanges const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XLevelsSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XMembersSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XMultiFormulaTokens const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XMultipleOperation const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XNamedRange const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XNamedRanges const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XPrintAreas const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XRangeSelection const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XRangeSelectionListener const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XRecentFunctions const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XResultListener const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XScenario const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XScenarioEnhanced const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XScenarios const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XScenariosSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetAnnotation const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetAnnotationAnchor const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetAnnotationShapeSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetAnnotations const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetAnnotationsSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetAuditing const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetCellCursor const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetCellRange const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetCellRangeContainer const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetCellRanges const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetCondition const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetConditionalEntries const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetConditionalEntry const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetFilterDescriptor const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetFilterable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetFilterableEx const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetLinkable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetOperation const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetOutline const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSheetPageBreak const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSpreadsheet const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSpreadsheetDocument const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSpreadsheetView const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSpreadsheets const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSubTotalCalculatable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSubTotalDescriptor const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XSubTotalField const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XUniqueCellFormatRangesSupplier const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XUsedAreaCursor const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XViewFreezable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XViewPane const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XViewSplitable const*)
com::sun::star::sheet::cppu_detail_getUnoType(com::sun::star::sheet::XVolatileResult const*)
com::sun::star::smarttags::cppu_detail_getUnoType(com::sun::star::smarttags::XSmartTagAction const*)
com::sun::star::smarttags::cppu_detail_getUnoType(com::sun::star::smarttags::XSmartTagRecognizer const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::BreakType const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::DropCapFormat const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::GraphicLocation const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::LineSpacing const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::PageStyleLayout const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::ParagraphAdjust const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::TabAlign const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::VerticalAlignment const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::XAutoStyle const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::XAutoStyleFamily const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::XAutoStyles const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::XAutoStylesSupplier const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::XStyleLoader const*)
com::sun::star::style::cppu_detail_getUnoType(com::sun::star::style::XStyleSupplier const*)
com::sun::star::svg::cppu_detail_getUnoType(com::sun::star::svg::XSVGPrinter const*)
com::sun::star::sync2::cppu_detail_getUnoType(com::sun::star::sync2::BadPartnershipException const*)
com::sun::star::system::cppu_detail_getUnoType(com::sun::star::system::XSimpleMailClient const*)
com::sun::star::system::cppu_detail_getUnoType(com::sun::star::system::XSimpleMailClientSupplier const*)
com::sun::star::system::cppu_detail_getUnoType(com::sun::star::system::XSimpleMailMessage const*)
com::sun::star::system::cppu_detail_getUnoType(com::sun::star::system::XSystemShellExecute const*)
com::sun::star::table::BorderLine* _STL::__uninitialized_copy<com::sun::star::table::BorderLine*, com::sun::star::table::BorderLine*>(com::sun::star::table::BorderLine*, com::sun::star::table::BorderLine*, com::sun::star::table::BorderLine*, _STL::__false_type const&)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::BorderLine const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::CellAddress const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::CellContentType const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::CellHoriJustify const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::CellOrientation const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::CellRangeAddress const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::CellVertJustify const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::ShadowFormat const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::ShadowLocation const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::TableBorder const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::TableOrientation const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::TableSortField const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XAutoFormattable const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XCell const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XCellCursor const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XCellRange const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XColumnRowRange const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XTableChart const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XTableCharts const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XTableChartsSupplier const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XTableColumns const*)
com::sun::star::table::cppu_detail_getUnoType(com::sun::star::table::XTableRows const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::DocumentPasswordRequest const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::ErrorCodeIOException const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::ErrorCodeRequest const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::MasterPasswordRequest const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::PasswordRequest const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::UrlRecord const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::UserRecord const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XAbortChannel const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XAsyncJob const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionAbort const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionApprove const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionContinuation const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionDisapprove const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionHandler const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionPassword const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionRequest const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionRequestStringResolver const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XInteractionRetry const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XJob const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XJobExecutor const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XJobListener const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XPasswordContainer const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XStatusIndicatorFactory const*)
com::sun::star::task::cppu_detail_getUnoType(com::sun::star::task::XStatusIndicatorSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::GraphicCrop const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::HorizontalAdjust const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::NotePrintMode const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::PageNumberType const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::SectionFileLink const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::TableColumnSeparator const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::TextColumn const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::TextContentAnchorType const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::WrapTextMode const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::WritingMode const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XAutoTextContainer const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XAutoTextEntry const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XAutoTextGroup const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XBookmarksSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XChapterNumberingSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XDefaultNumberingProvider const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XDependentTextField const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XDocumentIndex const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XDocumentIndexMark const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XDocumentIndexesSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XEndnotesSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XFootnote const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XFootnotesSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XLineNumberingProperties const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XMailMergeBroadcaster const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XMailMergeListener const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XModule const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XNumberingFormatter const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XNumberingRulesSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XNumberingTypeInfo const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XPageCursor const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XPagePrintable const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XParagraphAppend const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XParagraphCursor const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XReferenceMarksSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XRelativeTextContentInsert const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XRelativeTextContentRemove const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XRubySelection const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XSentenceCursor const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XText const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextAppend const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextAppendAndConvert const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextColumns const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextContentAppend const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextConvert const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextCursor const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextDocument const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextEmbeddedObjectsSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextFieldsSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextFrame const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextFramesSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextGraphicObjectsSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextMarkup const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextPortionAppend const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextRangeCompare const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextRangeMover const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextSection const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextSectionsSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextTable const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextTableCursor const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextTablesSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextViewCursor const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XTextViewCursorSupplier const*)
com::sun::star::text::cppu_detail_getUnoType(com::sun::star::text::XWordCursor const*)
com::sun::star::ucb::OpenCommandArgument::~OpenCommandArgument()
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::AuthenticationRequest const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::CHAOSProgressStart const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::CommandAbortedException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::CommandFailedException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::CommandInfo const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::ContentInfo const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::ContentProviderInfo const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::Cookie const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::CrossReference const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::DocumentHeaderField const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::GlobalTransferCommandArgument const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::HandleCookiesRequest const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InsertCommandArgument const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveAppException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveAugmentedIOException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveBadTransferURLException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveCHAOSException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveIOException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveNetworkConnectException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveNetworkException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveNetworkGeneralException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveNetworkOffLineException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveNetworkReadException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveNetworkResolveNameException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveNetworkWriteException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::InteractiveWrongMediumException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::Link const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::ListAction const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::Lock const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::LockEntry const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::MissingInputStreamException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::MissingPropertiesException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::NameClashException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::NameClashResolveRequest const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::NumberedSortingInfo const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::OpenCommandArgument const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::OpenCommandArgument2 const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::PostCommandArgument const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::PostCommandArgument2 const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::RecipientInfo const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::RememberAuthentication const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::RuleSet const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::SendInfo const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::SendMediaTypes const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::TransferInfo const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::TransferResult const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::UnsupportedCommandException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::UnsupportedDataSinkException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::UnsupportedNameClashException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::UnsupportedOpenModeException const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::WelcomeDynamicResultSetStruct const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XAnyCompare const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XAnyCompareFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCachedContentResultSetFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCachedContentResultSetStubFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCachedDynamicResultSetFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCachedDynamicResultSetStubFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCommandEnvironment const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCommandInfo const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCommandInfoChangeListener const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCommandInfoChangeNotifier const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCommandProcessor const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XCommandProcessor2 const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContent const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentAccess const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentCreator const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentEventListener const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentIdentifier const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentIdentifierFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentProvider const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentProviderFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentProviderManager const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XContentProviderSupplier const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XDataContainer const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XDynamicResultSet const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XDynamicResultSetListener const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XFetchProvider const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XFetchProviderForContentAccess const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XFileIdentifierConverter const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XInteractionCookieHandling const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XInteractionReplaceExistingData const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XInteractionSupplyAuthentication const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XInteractionSupplyName const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XParameterizedContentProvider const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XPersistentPropertySet const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XProgressHandler const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XPropertySetRegistry const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XPropertySetRegistryFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XSimpleFileAccess const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XSimpleFileAccess2 const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XSimpleFileAccess3 const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XSortedDynamicResultSetFactory const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XSourceInitialization const*)
com::sun::star::ucb::cppu_detail_getUnoType(com::sun::star::ucb::XWebDAVCommandEnvironment const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::DockingArea const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XAcceleratorConfiguration const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XContextMenuInterception const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XDockingAreaAcceptor const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XImageManager const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XModuleUIConfigurationManager const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XModuleUIConfigurationManagerSupplier const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIConfiguration const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIConfigurationListener const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIConfigurationManager const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIConfigurationManagerSupplier const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIConfigurationPersistence const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIConfigurationStorage const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIElement const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIElementFactory const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIElementFactoryRegistration const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIElementSettings const*)
com::sun::star::ui::cppu_detail_getUnoType(com::sun::star::ui::XUIFunctionListener const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XAsynchronousExecutableDialog const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XControlAccess const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XControlInformation const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XDialogClosedListener const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFilePicker const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFilePickerControlAccess const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFilePickerListener const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFilePickerNotifier const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFilePickerWorkaround const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFilePreview const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFilterGroupManager const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFilterManager const*)
com::sun::star::ui::dialogs::cppu_detail_getUnoType(com::sun::star::ui::dialogs::XFolderPicker const*)
com::sun::star::uno::OWeakRefListener::OWeakRefListener()
com::sun::star::uno::Reference<com::sun::star::drawing::framework::XPane>::~Reference()
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::beans::Property>(cppu::UnoSequenceType<com::sun::star::beans::Property> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::beans::PropertyChangeEvent>(cppu::UnoSequenceType<com::sun::star::beans::PropertyChangeEvent> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::beans::PropertyValue>(cppu::UnoSequenceType<com::sun::star::beans::PropertyValue> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::bridge::ProtocolProperty>(cppu::UnoSequenceType<com::sun::star::bridge::ProtocolProperty> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::reflection::ParamInfo>(cppu::UnoSequenceType<com::sun::star::reflection::ParamInfo> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::sheet::LocalizedName>(cppu::UnoSequenceType<com::sun::star::sheet::LocalizedName> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Any>(cppu::UnoSequenceType<com::sun::star::uno::Any> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Reference<com::sun::star::bridge::XBridge> >(cppu::UnoSequenceType<com::sun::star::uno::Reference<com::sun::star::bridge::XBridge> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Reference<com::sun::star::reflection::XIdlClass> >(cppu::UnoSequenceType<com::sun::star::uno::Reference<com::sun::star::reflection::XIdlClass> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Reference<com::sun::star::reflection::XIdlField> >(cppu::UnoSequenceType<com::sun::star::uno::Reference<com::sun::star::reflection::XIdlField> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Reference<com::sun::star::reflection::XIdlMethod> >(cppu::UnoSequenceType<com::sun::star::uno::Reference<com::sun::star::reflection::XIdlMethod> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Reference<com::sun::star::reflection::XInterfaceMemberTypeDescription> >(cppu::UnoSequenceType<com::sun::star::uno::Reference<com::sun::star::reflection::XInterfaceMemberTypeDescription> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Reference<com::sun::star::reflection::XMethodParameter> >(cppu::UnoSequenceType<com::sun::star::uno::Reference<com::sun::star::reflection::XMethodParameter> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Reference<com::sun::star::reflection::XTypeDescription> >(cppu::UnoSequenceType<com::sun::star::uno::Reference<com::sun::star::reflection::XTypeDescription> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Reference<com::sun::star::registry::XRegistryKey> >(cppu::UnoSequenceType<com::sun::star::uno::Reference<com::sun::star::registry::XRegistryKey> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::uno::Type>(cppu::UnoSequenceType<com::sun::star::uno::Type> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<com::sun::star::xml::Attribute>(cppu::UnoSequenceType<com::sun::star::xml::Attribute> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<cppu::UnoCharType>(cppu::UnoSequenceType<cppu::UnoCharType> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<cppu::UnoSequenceType<double> >(cppu::UnoSequenceType<cppu::UnoSequenceType<double> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<cppu::UnoSequenceType<int> >(cppu::UnoSequenceType<cppu::UnoSequenceType<int> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<cppu::UnoSequenceType<rtl::OUString> >(cppu::UnoSequenceType<cppu::UnoSequenceType<rtl::OUString> > const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<cppu::UnoUnsignedShortType>(cppu::UnoSequenceType<cppu::UnoUnsignedShortType> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<double>(cppu::UnoSequenceType<double> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<int>(cppu::UnoSequenceType<int> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<rtl::OUString>(cppu::UnoSequenceType<rtl::OUString> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<signed char>(cppu::UnoSequenceType<signed char> const*)
com::sun::star::uno::Type const& cppu::detail::cppu_detail_getUnoType<test::testtools::bridgetest::TestElement>(cppu::UnoSequenceType<test::testtools::bridgetest::TestElement> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<com::sun::star::uno::Any>(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<com::sun::star::uno::Reference<com::sun::star::lang::XComponent> >(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::lang::XComponent> > const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<com::sun::star::uno::Reference<com::sun::star::uno::XInterface> >(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::uno::XInterface> > const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<com::sun::star::uno::Sequence<int> >(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<int> > const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<com::sun::star::uno::Type>(com::sun::star::uno::Sequence<com::sun::star::uno::Type> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<double>(com::sun::star::uno::Sequence<double> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<float>(com::sun::star::uno::Sequence<float> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<int>(com::sun::star::uno::Sequence<int> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<long>(com::sun::star::uno::Sequence<long> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<rtl::OUString>(com::sun::star::uno::Sequence<rtl::OUString> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<short>(com::sun::star::uno::Sequence<short> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<signed char>(com::sun::star::uno::Sequence<signed char> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<test::testtools::bridgetest::TestEnum>(com::sun::star::uno::Sequence<test::testtools::bridgetest::TestEnum> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<test::testtools::bridgetest::TestPolyStruct2<test::testtools::bridgetest::TestPolyStruct<unsigned short>, com::sun::star::uno::Sequence<com::sun::star::uno::Any> > >(com::sun::star::uno::Sequence<test::testtools::bridgetest::TestPolyStruct2<test::testtools::bridgetest::TestPolyStruct<unsigned short>, com::sun::star::uno::Sequence<com::sun::star::uno::Any> > > const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<test::testtools::bridgetest::TestPolyStruct2<unsigned short, com::sun::star::uno::Sequence<com::sun::star::uno::Any> > >(com::sun::star::uno::Sequence<test::testtools::bridgetest::TestPolyStruct2<unsigned short, com::sun::star::uno::Sequence<com::sun::star::uno::Any> > > const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<unsigned char>(com::sun::star::uno::Sequence<unsigned char> const*)
com::sun::star::uno::Type const& cppu::getTypeFavourChar<unsigned short>(com::sun::star::uno::Sequence<unsigned short> const*)
com::sun::star::uno::cppu_detail_getUnoType(com::sun::star::uno::XNamingService const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XExternalUriReferenceTranslator const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XUriReference const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XUriReferenceFactory const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XUriSchemeParser const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XVndSunStarExpandUrl const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XVndSunStarExpandUrlReference const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XVndSunStarPkgUrlReferenceFactory const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XVndSunStarScriptUrl const*)
com::sun::star::uri::cppu_detail_getUnoType(com::sun::star::uri::XVndSunStarScriptUrlReference const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::AliasProgrammaticPair const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::AtomClassRequest const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::AtomDescription const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::CellProtection const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::DateTime const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::DateTimeRange const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::ElementChange const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::MalformedNumberFormatException const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::NotNumericException const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::RevisionTag const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::SortField const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::Time const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::URL const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XArchiver const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XAtomServer const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XChangesListener const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XChangesNotifier const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XCloneable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XCloseBroadcaster const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XCloseListener const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XCloseable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XFlushListener const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XFlushable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XImportable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XIndent const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XJobManager const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XLinkUpdate const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XMergeable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XModeChangeBroadcaster const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XModeChangeListener const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XModeSelector const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XModifiable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XModifiable2 const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XModifyBroadcaster const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XModifyListener const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XNumberFormatPreviewer const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XOfficeInstallationDirectories const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XPropertyReplace const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XProtectable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XRefreshListener const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XRefreshable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XReplaceDescriptor const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XReplaceable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XSearchDescriptor const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XSearchable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XSortable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XStringAbbreviation const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XStringEscape const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XStringMapping const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XStringSubstitution const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XStringWidth const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XTextSearch const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XTimeStamped const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XUpdatable const*)
com::sun::star::util::cppu_detail_getUnoType(com::sun::star::util::XVeto const*)
com::sun::star::util::logging::cppu_detail_getUnoType(com::sun::star::util::logging::XLogger const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::PaperFormat const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::PaperOrientation const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::SelectionType const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XControlAccess const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XFormLayerAccess const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XLineCursor const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XPrintJob const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XPrintJobBroadcaster const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XPrintJobListener const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XPrintSettingsSupplier const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XPrintable const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XRenderable const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XScreenCursor const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XSelectionChangeListener const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XSelectionSupplier const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XViewCursor const*)
com::sun::star::view::cppu_detail_getUnoType(com::sun::star::view::XViewSettingsSupplier const*)
com::sun::star::xforms::cppu_detail_getUnoType(com::sun::star::xforms::InvalidDataOnSubmitException const*)
com::sun::star::xforms::cppu_detail_getUnoType(com::sun::star::xforms::XDataTypeRepository const*)
com::sun::star::xforms::cppu_detail_getUnoType(com::sun::star::xforms::XFormsEvent const*)
com::sun::star::xforms::cppu_detail_getUnoType(com::sun::star::xforms::XFormsSupplier const*)
com::sun::star::xforms::cppu_detail_getUnoType(com::sun::star::xforms::XFormsUIHelper1 const*)
com::sun::star::xforms::cppu_detail_getUnoType(com::sun::star::xforms::XModel const*)
com::sun::star::xforms::cppu_detail_getUnoType(com::sun::star::xforms::XSubmission const*)
com::sun::star::xml::cppu_detail_getUnoType(com::sun::star::xml::AttributeData const*)
com::sun::star::xml::cppu_detail_getUnoType(com::sun::star::xml::XExportFilter const*)
com::sun::star::xml::cppu_detail_getUnoType(com::sun::star::xml::XImportFilter const*)
com::sun::star::xml::crypto::cppu_detail_getUnoType(com::sun::star::xml::crypto::XSEInitializer const*)
com::sun::star::xml::crypto::cppu_detail_getUnoType(com::sun::star::xml::crypto::XSecurityEnvironment const*)
com::sun::star::xml::crypto::cppu_detail_getUnoType(com::sun::star::xml::crypto::XUriBinding const*)
com::sun::star::xml::crypto::cppu_detail_getUnoType(com::sun::star::xml::crypto::XXMLEncryption const*)
com::sun::star::xml::crypto::cppu_detail_getUnoType(com::sun::star::xml::crypto::XXMLEncryptionTemplate const*)
com::sun::star::xml::crypto::cppu_detail_getUnoType(com::sun::star::xml::crypto::XXMLSecurityContext const*)
com::sun::star::xml::crypto::cppu_detail_getUnoType(com::sun::star::xml::crypto::XXMLSignature const*)
com::sun::star::xml::crypto::cppu_detail_getUnoType(com::sun::star::xml::crypto::XXMLSignatureTemplate const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XBlockerMonitor const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XDecryptionResultBroadcaster const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XDecryptionResultListener const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XEncryptionResultBroadcaster const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XEncryptionResultListener const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XKeyCollector const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XMissionTaker const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XReferenceCollector const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XReferenceResolvedBroadcaster const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XReferenceResolvedListener const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSAXEventKeeper const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSAXEventKeeperStatusChangeBroadcaster const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSAXEventKeeperStatusChangeListener const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSecurityController const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSecuritySAXEventKeeper const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSignatureCreationResultBroadcaster const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSignatureCreationResultListener const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSignatureVerifyResultBroadcaster const*)
com::sun::star::xml::crypto::sax::cppu_detail_getUnoType(com::sun::star::xml::crypto::sax::XSignatureVerifyResultListener const*)
com::sun::star::xml::csax::cppu_detail_getUnoType(com::sun::star::xml::csax::XCompressedDocumentHandler const*)
com::sun::star::xml::csax::cppu_detail_getUnoType(com::sun::star::xml::csax::XMLAttribute const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XAttr const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XCDATASection const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XCharacterData const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XComment const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XDOMImplementation const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XDocument const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XDocumentBuilder const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XDocumentFragment const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XDocumentType const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XElement const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XEntity const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XEntityReference const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XNamedNodeMap const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XNode const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XNodeList const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XNotation const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XProcessingInstruction const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XSAXDocumentBuilder const*)
com::sun::star::xml::dom::cppu_detail_getUnoType(com::sun::star::xml::dom::XText const*)
com::sun::star::xml::dom::events::cppu_detail_getUnoType(com::sun::star::xml::dom::events::XDocumentEvent const*)
com::sun::star::xml::dom::events::cppu_detail_getUnoType(com::sun::star::xml::dom::events::XEvent const*)
com::sun::star::xml::dom::events::cppu_detail_getUnoType(com::sun::star::xml::dom::events::XEventListener const*)
com::sun::star::xml::dom::events::cppu_detail_getUnoType(com::sun::star::xml::dom::events::XEventTarget const*)
com::sun::star::xml::dom::events::cppu_detail_getUnoType(com::sun::star::xml::dom::events::XMouseEvent const*)
com::sun::star::xml::dom::events::cppu_detail_getUnoType(com::sun::star::xml::dom::events::XMutationEvent const*)
com::sun::star::xml::dom::events::cppu_detail_getUnoType(com::sun::star::xml::dom::events::XUIEvent const*)
com::sun::star::xml::input::cppu_detail_getUnoType(com::sun::star::xml::input::XAttributes const*)
com::sun::star::xml::input::cppu_detail_getUnoType(com::sun::star::xml::input::XElement const*)
com::sun::star::xml::input::cppu_detail_getUnoType(com::sun::star::xml::input::XNamespaceMapping const*)
com::sun::star::xml::input::cppu_detail_getUnoType(com::sun::star::xml::input::XRoot const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::InputSource const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::SAXException const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::SAXParseException const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::XAttributeList const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::XEntityResolver const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::XErrorHandler const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::XExtendedDocumentHandler const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::XLocator const*)
com::sun::star::xml::sax::cppu_detail_getUnoType(com::sun::star::xml::sax::XParser const*)
com::sun::star::xml::wrapper::cppu_detail_getUnoType(com::sun::star::xml::wrapper::XXMLDocumentWrapper const*)
com::sun::star::xml::wrapper::cppu_detail_getUnoType(com::sun::star::xml::wrapper::XXMLElementWrapper const*)
com::sun::star::xml::xpath::cppu_detail_getUnoType(com::sun::star::xml::xpath::XXPathAPI const*)
com::sun::star::xml::xpath::cppu_detail_getUnoType(com::sun::star::xml::xpath::XXPathExtension const*)
com::sun::star::xml::xpath::cppu_detail_getUnoType(com::sun::star::xml::xpath::XXPathObject const*)
com::sun::star::xsd::cppu_detail_getUnoType(com::sun::star::xsd::XDataType const*)
comphelper::AccessibleEventBuffer::AccessibleEventBuffer()
comphelper::AccessibleEventBuffer::sendEvents() const
comphelper::AttributeList::RemoveAttribute(rtl::OUString)
comphelper::AttributeList::SetAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
comphelper::ChainablePropertySet::lockMutex()
comphelper::ChainablePropertySet::unlockMutex()
comphelper::ChainablePropertySetInfo::ChainablePropertySetInfo()
comphelper::EmbeddedObjectContainer::CopyEmbeddedObject(comphelper::EmbeddedObjectContainer&, com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, rtl::OUString&)
comphelper::EventLogger::addLogHandler(com::sun::star::uno::Reference<com::sun::star::logging::XLogHandler> const&)
comphelper::EventLogger::getLogLevel() const
comphelper::EventLogger::getName() const
comphelper::EventLogger::removeLogHandler(com::sun::star::uno::Reference<com::sun::star::logging::XLogHandler> const&)
comphelper::EventLogger::setLogLevel(int) const
comphelper::ItemConverter::IsValid() const
comphelper::Locale::AR()
comphelper::Locale::CA()
comphelper::Locale::CS()
comphelper::Locale::DA()
comphelper::Locale::DE_AT()
comphelper::Locale::DE_CH()
comphelper::Locale::DE_DE()
comphelper::Locale::EL()
comphelper::Locale::ES()
comphelper::Locale::FI()
comphelper::Locale::FR()
comphelper::Locale::HE()
comphelper::Locale::HI_IN()
comphelper::Locale::HU()
comphelper::Locale::IT()
comphelper::Locale::JA()
comphelper::Locale::KO()
comphelper::Locale::NL()
comphelper::Locale::PL()
comphelper::Locale::PT()
comphelper::Locale::PT_BR()
comphelper::Locale::RU()
comphelper::Locale::SK()
comphelper::Locale::SL()
comphelper::Locale::SV()
comphelper::Locale::TH()
comphelper::Locale::TR()
comphelper::Locale::X_COMMENT()
comphelper::Locale::X_TRANSLATE()
comphelper::Locale::ZH_CN()
comphelper::Locale::ZH_TW()
comphelper::Locale::getFallback(comphelper::Locale&)
comphelper::Locale::getLanguage() const
comphelper::Locale::getVariant() const
comphelper::MasterPropertySet::lockMutex()
comphelper::MasterPropertySet::unlockMutex()
comphelper::MasterPropertySetInfo::MasterPropertySetInfo()
comphelper::MasterPropertySetInfo::remove(rtl::OUString const&)
comphelper::MediaDescriptor::MediaDescriptor(com::sun::star::uno::Any const&)
comphelper::MediaDescriptor::MediaDescriptor(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
comphelper::MediaDescriptor::PROP_CHARACTERSET()
comphelper::MediaDescriptor::PROP_DEEPDETECTION()
comphelper::MediaDescriptor::PROP_DETECTSERVICE()
comphelper::MediaDescriptor::PROP_EXTENSION()
comphelper::MediaDescriptor::PROP_FILTEROPTIONS()
comphelper::MediaDescriptor::PROP_FORMAT()
comphelper::MediaDescriptor::PROP_PATTERN()
comphelper::MediaDescriptor::PROP_POSSIZE()
comphelper::MediaDescriptor::PROP_POSTSTRING()
comphelper::MediaDescriptor::PROP_REPAIRPACKAGE()
comphelper::MediaDescriptor::PROP_SILENT()
comphelper::MediaDescriptor::PROP_TEMPLATEREGIONNAME()
comphelper::MediaDescriptor::PROP_VIEWID()
comphelper::MimeConfigurationHelper::AddFilterNameCheckOwnFile(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
comphelper::MimeConfigurationHelper::GetSequenceClassIDFromObjectName(rtl::OUString const&)
comphelper::NamedValueCollection::empty() const
comphelper::NamedValueCollection::impl_has(rtl::OUString const&) const
comphelper::NamedValueCollection::impl_remove(rtl::OUString const&)
comphelper::NamedValueCollection::size() const
comphelper::OAccessibleImplementationAccess::setAccessibleParent(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessibleContext> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
comphelper::OAccessibleImplementationAccess::setForeignControlledState(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessibleContext> const&, short, unsigned char)
comphelper::OAccessibleSelectionHelper::OAccessibleSelectionHelper()
comphelper::OAccessibleTextHelper::OAccessibleTextHelper()
comphelper::OComposedPropertySet::OComposedPropertySet(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> > const&, comphelper::IPropertySetComposerCallback const*)
comphelper::OContainerListenerAdapter::lock()
comphelper::OContainerListenerAdapter::unlock()
comphelper::OEnumeration::OEnumeration(_STL::vector<com::sun::star::uno::Any, _STL::allocator<com::sun::star::uno::Any> > const&)
comphelper::OIndexContainer::OIndexContainer(osl::Mutex&)
comphelper::OInteractionRequest::clearContinuations()
comphelper::OModuleImpl::~OModuleImpl()
comphelper::OPropertyContainerHelper::modifyAttributes(int, int, int)
comphelper::OSLInputStreamWrapper::OSLInputStreamWrapper(osl::File*, unsigned char)
comphelper::OSelectionChangeListener::disposeAdapter()
comphelper::OSequenceOutputStream::OSequenceOutputStream(com::sun::star::uno::Sequence<signed char>&, double, int, int)
comphelper::OStorageHelper::GetStorageOfFormatFromURL(rtl::OUString const&, rtl::OUString const&, int, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
comphelper::OStorageHelper::GetTemporaryStorageOfFormat(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
comphelper::OTruncatedTransactedFileStream::OTruncatedTransactedFileStream(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
comphelper::OTruncatedTransactedFileStream::OTruncatedTransactedFileStream(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::ucb::XSimpleFileAccess> const&, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
comphelper::OTruncatedTransactedFileStream::OTruncatedTransactedFileStream(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::ucb::XSimpleFileAccess> const&, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, unsigned char)
comphelper::OfficeResourceBundle::OfficeResourceBundle(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&)
comphelper::PropertySetHelper::PropertySetHelper()
comphelper::PropertySetHelper::setInfo(comphelper::PropertySetInfo*)
comphelper::ScopeGuard::dismiss()
comphelper::createProcessComponentWithArguments(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
comphelper::getPathToSystemRegistry()
comphelper::getPathToUserRegistry()
comphelper::getStandardFormat(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, short, com::sun::star::lang::Locale const&)
comphelper::isDerivedFrom(com::sun::star::uno::Type const&, com::sun::star::uno::Type const&)
component_canUnload
component_getFactory
component_getImplementationEnvironment
component_writeInfo
configmgr::AnyPair::AnyPair()
configmgr::AnyPair::setValue(com::sun::star::uno::Any const&, configmgr::AnyPair::SelectMember)
configmgr::BufferedFileInputStream::BufferedFileInputStream(rtl::OUString const&)
configmgr::BufferedInputFile::getPos(unsigned long&)
configmgr::CacheClientAccess::isEmpty()
configmgr::CacheData::extractModuleName(configmgr::configuration::AbsolutePath const&)
configmgr::CacheLoadingAccess::applyUpdate(configmgr::backend::UpdateInstance&)
configmgr::CacheLoadingAccess::findNode(configmgr::configuration::AbsolutePath const&)
configmgr::ComponentContext::changeBootstrapURL(rtl::OUString const&)
configmgr::ComponentContext::getBaseContext(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
configmgr::ContextReader::isBootstrapContext(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
configmgr::FileHelper::delimiterAsString()
configmgr::FileHelper::getModifyTime(rtl::OUString const&)
configmgr::FileHelper::removeFile(rtl::OUString const&)
configmgr::OConfigurationRegistryKey::OConfigurationRegistryKey(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, rtl::OUString const&, unsigned char)
configmgr::ONameCreator::buildPath() const
configmgr::OProviderImpl::FactoryArguments::getArgumentName(configmgr::OProviderImpl::FactoryArguments::Argument)
configmgr::OProviderImpl::getWriterFactory()
configmgr::OTreeChangeFactory::createGroupNodeChange(rtl::OUString const&, configmgr::node::Attributes, bool)
configmgr::OTreeChangeFactory::createValueChange(com::sun::star::uno::Any const&, configmgr::ValueNode const&)
configmgr::OTreeChangeFactory::createValueChange(configmgr::ValueChange::SetToDefault, configmgr::ValueNode const&)
configmgr::OTreeChangeFactory::createValueChange(configmgr::ValueNode const&, bool)
configmgr::OTreeChangeFactory::createValueChange(rtl::OUString const&, configmgr::node::Attributes, configmgr::ValueChange::Mode, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
configmgr::OTreeNodeConverter::createCorrespondingNode(configmgr::Change&)
configmgr::OTreeNodeFactory::createDummyTree(configmgr::configuration::Name const&, configmgr::configuration::Name const&)
configmgr::RequestOptions::forAllLocales()
configmgr::RequestOptions::hashCode() const
configmgr::SearchNode::SearchNode()
configmgr::SimpleTypeHelper::getByteType()
configmgr::TimeStamp::always()
configmgr::ValueChange::applyTo(configmgr::ValueNode&)
configmgr::ValueChange::getModeAsString() const
configmgr::ValueChange::setModeAsString(rtl::OUString const&)
configmgr::adjustUpdate(configmgr::TreeChangeList&, configmgr::sharable::Node* const&)
configmgr::apihelper::InteractionRequest::InteractionRequest()
configmgr::apihelper::InteractionRequest::setRequest(com::sun::star::uno::Any const&)
configmgr::applyLayerUpdate(configmgr::TreeChangeList const&, configmgr::TreeChangeList&)
configmgr::applyUpdateWithAdjustment(configmgr::TreeChangeList&, configmgr::sharable::Node* const&)
configmgr::backend::BinaryReadHandler::readString(rtl::OUString&)
configmgr::backend::BinaryReader::close()
configmgr::backend::BinaryReader::reopen()
configmgr::backend::BinaryWriteHandler::writeType(com::sun::star::uno::Type const&)
configmgr::backend::DataBuilderContext::raiseIllegalAccessException(char const*) const
configmgr::backend::DataBuilderContext::raiseNoSupportException(char const*) const
configmgr::backend::DataBuilderContext::raiseUnknownPropertyException(char const*, rtl::OUString const&) const
configmgr::backend::DataBuilderContext::stripComponent(com::sun::star::configuration::backend::TemplateIdentifier const&) const
configmgr::backend::LayerMergeHandler::result()
configmgr::backend::LayerMergeHandler::result() const
configmgr::backend::LayerUpdateBuilder::isComplete() const
configmgr::backend::LayerUpdateMerger::illegalUpdate(char const*)
configmgr::backend::NodeUpdate::clear(bool)
configmgr::backend::PropertyUpdate::clear()
configmgr::backend::SchemaBuilder::result()
configmgr::backend::SchemaBuilder::result() const
configmgr::backend::SingleBackendAdapter::getName()
configmgr::backend::SingleBackendAdapter::getServices()
configmgr::backend::StringResolver::resolveName(rtl::OUString&)
configmgr::cloneForLocale(configmgr::INode const*, rtl::OUString const&)
configmgr::configapi::ApiTreeImpl::ApiTreeImpl(com::sun::star::uno::XInterface*, configmgr::configuration::TreeRef const&, configmgr::configapi::ApiTreeImpl&)
configmgr::configapi::ApiTreeImpl::ComponentAdapter::getParent() const
configmgr::configapi::DisposeGuard::DisposeGuard(configmgr::configapi::TreeElement&)
configmgr::configapi::DisposeGuardImpl::DisposeGuardImpl(configmgr::configapi::NotifierImpl&)
configmgr::configapi::Factory::revokeElement(configmgr::configuration::NodeID const&, configmgr::configapi::NodeElement&)
configmgr::configapi::GuardedNotifier::GuardedNotifier(configmgr::configapi::Notifier const&)
configmgr::configapi::GuardedNotifier::GuardedNotifier(configmgr::configapi::TreeElement&)
configmgr::configapi::Notifier::add(configmgr::configuration::NodeRef const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&) const
configmgr::configapi::fillEventData(com::sun::star::beans::PropertyChangeEvent&, configmgr::configuration::NodeChangeInformation const&, configmgr::configapi::Factory&, bool)
configmgr::configapi::fillEventData(com::sun::star::container::ContainerEvent&, configmgr::configuration::NodeChangeInformation const&, configmgr::configapi::Factory&)
configmgr::configapi::fillEventSource(com::sun::star::lang::EventObject&, configmgr::configuration::Tree const&, configmgr::configuration::NodeRef const&, configmgr::configapi::Factory&)
configmgr::configapi::findSetElement(configmgr::configapi::Factory&, configmgr::configuration::ElementRef const&)
configmgr::configapi::implSetToDefaultAsProperty(configmgr::configapi::NodeAccess&)
configmgr::configapi::resolveChangeLocation(configmgr::configuration::RelativePath&, configmgr::configuration::NodeChangeLocation const&, configmgr::configuration::Tree const&)
configmgr::configuration::AbsolutePath::isDetached() const
configmgr::configuration::CommitHelper::reset()
configmgr::configuration::CommitHelper::revertCommit(configmgr::TreeChangeList&)
configmgr::configuration::ConstraintViolation::ConstraintViolation()
configmgr::configuration::ElementHelper::getUnoType(configmgr::configuration::ElementTree const&)
configmgr::configuration::ElementRef::getName() const
configmgr::configuration::ElementTree::getOwnedElement(configmgr::configuration::ElementTree const&)
configmgr::configuration::ElementTree::getTemplate() const
configmgr::configuration::Exception::Exception()
configmgr::configuration::GroupDefaulter::isDataAvailable()
configmgr::configuration::InvalidName::InvalidName(rtl::OUString const&)
configmgr::configuration::NodeChange::getAffectedNodeID() const
configmgr::configuration::NodeChange::getBaseNode() const
configmgr::configuration::NodeChange::getBaseTree() const
configmgr::configuration::NodeChangeData::getNewElementNodeRef() const
configmgr::configuration::NodeChangeData::getOldElementNodeRef() const
configmgr::configuration::NodeChangeLocation::getAffectedNode() const
configmgr::configuration::NodeChangeLocation::getAffectedTree() const
configmgr::configuration::NodeChangeLocation::isValidData() const
configmgr::configuration::NodeChanges::implApply() const
configmgr::configuration::Path::Component::splitCompositeName(configmgr::configuration::Name&, configmgr::configuration::Name&) const
configmgr::configuration::Path::Component::splitCompositeName(rtl::OUString&, rtl::OUString&) const
configmgr::configuration::SpecialTemplateProvider::SpecialTemplateProvider()
configmgr::configuration::SpecialTemplateProvider::~SpecialTemplateProvider()
configmgr::configuration::SubNodeID::SubNodeID(configmgr::configuration::Tree const&, configmgr::configuration::NodeRef const&, configmgr::configuration::Name const&)
configmgr::configuration::SubNodeID::SubNodeID(configmgr::configuration::Tree const&, configmgr::configuration::ValueRef const&)
configmgr::configuration::SubNodeID::hashCode() const
configmgr::configuration::SubNodeID::isEmpty() const
configmgr::configuration::TemplateInfo::getTemplateName() const
configmgr::configuration::TemplateInfo::getTemplatePackage() const
configmgr::configuration::TemplateName::makeLocalizedTypeModuleName()
configmgr::configuration::Tree::getName(configmgr::configuration::AnyNodeRef const&) const
configmgr::configuration::Tree::getParent(configmgr::configuration::AnyNodeRef const&) const
configmgr::configuration::Tree::isValidNode(configmgr::configuration::AnyNodeRef const&) const
configmgr::configuration::Tree::visit(configmgr::configuration::AnyNodeRef const&, configmgr::configuration::NodeVisitor&) const
configmgr::configuration::TreeImpl::asRootTree()
configmgr::configuration::TreeImpl::asRootTree() const
configmgr::configuration::TreeImplHelper::makeAnyNode(configmgr::configuration::Name const&, unsigned int)
configmgr::configuration::TreeImplHelper::makeAnyNode(unsigned int, unsigned int)
configmgr::configuration::TypeMismatch::TypeMismatch()
configmgr::configuration::TypeMismatch::TypeMismatch(rtl::OUString const&)
configmgr::configuration::WrappedUnoException::WrappedUnoException(com::sun::star::uno::Any const&)
configmgr::configuration::hasChildOrElement(configmgr::configuration::Tree const&, configmgr::configuration::NodeRef const&)
configmgr::configuration::isSimpleValue(configmgr::configuration::Tree const&, configmgr::configuration::AnyNodeRef const&)
configmgr::configuration::isSimpleValueElement(configmgr::configuration::Tree const&, configmgr::configuration::NodeRef const&)
configmgr::configuration::makeSimpleTemplate(com::sun::star::uno::Type const&, configmgr::configuration::SpecialTemplateProvider const&)
configmgr::configuration::makeTreeTemplate(rtl::OUString const&, rtl::OUString const&, configmgr::configuration::SpecialTemplateProvider const&)
configmgr::data::TreeNodeBuilder::resetTreeFragment()
configmgr::data::toGroupNodeAddress(configmgr::sharable::Node* const&)
configmgr::dont_trace(char const*, ...)
configmgr::expandForLocale(configmgr::ISubtree&, rtl::OUString const&)
configmgr::expandForLocale(configmgr::SubtreeChange&, rtl::OUString const&)
configmgr::forceWritable(configmgr::INode&)
configmgr::internal::throwDispatchIllegalSequenceException()
configmgr::isValueSet(configmgr::ISubtree const&)
configmgr::localbe::LocalSchemaSupplier::getName()
configmgr::localbe::LocalSchemaSupplier::getServices()
configmgr::localbe::LocalSingleBackend::getName()
configmgr::localbe::LocalSingleBackend::getServices()
configmgr::localbe::implNormalizeURL(rtl::OUString&, osl::DirectoryItem&)
configmgr::localehelper::FindBestLocale::FindBestLocale()
configmgr::localehelper::FindBestLocale::FindBestLocale(_STL::vector<com::sun::star::lang::Locale, _STL::allocator<com::sun::star::lang::Locale> > const&)
configmgr::localehelper::FindBestLocale::getBestMatch() const
configmgr::localehelper::FindBestLocale::reset(com::sun::star::lang::Locale const&)
configmgr::localehelper::makeLocaleSequence(com::sun::star::uno::Sequence<com::sun::star::lang::Locale> const&)
configmgr::localehelper::makeUnoSequence(_STL::vector<com::sun::star::lang::Locale, _STL::allocator<com::sun::star::lang::Locale> > const&)
configmgr::localehelper::match(com::sun::star::lang::Locale const&, _STL::vector<com::sun::star::lang::Locale, _STL::allocator<com::sun::star::lang::Locale> > const&)
configmgr::parseTemplateName(rtl::OUString const&, com::sun::star::uno::TypeClass&, bool&)
configmgr::sharable::Node::getParentNode()
configmgr::sharable::Node::getParentNode() const
configmgr::sharable::Node::isLocalized() const
configmgr::sharable::TreeFragment::hasDefaults() const
configmgr::sharable::ValueNode::isEmpty() const
configmgr::view::(anonymous namespace)::GroupMemberDispatch::test_value(configmgr::data::NodeAccess const&) const
configmgr::view::Node::getNextSibling() const
configmgr::view::ValueNode::getAccess() const
configmgr::view::ViewStrategy::getNodeAccess(configmgr::view::Node const&) const
configmgr::view::ViewStrategy::getNodeName(configmgr::view::Node const&) const
configmgr::view::ViewTreeAccess::isValid(configmgr::configuration::NodeRef const&) const
configmgr::xml::(anonymous namespace)::createTCV(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
configmgr::xml::(anonymous namespace)::createTCV(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
configmgr::xml::ElementParser::alwaysGetAttribute(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&, rtl::OUString const&, rtl::OUString&) const
configmgr::xml::WriterService<com::sun::star::configuration::backend::XLayerHandler>::getServiceFactory() const
configmgr::xml::WriterService<com::sun::star::configuration::backend::XLayerHandler>::getServiceInfo()
connectivity::OKeyValue::OKeyValue()
connectivity::OParseContext::setDefaultLocale(com::sun::star::lang::Locale const&)
connectivity::ORowSetValue::setFromDouble(double const&, int)
connectivity::OSQLInternalNode::OSQLInternalNode(unsigned short const*, connectivity::SQLNodeType, unsigned int)
connectivity::OSQLParseNode::remove(connectivity::OSQLParseNode*)
connectivity::OSQLParseNode::replaceAt(unsigned int, connectivity::OSQLParseNode*)
connectivity::OSQLParser::RuleIDToStr(unsigned int)
connectivity::OSQLScanner::GetCurrentRule() const
connectivity::OSortIndex::GetValue(int) const
connectivity::SharedResources::getResurceString(unsigned short)
connectivity::SharedResources_Impl::getMutex()
connectivity::adabas::OAdabasConnection::isStarted()
connectivity::adabas::OAdabasResultSetMetaData::OAdabasResultSetMetaData(connectivity::odbc::OConnection*, void*, _STL::vector<int, _STL::allocator<int> > const&)
connectivity::adabas::OUserExtend::OUserExtend(connectivity::adabas::OAdabasConnection*, rtl::OUString const&)
connectivity::adabas::OViews::appendNew(rtl::OUString const&)
connectivity::calc::OCalcTable::OCalcTable(connectivity::sdbcx::OCollection*, connectivity::calc::OCalcConnection*)
connectivity::evoab::OEvoabDatabaseMetaData::construct()
connectivity::evoab::OEvoabDriver::fileExists(rtl::OUString const&, unsigned char) const
connectivity::evoab::OEvoabDriver::getEVOAB_CLI_ARG_OUTPUT_REDIRECT()
connectivity::evoab::OEvoabResultSetMetaData::checkColumnIndex(int)
connectivity::evoab::OEvoabTable::OEvoabTable(connectivity::sdbcx::OCollection*, connectivity::evoab::OEvoabConnection*)
connectivity::evoab::getEvoabServiceFactory()
connectivity::evoab::getFieldCount()
connectivity::evoab::setEvoabServiceFactory(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
connectivity::file::OSQLAnalyzer::clean()
connectivity::file::OStatement_Base::reset()
connectivity::file::OStatement_Base::setWarning(com::sun::star::sdbc::SQLWarning const&)
connectivity::flat::OFlatTable::OFlatTable(connectivity::sdbcx::OCollection*, connectivity::flat::OFlatConnection*)
connectivity::hsqldb::OHsqlConnection::impl_createLinkedTableEditor_throw(com::sun::star::uno::Reference<com::sun::star::sdb::application::XDatabaseDocumentUI> const&, rtl::OUString const&)
connectivity::hsqldb::OUserExtend::OUserExtend(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&)
connectivity::hsqldb::OViews::appendNew(rtl::OUString const&)
connectivity::hsqldb::StreamHelper::getStream()
connectivity::java_lang_Boolean::java_lang_Boolean(unsigned char)
connectivity::java_lang_Class::getName()
connectivity::java_lang_Class::isAssignableFrom(connectivity::java_lang_Class*)
connectivity::java_lang_Class::newInstance()
connectivity::java_lang_Exception::getMyClass()
connectivity::java_lang_Object::getClass()
connectivity::java_lang_String::java_lang_String(rtl::OUString const&)
connectivity::java_sql_DriverManager::getDriver(rtl::OUString const&)
connectivity::java_sql_DriverManager::setLoginTimeout(int)
connectivity::java_sql_SQLWarning_BASE::getMyClass()
connectivity::java_sql_Timestamp::getNanos()
connectivity::java_sql_Timestamp::setNanos(int)
connectivity::java_util_Date::getMyClass()
connectivity::kab::KabCatalog::getDot()
connectivity::kab::KabTable::KabTable(connectivity::sdbcx::OCollection*, connectivity::kab::KabConnection*)
connectivity::mysql::OUserExtend::OUserExtend(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&)
connectivity::mysql::OViews::appendNew(rtl::OUString const&)
connectivity::odbc::OPreparedStatement::getDataBuf(int)
connectivity::odbc::OPreparedStatement::getParamLength(int)
connectivity::odbc::OPreparedStatement::getPrecision(int)
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection*, void*, unsigned short, unsigned char&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::parse::OOrderColumn::OOrderColumn(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int, int, int, unsigned char, unsigned char, unsigned char, unsigned char)
connectivity::toString(com::sun::star::uno::Any const&)
cpp_vtable_call
cppcanvas::BaseGfxFactory::createText(boost::shared_ptr<cppcanvas::Canvas> const&, rtl::OUString const&) const
cppcanvas::BaseGfxFactory::~BaseGfxFactory()
cppcanvas::VCLFactory::~VCLFactory()
cppcanvas::internal::ImplSprite::getGraphicDevice() const
cppcanvas::tools::modifyClip(com::sun::star::rendering::RenderState&, cppcanvas::internal::OutDevState const&, boost::shared_ptr<cppcanvas::Canvas> const&, Point const&, basegfx::B2DVector const*, double const*)
cppcanvas::tools::modifyClip(com::sun::star::rendering::RenderState&, cppcanvas::internal::OutDevState const&, boost::shared_ptr<cppcanvas::Canvas> const&, basegfx::B2DHomMatrix const&)
cppu::AccessControl::AccessControl(com::sun::star::uno::Reference<com::sun::star::security::XAccessController> const&)
cppu::AccessControl::checkRuntimePermission(rtl::OUString const&)
cppu::AccessControl::checkSocketPermission(rtl::OUString const&, rtl::OUString const&)
cppu::BootstrapException::BootstrapException()
cppu::BootstrapException::getMessage() const
cppu::ClassData::writeTypeOffset(com::sun::star::uno::Type const&, int)
cppu::ClassDataBase::ClassDataBase()
cppu::ClassDataBase::ClassDataBase(int)
cppu::ClassDataBase::~ClassDataBase()
cppu::MappingsData::~MappingsData()
cppu::OMultiTypeInterfaceContainerHelper::clear()
cppu::OMultiTypeInterfaceContainerHelperInt32::clear()
cppu::OPropertyArrayHelper::getCount() const
cppu::OPropertySetHelper::OPropertySetHelper(cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&, bool)
cppu::UnoType<com::sun::star::beans::Optional<rtl::OUString> >::get()
cppu::createFactoryProxy(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, com::sun::star::uno::Reference<com::sun::star::lang::XSingleServiceFactory> const&)
cppu::createOneInstanceRegistryFactory(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::registry::XRegistryKey> const&)
cppu::getWeakMutex()
createApplicationServiceManager()
createDataAccessToolsFactory
create_SalInstance
dbaui::(anonymous namespace)::lcl_getObjectContainer(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, int)
dbaui::OApplicationController::LinkStubOnInvalidateClipboard(void*, void*)
dbaui::OFieldDescControl::LinkStubDelayedGrabFocus(void*, void*)
dbaui::OFieldDescGenWin::GetEditorCtrl()
dbaui::OTableDesignView::LinkStubSwitchHdl(void*, void*)
dbaui::OTableEditorCtrl::LinkStubEntryNotFound(void*, void*)
dbaui::OTableSubscriptionPage::actOnEntryPaths(_STL::vector<rtl::OUString, _STL::allocator<rtl::OUString> > const&, void (dbaui::OTableSubscriptionPage::*)(SvLBoxEntry*))
dbaui::OTableSubscriptionPage::collectEntryPaths(_STL::vector<rtl::OUString, _STL::allocator<rtl::OUString> >&, unsigned char (SvListView::*)(SvListEntry*) const)
dbaui::OTableSubscriptionPage::doExpand(SvLBoxEntry*)
dbaui::OTableSubscriptionPage::doSelect(SvLBoxEntry*)
dbaui::SbaXDataBrowserController::LinkStubOnOpenFinished(void*, void*)
dbg_dump(String const&)
dbg_dump(_rtl_String*)
dbg_dump(_rtl_uString*)
dbp::OControlWizardPage::getServiceFactory()
dbtools::CharsetIteratorDerefHelper::CharsetIteratorDerefHelper()
dbtools::DBTypeConversion::toINT64(com::sun::star::util::DateTime const&)
dbtools::DatabaseMetaData::isConnected() const
dbtools::SQLExceptionInfo::SQLExceptionInfo(com::sun::star::sdb::SQLErrorEvent const&)
dbtools::SQLExceptionInfo::isKindOf(dbtools::SQLExceptionInfo::TYPE) const
dbtools::SQLExceptionIteratorHelper::SQLExceptionIteratorHelper(com::sun::star::sdb::SQLContext const&)
dbtools::SQLExceptionIteratorHelper::SQLExceptionIteratorHelper(com::sun::star::sdbc::SQLWarning const&)
dbtools::StatementComposer::getDisposeComposer() const
debug_oustring(rtl::OUString&)
delete_stack()
desktop::CmdlineHelpDialog::CmdlineHelpDialog()
desktop::CommandLineArgs::CommandLineArgs()
desktop::CommandLineArgs::GetBoolParam(desktop::CommandLineArgs::BoolParam) const
desktop::CommandLineArgs::GetClientDisplay(rtl::OUString&) const
desktop::CommandLineArgs::GetDisplay(rtl::OUString&) const
desktop::CommandLineArgs::GetUserDir(rtl::OUString&) const
desktop::CommandLineArgs::GetVersionString(rtl::OUString&) const
desktop::CommandLineArgs::IsEmpty() const
desktop::CommandLineArgs::IsPlugin() const
desktop::CommandLineArgs::IsPrinting() const
desktop::CommandLineArgs::SetStringParam(desktop::CommandLineArgs::StringParam, rtl::OUString const&)
desktop::Desktop::AsyncTerminate(desktop::Desktop*, void*)
desktop::Desktop::EnableOleAutomation()
desktop::FatalErrorExit(rtl::OUString const&)
desktop::FirstStartWizard::defineWizardPagesDependingFromContext()
desktop::FirstStartWizard::overrideCheck(unsigned char)
desktop::IntroWindow_Impl::IntroWindow_Impl(Bitmap const&)
desktop::IntroWindow_Impl::Slide()
desktop::OfficeIPCThread::GetOfficeIPCThread()
desktop::SplashScreen::impl_getImplementationName()
desktop::SplashScreen::impl_getSupportedServiceNames()
desktop::UnxSplashScreen::impl_getImplementationName()
desktop::UnxSplashScreen::impl_getSupportedServiceNames()
displayException(com::sun::star::sdbc::SQLWarning const&, Window*)
dmapper::CellColorHandler::getProperties()
dmapper::DomainMapper_Impl::GetTopTextAppendAndConvert()
dmapper::FIB::GetData(int)
dmapper::ListTable::size() const
dmapper::SectionPropertyMap::GetPageStyleName(bool)
dmapper::SectionPropertyMap::SetPageStyleName(bool, rtl::OUString const&)
doctok::DffOPT::get_extraoffset_count()
doctok::WW8BinaryObjReference::WW8BinaryObjReference(doctok::WW8Stream&, unsigned int, unsigned int)
doctok::WW8BinaryObjReference::WW8BinaryObjReference(doctok::WW8StructBase&, unsigned int, unsigned int)
doctok::WW8DocumentImpl::getAnnotationCount() const
doctok::WW8DocumentImpl::getCpAndFc(doctok::Fc const&, doctok::PropertyType) const
doctok::WW8DocumentImpl::getEndnoteCount() const
doctok::WW8DocumentImpl::getFootnoteCount() const
doctok::WW8DocumentImpl::getPicLocation() const
doctok::WW8DocumentImpl::getTextboxEndCp() const
doctok::WW8DocumentImpl::getTextboxHeaderEndCp() const
doctok::WW8FontTable::calcPayloadOffset()
doctok::WW8LFOTable::calcPayloadOffset()
doctok::WW8ListTable::calcPayloadOffset()
doctok::WW8PropertiesHandler::compare(boost::shared_ptr<doctok::Sprm>, boost::shared_ptr<doctok::Sprm>)
doctok::WW8PropertyImpl::WW8PropertyImpl(doctok::WW8Stream&, unsigned int, unsigned int)
doctok::WW8PropertyImpl::getParamOffset() const
doctok::WW8StructBase::getBit(unsigned int, unsigned short) const
doctok::WW8StructBase::getNibble(unsigned int, unsigned short) const
doctok::WW8Sttbf::getEntryCount() const
doctok::WW8Sttbf::getExtraData(unsigned int)
doctok::WW8StyleSheet::calcPayloadOffset()
doctok::WW8StyleSheet::calcSize()
doctok::WW8sprmPChgTabsPapx::calcSize()
doctok::WW8sprmTCellBottomColor::calcSize()
doctok::WW8sprmTCellLeftColor::calcSize()
doctok::WW8sprmTCellRightColor::calcSize()
doctok::WW8sprmTCellShadow::calcSize()
doctok::WW8sprmTCellShd::calcSize()
doctok::WW8sprmTCellTopColor::calcSize()
doctok::WW8sprmTDefTableShd::calcSize()
doctok::WW8sprmTGridLineProps::calcSize()
dp_gui::DialogImpl::TreeListBoxImpl::getContext(SvLBoxEntry*) const
dp_manager::PackageManagerImpl::checkAborted(rtl::Reference<dp_misc::AbortChannel> const&)
dp_misc::(anonymous namespace)::dummy()
dp_misc::PersistentMap::flush() const
dp_misc::XmlElement::check_parsed() const
dp_misc::XmlElement::getNamespaceMapping() const
dtrans::GenericClipboard::GenericClipboard(rtl::OUString const&)
dumpEvent(com::sun::star::script::ScriptEvent const&)
dumpListeners(com::sun::star::uno::Reference<com::sun::star::beans::XIntrospection> const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
egg_tray_icon_get_orientation
egg_tray_icon_new_for_screen
egg_tray_icon_send_message
enmkallcap(char*, char const*, char const*)
enmkallsmall(char*, char const*, char const*)
enmkinitcap(char*, char const*, char const*)
err_msg(char const*, rtl::OUString const&)
evo_traceStringMessage(char const*, rtl::OUString const&)
exService_getSmartFactory
fileaccess::TaskManager::getCommandEnvironment(int)
fileaccess::TaskManager::getInteractionHandler(int)
fileaccess::TaskManager::getProgressHandler(int)
fileaccess::TaskManager::isAborted(int)
fileaccess::getResolvedURL(_rtl_uString*, _rtl_uString**)
fileaccess::makeAbsolutePath(rtl::OUString const&, rtl::OUString&)
findSofficeExecutable()
fixKeepAndSplitAttributes(SwTableNode*)
foo::OSeekableInputStreamWrapper::OSeekableInputStreamWrapper(osl::File&)
foo::OSeekableInputStreamWrapper::OSeekableInputStreamWrapper(osl::File*, unsigned char)
framework::AddonMenuManager::HasAddonHelpMenuElements()
framework::AddonsToolBarManager::LinkStubHighlight(void*, void*)
framework::AttributeListImpl::clear()
framework::BmkMenu::BmkMenu(com::sun::star::uno::Reference<com::sun::star::frame::XFrame>&, framework::BmkMenu::BmkMenuType, framework::BmkMenu*)
framework::ComplexToolbarController::executeControlCommand(com::sun::star::frame::ControlCommand const&)
framework::ConfigurationAccess_UICategory::resetCache()
framework::ConfigurationAccess_UICommand::resetCache()
framework::ConfigurationAccess_UIElementFactoryManager::getAllFactories() const
framework::Converter::convert_DateTime2String(DateTime const&)
framework::Converter::convert_OUStringHash2seqProp(framework::BaseHash<rtl::OUString> const&)
framework::Converter::convert_OUStringList2seqOUString(framework::OUStringList const&)
framework::Converter::convert_String2DateTime(rtl::OUString const&)
framework::Converter::convert_seqAny2seqProp(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
framework::Converter::convert_seqNamedVal2seqPropVal(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
framework::Converter::convert_seqProp2OUStringHash(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
framework::Converter::convert_seqProp2seqAny(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
framework::EventsConfiguration::LoadEventsConfig(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, SvStream&, framework::EventsConfig&)
framework::EventsConfiguration::StoreEventsConfig(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, SvStream&, framework::EventsConfig const&)
framework::FrameContainer::disableQuitTimer()
framework::FrameContainer::enableQuitTimer(com::sun::star::uno::Reference<com::sun::star::frame::XDesktop> const&)
framework::FrameContainer::hasElements() const
framework::GetCommandURLFromKeyCode(KeyCode const&)
framework::GetKeyCodeFromCommandURL(com::sun::star::uno::Reference<com::sun::star::frame::XFrame>&, rtl::OUString const&)
framework::GraphicNameAccess::size() const
framework::HandlerCache::exists(rtl::OUString const&) const
framework::ImageManager::hasStorage()
framework::ImagesConfiguration::LoadImages(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, SvStream&, framework::ImageListsDescriptor&)
framework::ImagesConfiguration::StoreImages(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, SvStream&, framework::ImageListsDescriptor const&)
framework::Job::getJobData()
framework::Job::getJobDataRef()
framework::JobData::getAlias() const
framework::JobData::getResult() const
framework::JobResult::getDeactivate() const
framework::JobURL::getAliasArgs(rtl::OUString&) const
framework::JobURL::getEventArgs(rtl::OUString&) const
framework::JobURL::getServiceArgs(rtl::OUString&) const
framework::License::Terminate(framework::License*, void*)
framework::LogoImageStatusbarController::LogoImageStatusbarController()
framework::LogoTextStatusbarController::LogoTextStatusbarController()
framework::MenuConfiguration::IsPickListItemId(unsigned short)
framework::MenuConfiguration::IsWindowListItemId(unsigned short)
framework::MenuDispatcher::LinkStubClose_Impl(void*, void*)
framework::MenuDispatcher::impl_sendStatusEvent(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&, unsigned char)
framework::MergeToolbarInstruction* _STL::__uninitialized_copy<framework::MergeToolbarInstruction*, framework::MergeToolbarInstruction*>(framework::MergeToolbarInstruction*, framework::MergeToolbarInstruction*, framework::MergeToolbarInstruction*, _STL::__false_type const&)
framework::OReadMenuBarHandler::getServiceFactory()
framework::OTimerHelper::OTimerHelper(vos::TTimeValue const&)
framework::PopupMenuControllerBase::setPopupMenu(com::sun::star::uno::Reference<com::sun::star::awt::XPopupMenu> const&)
framework::PopupMenuControllerBase::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
framework::PresetHandler::existsPreset(rtl::OUString const&) const
framework::PresetHandler::getAllPresetNames() const
framework::PresetHandler::getAllTargetNames() const
framework::PresetHandler::removeTarget(rtl::OUString const&)
framework::RequestAmbigousFilter::RequestAmbigousFilter(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
framework::RequestAmbigousFilter::getFilter() const
framework::RequestAmbigousFilter::isAbort() const
framework::RestrictedUIInteraction::RestrictedUIInteraction(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, int)
framework::RestrictedUIInteraction::getRequest() const
framework::RestrictedUIInteraction::wasUsed() const
framework::RootActionTriggerContainer::GetMenu()
framework::RootActionTriggerContainer::GetUnoTunnelId() const
framework::SetCommandURLFromKeyCode(rtl::OUString (*)(KeyCode const&))
framework::SetKeyCodeFromCommandURL(KeyCode (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame>&, rtl::OUString const&))
framework::SetMenuExtensionSupplier(MenuExtensionItem (*)())
framework::ShareableMutex::getShareableOslMutex()
framework::SimpleTextStatusbarController::SimpleTextStatusbarController()
framework::StatusBarConfiguration::LoadStatusBar(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, SvStream&, framework::StatusBarDescriptor&)
framework::StatusBarConfiguration::StoreStatusBar(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, SvStream&, framework::StatusBarDescriptor const&)
framework::StatusBarDescriptor::DeleteAndDestroy(unsigned short, unsigned short)
framework::StatusBarWrapper::getServiceFactory()
framework::StillInteraction::getRequest() const
framework::StillInteraction::wasUsed() const
framework::SubstituteRule::~SubstituteRule()
framework::TabWindow::impl_createFactory(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
framework::TargetFinder::classifyFindFrame(framework::TargetInfo&)
framework::TargetFinder::classifyQueryDispatch(framework::TargetInfo&)
framework::TargetHelper::classifyTarget(rtl::OUString const&)
framework::TargetInfo::TargetInfo(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&, int)
framework::TargetInfo::TargetInfo(rtl::OUString const&, int, framework::EFrameType, unsigned char, unsigned char, rtl::OUString const&, rtl::OUString const&)
framework::ToolBarManager::LinkStubHighlight(void*, void*)
framework::TransactionManager::getGlobalTransactionManager()
framework::UIConfigElementWrapperBase::dispose()
framework::UIElementWrapperBase::dispose()
framework::c_existCommand(rtl::OUString const&)
framework::constant::Filter::addFlags(int&, int)
framework::constant::Filter::areFlagsSet(int, int)
framework::constant::Filter::removeFlags(int&, int)
frm::NavigationToolBar::getDispatcher()
frm::NavigationToolBar::setItemWindowZoom(unsigned short, Window*, void const*) const
frm::OControlModel::ensureAlive()
frm::OFilterControl::getSomething(com::sun::star::uno::Sequence<signed char> const&)
frm::OFormattedModel::calcFormatKey() const
frm::OFormattedModel_CreateInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
frm::OReferenceValueComponent::setNoCheckReferenceValue(rtl::OUString const&)
frm::RichTextControl::convert(SfxPoolItem const&, com::sun::star::awt::FontDescriptor&)
frm::RichTextControl::convert(com::sun::star::awt::FontDescriptor const&, SfxPoolItem*&)
frm::RichTextControl::convertFontHeight(SfxPoolItem const&)
frm::RichTextControl::convertFontHeight(unsigned int)
frm::TypeBag::TypeBag(com::sun::star::uno::Sequence<com::sun::star::uno::Type> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Type> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Type> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Type> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Type> const&)
ftp::FTPContent::FTPContent(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, ftp::FTPContentProvider*, com::sun::star::uno::Reference<com::sun::star::ucb::XContentIdentifier> const&)
ftp::FTPDirectoryParser::parseUNKNOWN(ftp::FTPDirentry&, char const*, unsigned int)
ftp::XInteractionRequestImpl::aborted() const
ftp_passwd
ftp_write
func_provider::ActiveMSPList::getActiveProviders()
func_provider::InvocationCtxProperties::InvocationCtxProperties(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
g721_encoder(int, int, g72x_state*)
g723_24_decoder(int, int, g72x_state*)
g723_24_encoder(int, int, g72x_state*)
g723_40_decoder(int, int, g72x_state*)
g723_40_encoder(int, int, g72x_state*)
gcc3::RTTI::~RTTI()
getAllCalendars_af_NA
getAllCalendars_ak_GH
getAllCalendars_am_ET
getAllCalendars_ar_EG
getAllCalendars_ar_LB
getAllCalendars_ar_SA
getAllCalendars_ar_TN
getAllCalendars_az_AZ
getAllCalendars_be_BY
getAllCalendars_bg_BG
getAllCalendars_bn_BD
getAllCalendars_bn_IN
getAllCalendars_br_FR
getAllCalendars_bs_BA
getAllCalendars_ca_ES
getAllCalendars_cs_CZ
getAllCalendars_cv_RU
getAllCalendars_cy_GB
getAllCalendars_da_DK
getAllCalendars_de_AT
getAllCalendars_de_CH
getAllCalendars_de_LI
getAllCalendars_de_LU
getAllCalendars_dz_BT
getAllCalendars_ee_GH
getAllCalendars_el_GR
getAllCalendars_en_AU
getAllCalendars_en_BZ
getAllCalendars_en_CA
getAllCalendars_en_GB
getAllCalendars_en_GH
getAllCalendars_en_IE
getAllCalendars_en_IN
getAllCalendars_en_JM
getAllCalendars_en_NA
getAllCalendars_en_NZ
getAllCalendars_en_PH
getAllCalendars_en_TT
getAllCalendars_en_ZA
getAllCalendars_en_ZW
getAllCalendars_eo
getAllCalendars_es_BO
getAllCalendars_es_CL
getAllCalendars_es_CO
getAllCalendars_es_CR
getAllCalendars_es_DO
getAllCalendars_es_EC
getAllCalendars_es_ES
getAllCalendars_es_GT
getAllCalendars_es_HN
getAllCalendars_es_MX
getAllCalendars_es_NI
getAllCalendars_es_PA
getAllCalendars_es_PE
getAllCalendars_es_PR
getAllCalendars_es_PY
getAllCalendars_es_SV
getAllCalendars_es_UY
getAllCalendars_es_VE
getAllCalendars_et_EE
getAllCalendars_eu
getAllCalendars_fa_IR
getAllCalendars_fi_FI
getAllCalendars_fo_FO
getAllCalendars_fr_BE
getAllCalendars_fr_CA
getAllCalendars_fr_CH
getAllCalendars_fr_LU
getAllCalendars_fr_MC
getAllCalendars_fur_IT
getAllCalendars_fy_NL
getAllCalendars_ga_IE
getAllCalendars_gl_ES
getAllCalendars_gsc_FR
getAllCalendars_gu_IN
getAllCalendars_ha_GH
getAllCalendars_he_IL
getAllCalendars_hr_HR
getAllCalendars_hu_HU
getAllCalendars_hy_AM
getAllCalendars_ia
getAllCalendars_id_ID
getAllCalendars_is_IS
getAllCalendars_it_CH
getAllCalendars_ja_JP
getAllCalendars_ka_GE
getAllCalendars_kk_KZ
getAllCalendars_kl_GL
getAllCalendars_km_KH
getAllCalendars_kn_IN
getAllCalendars_ko_KR
getAllCalendars_ku_TR
getAllCalendars_ky_KG
getAllCalendars_la_VA
getAllCalendars_lb_LU
getAllCalendars_lg_UG
getAllCalendars_ln_CD
getAllCalendars_lo_LA
getAllCalendars_lt_LT
getAllCalendars_lv_LV
getAllCalendars_mk_MK
getAllCalendars_ml_IN
getAllCalendars_mn_MN
getAllCalendars_mr_IN
getAllCalendars_ms_MY
getAllCalendars_nb_NO
getAllCalendars_ne_NP
getAllCalendars_nl_BE
getAllCalendars_nn_NO
getAllCalendars_nr_ZA
getAllCalendars_nso_ZA
getAllCalendars_oc_FR
getAllCalendars_or_IN
getAllCalendars_pa_IN
getAllCalendars_pl_PL
getAllCalendars_pt_BR
getAllCalendars_ro_RO
getAllCalendars_ru_RU
getAllCalendars_rw_RW
getAllCalendars_sg_CF
getAllCalendars_sh_YU
getAllCalendars_sk_SK
getAllCalendars_sl_SI
getAllCalendars_sr_YU
getAllCalendars_ss_ZA
getAllCalendars_st_ZA
getAllCalendars_sv_FI
getAllCalendars_sv_SE
getAllCalendars_sw_TZ
getAllCalendars_ta_IN
getAllCalendars_te_IN
getAllCalendars_tg_TJ
getAllCalendars_th_TH
getAllCalendars_ti_ER
getAllCalendars_tn_ZA
getAllCalendars_tr_TR
getAllCalendars_ts_ZA
getAllCalendars_uk_UA
getAllCalendars_uz_UZ
getAllCalendars_ve_ZA
getAllCalendars_vi_VN
getAllCalendars_wa_BE
getAllCalendars_xh_ZA
getAllCalendars_zh_MO
getAllCalendars_zh_SG
getAllCalendars_zh_TW
getAllCalendars_zu_ZA
getAllCurrencies_af_NA
getAllCurrencies_af_ZA
getAllCurrencies_ak_GH
getAllCurrencies_am_ET
getAllCurrencies_ar_EG
getAllCurrencies_ar_LB
getAllCurrencies_ar_SA
getAllCurrencies_ar_TN
getAllCurrencies_az_AZ
getAllCurrencies_be_BY
getAllCurrencies_bg_BG
getAllCurrencies_bn_BD
getAllCurrencies_bn_IN
getAllCurrencies_br_FR
getAllCurrencies_bs_BA
getAllCurrencies_ca_ES
getAllCurrencies_cs_CZ
getAllCurrencies_cv_RU
getAllCurrencies_cy_GB
getAllCurrencies_da_DK
getAllCurrencies_de_AT
getAllCurrencies_de_CH
getAllCurrencies_de_DE
getAllCurrencies_de_LI
getAllCurrencies_de_LU
getAllCurrencies_dz_BT
getAllCurrencies_ee_GH
getAllCurrencies_el_GR
getAllCurrencies_en_AU
getAllCurrencies_en_BZ
getAllCurrencies_en_CA
getAllCurrencies_en_GH
getAllCurrencies_en_IE
getAllCurrencies_en_IN
getAllCurrencies_en_JM
getAllCurrencies_en_NZ
getAllCurrencies_en_PH
getAllCurrencies_en_TT
getAllCurrencies_en_US
getAllCurrencies_en_ZW
getAllCurrencies_eo
getAllCurrencies_es_AR
getAllCurrencies_es_BO
getAllCurrencies_es_CL
getAllCurrencies_es_CO
getAllCurrencies_es_CR
getAllCurrencies_es_DO
getAllCurrencies_es_EC
getAllCurrencies_es_ES
getAllCurrencies_es_GT
getAllCurrencies_es_HN
getAllCurrencies_es_MX
getAllCurrencies_es_NI
getAllCurrencies_es_PA
getAllCurrencies_es_PE
getAllCurrencies_es_PR
getAllCurrencies_es_PY
getAllCurrencies_es_SV
getAllCurrencies_es_UY
getAllCurrencies_es_VE
getAllCurrencies_et_EE
getAllCurrencies_eu
getAllCurrencies_fa_IR
getAllCurrencies_fi_FI
getAllCurrencies_fo_FO
getAllCurrencies_fr_BE
getAllCurrencies_fr_CA
getAllCurrencies_fr_CH
getAllCurrencies_fr_LU
getAllCurrencies_fr_MC
getAllCurrencies_fur_IT
getAllCurrencies_fy_NL
getAllCurrencies_ga_IE
getAllCurrencies_gl_ES
getAllCurrencies_gsc_FR
getAllCurrencies_gu_IN
getAllCurrencies_ha_GH
getAllCurrencies_he_IL
getAllCurrencies_hr_HR
getAllCurrencies_hu_HU
getAllCurrencies_hy_AM
getAllCurrencies_ia
getAllCurrencies_id_ID
getAllCurrencies_is_IS
getAllCurrencies_it_CH
getAllCurrencies_it_IT
getAllCurrencies_ja_JP
getAllCurrencies_ka_GE
getAllCurrencies_kk_KZ
getAllCurrencies_kl_GL
getAllCurrencies_km_KH
getAllCurrencies_kn_IN
getAllCurrencies_ko_KR
getAllCurrencies_ku_TR
getAllCurrencies_ky_KG
getAllCurrencies_la_VA
getAllCurrencies_lb_LU
getAllCurrencies_lg_UG
getAllCurrencies_ln_CD
getAllCurrencies_lo_LA
getAllCurrencies_lt_LT
getAllCurrencies_lv_LV
getAllCurrencies_mk_MK
getAllCurrencies_ml_IN
getAllCurrencies_mn_MN
getAllCurrencies_mr_IN
getAllCurrencies_ms_MY
getAllCurrencies_nb_NO
getAllCurrencies_ne_NP
getAllCurrencies_nl_BE
getAllCurrencies_nl_NL
getAllCurrencies_nn_NO
getAllCurrencies_nr_ZA
getAllCurrencies_nso_ZA
getAllCurrencies_oc_FR
getAllCurrencies_or_IN
getAllCurrencies_pa_IN
getAllCurrencies_pl_PL
getAllCurrencies_pt_BR
getAllCurrencies_pt_PT
getAllCurrencies_ro_RO
getAllCurrencies_ru_RU
getAllCurrencies_rw_RW
getAllCurrencies_sg_CF
getAllCurrencies_sh_YU
getAllCurrencies_sk_SK
getAllCurrencies_sl_SI
getAllCurrencies_sr_YU
getAllCurrencies_ss_ZA
getAllCurrencies_st_ZA
getAllCurrencies_sv_FI
getAllCurrencies_sv_SE
getAllCurrencies_sw_TZ
getAllCurrencies_ta_IN
getAllCurrencies_te_IN
getAllCurrencies_tg_TJ
getAllCurrencies_th_TH
getAllCurrencies_ti_ER
getAllCurrencies_tn_ZA
getAllCurrencies_tr_TR
getAllCurrencies_ts_ZA
getAllCurrencies_uk_UA
getAllCurrencies_uz_UZ
getAllCurrencies_ve_ZA
getAllCurrencies_vi_VN
getAllCurrencies_wa_BE
getAllCurrencies_xh_ZA
getAllCurrencies_zh_CN
getAllCurrencies_zh_HK
getAllCurrencies_zh_MO
getAllCurrencies_zh_SG
getAllCurrencies_zh_TW
getAllCurrencies_zu_ZA
getAllFormats0_af_NA
getAllFormats0_af_ZA
getAllFormats0_ak_GH
getAllFormats0_am_ET
getAllFormats0_ar_LB
getAllFormats0_ar_SA
getAllFormats0_ar_TN
getAllFormats0_az_AZ
getAllFormats0_be_BY
getAllFormats0_bg_BG
getAllFormats0_bn_BD
getAllFormats0_br_FR
getAllFormats0_bs_BA
getAllFormats0_ca_ES
getAllFormats0_cs_CZ
getAllFormats0_cv_RU
getAllFormats0_cy_GB
getAllFormats0_da_DK
getAllFormats0_de_AT
getAllFormats0_de_CH
getAllFormats0_de_DE
getAllFormats0_de_LI
getAllFormats0_de_LU
getAllFormats0_dz_BT
getAllFormats0_ee_GH
getAllFormats0_el_GR
getAllFormats0_en_BZ
getAllFormats0_en_CA
getAllFormats0_en_GH
getAllFormats0_en_IN
getAllFormats0_en_JM
getAllFormats0_en_NZ
getAllFormats0_en_PH
getAllFormats0_en_TT
getAllFormats0_en_ZW
getAllFormats0_eo
getAllFormats0_es_CL
getAllFormats0_es_CO
getAllFormats0_es_CR
getAllFormats0_es_EC
getAllFormats0_es_ES
getAllFormats0_es_HN
getAllFormats0_es_MX
getAllFormats0_es_NI
getAllFormats0_es_PA
getAllFormats0_es_PR
getAllFormats0_es_PY
getAllFormats0_es_SV
getAllFormats0_es_UY
getAllFormats0_es_VE
getAllFormats0_et_EE
getAllFormats0_eu
getAllFormats0_fa_IR
getAllFormats0_fi_FI
getAllFormats0_fo_FO
getAllFormats0_fr_BE
getAllFormats0_fr_CA
getAllFormats0_fr_CH
getAllFormats0_fr_LU
getAllFormats0_fr_MC
getAllFormats0_fur_IT
getAllFormats0_fy_NL
getAllFormats0_ga_IE
getAllFormats0_gl_ES
getAllFormats0_gsc_FR
getAllFormats0_gu_IN
getAllFormats0_ha_GH
getAllFormats0_he_IL
getAllFormats0_hr_HR
getAllFormats0_hu_HU
getAllFormats0_hy_AM
getAllFormats0_ia
getAllFormats0_id_ID
getAllFormats0_is_IS
getAllFormats0_it_CH
getAllFormats0_it_IT
getAllFormats0_ja_JP
getAllFormats0_ka_GE
getAllFormats0_kk_KZ
getAllFormats0_kl_GL
getAllFormats0_km_KH
getAllFormats0_kn_IN
getAllFormats0_ko_KR
getAllFormats0_ku_TR
getAllFormats0_ky_KG
getAllFormats0_la_VA
getAllFormats0_lb_LU
getAllFormats0_lg_UG
getAllFormats0_ln_CD
getAllFormats0_lo_LA
getAllFormats0_lt_LT
getAllFormats0_lv_LV
getAllFormats0_mk_MK
getAllFormats0_ml_IN
getAllFormats0_mn_MN
getAllFormats0_mr_IN
getAllFormats0_ms_MY
getAllFormats0_nb_NO
getAllFormats0_ne_NP
getAllFormats0_nl_BE
getAllFormats0_nl_NL
getAllFormats0_nn_NO
getAllFormats0_nr_ZA
getAllFormats0_nso_ZA
getAllFormats0_oc_FR
getAllFormats0_or_IN
getAllFormats0_pa_IN
getAllFormats0_pl_PL
getAllFormats0_pt_BR
getAllFormats0_pt_PT
getAllFormats0_ro_RO
getAllFormats0_ru_RU
getAllFormats0_rw_RW
getAllFormats0_sg_CF
getAllFormats0_sh_YU
getAllFormats0_sk_SK
getAllFormats0_sl_SI
getAllFormats0_ss_ZA
getAllFormats0_st_ZA
getAllFormats0_sv_FI
getAllFormats0_sv_SE
getAllFormats0_sw_TZ
getAllFormats0_ta_IN
getAllFormats0_te_IN
getAllFormats0_tg_TJ
getAllFormats0_th_TH
getAllFormats0_ti_ER
getAllFormats0_tn_ZA
getAllFormats0_tr_TR
getAllFormats0_ts_ZA
getAllFormats0_uk_UA
getAllFormats0_uz_UZ
getAllFormats0_ve_ZA
getAllFormats0_vi_VN
getAllFormats0_wa_BE
getAllFormats0_xh_ZA
getAllFormats0_zh_CN
getAllFormats0_zh_HK
getAllFormats0_zh_MO
getAllFormats0_zh_SG
getAllFormats0_zh_TW
getAllFormats0_zu_ZA
getAllFormats1_en_US
getBreakIteratorRules_af_NA
getBreakIteratorRules_ak_GH
getBreakIteratorRules_am_ET
getBreakIteratorRules_ar_LB
getBreakIteratorRules_ar_SA
getBreakIteratorRules_ar_TN
getBreakIteratorRules_az_AZ
getBreakIteratorRules_be_BY
getBreakIteratorRules_bg_BG
getBreakIteratorRules_bn_BD
getBreakIteratorRules_bn_IN
getBreakIteratorRules_br_FR
getBreakIteratorRules_bs_BA
getBreakIteratorRules_ca_ES
getBreakIteratorRules_cs_CZ
getBreakIteratorRules_cv_RU
getBreakIteratorRules_cy_GB
getBreakIteratorRules_da_DK
getBreakIteratorRules_de_AT
getBreakIteratorRules_de_CH
getBreakIteratorRules_de_LI
getBreakIteratorRules_de_LU
getBreakIteratorRules_dz_BT
getBreakIteratorRules_ee_GH
getBreakIteratorRules_el_GR
getBreakIteratorRules_en_AU
getBreakIteratorRules_en_BZ
getBreakIteratorRules_en_CA
getBreakIteratorRules_en_GH
getBreakIteratorRules_en_IE
getBreakIteratorRules_en_IN
getBreakIteratorRules_en_JM
getBreakIteratorRules_en_NA
getBreakIteratorRules_en_NZ
getBreakIteratorRules_en_PH
getBreakIteratorRules_en_TT
getBreakIteratorRules_en_ZA
getBreakIteratorRules_en_ZW
getBreakIteratorRules_eo
getBreakIteratorRules_es_AR
getBreakIteratorRules_es_BO
getBreakIteratorRules_es_CL
getBreakIteratorRules_es_CO
getBreakIteratorRules_es_CR
getBreakIteratorRules_es_DO
getBreakIteratorRules_es_EC
getBreakIteratorRules_es_GT
getBreakIteratorRules_es_HN
getBreakIteratorRules_es_MX
getBreakIteratorRules_es_NI
getBreakIteratorRules_es_PA
getBreakIteratorRules_es_PE
getBreakIteratorRules_es_PR
getBreakIteratorRules_es_PY
getBreakIteratorRules_es_SV
getBreakIteratorRules_es_UY
getBreakIteratorRules_es_VE
getBreakIteratorRules_et_EE
getBreakIteratorRules_eu
getBreakIteratorRules_fa_IR
getBreakIteratorRules_fi_FI
getBreakIteratorRules_fo_FO
getBreakIteratorRules_fr_BE
getBreakIteratorRules_fr_CA
getBreakIteratorRules_fr_CH
getBreakIteratorRules_fr_LU
getBreakIteratorRules_fr_MC
getBreakIteratorRules_fur_IT
getBreakIteratorRules_fy_NL
getBreakIteratorRules_ga_IE
getBreakIteratorRules_gl_ES
getBreakIteratorRules_gsc_FR
getBreakIteratorRules_gu_IN
getBreakIteratorRules_ha_GH
getBreakIteratorRules_he_IL
getBreakIteratorRules_hr_HR
getBreakIteratorRules_hu_HU
getBreakIteratorRules_hy_AM
getBreakIteratorRules_ia
getBreakIteratorRules_id_ID
getBreakIteratorRules_is_IS
getBreakIteratorRules_it_CH
getBreakIteratorRules_ja_JP
getBreakIteratorRules_ka_GE
getBreakIteratorRules_kk_KZ
getBreakIteratorRules_kl_GL
getBreakIteratorRules_km_KH
getBreakIteratorRules_kn_IN
getBreakIteratorRules_ko_KR
getBreakIteratorRules_ku_TR
getBreakIteratorRules_ky_KG
getBreakIteratorRules_la_VA
getBreakIteratorRules_lb_LU
getBreakIteratorRules_lg_UG
getBreakIteratorRules_ln_CD
getBreakIteratorRules_lo_LA
getBreakIteratorRules_lt_LT
getBreakIteratorRules_lv_LV
getBreakIteratorRules_mk_MK
getBreakIteratorRules_ml_IN
getBreakIteratorRules_mn_MN
getBreakIteratorRules_mr_IN
getBreakIteratorRules_ms_MY
getBreakIteratorRules_nb_NO
getBreakIteratorRules_ne_NP
getBreakIteratorRules_nl_BE
getBreakIteratorRules_nn_NO
getBreakIteratorRules_nr_ZA
getBreakIteratorRules_nso_ZA
getBreakIteratorRules_oc_FR
getBreakIteratorRules_or_IN
getBreakIteratorRules_pa_IN
getBreakIteratorRules_pl_PL
getBreakIteratorRules_pt_BR
getBreakIteratorRules_ro_RO
getBreakIteratorRules_ru_RU
getBreakIteratorRules_rw_RW
getBreakIteratorRules_sg_CF
getBreakIteratorRules_sh_YU
getBreakIteratorRules_sk_SK
getBreakIteratorRules_sl_SI
getBreakIteratorRules_sr_YU
getBreakIteratorRules_ss_ZA
getBreakIteratorRules_st_ZA
getBreakIteratorRules_sv_FI
getBreakIteratorRules_sw_TZ
getBreakIteratorRules_ta_IN
getBreakIteratorRules_te_IN
getBreakIteratorRules_tg_TJ
getBreakIteratorRules_th_TH
getBreakIteratorRules_ti_ER
getBreakIteratorRules_tn_ZA
getBreakIteratorRules_tr_TR
getBreakIteratorRules_ts_ZA
getBreakIteratorRules_uk_UA
getBreakIteratorRules_uz_UZ
getBreakIteratorRules_ve_ZA
getBreakIteratorRules_vi_VN
getBreakIteratorRules_wa_BE
getBreakIteratorRules_xh_ZA
getBreakIteratorRules_zh_HK
getBreakIteratorRules_zh_MO
getBreakIteratorRules_zh_SG
getBreakIteratorRules_zu_ZA
getCollationOptions_af_NA
getCollationOptions_af_ZA
getCollationOptions_ak_GH
getCollationOptions_am_ET
getCollationOptions_ar_EG
getCollationOptions_ar_LB
getCollationOptions_ar_SA
getCollationOptions_ar_TN
getCollationOptions_az_AZ
getCollationOptions_be_BY
getCollationOptions_bg_BG
getCollationOptions_bn_BD
getCollationOptions_bn_IN
getCollationOptions_br_FR
getCollationOptions_bs_BA
getCollationOptions_ca_ES
getCollationOptions_cs_CZ
getCollationOptions_cv_RU
getCollationOptions_cy_GB
getCollationOptions_da_DK
getCollationOptions_de_AT
getCollationOptions_de_CH
getCollationOptions_de_LI
getCollationOptions_de_LU
getCollationOptions_dz_BT
getCollationOptions_ee_GH
getCollationOptions_el_GR
getCollationOptions_en_AU
getCollationOptions_en_BZ
getCollationOptions_en_CA
getCollationOptions_en_GH
getCollationOptions_en_IN
getCollationOptions_en_JM
getCollationOptions_en_NA
getCollationOptions_en_NZ
getCollationOptions_en_PH
getCollationOptions_en_TT
getCollationOptions_en_ZA
getCollationOptions_en_ZW
getCollationOptions_eo
getCollationOptions_es_AR
getCollationOptions_es_BO
getCollationOptions_es_CL
getCollationOptions_es_CO
getCollationOptions_es_CR
getCollationOptions_es_DO
getCollationOptions_es_EC
getCollationOptions_es_ES
getCollationOptions_es_GT
getCollationOptions_es_HN
getCollationOptions_es_MX
getCollationOptions_es_NI
getCollationOptions_es_PA
getCollationOptions_es_PE
getCollationOptions_es_PR
getCollationOptions_es_PY
getCollationOptions_es_SV
getCollationOptions_es_UY
getCollationOptions_es_VE
getCollationOptions_et_EE
getCollationOptions_eu
getCollationOptions_fa_IR
getCollationOptions_fi_FI
getCollationOptions_fo_FO
getCollationOptions_fr_CA
getCollationOptions_fr_CH
getCollationOptions_fr_LU
getCollationOptions_fr_MC
getCollationOptions_fur_IT
getCollationOptions_fy_NL
getCollationOptions_ga_IE
getCollationOptions_gl_ES
getCollationOptions_gsc_FR
getCollationOptions_gu_IN
getCollationOptions_ha_GH
getCollationOptions_he_IL
getCollationOptions_hr_HR
getCollationOptions_hu_HU
getCollationOptions_hy_AM
getCollationOptions_ia
getCollationOptions_id_ID
getCollationOptions_is_IS
getCollationOptions_it_CH
getCollationOptions_it_IT
getCollationOptions_ja_JP
getCollationOptions_ka_GE
getCollationOptions_kk_KZ
getCollationOptions_kl_GL
getCollationOptions_km_KH
getCollationOptions_kn_IN
getCollationOptions_ko_KR
getCollationOptions_ku_TR
getCollationOptions_ky_KG
getCollationOptions_la_VA
getCollationOptions_lb_LU
getCollationOptions_lg_UG
getCollationOptions_ln_CD
getCollationOptions_lo_LA
getCollationOptions_lt_LT
getCollationOptions_lv_LV
getCollationOptions_mk_MK
getCollationOptions_ml_IN
getCollationOptions_mn_MN
getCollationOptions_mr_IN
getCollationOptions_ms_MY
getCollationOptions_nb_NO
getCollationOptions_ne_NP
getCollationOptions_nl_BE
getCollationOptions_nl_NL
getCollationOptions_nn_NO
getCollationOptions_nr_ZA
getCollationOptions_nso_ZA
getCollationOptions_oc_FR
getCollationOptions_or_IN
getCollationOptions_pa_IN
getCollationOptions_pl_PL
getCollationOptions_pt_BR
getCollationOptions_pt_PT
getCollationOptions_ro_RO
getCollationOptions_ru_RU
getCollationOptions_rw_RW
getCollationOptions_sg_CF
getCollationOptions_sh_YU
getCollationOptions_sk_SK
getCollationOptions_sl_SI
getCollationOptions_sr_YU
getCollationOptions_ss_ZA
getCollationOptions_st_ZA
getCollationOptions_sv_FI
getCollationOptions_sv_SE
getCollationOptions_sw_TZ
getCollationOptions_ta_IN
getCollationOptions_te_IN
getCollationOptions_tg_TJ
getCollationOptions_th_TH
getCollationOptions_ti_ER
getCollationOptions_tn_ZA
getCollationOptions_tr_TR
getCollationOptions_ts_ZA
getCollationOptions_uk_UA
getCollationOptions_uz_UZ
getCollationOptions_ve_ZA
getCollationOptions_vi_VN
getCollationOptions_wa_BE
getCollationOptions_xh_ZA
getCollationOptions_zh_MO
getCollationOptions_zh_SG
getCollationOptions_zh_TW
getCollationOptions_zu_ZA
getCollatorImplementation_af_NA
getCollatorImplementation_af_ZA
getCollatorImplementation_ak_GH
getCollatorImplementation_am_ET
getCollatorImplementation_ar_EG
getCollatorImplementation_ar_LB
getCollatorImplementation_ar_SA
getCollatorImplementation_ar_TN
getCollatorImplementation_az_AZ
getCollatorImplementation_be_BY
getCollatorImplementation_bg_BG
getCollatorImplementation_bn_BD
getCollatorImplementation_bn_IN
getCollatorImplementation_br_FR
getCollatorImplementation_bs_BA
getCollatorImplementation_ca_ES
getCollatorImplementation_cs_CZ
getCollatorImplementation_cv_RU
getCollatorImplementation_cy_GB
getCollatorImplementation_da_DK
getCollatorImplementation_de_AT
getCollatorImplementation_de_CH
getCollatorImplementation_de_LI
getCollatorImplementation_de_LU
getCollatorImplementation_dz_BT
getCollatorImplementation_ee_GH
getCollatorImplementation_el_GR
getCollatorImplementation_en_AU
getCollatorImplementation_en_BZ
getCollatorImplementation_en_CA
getCollatorImplementation_en_GH
getCollatorImplementation_en_IN
getCollatorImplementation_en_JM
getCollatorImplementation_en_NA
getCollatorImplementation_en_NZ
getCollatorImplementation_en_PH
getCollatorImplementation_en_TT
getCollatorImplementation_en_ZA
getCollatorImplementation_en_ZW
getCollatorImplementation_eo
getCollatorImplementation_es_AR
getCollatorImplementation_es_BO
getCollatorImplementation_es_CL
getCollatorImplementation_es_CO
getCollatorImplementation_es_CR
getCollatorImplementation_es_DO
getCollatorImplementation_es_EC
getCollatorImplementation_es_ES
getCollatorImplementation_es_GT
getCollatorImplementation_es_HN
getCollatorImplementation_es_MX
getCollatorImplementation_es_NI
getCollatorImplementation_es_PA
getCollatorImplementation_es_PE
getCollatorImplementation_es_PR
getCollatorImplementation_es_PY
getCollatorImplementation_es_SV
getCollatorImplementation_es_UY
getCollatorImplementation_es_VE
getCollatorImplementation_et_EE
getCollatorImplementation_eu
getCollatorImplementation_fa_IR
getCollatorImplementation_fi_FI
getCollatorImplementation_fo_FO
getCollatorImplementation_fr_CA
getCollatorImplementation_fr_CH
getCollatorImplementation_fr_LU
getCollatorImplementation_fr_MC
getCollatorImplementation_fur_IT
getCollatorImplementation_fy_NL
getCollatorImplementation_ga_IE
getCollatorImplementation_gl_ES
getCollatorImplementation_gsc_FR
getCollatorImplementation_gu_IN
getCollatorImplementation_ha_GH
getCollatorImplementation_he_IL
getCollatorImplementation_hr_HR
getCollatorImplementation_hu_HU
getCollatorImplementation_hy_AM
getCollatorImplementation_ia
getCollatorImplementation_id_ID
getCollatorImplementation_is_IS
getCollatorImplementation_it_CH
getCollatorImplementation_it_IT
getCollatorImplementation_ja_JP
getCollatorImplementation_ka_GE
getCollatorImplementation_kk_KZ
getCollatorImplementation_kl_GL
getCollatorImplementation_km_KH
getCollatorImplementation_kn_IN
getCollatorImplementation_ko_KR
getCollatorImplementation_ku_TR
getCollatorImplementation_ky_KG
getCollatorImplementation_la_VA
getCollatorImplementation_lb_LU
getCollatorImplementation_lg_UG
getCollatorImplementation_ln_CD
getCollatorImplementation_lo_LA
getCollatorImplementation_lt_LT
getCollatorImplementation_lv_LV
getCollatorImplementation_mk_MK
getCollatorImplementation_ml_IN
getCollatorImplementation_mn_MN
getCollatorImplementation_mr_IN
getCollatorImplementation_ms_MY
getCollatorImplementation_nb_NO
getCollatorImplementation_ne_NP
getCollatorImplementation_nl_BE
getCollatorImplementation_nl_NL
getCollatorImplementation_nn_NO
getCollatorImplementation_nr_ZA
getCollatorImplementation_nso_ZA
getCollatorImplementation_oc_FR
getCollatorImplementation_or_IN
getCollatorImplementation_pa_IN
getCollatorImplementation_pl_PL
getCollatorImplementation_pt_BR
getCollatorImplementation_pt_PT
getCollatorImplementation_ro_RO
getCollatorImplementation_ru_RU
getCollatorImplementation_rw_RW
getCollatorImplementation_sg_CF
getCollatorImplementation_sh_YU
getCollatorImplementation_sk_SK
getCollatorImplementation_sl_SI
getCollatorImplementation_sr_YU
getCollatorImplementation_ss_ZA
getCollatorImplementation_st_ZA
getCollatorImplementation_sv_FI
getCollatorImplementation_sv_SE
getCollatorImplementation_sw_TZ
getCollatorImplementation_ta_IN
getCollatorImplementation_te_IN
getCollatorImplementation_tg_TJ
getCollatorImplementation_th_TH
getCollatorImplementation_ti_ER
getCollatorImplementation_tn_ZA
getCollatorImplementation_tr_TR
getCollatorImplementation_ts_ZA
getCollatorImplementation_uk_UA
getCollatorImplementation_uz_UZ
getCollatorImplementation_ve_ZA
getCollatorImplementation_vi_VN
getCollatorImplementation_wa_BE
getCollatorImplementation_xh_ZA
getCollatorImplementation_zh_MO
getCollatorImplementation_zh_SG
getCollatorImplementation_zh_TW
getCollatorImplementation_zu_ZA
getContinuousNumberingLevels_af_NA
getContinuousNumberingLevels_af_ZA
getContinuousNumberingLevels_ak_GH
getContinuousNumberingLevels_am_ET
getContinuousNumberingLevels_ar_LB
getContinuousNumberingLevels_ar_SA
getContinuousNumberingLevels_ar_TN
getContinuousNumberingLevels_az_AZ
getContinuousNumberingLevels_be_BY
getContinuousNumberingLevels_bg_BG
getContinuousNumberingLevels_bn_BD
getContinuousNumberingLevels_br_FR
getContinuousNumberingLevels_bs_BA
getContinuousNumberingLevels_ca_ES
getContinuousNumberingLevels_cs_CZ
getContinuousNumberingLevels_cv_RU
getContinuousNumberingLevels_cy_GB
getContinuousNumberingLevels_da_DK
getContinuousNumberingLevels_de_AT
getContinuousNumberingLevels_de_CH
getContinuousNumberingLevels_de_DE
getContinuousNumberingLevels_de_LI
getContinuousNumberingLevels_de_LU
getContinuousNumberingLevels_dz_BT
getContinuousNumberingLevels_ee_GH
getContinuousNumberingLevels_el_GR
getContinuousNumberingLevels_en_AU
getContinuousNumberingLevels_en_BZ
getContinuousNumberingLevels_en_CA
getContinuousNumberingLevels_en_GH
getContinuousNumberingLevels_en_IN
getContinuousNumberingLevels_en_JM
getContinuousNumberingLevels_en_NA
getContinuousNumberingLevels_en_NZ
getContinuousNumberingLevels_en_PH
getContinuousNumberingLevels_en_TT
getContinuousNumberingLevels_en_ZA
getContinuousNumberingLevels_en_ZW
getContinuousNumberingLevels_eo
getContinuousNumberingLevels_es_AR
getContinuousNumberingLevels_es_BO
getContinuousNumberingLevels_es_CL
getContinuousNumberingLevels_es_CO
getContinuousNumberingLevels_es_CR
getContinuousNumberingLevels_es_DO
getContinuousNumberingLevels_es_EC
getContinuousNumberingLevels_es_ES
getContinuousNumberingLevels_es_GT
getContinuousNumberingLevels_es_HN
getContinuousNumberingLevels_es_MX
getContinuousNumberingLevels_es_NI
getContinuousNumberingLevels_es_PA
getContinuousNumberingLevels_es_PE
getContinuousNumberingLevels_es_PR
getContinuousNumberingLevels_es_PY
getContinuousNumberingLevels_es_SV
getContinuousNumberingLevels_es_UY
getContinuousNumberingLevels_es_VE
getContinuousNumberingLevels_et_EE
getContinuousNumberingLevels_eu
getContinuousNumberingLevels_fa_IR
getContinuousNumberingLevels_fi_FI
getContinuousNumberingLevels_fo_FO
getContinuousNumberingLevels_fr_CA
getContinuousNumberingLevels_fr_CH
getContinuousNumberingLevels_fr_FR
getContinuousNumberingLevels_fr_LU
getContinuousNumberingLevels_fr_MC
getContinuousNumberingLevels_fur_IT
getContinuousNumberingLevels_fy_NL
getContinuousNumberingLevels_ga_IE
getContinuousNumberingLevels_gl_ES
getContinuousNumberingLevels_gsc_FR
getContinuousNumberingLevels_gu_IN
getContinuousNumberingLevels_ha_GH
getContinuousNumberingLevels_he_IL
getContinuousNumberingLevels_hr_HR
getContinuousNumberingLevels_hu_HU
getContinuousNumberingLevels_hy_AM
getContinuousNumberingLevels_ia
getContinuousNumberingLevels_id_ID
getContinuousNumberingLevels_is_IS
getContinuousNumberingLevels_it_CH
getContinuousNumberingLevels_it_IT
getContinuousNumberingLevels_ja_JP
getContinuousNumberingLevels_ka_GE
getContinuousNumberingLevels_kk_KZ
getContinuousNumberingLevels_kl_GL
getContinuousNumberingLevels_km_KH
getContinuousNumberingLevels_kn_IN
getContinuousNumberingLevels_ko_KR
getContinuousNumberingLevels_ku_TR
getContinuousNumberingLevels_ky_KG
getContinuousNumberingLevels_la_VA
getContinuousNumberingLevels_lb_LU
getContinuousNumberingLevels_lg_UG
getContinuousNumberingLevels_ln_CD
getContinuousNumberingLevels_lo_LA
getContinuousNumberingLevels_lt_LT
getContinuousNumberingLevels_lv_LV
getContinuousNumberingLevels_mk_MK
getContinuousNumberingLevels_ml_IN
getContinuousNumberingLevels_mn_MN
getContinuousNumberingLevels_mr_IN
getContinuousNumberingLevels_ms_MY
getContinuousNumberingLevels_nb_NO
getContinuousNumberingLevels_ne_NP
getContinuousNumberingLevels_nl_BE
getContinuousNumberingLevels_nl_NL
getContinuousNumberingLevels_nn_NO
getContinuousNumberingLevels_nr_ZA
getContinuousNumberingLevels_nso_ZA
getContinuousNumberingLevels_oc_FR
getContinuousNumberingLevels_or_IN
getContinuousNumberingLevels_pa_IN
getContinuousNumberingLevels_pl_PL
getContinuousNumberingLevels_pt_BR
getContinuousNumberingLevels_pt_PT
getContinuousNumberingLevels_ro_RO
getContinuousNumberingLevels_ru_RU
getContinuousNumberingLevels_rw_RW
getContinuousNumberingLevels_sg_CF
getContinuousNumberingLevels_sh_YU
getContinuousNumberingLevels_sk_SK
getContinuousNumberingLevels_sl_SI
getContinuousNumberingLevels_sr_YU
getContinuousNumberingLevels_ss_ZA
getContinuousNumberingLevels_st_ZA
getContinuousNumberingLevels_sv_FI
getContinuousNumberingLevels_sv_SE
getContinuousNumberingLevels_sw_TZ
getContinuousNumberingLevels_ta_IN
getContinuousNumberingLevels_te_IN
getContinuousNumberingLevels_tg_TJ
getContinuousNumberingLevels_th_TH
getContinuousNumberingLevels_ti_ER
getContinuousNumberingLevels_tn_ZA
getContinuousNumberingLevels_tr_TR
getContinuousNumberingLevels_ts_ZA
getContinuousNumberingLevels_uk_UA
getContinuousNumberingLevels_uz_UZ
getContinuousNumberingLevels_ve_ZA
getContinuousNumberingLevels_vi_VN
getContinuousNumberingLevels_wa_BE
getContinuousNumberingLevels_xh_ZA
getContinuousNumberingLevels_zh_HK
getContinuousNumberingLevels_zh_MO
getContinuousNumberingLevels_zh_SG
getContinuousNumberingLevels_zu_ZA
getDataArea
getElementFromAccessPath(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, String const&)
getExistMark
getFollowPageWords_af_NA
getFollowPageWords_ak_GH
getFollowPageWords_am_ET
getFollowPageWords_ar_LB
getFollowPageWords_ar_SA
getFollowPageWords_ar_TN
getFollowPageWords_az_AZ
getFollowPageWords_be_BY
getFollowPageWords_bg_BG
getFollowPageWords_bn_BD
getFollowPageWords_bn_IN
getFollowPageWords_br_FR
getFollowPageWords_bs_BA
getFollowPageWords_ca_ES
getFollowPageWords_cs_CZ
getFollowPageWords_cv_RU
getFollowPageWords_cy_GB
getFollowPageWords_da_DK
getFollowPageWords_de_AT
getFollowPageWords_de_CH
getFollowPageWords_de_LI
getFollowPageWords_de_LU
getFollowPageWords_dz_BT
getFollowPageWords_ee_GH
getFollowPageWords_el_GR
getFollowPageWords_en_AU
getFollowPageWords_en_BZ
getFollowPageWords_en_CA
getFollowPageWords_en_GB
getFollowPageWords_en_GH
getFollowPageWords_en_IE
getFollowPageWords_en_IN
getFollowPageWords_en_JM
getFollowPageWords_en_NA
getFollowPageWords_en_NZ
getFollowPageWords_en_PH
getFollowPageWords_en_TT
getFollowPageWords_en_ZA
getFollowPageWords_en_ZW
getFollowPageWords_eo
getFollowPageWords_es_AR
getFollowPageWords_es_BO
getFollowPageWords_es_CL
getFollowPageWords_es_CO
getFollowPageWords_es_CR
getFollowPageWords_es_DO
getFollowPageWords_es_EC
getFollowPageWords_es_GT
getFollowPageWords_es_HN
getFollowPageWords_es_MX
getFollowPageWords_es_NI
getFollowPageWords_es_PA
getFollowPageWords_es_PE
getFollowPageWords_es_PR
getFollowPageWords_es_PY
getFollowPageWords_es_SV
getFollowPageWords_es_UY
getFollowPageWords_es_VE
getFollowPageWords_et_EE
getFollowPageWords_eu
getFollowPageWords_fa_IR
getFollowPageWords_fi_FI
getFollowPageWords_fo_FO
getFollowPageWords_fr_BE
getFollowPageWords_fr_CA
getFollowPageWords_fr_CH
getFollowPageWords_fr_LU
getFollowPageWords_fr_MC
getFollowPageWords_fur_IT
getFollowPageWords_fy_NL
getFollowPageWords_ga_IE
getFollowPageWords_gl_ES
getFollowPageWords_gsc_FR
getFollowPageWords_gu_IN
getFollowPageWords_ha_GH
getFollowPageWords_he_IL
getFollowPageWords_hi_IN
getFollowPageWords_hr_HR
getFollowPageWords_hu_HU
getFollowPageWords_hy_AM
getFollowPageWords_ia
getFollowPageWords_id_ID
getFollowPageWords_is_IS
getFollowPageWords_it_CH
getFollowPageWords_it_IT
getFollowPageWords_ja_JP
getFollowPageWords_ka_GE
getFollowPageWords_kk_KZ
getFollowPageWords_kl_GL
getFollowPageWords_km_KH
getFollowPageWords_kn_IN
getFollowPageWords_ko_KR
getFollowPageWords_ku_TR
getFollowPageWords_ky_KG
getFollowPageWords_la_VA
getFollowPageWords_lb_LU
getFollowPageWords_lg_UG
getFollowPageWords_ln_CD
getFollowPageWords_lo_LA
getFollowPageWords_lt_LT
getFollowPageWords_lv_LV
getFollowPageWords_mk_MK
getFollowPageWords_ml_IN
getFollowPageWords_mn_MN
getFollowPageWords_mr_IN
getFollowPageWords_ms_MY
getFollowPageWords_nb_NO
getFollowPageWords_ne_NP
getFollowPageWords_nl_BE
getFollowPageWords_nl_NL
getFollowPageWords_nn_NO
getFollowPageWords_nr_ZA
getFollowPageWords_nso_ZA
getFollowPageWords_oc_FR
getFollowPageWords_or_IN
getFollowPageWords_pa_IN
getFollowPageWords_pl_PL
getFollowPageWords_pt_BR
getFollowPageWords_pt_PT
getFollowPageWords_ro_RO
getFollowPageWords_ru_RU
getFollowPageWords_rw_RW
getFollowPageWords_sg_CF
getFollowPageWords_sh_YU
getFollowPageWords_sk_SK
getFollowPageWords_sl_SI
getFollowPageWords_sr_YU
getFollowPageWords_ss_ZA
getFollowPageWords_st_ZA
getFollowPageWords_sv_FI
getFollowPageWords_sw_TZ
getFollowPageWords_ta_IN
getFollowPageWords_te_IN
getFollowPageWords_tg_TJ
getFollowPageWords_th_TH
getFollowPageWords_ti_ER
getFollowPageWords_tn_ZA
getFollowPageWords_tr_TR
getFollowPageWords_ts_ZA
getFollowPageWords_uk_UA
getFollowPageWords_uz_UZ
getFollowPageWords_ve_ZA
getFollowPageWords_vi_VN
getFollowPageWords_wa_BE
getFollowPageWords_xh_ZA
getFollowPageWords_zh_HK
getFollowPageWords_zh_MO
getFollowPageWords_zh_SG
getFollowPageWords_zu_ZA
getForbiddenCharacters_af_NA
getForbiddenCharacters_ak_GH
getForbiddenCharacters_am_ET
getForbiddenCharacters_ar_LB
getForbiddenCharacters_ar_SA
getForbiddenCharacters_ar_TN
getForbiddenCharacters_az_AZ
getForbiddenCharacters_be_BY
getForbiddenCharacters_bg_BG
getForbiddenCharacters_bn_BD
getForbiddenCharacters_bn_IN
getForbiddenCharacters_br_FR
getForbiddenCharacters_bs_BA
getForbiddenCharacters_ca_ES
getForbiddenCharacters_cs_CZ
getForbiddenCharacters_cv_RU
getForbiddenCharacters_cy_GB
getForbiddenCharacters_da_DK
getForbiddenCharacters_de_AT
getForbiddenCharacters_de_CH
getForbiddenCharacters_de_LI
getForbiddenCharacters_de_LU
getForbiddenCharacters_dz_BT
getForbiddenCharacters_ee_GH
getForbiddenCharacters_el_GR
getForbiddenCharacters_en_AU
getForbiddenCharacters_en_BZ
getForbiddenCharacters_en_CA
getForbiddenCharacters_en_GH
getForbiddenCharacters_en_IE
getForbiddenCharacters_en_IN
getForbiddenCharacters_en_JM
getForbiddenCharacters_en_NA
getForbiddenCharacters_en_NZ
getForbiddenCharacters_en_PH
getForbiddenCharacters_en_TT
getForbiddenCharacters_en_ZA
getForbiddenCharacters_en_ZW
getForbiddenCharacters_eo
getForbiddenCharacters_es_AR
getForbiddenCharacters_es_BO
getForbiddenCharacters_es_CL
getForbiddenCharacters_es_CO
getForbiddenCharacters_es_CR
getForbiddenCharacters_es_DO
getForbiddenCharacters_es_EC
getForbiddenCharacters_es_GT
getForbiddenCharacters_es_HN
getForbiddenCharacters_es_MX
getForbiddenCharacters_es_NI
getForbiddenCharacters_es_PA
getForbiddenCharacters_es_PE
getForbiddenCharacters_es_PR
getForbiddenCharacters_es_PY
getForbiddenCharacters_es_SV
getForbiddenCharacters_es_UY
getForbiddenCharacters_es_VE
getForbiddenCharacters_et_EE
getForbiddenCharacters_eu
getForbiddenCharacters_fa_IR
getForbiddenCharacters_fi_FI
getForbiddenCharacters_fo_FO
getForbiddenCharacters_fr_BE
getForbiddenCharacters_fr_CA
getForbiddenCharacters_fr_CH
getForbiddenCharacters_fr_LU
getForbiddenCharacters_fr_MC
getForbiddenCharacters_fur_IT
getForbiddenCharacters_fy_NL
getForbiddenCharacters_ga_IE
getForbiddenCharacters_gl_ES
getForbiddenCharacters_gsc_FR
getForbiddenCharacters_gu_IN
getForbiddenCharacters_ha_GH
getForbiddenCharacters_he_IL
getForbiddenCharacters_hr_HR
getForbiddenCharacters_hu_HU
getForbiddenCharacters_hy_AM
getForbiddenCharacters_ia
getForbiddenCharacters_id_ID
getForbiddenCharacters_is_IS
getForbiddenCharacters_it_CH
getForbiddenCharacters_ja_JP
getForbiddenCharacters_ka_GE
getForbiddenCharacters_kk_KZ
getForbiddenCharacters_kl_GL
getForbiddenCharacters_km_KH
getForbiddenCharacters_kn_IN
getForbiddenCharacters_ko_KR
getForbiddenCharacters_ku_TR
getForbiddenCharacters_ky_KG
getForbiddenCharacters_la_VA
getForbiddenCharacters_lb_LU
getForbiddenCharacters_lg_UG
getForbiddenCharacters_ln_CD
getForbiddenCharacters_lo_LA
getForbiddenCharacters_lt_LT
getForbiddenCharacters_lv_LV
getForbiddenCharacters_mk_MK
getForbiddenCharacters_ml_IN
getForbiddenCharacters_mn_MN
getForbiddenCharacters_mr_IN
getForbiddenCharacters_ms_MY
getForbiddenCharacters_nb_NO
getForbiddenCharacters_ne_NP
getForbiddenCharacters_nl_BE
getForbiddenCharacters_nn_NO
getForbiddenCharacters_nr_ZA
getForbiddenCharacters_nso_ZA
getForbiddenCharacters_oc_FR
getForbiddenCharacters_or_IN
getForbiddenCharacters_pa_IN
getForbiddenCharacters_pl_PL
getForbiddenCharacters_pt_BR
getForbiddenCharacters_ro_RO
getForbiddenCharacters_ru_RU
getForbiddenCharacters_rw_RW
getForbiddenCharacters_sg_CF
getForbiddenCharacters_sh_YU
getForbiddenCharacters_sk_SK
getForbiddenCharacters_sl_SI
getForbiddenCharacters_sr_YU
getForbiddenCharacters_ss_ZA
getForbiddenCharacters_st_ZA
getForbiddenCharacters_sv_FI
getForbiddenCharacters_sw_TZ
getForbiddenCharacters_ta_IN
getForbiddenCharacters_te_IN
getForbiddenCharacters_tg_TJ
getForbiddenCharacters_th_TH
getForbiddenCharacters_ti_ER
getForbiddenCharacters_tn_ZA
getForbiddenCharacters_tr_TR
getForbiddenCharacters_ts_ZA
getForbiddenCharacters_uk_UA
getForbiddenCharacters_uz_UZ
getForbiddenCharacters_ve_ZA
getForbiddenCharacters_vi_VN
getForbiddenCharacters_wa_BE
getForbiddenCharacters_xh_ZA
getForbiddenCharacters_zh_HK
getForbiddenCharacters_zh_MO
getForbiddenCharacters_zh_SG
getForbiddenCharacters_zu_ZA
getFormComponentAccessPath(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
getHangul2HanjaData
getHangul2HanjaIndex
getHangul2HanjaIndexCount
getHanja2HangulData
getHanja2HangulIndex
getIndex1
getIndex2
getIndexAlgorithm_af_NA
getIndexAlgorithm_ak_GH
getIndexAlgorithm_am_ET
getIndexAlgorithm_ar_LB
getIndexAlgorithm_ar_SA
getIndexAlgorithm_ar_TN
getIndexAlgorithm_az_AZ
getIndexAlgorithm_be_BY
getIndexAlgorithm_bg_BG
getIndexAlgorithm_bn_BD
getIndexAlgorithm_bn_IN
getIndexAlgorithm_br_FR
getIndexAlgorithm_bs_BA
getIndexAlgorithm_ca_ES
getIndexAlgorithm_cs_CZ
getIndexAlgorithm_cv_RU
getIndexAlgorithm_cy_GB
getIndexAlgorithm_da_DK
getIndexAlgorithm_de_AT
getIndexAlgorithm_de_CH
getIndexAlgorithm_de_LI
getIndexAlgorithm_de_LU
getIndexAlgorithm_dz_BT
getIndexAlgorithm_ee_GH
getIndexAlgorithm_el_GR
getIndexAlgorithm_en_AU
getIndexAlgorithm_en_BZ
getIndexAlgorithm_en_CA
getIndexAlgorithm_en_GB
getIndexAlgorithm_en_GH
getIndexAlgorithm_en_IE
getIndexAlgorithm_en_IN
getIndexAlgorithm_en_JM
getIndexAlgorithm_en_NA
getIndexAlgorithm_en_NZ
getIndexAlgorithm_en_PH
getIndexAlgorithm_en_TT
getIndexAlgorithm_en_ZA
getIndexAlgorithm_en_ZW
getIndexAlgorithm_eo
getIndexAlgorithm_es_AR
getIndexAlgorithm_es_BO
getIndexAlgorithm_es_CL
getIndexAlgorithm_es_CO
getIndexAlgorithm_es_CR
getIndexAlgorithm_es_DO
getIndexAlgorithm_es_EC
getIndexAlgorithm_es_GT
getIndexAlgorithm_es_HN
getIndexAlgorithm_es_MX
getIndexAlgorithm_es_NI
getIndexAlgorithm_es_PA
getIndexAlgorithm_es_PE
getIndexAlgorithm_es_PR
getIndexAlgorithm_es_PY
getIndexAlgorithm_es_SV
getIndexAlgorithm_es_UY
getIndexAlgorithm_es_VE
getIndexAlgorithm_et_EE
getIndexAlgorithm_eu
getIndexAlgorithm_fa_IR
getIndexAlgorithm_fi_FI
getIndexAlgorithm_fo_FO
getIndexAlgorithm_fr_BE
getIndexAlgorithm_fr_CA
getIndexAlgorithm_fr_CH
getIndexAlgorithm_fr_LU
getIndexAlgorithm_fr_MC
getIndexAlgorithm_fur_IT
getIndexAlgorithm_fy_NL
getIndexAlgorithm_ga_IE
getIndexAlgorithm_gl_ES
getIndexAlgorithm_gsc_FR
getIndexAlgorithm_gu_IN
getIndexAlgorithm_ha_GH
getIndexAlgorithm_he_IL
getIndexAlgorithm_hi_IN
getIndexAlgorithm_hr_HR
getIndexAlgorithm_hu_HU
getIndexAlgorithm_hy_AM
getIndexAlgorithm_ia
getIndexAlgorithm_id_ID
getIndexAlgorithm_is_IS
getIndexAlgorithm_it_CH
getIndexAlgorithm_it_IT
getIndexAlgorithm_ja_JP
getIndexAlgorithm_ka_GE
getIndexAlgorithm_kk_KZ
getIndexAlgorithm_kl_GL
getIndexAlgorithm_km_KH
getIndexAlgorithm_kn_IN
getIndexAlgorithm_ko_KR
getIndexAlgorithm_ku_TR
getIndexAlgorithm_ky_KG
getIndexAlgorithm_la_VA
getIndexAlgorithm_lb_LU
getIndexAlgorithm_lg_UG
getIndexAlgorithm_ln_CD
getIndexAlgorithm_lo_LA
getIndexAlgorithm_lt_LT
getIndexAlgorithm_lv_LV
getIndexAlgorithm_mk_MK
getIndexAlgorithm_ml_IN
getIndexAlgorithm_mn_MN
getIndexAlgorithm_mr_IN
getIndexAlgorithm_ms_MY
getIndexAlgorithm_nb_NO
getIndexAlgorithm_ne_NP
getIndexAlgorithm_nl_BE
getIndexAlgorithm_nl_NL
getIndexAlgorithm_nn_NO
getIndexAlgorithm_nr_ZA
getIndexAlgorithm_nso_ZA
getIndexAlgorithm_oc_FR
getIndexAlgorithm_or_IN
getIndexAlgorithm_pa_IN
getIndexAlgorithm_pl_PL
getIndexAlgorithm_pt_BR
getIndexAlgorithm_pt_PT
getIndexAlgorithm_ro_RO
getIndexAlgorithm_ru_RU
getIndexAlgorithm_rw_RW
getIndexAlgorithm_sg_CF
getIndexAlgorithm_sh_YU
getIndexAlgorithm_sk_SK
getIndexAlgorithm_sl_SI
getIndexAlgorithm_sr_YU
getIndexAlgorithm_ss_ZA
getIndexAlgorithm_st_ZA
getIndexAlgorithm_sv_FI
getIndexAlgorithm_sw_TZ
getIndexAlgorithm_ta_IN
getIndexAlgorithm_te_IN
getIndexAlgorithm_tg_TJ
getIndexAlgorithm_th_TH
getIndexAlgorithm_ti_ER
getIndexAlgorithm_tn_ZA
getIndexAlgorithm_tr_TR
getIndexAlgorithm_ts_ZA
getIndexAlgorithm_uk_UA
getIndexAlgorithm_uz_UZ
getIndexAlgorithm_ve_ZA
getIndexAlgorithm_vi_VN
getIndexAlgorithm_wa_BE
getIndexAlgorithm_xh_ZA
getIndexAlgorithm_zh_HK
getIndexAlgorithm_zh_MO
getIndexAlgorithm_zh_SG
getIndexAlgorithm_zu_ZA
getLCInfo_af_NA
getLCInfo_af_ZA
getLCInfo_ak_GH
getLCInfo_am_ET
getLCInfo_ar_EG
getLCInfo_ar_LB
getLCInfo_ar_SA
getLCInfo_ar_TN
getLCInfo_az_AZ
getLCInfo_be_BY
getLCInfo_bg_BG
getLCInfo_bn_BD
getLCInfo_bn_IN
getLCInfo_br_FR
getLCInfo_bs_BA
getLCInfo_ca_ES
getLCInfo_cs_CZ
getLCInfo_cv_RU
getLCInfo_cy_GB
getLCInfo_da_DK
getLCInfo_de_AT
getLCInfo_de_CH
getLCInfo_de_DE
getLCInfo_de_LI
getLCInfo_de_LU
getLCInfo_dz_BT
getLCInfo_ee_GH
getLCInfo_el_GR
getLCInfo_en_AU
getLCInfo_en_BZ
getLCInfo_en_CA
getLCInfo_en_GB
getLCInfo_en_GH
getLCInfo_en_IE
getLCInfo_en_IN
getLCInfo_en_JM
getLCInfo_en_NA
getLCInfo_en_NZ
getLCInfo_en_PH
getLCInfo_en_TT
getLCInfo_en_US
getLCInfo_en_ZA
getLCInfo_en_ZW
getLCInfo_eo
getLCInfo_es_AR
getLCInfo_es_BO
getLCInfo_es_CL
getLCInfo_es_CO
getLCInfo_es_CR
getLCInfo_es_DO
getLCInfo_es_EC
getLCInfo_es_ES
getLCInfo_es_GT
getLCInfo_es_HN
getLCInfo_es_MX
getLCInfo_es_NI
getLCInfo_es_PA
getLCInfo_es_PE
getLCInfo_es_PR
getLCInfo_es_PY
getLCInfo_es_SV
getLCInfo_es_UY
getLCInfo_es_VE
getLCInfo_et_EE
getLCInfo_eu
getLCInfo_fa_IR
getLCInfo_fi_FI
getLCInfo_fo_FO
getLCInfo_fr_BE
getLCInfo_fr_CA
getLCInfo_fr_CH
getLCInfo_fr_FR
getLCInfo_fr_LU
getLCInfo_fr_MC
getLCInfo_fur_IT
getLCInfo_fy_NL
getLCInfo_ga_IE
getLCInfo_gl_ES
getLCInfo_gsc_FR
getLCInfo_gu_IN
getLCInfo_ha_GH
getLCInfo_he_IL
getLCInfo_hi_IN
getLCInfo_hr_HR
getLCInfo_hu_HU
getLCInfo_hy_AM
getLCInfo_ia
getLCInfo_id_ID
getLCInfo_is_IS
getLCInfo_it_CH
getLCInfo_it_IT
getLCInfo_ja_JP
getLCInfo_ka_GE
getLCInfo_kk_KZ
getLCInfo_kl_GL
getLCInfo_km_KH
getLCInfo_kn_IN
getLCInfo_ko_KR
getLCInfo_ku_TR
getLCInfo_ky_KG
getLCInfo_la_VA
getLCInfo_lb_LU
getLCInfo_lg_UG
getLCInfo_ln_CD
getLCInfo_lo_LA
getLCInfo_lt_LT
getLCInfo_lv_LV
getLCInfo_mk_MK
getLCInfo_ml_IN
getLCInfo_mn_MN
getLCInfo_mr_IN
getLCInfo_ms_MY
getLCInfo_nb_NO
getLCInfo_ne_NP
getLCInfo_nl_BE
getLCInfo_nl_NL
getLCInfo_nn_NO
getLCInfo_no_NO
getLCInfo_nr_ZA
getLCInfo_nso_ZA
getLCInfo_oc_FR
getLCInfo_or_IN
getLCInfo_pa_IN
getLCInfo_pl_PL
getLCInfo_pt_BR
getLCInfo_pt_PT
getLCInfo_ro_RO
getLCInfo_ru_RU
getLCInfo_rw_RW
getLCInfo_sg_CF
getLCInfo_sh_YU
getLCInfo_sk_SK
getLCInfo_sl_SI
getLCInfo_sr_YU
getLCInfo_ss_ZA
getLCInfo_st_ZA
getLCInfo_sv_FI
getLCInfo_sv_SE
getLCInfo_sw_TZ
getLCInfo_ta_IN
getLCInfo_te_IN
getLCInfo_tg_TJ
getLCInfo_th_TH
getLCInfo_ti_ER
getLCInfo_tn_ZA
getLCInfo_tr_TR
getLCInfo_ts_ZA
getLCInfo_uk_UA
getLCInfo_uz_UZ
getLCInfo_ve_ZA
getLCInfo_vi_VN
getLCInfo_wa_BE
getLCInfo_xh_ZA
getLCInfo_zh_CN
getLCInfo_zh_HK
getLCInfo_zh_MO
getLCInfo_zh_SG
getLCInfo_zh_TW
getLCInfo_zu_ZA
getLenArray
getLocaleItem_af_NA
getLocaleItem_ak_GH
getLocaleItem_am_ET
getLocaleItem_ar_EG
getLocaleItem_ar_LB
getLocaleItem_ar_SA
getLocaleItem_ar_TN
getLocaleItem_az_AZ
getLocaleItem_be_BY
getLocaleItem_bg_BG
getLocaleItem_bn_BD
getLocaleItem_br_FR
getLocaleItem_bs_BA
getLocaleItem_ca_ES
getLocaleItem_cs_CZ
getLocaleItem_cv_RU
getLocaleItem_cy_GB
getLocaleItem_da_DK
getLocaleItem_de_AT
getLocaleItem_de_CH
getLocaleItem_de_DE
getLocaleItem_de_LI
getLocaleItem_de_LU
getLocaleItem_dz_BT
getLocaleItem_ee_GH
getLocaleItem_el_GR
getLocaleItem_en_AU
getLocaleItem_en_BZ
getLocaleItem_en_GH
getLocaleItem_en_IN
getLocaleItem_en_JM
getLocaleItem_en_NA
getLocaleItem_en_NZ
getLocaleItem_en_PH
getLocaleItem_en_TT
getLocaleItem_en_US
getLocaleItem_en_ZW
getLocaleItem_eo
getLocaleItem_es_AR
getLocaleItem_es_BO
getLocaleItem_es_CL
getLocaleItem_es_CO
getLocaleItem_es_CR
getLocaleItem_es_EC
getLocaleItem_es_GT
getLocaleItem_es_HN
getLocaleItem_es_MX
getLocaleItem_es_PA
getLocaleItem_es_PR
getLocaleItem_es_SV
getLocaleItem_es_UY
getLocaleItem_es_VE
getLocaleItem_et_EE
getLocaleItem_eu
getLocaleItem_fa_IR
getLocaleItem_fi_FI
getLocaleItem_fo_FO
getLocaleItem_fr_BE
getLocaleItem_fr_CA
getLocaleItem_fr_CH
getLocaleItem_fr_LU
getLocaleItem_fr_MC
getLocaleItem_fur_IT
getLocaleItem_fy_NL
getLocaleItem_ga_IE
getLocaleItem_gl_ES
getLocaleItem_gsc_FR
getLocaleItem_gu_IN
getLocaleItem_ha_GH
getLocaleItem_he_IL
getLocaleItem_hr_HR
getLocaleItem_hu_HU
getLocaleItem_hy_AM
getLocaleItem_ia
getLocaleItem_id_ID
getLocaleItem_is_IS
getLocaleItem_it_CH
getLocaleItem_it_IT
getLocaleItem_ja_JP
getLocaleItem_ka_GE
getLocaleItem_kk_KZ
getLocaleItem_kl_GL
getLocaleItem_km_KH
getLocaleItem_kn_IN
getLocaleItem_ko_KR
getLocaleItem_ku_TR
getLocaleItem_ky_KG
getLocaleItem_la_VA
getLocaleItem_lb_LU
getLocaleItem_lg_UG
getLocaleItem_ln_CD
getLocaleItem_lo_LA
getLocaleItem_lt_LT
getLocaleItem_lv_LV
getLocaleItem_mk_MK
getLocaleItem_ml_IN
getLocaleItem_mn_MN
getLocaleItem_mr_IN
getLocaleItem_ms_MY
getLocaleItem_nb_NO
getLocaleItem_ne_NP
getLocaleItem_nl_BE
getLocaleItem_nl_NL
getLocaleItem_nn_NO
getLocaleItem_nr_ZA
getLocaleItem_nso_ZA
getLocaleItem_oc_FR
getLocaleItem_or_IN
getLocaleItem_pa_IN
getLocaleItem_pl_PL
getLocaleItem_pt_BR
getLocaleItem_pt_PT
getLocaleItem_ro_RO
getLocaleItem_ru_RU
getLocaleItem_rw_RW
getLocaleItem_sg_CF
getLocaleItem_sh_YU
getLocaleItem_sk_SK
getLocaleItem_sl_SI
getLocaleItem_sr_YU
getLocaleItem_ss_ZA
getLocaleItem_st_ZA
getLocaleItem_sv_FI
getLocaleItem_sv_SE
getLocaleItem_sw_TZ
getLocaleItem_ta_IN
getLocaleItem_te_IN
getLocaleItem_tg_TJ
getLocaleItem_th_TH
getLocaleItem_ti_ER
getLocaleItem_tn_ZA
getLocaleItem_tr_TR
getLocaleItem_ts_ZA
getLocaleItem_uk_UA
getLocaleItem_uz_UZ
getLocaleItem_ve_ZA
getLocaleItem_vi_VN
getLocaleItem_wa_BE
getLocaleItem_xh_ZA
getLocaleItem_zh_HK
getLocaleItem_zh_MO
getLocaleItem_zh_SG
getLocaleItem_zu_ZA
getOutlineNumberingLevels_af_NA
getOutlineNumberingLevels_af_ZA
getOutlineNumberingLevels_ak_GH
getOutlineNumberingLevels_am_ET
getOutlineNumberingLevels_ar_LB
getOutlineNumberingLevels_ar_SA
getOutlineNumberingLevels_ar_TN
getOutlineNumberingLevels_az_AZ
getOutlineNumberingLevels_be_BY
getOutlineNumberingLevels_bg_BG
getOutlineNumberingLevels_bn_BD
getOutlineNumberingLevels_bn_IN
getOutlineNumberingLevels_br_FR
getOutlineNumberingLevels_bs_BA
getOutlineNumberingLevels_ca_ES
getOutlineNumberingLevels_cs_CZ
getOutlineNumberingLevels_cv_RU
getOutlineNumberingLevels_cy_GB
getOutlineNumberingLevels_da_DK
getOutlineNumberingLevels_de_AT
getOutlineNumberingLevels_de_CH
getOutlineNumberingLevels_de_DE
getOutlineNumberingLevels_de_LI
getOutlineNumberingLevels_de_LU
getOutlineNumberingLevels_dz_BT
getOutlineNumberingLevels_ee_GH
getOutlineNumberingLevels_el_GR
getOutlineNumberingLevels_en_AU
getOutlineNumberingLevels_en_BZ
getOutlineNumberingLevels_en_CA
getOutlineNumberingLevels_en_GH
getOutlineNumberingLevels_en_IN
getOutlineNumberingLevels_en_JM
getOutlineNumberingLevels_en_NA
getOutlineNumberingLevels_en_NZ
getOutlineNumberingLevels_en_PH
getOutlineNumberingLevels_en_TT
getOutlineNumberingLevels_en_ZA
getOutlineNumberingLevels_en_ZW
getOutlineNumberingLevels_eo
getOutlineNumberingLevels_es_AR
getOutlineNumberingLevels_es_BO
getOutlineNumberingLevels_es_CL
getOutlineNumberingLevels_es_CO
getOutlineNumberingLevels_es_CR
getOutlineNumberingLevels_es_DO
getOutlineNumberingLevels_es_EC
getOutlineNumberingLevels_es_ES
getOutlineNumberingLevels_es_GT
getOutlineNumberingLevels_es_HN
getOutlineNumberingLevels_es_MX
getOutlineNumberingLevels_es_NI
getOutlineNumberingLevels_es_PA
getOutlineNumberingLevels_es_PE
getOutlineNumberingLevels_es_PR
getOutlineNumberingLevels_es_PY
getOutlineNumberingLevels_es_SV
getOutlineNumberingLevels_es_UY
getOutlineNumberingLevels_es_VE
getOutlineNumberingLevels_et_EE
getOutlineNumberingLevels_eu
getOutlineNumberingLevels_fa_IR
getOutlineNumberingLevels_fi_FI
getOutlineNumberingLevels_fo_FO
getOutlineNumberingLevels_fr_CA
getOutlineNumberingLevels_fr_CH
getOutlineNumberingLevels_fr_FR
getOutlineNumberingLevels_fr_LU
getOutlineNumberingLevels_fr_MC
getOutlineNumberingLevels_fur_IT
getOutlineNumberingLevels_fy_NL
getOutlineNumberingLevels_ga_IE
getOutlineNumberingLevels_gl_ES
getOutlineNumberingLevels_gsc_FR
getOutlineNumberingLevels_gu_IN
getOutlineNumberingLevels_ha_GH
getOutlineNumberingLevels_he_IL
getOutlineNumberingLevels_hr_HR
getOutlineNumberingLevels_hu_HU
getOutlineNumberingLevels_hy_AM
getOutlineNumberingLevels_ia
getOutlineNumberingLevels_id_ID
getOutlineNumberingLevels_is_IS
getOutlineNumberingLevels_it_CH
getOutlineNumberingLevels_it_IT
getOutlineNumberingLevels_ja_JP
getOutlineNumberingLevels_ka_GE
getOutlineNumberingLevels_kk_KZ
getOutlineNumberingLevels_kl_GL
getOutlineNumberingLevels_km_KH
getOutlineNumberingLevels_kn_IN
getOutlineNumberingLevels_ko_KR
getOutlineNumberingLevels_ku_TR
getOutlineNumberingLevels_ky_KG
getOutlineNumberingLevels_la_VA
getOutlineNumberingLevels_lb_LU
getOutlineNumberingLevels_lg_UG
getOutlineNumberingLevels_ln_CD
getOutlineNumberingLevels_lo_LA
getOutlineNumberingLevels_lt_LT
getOutlineNumberingLevels_lv_LV
getOutlineNumberingLevels_mk_MK
getOutlineNumberingLevels_ml_IN
getOutlineNumberingLevels_mn_MN
getOutlineNumberingLevels_mr_IN
getOutlineNumberingLevels_ms_MY
getOutlineNumberingLevels_nb_NO
getOutlineNumberingLevels_ne_NP
getOutlineNumberingLevels_nl_BE
getOutlineNumberingLevels_nl_NL
getOutlineNumberingLevels_nn_NO
getOutlineNumberingLevels_nr_ZA
getOutlineNumberingLevels_nso_ZA
getOutlineNumberingLevels_oc_FR
getOutlineNumberingLevels_or_IN
getOutlineNumberingLevels_pa_IN
getOutlineNumberingLevels_pl_PL
getOutlineNumberingLevels_pt_BR
getOutlineNumberingLevels_pt_PT
getOutlineNumberingLevels_ro_RO
getOutlineNumberingLevels_ru_RU
getOutlineNumberingLevels_rw_RW
getOutlineNumberingLevels_sg_CF
getOutlineNumberingLevels_sh_YU
getOutlineNumberingLevels_sk_SK
getOutlineNumberingLevels_sl_SI
getOutlineNumberingLevels_sr_YU
getOutlineNumberingLevels_ss_ZA
getOutlineNumberingLevels_st_ZA
getOutlineNumberingLevels_sv_FI
getOutlineNumberingLevels_sv_SE
getOutlineNumberingLevels_sw_TZ
getOutlineNumberingLevels_ta_IN
getOutlineNumberingLevels_te_IN
getOutlineNumberingLevels_tg_TJ
getOutlineNumberingLevels_th_TH
getOutlineNumberingLevels_ti_ER
getOutlineNumberingLevels_tn_ZA
getOutlineNumberingLevels_tr_TR
getOutlineNumberingLevels_ts_ZA
getOutlineNumberingLevels_uk_UA
getOutlineNumberingLevels_uz_UZ
getOutlineNumberingLevels_ve_ZA
getOutlineNumberingLevels_vi_VN
getOutlineNumberingLevels_wa_BE
getOutlineNumberingLevels_xh_ZA
getOutlineNumberingLevels_zh_HK
getOutlineNumberingLevels_zh_MO
getOutlineNumberingLevels_zh_SG
getOutlineNumberingLevels_zu_ZA
getReservedWords_af_NA
getReservedWords_ak_GH
getReservedWords_am_ET
getReservedWords_ar_LB
getReservedWords_ar_SA
getReservedWords_ar_TN
getReservedWords_az_AZ
getReservedWords_be_BY
getReservedWords_bg_BG
getReservedWords_bn_BD
getReservedWords_bn_IN
getReservedWords_br_FR
getReservedWords_bs_BA
getReservedWords_ca_ES
getReservedWords_cs_CZ
getReservedWords_cv_RU
getReservedWords_cy_GB
getReservedWords_da_DK
getReservedWords_de_AT
getReservedWords_de_CH
getReservedWords_de_LI
getReservedWords_de_LU
getReservedWords_dz_BT
getReservedWords_ee_GH
getReservedWords_el_GR
getReservedWords_en_AU
getReservedWords_en_BZ
getReservedWords_en_CA
getReservedWords_en_GH
getReservedWords_en_IE
getReservedWords_en_IN
getReservedWords_en_JM
getReservedWords_en_NA
getReservedWords_en_NZ
getReservedWords_en_PH
getReservedWords_en_TT
getReservedWords_en_ZA
getReservedWords_en_ZW
getReservedWords_eo
getReservedWords_es_AR
getReservedWords_es_BO
getReservedWords_es_CL
getReservedWords_es_CO
getReservedWords_es_CR
getReservedWords_es_DO
getReservedWords_es_EC
getReservedWords_es_GT
getReservedWords_es_HN
getReservedWords_es_MX
getReservedWords_es_NI
getReservedWords_es_PA
getReservedWords_es_PE
getReservedWords_es_PR
getReservedWords_es_PY
getReservedWords_es_SV
getReservedWords_es_UY
getReservedWords_es_VE
getReservedWords_et_EE
getReservedWords_eu
getReservedWords_fa_IR
getReservedWords_fi_FI
getReservedWords_fo_FO
getReservedWords_fr_BE
getReservedWords_fr_CA
getReservedWords_fr_CH
getReservedWords_fr_LU
getReservedWords_fr_MC
getReservedWords_fur_IT
getReservedWords_fy_NL
getReservedWords_ga_IE
getReservedWords_gl_ES
getReservedWords_gsc_FR
getReservedWords_gu_IN
getReservedWords_ha_GH
getReservedWords_he_IL
getReservedWords_hr_HR
getReservedWords_hu_HU
getReservedWords_hy_AM
getReservedWords_ia
getReservedWords_id_ID
getReservedWords_is_IS
getReservedWords_it_CH
getReservedWords_ja_JP
getReservedWords_ka_GE
getReservedWords_kk_KZ
getReservedWords_kl_GL
getReservedWords_km_KH
getReservedWords_kn_IN
getReservedWords_ko_KR
getReservedWords_ku_TR
getReservedWords_ky_KG
getReservedWords_la_VA
getReservedWords_lb_LU
getReservedWords_lg_UG
getReservedWords_ln_CD
getReservedWords_lo_LA
getReservedWords_lt_LT
getReservedWords_lv_LV
getReservedWords_mk_MK
getReservedWords_ml_IN
getReservedWords_mn_MN
getReservedWords_mr_IN
getReservedWords_ms_MY
getReservedWords_nb_NO
getReservedWords_ne_NP
getReservedWords_nl_BE
getReservedWords_nn_NO
getReservedWords_nr_ZA
getReservedWords_nso_ZA
getReservedWords_oc_FR
getReservedWords_or_IN
getReservedWords_pa_IN
getReservedWords_pl_PL
getReservedWords_pt_BR
getReservedWords_ro_RO
getReservedWords_ru_RU
getReservedWords_rw_RW
getReservedWords_sg_CF
getReservedWords_sh_YU
getReservedWords_sk_SK
getReservedWords_sl_SI
getReservedWords_sr_YU
getReservedWords_ss_ZA
getReservedWords_st_ZA
getReservedWords_sv_FI
getReservedWords_sw_TZ
getReservedWords_ta_IN
getReservedWords_te_IN
getReservedWords_tg_TJ
getReservedWords_th_TH
getReservedWords_ti_ER
getReservedWords_tn_ZA
getReservedWords_tr_TR
getReservedWords_ts_ZA
getReservedWords_uk_UA
getReservedWords_uz_UZ
getReservedWords_ve_ZA
getReservedWords_vi_VN
getReservedWords_wa_BE
getReservedWords_xh_ZA
getReservedWords_zh_HK
getReservedWords_zh_MO
getReservedWords_zh_SG
getReservedWords_zu_ZA
getSTC_CharData_S2T
getSTC_CharData_S2V
getSTC_CharData_T2S
getSTC_CharIndex_S2T
getSTC_CharIndex_S2V
getSTC_CharIndex_T2S
getSTC_WordData
getSTC_WordEntry_S2T
getSTC_WordEntry_T2S
getSTC_WordIndex_S2T
getSTC_WordIndex_T2S
getSearchOptions_af_NA
getSearchOptions_af_ZA
getSearchOptions_ak_GH
getSearchOptions_am_ET
getSearchOptions_ar_EG
getSearchOptions_ar_LB
getSearchOptions_ar_SA
getSearchOptions_ar_TN
getSearchOptions_az_AZ
getSearchOptions_be_BY
getSearchOptions_bg_BG
getSearchOptions_bn_BD
getSearchOptions_bn_IN
getSearchOptions_br_FR
getSearchOptions_bs_BA
getSearchOptions_ca_ES
getSearchOptions_cs_CZ
getSearchOptions_cv_RU
getSearchOptions_cy_GB
getSearchOptions_da_DK
getSearchOptions_de_AT
getSearchOptions_de_CH
getSearchOptions_de_DE
getSearchOptions_de_LI
getSearchOptions_de_LU
getSearchOptions_dz_BT
getSearchOptions_ee_GH
getSearchOptions_el_GR
getSearchOptions_en_AU
getSearchOptions_en_BZ
getSearchOptions_en_CA
getSearchOptions_en_GH
getSearchOptions_en_IN
getSearchOptions_en_JM
getSearchOptions_en_NA
getSearchOptions_en_NZ
getSearchOptions_en_PH
getSearchOptions_en_TT
getSearchOptions_en_ZA
getSearchOptions_en_ZW
getSearchOptions_eo
getSearchOptions_es_AR
getSearchOptions_es_BO
getSearchOptions_es_CL
getSearchOptions_es_CO
getSearchOptions_es_CR
getSearchOptions_es_DO
getSearchOptions_es_EC
getSearchOptions_es_ES
getSearchOptions_es_GT
getSearchOptions_es_HN
getSearchOptions_es_MX
getSearchOptions_es_NI
getSearchOptions_es_PA
getSearchOptions_es_PE
getSearchOptions_es_PR
getSearchOptions_es_PY
getSearchOptions_es_SV
getSearchOptions_es_UY
getSearchOptions_es_VE
getSearchOptions_et_EE
getSearchOptions_eu
getSearchOptions_fa_IR
getSearchOptions_fi_FI
getSearchOptions_fo_FO
getSearchOptions_fr_CA
getSearchOptions_fr_CH
getSearchOptions_fr_FR
getSearchOptions_fr_LU
getSearchOptions_fr_MC
getSearchOptions_fur_IT
getSearchOptions_fy_NL
getSearchOptions_ga_IE
getSearchOptions_gl_ES
getSearchOptions_gsc_FR
getSearchOptions_gu_IN
getSearchOptions_ha_GH
getSearchOptions_he_IL
getSearchOptions_hr_HR
getSearchOptions_hu_HU
getSearchOptions_hy_AM
getSearchOptions_ia
getSearchOptions_id_ID
getSearchOptions_is_IS
getSearchOptions_it_CH
getSearchOptions_it_IT
getSearchOptions_ja_JP
getSearchOptions_ka_GE
getSearchOptions_kk_KZ
getSearchOptions_kl_GL
getSearchOptions_km_KH
getSearchOptions_kn_IN
getSearchOptions_ko_KR
getSearchOptions_ku_TR
getSearchOptions_ky_KG
getSearchOptions_la_VA
getSearchOptions_lb_LU
getSearchOptions_lg_UG
getSearchOptions_ln_CD
getSearchOptions_lo_LA
getSearchOptions_lt_LT
getSearchOptions_lv_LV
getSearchOptions_mk_MK
getSearchOptions_ml_IN
getSearchOptions_mn_MN
getSearchOptions_mr_IN
getSearchOptions_ms_MY
getSearchOptions_nb_NO
getSearchOptions_ne_NP
getSearchOptions_nl_BE
getSearchOptions_nl_NL
getSearchOptions_nn_NO
getSearchOptions_nr_ZA
getSearchOptions_nso_ZA
getSearchOptions_oc_FR
getSearchOptions_or_IN
getSearchOptions_pa_IN
getSearchOptions_pl_PL
getSearchOptions_pt_BR
getSearchOptions_pt_PT
getSearchOptions_ro_RO
getSearchOptions_ru_RU
getSearchOptions_rw_RW
getSearchOptions_sg_CF
getSearchOptions_sh_YU
getSearchOptions_sk_SK
getSearchOptions_sl_SI
getSearchOptions_sr_YU
getSearchOptions_ss_ZA
getSearchOptions_st_ZA
getSearchOptions_sv_FI
getSearchOptions_sv_SE
getSearchOptions_sw_TZ
getSearchOptions_ta_IN
getSearchOptions_te_IN
getSearchOptions_tg_TJ
getSearchOptions_th_TH
getSearchOptions_ti_ER
getSearchOptions_tn_ZA
getSearchOptions_tr_TR
getSearchOptions_ts_ZA
getSearchOptions_uk_UA
getSearchOptions_uz_UZ
getSearchOptions_ve_ZA
getSearchOptions_vi_VN
getSearchOptions_wa_BE
getSearchOptions_xh_ZA
getSearchOptions_zh_HK
getSearchOptions_zh_MO
getSearchOptions_zh_SG
getSearchOptions_zh_TW
getSearchOptions_zu_ZA
getSimpleTokenizer()
getStandardAccessibleFactory
getStaticTypes()
getSvtAccessibilityComponentFactory
getSystemPathFromFileURL(rtl::OUString const&)
getTempName()
getTransliterations_af_NA
getTransliterations_af_ZA
getTransliterations_ak_GH
getTransliterations_am_ET
getTransliterations_ar_EG
getTransliterations_ar_LB
getTransliterations_ar_SA
getTransliterations_ar_TN
getTransliterations_az_AZ
getTransliterations_be_BY
getTransliterations_bg_BG
getTransliterations_bn_BD
getTransliterations_bn_IN
getTransliterations_br_FR
getTransliterations_bs_BA
getTransliterations_ca_ES
getTransliterations_cs_CZ
getTransliterations_cv_RU
getTransliterations_cy_GB
getTransliterations_da_DK
getTransliterations_de_AT
getTransliterations_de_CH
getTransliterations_de_DE
getTransliterations_de_LI
getTransliterations_de_LU
getTransliterations_dz_BT
getTransliterations_ee_GH
getTransliterations_el_GR
getTransliterations_en_AU
getTransliterations_en_BZ
getTransliterations_en_CA
getTransliterations_en_GH
getTransliterations_en_IN
getTransliterations_en_JM
getTransliterations_en_NA
getTransliterations_en_NZ
getTransliterations_en_PH
getTransliterations_en_TT
getTransliterations_en_ZA
getTransliterations_en_ZW
getTransliterations_eo
getTransliterations_es_AR
getTransliterations_es_BO
getTransliterations_es_CL
getTransliterations_es_CO
getTransliterations_es_CR
getTransliterations_es_DO
getTransliterations_es_EC
getTransliterations_es_ES
getTransliterations_es_GT
getTransliterations_es_HN
getTransliterations_es_MX
getTransliterations_es_NI
getTransliterations_es_PA
getTransliterations_es_PE
getTransliterations_es_PR
getTransliterations_es_PY
getTransliterations_es_SV
getTransliterations_es_UY
getTransliterations_es_VE
getTransliterations_et_EE
getTransliterations_eu
getTransliterations_fa_IR
getTransliterations_fi_FI
getTransliterations_fo_FO
getTransliterations_fr_CA
getTransliterations_fr_CH
getTransliterations_fr_FR
getTransliterations_fr_LU
getTransliterations_fr_MC
getTransliterations_fur_IT
getTransliterations_fy_NL
getTransliterations_ga_IE
getTransliterations_gl_ES
getTransliterations_gsc_FR
getTransliterations_gu_IN
getTransliterations_ha_GH
getTransliterations_he_IL
getTransliterations_hi_IN
getTransliterations_hr_HR
getTransliterations_hu_HU
getTransliterations_hy_AM
getTransliterations_ia
getTransliterations_id_ID
getTransliterations_is_IS
getTransliterations_it_CH
getTransliterations_it_IT
getTransliterations_ja_JP
getTransliterations_ka_GE
getTransliterations_kk_KZ
getTransliterations_kl_GL
getTransliterations_km_KH
getTransliterations_kn_IN
getTransliterations_ko_KR
getTransliterations_ku_TR
getTransliterations_ky_KG
getTransliterations_la_VA
getTransliterations_lb_LU
getTransliterations_lg_UG
getTransliterations_ln_CD
getTransliterations_lo_LA
getTransliterations_lt_LT
getTransliterations_lv_LV
getTransliterations_mk_MK
getTransliterations_ml_IN
getTransliterations_mn_MN
getTransliterations_mr_IN
getTransliterations_ms_MY
getTransliterations_nb_NO
getTransliterations_ne_NP
getTransliterations_nl_BE
getTransliterations_nl_NL
getTransliterations_nn_NO
getTransliterations_nr_ZA
getTransliterations_nso_ZA
getTransliterations_oc_FR
getTransliterations_or_IN
getTransliterations_pa_IN
getTransliterations_pl_PL
getTransliterations_pt_BR
getTransliterations_pt_PT
getTransliterations_ro_RO
getTransliterations_ru_RU
getTransliterations_rw_RW
getTransliterations_sg_CF
getTransliterations_sh_YU
getTransliterations_sk_SK
getTransliterations_sl_SI
getTransliterations_sr_YU
getTransliterations_ss_ZA
getTransliterations_st_ZA
getTransliterations_sv_FI
getTransliterations_sv_SE
getTransliterations_sw_TZ
getTransliterations_ta_IN
getTransliterations_te_IN
getTransliterations_tg_TJ
getTransliterations_th_TH
getTransliterations_ti_ER
getTransliterations_tn_ZA
getTransliterations_tr_TR
getTransliterations_ts_ZA
getTransliterations_uk_UA
getTransliterations_uz_UZ
getTransliterations_ve_ZA
getTransliterations_vi_VN
getTransliterations_wa_BE
getTransliterations_xh_ZA
getTransliterations_zh_HK
getTransliterations_zh_MO
getTransliterations_zh_SG
getTransliterations_zu_ZA
getUnicodeScripts_af_NA
getUnicodeScripts_ak_GH
getUnicodeScripts_am_ET
getUnicodeScripts_ar_LB
getUnicodeScripts_ar_SA
getUnicodeScripts_ar_TN
getUnicodeScripts_az_AZ
getUnicodeScripts_be_BY
getUnicodeScripts_bg_BG
getUnicodeScripts_bn_BD
getUnicodeScripts_bn_IN
getUnicodeScripts_br_FR
getUnicodeScripts_bs_BA
getUnicodeScripts_ca_ES
getUnicodeScripts_cs_CZ
getUnicodeScripts_cv_RU
getUnicodeScripts_cy_GB
getUnicodeScripts_da_DK
getUnicodeScripts_de_AT
getUnicodeScripts_de_CH
getUnicodeScripts_de_LI
getUnicodeScripts_de_LU
getUnicodeScripts_dz_BT
getUnicodeScripts_ee_GH
getUnicodeScripts_el_GR
getUnicodeScripts_en_AU
getUnicodeScripts_en_BZ
getUnicodeScripts_en_CA
getUnicodeScripts_en_GB
getUnicodeScripts_en_GH
getUnicodeScripts_en_IE
getUnicodeScripts_en_IN
getUnicodeScripts_en_JM
getUnicodeScripts_en_NA
getUnicodeScripts_en_NZ
getUnicodeScripts_en_PH
getUnicodeScripts_en_TT
getUnicodeScripts_en_ZA
getUnicodeScripts_en_ZW
getUnicodeScripts_eo
getUnicodeScripts_es_AR
getUnicodeScripts_es_BO
getUnicodeScripts_es_CL
getUnicodeScripts_es_CO
getUnicodeScripts_es_CR
getUnicodeScripts_es_DO
getUnicodeScripts_es_EC
getUnicodeScripts_es_GT
getUnicodeScripts_es_HN
getUnicodeScripts_es_MX
getUnicodeScripts_es_NI
getUnicodeScripts_es_PA
getUnicodeScripts_es_PE
getUnicodeScripts_es_PR
getUnicodeScripts_es_PY
getUnicodeScripts_es_SV
getUnicodeScripts_es_UY
getUnicodeScripts_es_VE
getUnicodeScripts_et_EE
getUnicodeScripts_eu
getUnicodeScripts_fa_IR
getUnicodeScripts_fi_FI
getUnicodeScripts_fo_FO
getUnicodeScripts_fr_BE
getUnicodeScripts_fr_CA
getUnicodeScripts_fr_CH
getUnicodeScripts_fr_LU
getUnicodeScripts_fr_MC
getUnicodeScripts_fur_IT
getUnicodeScripts_fy_NL
getUnicodeScripts_ga_IE
getUnicodeScripts_gl_ES
getUnicodeScripts_gsc_FR
getUnicodeScripts_gu_IN
getUnicodeScripts_ha_GH
getUnicodeScripts_he_IL
getUnicodeScripts_hi_IN
getUnicodeScripts_hr_HR
getUnicodeScripts_hu_HU
getUnicodeScripts_hy_AM
getUnicodeScripts_ia
getUnicodeScripts_id_ID
getUnicodeScripts_is_IS
getUnicodeScripts_it_CH
getUnicodeScripts_it_IT
getUnicodeScripts_ja_JP
getUnicodeScripts_ka_GE
getUnicodeScripts_kk_KZ
getUnicodeScripts_kl_GL
getUnicodeScripts_km_KH
getUnicodeScripts_kn_IN
getUnicodeScripts_ko_KR
getUnicodeScripts_ku_TR
getUnicodeScripts_ky_KG
getUnicodeScripts_la_VA
getUnicodeScripts_lb_LU
getUnicodeScripts_lg_UG
getUnicodeScripts_ln_CD
getUnicodeScripts_lo_LA
getUnicodeScripts_lt_LT
getUnicodeScripts_lv_LV
getUnicodeScripts_mk_MK
getUnicodeScripts_ml_IN
getUnicodeScripts_mn_MN
getUnicodeScripts_mr_IN
getUnicodeScripts_ms_MY
getUnicodeScripts_nb_NO
getUnicodeScripts_ne_NP
getUnicodeScripts_nl_BE
getUnicodeScripts_nl_NL
getUnicodeScripts_nn_NO
getUnicodeScripts_nr_ZA
getUnicodeScripts_nso_ZA
getUnicodeScripts_oc_FR
getUnicodeScripts_or_IN
getUnicodeScripts_pa_IN
getUnicodeScripts_pl_PL
getUnicodeScripts_pt_BR
getUnicodeScripts_pt_PT
getUnicodeScripts_ro_RO
getUnicodeScripts_ru_RU
getUnicodeScripts_rw_RW
getUnicodeScripts_sg_CF
getUnicodeScripts_sh_YU
getUnicodeScripts_sk_SK
getUnicodeScripts_sl_SI
getUnicodeScripts_sr_YU
getUnicodeScripts_ss_ZA
getUnicodeScripts_st_ZA
getUnicodeScripts_sv_FI
getUnicodeScripts_sw_TZ
getUnicodeScripts_ta_IN
getUnicodeScripts_te_IN
getUnicodeScripts_tg_TJ
getUnicodeScripts_th_TH
getUnicodeScripts_ti_ER
getUnicodeScripts_tn_ZA
getUnicodeScripts_tr_TR
getUnicodeScripts_ts_ZA
getUnicodeScripts_uk_UA
getUnicodeScripts_uz_UZ
getUnicodeScripts_ve_ZA
getUnicodeScripts_vi_VN
getUnicodeScripts_wa_BE
getUnicodeScripts_xh_ZA
getUnicodeScripts_zh_HK
getUnicodeScripts_zh_MO
getUnicodeScripts_zh_SG
getUnicodeScripts_zu_ZA
get_default_enc(char const*)
get_dz_charset
get_hu_charset
get_indexdata_ko_dict
get_indexdata_zh_TW_radical
get_indexdata_zh_TW_stroke
get_indexdata_zh_pinyin
get_indexdata_zh_radical
get_indexdata_zh_stroke
get_indexdata_zh_zhuyin
get_ja_charset
get_ja_phonetic_alphanumeric_first
get_ja_phonetic_alphanumeric_last
get_km_charset
get_ko_charset
get_ko_phonetic
get_ku_alphanumeric
get_ln_charset
get_ne_charset
get_stripped_class
get_vi_charset
get_zh_TW_charset
get_zh_TW_radical
get_zh_TW_stroke
get_zh_charset
get_zh_pinyin
get_zh_radical
get_zh_stroke
get_zh_zhuyin
geteuid
gnome_gconf_get_gnome_libs_settings_relative
gz_seek(gz_stream*, long, int)
gz_tell(gz_stream*)
gz_write(gz_stream*, void*, unsigned int)
implChDir(String const&)
implChDrive(String const&)
implGetCurDir()
impl_Rectangle_Struct2Object(com::sun::star::awt::Rectangle const&)
initKApplication
initRegistry_Api
initpyuno
isLocalNotFile_Impl(rtl::OUString)
jfw::CJavaInfo::CJavaInfo(_JavaInfo const*)
jfw::CJavaInfo::getRequirements() const
jfw::CJavaInfo::getVendorData() const
jfw::CJavaInfo::getVersion() const
jfw::CNodeJavaInfo::CNodeJavaInfo(_JavaInfo const*)
jfw::MergedSettings::getJavaInfoAttrAutoSelect() const
jfw::MergedSettings::getVmParameters() const
jfw::findChildNode(_xmlNode const*, unsigned char const*)
jfw::getApplicationBase()
jfw::getFileFromURL(rtl::OUString const&)
jfw_plugin::AsynchReader::getData()
jfw_plugin::SunVersion::SunVersion()
jfw_plugin::VendorBase::createInstance()
jfw_plugin::VendorBase::getJavaExePaths(int*)
jfw_plugin_getAllJavaInfos
jfw_plugin_getJavaInfoByPath
lclGetCellInfoXFromArrayCol(unsigned long, unsigned short, unsigned short, bool)
lcl_AttrArea(ScDocument*, short, short, int, short, int, SfxPoolItem const&)
lcl_Bool2Any(com::sun::star::uno::Any&)
lcl_Bool2Any(unsigned char)
lcl_CmdStr(unsigned short)
lcl_ColumnTitle(ScDocument*, unsigned short, unsigned short, unsigned short)
lcl_DrawGraphic(Bitmap const&, OutputDevice*, Rectangle const&, Rectangle const&)
lcl_ExtractUIName(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>)
lcl_FindFirstBox(SwTable const&)
lcl_FindLastBox(SwTable const&)
lcl_FontChangedHint(SfxHint const&)
lcl_GetDocument(SdrObject*)
lcl_GetRealNameFor(rtl::OUString const&, Mapping const&)
lcl_GetRowCount(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, String const&)
lcl_GetServiceName(unsigned char)
lcl_GetVertPaperSize(ScDocument*, short, int, short)
lcl_IsNumeric(String const&)
lcl_IsValueCol(ScDocument*, short, int, int, short)
lcl_IsValueDataAtPos(unsigned char&, ScDocument*, short, int, short)
lcl_LoadFieldArr(SvStream&, PivotField*, unsigned short)
lcl_LoadFieldArr30(SvStream&, PivotField*, unsigned short)
lcl_LoadRange(SvStream&, ScRange**)
lcl_MakeTabEntry(SfxFilter const*)
lcl_MoveBox(long, Edit&, Edit&)
lcl_ReadEditStateInfo(SvStream&, Sc10EditStateInfo&)
lcl_ReadFileInfo(SvStream&, Sc10FileInfo&)
lcl_SaveFieldArr(SvStream&, PivotField const*, unsigned short)
lcl_SaveFlags(SvStream&, unsigned char*, unsigned short)
lcl_SaveOldFieldArr(SvStream&, com::sun::star::uno::Reference<com::sun::star::sheet::XDimensionsSupplier> const&, unsigned short, short, unsigned char)
lcl_SaveRange(SvStream&, ScRange const*)
lcl_SaveValue(SvStream&, unsigned short*, unsigned short)
lcl_SetSaveData(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, ScDPSaveData*)
lcl_asXValueBinding(xforms::Binding*)
lcl_createXFormsBinding()
lcl_findXText(com::sun::star::uno::Reference<com::sun::star::text::XTextSection> const&)
lcl_getXFormsModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
lcl_pointsToHmm(double)
lcl_replaceAll(rtl::OUString const&, rtl::OUString, rtl::OUString)
linguistic::FileExists(String const&)
linguistic::GetLanguageState(short, linguistic::LanguageState*)
linguistic::GetTextEncoding(short)
linguistic::IsLower(String const&, unsigned short, unsigned short, short)
linguistic::LanguageState::GetState(linguistic::ModuleName)
linguistic::MergeProposals(com::sun::star::uno::Reference<com::sun::star::linguistic2::XSpellAlternatives>&, com::sun::star::uno::Reference<com::sun::star::linguistic2::XSpellAlternatives>&)
linguistic::PropertyHelper_Hyph::PropertyHelper_Hyph(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>&)
linguistic::PropertyHelper_Spell::PropertyHelper_Spell(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>&)
linguistic::PropertyHelper_Thes::PropertyHelper_Thes(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>&)
linguistic::SpellAlternatives::SpellAlternatives(rtl::OUString const&, short, short, rtl::OUString const&)
linguistic::StripTrailingChars(rtl::OUString&, unsigned short)
linguistic::SuppLanguages::GetLanguages() const
linguistic::SuppLanguages::SuppLanguages(linguistic::LanguageState*, unsigned short)
linguistic::ThesaurusMeaning::ThesaurusMeaning(rtl::OUString const&, rtl::OUString const&, short)
linguistic::ToLower(unsigned short, short)
linguistic::ToTitle(String const&, short)
linguistic::ToUpper(String const&, short)
linguistic::ToUpper(unsigned short, short)
listAtFirst
listAtLast
listCopy
listForAll
listInsertAfter
listInsertBefore
listNewCopy
listPosition
listPrepend
listPrev
listToArray
logging::(anonymous namespace)::lcl_substituteFileHandlerURLVariables_nothrow(com::sun::star::uno::Reference<com::sun::star::logging::XLogger> const&, rtl::OUString&)::Variable::Variable(Variable const&)
logging::(anonymous namespace)::lcl_substituteFileHandlerURLVariables_nothrow(com::sun::star::uno::Reference<com::sun::star::logging::XLogger> const&, rtl::OUString&)::Variable::~Variable()
lower(char*)
main
matchKDEVersion
mgcLinearSystem::DeleteMatrix(int, float**)
mgcLinearSystem::DeleteVector(int, float*)
mgcLinearSystem::Inverse(int, float**)
mgcLinearSystem::NewMatrix(int)
mgcLinearSystem::NewVector(int)
mgcLinearSystem::Solve(int, float**, float*)
mgcLinearSystem::SolveConstTri(int, float, float, float, float*, float*)
mgcLinearSystem::SolveSymmetric(int, float**, float*)
mgcLinearSystem::SolveTri(int, float*, float*, float*, float*, float*)
mgcLinearSystem::SymmetricInverse(int, float**, float**)
mgcLinearSystemD::DeleteVector(int, double*)
mgcLinearSystemD::Inverse(int, double**)
mgcLinearSystemD::SolveConstTri(int, double, double, double, double*, double*)
mgcLinearSystemD::SolveSymmetric(int, double**, double*)
mgcLinearSystemD::SolveTri(int, double*, double*, double*, double*, double*)
mgcLinearSystemD::SymmetricInverse(int, double**, double**)
mkallcap(char*, cs_info const*)
mkinitcap(char*, cs_info const*)
msforms::cppu_detail_getUnoType(msforms::ReturnInteger const*)
native_bootstrap
native_bootstrap_set
native_defaultBootstrap_InitialComponentContext
native_defaultBootstrap_InitialComponentContext_iniFile
nullcanvas::CanvasFont::getFontMatrix() const
nullcanvas::CanvasHelper::flush() const
nullcanvas::SpriteCanvasHelper::backgroundPaint(basegfx::B2DRange const&)
nullcanvas::SpriteCanvasHelper::genericUpdate(basegfx::B2DConnectedRanges<canvas::SpriteRedrawManager::SpriteInfo>::ConnectedComponents const&)
nullcanvas::SpriteCanvasHelper::opaqueUpdate(basegfx::B2DConnectedRanges<canvas::SpriteRedrawManager::SpriteInfo>::ConnectedComponents const&)
nullcanvas::SpriteCanvasHelper::scrollUpdate(basegfx::B2DRange const&, basegfx::B2DRange const&, basegfx::B2DConnectedRanges<canvas::SpriteRedrawManager::SpriteInfo>::ConnectedComponents const&)
o3tltests::cow_wrapper_client2::queryUnmodified() const
o3tltests::cow_wrapper_client3::queryUnmodified() const
odiapi::props::Node::hasChildren() const
odiapi::props::PropertyPoolImpl::dbgGetNumberOfNodes()
odiapi::props::PropertyPoolImpl::dbgGetNumberOfUsedNodes()
offapp::DriverPooling::DriverPooling()
offapp::ODriverEnumeration::size() const
onDirectoryCreated
oox::Perfect_Hash::hash(char const*, unsigned int)
oox::core::BinaryCodec_XOR::getHash(unsigned char const*, int)
oox::core::BinaryInputStream::skip(int)
oox::core::BinaryOutputStream::BinaryOutputStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&, int)
oox::core::BinaryOutputStream::copy(oox::core::BinaryInputStream&)
oox::core::BinaryOutputStream::seek(long)
oox::core::BinaryOutputStream::tell() const
oox::core::BinaryOutputStream::write(void const*, int)
oox::core::BinaryOutputStream::~BinaryOutputStream()
oox::core::ContainerHelper::insertByIndex(com::sun::star::uno::Reference<com::sun::star::container::XIndexContainer> const&, int, com::sun::star::uno::Any const&)
oox::core::FilterBase::getFileUrl() const
oox::core::FilterBase::openOutputStream(rtl::OUString const&)
oox::core::PropertyMap::hasProperty(rtl::OUString const&) const
oox::core::PropertySequence::clearAllAnys()
oox::core::PropertySequence::readFromPropertySet(oox::core::PropertySet const&)
oox::core::PropertySequence::readValue(com::sun::star::uno::Any&)
oox::core::PropertySequence::writeValue(com::sun::star::uno::Any const&)
oox::core::PropertySet::getBoolProperty(rtl::OUString const&) const
oox::core::Relations::getRelationsByType(rtl::OUString const&, _STL::vector<boost::shared_ptr<oox::core::Relation>, _STL::allocator<boost::shared_ptr<oox::core::Relation> > >&) const
oox::core::StorageBase::getElementNames(_STL::vector<rtl::OUString, _STL::allocator<rtl::OUString> >&) const
oox::core::StorageBase::getName() const
oox::drawingml::GetRelativeRect(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::drawingml::GetTextMargin(rtl::OUString const&)
oox::xls::(anonymous namespace)::lclGetBuiltinStyleId(int&, int&, rtl::OUString const&)
oox::xls::AddressConverter::checkCellRangeList(_STL::vector<com::sun::star::table::CellRangeAddress, _STL::allocator<com::sun::star::table::CellRangeAddress> > const&, bool)
oox::xls::ApiTokenIterator::ApiTokenIterator(oox::xls::ApiTokenIterator const&, bool)
oox::xls::BiffExternLink::importExternSheet(oox::xls::BiffInputStream&)
oox::xls::BiffFormulaParserImpl::pushDelAddressOperand()
oox::xls::BiffFormulaParserImpl::pushParenthesesOperand()
oox::xls::BiffHelper::calcCodePageFromTextEncoding(unsigned short)
oox::xls::BiffHelper::calcRkFromDouble(int&, double)
oox::xls::BiffInputStream::getCoreStreamSize() const
oox::xls::BiffInputStream::getDecoder() const
oox::xls::BiffInputStream::getRecSize() const
oox::xls::BiffInputStream::ignoreByteString(bool)
oox::xls::BiffInputStream::ignoreRawUniString(unsigned short, bool)
oox::xls::BiffInputStream::ignoreUniString()
oox::xls::BiffInputStream::readFloat()
oox::xls::BiffInputStream::readInt16()
oox::xls::BiffInputStream::readInt64()
oox::xls::BiffInputStream::readInt8()
oox::xls::BiffInputStream::readuInt32()
oox::xls::BiffInputStream::readuInt64()
oox::xls::BiffInputStream::resetRecord(bool, unsigned short)
oox::xls::BiffInputStream::setNulSubstChar(unsigned short)
oox::xls::BiffOutputStream::BiffOutputStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
oox::xls::BiffOutputStream::~BiffOutputStream()
oox::xls::BiffRange::contains(oox::xls::BiffAddress const&) const
oox::xls::BiffRangeList::getEnclosingRange() const
oox::xls::Dxf::importDxf(oox::core::AttributeList const&)
oox::xls::GlobalDataHelper::getBiffFilter() const
oox::xls::OoxAutoFilterContext::importDynamicFilter(oox::core::AttributeList const&)
oox::xls::OoxConnectionsFragment::importS(oox::core::AttributeList const&)
oox::xls::OoxConnectionsFragment::importTables(oox::core::AttributeList const&)
oox::xls::OoxConnectionsFragment::importX(oox::core::AttributeList const&)
oox::xls::OoxDataValidationsContext::importDataValidations(oox::core::AttributeList const&)
oox::xls::OoxPivotCacheFragment::importPivotCacheDefinition(oox::core::AttributeList const&)
oox::xls::OoxWorksheetFragment::importSheetPr(oox::core::AttributeList const&)
oox::xls::PivotCacheData::getExternalSource() const
oox::xls::PivotTableBuffer::getPivotTable(rtl::OUString const&)
oox::xls::RichStringPhoneticPortion::RichStringPhoneticPortion(oox::xls::GlobalDataHelper const&)
oox::xls::RichStringPhoneticPortion::setText(rtl::OUString const&)
oox::xls::TokenMapper::TokenMapper(oox::xls::GlobalDataHelper const&)
oox::xls::UnitConverter::calcInchesFromMm100(int) const
oox::xls::UnitConverter::calcMm100FromPixelsY(double) const
oox::xls::UnitConverter::calcPixelsYFromMm100(int) const
oox::xls::UnitConverter::calcPointsFromMm100(int) const
oox::xls::UnitConverter::calcSpacesFromMm100(int) const
oox::xls::UnitConverter::calcTwipsFromMm100(int) const
oox::xls::WebQueryBuffer::dump() const
oox::xls::WorksheetHelper::getCell(com::sun::star::table::CellAddress const&) const
oox::xls::WorksheetHelper::getColumns(int, int) const
oox::xls::WorksheetHelper::getCondFormatIndex() const
oox::xls::WorksheetHelper::getRangeAddress(com::sun::star::uno::Reference<com::sun::star::table::XCellRange> const&)
oox::xls::WorksheetHelper::getRows(int, int) const
oox::xls::WorksheetHelper::getXSpreadsheet() const
oox::xls::Xf::hasAnyUsedFlags() const
oox::xls::lclTranslateOp(int)
ooxml::OOXMLContext::getDocument()
ooxml::OOXMLContextStream::setPropertySetAttrs(boost::shared_ptr<ooxml::OOXMLPropertySet>)
ooxml::OOXMLFastContextHandler::getDocument()
ooxml::OOXMLFastContextHandler::getTargetForId(rtl::OUString const&)
ooxml::OOXMLFastContextHandler::getXNoteId() const
ooxml::OOXMLFastContextHandler::resolveComment(rtl::OUString const&)
ooxml::OOXMLFastContextHandler::resolveEndnote(rtl::OUString const&)
ooxml::OOXMLFastContextHandler::resolveFooter(int, rtl::OUString const&)
ooxml::OOXMLFastContextHandler::resolveFootnote(rtl::OUString const&)
ooxml::OOXMLFastContextHandler::resolveHeader(int, rtl::OUString const&)
ooxml::OOXMLFastContextHandler::resolvePicture(rtl::OUString const&)
ooxml::OOXMLFastContextHandler::setDocument(ooxml::OOXMLDocument*)
ooxml::OOXMLFastContextHandler::setForwardEvents(bool)
ooxml::OOXMLFastContextHandler::setLastParagraphInSection()
ooxml::OOXMLFastContextHandler::setStream(boost::shared_ptr<doctok::Stream>)
ooxml::OOXMLFastContextHandler::setXNoteId(rtl::OUString const&)
ooxml::OOXMLFastContextHandlerBooleanValue::OOXMLFastContextHandlerBooleanValue(ooxml::OOXMLFastContextHandler const&)
ooxml::OOXMLFastContextHandlerHexValue::OOXMLFastContextHandlerHexValue(ooxml::OOXMLFastContextHandler const&)
ooxml::OOXMLFastContextHandlerIntegerValue::OOXMLFastContextHandlerIntegerValue(ooxml::OOXMLFastContextHandler const&)
ooxml::OOXMLFastContextHandlerListValue::OOXMLFastContextHandlerListValue(ooxml::OOXMLFastContextHandler const&)
ooxml::OOXMLFastContextHandlerNoResource::OOXMLFastContextHandlerNoResource(ooxml::OOXMLFastContextHandler const&)
ooxml::OOXMLFastContextHandlerProperties::setPropertySet(boost::shared_ptr<ooxml::OOXMLPropertySet>)
ooxml::OOXMLFastContextHandlerStream::setPropertySetAttrs(boost::shared_ptr<ooxml::OOXMLPropertySet>)
ooxml::OOXMLFastContextHandlerStringValue::OOXMLFastContextHandlerStringValue(ooxml::OOXMLFastContextHandler const&)
ooxml::OOXMLHexValue::OOXMLHexValue(unsigned int)
ooxml::OOXMLParserState::getContextCount() const
ooxml::OOXMLParserState::newCharacterProperty(int const&, _STL::auto_ptr<ooxml::OOXMLValue>)
ooxml::OOXMLPictureValue::OOXMLPictureValue(ooxml::OOXMLDocument*, rtl::OUString const&)
ooxml::OOXMLStreamImpl::OOXMLStreamImpl(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>, com::sun::star::uno::Reference<com::sun::star::embed::XStorage>, rtl::OUString const&)
ooxml::OOXMLValue_dml_baseStylesheet_ST_ColorSchemeIndex::OOXMLValue_dml_baseStylesheet_ST_ColorSchemeIndex(rtl::OUString const&)
ooxml::OOXMLValue_dml_baseStylesheet_ST_FontCollectionIndex::OOXMLValue_dml_baseStylesheet_ST_FontCollectionIndex(rtl::OUString const&)
ooxml::OOXMLValue_dml_shape3DCamera_ST_PresetCameraType::OOXMLValue_dml_shape3DCamera_ST_PresetCameraType(rtl::OUString const&)
ooxml::OOXMLValue_dml_shape3DLighting_ST_LightRigDirection::OOXMLValue_dml_shape3DLighting_ST_LightRigDirection(rtl::OUString const&)
ooxml::OOXMLValue_dml_shape3DLighting_ST_LightRigType::OOXMLValue_dml_shape3DLighting_ST_LightRigType(rtl::OUString const&)
ooxml::OOXMLValue_dml_shape3DStyles_ST_BevelPresetType::OOXMLValue_dml_shape3DStyles_ST_BevelPresetType(rtl::OUString const&)
ooxml::OOXMLValue_dml_shape3DStyles_ST_PresetMaterialType::OOXMLValue_dml_shape3DStyles_ST_PresetMaterialType(rtl::OUString const&)
ooxml::OOXMLValue_dml_shapeEffects_ST_BlendMode::OOXMLValue_dml_shapeEffects_ST_BlendMode(rtl::OUString const&)
ooxml::OOXMLValue_dml_shapeEffects_ST_PathShadeType::OOXMLValue_dml_shapeEffects_ST_PathShadeType(rtl::OUString const&)
ooxml::OOXMLValue_dml_shapeEffects_ST_PresetPatternVal::OOXMLValue_dml_shapeEffects_ST_PresetPatternVal(rtl::OUString const&)
ooxml::OOXMLValue_dml_shapeEffects_ST_PresetShadowVal::OOXMLValue_dml_shapeEffects_ST_PresetShadowVal(rtl::OUString const&)
ooxml::OOXMLValue_dml_shapeGeometry_ST_PathFillMode::OOXMLValue_dml_shapeGeometry_ST_PathFillMode(rtl::OUString const&)
ooxml::OOXMLValue_dml_shapeGeometry_ST_TextShapeType::OOXMLValue_dml_shapeGeometry_ST_TextShapeType(rtl::OUString const&)
ooxml::OOXMLValue_dml_shapeLineProperties_ST_PresetLineDashVal::OOXMLValue_dml_shapeLineProperties_ST_PresetLineDashVal(rtl::OUString const&)
ooxml::OOXMLValue_dml_textCharacter_ST_TextCapsType::OOXMLValue_dml_textCharacter_ST_TextCapsType(rtl::OUString const&)
ooxml::OOXMLValue_dml_textCharacter_ST_TextStrikeType::OOXMLValue_dml_textCharacter_ST_TextStrikeType(rtl::OUString const&)
ooxml::OOXMLValue_dml_textCharacter_ST_TextUnderlineType::OOXMLValue_dml_textCharacter_ST_TextUnderlineType(rtl::OUString const&)
ooxml::OOXMLValue_dml_wordprocessingDrawing_ST_AlignH::OOXMLValue_dml_wordprocessingDrawing_ST_AlignH(rtl::OUString const&)
ooxml::OOXMLValue_dml_wordprocessingDrawing_ST_AlignV::OOXMLValue_dml_wordprocessingDrawing_ST_AlignV(rtl::OUString const&)
ooxml::OOXMLValue_dml_wordprocessingDrawing_ST_RelFromH::OOXMLValue_dml_wordprocessingDrawing_ST_RelFromH(rtl::OUString const&)
ooxml::OOXMLValue_dml_wordprocessingDrawing_ST_RelFromV::OOXMLValue_dml_wordprocessingDrawing_ST_RelFromV(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_BreakBin::OOXMLValue_shared_math_ST_BreakBin(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_BreakBinSub::OOXMLValue_shared_math_ST_BreakBinSub(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_FType::OOXMLValue_shared_math_ST_FType(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_Jc::OOXMLValue_shared_math_ST_Jc(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_LimLoc::OOXMLValue_shared_math_ST_LimLoc(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_Script::OOXMLValue_shared_math_ST_Script(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_Shp::OOXMLValue_shared_math_ST_Shp(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_TopBot::OOXMLValue_shared_math_ST_TopBot(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_XAlign::OOXMLValue_shared_math_ST_XAlign(rtl::OUString const&)
ooxml::OOXMLValue_shared_math_ST_YAlign::OOXMLValue_shared_math_ST_YAlign(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_CalendarType::OOXMLValue_wml_ST_CalendarType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_CharacterSpacing::OOXMLValue_wml_ST_CharacterSpacing(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_ColorSchemeIndex::OOXMLValue_wml_ST_ColorSchemeIndex(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_DocGrid::OOXMLValue_wml_ST_DocGrid(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_DocPartBehavior::OOXMLValue_wml_ST_DocPartBehavior(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_DocPartGallery::OOXMLValue_wml_ST_DocPartGallery(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_DocPartType::OOXMLValue_wml_ST_DocPartType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_DocType::OOXMLValue_wml_ST_DocType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_DropCap::OOXMLValue_wml_ST_DropCap(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_EdGrp::OOXMLValue_wml_ST_EdGrp(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_FFTextType::OOXMLValue_wml_ST_FFTextType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_FrameLayout::OOXMLValue_wml_ST_FrameLayout(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_FrameScrollbar::OOXMLValue_wml_ST_FrameScrollbar(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_FtnEdn::OOXMLValue_wml_ST_FtnEdn(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_HAnchor::OOXMLValue_wml_ST_HAnchor(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_HeightRule::OOXMLValue_wml_ST_HeightRule(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_HexColorAuto::OOXMLValue_wml_ST_HexColorAuto(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_InfoTextType::OOXMLValue_wml_ST_InfoTextType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_LevelSuffix::OOXMLValue_wml_ST_LevelSuffix(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_Lock::OOXMLValue_wml_ST_Lock(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_MailMergeDataType::OOXMLValue_wml_ST_MailMergeDataType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_MailMergeDest::OOXMLValue_wml_ST_MailMergeDest(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_MailMergeDocType::OOXMLValue_wml_ST_MailMergeDocType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_MailMergeOdsoFMDFieldType::OOXMLValue_wml_ST_MailMergeOdsoFMDFieldType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_MailMergeSourceType::OOXMLValue_wml_ST_MailMergeSourceType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_PageBorderDisplay::OOXMLValue_wml_ST_PageBorderDisplay(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_PageBorderOffset::OOXMLValue_wml_ST_PageBorderOffset(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_PageBorderZOrder::OOXMLValue_wml_ST_PageBorderZOrder(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_Proof::OOXMLValue_wml_ST_Proof(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_ProofErr::OOXMLValue_wml_ST_ProofErr(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_RubyAlign::OOXMLValue_wml_ST_RubyAlign(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_SdtDateMappingType::OOXMLValue_wml_ST_SdtDateMappingType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_TargetScreenSz::OOXMLValue_wml_ST_TargetScreenSz(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_TblLayoutType::OOXMLValue_wml_ST_TblLayoutType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_TblStyleOverrideType::OOXMLValue_wml_ST_TblStyleOverrideType(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_TextAlignment::OOXMLValue_wml_ST_TextAlignment(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_TextboxTightWrap::OOXMLValue_wml_ST_TextboxTightWrap(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_VAnchor::OOXMLValue_wml_ST_VAnchor(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_VerticalAlignRun::OOXMLValue_wml_ST_VerticalAlignRun(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_View::OOXMLValue_wml_ST_View(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_Wrap::OOXMLValue_wml_ST_Wrap(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_XAlign::OOXMLValue_wml_ST_XAlign(rtl::OUString const&)
ooxml::OOXMLValue_wml_ST_YAlign::OOXMLValue_wml_ST_YAlign(rtl::OUString const&)
ooxml::TokenMap::getTokenString(unsigned int)
ooxml::tokenmap::Perfect_Hash::hash(char const*, unsigned int)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XApplication const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XAxes const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XAxis const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XAxisTitle const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XBorder const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XBorders const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XCharacters const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XChart const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XChartObject const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XChartObjects const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XChartTitle const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XCharts const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XComment const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XComments const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XDialog const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XDialogs const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XFont const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XFormat const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XFormatCondition const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XFormatConditions const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XInterior const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XName const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XNames const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XOLEObject const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XOLEObjects const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XOutline const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XPane const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XPivotCache const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XPivotTable const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XPivotTables const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XSeries const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XSeriesCollection const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XStyle const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XStyles const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XTextFrame const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XTitle const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XValidation const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XWindow const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XWindows const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XWorkbook const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XWorkbooks const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XWorksheet const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XWorksheetFunction const*)
org::openoffice::excel::cppu_detail_getUnoType(org::openoffice::excel::XWorksheets const*)
org::openoffice::isRangeShortCut(rtl::OUString const&)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XButton const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XColorFormat const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XComboBox const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XControl const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XFillFormat const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XLabel const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XLineFormat const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XListBox const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XPictureFormat const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XRadioButton const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XShape const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XShapeRange const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XShapes const*)
org::openoffice::msforms::cppu_detail_getUnoType(org::openoffice::msforms::XTextBox const*)
org::openoffice::vba::cppu_detail_getUnoType(org::openoffice::vba::XCollection const*)
org::openoffice::vba::cppu_detail_getUnoType(org::openoffice::vba::XErrObject const*)
org::openoffice::vba::cppu_detail_getUnoType(org::openoffice::vba::XGlobals const*)
org::openoffice::vba::cppu_detail_getUnoType(org::openoffice::vba::XHelperInterface const*)
org::openoffice::vba::cppu_detail_getUnoType(org::openoffice::vba::XPropValue const*)
org::openoffice::vba::cppu_detail_getUnoType(org::openoffice::vba::XVBAToOOEventDescGen const*)
osl_acquireDirectoryItem
osl_acquireSemaphore
osl_acquireVolumeDeviceHandle
osl_addToSocketSet
osl_automountVolumeDevice
osl_clearSocketSet
osl_copyHostAddr
osl_createHostAddr
osl_createHostAddrByName
osl_createInetBroadcastAddr
osl_createSemaphore
osl_createSocketSet
osl_demultiplexSocketEvents
osl_destroySemaphore
osl_destroySocketSet
osl_detail_ObjectRegistry_checkObjectCount
osl_detail_ObjectRegistry_registerObject
osl_detail_ObjectRegistry_revokeObject
osl_detail_ObjectRegistry_storeAddresses
osl_flushProfile
osl_getAddrOfSocketAddr
osl_getCanonicalName
osl_getEtherAddr
osl_getEthernetAddress
osl_getHostnameOfHostAddr
osl_getModuleHandle
osl_getProfileSectionEntries
osl_getProfileSections
osl_getSocketAddrOfHostAddr
osl_getSystemTimeFromLocalTime
osl_getVolumeDeviceMountPath
osl_isInSocketSet
osl_loadUserProfile
osl_readProfileBool
osl_readProfileIdent
osl_receiveResourcePipe
osl_releaseSemaphore
osl_removeFromSocketSet
osl_removeProfileEntry
osl_reportError
osl_sendResourcePipe
osl_setAddrOfSocketAddr
osl_setDebugMessageFunc
osl_setDetailedDebugMessageFunc
osl_setFileTime
osl_setProcessLocale
osl_systemPathIsAbsolutePath
osl_tryToAcquireSemaphore
osl_unloadUserProfile
osl_unmountVolumeDevice
osl_writeProfileBool
osl_writeProfileIdent
padmin::ProgressBar::ProgressBar(Window*, long)
padmin::RTSDialog::getPaperSize()
pcr::(anonymous namespace)::isAsciiLetter(unsigned short)
pcr::(anonymous namespace)::lcl_getAssignedMacroURL(pcr::EventDescription const&, com::sun::star::uno::Sequence<com::sun::star::script::ScriptEventDescriptor> const&)
pcr::(anonymous namespace)::toUpperAscii(unsigned short)
pcr::EFormsHelper::createBindingForFormModel(rtl::OUString const&) const
pcr::InspectorHelpWindow::GetMaximalHeightPixel()
pcr::OBrowserLine::GetSizePixel()
pcr::OBrowserLine::SetPosPixel(Point)
pcr::OPropertyEditor::CalcVisibleLines()
pcr::OPropertyEditor::GetPropertyValue(rtl::OUString const&) const
pcr::OPropertyEditor::IsPropertyInputEnabled(rtl::OUString const&) const
pcr::PropertyHandler::PropertyHandler(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
pcr::PropertyHandlerHelper::createComboBoxControl(com::sun::star::uno::Reference<com::sun::star::inspection::XPropertyControlFactory> const&, com::sun::star::uno::Sequence<rtl::OUString> const&, unsigned char, unsigned char)
pcr::TabOrderListBox::TabOrderListBox(Window*)
pcr::XSDDataType::getFacetType(rtl::OUString const&) const
plugin_init_sys_tray
ppt::AnimationImporter::dump(char const*)
ppt::AnimationImporter::dump(char const*, char const*)
ppt::AnimationImporter::dump(char const*, double)
ppt::AnimationImporter::dump(char const*, int)
ppt::AnimationImporter::dump(char const*, rtl::OUString const&)
ppt::AnimationImporter::dump(com::sun::star::uno::Any&)
ppt::AnimationImporter::dump(ppt::AnimationNode const&)
ppt::AnimationImporter::dump(ppt::PropertySet const&)
ppt::AnimationImporter::dump(rtl::OUString const&)
ppt::AnimationImporter::dump(unsigned int, bool)
ppt::AnimationImporter::dump_anim_group(ppt::Atom const*, ppt::AnimationNode const&, ppt::PropertySet const&, bool)
ppt::AnimationImporter::dump_atom(ppt::Atom const*, bool)
ppt::AnimationImporter::dump_atom_header(ppt::Atom const*, bool, bool)
ppt::AnimationImporter::dump_target(com::sun::star::uno::Any&)
ppt::AnimationImporter::importAnimationSubContainer(ppt::Atom const*, com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&)
ppt::Atom::findNextChildAtom(unsigned short, unsigned short, ppt::Atom const*) const
printEntries(_STL::vector<SvxConfigEntry*, _STL::allocator<SvxConfigEntry*> >*)
printProperties(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
printPropertySet(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
psp::AfmKeywordHash::hash(char const*, unsigned int)
psp::ConverterFactory::~ConverterFactory()
psp::GetCommandLineTokenCount(ByteString const&)
psp::GlyphSet::SetFont(int, unsigned char)
psp::PPDContext::getUnconstrainedValues(psp::PPDKey const*, _STL::list<psp::PPDValue const*, _STL::allocator<psp::PPDValue const*> >&)
psp::PPDParser::getDefaultDuplexType() const
psp::PPDParser::getDuplex(int) const
psp::PPDParser::getDuplexCommand(String const&) const
psp::PPDParser::getDuplexCommand(int) const
psp::PPDParser::getFontAttributes(String const&, String&, String&) const
psp::PPDParser::getPaperDimension(int) const
psp::PPDParser::getPaperDimensionCommand(String const&) const
psp::PPDParser::getPaperDimensionCommand(int) const
psp::PPDParser::getResolution(int, int&, int&) const
psp::PPDParser::getResolutionCommand(int, int) const
psp::PPDParser::getResolutions() const
psp::PPDParser::getSlot(int) const
psp::PPDParser::getSlotCommand(String const&) const
psp::PPDParser::getSlotCommand(int) const
psp::PrintFontManager::getFontFamilyType(int) const
psp::PrintFontManager::getGlobalFontMetric(int, bool) const
psp::PrinterGfx::DrawBitmap(Rectangle const&, Rectangle const&, psp::PrinterBmp const&, psp::PrinterBmp const&)
psp::PrinterGfx::DrawMask(Rectangle const&, Rectangle const&, psp::PrinterBmp const&, psp::PrinterColor&)
psp::PrinterGfx::GetGlyphBoundRect(unsigned short, Rectangle&)
psp::PrinterGfx::GetGlyphOutline(unsigned short, unsigned short**, Point**, unsigned char**)
psp::PrinterGfx::GetResolution(int&, int&) const
psp::PrinterGfx::PSRMoveTo(int, int)
psp::PrinterGfx::SetFallbackFont(int)
psp::PrinterJob::GetDocumentHeader()
psp::PrinterJob::GetDocumentTrailer()
psp::PrinterJob::GetErrorCode()
psp::appendStr(char const*, char*, int)
psp::existsTmpDir(char const*)
pyuno::importToGlobal(_object*, _object*, _object*)
readDouble(unsigned char const*, double&)
readFloat(unsigned char const*, float&)
recently_used_file::flush()
reg_closeSubKeys
reg_createKey
reg_createLink
reg_deleteKey
reg_deleteLink
reg_destroyRegistry
reg_freeValueList
reg_getKeyName
reg_getKeyType
reg_getLinkTarget
reg_getLongListValue
reg_getName
reg_getResolvedKeyName
reg_getStringListValue
reg_getUnicodeListValue
reg_getValue
reg_getValueInfo
reg_isReadOnly
reg_loadKey
reg_openSubKeys
reg_saveKey
reg_setLongListValue
reg_setStringListValue
reg_setUnicodeListValue
reg_setValue
registerPluginService(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
remote_addContextListener
remote_context::remote_ContextImpl::thisQuery(uno_Context*, _rtl_uString*)
remote_removeContextListener
reportdesign::OFunctions::copyFunctions(com::sun::star::uno::Reference<com::sun::star::report::XFunctions> const&)
reportdesign::OReportEngineJFree::transform()
reportdesign::lcl_createDefault()
rptui::DlgEdHint::DlgEdHint(rptui::DlgEdHintKind, rptui::OUnoObject*)
rptui::HelpIdUrl::getHelpId(rtl::OUString const&)
rptui::ODesignView::getMaxMarkerWidth(unsigned char) const
rptui::ODesignView::isDragStripes() const
rptui::ODesignView::setMarked(rptui::OSectionView*, unsigned char)
rptui::OFieldExpressionControl::LinkStubAsynchActivate(void*, void*)
rptui::OFieldExpressionControl::LinkStubAsynchDeactivate(void*, void*)
rptui::OObjectBase::PositionAndSizeChange(com::sun::star::beans::PropertyChangeEvent const&)
rptui::OObjectBase::_elementInserted(com::sun::star::container::ContainerEvent const&)
rptui::OObjectBase::_elementRemoved(com::sun::star::container::ContainerEvent const&)
rptui::OObjectBase::_elementReplaced(com::sun::star::container::ContainerEvent const&)
rptui::OPropertyInfoService::getPropertyEnumRepresentations(int, _STL::vector<rtl::OUString, _STL::allocator<rtl::OUString> >&) const
rptui::OPropertyInfoService::getPropertyName(int)
rptui::OPropertyInfoService::getPropertyPos(int) const
rptui::OReportController::LinkStubOnInvalidateClipboard(void*, void*)
rptui::OReportController::displayDesignFloater(unsigned char)
rptui::OReportSection::RemarkDialog()
rptui::OReportSection::UnmarkDialog()
rptui::OReportSection::adjustPageSize()
rptui::OReportSection::insertObject(com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&)
rptui::OReportSection::setSectionHeightPixel(unsigned int)
rptui::OReportWindow::setTotalSize()
rptui::OScrollWindowHelper::EndScroll(long, long)
rptui::OSectionsWindow::getPosition(com::sun::star::uno::Reference<com::sun::star::report::XSection> const&) const
rptui::OSectionsWindow::getRulerWidth() const
rptui::OStartMarker::getWidth() const
rptui::OToggleSlotUndo::OToggleSlotUndo(rptui::OReportModel&, unsigned short, unsigned short)
rptui::OUnoObject::OUnoObject(com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&, com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&, unsigned short)
rptui::OViewsWindow::getSection(Point const&)
rptui::OViewsWindow::setPoint(Point const&)
rptui::OXUndoEnvironment::IsReadOnly() const
rptui::OXUndoEnvironment::SetReadOnly(unsigned char, rptui::OXUndoEnvironment::Accessor const&)
rptui::ReportFormula::ReportFormula()
rptui::ReportFormula::ReportFormula(com::sun::star::uno::Any const&)
rptui::getGroupPosition(com::sun::star::uno::Reference<com::sun::star::report::XReportDefinition> const&, com::sun::star::uno::Reference<com::sun::star::report::XGroup> const&)
rptui::lcl_collectParamNames_nothrow(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, _STL::vector<rtl::OUString, _STL::allocator<rtl::OUString> >&)
rptxml::ORptExport::exportImagePosition(short)
rptxml::ORptExport::implConvertAny(com::sun::star::uno::Any const&)
rptxml::ORptExport::implConvertMeasure(int)
rptxml::OXMLComponent::GetOwnImport()
rptxml::OXMLControlProperty::implGetDate(double)
rptxml::OXMLControlProperty::implGetTime(double)
rptxml::OXMLFixedText::OXMLFixedText(rptxml::ORptFilter&, unsigned short, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::report::XFixedText> const&)
rptxml::OXMLFormatCondition::GetOwnImport()
rptxml::OXMLHelper::GetImageAlignOptions()
rptxml::OXMLHelper::GetImagePositionOptions()
rptxml::OXMLHelper::GetNumberFormatsSupplier(com::sun::star::uno::Reference<com::sun::star::report::XReportDefinition> const&)
rptxml::lcl_getColumnNames(rtl::OUString const&)
rtl_arena_segment_destructor
rtl_bootstrap_setIniFileName
rtl_byte_sequence_getConstArray
rtl_byte_sequence_getLength
rtl_compareUuid
rtl_createNamedUuid
rtl_digest_HMAC_MD5
rtl_digest_HMAC_SHA1
rtl_digest_MD2
rtl_digest_SHA
rtl_digest_queryAlgorithm
rtl_findInMemory
rtl_locale_equals
rtl_locale_getCountry
rtl_locale_getDefault
rtl_locale_getLanguage
rtl_locale_getVariant
rtl_locale_hashCode
rtl_locale_setDefault
rtl_memory_fini
rtl_str_indexOfChar
rtl_str_lastIndexOfChar
rtl_str_lastIndexOfStr
rtl_str_replaceChar
rtl_str_replaceChar_WithLength
rtl_str_toAsciiLowerCase
rtl_str_toAsciiLowerCase_WithLength
rtl_str_toAsciiUpperCase
rtl_str_toAsciiUpperCase_WithLength
rtl_str_toBoolean
rtl_str_toFloat
rtl_str_trim
rtl_str_valueOfChar
rtl_string_getLength
rtl_string_newFromString
rtl_tres_create
rtl_tres_destroy
rtl_ustr_ascii_compareIgnoreAsciiCase
rtl_ustr_indexOfAscii_WithLength
rtl_ustr_indexOfStr
rtl_ustr_lastIndexOfAscii_WithLength
rtl_ustr_lastIndexOfStr
rtl_ustr_replaceChar
rtl_ustr_replaceChar_WithLength
rtl_ustr_toAsciiLowerCase
rtl_ustr_toAsciiUpperCase
rtl_ustr_toAsciiUpperCase_WithLength
rtl_ustr_trim
rtl_ustr_valueOfChar
sal_uInt32Bucket::ImplAppend()
sal_uInt32Bucket::ImplRemove()
sal_uInt32Bucket::sal_uInt32Bucket()
sal_uInt32BucketMemArr::Replace(char const*&, unsigned short)
sal_uInt32BucketMemArr::Replace(char const**, unsigned short, unsigned short)
sal_uInt32BucketMemArr::_ForEach(unsigned short, unsigned short, unsigned char (*)(char const*&, void*), void*)
saveHeaderFooterNodes(SwPageDesc&, SwNodes&)
sax::Converter::clearUndefinedChars(rtl::OUString&, rtl::OUString const&)
sax::Converter::convertBool(bool&, rtl::OUString const&)
sax::Converter::convertBool(rtl::OUStringBuffer&, bool)
sax::Converter::convertColor(int&, rtl::OUString const&)
sax::Converter::convertColor(rtl::OUStringBuffer&, int)
sax::Converter::convertDateTime(com::sun::star::util::DateTime&, rtl::OUString const&)
sax::Converter::convertDateTime(rtl::OUStringBuffer&, com::sun::star::util::DateTime const&, bool)
sax::Converter::convertDouble(double&, rtl::OUString const&)
sax::Converter::convertDouble(double&, rtl::OUString const&, short)
sax::Converter::convertDouble(rtl::OUStringBuffer&, double)
sax::Converter::convertDouble(rtl::OUStringBuffer&, double, bool, short, short)
sax::Converter::convertMeasure(rtl::OUStringBuffer&, int, short, short)
sax::Converter::convertMeasurePx(int&, rtl::OUString const&)
sax::Converter::convertMeasurePx(rtl::OUStringBuffer&, int)
sax::Converter::convertNumber(rtl::OUStringBuffer&, int)
sax::Converter::convertPercent(int&, rtl::OUString const&)
sax::Converter::convertPercent(rtl::OUStringBuffer&, int)
sax::Converter::convertTime(com::sun::star::util::DateTime&, rtl::OUString const&)
sax::Converter::convertTime(rtl::OUStringBuffer&, com::sun::star::util::DateTime const&)
sax::Converter::decodeBase64(com::sun::star::uno::Sequence<signed char>&, rtl::OUString const&)
sax::Converter::encodeBase64(rtl::OUStringBuffer&, com::sun::star::uno::Sequence<signed char> const&)
sax::Converter::indexOfComma(rtl::OUString const&, int)
sax_expatwrap::AttributeListImpl::removeAttribute(rtl::OUString const&)
sax_expatwrap::AttributeListImpl::setAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
sax_expatwrap::SaxExpatParser::getImplementationName_Static()
sax_expatwrap::Text2UnicodeConverter::Text2UnicodeConverter(unsigned short)
sax_expatwrap::Unicode2TextConverter::Unicode2TextConverter(rtl::OString const&)
sax_fastparser::FastSaxParser::getImplementationName_Static()
scsolver::BaseDialog::addButtonImage(int, int, int, int, rtl::OUString const&, rtl::OUString const&, short)
scsolver::BaseDialog::addEdit(int, int, int, int, rtl::OUString const&)
scsolver::BaseDialog::addGroupBox(int, int, int, int, rtl::OUString const&)
scsolver::BaseDialog::getResMgr() const
scsolver::BaseDialog::registerListener(scsolver::FocusListener*) const
scsolver::BaseDialog::registerListener(scsolver::MouseListener*) const
scsolver::BaseDialog::unregisterListener(scsolver::FocusListener*) const
scsolver::BaseDialog::unregisterListener(scsolver::MouseListener*) const
scsolver::BaseDialogImpl::getRangeEditWidget()
scsolver::CalcInterface::getCellFormula(rtl::OUString const&, rtl::OUString const&)
scsolver::LpModelBuilder::getGoal() const
scsolver::ObjProperty::setPropertyValueAny(char const*, com::sun::star::uno::Any const&)
scsolver::OptionDialog::setVarInteger(bool)
scsolver::OptionDialog::setVarPositive(bool)
scsolver::OptionDialog::unregisterListeners()
scsolver::WindowFocusListener::WindowFocusListener(scsolver::BaseDialog*)
scsolver::WindowMouseListener::WindowMouseListener(scsolver::BaseDialog*)
scsolver::numeric::Differentiate::setPrecision(unsigned long)
scsolver::numeric::lp::Model::getConstraintMatrix() const
scsolver::numeric::lp::Model::getObjectiveFuncConstant() const
scsolver::numeric::lp::Model::getPrecision() const
scsolver::numeric::lp::Model::getVerbose() const
scsolver::numeric::lp::Model::setCostVector(_STL::vector<double, _STL::allocator<double> > const&)
scsolver::numeric::lp::ModelImpl::swap(scsolver::numeric::lp::ModelImpl&)
scsolver::numeric::mxhelper::print(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, _STL::allocator<double> > > const&)
scsolver::numeric::nlp::BaseAlgorithm::getSolution() const
scsolver::numeric::nlp::Model::getVarBound(unsigned long, scsolver::numeric::Bound) const
scsolver::numeric::nlp::Model::isVarBounded(unsigned long, scsolver::numeric::Bound) const
scsolver::numeric::nlp::Model::setPrecision(unsigned long)
scsolver::numeric::nlp::Model::setVarBound(unsigned long, scsolver::numeric::Bound, double)
scsolver::numeric::nlp::Model::setVerbose(bool)
scsolver::unohelper::setPropertyValue(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, int)
sd::AnimationSchemesPane::getAnimationSchemeFromControls() const
sd::AnimationSchemesPane::playCurrentScheme()
sd::AnimationWindow::WaitInEffect(unsigned long) const
sd::BezierObjectBar::InitInterface_Impl()
sd::CategoryListBox::CategoryListBox(Window*, long)
sd::CopyDlg::LinkStubReset(void*, void*)
sd::CustomHandleManager::registerSupplier(sd::ICustomhandleSupplier*)
sd::CustomHandleManager::unRegisterSupplier(sd::ICustomhandleSupplier*)
sd::DrawController::GetVisArea() const
sd::DrawDocShell::GetWindow() const
sd::DrawDocShell::IsNewDocument() const
sd::DrawViewRedirector::DrawViewRedirector(sd::DrawView&)
sd::DrawViewShell::ExecObjPalette(SfxRequest&)
sd::DrawViewShell::GetObjPaletteState(SfxItemSet&)
sd::DrawViewShell::LinkStubCloseHdl(void*, void*)
sd::EffectSequenceHelper::insert(_STL::_List_iterator<boost::shared_ptr<sd::CustomAnimationEffect>, _STL::_Nonconst_traits<boost::shared_ptr<sd::CustomAnimationEffect> > >&, boost::shared_ptr<sd::CustomAnimationEffect> const&)
sd::FuConstruct::Create(sd::ViewShell*, sd::Window*, sd::View*, SdDrawDocument*, SfxRequest&)
sd::FuDraw::Create(sd::ViewShell*, sd::Window*, sd::View*, SdDrawDocument*, SfxRequest&, bool)
sd::FuOutline::Create(sd::ViewShell*, sd::Window*, sd::View*, SdDrawDocument*, SfxRequest&)
sd::FuPoor::WriteStatus(String const&)
sd::FuPoor::diffPoint(long, long)
sd::FuPresentationLayout::TransferLayoutTemplate(String, String, SfxStyleSheetBasePool*, SfxStyleSheetBasePool*)
sd::FuSlide::Create(sd::SlideViewShell*, sd::Window*, sd::SlideView*, SdDrawDocument*, SfxRequest&)
sd::FuSlideSelection::DrawDragSelectionRect() const
sd::FuSlideSelection::ShowEffect(unsigned short)
sd::FuSpell::Create(sd::ViewShell*, sd::Window*, sd::View*, SdDrawDocument*, SfxRequest&)
sd::FuSpell::StartSpelling()
sd::FuText::LinkStubSpellError(void*, void*)
sd::FuTransform::GetPoint(Rectangle, RECT_POINT)
sd::GraphicObjectBar::InitInterface_Impl()
sd::GraphicViewShell::GraphicViewShell(SfxViewFrame*, Window*, sd::DrawViewShell const&)
sd::HeaderFooterDialog::initTabPages()
sd::ImpUndoDeleteWarning::ImpUndoDeleteWarning(Window*)
sd::LayerDialogContent::GetLayerTabBar()
sd::LeftDrawPaneShell::RegisterInterface(SfxModule*)
sd::LeftImpressPaneShell::RegisterInterface(SfxModule*)
sd::MediaObjectBar::InitInterface_Impl()
sd::ModifyGuard::ModifyGuard(sd::DrawDocShell*)
sd::OutlineViewShell::ExecStatusBar(SfxRequest&)
sd::OutlineViewShell::OutlineViewShell(SfxViewFrame*, Window*, sd::OutlineViewShell const&)
sd::Outliner::GetParentForDialog()
sd::Outliner::HandleOutsideChange(sd::Outliner::ChangeHint)
sd::Outliner::InitPage(unsigned short)
sd::Outliner::LinkStubSpellError(void*, void*)
sd::Outliner::StartSpelling(EditView&, unsigned char)
sd::PaneDockingWindow::SetTitle(String const&)
sd::PresentationViewShell::PresentationViewShell(SfxViewFrame*, Window*, sd::DrawViewShell const&)
sd::RightPaneShell::RegisterInterface(SfxModule*)
sd::SdGlobalResourceContainer::ReleaseResource(sd::SdGlobalResource*)
sd::SdUnoPresView::SdUnoPresView(sd::DrawController&, sd::DrawViewShell&, sd::View&)
sd::ShapeList::getPreviousShape(SdrObject*) const
sd::ShowView::SetAllowInvalidate(unsigned char)
sd::ShowWindow::DrawBlankScene()
sd::SlideViewShell::ExecStatusBar(SfxRequest&)
sd::SlideViewShell::PageLayoutHasChanged()
sd::SlideViewShell::SlideViewShell(SfxViewFrame*, Window*, sd::SlideViewShell const&)
sd::SlideViewShell::SlideViewShell(SfxViewFrame*, sd::ViewShellBase&, Window*, sd::FrameView*)
sd::Slideshow::getCurrentPageIndex()
sd::TextObjectBar::InitInterface_Impl()
sd::ToolBarManager::IsUpdateLocked() const
sd::View::CreatePageVDev(unsigned short, PageKind, unsigned long)
sd::View::IsRedrawLocked() const
sd::ViewShellBase::GetMenuState(SfxItemSet&)
sd::ViewShellBase::InitInterface_Impl()
sd::ViewShellBase::RegisterFactory(unsigned short)
sd::ViewShellBase::SetPrinterOptDlg(SfxPrinter*, unsigned short, unsigned char)
sd::ViewShellBase::getCustomHandleManager() const
sd::ViewShellManager::GetShellId(SfxShell const*) const
sd::ViewShellManager::Implementation::DumpActiveShell(_STL::list<sd::(anonymous namespace)::ShellDescriptor, _STL::allocator<sd::(anonymous namespace)::ShellDescriptor> > const&)
sd::ViewShellManager::InvalidateShellStack(SfxShell const*)
sd::ViewShellManager::ReplaceUndoManager(SfxUndoManager*, SfxUndoManager*)
sd::Window::ShareViewArea(sd::Window*)
sd::ZoomList::GetCurrentZoomRect() const
sd::framework::ConfigurationClassifier::GetC1andC2() const
sd::framework::ConfigurationClassifier::TraceResourceIdVector(char const*, _STL::vector<com::sun::star::uno::Reference<com::sun::star::drawing::framework::XResourceId>, _STL::allocator<com::sun::star::uno::Reference<com::sun::star::drawing::framework::XResourceId> > > const&) const
sd::framework::ConfigurationTracer::TraceBoundResources(com::sun::star::uno::Reference<com::sun::star::drawing::framework::XConfiguration> const&, com::sun::star::uno::Reference<com::sun::star::drawing::framework::XResourceId> const&, int)
sd::framework::ConfigurationTracer::TraceConfiguration(com::sun::star::uno::Reference<com::sun::star::drawing::framework::XConfiguration> const&, char const*)
sd::framework::FrameworkHelper::IsValid()
sd::framework::PaneController::TraceController() const
sd::framework::ReadOnlyModeObserver::RemoveStatusListener(com::sun::star::uno::Reference<com::sun::star::frame::XStatusListener> const&)
sd::framework::ResourceId::IsValid() const
sd::framework::ResourceManager::Trace() const
sd::framework::TaskPaneService::ThrowIfDisposed() const
sd::framework::ToolBarController::ToolBarDescriptor::~ToolBarDescriptor()
sd::framework::ViewShellWrapper::IsUnique()
sd::notes::EditWindow::Copy()
sd::notes::EditWindow::Cut()
sd::notes::EditWindow::Delete()
sd::notes::EditWindow::GetSelection() const
sd::notes::EditWindow::HasMark(String const&) const
sd::notes::EditWindow::IsAllSelected() const
sd::notes::EditWindow::IsEmpty() const
sd::notes::EditWindow::IsSelected() const
sd::notes::EditWindow::LinkStubMenuSelectHdl(void*, void*)
sd::notes::EditWindow::MarkError(Point const&)
sd::notes::EditWindow::Paste()
sd::notes::EditWindow::SelNextMark()
sd::notes::EditWindow::SelPrevMark()
sd::notes::EditWindow::SelectAll()
sd::notes::EditWindow::SetSelection(ESelection const&)
sd::notes::NotesChildWindow::GetChildWindowId()
sd::notes::SmGetLeftSelectionPart(ESelection, unsigned short&, unsigned short&)
sd::notes::TextLogger::AppendNumber(long)
sd::notes::TextLogger::AppendText(char const*)
sd::outliner::Iterator::Iterator(sd::outliner::IteratorImplBase const&)
sd::outliner::IteratorPosition::IteratorPosition(SdrObject*, int, PageKind, EditMode)
sd::outliner::OutlinerContainer::CreateViewIterator(SdDrawDocument*, sd::DrawViewShell*, bool, sd::outliner::IteratorLocation)
sd::slidesorter::SlideSorterViewShell::CreateInstance(int, SfxShell*, void*, sd::ViewShellBase&)
sd::slidesorter::SlideSorterViewShell::InitInterface_Impl()
sd::slidesorter::SlideSorterViewShell::SwitchTabBar(sd::slidesorter::SlideSorterViewShell::TabBarEntry)
sd::slidesorter::cache::BitmapCache::IsEmpty() const
sd::slidesorter::cache::BitmapCache::IsPrecious(SdrPage const* const&)
sd::slidesorter::cache::BitmapCache::ReleaseBitmap(SdrPage const* const&)
sd::slidesorter::cache::PageCache::InvalidatePreviewBitmap(sd::slidesorter::view::PageObjectViewObjectContact const&)
sd::slidesorter::controller::PageSelector::DeselectPage(SdPage const*)
sd::slidesorter::controller::ScrollBarManager::AdaptWindowSize(Rectangle const&)
sd::slidesorter::controller::SelectionCommand::SetCurrentPage(unsigned short)
sd::slidesorter::controller::SelectionFunction::ClearOverlays()
sd::slidesorter::controller::SelectionFunction::InsertionIndicatorHandler::Start(Point const&)
sd::slidesorter::controller::SelectionFunction::InsertionIndicatorHandler::UpdatePosition(Point const&)
sd::slidesorter::controller::SelectionFunction::InsertionIndicatorHandler::~InsertionIndicatorHandler()
sd::slidesorter::controller::SlideFunction::Create(sd::slidesorter::controller::SlideSorterController&, SfxRequest&)
sd::slidesorter::controller::SlideSorterController::GetFadePageAt(Point const&)
sd::slidesorter::controller::SlideSorterController::SetZoom(long)
sd::slidesorter::controller::SlotManager::AssignTransitionEffect()
sd::slidesorter::model::SlideSorterModel::GetRawPageDescriptor(int) const
sd::slidesorter::model::SlideSorterModel::SynchronizeModelSelection()
sd::slidesorter::view::Layouter::BuildBackgroundRectangleList()
sd::slidesorter::view::Layouter::GetBackgroundRectangleList() const
sd::slidesorter::view::Layouter::IsColumnCountFixed() const
sd::slidesorter::view::Layouter::SetGaps(int, int)
sd::slidesorter::view::Layouter::SetObjectWidth(int, int, int)
sd::slidesorter::view::OverlayBase::Toggle()
sd::slidesorter::view::PageObjectViewObjectContact::GetPixelBox(OutputDevice const&) const
sd::slidesorter::view::SlideSorterView::GetController()
sd::slidesorter::view::SlideSorterView::GetModelBorder() const
sd::slidesorter::view::SlideSorterView::GetObjectContact() const
sd::slidesorter::view::SlideSorterView::GetPageNumberAreaModelSize() const
sd::slidesorter::view::SubstitutionOverlay::Move(Point const&)
sd::toolpanel::ColorMenu::CreateControlFactory()
sd::toolpanel::EmptyWindow::EmptyWindow(Window*, Color, String const&)
sd::toolpanel::FocusManager::~FocusManager()
sd::toolpanel::LayoutMenu::GetSelectedLayoutName()
sd::toolpanel::ScrollPanel::ListHasChanged()
sd::toolpanel::SimpleLayoutWrapper::SimpleLayoutWrapper(_STL::auto_ptr<Window>, int, int, bool)
sd::toolpanel::SubToolPanel::ListHasChanged()
sd::toolpanel::TaskPaneViewShell::Execute(SfxRequest&)
sd::toolpanel::TaskPaneViewShell::GetState(SfxItemSet&)
sd::toolpanel::TaskPaneViewShell::Implementation::GetPublicId(unsigned int) const
sd::toolpanel::TaskPaneViewShell::InitInterface_Impl()
sd::toolpanel::TestPanel::CreateControlFactory()
sd::toolpanel::TitleBar::PaintMouseOverIndicator(Rectangle const&)
sd::toolpanel::TitleToolBox::AddItem(sd::toolpanel::TitleToolBox::ToolBoxId)
sd::toolpanel::TitleToolBox::TitleToolBox(Window*, long)
sd::toolpanel::TitledControl::GetUserData() const
sd::toolpanel::TitledControl::SetUserData(void*)
sd::toolpanel::ToolPanel::ListHasChanged()
sd::toolpanel::TreeNode::IsLeaf()
sd::toolpanel::TreeNode::IsRoot()
sd::toolpanel::TreeNode::RemoveStateChangeListener(Link const&)
sd::toolpanel::controls::AnimationSchemesPanel::AnimationSchemesPanel(sd::toolpanel::TreeNode*, sd::ViewShellBase&)
sd::toolpanel::controls::DefaultPagePreviewProvider::DefaultPagePreviewProvider()
sd::toolpanel::controls::MasterPageContainer::GetSlideForToken(int, bool)
sd::toolpanel::controls::MasterPageContainer::GetTokenForPageName(String const&)
sd::toolpanel::controls::MasterPageContainer::SetPreviewProviderForToken(int, boost::shared_ptr<sd::toolpanel::controls::PreviewProvider> const&)
sd::toolpanel::controls::MasterPageContainer::UpdateDescriptor(boost::shared_ptr<sd::toolpanel::controls::MasterPageDescriptor> const&, bool, bool, bool)
sd::toolpanel::controls::MasterPagesSelector::InvalidateAllPreviews()
sd::tools::SlotStateListener::IsValid() const
sd::tools::SlotStateListener::SlotStateListener()
sdr::Comment::Comment(unsigned int, Date, rtl::OUString const&, rtl::OUString const&, basegfx::B2DPoint const&)
sdr::Comment::SetCreationDate(Date)
sdr::Comment::SetPosition(basegfx::B2DPoint const&)
sdr::Comment::SetText(rtl::OUString const&)
sdr::Comment::SetUserName(rtl::OUString const&)
sdr::animation::AInfoGraphic::GetAnimation() const
sdr::animation::AInfoGraphic::GetStepCount() const
sdr::animation::AnimationInfo::GetBiggestStepTime()
sdr::animation::AnimationInfo::GetSmallestStepTime()
sdr::animation::ObjectAnimator::Count() const
sdr::animation::Scheduler::Reset(unsigned int)
sdr::contact::BufferHelperBitmapEx::SetBufferedData(MapMode const&, BitmapEx const&)
sdr::contact::DisplayInfo::IsDraftFill() const
sdr::contact::DisplayInfo::IsDraftLine() const
sdr::contact::DisplayInfo::IsDraftText() const
sdr::contact::DisplayInfo::IsHideDraftGraphic() const
sdr::contact::ObjectContact::ContainsViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::VOCBitmapExBuffer::VOCBitmapExBuffer(sdr::contact::ObjectContact&, sdr::contact::ViewContact&)
sdr::contact::ViewContact::ContainsViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ViewContact::SetViewObjectContactRedirector(sdr::contact::ViewObjectContactRedirector*)
sdr::contact::ViewContactOfUnoControl::getUnoControlForDevice(OutputDevice const*, sdr::contact::ViewContactOfUnoControl::SdrUnoObjAccessControl const&) const
sdr::contact::ViewContactOfUnoControl_Impl::ViewContactOfUnoControl_Impl()
sdr::contact::ViewContactOfUnoControl_Impl::~ViewContactOfUnoControl_Impl()
sdr::contact::ViewContactOfVirtObj::GetVirtObj() const
sdr::contact::ViewObjectContactOfUnoControl::getExistentControl() const
sdr::mixer::ColorChangeMixer::ColorChangeMixer(SdrObject&)
sdr::overlay::OverlayAnimatedBitmapEx::setBitmapEx1(BitmapEx const&)
sdr::overlay::OverlayAnimatedBitmapEx::setBitmapEx2(BitmapEx const&)
sdr::overlay::OverlayAnimatedBitmapEx::setBlinkTime(unsigned int)
sdr::overlay::OverlayAnimatedBitmapEx::setCenterXY1(unsigned short, unsigned short)
sdr::overlay::OverlayAnimatedBitmapEx::setCenterXY2(unsigned short, unsigned short)
sdr::overlay::OverlayBitmap::setBitmap(Bitmap const&)
sdr::overlay::OverlayBitmap::setCenterXY(unsigned short, unsigned short)
sdr::overlay::OverlayBitmap::setTransparenceUsed(unsigned char)
sdr::overlay::OverlayBitmapEx::setBitmapEx(BitmapEx const&)
sdr::overlay::OverlayBitmapEx::setCenterXY(unsigned short, unsigned short)
sdr::overlay::OverlayCrosshair::OverlayCrosshair(basegfx::B2DPoint const&, Color)
sdr::overlay::OverlayHelpline::OverlayHelpline(basegfx::B2DPoint const&, Color, SdrHelpLineKind)
sdr::overlay::OverlayLine::OverlayLine(basegfx::B2DPoint const&, basegfx::B2DPoint const&, Color)
sdr::overlay::OverlayManagerBuffered::SetRefreshWithPreRendering(unsigned char)
sdr::overlay::OverlayObject::setVisible(unsigned char)
sdr::overlay::OverlayObjectList::getBaseRange() const
sdr::overlay::OverlayObjectList::remove(sdr::overlay::OverlayObject&)
sdr::overlay::OverlayPolyPolygon::OverlayPolyPolygon(basegfx::B2DPolyPolygon const&, Color)
sdr::overlay::OverlayPolyPolygonStriped::setPolyPolygon(basegfx::B2DPolyPolygon const&)
sdr::overlay::OverlayRollingRectangle::OverlayRollingRectangle(basegfx::B2DPoint const&, basegfx::B2DPoint const&, Color, unsigned char, unsigned char)
sdr::overlay::OverlayRollingRectangleStriped::setExtendedLines(unsigned char)
sdr::overlay::OverlayRollingRectangleStriped::setShowBounds(unsigned char)
setConnection(com::sun::star::uno::Reference<com::sun::star::sdbc::XRowSet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
sfx2::FileDialogHelper::GetDisplayDirectory() const
sfx2::IFrameWindow_Impl::SetBorder(unsigned char)
sfx2::SvBaseLink::GetName() const
sfx::EditWrapper::EditWrapper(Edit&)
sfx::ItemConnectionBase::Activate(bool)
shutdownKApplication
slideshow::internal::(anonymous namespace)::SlideImpl::isShowing() const
slideshow::internal::AnimatedSprite::getPixelOffset() const
slideshow::internal::AnimatedSprite::setPriority(double)
slideshow::internal::BaseNode::checkValidNode() const
slideshow::internal::DrawShapeSubsetting::DrawShapeSubsetting(boost::shared_ptr<GDIMetaFile> const&)
slideshow::internal::EventMultiplexer::removeShapeCursorHandler(boost::shared_ptr<slideshow::internal::ShapeCursorEventHandler> const&)
slideshow::internal::EventMultiplexer::removeUserPaintHandler(boost::shared_ptr<slideshow::internal::UserPaintEventHandler> const&)
slideshow::internal::HSLColor::HSLColor(unsigned int)
slideshow::internal::HSLColor::getBlue() const
slideshow::internal::HSLColor::getGreen() const
slideshow::internal::HSLColor::getRGBColor() const
slideshow::internal::HSLColor::getRed() const
slideshow::internal::Layer::viewChanged(boost::shared_ptr<slideshow::internal::View> const&)
slideshow::internal::Layer::viewsChanged()
slideshow::internal::RGBColor::getHSLColor() const
slideshow::internal::RGBColor::getHue() const
slideshow::internal::RGBColor::getLuminance() const
slideshow::internal::RGBColor::getSaturation() const
slideshow::internal::SlideChangeBase::getLeavingSlideSizePixel(boost::shared_ptr<slideshow::internal::UnoView> const&) const
slideshow::internal::SoundPlayer::setPlaybackLoop(bool)
slideshow::internal::UnoViewContainer::removeView(boost::shared_ptr<slideshow::internal::UnoView> const&)
slideshow::internal::UserEventQueue::isEmpty() const
slideshow::internal::getAPIShapePrio(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
slideshow::internal::getNodeType(short&, com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
slideshow::internal::removeTextActions(GDIMetaFile&)
so3::StaticBaseUrl::AbsToRel(ByteString const&, INetURLObject::EncodeMechanism, INetURLObject::DecodeMechanism, unsigned short, INetURLObject::FSysStyle)
so3::StaticBaseUrl::RelToAbs(ByteString const&, bool, INetURLObject::EncodeMechanism, INetURLObject::DecodeMechanism, unsigned short, INetURLObject::FSysStyle)
so3::StaticBaseUrl::SetBaseURL(ByteString const&, INetURLObject::EncodeMechanism, unsigned short)
so3::StaticBaseUrl::SetBaseURL(String const&, INetURLObject::EncodeMechanism, unsigned short)
so3::StaticBaseUrl::SmartRelToAbs(ByteString const&, bool, INetURLObject::EncodeMechanism, INetURLObject::DecodeMechanism, unsigned short, INetURLObject::FSysStyle)
so3::SvBaseLink::GetName() const
so3::SvBaseLink::SetContentType(unsigned long)
so3::SvBaseLink::SetObj(so3::SvLinkSource*)
so3::SvBaseLink::SvBaseLink()
so3::SvBaseLink::SvBaseLink(String const&, unsigned short, so3::SvLinkSource*)
so3::SvBaseLink::SvBaseLink(unsigned short, unsigned long)
so3::SvBaseLinksDialog::Execute()
so3::SvBaseLinksDialog::SetActLink(so3::SvBaseLink*)
so3::SvBaseLinksDialog::SvBaseLinksDialog(Window*, so3::SvLinkManager*, unsigned char)
so3::SvBaseLinksDialog::~SvBaseLinksDialog()
so3::SvLinkManager::InsertDDELink(so3::SvBaseLink*)
so3::SvLinkManager::InsertDDELink(so3::SvBaseLink*, String const&, String const&, String const&)
so3::SvLinkManager::InsertLink(so3::SvBaseLink*, unsigned short, unsigned short, String const*)
so3::SvLinkManager::InsertServer(so3::SvLinkSource*)
so3::SvLinkManager::RemoveServer(so3::SvLinkSource*)
so3::SvLinkManager::SvLinkManager()
so3::SvLinkManager::UpdateAllLinks(unsigned char, unsigned char, unsigned char, Window*)
so3::SvLinkSource::Closed()
so3::SvLinkSource::GetUpdateTimeout() const
so3::SvLinkSource::HasDataLinks(so3::SvBaseLink const*) const
so3::SvLinkSource::NotifyDataChanged()
stoc_sec::PermissionCollection::implies(stoc_sec::Permission const&) const
stoc_sec::PermissionCollection::toStrings() const
stoc_smgr::Point2Slash(rtl::OUString const&)
store::OStoreBTreeNodeData::merge(store::OStoreBTreeNodeData const&)
store::OStoreBTreeNodeData::swap(store::OStorePageDescriptor const&)
store::OStoreDirectoryDataBlockV1::LinkTable::LinkTable()
store::OStoreDirectoryDataBlockV1::LinkTable::swap()
store::OStoreDirectoryDataBlockV2::LinkTable::LinkTable()
store::OStoreDirectoryDataBlockV2::LinkTable::swap()
store::OStoreIndirectionPageData::swap(store::OStorePageDescriptor const&)
store_closeDirectory
store_closeStream
store_flushFile
store_flushStream
store_getFileRefererCount
store_getFileSize
store_getStreamSize
store_link
store_rebuildFile
store_rename
store_setStreamSize
store_symlink
strncmpi(char*, char*, unsigned long)
strupr(char*)
svt::ContextMenuHelper::completeAndExecute(Point const&, PopupMenu&)
svt::ContextMenuHelper::create(rtl::OUString const&)
svt::ContextMenuHelper::createAndExecute(Point const&, rtl::OUString const&)
svt::DialogClosedListener::DialogClosedListener(Link const&)
svt::EditCellController::EditCellController(svt::MultiLineTextCell*)
svt::EmbeddedObjectRef::GetMapUnit() const
svt::EmbeddedObjectRef::GetPersistName() const
svt::EmbeddedObjectRef::ObjectIsModified(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&)
svt::EmbeddedObjectRef::TryRunningState()
svt::FileURLBox::FileURLBox(Window*)
svt::FileURLBox::FileURLBox(Window*, ResId const&)
svt::FixedHyperlink::FixedHyperlink(Window*, long)
svt::FrameStatusListener::getFrameInterface() const
svt::FrameStatusListener::getServiceManager() const
svt::FrameStatusListener::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
svt::HyperLabel::GetLabel()
svt::HyperLabel::GetLogicWidth()
svt::HyperLabel::GetLogicalPosition()
svt::HyperLabel::HyperLabel(Window*, ResId const&)
svt::HyperLabel::SetHyperLabelPosition(unsigned short, unsigned short)
svt::OFileURLControl::OFileURLControl(Window*)
svt::OGenericUnoDialog::getImplementationId()
svt::ORoadmap::ORoadmap(Window*, ResId const&)
svt::ORoadmapHyperLabel::GetClickHdl() const
svt::ORoadmapHyperLabel::ORoadmapHyperLabel(Window*, ResId const&)
svt::ORoadmapHyperLabel::SetLabel(rtl::OUString)
svt::ORoadmapHyperLabel::SetZOrder(svt::ORoadmapHyperLabel*, unsigned short)
svt::ORoadmapIDHyperLabel::ORoadmapIDHyperLabel(Window*, ResId const&)
svt::OWizardMachine::calcRightHelpOffset(unsigned int)
svt::OWizardMachine::getTitleBase() const
svt::OWizardPage::setHeaderText(String const&)
svt::RoadmapWizard::GetRoadmapBitmap() const
svt::RoadmapWizard::GetRoadmapSmartHelpId() const
svt::RoadmapWizard::IsRoadmapInteractive()
svt::RoadmapWizard::SetRoadmapBitmap(BitmapEx const&)
svt::SelectableFixedText::SelectableFixedText(Window*, long)
svt::SetDialogHelpId(com::sun::star::uno::Reference<com::sun::star::ui::dialogs::XFolderPicker>, int)
svt::StatusbarController::getFrameInterface() const
svt::StatusbarController::getLayoutManager() const
svt::StatusbarController::getServiceManager() const
svt::StatusbarController::isBound() const
svt::StatusbarController::removeStatusListener(rtl::OUString const&)
svt::StatusbarController::unbindListener()
svt::StatusbarController::updateStatus()
svt::StatusbarController::updateStatus(rtl::OUString)
svt::TemplateContent::TemplateContent()
svt::TemplateFolderCacheImpl::initTemplDirs(_STL::vector<String, _STL::allocator<String> >&)
svt::ToolboxController::removeStatusListener(rtl::OUString const&)
svt::WizardHeader::WizardHeader(Window*, ResId const&)
svt::WizardHeader::getHeaderBitmap() const
svt::WizardHeader::getHeaderText() const
svtools::AsynchronLink::ForcePendingCall()
svtools::EditableExtendedColorConfig::GetColorValue(rtl::OUString const&, rtl::OUString const&) const
svtools::EditableExtendedColorConfig::GetComponentDisplayName(rtl::OUString const&) const
svtools::EditableExtendedColorConfig::GetCurrentSchemeName() const
svtools::EditableExtendedColorConfig::GetSchemeNames() const
svtools::ODocumentInfoPreview::InsertEntry(String const&, String const&)
svtools::ToolTipListBox::ToolTipListBox(Window*, ResId const&)
svtools::ToolTipListBox::ToolTipListBox(Window*, long)
svtools::ToolTipMultiListBox::ToolTipMultiListBox(Window*, long)
svx::ControllerFeatures::ControllerFeatures(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, com::sun::star::uno::Reference<com::sun::star::form::XForm> const&, svx::IControllerFeatureInvalidation*)
svx::CreateFrameBoxConnection(unsigned short, unsigned short, svx::FrameSelector&, svx::FrameBorderType, int)
svx::DbRegistrationOptionsPage::getFileLocation(String const&)
svx::DialControl::DialControl(Window*, Size const&, Font const&, long)
svx::DialControl::DialControl(Window*, Size const&, long)
svx::DialControl::GetLinkedField() const
svx::DialControl::GetModifyHdl() const
svx::DialControl::SetModifyHdl(Link const&)
svx::DocRecovery::PluginProgress::getPlugWindow()
svx::DocRecovery::RecoveryDialog::impl_refreshDocList()
svx::ExtrusionDepthWindow::StartSelection()
svx::ExtrusionDirectionWindow::FillValueSet()
svx::ExtrusionLightingWindow::StartSelection()
svx::ExtrusionSurfaceWindow::StartSelection()
svx::FeatureSlotTranslation::getControllerFeatureURLForSlotId(int)
svx::FeatureSlotTranslation::isFeatureURL(rtl::OUString const&)
svx::FontWorkAlignmentWindow::StartSelection()
svx::FontWorkCharacterSpacingWindow::StartSelection()
svx::FontWorkGalleryDialog::changeText(SdrTextObj*)
svx::FrameBorder::MergeClickAreaToPolyPolygon(PolyPolygon&) const
svx::FrameDirectionListBox::FrameDirectionListBox(Window*, long)
svx::FrameSelector::GetSelectHdl() const
svx::HangulHanjaConversionDialog::GetByCharacter() const
svx::HangulHanjaConversionDialog::SetOptionsHdl(Link const&)
svx::MSCodec_Xor95::GetHash(unsigned char const*, unsigned long)
svx::NamespaceMap_createInstance(unsigned short*, SfxItemPool*, SfxItemPool*)
svx::OComponentTransferable::extractComponentDescriptor(TransferableDataHelper const&, unsigned char, rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::ucb::XContent>&)
svx::OSingleFeatureDispatcher::dispose()
svx::OXFormsTransferable::getDescriptorFormatId()
svx::OrientationHelper::OrientationHelper(Window*, svx::DialControl&, CheckBox&)
svx::SvxShowCharSetItem::~SvxShowCharSetItem()
svx::ToolboxButtonColorUpdater::DrawChar(VirtualDevice&, Color const&)
svx::WrapField::WrapField(Window*, long)
svx::frame::Array::Array(unsigned long, unsigned long)
svx::frame::Array::Clear()
svx::frame::Array::DrawCell(OutputDevice&, unsigned long, unsigned long, Color const*) const
svx::frame::Array::GetColFromIndex(unsigned long) const
svx::frame::Array::GetColWidth(unsigned long) const
svx::frame::Array::GetMergedSize(unsigned long&, unsigned long&, unsigned long, unsigned long) const
svx::frame::Array::GetRowFromIndex(unsigned long) const
svx::frame::Array::GetRowHeight(unsigned long) const
svx::frame::Array::GetUseDiagDoubleClipping() const
svx::frame::Array::IsInClipRange(unsigned long, unsigned long) const
svx::frame::Array::IsMergedOrigin(unsigned long, unsigned long) const
svx::frame::Array::IsMergedOverlapped(unsigned long, unsigned long) const
svx::frame::Array::IsMergedOverlappedBottom(unsigned long, unsigned long) const
svx::frame::Array::IsMergedOverlappedTop(unsigned long, unsigned long) const
svx::frame::Array::MirrorSelfY(bool, bool)
svx::frame::Array::RemoveClipRange()
svx::frame::Array::RemoveMergedRange(unsigned long, unsigned long)
svx::frame::ArrayImpl::GetMergedOriginCellAcc(unsigned long, unsigned long)
svx::frame::Style::Scale(double, unsigned short) const
svxform::DataNavigator::Update(FmFormShell*)
svxform::DataNavigatorManager::GetChildWindowId()
svxform::FmFilterNavigator::Clear()
svxform::FmFilterNavigatorWinMgr::GetChildWindowId()
svxform::FmSearchParams::setIgnoreWidthCJK(unsigned char)
svxform::NavigatorFrameManager::GetChildWindowId()
svxform::NavigatorTree::IsDeleteAllowed()
svxform::NavigatorTreeModel::CheckEntry(FmEntryData*)
svxform::NavigatorTreeModel::GetSdrObj(FmControlData*)
svxform::NavigatorTreeModel::IsNameAlreadyDefined(rtl::OUString const&, FmFormData*)
svxform::OStaticDataAccessTools::canDelete(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&) const
svxform::OStaticDataAccessTools::prependContextInfo(com::sun::star::sdbc::SQLException&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, rtl::OUString const&) const
svxform::OSystemParseContext::getNumDecimalSep() const
svxform::OSystemParseContext::getNumThousandSep() const
svxform::SvLBoxEntrySortedArray::DeleteAndDestroy(unsigned short, unsigned short)
svxform::SvLBoxEntrySortedArray::Insert(SvLBoxEntry* const&, unsigned short&)
svxform::SvLBoxEntrySortedArray::Insert(SvLBoxEntry* const*, unsigned short)
svxform::SvLBoxEntrySortedArray::Insert(svxform::SvLBoxEntrySortedArray const*, unsigned short, unsigned short)
svxform::SvLBoxEntrySortedArray::Remove(SvLBoxEntry* const&, unsigned short)
svxform::isModelShapeMarked(FmEntryData*, _STL::map<com::sun::star::uno::Reference<com::sun::star::uno::XInterface>, SdrObject*, comphelper::OInterfaceCompare<com::sun::star::uno::XInterface>, _STL::allocator<_STL::pair<com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const, SdrObject*> > > const&, SdrMarkView*)
svxform::lcl_MethodString::get()
svxform::lcl_ReplaceString::get()
sw::util::AuthorInfos::Insert(sw::util::AuthorInfo* const&, unsigned short&)
sw::util::AuthorInfos::Insert(sw::util::AuthorInfo* const*, unsigned short)
sw::util::AuthorInfos::Insert(sw::util::AuthorInfos const*, unsigned short, unsigned short)
sw::util::AuthorInfos::Remove(sw::util::AuthorInfo* const&, unsigned short)
sw::util::AuthorInfos::Remove(unsigned short, unsigned short)
swf::PageInfo::addShape(swf::ShapeInfo*)
swf::Tag::addI16(short)
swf::Tag::addI32(int)
swf::Writer::getWhiteBackgroundShapeId()
swf::Writer::play()
swf::Writer::setBackgroundColor(Color&)
t_print(char const*, ...)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::TestDataElements const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::TestEnum const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XBridgeTest const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XBridgeTest2 const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XBridgeTestBase const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XCurrentContextChecker const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMulti const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMultiBase1 const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMultiBase2 const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMultiBase3 const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMultiBase3a const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMultiBase4 const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMultiBase5 const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMultiBase6 const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XMultiBase7 const*)
test::testtools::bridgetest::cppu_detail_getUnoType(test::testtools::bridgetest::XRecursiveCall const*)
textconversiondlgs::DictionaryEntry::DictionaryEntry()
transex::File::File(rtl::OUString)
treeview::TVRead::TVRead()
typelib_setCacheSize
typelib_static_array_type_init
typelib_static_compound_type_init
typelib_static_interface_type_init
typelib_static_union_type_init
typelib_typedescription_newArray
typelib_typedescriptionreference_newByAsciiName
ucbhelper::CommandEnvironmentProxy::CommandEnvironmentProxy(com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
ucbhelper::Content::Content(com::sun::star::uno::Reference<com::sun::star::ucb::XContentIdentifier> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
ucbhelper::Content::abortCommand()
ucbhelper::Content::create(com::sun::star::uno::Reference<com::sun::star::ucb::XContent> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, ucbhelper::Content&)
ucbhelper::Content::create(com::sun::star::uno::Reference<com::sun::star::ucb::XContentIdentifier> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, ucbhelper::Content&)
ucbhelper::Content::createCursor(com::sun::star::uno::Sequence<int> const&, ucbhelper::ResultSetInclude)
ucbhelper::Content::createSortedCursor(com::sun::star::uno::Sequence<int> const&, com::sun::star::uno::Sequence<com::sun::star::ucb::NumberedSortingInfo> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XAnyCompareFactory>, ucbhelper::ResultSetInclude)
ucbhelper::Content::createSortedDynamicCursor(com::sun::star::uno::Sequence<int> const&, com::sun::star::uno::Sequence<com::sun::star::ucb::NumberedSortingInfo> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XAnyCompareFactory>, ucbhelper::ResultSetInclude)
ucbhelper::Content::createSortedDynamicCursor(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::ucb::NumberedSortingInfo> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XAnyCompareFactory>, ucbhelper::ResultSetInclude)
ucbhelper::Content::executeCommand(int, com::sun::star::uno::Any const&)
ucbhelper::Content::getPropertyValue(int)
ucbhelper::Content::insertNewContent(rtl::OUString const&, com::sun::star::uno::Sequence<int> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, ucbhelper::Content&)
ucbhelper::Content::setCommandEnvironment(com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
ucbhelper::Content::setPropertyValue(int, com::sun::star::uno::Any const&)
ucbhelper::ContentBroker::initialize(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, _STL::vector<ucbhelper::ContentProviderData, _STL::allocator<ucbhelper::ContentProviderData> > const&)
ucbhelper::ContentImplHelper::notifyCommandInfoChange(com::sun::star::ucb::CommandInfoChangeEvent const&) const
ucbhelper::PropertyValueSet::getLength() const
ucbhelper::ResultSetImplHelper::ResultSetImplHelper(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
ucbhelper::handleInteractionRequest(rtl::Reference<ucbhelper::SimpleAuthenticationRequest> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, bool)
ucbhelper::handleInteractionRequest(rtl::Reference<ucbhelper::SimpleInteractionRequest> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, bool)
ucbhelper::unconfigureUcb(com::sun::star::uno::Reference<com::sun::star::ucb::XContentProviderManager> const&, _STL::vector<ucbhelper::ContentProviderRegistrationInfo, _STL::allocator<ucbhelper::ContentProviderRegistrationInfo> > const&)
ulaw2alaw(unsigned char)
unicode::getCharType(unsigned short)
unicode::isBase(unsigned short)
unicode::isPunctuation(unsigned short)
unicode::isTitle(unsigned short)
unicode::isUnicodeScriptType(unsigned short, short)
uno_Environment_enter
uno_copyData
uno_dumpEnvironmentByName
uno_equalData
uno_ext_getMapping
uno_initEnvironment
uno_registerMappingCallback
uno_revokeMappingCallback
uno_sequence_assign
unographic::GraphicDescriptor::isValid() const
upperCase(_STL::basic_string<char, _STL::char_traits<char>, _STL::allocator<char> > const&)
utl::AccessibleStateSetHelper::Compare(utl::AccessibleStateSetHelper const&, utl::AccessibleStateSetHelper&, utl::AccessibleStateSetHelper&)
utl::AtomClient::AtomClient(com::sun::star::uno::Reference<com::sun::star::util::XAtomServer> const&)
utl::AtomClient::getAtom(int, rtl::OUString const&, unsigned char)
utl::AtomClient::getString(int, int)
utl::AtomClient::updateAtomClasses(com::sun::star::uno::Sequence<int> const&)
utl::AtomClient::~AtomClient()
utl::AtomServer::AtomServer()
utl::Bootstrap::checkBootstrapStatus(rtl::OUString&)
utl::Bootstrap::getAllUsersValue(rtl::OUString const&)
utl::Bootstrap::locateSharedData(rtl::OUString&)
utl::ConfigItem::ConfigItem(utl::ConfigManager&, rtl::OUString)
utl::ConfigItem::LockTree()
utl::ConfigItem::UnlockTree()
utl::ConfigManager::ConfigManager(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory>)
utl::ConfigManager::RemoveConfigManager()
utl::MultiAtomProvider::insertAtomClass(int)
utl::OConfigurationNode::appendNode(rtl::OUString const&, utl::OConfigurationNode const&) const
utl::OConfigurationNode::cloneAsRoot() const
utl::OConfigurationNode::hasByHierarchicalName(rtl::OUString const&) const
utl::OConfigurationValueContainer::OConfigurationValueContainer(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, osl::Mutex&, rtl::OUString const&, unsigned short, int)
utl::OConfigurationValueContainer::getServiceFactory() const
utl::OConfigurationValueContainer::registerNullValueExchangeLocation(char const*, com::sun::star::uno::Any*)
utl::PropertySetHelper::PropertySetHelper(utl::PropertySetInfo*)
utl::PropertySetInfo::PropertySetInfo()
utl::PropertySetInfo::add(utl::PropertyMapEntry*)
utl::PropertySetInfo::remove(rtl::OUString const&)
utl::TempFile::GetTempNameBaseDirectory()
utl::TransliterationWrapper::compareSubstring(String const&, int, int, String const&, int, int) const
utl::TransliterationWrapper::loadModuleByImplName(String const&, unsigned short)
utl::TransliterationWrapper::transliterate(String const&, unsigned short, unsigned short, com::sun::star::uno::Sequence<int>*) const
utl::UCBContentHelper::CanMakeFolder(String const&)
utl::UCBContentHelper::CopyTo(String const&, String const&)
utl::UCBContentHelper::FindInPath(String const&, String const&, String&, char, unsigned char)
utl::UCBContentHelper::GetResultSet(String const&)
utl::UCBContentHelper::HasParentFolder(String const&)
utl::UCBContentHelper::IsYounger(String const&, String const&)
utl::UCBContentHelper::MoveTo(String const&, String const&, int)
utl::UcbLockBytes::Cancel()
utl::UcbLockBytes::CreateLockBytes(com::sun::star::uno::Reference<com::sun::star::ucb::XContent> const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, com::sun::star::uno::Reference<com::sun::star::task::XInteractionHandler> const&, utl::UcbLockBytesHandler*)
utl::UcbLockBytes::getStream()
utl::getURLSeparator()
utl::typeConvert(Time const&, com::sun::star::util::Time&)
utl::typeConvert(com::sun::star::util::Time const&, Time&)
vcl::I18NStatus::addChoice(String const&, void*)
vcl::I18NStatus::clearChoices()
vcl::I18NStatus::getStatusText() const
vcl::I18NStatus::toTop() const
vcl::I18nHelper::GetDate(Date const&) const
vcl::I18nHelper::getLocale() const
vcl::PDFExtOutDevData::GetFormsFormat() const
vcl::PDFWriter::DrawBitmap(Point const&, Bitmap const&)
vcl::PDFWriter::DrawBitmap(Point const&, Size const&, Point const&, Size const&, Bitmap const&)
vcl::PDFWriter::DrawBitmapEx(Point const&, BitmapEx const&)
vcl::PDFWriter::DrawBitmapEx(Point const&, Size const&, Point const&, Size const&, BitmapEx const&)
vcl::PDFWriter::DrawGradient(PolyPolygon const&, Gradient const&)
vcl::PDFWriter::DrawGradient(Rectangle const&, Gradient const&)
vcl::PDFWriter::DrawMask(Point const&, Bitmap const&, Color const&)
vcl::PDFWriter::DrawMask(Point const&, Size const&, Bitmap const&, Color const&)
vcl::PDFWriter::DrawMask(Point const&, Size const&, Point const&, Size const&, Bitmap const&, Color const&)
vcl::PDFWriter::DrawPixel(Polygon const&, Color const*)
vcl::PDFWriter::EndTransparencyGroup(Rectangle const&, Bitmap const&)
vcl::PDFWriter::GetCurrentStructureElement()
vcl::PDFWriter::GetDocInfo() const
vcl::PDFWriter::GetVersion() const
vcl::PDFWriter::SetAntialiasing(unsigned short)
vcl::PDFWriter::SetMapMode()
vcl::PDFWriterImpl::initPadString()
vcl::PNGReaderImpl::SkipRemainingChunks()
vcl::PNGWriterImpl::ImplCloseChunk()
vcl::ThreadExecutor::ThreadExecutor()
vcl::ThreadExecutor::execute()
vcl::unotools::b2IPointFromPoint(Point const&)
vcl::unotools::b2IRectangleFromRectangle(Rectangle const&)
vcl::unotools::b2ISizeFromSize(Size const&)
vcl::unotools::integerPoint2DFromPoint(Point const&)
vcl::unotools::integerRectangle2DFromRectangle(Rectangle const&)
vcl::unotools::point2DFromPoint(Point const&)
vcl::unotools::polyPolygonFromBezier2DSequenceSequence(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::geometry::RealBezierSegment2D> > const&)
vcl::unotools::polyPolygonFromPoint2DSequenceSequence(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::geometry::RealPoint2D> > const&)
vcl::unotools::polygonFromBezier2DSequence(com::sun::star::uno::Sequence<com::sun::star::geometry::RealBezierSegment2D> const&)
vcl::unotools::rectangle2DFromRectangle(Rectangle const&)
vcl::unotools::rectangleFromRealRectangle2D(com::sun::star::geometry::RealRectangle2D const&)
vcl::unotools::sizeFromB2ISize(basegfx::B2IVector const&)
vcl_sal::AudioConverter::createG721ToULawConverter()
vcl_sal::AudioConverter::createINT8ToUINT16Converter()
vcl_sal::AudioConverter::createSwapINT16Converter()
vcl_sal::RPTPSound::getMaxId()
vclcanvas::BitmapBackBuffer::getVirDev()
vclcanvas::BitmapBackBuffer::getVirDev() const
virtual thunk to cppcanvas::Bitmap::~Bitmap()
virtual thunk to cppcanvas::BitmapCanvas::~BitmapCanvas()
virtual thunk to cppcanvas::CustomSprite::~CustomSprite()
virtual thunk to cppcanvas::PolyPolygon::~PolyPolygon()
virtual thunk to cppcanvas::Renderer::~Renderer()
virtual thunk to cppcanvas::Text::~Text()
virtual thunk to cppcanvas::internal::ImplCustomSprite::getContentCanvas() const
virtual thunk to cppcanvas::internal::ImplSpriteCanvas::createCustomSprite(basegfx::B2DVector const&) const
virtual thunk to cppcanvas::internal::ImplSpriteCanvas::getUNOSpriteCanvas() const
virtual thunk to cppcanvas::internal::ImplSpriteCanvas::updateScreen(bool) const
virtual thunk to sd::toolpanel::SimpleLayoutWrapper::GetPreferredHeight(int)
virtual thunk to sd::toolpanel::SimpleLayoutWrapper::GetPreferredSize()
virtual thunk to sd::toolpanel::SimpleLayoutWrapper::GetPreferredWidth(int)
virtual thunk to sd::toolpanel::SimpleLayoutWrapper::GetWindow()
virtual thunk to sd::toolpanel::SimpleLayoutWrapper::IsResizable()
virtual thunk to sd::toolpanel::SimpleLayoutWrapper::~SimpleLayoutWrapper()
virtual thunk to vos::OTimer::getClassInfo() const
vos::OAcceptorSocket::acceptConnection(vos::OStreamSocket&, vos::OSocketAddr&)
vos::OClassInfo::createObject(vos::OCreateParam const&) const
vos::OClassInfo::getClassInfo(char const*)
vos::ODatagramSocket::ODatagramSocket(vos::ISocketTypes::TAddrFamily, vos::ISocketTypes::TProtocol, vos::ISocketTypes::TSocketType)
vos::ODatagramSocket::recvFrom(void*, unsigned int, vos::OSocketAddr*, vos::ISocketTypes::TSocketMsgFlag)
vos::ODatagramSocket::sendTo(vos::OSocketAddr const&, void const*, unsigned int, vos::ISocketTypes::TSocketMsgFlag)
vos::OEnvironment::OEnvironment(int, rtl::OUString const*, ...)
vos::OEnvironment::OEnvironment(rtl::OUString const*, int)
vos::OExtCommandLineImpl::~OExtCommandLineImpl()
vos::OInetSocketAddr::OInetSocketAddr(rtl::OUString const&, int)
vos::OInetSocketAddr::OInetSocketAddr(vos::OSocketAddr const&)
vos::OInetSocketAddr::getServicePort(rtl::OUString const&, rtl::OUString const&)
vos::OIpxSocketAddr::OIpxSocketAddr()
vos::OIpxSocketAddr::OIpxSocketAddr(oslSocketAddrImpl*)
vos::OIpxSocketAddr::OIpxSocketAddr(rtl::OUString const&, rtl::OUString const&, unsigned int)
vos::OIpxSocketAddr::OIpxSocketAddr(vos::OSocketAddr const&)
vos::OIpxSocketAddr::getAddressString(rtl::OUString&) const
vos::OIpxSocketAddr::getNetNumber(unsigned char (&) [4]) const
vos::OIpxSocketAddr::getNodeNumber(unsigned char (&) [6]) const
vos::OIpxSocketAddr::getSocketNumber() const
vos::OModule::OModule()
vos::OModule::OModule(rtl::OUString const&, int)
vos::OModule::getSymbol(rtl::OUString const&)
vos::OModule::isLoaded()
vos::OObject::OObject(vos::OCreateParam const&)
vos::OObject::isKindOf(vos::OClassInfo const&) const
vos::OPipe::OPipe(rtl::OUString const&, vos::OPipe::TPipeOption)
vos::OPipe::create(rtl::OUString const&, vos::OPipe::TPipeOption)
vos::OProcess::execute(vos::OProcess::TProcessOption, vos::OSecurity const&, vos::OArgumentList const&, vos::OEnvironment const&)
vos::OProcess::getCurrentInfo(vos::OProcess::TProcessData, vos::OProcess::TProcessInfo*)
vos::OProcess::getInfo(vos::OProcess::TProcessData, vos::OProcess::TProcessInfo*) const
vos::OProcess::getProcess(unsigned int)
vos::OProcess::join()
vos::OProcess::terminate()
vos::OSecurity::getConfigDir(rtl::OUString&) const
vos::OSecurity::getUserName(rtl::OUString&) const
vos::OSecurity::isAdministrator() const
vos::OSecurity::logonUser(rtl::OUString const&, rtl::OUString const&)
vos::OSecurity::logonUser(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
vos::OSocket::clearError() const
vos::OSocket::create(vos::ISocketTypes::TSocketType, vos::ISocketTypes::TAddrFamily, vos::ISocketTypes::TProtocol)
vos::OSocket::enableNonBlockingMode(unsigned char)
vos::OSocket::getError() const
vos::OSocket::getError(rtl::OUString&) const
vos::OSocket::getLocalPort() const
vos::OSocket::getPeerPort() const
vos::OSocket::getType() const
vos::OSocket::isExceptionPending(TimeValue const*) const
vos::OSocket::isNonBlockingMode() const
vos::OSocket::setBroadcast(int) const
vos::OSocket::setDebug(int) const
vos::OSocket::setDontRoute(int) const
vos::OSocket::setKeepAlive(int) const
vos::OSocket::setLinger(int) const
vos::OSocket::setOobinline(int) const
vos::OSocket::setRecvBufSize(int) const
vos::OSocket::setSendBufSize(int) const
vos::OStream::OStream(vos::IPositionableStream&)
vos::OStream::append(void*, unsigned int)
vos::OStream::read(int, void*, unsigned int) const
vos::OStream::write(int, void const*, unsigned int)
vos::OStreamPipe::OStreamPipe(oslPipeImpl*)
vos::OStreamSocket::OStreamSocket(oslSocketImpl*)
vos::OStreamSocket::OStreamSocket(vos::OSocket const&)
vos::OStreamSocket::send(void const*, unsigned int, vos::ISocketTypes::TSocketMsgFlag)
vos::OThread::awake()
vos::OThread::getIdentifier() const
vos::OThread::getPriority()
vos::OThread::suspend()
vos::OThread::wait(TimeValue const&)
vos::OThreadData::OThreadData(void (*)(void*))
vos::OThreadData::getData()
vos::OThreadData::setData(void*)
vos::OTimer::addTime(vos::TTimeValue const&)
vos::OTimer::setRemainingTime(vos::TTimeValue const&, vos::TTimeValue const&)
wait_for(char const*)
webdav_ucp::Content::getProperties(com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, _STL::hash_set<com::sun::star::beans::Property, webdav_ucp::hashPropertyName, webdav_ucp::equalPropertyName, _STL::allocator<com::sun::star::beans::Property> >&)
webdav_ucp::ContentProperties::getMappableHTTPHeaders(_STL::vector<rtl::OUString, _STL::allocator<rtl::OUString> >&)
webdav_ucp::DAVResourceAccess::LOCK(com::sun::star::ucb::Lock const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
webdav_ucp::DAVResourceAccess::UNLOCK(com::sun::star::ucb::Lock const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
webdav_ucp::NeonUri::GetPathDirName() const
workBookMacroExist(SfxObjectShell*, String const&)
writerfilter::doctoktest::AnalyzeService_supportsService(rtl::OUString const&)
writerfilter::doctoktest::ScannerTestService_supportsService(rtl::OUString const&)
writerfilter::odsl::ODSLReader_supportsService(rtl::OUString const&)
writerfilter::ooxmltest::ScannerFastTestService_supportsService(rtl::OUString const&)
writerfilter::ooxmltest::ScannerTestService_supportsService(rtl::OUString const&)
writerfilter::rtftok::RTFSLParser_supportsService(rtl::OUString const&)
writerfilter::rtftok::ScannerTestService_supportsService(rtl::OUString const&)
writerfilter::rtftok::XMLScanner_supportsService(rtl::OUString const&)
writerfilter::xxml::FileXXmlReader_supportsService(rtl::OUString const&)
writerfilter::xxml::StorageXXmlReader_supportsService(rtl::OUString const&)
writerfilter::xxml::XXmlReaderDirectImpl::startElement(char const*, char const**)
x11::DropTarget::dropActionChanged(com::sun::star::datatransfer::dnd::DropTargetDragEvent const&)
xforms::(anonymous namespace)::lcl_throwIllegalArgumentException(char const*)
xforms::Convert::~Convert()
xforms::MIP::hasInfo() const
xforms::MIP::set(xforms::MIP const&)
xforms::Submission::releaseModel()
xforms_currentFunction
xml_parser::set_encoding(char const*)
xml_parser::xml_parser(char const*, char)
xmlname_encode(rtl::OUString const&)
xmloff::OFormLayerXMLExport::exportControlNumberStyles()
xmloff::OFormLayerXMLExport::getStylePropertyMapper()
xmloff::OFormLayerXMLExport::initialize()
xmloff::OFormLayerXMLImport::getStylePropertyMapper() const
xmloff::OFormLayerXMLImport::seekPage(com::sun::star::uno::Reference<com::sun::star::drawing::XDrawPage> const&)
xmloff::chart::ColorPropertySet::getColor()
xmloff::chart::ColorPropertySet::setColor(int)
xmlscript_get
xmlsearch::db::Block::setInteger(int, int)
xmlsearch::db::Block::write(xmlsearch::util::RandomAccessStream*) const
xmlsearch::db::BtreeDict::isLocked(int) const
xmlsearch::db::Schema::Schema(xmlsearch::util::IndexAccessor const&, bool)
xmlsearch::db::Schema::~Schema()
xmlsearch::qe::ContextTables::firstParentWithCode2(int, int, int)
xmlsearch::qe::ContextTables::firstParentWithCode3(int, int, int)
xmlsearch::qe::ContextTables::firstParentWithCode4(int, int, int*)
xmlsearch::qe::ContextTables::firstParentWithCode5(int, int, int*)
xmlsearch::qe::ContextTables::firstParentWithCode7(int, int, int)
xmlsearch::qe::ContextTables::isGoverning(int)
xmlsearch::qe::ContextTables::parentContext(int)
xmlsearch::qe::QueryHitIterator::getPenalty()
xmlstr_to_ous(unsigned char const*)
yyFlexLexer::yyunput(int, char*)
yy_scan_string
yyget_debug
yyget_debug()
yyget_in
yyget_in()
yyget_leng
yyget_leng()
yyget_lineno
yyget_lineno()
yyget_out
yyget_out()
yyget_text
yyget_text()
yylex_destroy
yylex_destroy()
yypush_buffer_state
yypush_buffer_state(yy_buffer_state*)
yyset_debug
yyset_debug(int)
yyset_in
yyset_in(_IO_FILE*)
yyset_lineno
yyset_lineno(int)
yyset_out
yyset_out(_IO_FILE*)
