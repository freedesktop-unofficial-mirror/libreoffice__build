Chasing broken line problem:
	svx/source/svdraw/svdoedge.cxx:
	    + DoPaintObject - draws only to the XOutputDevice
	svx/source/xoutdev/xout.cxx
	    + pure OutputDevice target, no virtual methods.

    + It seems this is rendering it in the presentation too.

    + In fact the broken rendering is in:
	+ svdobj.cxx (ImpDrawLineGeometry)
	    + doing polygon clipping - but not related to libart vs. internal.

    + ImpDrawLineGeometry
	    -> SvtGraphicsStroke ( for metafile )

	    + bug only affects non-transparent lines
	    + bug only affects 0.0 width lines
	    
	    + Geometry pre-prepared by:
		svdobj.cxx (ImpPrepareLineGeometry)

	+ Rendering: 
	    + Exactly the same paths for on-screen & slide-show
	    + seemingly the same lines ...
		+ must be wrapped up in the aLinePolyPolygon setup...

    ImpPrepareLineGeometry:
	-> CreateLinePoly
	    + clobbering bForceOnePixel - not the sol'n.
	    + creates SdrLineGeometry:
		    + just a holding struct for these parameters.
	    + Size is always 0,0 - draft always false.
		+ point count is perfect & unchanged for both rendering modes

ERGO
    + something really, really stupid has to be happening lower down the stack.

	+ we draw _directly_ to the OutputDevice with:
		rXOut.GetOutDev()->DrawPolyLine( rPoly );



*** Hermenutical Key ***

    + We render to a _Meta_ OutputDevice
    + Then we re-render the outputdevice to the canvas.
	+ cppcanvas/source/mtfrender/
    + via.
	+ MetaPolyLineAction
    + new internal::PolyPolyAction()
