Notes on Mono integration

+ Work from cli_ure
    + de-louse prj/build.lst dependencies
	+ check for MCS in config_office/configure.in, util/makefile.pmk
	+ rename csc -> $(CSC) & set it up right.
	    + mcs can't cope with '-o'
		  ** We should switch to -optimize instead. **

    + All(?) the C++ here is managed C++ (CFLAGS contains -clr)

    + source/native/native_bootstrap.cxx:
	+ ::com::sun::star::uno::Reference< foo >
	    + wrapped in a GC thing.
	+ 'to_cli' call ...
	    + source/native/native_share.h
		+ -> uno::Mapping
		+ -> System::Runtime::InteropServices
	+ The mapping implemented somewhere else !?
		+ cppu/inc/mapping.hxx
		+ LXR for 'uno_registerMapping'

+ bridges/source/cli_uno/*
    + the MS managed C++ - UNO bridge
    + cli_bridge.cxx
        uno_initEnvironment, uno_ext_getMapping: see
	http://udk.openoffice.org/cpp/man/cpp_bridges.html

+ Decision
    + should attempt to link to & map specifically to Mono
	+ ie. a new binding bridges/source/mono_uno/*
	+ since we have no 'managed C++' equivalent
	+ ergo, no point in doing slow C->Mono calls that
	  then call more 'standard' .Net calls to do
	  conversions/boxing etc.
	+ Just map as directly to Mono types / layout
	  as possible.

    + Few hours later:
	martink michael_: http://udk.openoffice.org/servlets/ReadMsg?list=dev&msgNo=2942
	michael_ martink: it's a good point to try and re-write the bridge in C# :-)
	michael_ martink: a much better plan in fact,
	michael_ martink: bin my 'go-low-level-native' suggestion I guess;

+ UNO links
    + http://api.openoffice.org/docs/DevelopersGuide/ProfUNO/ProfUNO.htm
        + UNO concepts
    + http://udk.openoffice.org/common/man/bridge.html
        + Bridge
	+ Proxy - client side
	+ Stub - server side
	+ (c) 2001, mentions msvc 4.2, egcs; but RCS id says 2004
    + http://api.openoffice.org/docs/DevelopersGuide/AdvancedUNO/AdvancedUNO.htm
        + "Advanced UNO"
	+ "Implementing UNO Language Bindings"
	+ Milestones for bridge writing:
	    + Unidirectional mapping (call UNO from your language, remote
	       controlling the office)
	    + limited Bidirectional (can implement UNO interfaces, e.g.
	       Listeners)
	    + Bidirectional, with ComponentLoader (can implement UNO components
	      that the Global Service Manager can instantiate)
    + http://udk.openoffice.org/cpp/man/cpp_bridges.html
        + Implementing a C++-UNO-bridge
        + Some overlap with the previous link
