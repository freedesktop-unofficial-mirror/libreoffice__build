Memory shrinkage: to start 2,553,127 bytes
    + types.rdb ...
    + reduce bogus usage of services.rdb

** Real (allocated) memory usage is tiny 
    + code size is large & painful

** Looking at eg. libsvx:
Section size breakdown
 code            5207kb - 54%
 linking         1533kb - 16%
 eh frame?        860kb -  9%
 data             624kb - 6.5%
 data relocs      553kb - 5.8%
 debug            516kb - 5.4%
 exceptions       246kb - 2.6%
 versioning        39kb - 0.41%
 comment           27kb - 0.28%

 Total: 9840975 bytes
> ls -l libsvx680li.so
-rwxr-xr-x  1 michael users 14303406 2005-10-26 16:28 libsvx680li.so

    Why is there a 4MB difference between the some of the section
sizes & the overall size ?


    + memprof shows only ~2.5Mb of 'real' memory usage ...
	+ quick look at shrinking it ...
	+ desktop::Desktop::OpenSplashScreen() 
	    + IntroWindow::IntroWindow - 145k - all gtk+ related

	+ framework::AutoRecovery::implts_readConfig - 130k
	    + filter::config::FilterCache::load ...
		+ filter::config::FilterCache::impl_loadSet
			+ CacheItem hash table ... stl foo ... [124k]

		+ filter/source/config/filtercache.cxx (impl_loadSet):
			(*pCache)[pItems[i]] = ...
			[ hash table ? ]
				+ big old hash table ... [ lots of entries ? ]

