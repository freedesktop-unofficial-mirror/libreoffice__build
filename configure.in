AC_INIT(bin/build-ooo)
AC_PREREQ(2.12)
AC_PREFIX_DEFAULT(/usr)
AM_INIT_AUTOMAKE(ooo-build, 1.1.35)

AC_WITH(tag,
[
	--with-tag:	define the tag to use, defaults to the latest
			release; eg. --with-tag=OOO_1_0_3
],,)

AC_WITH(srcdir,
[
	--with-srcdir:	define the directory containing the rest of the
			source code we need to build.
],,)

AC_WITH(system-gcc,
[
	--with-system-gcc: use the systems gcc / binutils instead of
			   building our own.
],,)

AC_WITH(distro,
[
	--with-distro=	build with a specific distributions patch-set
			values are: [Ximian], Debian, ...
],,)

AC_ARG_ENABLE(devel,
[
	--enable-devel:	build the latest bleeding edge untested bleeding
			edge, un-buildable set of patches.
],,)

AM_MAINTAINER_MODE

AC_PATH_PROG(PKG_CONFIG, pkg-config)
if test "!" -x "$PKG_CONFIG" ; then
   AC_MSG_ERROR([
*** You need the latest pkg-config.
*** Get the latest version of pkg-config from
*** <http://www.freedesktop.org/software/pkgconfig/>.])
fi
AC_SUBST(PKG_CONFIG)

PKG_CHECK_MODULES( FOO, 
		   gtk+-2.0 libxml-2.0 gnome-vfs-2.0 \
		   libgnomecups-1.0 >= 0.1.0 fontconfig >= 1.0.1 )

if test "z$enable_devel" = "z"; then
   latest_flags=
else
   latest_flags=--devel
fi

AC_MSG_CHECKING( for tag )
if test "z$with_tag" = "z"; then
   with_tag=`$srcdir/bin/latest-patchset $srcdir/patches $latest_flags`;	
   if test "z$with_tag" = "z"; then
      AC_MSG_ERROR( Can't locate latest patchset )
   fi
fi

if test -f $srcdir/patches/$with_tag/apply; then
   AC_MSG_RESULT( found $with_tag )
else
   AC_MSG_ERROR( Can't locate patch set for: $with_tag )
fi
TAG=$with_tag
AC_SUBST(TAG)

warn_use_download=
AC_MSG_CHECKING( for tag's source )
if test "z$with_src" = "z"; then
   ext_srcdir="$srcdir/src"
   if test -f "$ext_srcdir/$TAG.tar.bz2"; then
      AC_MSG_RESULT( found '$ext_srcdir' )
   else
      warn_use_download="	./download $TAG
"
      AC_MSG_WARN([

     Missing source $ext_srcdir/$TAG.tar.bz2,
     please use the 'download' script to ensure
     the required source is up to date and in-place.

	download [[optional-tag]]

   ])
   fi
elif test "${with_src:0:1}" != "/"; then
   AC_MSG_ERROR( --with-src= must be an absolute path );
else
   ext_srcdir=$with_src
   if test -d "$with_src/$TAG"; then
      AC_MSG_RESULT( found '$with_src/$TAG' )
   else
      AC_MSG_WARN([
     Missing pristine unpacked source in $with_src/$TAG
     ]);
   fi
fi

WITH_SRC=$with_src
AC_SUBST(WITH_SRC)

dnl don't check for mozilla-xpcom mozilla-nspr

if test ${TAG:0:3} != 'OOO'; then
   PKG_CHECK_MODULES( FOO, libstartup-notification-1.0 \
		      libart-2.0 >= 2.3.13 )
fi

if test "z$with_distro" = "z"; then
   with_distro="Ximian";
fi
DISTRO=$with_distro
AC_SUBST(DISTRO)

dnl
dnl Debian specific hard-coded defaults.
dnl
if test "z$with_distro" = "Debian"; then
   if test "z$with_system_gcc" = "z"; then
      with_system_gcc=true;
   fi
fi

AC_CHECK_HEADER(png.h,,AC_MSG_ERROR(install png-devel))
AC_CHECK_HEADER(security/pam_appl.h,,AC_MSG_ERROR(install pam-devel))

AC_CHECK_PROG(IMG_MAGIC, convert, yes)
if ! test "z$IMG_MAGIC" = "zyes"; then
   AC_MSG_ERROR( ImageMagick must be installed )
fi

AC_CHECK_PROG(ACONF, autoconf, yes)
if ! test "z$ACONF" = "zyes"; then
   AC_MSG_ERROR( autoconf must be installed )
fi

AC_CHECK_PROG(FLEX, flex, yes)
if ! test "z$FLEX" = "zyes"; then
   AC_MSG_ERROR( flex must be installed )
fi

AC_CHECK_PROG(BISON, bison, yes)
if ! test "z$BISON" = "zyes"; then
   AC_MSG_ERROR( bison must be installed )
fi

SYSTEM_GCC=true
if test "z$with_system_gcc" = "z"; then
   SYSTEM_GCC=
   with_system_gcc=no
fi
AC_SUBST(SYSTEM_GCC)

AC_MSG_CHECKING([for broken aliases])
if `alias gcc >& /dev/null`; then
   AC_MSG_ERROR( you can't alias your gcc - that's broken );
fi
AC_MSG_RESULT(ok)

dnl
dnl Setup the misc. tweaks we need.
dnl
BASEDIR=`pwd`
TOOLSDIR=$BASEDIR
AC_SUBST(BASEDIR)
AC_SUBST(TOOLSDIR)

if test ${TAG:0:3} = 'OOO'; then
   OOO_VERSION=1.0.3
   OOO_BINSUFFIX=
else
   OOO_VERSION=1.1
   OOO_BINSUFFIX=1.1
fi
AC_SUBST(OOO_VERSION)
AC_SUBST(OOO_BINSUFFIX)

AC_OUTPUT([
Makefile
bin/setup
bin/Makefile
desktop/Makefile
etc/Makefile
patches/Makefile
patches/OOO_1_0_3/Makefile
patches/RC3/Makefile
patches/RC3_030721/Makefile
patches/RC3_030729/Makefile
patches/OOO_1_1_RC3/Makefile
www/Makefile
www/tinder-scripts/Makefile
])

echo "
Building openoffice
	tag:        $TAG
	src:        $ext_srcdir
	distro:     $with_distro
	system gcc: $with_system_gcc

To build run:
$warn_use_download	make
	sudo make install
"
