#!/usr/bin/perl -w

sub usage {
    print STDERR "\ndownload\n";
    print STDERR "Syntax:	download    [<TAG> | --with-system-gcc | --help] \n\n";
    print STDERR "Example:	download --with-system-gcc\n";
    print STDERR "				- downloads only OpenOffice.org source files and not gcc and binutils\n\n";
    print STDERR "Example:	download OOO_1_1_0 --with-system-gcc\n";
    print STDERR "				- downloads specific CVS tag, excluding gcc and binutils\n\n";
    print STDERR "Keys:		<TAG>			- specifies a particular CVS tag to pull sources from\n";
    print STDERR "		--with-system-gcc	- use system gcc and do not download gcc + binutils\n";
    print STDERR "		--help			- print help info\n";
    print STDERR "Default:				- download 'head' CVS tag and gcc + binutils\n";
};

$SRC_URL='http://ooo.ximian.com/packages';

$WGET='/usr/bin/wget';

if (!-d "src") {
    `mkdir -p src`;
}

# Defaults
$support_files = 'all';
$tag = `bin/latest-patchset patches`;

while ($arg = shift @ARGV) {
    if ( $arg eq '--with-system-gcc' ) {
        $support_files = 'none';
    } elsif ( $arg eq '--help' ) {
        &usage and exit(0);
    } else {
        $tag = $arg;
    }
}

print "Downloading files for $tag\n";

-x $WGET || die "Can't find wget - install it and try again\n";

sub webget($$)
{
    my ($src, $dest) = @_;

    print "Get $src -> $dest\n";
    system ("cd $dest ; $WGET $src") != 0 && die "Failed fetch";
}

if ( $support_files eq 'all' ) {
    $files{ 'binutils-2.13.2.1.tar.bz2' } = 'support';
    $files{ 'gcc-3.2.2.tar.bz2' } = 'support';
}

$files{ 'ooo-icons-OOO_1_1-7.tar.gz' } = '';
$files{ "$tag.tar.bz2" } = $tag;

for $a (keys %files) {
    if (-f "src/$a") {
	print "Skipping $a\n";
    } else {
	print "No file src/$a\n";
	webget("$SRC_URL/".$files{$a}."/$a", 'src');
    }
}
print "Done\n";
