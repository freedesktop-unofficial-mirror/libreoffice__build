#ifndef __org_openoffice_vba_XWorkBook_idl__
#define __org_openoffice_vba_XWorkBook_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module org {  module openoffice {  module vba { 

//=============================================================================

/** 
 */
published interface XWorkBook: com::sun::star::uno::XInterface
{

	//WorkBook Properties

	/* Name  - file name of the workbook*/
	[attribute, readonly] string Name;

	/* Path - Path of the workbook file
		Unsaved workbook's Path property is an emptry string ("")
	*/
	[attribute, readonly] string Path;
	
	/*Full path-name of the workbook including the foldername and filename*/
	[attribute] string FullName;

	/*A five digit number of the form ecccc
	where e is excel version number (9 for Excel 2000, 0 for previous versions)
	and cccc is the version number for the excel calculation engine (0000 for versions prior to Excel 2000)

	Tells the version of excel that the workbook was most recently calculated in.

	Relevance of this property in OOo?
	*/
	[attribute, readonly] long CalculationVersion;

	/*True if the WorkBook structure is protected ?*/
	[attribute, readonly] boolean ProtectStructure; 

	/*True if the Window size and position of the workbook is protected ?*/
	[attribute, readonly] boolean ProtectWindows; 
	
	/*Determines if the changes have been made to the workbook since it was last saved
	If the changes have been made, it's False 
	Read/Write property */
	[attribute] boolean Saved; 

	/*VBASigned: True if the specified workbook is digitally signed*/
	[attribute, readonly] boolean VBASigned;


	//Methods  Note: Need to filter/prioritize the relevant methods

	/*Activates the specified OpenWorkBook*/
	void activate();

	/** Closes the specified workbook.
		@param bSaveChanges
			determines whether or not changes are saved if the workbook has been modified.
			Optional, if ommitted, asks the user if he wants to save the changes

		@param aFileName
			Saves the workbook under aFileName

		@param bRouteWorkBook
			True - Sends the workbook to next recipient
			Optional, if ommitted, asks the user if the workbook needs to be sent
	*/
	void close([in] boolean bSaveChanges, [in] string aFileName, [in] boolean bRouteWorkBook);

	/*saves the workbook*/
	void save();	

	/**SaveAs

		@param aFileName
			saves the workbook object to aFileName
			
	*/
	void saveas([in] string aFileName);




	void printout();

	void printpreview();

	void protect();


	//Events -  What to be done for workbookevents like BeforeClose, BeforePrint, Activate, Deactivate, NewSheet etc?

};

//=============================================================================

}; }; };

#endif
