Standard.Invocations.TakesRange ( line 52 )
1. Object variable not set
Range argument ( obviously the object that is sent from calc is not a range )

Standard.Invocations.TakesDate ( line 49 )
2. Inadmissible value or data type mismatch
Date argument ( obviously the object that is sent from calc is not a Date )

Standard.Invocations.TakesRange ( line 52 )
3. Object variable not set
see (1)

Standard.Invocations.TakesRange ( line 52 )
4. Object variable not set
see (1)

Standard.ObjectModel.ObjectIsVolatile ( line 7 )
5. Property or method not found 
Volatile is not implemented 

Standard.Syntax.StmtWith ( line 52 )
6. Object variable not set
couldn't create Selection because api couldn't determine the current document.
see [1] at end of document
 
Standard.FunctionF_I.rtl_filter ( Filter undefined )
7. Sub-procedure or function procedure not defined
Filter function or sub-routine not defined

Standard.FunctionF_I.rtl_formatcurrency ( FormatCurrency undefined )
8. Sub-procedure or function procedure not defined
ditto for FormatCurrency

Standard.FunctionF_I.rtl_formatnumber( FormatNumber undefined )
9. Sub-procedure or function procedure not defined
ditto for FormatNumber

macrostr Standard.FunctionF_I.rtl_formatpercent ( FormatPercent undefined )
10. Sub-procedure or function procedure not defined
ditto for FormatPercent

Standard.FunctionJ_R.rtl_replace ( Replace not defined )
11. Sub-procedure or function procedure not defined
ditto for Replace

Standard.FunctionS_Y.rtl_strconv ( line 36 )
12. Action not supported Invalid procedure call.
StrConv doesn't exist

[1] The api ALWAYS identifies the current document incorrectly because;
    o the vba api uses basic to find thiscomponent ( which is supposed
to be the current document ) the fundemental problem is that
( thiscomponent = "the document loading" )  isn't set up at the time of
the macro is executed. If there is a ThisComponent then it's incorrect
as it refers to the previous "current" document.
        o afaik thiscomponent is normally set when the document is
loaded and when the document is selected. ( so looks like it maybe
possible to do this earlier for the former )
    o in someways the behaviour is consistent for Openoffice.org if you
load the document and there is no document open ( e.g. just the backing
window ) you don't actually get a document view replacing the backing
window until the document is loaded, similarly the
SfxObjectShell::Current() isn't even setup in this pre-loaded stage.
( again if another document is open,  SfxObjectShell::Current() will
refer to that document and not the loading one
    o excel behavior is the api is most certainly available and the
current document on load IS the loading document
